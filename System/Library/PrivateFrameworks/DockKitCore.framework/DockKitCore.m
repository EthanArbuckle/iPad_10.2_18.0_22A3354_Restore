uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B853B1C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void __swiftcall DKUsageMetric.init(appID:camera:duration:firmwareVersion:hardwareVersion:inFramePercent:orientation:primaryLost:searchTime:secondaryLost:startTime:)(DockKitCore::DKUsageMetric *__return_ptr retstr, Swift::String appID, Swift::String camera, Swift::Double duration, Swift::String firmwareVersion, Swift::String hardwareVersion, Swift::Float inFramePercent, Swift::String orientation, Swift::Int primaryLost, Swift::Double searchTime, Swift::Int secondaryLost, Swift::Int startTime)
{
  retstr->appID = appID;
  retstr->camera = camera;
  retstr->duration = duration;
  retstr->firmwareVersion = firmwareVersion;
  retstr->hardwareVersion = hardwareVersion;
  retstr->inFramePercent = inFramePercent;
  retstr->orientation = orientation;
  retstr->primaryLost = primaryLost;
  retstr->searchTime = searchTime;
  retstr->secondaryLost = secondaryLost;
  retstr->startTime = startTime;
}

Swift::Void __swiftcall DKUsageMetric.send()()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  void *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  _QWORD v12[6];
  _OWORD v13[8];

  v1 = v0[5];
  v13[4] = v0[4];
  v13[5] = v1;
  v2 = v0[7];
  v13[6] = v0[6];
  v13[7] = v2;
  v3 = v0[1];
  v13[0] = *v0;
  v13[1] = v3;
  v4 = v0[3];
  v13[2] = v0[2];
  v13[3] = v4;
  v5 = (void *)sub_23A690E04();
  v6 = (_OWORD *)swift_allocObject();
  v7 = v0[5];
  v6[5] = v0[4];
  v6[6] = v7;
  v8 = v0[7];
  v6[7] = v0[6];
  v6[8] = v8;
  v9 = v0[1];
  v6[1] = *v0;
  v6[2] = v9;
  v10 = v0[3];
  v6[3] = v0[2];
  v6[4] = v10;
  v12[4] = sub_23A5B3944;
  v12[5] = v6;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_23A5B394C;
  v12[3] = &block_descriptor;
  v11 = _Block_copy(v12);
  sub_23A5B39C8((uint64_t)v13);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v11);

}

uint64_t sub_23A5B356C()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;

  v0 = sub_23A690E04();
  v1 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v0, 0x4449707061, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = sub_23A690E04();
  v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v3, 0x6172656D6163, 0xE600000000000000, v4);
  swift_bridgeObjectRelease();
  v5 = sub_23A690FC0();
  v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v5, 0x6E6F697461727564, 0xE800000000000000, v6);
  swift_bridgeObjectRelease();
  v7 = sub_23A690E04();
  v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v7, 0x657261776D726966, 0xEF6E6F6973726556, v8);
  swift_bridgeObjectRelease();
  v9 = sub_23A690E04();
  v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v9, 0x6572617764726168, 0xEF6E6F6973726556, v10);
  swift_bridgeObjectRelease();
  v11 = sub_23A690FD8();
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v11, 0x50656D6172466E69, 0xEE00746E65637265, v12);
  swift_bridgeObjectRelease();
  v13 = sub_23A690E04();
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v13, 0x7461746E6569726FLL, 0xEB000000006E6F69, v14);
  swift_bridgeObjectRelease();
  v15 = sub_23A691008();
  v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v15, 0x4C7972616D697270, 0xEB0000000074736FLL, v16);
  swift_bridgeObjectRelease();
  v17 = sub_23A690FC0();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v17, 0x6954686372616573, 0xEA0000000000656DLL, v18);
  swift_bridgeObjectRelease();
  v19 = sub_23A691008();
  v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v19, 0x7261646E6F636573, 0xED000074736F4C79, v20);
  swift_bridgeObjectRelease();
  v21 = sub_23A691008();
  v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v21, 0x6D69547472617473, 0xE900000000000065, v22);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23A5B3900()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A5B3944()
{
  return sub_23A5B356C();
}

id sub_23A5B394C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_23A5B5208();
    v4 = (void *)sub_23A690DB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_23A5B39C8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void __swiftcall DKBTConnectMetric.init(duration:error:reason:)(DockKitCore::DKBTConnectMetric *__return_ptr retstr, Swift::Double duration, Swift::String error, Swift::String reason)
{
  retstr->duration = duration;
  retstr->error = error;
  retstr->reason = reason;
}

Swift::Void __swiftcall DKBTConnectMetric.send()()
{
  uint64_t v0;
  __int128 v1;
  void *v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  _QWORD v6[6];
  _OWORD v7[2];
  uint64_t v8;

  v1 = *(_OWORD *)(v0 + 16);
  v7[0] = *(_OWORD *)v0;
  v7[1] = v1;
  v8 = *(_QWORD *)(v0 + 32);
  v2 = (void *)sub_23A690E04();
  v3 = swift_allocObject();
  v4 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(v0 + 32);
  v6[4] = sub_23A5B3C60;
  v6[5] = v3;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_23A5B394C;
  v6[3] = &block_descriptor_6;
  v5 = _Block_copy(v6);
  sub_23A5B3C68((uint64_t)v7);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);

}

uint64_t sub_23A5B3B2C()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v0 = sub_23A690FC0();
  v1 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v0, 0x6E6F697461727564, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = sub_23A690E04();
  v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v3, 0x726F727265, 0xE500000000000000, v4);
  swift_bridgeObjectRelease();
  v5 = sub_23A690E04();
  v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v5, 0x6E6F73616572, 0xE600000000000000, v6);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23A5B3C34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A5B3C60()
{
  return sub_23A5B3B2C();
}

uint64_t sub_23A5B3C68(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void __swiftcall DKPairingMetric.init(activePairings:duration:error:firmwareVersion:hardwareVersion:)(DockKitCore::DKPairingMetric *__return_ptr retstr, Swift::UInt activePairings, Swift::Double duration, Swift::String error, Swift::String firmwareVersion, Swift::String hardwareVersion)
{
  retstr->activePairings = activePairings;
  retstr->duration = duration;
  retstr->error = error;
  retstr->firmwareVersion = firmwareVersion;
  retstr->hardwareVersion = hardwareVersion;
}

Swift::Void __swiftcall DKPairingMetric.send()()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  void *v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  _QWORD v8[6];
  _OWORD v9[4];

  v1 = v0[1];
  v9[0] = *v0;
  v9[1] = v1;
  v2 = v0[3];
  v9[2] = v0[2];
  v9[3] = v2;
  v3 = (void *)sub_23A690E04();
  v4 = (_OWORD *)swift_allocObject();
  v5 = v0[1];
  v4[1] = *v0;
  v4[2] = v5;
  v6 = v0[3];
  v4[3] = v0[2];
  v4[4] = v6;
  v8[4] = sub_23A5B3F94;
  v8[5] = v4;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_23A5B394C;
  v8[3] = &block_descriptor_12;
  v7 = _Block_copy(v8);
  sub_23A5B3F9C((uint64_t)v9);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);

}

uint64_t sub_23A5B3DA0()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v0 = sub_23A6911C4();
  v1 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v0, 0x6150657669746361, 0xEE0073676E697269, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = sub_23A690FC0();
  v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v3, 0x6E6F697461727564, 0xE800000000000000, v4);
  swift_bridgeObjectRelease();
  v5 = sub_23A690E04();
  v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v5, 0x726F727265, 0xE500000000000000, v6);
  swift_bridgeObjectRelease();
  v7 = sub_23A690E04();
  v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v7, 0x657261776D726966, 0xEF6E6F6973726556, v8);
  swift_bridgeObjectRelease();
  v9 = sub_23A690E04();
  v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v9, 0x6572617764726168, 0xEF6E6F6973726556, v10);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23A5B3F60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A5B3F94()
{
  return sub_23A5B3DA0();
}

uint64_t sub_23A5B3F9C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void __swiftcall DKFirmwareUpdateMetric.init(duration:startPercent:endPercent:fromFirmwareVersion:toFirmwareVersion:hardwareVersion:make:hardwareModel:success:error:)(DockKitCore::DKFirmwareUpdateMetric *__return_ptr retstr, Swift::Double duration, Swift::UInt startPercent, Swift::UInt endPercent, Swift::String fromFirmwareVersion, Swift::String toFirmwareVersion, Swift::String hardwareVersion, Swift::String make, Swift::String hardwareModel, Swift::Bool success, Swift::String error)
{
  retstr->duration = duration;
  retstr->startPercent = startPercent;
  retstr->endPercent = endPercent;
  retstr->fromFirmwareVersion = fromFirmwareVersion;
  retstr->toFirmwareVersion = toFirmwareVersion;
  retstr->hardwareVersion = hardwareVersion;
  retstr->make = make;
  retstr->hardwareModel = hardwareModel;
  retstr->success = success;
  retstr->error = error;
}

Swift::Void __swiftcall DKFirmwareUpdateMetric.send()()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  void *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  _QWORD v12[6];
  _OWORD v13[8];

  v1 = v0[5];
  v13[4] = v0[4];
  v13[5] = v1;
  v2 = v0[7];
  v13[6] = v0[6];
  v13[7] = v2;
  v3 = v0[1];
  v13[0] = *v0;
  v13[1] = v3;
  v4 = v0[3];
  v13[2] = v0[2];
  v13[3] = v4;
  v5 = (void *)sub_23A690E04();
  v6 = (_OWORD *)swift_allocObject();
  v7 = v0[5];
  v6[5] = v0[4];
  v6[6] = v7;
  v8 = v0[7];
  v6[7] = v0[6];
  v6[8] = v8;
  v9 = v0[1];
  v6[1] = *v0;
  v6[2] = v9;
  v10 = v0[3];
  v6[3] = v0[2];
  v6[4] = v10;
  v12[4] = sub_23A5B44A0;
  v12[5] = v6;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_23A5B394C;
  v12[3] = &block_descriptor_18;
  v11 = _Block_copy(v12);
  sub_23A5B44A8((uint64_t)v13);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v11);

}

uint64_t sub_23A5B4128()
{
  uint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  v0 = sub_23A690FC0();
  v1 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v0, 0x6E6F697461727564, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = sub_23A6911C4();
  v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v3, 0x7265507472617473, 0xEC000000746E6563, v4);
  swift_bridgeObjectRelease();
  v5 = sub_23A6911C4();
  v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v5, 0x6563726550646E65, 0xEA0000000000746ELL, v6);
  swift_bridgeObjectRelease();
  v7 = sub_23A690E04();
  v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v7, 0xD000000000000013, 0x800000023A69A870, v8);
  swift_bridgeObjectRelease();
  v9 = sub_23A690E04();
  v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v9, 0xD000000000000011, 0x800000023A69A890, v10);
  swift_bridgeObjectRelease();
  v11 = sub_23A690E04();
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v11, 0x6572617764726168, 0xEF6E6F6973726556, v12);
  swift_bridgeObjectRelease();
  v13 = sub_23A690E04();
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v13, 1701536109, 0xE400000000000000, v14);
  swift_bridgeObjectRelease();
  v15 = sub_23A690E04();
  v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v15, 0x6572617764726168, 0xED00006C65646F4DLL, v16);
  swift_bridgeObjectRelease();
  v17 = sub_23A690F54();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v17, 0x73736563637573, 0xE700000000000000, v18);
  swift_bridgeObjectRelease();
  v19 = sub_23A690E04();
  v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A615E30(v19, 0x726F727265, 0xE500000000000000, v20);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23A5B4454()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A5B44A0()
{
  return sub_23A5B4128();
}

uint64_t sub_23A5B44A8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for DKUsageMetric(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for DKUsageMetric()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DKUsageMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DKUsageMetric(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for DKUsageMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKUsageMetric(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKUsageMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKUsageMetric()
{
  return &type metadata for DKUsageMetric;
}

uint64_t destroy for DKBTConnectMetric()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DKBTConnectMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DKBTConnectMetric(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for DKBTConnectMetric(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKBTConnectMetric(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKBTConnectMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKBTConnectMetric()
{
  return &type metadata for DKBTConnectMetric;
}

uint64_t destroy for DKPairingMetric()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DKPairingMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DKPairingMetric(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for DKPairingMetric(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPairingMetric(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKPairingMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKPairingMetric()
{
  return &type metadata for DKPairingMetric;
}

uint64_t destroy for DKFirmwareUpdateMetric()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DKFirmwareUpdateMetric(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DKFirmwareUpdateMetric(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DKFirmwareUpdateMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKFirmwareUpdateMetric(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKFirmwareUpdateMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKFirmwareUpdateMetric()
{
  return &type metadata for DKFirmwareUpdateMetric;
}

void type metadata accessor for DKPanoramaCaptureDirection(uint64_t a1)
{
  sub_23A5B51A8(a1, &qword_25699DD50);
}

void type metadata accessor for CameraAppOrientation(uint64_t a1)
{
  sub_23A5B51A8(a1, &qword_25699DD58);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_23A5B5038(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23A5B5058(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_23A5B51A8(a1, &qword_25699DD60);
}

__n128 __swift_memcpy48_16(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_23A5B50A8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23A5B50C8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for simd_float3x3(uint64_t a1)
{
  sub_23A5B51A8(a1, &qword_25699DD68);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_23A5B51A8(a1, &qword_25699DD70);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_23A5B5134(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23A5B5154(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_23A5B51A8(a1, &qword_25699DD78);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23A5B51A8(a1, (unint64_t *)&unk_2542D2800);
}

void sub_23A5B51A8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

unsigned __int8 *sub_23A5B51EC@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23A5B51FC(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

unint64_t sub_23A5B5208()
{
  unint64_t result;

  result = qword_2569A20D0;
  if (!qword_2569A20D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569A20D0);
  }
  return result;
}

BOOL static DockStatus.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t DockStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

DockKitCore::DockStatus_optional __swiftcall DockStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (DockKitCore::DockStatus_optional)rawValue;
}

DockKitCore::DockStatus_optional sub_23A5B52A0(Swift::Int *a1)
{
  return DockStatus.init(rawValue:)(*a1);
}

void sub_23A5B52A8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

BOOL sub_23A5B52B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_23A5B52C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_23A5B52DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_23A5B52F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_23A5B5308()
{
  return sub_23A6915CC();
}

BOOL sub_23A5B5334(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t PairingRequestState.init(rawValue:)(unint64_t a1)
{
  return sub_23A5C744C(a1);
}

unint64_t sub_23A5B5364@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_23A5C744C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_23A5B5394()
{
  sub_23A5D0110();
  return sub_23A690EDC();
}

uint64_t sub_23A5B53F0()
{
  sub_23A5D0110();
  return sub_23A690EB8();
}

id ClientDictionary.__allocating_init(dictionary:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore16ClientDictionary_internalDict] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ClientDictionary.init(dictionary:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore16ClientDictionary_internalDict] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

Swift::OpaquePointer_optional __swiftcall ClientDictionary.value(forKey:)(Swift::String forKey)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore16ClientDictionary_internalDict);
  if (*(_QWORD *)(v2 + 16))
  {
    object = forKey._object;
    countAndFlagsBits = forKey._countAndFlagsBits;
    swift_bridgeObjectRetain();
    v5 = sub_23A5C6588(countAndFlagsBits, (uint64_t)object);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
    }
    else
    {
      v7 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  forKey._countAndFlagsBits = v7;
  return *(Swift::OpaquePointer_optional *)&forKey._countAndFlagsBits;
}

uint64_t ClientDictionary.keys.getter()
{
  return sub_23A5B5574((uint64_t (*)(uint64_t))sub_23A5C6BB0);
}

uint64_t ClientDictionary.values.getter()
{
  return sub_23A5B5574((uint64_t (*)(uint64_t))sub_23A5C6C94);
}

uint64_t sub_23A5B5574(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_bridgeObjectRetain();
  v3 = a1(v2);
  swift_bridgeObjectRelease();
  return v3;
}

BOOL ClientDictionary.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore16ClientDictionary_internalDict) + 16) == 0;
}

void ClientDictionary.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23A5B5640()
{
  return sub_23A5B6B14(&OBJC_IVAR____TtC11DockKitCore5Track__id);
}

uint64_t sub_23A5B564C(uint64_t a1)
{
  return sub_23A5B6BA0(a1, &OBJC_IVAR____TtC11DockKitCore5Track__id);
}

uint64_t (*sub_23A5B5658(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = OBJC_IVAR____TtC11DockKitCore5Track__id;
  a1[3] = OBJC_IVAR____TtC11DockKitCore5Track__id;
  v6 = *(_QWORD *)(v1 + v5);
  v7 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  *a1 = v6;
  return sub_23A5B56F0;
}

uint64_t sub_23A5B56F4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t result;

  v5 = *a1;
  v6 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v7 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  v8 = *(_QWORD *)(v5 + *a2);
  v9 = *(os_unfair_lock_s **)(v5 + v6);
  swift_retain();
  os_unfair_lock_unlock(v9 + 4);
  result = swift_release();
  *a3 = v8;
  return result;
}

uint64_t sub_23A5B577C()
{
  return sub_23A5B6B14(&OBJC_IVAR____TtC11DockKitCore5Track__faceID);
}

uint64_t sub_23A5B5788(uint64_t a1)
{
  return sub_23A5B6BA0(a1, &OBJC_IVAR____TtC11DockKitCore5Track__faceID);
}

uint64_t (*sub_23A5B5794(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = OBJC_IVAR____TtC11DockKitCore5Track__faceID;
  a1[3] = OBJC_IVAR____TtC11DockKitCore5Track__faceID;
  v6 = *(_QWORD *)(v1 + v5);
  v7 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  *a1 = v6;
  return sub_23A5B56F0;
}

uint64_t sub_23A5B582C()
{
  return sub_23A5B5A38(&OBJC_IVAR____TtC11DockKitCore5Track__faceYaw);
}

uint64_t sub_23A5B5838(uint64_t a1, char a2)
{
  return sub_23A5B5AD0(a1, a2, &OBJC_IVAR____TtC11DockKitCore5Track__faceYaw);
}

uint64_t (*sub_23A5B5844(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  os_unfair_lock_s *v10;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v3[2] = v1;
  v3[3] = v4;
  v5 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = OBJC_IVAR____TtC11DockKitCore5Track__faceYaw;
  v3[4] = OBJC_IVAR____TtC11DockKitCore5Track__faceYaw;
  v7 = (uint64_t *)(v1 + v6);
  v8 = *v7;
  v9 = *((_BYTE *)v7 + 8);
  v10 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  *v3 = v8;
  *((_BYTE *)v3 + 8) = v9;
  return sub_23A5B58F8;
}

uint64_t sub_23A5B58FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  os_unfair_lock_s *v11;
  uint64_t result;

  v5 = *a1;
  v6 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v7 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  v8 = (uint64_t *)(v5 + *a2);
  v9 = *v8;
  v10 = *((_BYTE *)v8 + 8);
  v11 = *(os_unfair_lock_s **)(v5 + v6);
  swift_retain();
  os_unfair_lock_unlock(v11 + 4);
  result = swift_release();
  *(_QWORD *)a3 = v9;
  *(_BYTE *)(a3 + 8) = v10;
  return result;
}

uint64_t sub_23A5B5998(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;

  v6 = *a1;
  v7 = *((_BYTE *)a1 + 8);
  v8 = *a2;
  v9 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v10 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v10 + 4);
  swift_release();
  v11 = v8 + *a5;
  *(_QWORD *)v11 = v6;
  *(_BYTE *)(v11 + 8) = v7;
  v12 = *(os_unfair_lock_s **)(v8 + v9);
  swift_retain();
  os_unfair_lock_unlock(v12 + 4);
  return swift_release();
}

uint64_t sub_23A5B5A2C()
{
  return sub_23A5B5A38(&OBJC_IVAR____TtC11DockKitCore5Track__facePitch);
}

uint64_t sub_23A5B5A38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = *(_QWORD *)(v1 + *a1);
  v6 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  swift_release();
  return v5;
}

uint64_t sub_23A5B5AC4(uint64_t a1, char a2)
{
  return sub_23A5B5AD0(a1, a2, &OBJC_IVAR____TtC11DockKitCore5Track__facePitch);
}

uint64_t sub_23A5B5AD0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v7 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v8 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v8 + 4);
  swift_release();
  v9 = v3 + *a3;
  *(_QWORD *)v9 = a1;
  *(_BYTE *)(v9 + 8) = a2 & 1;
  v10 = *(os_unfair_lock_s **)(v3 + v7);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  return swift_release();
}

uint64_t (*sub_23A5B5B64(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  os_unfair_lock_s *v10;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v3[2] = v1;
  v3[3] = v4;
  v5 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = OBJC_IVAR____TtC11DockKitCore5Track__facePitch;
  v3[4] = OBJC_IVAR____TtC11DockKitCore5Track__facePitch;
  v7 = (uint64_t *)(v1 + v6);
  v8 = *v7;
  v9 = *((_BYTE *)v7 + 8);
  v10 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  *v3 = v8;
  *((_BYTE *)v3 + 8) = v9;
  return sub_23A5B58F8;
}

void sub_23A5B5C18(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;

  v1 = *a1;
  v2 = (*a1)[3];
  v3 = (*a1)[2];
  v4 = v3 + (*a1)[4];
  v5 = **a1;
  v6 = *((_BYTE *)*a1 + 8);
  v7 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  *(_QWORD *)v4 = v5;
  *(_BYTE *)(v4 + 8) = v6;
  v8 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_unlock(v8 + 4);
  swift_release();
  free(v1);
}

double sub_23A5B5CAC()
{
  return sub_23A5B5EF0(&OBJC_IVAR____TtC11DockKitCore5Track__bodyBox);
}

uint64_t sub_23A5B5CB8(double a1, double a2, double a3, double a4)
{
  return sub_23A5B5FA0(&OBJC_IVAR____TtC11DockKitCore5Track__bodyBox, a1, a2, a3, a4);
}

uint64_t (*sub_23A5B5CC4(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  __int128 v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v3[4] = v1;
  v3[5] = v4;
  v5 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = OBJC_IVAR____TtC11DockKitCore5Track__bodyBox;
  v3[6] = OBJC_IVAR____TtC11DockKitCore5Track__bodyBox;
  v7 = (__int128 *)(v1 + v6);
  v12 = *v7;
  v8 = *((_QWORD *)v7 + 2);
  v9 = *((_QWORD *)v7 + 3);
  v10 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  *(_OWORD *)v3 = v12;
  v3[2] = v8;
  v3[3] = v9;
  return sub_23A5B5D90;
}

__n128 sub_23A5B5D94@<Q0>(uint64_t *a1@<X0>, _QWORD *a2@<X3>, __n128 *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  __n128 *v8;
  unint64_t v9;
  unint64_t v10;
  os_unfair_lock_s *v11;
  __n128 result;
  __n128 v13;

  v5 = *a1;
  v6 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v7 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  v8 = (__n128 *)(v5 + *a2);
  v13 = *v8;
  v9 = v8[1].n128_u64[0];
  v10 = v8[1].n128_u64[1];
  v11 = *(os_unfair_lock_s **)(v5 + v6);
  swift_retain();
  os_unfair_lock_unlock(v11 + 4);
  swift_release();
  result = v13;
  *a3 = v13;
  a3[1].n128_u64[0] = v9;
  a3[1].n128_u64[1] = v10;
  return result;
}

uint64_t sub_23A5B5E40(__int128 *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  __int128 v14;

  v14 = *a1;
  v6 = *((_QWORD *)a1 + 2);
  v7 = *((_QWORD *)a1 + 3);
  v8 = *a2;
  v9 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v10 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v10 + 4);
  swift_release();
  v11 = v8 + *a5;
  *(_OWORD *)v11 = v14;
  *(_QWORD *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v7;
  v12 = *(os_unfair_lock_s **)(v8 + v9);
  swift_retain();
  os_unfair_lock_unlock(v12 + 4);
  return swift_release();
}

double sub_23A5B5EE4()
{
  return sub_23A5B5EF0(&OBJC_IVAR____TtC11DockKitCore5Track__faceBox);
}

double sub_23A5B5EF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  double v5;
  os_unfair_lock_s *v6;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = *(double *)(v1 + *a1);
  v6 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  swift_release();
  return v5;
}

uint64_t sub_23A5B5F94(double a1, double a2, double a3, double a4)
{
  return sub_23A5B5FA0(&OBJC_IVAR____TtC11DockKitCore5Track__faceBox, a1, a2, a3, a4);
}

uint64_t sub_23A5B5FA0(_QWORD *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  os_unfair_lock_s *v12;
  double *v13;
  os_unfair_lock_s *v14;

  v11 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v12 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v12 + 4);
  swift_release();
  v13 = (double *)(v5 + *a1);
  *v13 = a2;
  v13[1] = a3;
  v13[2] = a4;
  v13[3] = a5;
  v14 = *(os_unfair_lock_s **)(v5 + v11);
  swift_retain();
  os_unfair_lock_unlock(v14 + 4);
  return swift_release();
}

uint64_t (*sub_23A5B6040(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  __int128 v12;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v3[4] = v1;
  v3[5] = v4;
  v5 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = OBJC_IVAR____TtC11DockKitCore5Track__faceBox;
  v3[6] = OBJC_IVAR____TtC11DockKitCore5Track__faceBox;
  v7 = (__int128 *)(v1 + v6);
  v12 = *v7;
  v8 = *((_QWORD *)v7 + 2);
  v9 = *((_QWORD *)v7 + 3);
  v10 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  *(_OWORD *)v3 = v12;
  v3[2] = v8;
  v3[3] = v9;
  return sub_23A5B5D90;
}

void sub_23A5B610C(__int128 **a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  __int128 v9;

  v1 = *a1;
  v2 = *((_QWORD *)*a1 + 5);
  v3 = *((_QWORD *)*a1 + 4);
  v4 = v3 + *((_QWORD *)*a1 + 6);
  v9 = **a1;
  v5 = *((_QWORD *)*a1 + 2);
  v6 = *((_QWORD *)*a1 + 3);
  v7 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  *(_OWORD *)v4 = v9;
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  v8 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_unlock(v8 + 4);
  swift_release();
  free(v1);
}

double sub_23A5B61B0()
{
  return sub_23A5B6448(&OBJC_IVAR____TtC11DockKitCore5Track__weightVertical);
}

uint64_t sub_23A5B61BC(double a1)
{
  return sub_23A5B64DC(&OBJC_IVAR____TtC11DockKitCore5Track__weightVertical, a1);
}

uint64_t (*sub_23A5B61C8(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = OBJC_IVAR____TtC11DockKitCore5Track__weightVertical;
  a1[3] = OBJC_IVAR____TtC11DockKitCore5Track__weightVertical;
  v6 = *(_QWORD *)(v1 + v5);
  v7 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  *a1 = v6;
  return sub_23A5B6268;
}

double sub_23A5B626C()
{
  return sub_23A5B6448(&OBJC_IVAR____TtC11DockKitCore5Track__weightHorizontal);
}

uint64_t sub_23A5B6278(double a1)
{
  return sub_23A5B64DC(&OBJC_IVAR____TtC11DockKitCore5Track__weightHorizontal, a1);
}

uint64_t (*sub_23A5B6284(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = OBJC_IVAR____TtC11DockKitCore5Track__weightHorizontal;
  a1[3] = OBJC_IVAR____TtC11DockKitCore5Track__weightHorizontal;
  v6 = *(_QWORD *)(v1 + v5);
  v7 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  *a1 = v6;
  return sub_23A5B6268;
}

uint64_t sub_23A5B6324@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t result;

  v5 = *a1;
  v6 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v7 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  v8 = *(_QWORD *)(v5 + *a2);
  v9 = *(os_unfair_lock_s **)(v5 + v6);
  swift_retain();
  os_unfair_lock_unlock(v9 + 4);
  result = swift_release();
  *a3 = v8;
  return result;
}

uint64_t sub_23A5B63B4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  os_unfair_lock_s *v10;

  v6 = *a1;
  v7 = *a2;
  v8 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v9 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v9 + 4);
  swift_release();
  *(_QWORD *)(v7 + *a5) = v6;
  v10 = *(os_unfair_lock_s **)(v7 + v8);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  return swift_release();
}

double sub_23A5B643C()
{
  return sub_23A5B6448(&OBJC_IVAR____TtC11DockKitCore5Track__timeSinceLastSeen);
}

double sub_23A5B6448(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  double v5;
  os_unfair_lock_s *v6;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = *(double *)(v1 + *a1);
  v6 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  swift_release();
  return v5;
}

uint64_t sub_23A5B64D0(double a1)
{
  return sub_23A5B64DC(&OBJC_IVAR____TtC11DockKitCore5Track__timeSinceLastSeen, a1);
}

uint64_t sub_23A5B64DC(_QWORD *a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;

  v5 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v6 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v6 + 4);
  swift_release();
  *(double *)(v2 + *a1) = a2;
  v7 = *(os_unfair_lock_s **)(v2 + v5);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  return swift_release();
}

uint64_t (*sub_23A5B6560(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = OBJC_IVAR____TtC11DockKitCore5Track__timeSinceLastSeen;
  a1[3] = OBJC_IVAR____TtC11DockKitCore5Track__timeSinceLastSeen;
  v6 = *(_QWORD *)(v1 + v5);
  v7 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  *a1 = v6;
  return sub_23A5B6268;
}

uint64_t sub_23A5B6600(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;

  v2 = a1[2];
  v1 = a1[3];
  v3 = a1[1];
  v4 = *a1;
  v5 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  *(_QWORD *)(v3 + v1) = v4;
  v6 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  return swift_release();
}

uint64_t sub_23A5B667C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;

  v3 = *a1;
  v4 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v5 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  memcpy(a2, (const void *)(v3 + OBJC_IVAR____TtC11DockKitCore5Track__trackedSubjectState), 0x109uLL);
  v6 = *(os_unfair_lock_s **)(v3 + v4);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  return swift_release();
}

uint64_t sub_23A5B6708(const void *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;

  v3 = *a2;
  v4 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v5 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  memcpy((void *)(v3 + OBJC_IVAR____TtC11DockKitCore5Track__trackedSubjectState), a1, 0x109uLL);
  v6 = *(os_unfair_lock_s **)(v3 + v4);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  return swift_release();
}

uint64_t sub_23A5B6794@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  memcpy(a1, (const void *)(v1 + OBJC_IVAR____TtC11DockKitCore5Track__trackedSubjectState), 0x109uLL);
  v5 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  return swift_release();
}

uint64_t sub_23A5B681C(const void *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  memcpy((void *)(v1 + OBJC_IVAR____TtC11DockKitCore5Track__trackedSubjectState), a1, 0x109uLL);
  v5 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  return swift_release();
}

void (*sub_23A5B68A4(_QWORD *a1))(const void **a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v3 = malloc(0x128uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v3[34] = v1;
  v3[35] = v4;
  v5 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = OBJC_IVAR____TtC11DockKitCore5Track__trackedSubjectState;
  v3[36] = OBJC_IVAR____TtC11DockKitCore5Track__trackedSubjectState;
  memcpy(v3, (const void *)(v1 + v6), 0x109uLL);
  v7 = *(os_unfair_lock_s **)(v1 + v4);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  return sub_23A5B6954;
}

void sub_23A5B6954(const void **a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  _BYTE v7[265];

  v1 = (void *)*a1;
  v2 = *((_QWORD *)*a1 + 35);
  v3 = *((_QWORD *)*a1 + 34);
  v4 = (void *)(v3 + *((_QWORD *)*a1 + 36));
  memcpy(v7, *a1, sizeof(v7));
  v5 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  memcpy(v4, v7, 0x109uLL);
  v6 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  swift_release();
  free(v1);
}

uint64_t sub_23A5B6A00@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t result;

  v3 = *a1;
  v4 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v5 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore5Track__type);
  v7 = *(os_unfair_lock_s **)(v3 + v4);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_23A5B6A88(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  os_unfair_lock_s *v10;

  v6 = *a1;
  v7 = *a2;
  v8 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v9 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v9 + 4);
  swift_release();
  *(_QWORD *)(v7 + *a5) = v6;
  v10 = *(os_unfair_lock_s **)(v7 + v8);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  return swift_release();
}

uint64_t sub_23A5B6B08()
{
  return sub_23A5B6B14(&OBJC_IVAR____TtC11DockKitCore5Track__type);
}

uint64_t sub_23A5B6B14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = *(_QWORD *)(v1 + *a1);
  v6 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  swift_release();
  return v5;
}

uint64_t sub_23A5B6B94(uint64_t a1)
{
  return sub_23A5B6BA0(a1, &OBJC_IVAR____TtC11DockKitCore5Track__type);
}

uint64_t sub_23A5B6BA0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;

  v5 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v6 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v6 + 4);
  swift_release();
  *(_QWORD *)(v2 + *a2) = a1;
  v7 = *(os_unfair_lock_s **)(v2 + v5);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  return swift_release();
}

uint64_t (*sub_23A5B6C1C(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = OBJC_IVAR____TtC11DockKitCore5Track__type;
  a1[3] = OBJC_IVAR____TtC11DockKitCore5Track__type;
  v6 = *(_QWORD *)(v1 + v5);
  v7 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  *a1 = v6;
  return sub_23A5B56F0;
}

uint64_t sub_23A5B6CB4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;

  v2 = a1[2];
  v1 = a1[3];
  v4 = *a1;
  v3 = a1[1];
  v5 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  *(_QWORD *)(v3 + v1) = v4;
  v6 = *(os_unfair_lock_s **)(v3 + v2);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  return swift_release();
}

id Track.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;
  char v10;
  char v11;
  char v12;

  v1 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v2 = swift_allocObject();
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore5Track__id] = -1;
  *(_DWORD *)(v2 + 16) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore5Track__faceID] = -1;
  v3 = &v0[OBJC_IVAR____TtC11DockKitCore5Track__faceYaw];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v0[OBJC_IVAR____TtC11DockKitCore5Track__facePitch];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v5 = &v0[OBJC_IVAR____TtC11DockKitCore5Track__bodyBox];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v6 = &v0[OBJC_IVAR____TtC11DockKitCore5Track__faceBox];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore5Track__weightVertical] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore5Track__weightHorizontal] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore5Track__timeSinceLastSeen] = 0;
  v7 = &v0[OBJC_IVAR____TtC11DockKitCore5Track__trackedSubjectState];
  v12 = 1;
  v11 = 1;
  v10 = 1;
  *(_QWORD *)v7 = -1;
  *((_QWORD *)v7 + 1) = -1;
  *((_QWORD *)v7 + 10) = 0;
  *((_OWORD *)v7 + 3) = 0u;
  *((_OWORD *)v7 + 4) = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  v7[88] = 1;
  *((_QWORD *)v7 + 12) = 0;
  v7[104] = 1;
  *((_WORD *)v7 + 96) = 0;
  *((_OWORD *)v7 + 10) = 0u;
  *((_OWORD *)v7 + 11) = 0u;
  *((_OWORD *)v7 + 8) = 0u;
  *((_OWORD *)v7 + 9) = 0u;
  *((_OWORD *)v7 + 7) = 0u;
  *((_QWORD *)v7 + 25) = 0;
  v7[208] = 1;
  *((_QWORD *)v7 + 27) = 0;
  *((_QWORD *)v7 + 28) = 0;
  *((_QWORD *)v7 + 29) = -1;
  *((_QWORD *)v7 + 30) = -1;
  *(_OWORD *)(v7 + 248) = xmmword_23A694010;
  v7[264] = v10;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore5Track__type] = 3;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for Track();
  return objc_msgSendSuper2(&v9, sel_init);
}

double sub_23A5B6EB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  double *v5;
  double v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  double v9;
  os_unfair_lock_s *v10;
  double v11;
  os_unfair_lock_s *v12;
  double v13;
  os_unfair_lock_s *v14;
  os_unfair_lock_s *v15;
  double v16;
  os_unfair_lock_s *v17;
  double v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  double *v21;
  double v22;
  os_unfair_lock_s *v23;
  os_unfair_lock_s *v24;
  double v25;
  os_unfair_lock_s *v26;
  double v27;
  os_unfair_lock_s *v28;
  double v29;
  os_unfair_lock_s *v30;
  os_unfair_lock_s *v31;
  double v32;
  os_unfair_lock_s *v33;

  v3 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = (double *)(v1 + OBJC_IVAR____TtC11DockKitCore5Track__faceBox);
  v6 = *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore5Track__faceBox);
  v7 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  v8 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_lock(v8 + 4);
  swift_release();
  v9 = v5[2];
  v10 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  v11 = v6 + v9 * 0.5;
  v12 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_lock(v12 + 4);
  swift_release();
  v13 = v5[1];
  v14 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v14 + 4);
  swift_release();
  v15 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_lock(v15 + 4);
  swift_release();
  v16 = v5[3];
  v17 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v17 + 4);
  swift_release();
  v18 = v13 + v16 * 0.5;
  v19 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  v20 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v20 + 4);
  swift_release();
  v21 = (double *)(a1 + OBJC_IVAR____TtC11DockKitCore5Track__faceBox);
  v22 = *(double *)(a1 + OBJC_IVAR____TtC11DockKitCore5Track__faceBox);
  v23 = *(os_unfair_lock_s **)(a1 + v19);
  swift_retain();
  os_unfair_lock_unlock(v23 + 4);
  swift_release();
  v24 = *(os_unfair_lock_s **)(a1 + v19);
  swift_retain();
  os_unfair_lock_lock(v24 + 4);
  swift_release();
  v25 = v21[2];
  v26 = *(os_unfair_lock_s **)(a1 + v19);
  swift_retain();
  os_unfair_lock_unlock(v26 + 4);
  swift_release();
  v27 = v22 + v25 * 0.5;
  v28 = *(os_unfair_lock_s **)(a1 + v19);
  swift_retain();
  os_unfair_lock_lock(v28 + 4);
  swift_release();
  v29 = v21[1];
  v30 = *(os_unfair_lock_s **)(a1 + v19);
  swift_retain();
  os_unfair_lock_unlock(v30 + 4);
  swift_release();
  v31 = *(os_unfair_lock_s **)(a1 + v19);
  swift_retain();
  os_unfair_lock_lock(v31 + 4);
  swift_release();
  v32 = v21[3];
  v33 = *(os_unfair_lock_s **)(a1 + v19);
  swift_retain();
  os_unfair_lock_unlock(v33 + 4);
  swift_release();
  return sqrt((v11 - v27) * (v11 - v27) + (v18 - (v29 + v32 * 0.5)) * (v18 - (v29 + v32 * 0.5)));
}

uint64_t sub_23A5B7178(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A5B71A4 + 4 * byte_23A6941E0[a1]))(6580575, 0xE300000000000000);
}

uint64_t sub_23A5B71A4()
{
  return 0x4449656361665FLL;
}

uint64_t sub_23A5B71BC()
{
  return 0x776159656361665FLL;
}

uint64_t sub_23A5B71D4()
{
  return 0x746950656361665FLL;
}

uint64_t sub_23A5B71F0()
{
  return 0x786F4279646F625FLL;
}

uint64_t sub_23A5B7208()
{
  return 0x786F42656361665FLL;
}

uint64_t sub_23A5B7220()
{
  return 0x567468676965775FLL;
}

unint64_t sub_23A5B7244()
{
  return 0xD000000000000011;
}

unint64_t sub_23A5B7260()
{
  return 0xD000000000000014;
}

uint64_t sub_23A5B72AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A5B72D8 + 4 * byte_23A6941EB[a1]))(6580575, 0xE300000000000000);
}

uint64_t sub_23A5B72D8()
{
  return 0x4449656361665FLL;
}

uint64_t sub_23A5B72F0()
{
  return 0x776159656361665FLL;
}

uint64_t sub_23A5B7308()
{
  return 0x746950656361665FLL;
}

uint64_t sub_23A5B7324()
{
  return 0x786F4279646F625FLL;
}

uint64_t sub_23A5B733C()
{
  return 0x786F42656361665FLL;
}

uint64_t sub_23A5B7354()
{
  return 0x567468676965775FLL;
}

unint64_t sub_23A5B7378()
{
  return 0xD000000000000011;
}

unint64_t sub_23A5B7394()
{
  return 0xD000000000000014;
}

uint64_t sub_23A5B73E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_23A5B7178(*a1);
  v5 = v4;
  if (v3 == sub_23A5B7178(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23A691518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23A5B7468()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23A6915C0();
  sub_23A5B7178(v1);
  sub_23A690E7C();
  swift_bridgeObjectRelease();
  return sub_23A6915FC();
}

uint64_t sub_23A5B74C8()
{
  unsigned __int8 *v0;

  sub_23A5B7178(*v0);
  sub_23A690E7C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5B7508()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23A6915C0();
  sub_23A5B7178(v1);
  sub_23A690E7C();
  swift_bridgeObjectRelease();
  return sub_23A6915FC();
}

uint64_t sub_23A5B7564@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A5C79A8();
  *a1 = result;
  return result;
}

uint64_t sub_23A5B7590@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23A5B7178(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23A5B75B8()
{
  unsigned __int8 *v0;

  return sub_23A5B72AC(*v0);
}

uint64_t sub_23A5B75C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A5C79A8();
  *a1 = result;
  return result;
}

uint64_t sub_23A5B75E4()
{
  return 0;
}

void sub_23A5B75F0(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_23A5B75FC()
{
  sub_23A5C747C();
  return sub_23A691638();
}

uint64_t sub_23A5B7624()
{
  sub_23A5C747C();
  return sub_23A691644();
}

id Track.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for Track);
}

uint64_t sub_23A5B7668(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[18];
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DEB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C747C();
  sub_23A69162C();
  LOBYTE(v12[0]) = 0;
  sub_23A6914D0();
  if (!v2)
  {
    LOBYTE(v12[0]) = 1;
    sub_23A6914D0();
    LOBYTE(v12[0]) = 2;
    sub_23A69147C();
    LOBYTE(v12[0]) = 3;
    sub_23A69147C();
    v9 = *(_OWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore5Track__bodyBox + 16);
    v12[0] = *(_OWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore5Track__bodyBox);
    v12[1] = v9;
    v14 = 4;
    type metadata accessor for CGRect(0);
    sub_23A5CFF58(&qword_25699DEC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_23A6914DC();
    v10 = *(_OWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore5Track__faceBox + 16);
    v12[0] = *(_OWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore5Track__faceBox);
    v12[1] = v10;
    v14 = 5;
    sub_23A6914DC();
    LOBYTE(v12[0]) = 6;
    sub_23A6914B8();
    LOBYTE(v12[0]) = 7;
    sub_23A6914B8();
    v14 = 8;
    sub_23A6914B8();
    memcpy(v12, (const void *)(v3 + OBJC_IVAR____TtC11DockKitCore5Track__trackedSubjectState), 0x109uLL);
    v13 = 9;
    sub_23A5C74C0();
    sub_23A6914DC();
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore5Track__type);
    v13 = 10;
    sub_23A5C7504();
    sub_23A6914DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id Track.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Track.init(from:)(a1);
}

id Track.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  char v30;
  __int128 v31;
  char *v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  objc_class *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  objc_super v58;
  uint64_t v59;
  _OWORD v60[17];
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DED8);
  v4 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  v51 = v4;
  MEMORY[0x24BDAC7A8]();
  v57 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC11DockKitCore5Track_allocatedLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  v52 = v6;
  *(_QWORD *)&v1[v6] = v7;
  v49 = OBJC_IVAR____TtC11DockKitCore5Track__id;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore5Track__id] = -1;
  v48 = OBJC_IVAR____TtC11DockKitCore5Track__faceID;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore5Track__faceID] = -1;
  v8 = (uint64_t *)&v1[OBJC_IVAR____TtC11DockKitCore5Track__faceYaw];
  *v8 = 0;
  v47 = v8;
  *((_BYTE *)v8 + 8) = 1;
  v9 = (uint64_t *)&v1[OBJC_IVAR____TtC11DockKitCore5Track__facePitch];
  *v9 = 0;
  v46 = v9;
  *((_BYTE *)v9 + 8) = 1;
  v10 = &v1[OBJC_IVAR____TtC11DockKitCore5Track__bodyBox];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v45 = v10;
  v11 = &v1[OBJC_IVAR____TtC11DockKitCore5Track__faceBox];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v44 = OBJC_IVAR____TtC11DockKitCore5Track__weightVertical;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore5Track__weightVertical] = 0x3FF0000000000000;
  v12 = OBJC_IVAR____TtC11DockKitCore5Track__weightHorizontal;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore5Track__weightHorizontal] = 0x3FF0000000000000;
  v42 = OBJC_IVAR____TtC11DockKitCore5Track__timeSinceLastSeen;
  v43 = v12;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore5Track__timeSinceLastSeen] = 0;
  v13 = &v1[OBJC_IVAR____TtC11DockKitCore5Track__trackedSubjectState];
  v63 = 1;
  v62 = 1;
  v61 = 1;
  *(_QWORD *)v13 = -1;
  *((_QWORD *)v13 + 1) = -1;
  *((_QWORD *)v13 + 10) = 0;
  *((_OWORD *)v13 + 3) = 0u;
  *((_OWORD *)v13 + 4) = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  v13[88] = 1;
  *((_QWORD *)v13 + 12) = 0;
  v13[104] = 1;
  *((_WORD *)v13 + 96) = 0;
  *((_OWORD *)v13 + 10) = 0u;
  *((_OWORD *)v13 + 11) = 0u;
  *((_OWORD *)v13 + 8) = 0u;
  *((_OWORD *)v13 + 9) = 0u;
  *((_OWORD *)v13 + 7) = 0u;
  *((_QWORD *)v13 + 25) = 0;
  v13[208] = 1;
  *((_QWORD *)v13 + 27) = 0;
  *((_QWORD *)v13 + 28) = 0;
  *((_QWORD *)v13 + 29) = -1;
  *((_QWORD *)v13 + 30) = -1;
  *(_OWORD *)(v13 + 248) = xmmword_23A694010;
  v13[264] = v61;
  v14 = OBJC_IVAR____TtC11DockKitCore5Track__type;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore5Track__type] = 3;
  v15 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v15);
  sub_23A5C747C();
  v56 = v1;
  v55 = v1;
  v16 = v54;
  sub_23A691620();
  if (v16)
  {
    v21 = v52;
    v22 = v56;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    v40 = *(id *)&v22[v21];

    swift_release();
    type metadata accessor for Track();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v18 = v48;
    v17 = v49;
    v54 = v11;
    v41 = v14;
    v19 = v51;
    LOBYTE(v60[0]) = 0;
    v20 = sub_23A691434();
    v24 = v56;
    *(_QWORD *)&v56[v17] = v20;
    LOBYTE(v60[0]) = 1;
    *(_QWORD *)&v24[v18] = sub_23A691434();
    LOBYTE(v60[0]) = 2;
    v25 = sub_23A6913E0();
    v26 = v47;
    *v47 = v25;
    *((_BYTE *)v26 + 8) = v27 & 1;
    LOBYTE(v60[0]) = 3;
    v28 = sub_23A6913E0();
    v29 = v46;
    *v46 = v28;
    *((_BYTE *)v29 + 8) = v30 & 1;
    type metadata accessor for CGRect(0);
    LOBYTE(v59) = 4;
    sub_23A5CFF58(&qword_25699DEE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_23A691440();
    v31 = v60[1];
    v32 = v45;
    *(_OWORD *)v45 = v60[0];
    *((_OWORD *)v32 + 1) = v31;
    LOBYTE(v59) = 5;
    sub_23A691440();
    v33 = v60[1];
    v34 = v54;
    *(_OWORD *)v54 = v60[0];
    *((_OWORD *)v34 + 1) = v33;
    LOBYTE(v60[0]) = 6;
    sub_23A69141C();
    *(_QWORD *)&v24[v44] = v35;
    LOBYTE(v60[0]) = 7;
    sub_23A69141C();
    *(_QWORD *)&v24[v43] = v36;
    LOBYTE(v60[0]) = 8;
    sub_23A69141C();
    *(_QWORD *)&v24[v42] = v37;
    v65 = 9;
    sub_23A5C7548();
    sub_23A691440();
    memcpy(v13, v60, 0x109uLL);
    v64 = 10;
    sub_23A5C758C();
    sub_23A691440();
    v38 = v55;
    *(_QWORD *)&v56[v41] = v59;

    v39 = (objc_class *)type metadata accessor for Track();
    v58.receiver = v38;
    v58.super_class = v39;
    v40 = objc_msgSendSuper2(&v58, sel_init);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v57, v50);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
  }
  return v40;
}

uint64_t sub_23A5B7F98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23A5C0984(a1, type metadata accessor for Track, (uint64_t (*)(uint64_t))Track.init(from:), a2);
}

uint64_t sub_23A5B7FBC(_QWORD *a1)
{
  return sub_23A5B7668(a1);
}

double FaceObservation.rect.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void FaceObservation.rect.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*FaceObservation.rect.modify())()
{
  return nullsub_1;
}

uint64_t FaceObservation.yawAngle.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t FaceObservation.yawAngle.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*FaceObservation.yawAngle.modify())()
{
  return nullsub_1;
}

uint64_t FaceObservation.pitchAngle.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t FaceObservation.pitchAngle.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*FaceObservation.pitchAngle.modify())()
{
  return nullsub_1;
}

uint64_t FaceObservation.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t FaceObservation.id.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*FaceObservation.id.modify())()
{
  return nullsub_1;
}

uint64_t FaceObservation.trackerId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t FaceObservation.trackerId.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*FaceObservation.trackerId.modify())()
{
  return nullsub_1;
}

double FaceObservation.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void FaceObservation.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

uint64_t (*FaceObservation.confidence.modify())()
{
  return nullsub_1;
}

uint64_t FaceObservation.modality.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t FaceObservation.modality.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = result;
  *(_BYTE *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*FaceObservation.modality.modify())()
{
  return nullsub_1;
}

uint64_t FaceObservation.printConfidence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t FaceObservation.printConfidence.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = result;
  *(_BYTE *)(v2 + 112) = a2 & 1;
  return result;
}

uint64_t (*FaceObservation.printConfidence.modify())()
{
  return nullsub_1;
}

uint64_t FaceObservation.newFace.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 113);
}

uint64_t FaceObservation.newFace.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 113) = result;
  return result;
}

uint64_t (*FaceObservation.newFace.modify())()
{
  return nullsub_1;
}

uint64_t FaceObservation.groupId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t FaceObservation.groupId.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = result;
  *(_BYTE *)(v2 + 128) = a2 & 1;
  return result;
}

uint64_t (*FaceObservation.groupId.modify())()
{
  return nullsub_1;
}

void __swiftcall FaceObservation.init(rect:yawAngle:pitchAngle:id:trackerId:confidence:modality:printConfidence:newFace:groupId:)(DockKitCore::FaceObservation *__return_ptr retstr, __C::CGRect rect, Swift::Double_optional yawAngle, Swift::Double_optional pitchAngle, Swift::Int id, Swift::Int trackerId, Swift::Double confidence, Swift::Int_optional modality, Swift::Double_optional printConfidence, Swift::Bool newFace, Swift::Int_optional groupId)
{
  Swift::Bool v11;
  Swift::Int v12;
  char v13;

  retstr->rect = rect;
  retstr->yawAngle.value = *(Swift::Double *)&yawAngle.is_nil;
  retstr->yawAngle.is_nil = pitchAngle.is_nil;
  *(_QWORD *)&retstr->pitchAngle.value = id;
  retstr->pitchAngle.is_nil = trackerId & 1;
  retstr->id = modality.value;
  retstr->trackerId = *(_QWORD *)&modality.is_nil;
  retstr->confidence = yawAngle.value;
  retstr->modality.value = *(_QWORD *)&printConfidence.is_nil;
  retstr->modality.is_nil = newFace;
  *(_QWORD *)&retstr->printConfidence.value = groupId.value;
  retstr->printConfidence.is_nil = groupId.is_nil;
  retstr->newFace = v11;
  retstr->groupId.value = v12;
  retstr->groupId.is_nil = v13 & 1;
}

uint64_t sub_23A5B81EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A5B8218 + 4 * byte_23A6941F6[a1]))(1952671090, 0xE400000000000000);
}

uint64_t sub_23A5B8218()
{
  return 0x656C676E41776179;
}

uint64_t sub_23A5B8230()
{
  return 0x676E416863746970;
}

uint64_t sub_23A5B8250()
{
  return 25705;
}

uint64_t sub_23A5B825C()
{
  return 0x4972656B63617274;
}

uint64_t sub_23A5B8278()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_23A5B8294()
{
  return 0x7974696C61646F6DLL;
}

uint64_t sub_23A5B82AC()
{
  return 0x6E6F43746E697270;
}

uint64_t sub_23A5B82D0()
{
  return 0x6563614677656ELL;
}

uint64_t sub_23A5B82E8()
{
  return 0x644970756F7267;
}

uint64_t sub_23A5B8300()
{
  unsigned __int8 *v0;

  return sub_23A5B81EC(*v0);
}

uint64_t sub_23A5B8308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5C79F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A5B832C(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_23A5B8338()
{
  sub_23A5C75D0();
  return sub_23A691638();
}

uint64_t sub_23A5B8360()
{
  sub_23A5C75D0();
  return sub_23A691644();
}

uint64_t FaceObservation.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _DWORD v14[2];
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DEF8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v25 = *((_QWORD *)v1 + 4);
  v24 = *((unsigned __int8 *)v1 + 40);
  v23 = *((_QWORD *)v1 + 6);
  v22 = *((unsigned __int8 *)v1 + 56);
  v10 = *((_QWORD *)v1 + 8);
  v19 = *((_QWORD *)v1 + 9);
  v17 = *((_QWORD *)v1 + 11);
  v18 = *((unsigned __int8 *)v1 + 96);
  v15 = *((_QWORD *)v1 + 13);
  v16 = *((unsigned __int8 *)v1 + 112);
  v14[1] = *((unsigned __int8 *)v1 + 113);
  v20 = *((_QWORD *)v1 + 15);
  v21 = v10;
  v11 = *((unsigned __int8 *)v1 + 128);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C75D0();
  sub_23A69162C();
  v28 = v26;
  v29 = v8;
  v30 = v9;
  v27 = 0;
  type metadata accessor for CGRect(0);
  sub_23A5CFF58(&qword_25699DEC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
  sub_23A6914DC();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  LODWORD(v26) = v11;
  LOBYTE(v28) = 1;
  sub_23A69147C();
  LOBYTE(v28) = 2;
  v25 = v4;
  sub_23A69147C();
  LOBYTE(v28) = 3;
  sub_23A6914D0();
  LOBYTE(v28) = 4;
  sub_23A6914D0();
  LOBYTE(v28) = 5;
  sub_23A6914B8();
  LOBYTE(v28) = 6;
  sub_23A691488();
  LOBYTE(v28) = 7;
  sub_23A69147C();
  LOBYTE(v28) = 8;
  sub_23A6914AC();
  LOBYTE(v28) = 9;
  v12 = v25;
  sub_23A691488();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t FaceObservation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DF08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C75D0();
  sub_23A691620();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    v47 = 0;
    sub_23A5CFF58(&qword_25699DEE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_23A691440();
    v9 = v48;
    v10 = v49;
    v11 = v50;
    v12 = v51;
    LOBYTE(v48) = 1;
    v13 = sub_23A6913E0();
    v15 = v14;
    LOBYTE(v48) = 2;
    v16 = sub_23A6913E0();
    v41 = v17;
    v42 = v16;
    LOBYTE(v48) = 3;
    v40 = sub_23A691434();
    LOBYTE(v48) = 4;
    v39 = sub_23A691434();
    LOBYTE(v48) = 5;
    sub_23A69141C();
    v19 = v18;
    LOBYTE(v48) = 6;
    v20 = sub_23A6913EC();
    v37 = v21;
    v38 = v20;
    LOBYTE(v48) = 7;
    v22 = sub_23A6913E0();
    v35 = v23;
    v36 = v22;
    LOBYTE(v48) = 8;
    v34 = sub_23A691410();
    LOBYTE(v48) = 9;
    v33 = sub_23A6913EC();
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v47 = v15 & 1;
    v27 = v41 & 1;
    v46 = v41 & 1;
    v28 = v37 & 1;
    v45 = v37 & 1;
    v29 = v35 & 1;
    v44 = v35 & 1;
    v30 = v34 & 1;
    v43 = v26 & 1;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    *(_QWORD *)(a2 + 32) = v13;
    *(_BYTE *)(a2 + 40) = v15 & 1;
    *(_QWORD *)(a2 + 48) = v42;
    *(_BYTE *)(a2 + 56) = v27;
    v31 = v39;
    *(_QWORD *)(a2 + 64) = v40;
    *(_QWORD *)(a2 + 72) = v31;
    *(_QWORD *)(a2 + 80) = v19;
    *(_QWORD *)(a2 + 88) = v38;
    *(_BYTE *)(a2 + 96) = v28;
    *(_QWORD *)(a2 + 104) = v36;
    *(_BYTE *)(a2 + 112) = v29;
    *(_BYTE *)(a2 + 113) = v30;
    *(_QWORD *)(a2 + 120) = v33;
    *(_BYTE *)(a2 + 128) = v43;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

double sub_23A5B8A7C()
{
  uint64_t v0;

  return *(double *)v0;
}

void sub_23A5B8A88(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*sub_23A5B8A94())()
{
  return nullsub_1;
}

uint64_t sub_23A5B8AA4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_23A5B8AAC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*sub_23A5B8AB4())()
{
  return nullsub_1;
}

uint64_t sub_23A5B8AC4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t sub_23A5B8ACC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*sub_23A5B8AD4())()
{
  return nullsub_1;
}

double sub_23A5B8AE4()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void sub_23A5B8AEC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

uint64_t (*sub_23A5B8AF4())()
{
  return nullsub_1;
}

uint64_t sub_23A5B8B04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FaceObservation.init(from:)(a1, a2);
}

uint64_t sub_23A5B8B18(_QWORD *a1)
{
  return FaceObservation.encode(to:)(a1);
}

double BodyObservation.rect.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void BodyObservation.rect.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*BodyObservation.rect.modify())()
{
  return nullsub_1;
}

uint64_t BodyObservation.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t BodyObservation.id.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*BodyObservation.id.modify())()
{
  return nullsub_1;
}

uint64_t BodyObservation.trackerId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t BodyObservation.trackerId.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*BodyObservation.trackerId.modify())()
{
  return nullsub_1;
}

double BodyObservation.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void BodyObservation.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*BodyObservation.confidence.modify())()
{
  return nullsub_1;
}

uint64_t BodyObservation.modality.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t BodyObservation.modality.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = result;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*BodyObservation.modality.modify())()
{
  return nullsub_1;
}

uint64_t BodyObservation.printConfidence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t BodyObservation.printConfidence.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = result;
  *(_BYTE *)(v2 + 80) = a2 & 1;
  return result;
}

uint64_t (*BodyObservation.printConfidence.modify())()
{
  return nullsub_1;
}

uint64_t BodyObservation.newBody.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t BodyObservation.newBody.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 81) = result;
  return result;
}

uint64_t (*BodyObservation.newBody.modify())()
{
  return nullsub_1;
}

uint64_t BodyObservation.groupId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t BodyObservation.groupId.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = result;
  *(_BYTE *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*BodyObservation.groupId.modify())()
{
  return nullsub_1;
}

uint64_t BodyObservation.isOccluded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t BodyObservation.isOccluded.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 97) = result;
  return result;
}

uint64_t (*BodyObservation.isOccluded.modify())()
{
  return nullsub_1;
}

void __swiftcall BodyObservation.init(rect:id:trackerId:confidence:modality:printConfidence:newBody:groupId:)(DockKitCore::BodyObservation *__return_ptr retstr, __C::CGRect rect, Swift::Int id, Swift::Int trackerId, Swift::Double confidence, Swift::Int_optional modality, Swift::Double_optional printConfidence, Swift::Bool newBody, Swift::Int_optional groupId)
{
  char v9;

  retstr->rect = rect;
  retstr->id = id;
  retstr->trackerId = trackerId;
  retstr->confidence = confidence;
  retstr->modality.value = modality.value;
  retstr->modality.is_nil = modality.is_nil;
  retstr->printConfidence.value = *(Swift::Double *)&printConfidence.is_nil;
  retstr->printConfidence.is_nil = newBody;
  retstr->newBody = groupId.value;
  retstr->groupId.value = *(_QWORD *)&groupId.is_nil;
  *(_WORD *)&retstr->groupId.is_nil = v9 & 1;
}

uint64_t sub_23A5B8CBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A5B8CE8 + 4 * byte_23A694200[a1]))(1952671090, 0xE400000000000000);
}

uint64_t sub_23A5B8CE8()
{
  return 25705;
}

uint64_t sub_23A5B8CF4()
{
  return 0x4972656B63617274;
}

uint64_t sub_23A5B8D10()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_23A5B8D30()
{
  return 0x7974696C61646F6DLL;
}

uint64_t sub_23A5B8D48()
{
  return 0x6E6F43746E697270;
}

uint64_t sub_23A5B8D6C()
{
  return 0x79646F4277656ELL;
}

uint64_t sub_23A5B8D84()
{
  return 0x644970756F7267;
}

uint64_t sub_23A5B8D9C()
{
  return 0x64756C63634F7369;
}

uint64_t sub_23A5B8DB8()
{
  unsigned __int8 *v0;

  return sub_23A5B8CBC(*v0);
}

uint64_t sub_23A5B8DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5C7E18(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A5B8DE4(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_23A5B8DF0()
{
  sub_23A5C7614();
  return sub_23A691638();
}

uint64_t sub_23A5B8E18()
{
  sub_23A5C7614();
  return sub_23A691644();
}

uint64_t BodyObservation.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DF10);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v10 = *((_QWORD *)v1 + 4);
  v19 = *((_QWORD *)v1 + 5);
  v20 = v10;
  v18 = *((_QWORD *)v1 + 7);
  v17 = *((unsigned __int8 *)v1 + 64);
  v16 = *((_QWORD *)v1 + 9);
  LODWORD(v10) = *((unsigned __int8 *)v1 + 80);
  v14 = *((unsigned __int8 *)v1 + 81);
  v15 = v10;
  v12 = *((_QWORD *)v1 + 11);
  v13 = *((unsigned __int8 *)v1 + 96);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C7614();
  sub_23A69162C();
  v23 = v21;
  v24 = v8;
  v25 = v9;
  v22 = 0;
  type metadata accessor for CGRect(0);
  sub_23A5CFF58(&qword_25699DEC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
  sub_23A6914DC();
  if (!v2)
  {
    LOBYTE(v23) = 1;
    sub_23A6914D0();
    LOBYTE(v23) = 2;
    *(_QWORD *)&v21 = v4;
    sub_23A6914D0();
    LOBYTE(v23) = 3;
    sub_23A6914B8();
    LOBYTE(v23) = 4;
    sub_23A691488();
    LOBYTE(v23) = 5;
    sub_23A69147C();
    LOBYTE(v23) = 6;
    sub_23A6914AC();
    LOBYTE(v23) = 7;
    sub_23A691488();
    LOBYTE(v23) = 8;
    v4 = v21;
    sub_23A6914AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t BodyObservation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v23;
  char v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DF20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C7614();
  sub_23A691620();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    v33 = 0;
    sub_23A5CFF58(&qword_25699DEE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_23A691440();
    v9 = v34;
    v10 = v35;
    v11 = v36;
    v12 = v37;
    LOBYTE(v34) = 1;
    v13 = sub_23A691434();
    LOBYTE(v34) = 2;
    v14 = sub_23A691434();
    LOBYTE(v34) = 3;
    sub_23A69141C();
    v16 = v15;
    LOBYTE(v34) = 4;
    v17 = sub_23A6913EC();
    v31 = v18;
    v32 = v17;
    LOBYTE(v34) = 5;
    v19 = sub_23A6913E0();
    v29 = v20;
    v30 = v19;
    LOBYTE(v34) = 6;
    v28 = sub_23A691410();
    LOBYTE(v34) = 7;
    v21 = sub_23A6913EC();
    v26 = v23;
    v27 = v21;
    LOBYTE(v34) = 8;
    v24 = sub_23A691410();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    *(_QWORD *)(a2 + 32) = v13;
    *(_QWORD *)(a2 + 40) = v14;
    *(_QWORD *)(a2 + 48) = v16;
    *(_QWORD *)(a2 + 56) = v32;
    *(_BYTE *)(a2 + 64) = v31 & 1;
    *(_QWORD *)(a2 + 72) = v30;
    *(_BYTE *)(a2 + 80) = v29 & 1;
    *(_BYTE *)(a2 + 81) = v28 & 1;
    *(_QWORD *)(a2 + 88) = v27;
    *(_BYTE *)(a2 + 96) = v26 & 1;
    *(_BYTE *)(a2 + 97) = v24 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_23A5B9478()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_23A5B9480(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*sub_23A5B9488())()
{
  return nullsub_1;
}

uint64_t sub_23A5B9498()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_23A5B94A0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*sub_23A5B94A8())()
{
  return nullsub_1;
}

double sub_23A5B94B8()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void sub_23A5B94C0(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*sub_23A5B94C8())()
{
  return nullsub_1;
}

uint64_t sub_23A5B94D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BodyObservation.init(from:)(a1, a2);
}

uint64_t sub_23A5B94EC(_QWORD *a1)
{
  return BodyObservation.encode(to:)(a1);
}

double ObjectObservation.rect.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ObjectObservation.rect.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*ObjectObservation.rect.modify())()
{
  return nullsub_1;
}

uint64_t ObjectObservation.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ObjectObservation.id.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*ObjectObservation.id.modify())()
{
  return nullsub_1;
}

uint64_t ObjectObservation.trackerId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ObjectObservation.trackerId.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*ObjectObservation.trackerId.modify())()
{
  return nullsub_1;
}

double ObjectObservation.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void ObjectObservation.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*ObjectObservation.confidence.modify())()
{
  return nullsub_1;
}

void __swiftcall ObjectObservation.init(rect:id:trackerId:confidence:)(DockKitCore::ObjectObservation *__return_ptr retstr, __C::CGRect rect, Swift::Int id, Swift::Int trackerId, Swift::Double confidence)
{
  retstr->rect = rect;
  retstr->id = id;
  retstr->trackerId = trackerId;
  retstr->confidence = confidence;
}

uint64_t sub_23A5B959C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A5B95C4 + 4 * byte_23A694209[*v0]))(1952671090, 0xE400000000000000);
}

uint64_t sub_23A5B95C4()
{
  return 25705;
}

uint64_t sub_23A5B95D0()
{
  return 0x4972656B63617274;
}

uint64_t sub_23A5B95EC()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_23A5B9608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5C81DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A5B962C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23A5B9638()
{
  sub_23A5C7658();
  return sub_23A691638();
}

uint64_t sub_23A5B9660()
{
  sub_23A5C7658();
  return sub_23A691644();
}

uint64_t ObjectObservation.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DF28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v11[1] = *((_QWORD *)v1 + 4);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C7658();
  sub_23A69162C();
  v14 = v12;
  v15 = v8;
  v16 = v9;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_23A5CFF58(&qword_25699DEC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
  sub_23A6914DC();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_23A6914D0();
    LOBYTE(v14) = 2;
    sub_23A6914D0();
    LOBYTE(v14) = 3;
    sub_23A6914B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ObjectObservation.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DF38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C7658();
  sub_23A691620();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    v18[15] = 0;
    sub_23A5CFF58(&qword_25699DEE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_23A691440();
    v9 = v19;
    v10 = v20;
    v11 = v21;
    v12 = v22;
    LOBYTE(v19) = 1;
    v13 = sub_23A691434();
    LOBYTE(v19) = 2;
    v15 = sub_23A691434();
    LOBYTE(v19) = 3;
    sub_23A69141C();
    v17 = v16;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v13;
    a2[5] = v15;
    a2[6] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_23A5B9A58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ObjectObservation.init(from:)(a1, a2);
}

uint64_t sub_23A5B9A6C(_QWORD *a1)
{
  return ObjectObservation.encode(to:)(a1);
}

uint64_t TrackedSubjectState.trackerId.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TrackedSubjectState.trackerId.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*TrackedSubjectState.trackerId.modify())()
{
  return nullsub_1;
}

uint64_t TrackedSubjectState.faceId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t TrackedSubjectState.faceId.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*TrackedSubjectState.faceId.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.faceBox.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void TrackedSubjectState.faceBox.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
}

uint64_t (*TrackedSubjectState.faceBox.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.bodyBox.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void TrackedSubjectState.bodyBox.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[6] = a1;
  v4[7] = a2;
  v4[8] = a3;
  v4[9] = a4;
}

uint64_t (*TrackedSubjectState.bodyBox.modify())()
{
  return nullsub_1;
}

uint64_t TrackedSubjectState.yawAngle.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t TrackedSubjectState.yawAngle.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_BYTE *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*TrackedSubjectState.yawAngle.modify())()
{
  return nullsub_1;
}

uint64_t TrackedSubjectState.pitchAngle.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t TrackedSubjectState.pitchAngle.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*TrackedSubjectState.pitchAngle.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.angularPosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void TrackedSubjectState.angularPosition.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 112) = a1;
  *(double *)(v2 + 120) = a2;
}

uint64_t (*TrackedSubjectState.angularPosition.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.angularVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

void TrackedSubjectState.angularVelocity.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 128) = a1;
  *(double *)(v2 + 136) = a2;
}

uint64_t (*TrackedSubjectState.angularVelocity.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.angularAcceleration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

void TrackedSubjectState.angularAcceleration.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 144) = a1;
  *(double *)(v2 + 152) = a2;
}

uint64_t (*TrackedSubjectState.angularAcceleration.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.cameraPosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 160);
}

void TrackedSubjectState.cameraPosition.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 160) = a1;
  *(double *)(v2 + 168) = a2;
}

uint64_t (*TrackedSubjectState.cameraPosition.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.cameraVelocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 176);
}

void TrackedSubjectState.cameraVelocity.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 176) = a1;
  *(double *)(v2 + 184) = a2;
}

uint64_t (*TrackedSubjectState.cameraVelocity.modify())()
{
  return nullsub_1;
}

void TrackedSubjectState.yawMotionState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 192);
}

_BYTE *TrackedSubjectState.yawMotionState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 192) = *result;
  return result;
}

uint64_t (*TrackedSubjectState.yawMotionState.modify())()
{
  return nullsub_1;
}

void TrackedSubjectState.pitchMotionState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 193);
}

_BYTE *TrackedSubjectState.pitchMotionState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 193) = *result;
  return result;
}

uint64_t (*TrackedSubjectState.pitchMotionState.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.timeSinceLastSeen.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 200);
}

void TrackedSubjectState.timeSinceLastSeen.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 200) = a1;
}

uint64_t (*TrackedSubjectState.timeSinceLastSeen.modify())()
{
  return nullsub_1;
}

uint64_t TrackedSubjectState.isActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 208);
}

uint64_t TrackedSubjectState.isActive.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 208) = result;
  return result;
}

uint64_t (*TrackedSubjectState.isActive.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.weight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 216);
}

void TrackedSubjectState.weight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 216) = a1;
}

uint64_t (*TrackedSubjectState.weight.modify())()
{
  return nullsub_1;
}

double TrackedSubjectState.distance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 224);
}

void TrackedSubjectState.distance.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 224) = a1;
}

uint64_t (*TrackedSubjectState.distance.modify())()
{
  return nullsub_1;
}

uint64_t TrackedSubjectState.ispFaceId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 232);
}

uint64_t TrackedSubjectState.ispFaceId.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = result;
  return result;
}

uint64_t (*TrackedSubjectState.ispFaceId.modify())()
{
  return nullsub_1;
}

uint64_t TrackedSubjectState.ispBodyId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 240);
}

uint64_t TrackedSubjectState.ispBodyId.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = result;
  return result;
}

uint64_t (*TrackedSubjectState.ispBodyId.modify())()
{
  return nullsub_1;
}

uint64_t TrackedSubjectState.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 248);
}

uint64_t TrackedSubjectState.type.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 248) = result;
  return result;
}

uint64_t (*TrackedSubjectState.type.modify())()
{
  return nullsub_1;
}

uint64_t TrackedSubjectState.sinceFaceSeen.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 256);
}

uint64_t TrackedSubjectState.sinceFaceSeen.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 256) = result;
  *(_BYTE *)(v2 + 264) = a2 & 1;
  return result;
}

uint64_t (*TrackedSubjectState.sinceFaceSeen.modify())()
{
  return nullsub_1;
}

uint64_t sub_23A5B9D68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A5B9DA0 + 4 * byte_23A69420D[a1]))(0x4972656B63617274, 0xE900000000000064);
}

uint64_t sub_23A5B9DA0()
{
  return 0x644965636166;
}

uint64_t sub_23A5B9DB4()
{
  return 0x786F4265636166;
}

uint64_t sub_23A5B9DDC()
{
  return 0x656C676E41776179;
}

uint64_t sub_23A5B9DF4()
{
  return 0x676E416863746970;
}

uint64_t sub_23A5B9E10()
{
  return 0x5072616C75676E61;
}

uint64_t sub_23A5B9E34()
{
  return 0x5672616C75676E61;
}

unint64_t sub_23A5B9E58()
{
  return 0xD000000000000013;
}

uint64_t sub_23A5B9F18()
{
  return 0x6576697463417369;
}

uint64_t sub_23A5B9F30()
{
  return 0x746867696577;
}

uint64_t sub_23A5B9F44()
{
  return 0x65636E6174736964;
}

uint64_t sub_23A5B9F5C()
{
  return 0x4965636146707369;
}

uint64_t sub_23A5B9F70()
{
  return 0x4979646F42707369;
}

uint64_t sub_23A5B9F84()
{
  return 1701869940;
}

uint64_t sub_23A5B9F94()
{
  return 0x63614665636E6973;
}

uint64_t sub_23A5B9FB8()
{
  unsigned __int8 *v0;

  return sub_23A5B9D68(*v0);
}

uint64_t sub_23A5B9FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5C8384(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A5B9FE4(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_23A5B9FF0()
{
  sub_23A5C769C();
  return sub_23A691638();
}

uint64_t sub_23A5BA018()
{
  sub_23A5C769C();
  return sub_23A691644();
}

uint64_t TrackedSubjectState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  char v61;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25699DF40) - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  v51 = *(_QWORD *)(v1 + 24);
  v52 = v6;
  v7 = *(_QWORD *)(v1 + 32);
  v49 = *(_QWORD *)(v1 + 40);
  v50 = v7;
  v8 = *(_QWORD *)(v1 + 48);
  v47 = *(_QWORD *)(v1 + 56);
  v48 = v8;
  v46 = *(_QWORD *)(v1 + 64);
  v45 = *(_QWORD *)(v1 + 72);
  v53 = *(_QWORD *)(v1 + 80);
  v60 = *(unsigned __int8 *)(v1 + 88);
  v43 = *(_QWORD *)(v1 + 96);
  v44 = *(unsigned __int8 *)(v1 + 104);
  v42 = *(_QWORD *)(v1 + 112);
  v41 = *(_QWORD *)(v1 + 120);
  v40 = *(_QWORD *)(v1 + 128);
  v39 = *(_QWORD *)(v1 + 136);
  v9 = *(_QWORD *)(v1 + 152);
  v38 = *(_QWORD *)(v1 + 144);
  v10 = *(_QWORD *)(v1 + 160);
  v11 = *(_QWORD *)(v1 + 168);
  v13 = *(_QWORD *)(v1 + 176);
  v12 = *(_QWORD *)(v1 + 184);
  v37 = *(unsigned __int8 *)(v1 + 192);
  v36 = *(unsigned __int8 *)(v1 + 193);
  v14 = *(_QWORD *)(v1 + 200);
  v35 = *(unsigned __int8 *)(v1 + 208);
  v16 = *(_QWORD *)(v1 + 216);
  v15 = *(_QWORD *)(v1 + 224);
  v32 = *(_QWORD *)(v1 + 232);
  v33 = *(_QWORD *)(v1 + 240);
  v34 = *(_QWORD *)(v1 + 248);
  v17 = *(unsigned __int8 *)(v1 + 264);
  v18 = a1[3];
  v19 = a1;
  v21 = v20;
  __swift_project_boxed_opaque_existential_1Tm(v19, v18);
  sub_23A5C769C();
  sub_23A69162C();
  LOBYTE(v56) = 0;
  v22 = v55;
  sub_23A6914D0();
  if (!v22)
  {
    v55 = v9;
    v30 = v11;
    v31 = v10;
    v28 = v12;
    v29 = v13;
    v27 = v14;
    v26 = v16;
    v25 = v15;
    v24[1] = v17;
    LOBYTE(v56) = 1;
    sub_23A6914D0();
    v56 = v52;
    v57 = v51;
    v58 = v50;
    v59 = v49;
    v61 = 2;
    type metadata accessor for CGRect(0);
    sub_23A5CFF58(&qword_25699DEC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_23A6914DC();
    v56 = v48;
    v57 = v47;
    v58 = v46;
    v59 = v45;
    v61 = 3;
    sub_23A6914DC();
    LOBYTE(v56) = 4;
    sub_23A69147C();
    LOBYTE(v56) = 5;
    sub_23A69147C();
    v56 = v42;
    v57 = v41;
    v61 = 6;
    type metadata accessor for CGPoint(0);
    sub_23A5CFF58(&qword_25699DF50, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDBD878]);
    sub_23A6914DC();
    v56 = v40;
    v57 = v39;
    v61 = 7;
    sub_23A6914DC();
    v56 = v38;
    v57 = v55;
    v61 = 8;
    sub_23A6914DC();
    v56 = v31;
    v57 = v30;
    v61 = 9;
    sub_23A6914DC();
    v56 = v29;
    v57 = v28;
    v61 = 10;
    sub_23A6914DC();
    LOBYTE(v56) = v37;
    v61 = 11;
    sub_23A5C76E0();
    sub_23A6914DC();
    LOBYTE(v56) = v36;
    v61 = 12;
    sub_23A6914DC();
    LOBYTE(v56) = 13;
    sub_23A6914B8();
    LOBYTE(v56) = 14;
    sub_23A6914AC();
    LOBYTE(v56) = 15;
    sub_23A6914B8();
    LOBYTE(v56) = 16;
    sub_23A6914B8();
    LOBYTE(v56) = 17;
    sub_23A6914D0();
    LOBYTE(v56) = 18;
    sub_23A6914D0();
    v56 = v34;
    v61 = 19;
    sub_23A5C7504();
    sub_23A6914DC();
    LOBYTE(v56) = 20;
    sub_23A69147C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v21);
}

uint64_t TrackedSubjectState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  int v72;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DF60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C769C();
  sub_23A691620();
  if (!v2)
  {
    LOBYTE(v67) = 0;
    v9 = sub_23A691434();
    LOBYTE(v67) = 1;
    v63 = sub_23A691434();
    v64 = a2;
    type metadata accessor for CGRect(0);
    v71 = 2;
    sub_23A5CFF58(&qword_25699DEE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_23A691440();
    v11 = v67;
    v10 = v68;
    v13 = v69;
    v12 = v70;
    v71 = 3;
    sub_23A691440();
    v15 = v67;
    v14 = v68;
    v16 = v69;
    v17 = v70;
    LOBYTE(v67) = 4;
    v18 = sub_23A6913E0();
    v20 = v19;
    LOBYTE(v67) = 5;
    v21 = sub_23A6913E0();
    v60 = v22;
    v72 = v20;
    v61 = v21;
    type metadata accessor for CGPoint(0);
    v71 = 6;
    v62 = sub_23A5CFF58(&qword_25699DF68, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDBD888]);
    sub_23A691440();
    v58 = v67;
    v59 = v68;
    v71 = 7;
    sub_23A691440();
    v56 = v67;
    v57 = v68;
    v71 = 8;
    sub_23A691440();
    v55 = v18;
    v53 = v67;
    v54 = v68;
    v71 = 9;
    sub_23A691440();
    v52 = v67;
    v51 = v68;
    v71 = 10;
    sub_23A691440();
    v62 = v67;
    v50 = v68;
    v71 = 11;
    sub_23A5C7724();
    sub_23A691440();
    LOBYTE(v20) = v67;
    v71 = 12;
    sub_23A691440();
    LOBYTE(v18) = v67;
    LOBYTE(v67) = 13;
    sub_23A69141C();
    v49 = v23;
    LOBYTE(v67) = 14;
    v48 = sub_23A691410();
    LOBYTE(v67) = 15;
    sub_23A69141C();
    v47 = v24;
    LOBYTE(v67) = 16;
    sub_23A69141C();
    v46 = v25;
    LOBYTE(v67) = 17;
    v45 = sub_23A691434();
    LOBYTE(v67) = 18;
    v44 = sub_23A691434();
    v71 = 19;
    sub_23A5C758C();
    sub_23A691440();
    v43 = v67;
    LOBYTE(v67) = 20;
    v42 = sub_23A6913E0();
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v29 = v72 & 1;
    v71 = v72 & 1;
    v30 = v60 & 1;
    v66 = v60 & 1;
    v31 = v48 & 1;
    v65 = v28 & 1;
    v33 = v63;
    v32 = v64;
    *v64 = v9;
    v32[1] = v33;
    v32[2] = v11;
    v32[3] = v10;
    v32[4] = v13;
    v32[5] = v12;
    v32[6] = v15;
    v32[7] = v14;
    v32[8] = v16;
    v32[9] = v17;
    v32[10] = v55;
    *((_BYTE *)v32 + 88) = v29;
    v32[12] = v61;
    *((_BYTE *)v32 + 104) = v30;
    v34 = v59;
    v32[14] = v58;
    v32[15] = v34;
    v35 = v57;
    v32[16] = v56;
    v32[17] = v35;
    v36 = v54;
    v32[18] = v53;
    v32[19] = v36;
    v37 = v51;
    v32[20] = v52;
    v32[21] = v37;
    v38 = v50;
    v32[22] = v62;
    v32[23] = v38;
    *((_BYTE *)v32 + 192) = v20;
    *((_BYTE *)v32 + 193) = v18;
    v32[25] = v49;
    *((_BYTE *)v32 + 208) = v31;
    v39 = v46;
    v32[27] = v47;
    v32[28] = v39;
    v40 = v44;
    v32[29] = v45;
    v32[30] = v40;
    v41 = v42;
    v32[31] = v43;
    v32[32] = v41;
    *((_BYTE *)v32 + 264) = v65;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_23A5BAEC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return TrackedSubjectState.init(from:)(a1, a2);
}

uint64_t sub_23A5BAED8(_QWORD *a1)
{
  return TrackedSubjectState.encode(to:)(a1);
}

uint64_t sub_23A5BAEEC()
{
  sub_23A5D00CC();
  return sub_23A690EDC();
}

uint64_t sub_23A5BAF48()
{
  sub_23A5D00CC();
  return sub_23A690EB8();
}

uint64_t InputSummary.faces.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InputSummary.faces.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*InputSummary.faces.modify())()
{
  return nullsub_1;
}

uint64_t InputSummary.bodies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InputSummary.bodies.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*InputSummary.bodies.modify())()
{
  return nullsub_1;
}

DockKitCore::InputSummary __swiftcall InputSummary.init(faces:bodies:)(Swift::OpaquePointer faces, Swift::OpaquePointer bodies)
{
  Swift::OpaquePointer *v2;
  DockKitCore::InputSummary result;

  v2->_rawValue = faces._rawValue;
  v2[1]._rawValue = bodies._rawValue;
  result.bodies = bodies;
  result.faces = faces;
  return result;
}

uint64_t sub_23A5BB01C()
{
  _BYTE *v0;

  if (*v0)
    return 0x736569646F62;
  else
    return 0x7365636166;
}

uint64_t sub_23A5BB050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5C8C9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A5BB074(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23A5BB080()
{
  sub_23A5C7768();
  return sub_23A691638();
}

uint64_t sub_23A5BB0A8()
{
  sub_23A5C7768();
  return sub_23A691644();
}

uint64_t InputSummary.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DF78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C7768();
  sub_23A69162C();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699DF88);
  sub_23A5CAEE4(&qword_25699DF90, &qword_25699DF88, (uint64_t (*)(void))sub_23A5C77F0, MEMORY[0x24BEE12A0]);
  sub_23A6914DC();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699DFA0);
    sub_23A5CAEE4(&qword_25699DFA8, &qword_25699DFA0, (uint64_t (*)(void))sub_23A5C7834, MEMORY[0x24BEE12A0]);
    sub_23A6914DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t InputSummary.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DFB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C7768();
  sub_23A691620();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699DF88);
  v13 = 0;
  sub_23A5CAEE4(&qword_25699DFC0, &qword_25699DF88, (uint64_t (*)(void))sub_23A5C7878, MEMORY[0x24BEE12D0]);
  sub_23A691440();
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699DFA0);
  v13 = 1;
  sub_23A5CAEE4(&qword_25699DFD0, &qword_25699DFA0, (uint64_t (*)(void))sub_23A5C78BC, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_23A691440();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5BB488@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return InputSummary.init(from:)(a1, a2);
}

uint64_t sub_23A5BB49C(_QWORD *a1)
{
  return InputSummary.encode(to:)(a1);
}

uint64_t sub_23A5BB4B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23A5BB4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23A5BB4EC())()
{
  return nullsub_1;
}

uint64_t sub_23A5BB4FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23A5BB528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

_QWORD *DebugMessage.__allocating_init(topic:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

_QWORD *DebugMessage.init(topic:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

BOOL sub_23A5BB598(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23A5BB5B0()
{
  sub_23A6915C0();
  sub_23A6915CC();
  return sub_23A6915FC();
}

uint64_t sub_23A5BB5F4()
{
  sub_23A6915C0();
  sub_23A6915CC();
  return sub_23A6915FC();
}

uint64_t sub_23A5BB634()
{
  _BYTE *v0;

  if (*v0)
    return 0x6567617373656DLL;
  else
    return 0x6369706F74;
}

uint64_t sub_23A5BB66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5C8D7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A5BB690()
{
  sub_23A5C7900();
  return sub_23A691638();
}

uint64_t sub_23A5BB6B8()
{
  sub_23A5C7900();
  return sub_23A691644();
}

uint64_t DebugMessage.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DebugMessage.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23A5BB730(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DFE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C7900();
  sub_23A69162C();
  v8[15] = 0;
  swift_bridgeObjectRetain();
  sub_23A6914A0();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    v8[14] = 1;
    swift_bridgeObjectRetain();
    sub_23A6914A0();
  }
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

uint64_t DebugMessage.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DebugMessage.init(from:)(a1);
  return v2;
}

uint64_t DebugMessage.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699DFF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C7900();
  sub_23A691620();
  if (v2)
  {
    type metadata accessor for DebugMessage();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v16 = 0;
    *(_QWORD *)(v1 + 16) = sub_23A691404();
    *(_QWORD *)(v1 + 24) = v9;
    v15 = 1;
    v11 = sub_23A691404();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 32) = v11;
    *(_QWORD *)(v3 + 40) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

uint64_t sub_23A5BBA5C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for DebugMessage();
  v5 = swift_allocObject();
  result = DebugMessage.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_23A5BBAB0(_QWORD *a1)
{
  return sub_23A5BB730(a1);
}

uint64_t static DockCoreInfo.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t DockCoreInfo.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type);
}

uint64_t DockCoreInfo.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DockCoreInfo.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_identifier;
  v4 = sub_23A69072C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DockCoreInfo.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type);
  if (v1 == 1)
  {
    v2 = 0x676E696B63617254;
LABEL_5:
    v4 = v2;
    swift_bridgeObjectRetain();
    sub_23A690E88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23A690E88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23A690E88();
    swift_bridgeObjectRelease();
    sub_23A6906F0();
    swift_bridgeObjectRetain();
    sub_23A690E88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v4;
  }
  if (v1 == 2)
  {
    v2 = 0x6D6F74737543;
    goto LABEL_5;
  }
  result = sub_23A69153C();
  __break(1u);
  return result;
}

id DockCoreInfo.__allocating_init(type:name:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  v9 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type] = a1;
  v10 = &v9[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  v11 = &v9[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_identifier];
  v12 = sub_23A69072C();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a4, v12);
  v16.receiver = v9;
  v16.super_class = v4;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a4, v12);
  return v14;
}

id DockCoreInfo.init(type:name:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type] = a1;
  v10 = &v4[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  v11 = &v4[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_identifier];
  v12 = sub_23A69072C();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a4, v12);
  v16.receiver = v4;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a4, v12);
  return v14;
}

id DockCoreInfo.__allocating_init(uuidString:)(_QWORD *a1, _QWORD *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return DockCoreInfo.init(uuidString:)(a1, a2);
}

id DockCoreInfo.init(uuidString:)(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  unint64_t v13;
  id result;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  objc_super v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC40);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A69072C();
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a1;
  v40 = a2;
  v43 = 45;
  v44 = 0xE100000000000000;
  sub_23A5C7964();
  v11 = v2;
  v12 = (_QWORD *)sub_23A6911E8();
  swift_bridgeObjectRelease();
  v13 = v12[2];
  if (v13 < 3)
    goto LABEL_2;
  v35 = v10;
  v36 = v7;
  v15 = sub_23A690E64();
  v17 = v15 == 0x676E696B63617274 && v16 == 0xED0000646E617473;
  if (v17 || (v18 = v15, v19 = v16, (sub_23A691518() & 1) != 0))
  {
    result = (id)swift_bridgeObjectRelease();
    v20 = 1;
    v21 = v8;
    v22 = (uint64_t)v36;
  }
  else
  {
    v23 = v18 == 0x6D6F74737563 && v19 == 0xE600000000000000;
    v21 = v8;
    v22 = (uint64_t)v36;
    if (v23)
    {
      result = (id)swift_bridgeObjectRelease();
    }
    else
    {
      v24 = sub_23A691518();
      result = (id)swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
LABEL_2:
        swift_bridgeObjectRelease();

        swift_deallocPartialClassInstance();
        return 0;
      }
    }
    v20 = 2;
  }
  v25 = v12[2];
  if (v13 == 3)
  {
    if (v25 < 3)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      return result;
    }
    v26 = v20;
    result = (id)swift_bridgeObjectRetain();
  }
  else
  {
    if (v25 < 2 || v25 < v13)
      goto LABEL_31;
    v26 = v20;
    v39 = v12;
    v40 = v12 + 4;
    v41 = 2;
    v42 = (2 * v13) | 1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E018);
    sub_23A5D03DC((unint64_t *)&unk_25699E020, &qword_25699E018, MEMORY[0x24BEE2170]);
    sub_23A690DEC();
    result = (id)swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type] = v26;
  if (v12[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_30;
  }
  v27 = v12[6];
  v28 = v12[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = &v11[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name];
  *(_QWORD *)v29 = v27;
  *((_QWORD *)v29 + 1) = v28;
  sub_23A6906E4();
  swift_bridgeObjectRelease();
  v30 = v37;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v22, 1, v21) == 1)
  {
    v31 = v35;
    sub_23A690720();
    sub_23A5C921C(v22, &qword_25699FC40);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v11[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_identifier], v31, v21);
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 32);
    v33 = v35;
    v32(v35, v22, v21);
    v32(&v11[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_identifier], (uint64_t)v33, v21);
  }

  v38.receiver = v11;
  v38.super_class = ObjectType;
  return objc_msgSendSuper2(&v38, sel_init);
}

Swift::Void __swiftcall DockCoreInfo.encode(with:)(NSCoder with)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = (void *)sub_23A691008();
  v3 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_23A690E04();
  v5 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

  sub_23A6906F0();
  v6 = (void *)sub_23A690E04();
  swift_bridgeObjectRelease();
  v7 = (id)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v6, v7);

}

id DockCoreInfo.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23A5C8E64();

  return v4;
}

id DockCoreInfo.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23A5C8E64();

  return v2;
}

uint64_t DockCoreInfo.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  swift_getObjectType();
  sub_23A5D0350(a1, (uint64_t)v6, &qword_2569A0330);
  if (!v7)
  {
    sub_23A5C921C((uint64_t)v6, &qword_2569A0330);
    goto LABEL_7;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v3 = 0;
    return v3 & 1;
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type) != *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type])
  {

    goto LABEL_7;
  }
  v3 = sub_23A690708();

  return v3 & 1;
}

uint64_t DockCoreInfo.hash.getter()
{
  sub_23A691608();
  sub_23A6915CC();
  sub_23A69072C();
  sub_23A5CFF58(&qword_25699E030, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23A690DE0();
  return sub_23A6915F0();
}

uint64_t sub_23A5BC9C4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701667182;
  if (*v0 != 1)
    v1 = 0x696669746E656469;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_23A5BCA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5C9324(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A5BCA38(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23A5BCA44()
{
  sub_23A5C9258();
  return sub_23A691638();
}

uint64_t sub_23A5BCA6C()
{
  sub_23A5C9258();
  return sub_23A691644();
}

uint64_t DockCoreInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E038);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C9258();
  sub_23A69162C();
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type);
  v10[7] = 0;
  sub_23A5C929C();
  sub_23A6914DC();
  if (!v2)
  {
    v10[6] = 1;
    sub_23A6914A0();
    v10[5] = 2;
    sub_23A69072C();
    sub_23A5CFF58(&qword_25699E050, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23A6914DC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

id DockCoreInfo.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DockCoreInfo.init(from:)(a1);
}

id DockCoreInfo.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  objc_class *ObjectType;
  uint64_t *v29;
  objc_super v30;
  char v31;
  uint64_t v32;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v24 = sub_23A69072C();
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E058);
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v10);
  sub_23A5C9258();
  v26 = v2;
  v11 = v29;
  sub_23A691620();
  if (v11)
  {
    v22 = ObjectType;
    v16 = v26;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v12 = v6;
    v13 = v24;
    v14 = v7;
    v31 = 0;
    sub_23A5C92E0();
    v15 = v25;
    sub_23A691440();
    v18 = v26;
    *(_QWORD *)&v26[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type] = v32;
    LOBYTE(v32) = 1;
    v19 = sub_23A691404();
    v20 = (uint64_t *)&v18[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name];
    *v20 = v19;
    v20[1] = v21;
    v29 = v20;
    LOBYTE(v32) = 2;
    sub_23A5CFF58(&qword_25699F500, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23A691440();
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v18[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_identifier], v12, v13);

    v30.receiver = v18;
    v30.super_class = ObjectType;
    v22 = objc_msgSendSuper2(&v30, sel_init);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  }
  return v22;
}

id sub_23A5BCFD0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  id result;

  v6 = objc_allocWithZone(v2);
  result = DockCoreInfo.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_23A5BD01C(_QWORD *a1)
{
  return DockCoreInfo.encode(to:)(a1);
}

unint64_t ActuatorType.init(rawValue:)(unint64_t a1)
{
  return sub_23A5C9464(a1);
}

unint64_t sub_23A5BD058@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_23A5C9464(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_23A5BD088(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_23A5BD094()
{
  return sub_23A6915CC();
}

BOOL sub_23A5BD0BC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t static Actuator.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static Actuator.Pitch.getter()
{
  return 0x6863746970;
}

uint64_t static Actuator.Yaw.getter()
{
  return 7823737;
}

uint64_t static Actuator.Roll.getter()
{
  return 1819045746;
}

uint64_t Actuator.actuatorType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore8Actuator_actuatorType);
}

double Actuator.minPosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore8Actuator_minPosition);
}

double Actuator.maxPosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore8Actuator_maxPosition);
}

double Actuator.maxSpeed.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore8Actuator_maxSpeed);
}

double Actuator.maxAcceleration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore8Actuator_maxAcceleration);
}

uint64_t Actuator.controlParams.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Actuator.cameraLimits.getter()
{
  return swift_bridgeObjectRetain();
}

double Actuator.softMinPosition.getter()
{
  return sub_23A5BD2A4(&OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
}

double Actuator.softMaxPosition.getter()
{
  return sub_23A5BD2A4(&OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
}

double Actuator.softMaxSpeed.getter()
{
  return sub_23A5BD2A4(&OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed);
}

double Actuator.currentPosition.getter()
{
  return sub_23A5BD2A4(&OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition);
}

double Actuator.currentVelocity.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  double v2;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  v2 = *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentVelocity);
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  return v2;
}

uint64_t sub_23A5BD21C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentVelocity);
  os_unfair_lock_unlock(v4 + 4);
  result = swift_release();
  *a2 = v5;
  return result;
}

double Actuator.currentAcceleration.getter()
{
  return sub_23A5BD2A4(&OBJC_IVAR____TtC11DockKitCore8Actuator__currentAcceleration);
}

double Actuator.homePosition.getter()
{
  return sub_23A5BD2A4(&OBJC_IVAR____TtC11DockKitCore8Actuator__homePosition);
}

double sub_23A5BD2A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  double v5;
  os_unfair_lock_s *v6;

  v3 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = *(double *)(v1 + *a1);
  v6 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v6 + 4);
  swift_release();
  return v5;
}

uint64_t sub_23A5BD32C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t result;

  v5 = *a1;
  v6 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  v7 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  v8 = *(_QWORD *)(v5 + *a2);
  v9 = *(os_unfair_lock_s **)(v5 + v6);
  swift_retain();
  os_unfair_lock_unlock(v9 + 4);
  result = swift_release();
  *a3 = v8;
  return result;
}

uint64_t sub_23A5BD3BC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  os_unfair_lock_s *v10;

  v6 = *a1;
  v7 = *a2;
  v8 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  v9 = *(os_unfair_lock_s **)(*a2 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v9 + 4);
  swift_release();
  *(_QWORD *)(v7 + *a5) = v6;
  v10 = *(os_unfair_lock_s **)(v7 + v8);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  return swift_release();
}

uint64_t Actuator.description.getter()
{
  sub_23A691290();
  sub_23A690E88();
  sub_23A6914F4();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  sub_23A691344();
  sub_23A690E88();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  return 0;
}

id Actuator.__allocating_init(id:name:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return Actuator.init(id:name:type:)(a1, a2, a3, a4);
}

id Actuator.init(id:name:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  objc_super v18;

  v9 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition] = 0;
  v10 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition] = 0;
  v11 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed] = 0;
  v12 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *(_QWORD *)&v4[v12] = v13;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator__currentVelocity] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator__currentAcceleration] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator__homePosition] = 0;
  v4[OBJC_IVAR____TtC11DockKitCore8Actuator_initialized] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator_targetPosition] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator_targetVelocity] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator_targetAcceleration] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator_actuatorType] = a4;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator_minPosition] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator_maxPosition] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator_maxSpeed] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore8Actuator_maxAcceleration] = 0;
  v14 = v4;
  v15 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v14[OBJC_IVAR____TtC11DockKitCore8Actuator_controlParams] = sub_23A5BD7D0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11DockKitCore8Actuator_cameraLimits] = v15;
  *(_QWORD *)&v4[v9] = 0;
  *(_QWORD *)&v4[v10] = 0;
  *(_QWORD *)&v4[v11] = 0;

  *(_QWORD *)&v14[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  v14[OBJC_IVAR____TtC11DockKitCore9Component_type] = 0;
  v16 = &v14[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *(_QWORD *)v16 = a2;
  *((_QWORD *)v16 + 1) = a3;
  v18.receiver = v14;
  v18.super_class = (Class)type metadata accessor for Component();
  return objc_msgSendSuper2(&v18, sel_init);
}

unint64_t sub_23A5BD7D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA48);
  v2 = (_QWORD *)sub_23A691398();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_23A5C6588(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23A5BD8E0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA18);
  v2 = (_QWORD *)sub_23A691398();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_23A5C6588(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23A5BD9F8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA10);
  v2 = (_QWORD *)sub_23A691398();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 64);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 4);
    v6 = *((_QWORD *)v4 - 3);
    v7 = *((_QWORD *)v4 - 2);
    v8 = *((_QWORD *)v4 - 1);
    v9 = *v4;
    swift_bridgeObjectRetain();
    result = sub_23A5C6588(v5, v6);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 16 * result);
    *v12 = v5;
    v12[1] = v6;
    v13 = v2[7] + 24 * result;
    *(_QWORD *)v13 = v7;
    *(_QWORD *)(v13 + 8) = v8;
    *(_BYTE *)(v13 + 16) = v9;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v2[2] = v16;
    v4 += 40;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23A5BDB38(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA00);
  v2 = sub_23A691398();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23A5D0350(v6, (uint64_t)&v15, &qword_25699EA08);
    v7 = v15;
    v8 = v16;
    result = sub_23A5C6588(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23A5D0394(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23A5BDC6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699E9F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FBE0);
  v6 = sub_23A691398();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23A5D0350(v12, (uint64_t)v5, (uint64_t *)&unk_25699E9F0);
    result = sub_23A5C66D0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23A69072C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7] + 56 * v16;
    v20 = *(_OWORD *)(v9 + 24);
    v21 = *((_QWORD *)v9 + 5);
    v22 = *((_QWORD *)v9 + 6);
    v23 = *(_OWORD *)(v9 + 8);
    *(_QWORD *)v19 = *(_QWORD *)v9;
    *(_OWORD *)(v19 + 8) = v23;
    *(_OWORD *)(v19 + 24) = v20;
    *(_QWORD *)(v19 + 40) = v21;
    *(_QWORD *)(v19 + 48) = v22;
    v24 = v7[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_11;
    v7[2] = v26;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23A5BDE24(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC10);
  v2 = (_QWORD *)sub_23A691398();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    sub_23A5D0340(v7);
    result = sub_23A5C6588(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (uint64_t *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id Actuator.__allocating_init(id:type:name:minPosition:maxPosition:maxSpeed:maxAcceleration:homePosition:controlParams:cameraLimits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11)
{
  objc_class *v11;
  id v23;

  v23 = objc_allocWithZone(v11);
  return Actuator.init(id:type:name:minPosition:maxPosition:maxSpeed:maxAcceleration:homePosition:controlParams:cameraLimits:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

id Actuator.init(id:type:name:minPosition:maxPosition:maxSpeed:maxAcceleration:homePosition:controlParams:cameraLimits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11)
{
  _BYTE *v11;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  objc_super v32;

  v22 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition;
  v23 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition;
  v24 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed;
  v25 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v26 = swift_allocObject();
  *(_QWORD *)&v11[v25] = v26;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator__currentVelocity] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator__currentAcceleration] = 0;
  v27 = OBJC_IVAR____TtC11DockKitCore8Actuator__homePosition;
  v28 = OBJC_IVAR____TtC11DockKitCore8Actuator_initialized;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_targetPosition] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_targetVelocity] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_targetAcceleration] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_actuatorType] = a2;
  *(double *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_minPosition] = a7;
  *(double *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_maxPosition] = a8;
  *(double *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_maxSpeed] = a9;
  *(double *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_maxAcceleration] = a10;
  *(double *)&v11[v27] = a11;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_controlParams] = a5;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore8Actuator_cameraLimits] = a6;
  *(double *)&v11[v22] = a7;
  *(double *)&v11[v23] = a8;
  *(double *)&v11[v24] = a9;
  v11[v28] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  *(_DWORD *)(v26 + 16) = 0;
  v11[OBJC_IVAR____TtC11DockKitCore9Component_type] = 0;
  v29 = &v11[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v29 = a3;
  v29[1] = a4;
  v32.receiver = v11;
  v32.super_class = (Class)type metadata accessor for Component();
  return objc_msgSendSuper2(&v32, sel_init);
}

Swift::Void __swiftcall Actuator.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  os_unfair_lock_s *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  sub_23A62DFC8(with.super.isa);
  v3 = (void *)sub_23A691008();
  v4 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  v5 = (void *)sub_23A690FC0();
  v6 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);

  v7 = (void *)sub_23A690FC0();
  v8 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);

  v9 = (void *)sub_23A690FC0();
  v10 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

  v11 = (void *)sub_23A690FC0();
  v12 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v11, v12);

  v13 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  v14 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v14 + 4);
  swift_release();
  v15 = *(os_unfair_lock_s **)(v1 + v13);
  swift_retain();
  os_unfair_lock_unlock(v15 + 4);
  swift_release();
  v16 = (void *)sub_23A690FC0();
  v17 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v16, v17);

  v18 = (void *)sub_23A690DB0();
  v19 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v18, v19);

  type metadata accessor for CameraLimit();
  v20 = (void *)sub_23A690F00();
  v21 = (id)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v20, v21);

}

id Actuator.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Actuator.init(coder:)(a1);
}

id Actuator.init(coder:)(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  _BYTE v41[24];
  uint64_t v42;

  v2 = v1;
  v39 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition] = 0;
  v38 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition] = 0;
  v37 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed] = 0;
  v4 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)&v2[v4] = v5;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore8Actuator__currentVelocity] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore8Actuator__currentAcceleration] = 0;
  v6 = OBJC_IVAR____TtC11DockKitCore8Actuator__homePosition;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore8Actuator__homePosition] = 0;
  v36 = OBJC_IVAR____TtC11DockKitCore8Actuator_initialized;
  v2[OBJC_IVAR____TtC11DockKitCore8Actuator_initialized] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore8Actuator_targetPosition] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore8Actuator_targetVelocity] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore8Actuator_targetAcceleration] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23A694020;
  v8 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  *(_QWORD *)(v7 + 32) = v8;
  v9 = v2;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v42)
  {
    if (swift_dynamicCast())
    {
      v10 = v40;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v41, &qword_2569A0330);
  }
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
LABEL_6:
  v35 = v10;
  v11 = objc_msgSend(v10, sel_integerValue);
  if ((unint64_t)v11 >= 4)
    v12 = 0;
  else
    v12 = v11;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore8Actuator_actuatorType] = v12;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_23A694020;
  *(_QWORD *)(v13 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v42)
  {
    if (swift_dynamicCast())
    {
      v14 = v40;
      goto LABEL_14;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v41, &qword_2569A0330);
  }
  v14 = 0;
LABEL_14:
  v34 = OBJC_IVAR____TtC11DockKitCore8Actuator_minPosition;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore8Actuator_minPosition] = v14;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23A694020;
  *(_QWORD *)(v15 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v42)
  {
    if (swift_dynamicCast())
    {
      v16 = v40;
      goto LABEL_19;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v41, &qword_2569A0330);
  }
  v16 = 0;
LABEL_19:
  v33 = OBJC_IVAR____TtC11DockKitCore8Actuator_maxPosition;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore8Actuator_maxPosition] = v16;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_23A694020;
  *(_QWORD *)(v17 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v42)
  {
    if (swift_dynamicCast())
    {
      v18 = *(double *)&v40;
      goto LABEL_24;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v41, &qword_2569A0330);
  }
  v18 = 0.0;
LABEL_24:
  v32 = OBJC_IVAR____TtC11DockKitCore8Actuator_maxSpeed;
  *(double *)&v9[OBJC_IVAR____TtC11DockKitCore8Actuator_maxSpeed] = fabs(v18);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_23A694020;
  *(_QWORD *)(v19 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v42)
  {
    if (swift_dynamicCast())
    {
      v20 = v40;
      goto LABEL_29;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v41, &qword_2569A0330);
  }
  v20 = 0;
LABEL_29:
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore8Actuator_maxAcceleration] = v20;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_23A694020;
  *(_QWORD *)(v21 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v42)
  {
    if (swift_dynamicCast())
    {
      v22 = v40;
      goto LABEL_34;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v41, &qword_2569A0330);
  }
  v22 = 0;
LABEL_34:
  *(_QWORD *)&v2[v6] = v22;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_23A694030;
  *(_QWORD *)(v23 + 32) = v8;
  v24 = sub_23A5D03A4(0, (unint64_t *)&unk_2569A04C0);
  *(_QWORD *)(v23 + 40) = v24;
  v25 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  *(_QWORD *)(v23 + 48) = v25;
  *(_QWORD *)(v23 + 56) = sub_23A5D03A4(0, &qword_2569A0120);
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v42)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E138);
    if (swift_dynamicCast())
    {
      v26 = (unint64_t)v40;
      goto LABEL_39;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v41, &qword_2569A0330);
  }
  v26 = sub_23A5BD7D0(MEMORY[0x24BEE4AF8]);
LABEL_39:
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore8Actuator_controlParams] = v26;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_23A694030;
  *(_QWORD *)(v27 + 32) = type metadata accessor for CameraLimit();
  *(_QWORD *)(v27 + 40) = v8;
  *(_QWORD *)(v27 + 48) = v24;
  *(_QWORD *)(v27 + 56) = v25;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v42)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E130);
    if (swift_dynamicCast())
    {
      v28 = v40;
      goto LABEL_44;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v41, &qword_2569A0330);
  }
  v28 = (void *)MEMORY[0x24BEE4AF8];
LABEL_44:
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore8Actuator_cameraLimits] = v28;
  *(_QWORD *)&v2[v39] = *(_QWORD *)&v9[v34];
  *(_QWORD *)&v2[v38] = *(_QWORD *)&v9[v33];
  *(_QWORD *)&v2[v37] = *(_QWORD *)&v9[v32];
  v2[v36] = 1;

  v29 = sub_23A62EFC8();
  v30 = v29;

  if (v29)
  return v29;
}

Swift::Double_optional __swiftcall Actuator.getControlParam(name:)(Swift::String name)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t v5;
  char v6;
  uint64_t v7;
  double v8;
  Swift::Bool v9;
  Swift::Double_optional result;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore8Actuator_controlParams);
  if (*(_QWORD *)(v2 + 16))
  {
    object = name._object;
    countAndFlagsBits = name._countAndFlagsBits;
    swift_bridgeObjectRetain();
    v5 = sub_23A5C6588(countAndFlagsBits, (uint64_t)object);
    if ((v6 & 1) != 0)
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
    else
      LOBYTE(v7) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v7) = 0;
  }
  v9 = v7;
  result.value = v8;
  result.is_nil = v9;
  return result;
}

uint64_t sub_23A5BEF08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

double sub_23A5BEF90()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_progress);
}

void sub_23A5BEFA0(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_progress) = a1;
}

uint64_t (*sub_23A5BEFB0())()
{
  return nullsub_1;
}

id sub_23A5BEFC8()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual);
}

void sub_23A5BEFD8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual) = a1;

}

uint64_t (*sub_23A5BEFEC())()
{
  return nullsub_1;
}

id sub_23A5BF004()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command);
}

void sub_23A5BF014(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command) = a1;

}

uint64_t (*sub_23A5BF028())()
{
  return nullsub_1;
}

id sub_23A5BF040()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference);
}

void sub_23A5BF050(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference) = a1;

}

uint64_t (*sub_23A5BF064())()
{
  return nullsub_1;
}

void sub_23A5BF07C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status);
}

_BYTE *sub_23A5BF090(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status) = *result;
  return result;
}

uint64_t (*sub_23A5BF0A4())()
{
  return nullsub_1;
}

uint64_t sub_23A5BF0BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_statusMessage);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23A5BF0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_statusMessage);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23A5BF110())()
{
  return nullsub_1;
}

id TrajectoryProgress.__allocating_init(status:statusMessage:)(char *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return TrajectoryProgress.init(status:statusMessage:)(a1, a2, a3);
}

id TrajectoryProgress.init(status:statusMessage:)(char *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_super v15;

  v6 = *a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_progress] = 0;
  v7 = OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual;
  v8 = (objc_class *)type metadata accessor for TrajectoryPoint();
  v9 = objc_allocWithZone(v8);
  v10 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v9, sel_init);
  v11 = OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone(v8), sel_init);
  v12 = OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference;
  *(_QWORD *)&v10[v12] = objc_msgSend(objc_allocWithZone(v8), sel_init);
  v13 = &v10[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_statusMessage];
  v10[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status] = v6;
  *(_QWORD *)v13 = a2;
  *((_QWORD *)v13 + 1) = a3;

  v15.receiver = v10;
  v15.super_class = (Class)type metadata accessor for TrajectoryProgress();
  return objc_msgSendSuper2(&v15, sel_init);
}

void sub_23A5BF268(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13[32];

  v2 = v1;
  v13[0] = *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status);
  v4 = v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_statusMessage;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_statusMessage);
  v6 = *(_QWORD *)(v4 + 8);
  v7 = (objc_class *)type metadata accessor for TrajectoryProgress();
  objc_allocWithZone(v7);
  swift_bridgeObjectRetain();
  v8 = (char *)TrajectoryProgress.init(status:statusMessage:)(v13, v5, v6);
  *(_QWORD *)&v8[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_progress] = *(_QWORD *)(v2
                                                                                         + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_progress);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual), sel_copy);
  sub_23A6911F4();
  swift_unknownObjectRelease();
  type metadata accessor for TrajectoryPoint();
  swift_dynamicCast();
  v9 = *(void **)&v8[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual];
  *(_QWORD *)&v8[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual] = v12;

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command), sel_copy);
  sub_23A6911F4();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  v10 = *(void **)&v8[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command];
  *(_QWORD *)&v8[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command] = v12;

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference), sel_copy);
  sub_23A6911F4();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  v11 = *(void **)&v8[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference];
  *(_QWORD *)&v8[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference] = v12;

  a1[3] = v7;
  *a1 = v8;
}

void TrajectoryProgress.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23A5BF490()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A5BF4C0 + 4 * byte_23A694222[*v0]))(0x73736572676F7270, 0xE800000000000000);
}

uint64_t sub_23A5BF4C0()
{
  return 0x6C6175746361;
}

uint64_t sub_23A5BF4D4()
{
  return 0x646E616D6D6F63;
}

uint64_t sub_23A5BF4EC()
{
  return 0x636E657265666572;
}

uint64_t sub_23A5BF508()
{
  return 0x737574617473;
}

uint64_t sub_23A5BF51C()
{
  return 0x654D737574617473;
}

uint64_t sub_23A5BF540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5C997C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A5BF564(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23A5BF570()
{
  sub_23A5C97C8();
  return sub_23A691638();
}

uint64_t sub_23A5BF598()
{
  sub_23A5C97C8();
  return sub_23A691644();
}

id TrajectoryProgress.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for TrajectoryProgress);
}

uint64_t sub_23A5BF628(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E170);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C97C8();
  sub_23A69162C();
  LOBYTE(v12) = 0;
  sub_23A6914B8();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual);
  HIBYTE(v11) = 1;
  type metadata accessor for TrajectoryPoint();
  sub_23A5CFF58(&qword_25699E180, v9, (uint64_t (*)(uint64_t))type metadata accessor for TrajectoryPoint, (uint64_t)&protocol conformance descriptor for TrajectoryPoint);
  sub_23A6914DC();
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command);
  HIBYTE(v11) = 2;
  sub_23A6914DC();
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference);
  HIBYTE(v11) = 3;
  sub_23A6914DC();
  LOBYTE(v12) = *(_BYTE *)(v3 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status);
  HIBYTE(v11) = 4;
  sub_23A5C980C();
  sub_23A6914DC();
  LOBYTE(v12) = 5;
  swift_bridgeObjectRetain();
  sub_23A691470();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

void *TrajectoryProgress.__allocating_init(from:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TrajectoryProgress.init(from:)(a1);
}

void *TrajectoryProgress.init(from:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  objc_class *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  objc_super v48;
  char v49;
  uint64_t v50;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E190);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_progress;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_progress] = 0;
  v7 = OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual;
  v8 = (objc_class *)type metadata accessor for TrajectoryPoint();
  v9 = objc_allocWithZone(v8);
  v10 = v1;
  v11 = objc_msgSend(v9, sel_init);
  v44 = v7;
  v45 = v1;
  *(_QWORD *)&v1[v7] = v11;
  v12 = OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command;
  v13 = objc_msgSend(objc_allocWithZone(v8), sel_init);
  v47 = v12;
  *(_QWORD *)&v10[v12] = v13;
  v14 = OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference;
  *(_QWORD *)&v10[v14] = objc_msgSend(objc_allocWithZone(v8), sel_init);
  v15 = OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status;
  v10[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status] = 0;
  v16 = (uint64_t *)&v10[OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_statusMessage];
  *v16 = 0;
  v16[1] = 0;
  v41 = v16;
  v42 = v14;
  v17 = *(_QWORD *)(a1 + 24);
  v43 = a1;
  v18 = (_QWORD *)a1;
  v19 = v5;
  v20 = __swift_project_boxed_opaque_existential_1Tm(v18, v17);
  sub_23A5C97C8();
  v21 = v46;
  sub_23A691620();
  if (v21)
  {
    v24 = v44;
    v25 = v45;
    v26 = v42;
    __swift_destroy_boxed_opaque_existential_1Tm(v43);

    swift_bridgeObjectRelease();
    type metadata accessor for TrajectoryProgress();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v22 = v6;
    LOBYTE(v50) = 0;
    v23 = v40;
    sub_23A69141C();
    v46 = v15;
    v28 = v45;
    *(_QWORD *)&v45[v22] = v29;
    v49 = 1;
    sub_23A5CFF58(&qword_25699E198, v30, (uint64_t (*)(uint64_t))type metadata accessor for TrajectoryPoint, (uint64_t)&protocol conformance descriptor for TrajectoryPoint);
    sub_23A691440();
    v31 = *(void **)&v28[v44];
    *(_QWORD *)&v28[v44] = v50;

    v49 = 2;
    sub_23A691440();
    v32 = *(void **)&v10[v47];
    *(_QWORD *)&v10[v47] = v50;

    v49 = 3;
    sub_23A691440();
    v33 = *(void **)&v10[v42];
    *(_QWORD *)&v10[v42] = v50;

    v49 = 4;
    sub_23A5C9850();
    sub_23A691440();
    v10[v46] = v50;
    LOBYTE(v50) = 5;
    v34 = sub_23A6913D4();
    v35 = v39;
    v36 = v41;
    *v41 = v34;
    v36[1] = v37;

    swift_bridgeObjectRelease();
    v38 = (objc_class *)type metadata accessor for TrajectoryProgress();
    v48.receiver = v10;
    v48.super_class = v38;
    v20 = objc_msgSendSuper2(&v48, sel_init);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v23);
    __swift_destroy_boxed_opaque_existential_1Tm(v43);
  }
  return v20;
}

uint64_t sub_23A5BFD18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23A5C0984(a1, type metadata accessor for TrajectoryProgress, (uint64_t (*)(uint64_t))TrajectoryProgress.init(from:), a2);
}

uint64_t sub_23A5BFD3C(_QWORD *a1)
{
  return sub_23A5BF628(a1);
}

DockKitCore::TrajectoryStatus_optional __swiftcall TrajectoryStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (DockKitCore::TrajectoryStatus_optional)rawValue;
}

DockKitCore::TrajectoryStatus_optional sub_23A5BFD70(Swift::Int *a1)
{
  return TrajectoryStatus.init(rawValue:)(*a1);
}

uint64_t sub_23A5BFD78()
{
  sub_23A5D0088();
  return sub_23A690EDC();
}

uint64_t sub_23A5BFDD4()
{
  sub_23A5D0088();
  return sub_23A690EB8();
}

double sub_23A5BFE20()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time);
}

void sub_23A5BFE30(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time) = a1;
}

uint64_t (*sub_23A5BFE40())()
{
  return nullsub_1;
}

uint64_t sub_23A5BFE58()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A5BFE68(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23A5BFE80())()
{
  return nullsub_1;
}

uint64_t sub_23A5BFE98()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A5BFEA8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23A5BFEC0())()
{
  return nullsub_1;
}

id TrajectoryPoint.init()()
{
  char *v0;
  uint64_t v1;
  objc_super v3;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time] = 0;
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities] = v1;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for TrajectoryPoint();
  return objc_msgSendSuper2(&v3, sel_init);
}

id TrajectoryPoint.__allocating_init(time:positions:velocities:)(uint64_t a1, uint64_t a2, double a3)
{
  objc_class *v3;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions;
  v9 = OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities;
  *(double *)&v7[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time] = a3;
  *(_QWORD *)&v7[v8] = a1;
  *(_QWORD *)&v7[v9] = a2;
  v11.receiver = v7;
  v11.super_class = v3;
  return objc_msgSendSuper2(&v11, sel_init);
}

id TrajectoryPoint.init(time:positions:velocities:)(uint64_t a1, uint64_t a2, double a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  v4 = OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions;
  v5 = OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities;
  *(double *)&v3[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time] = a3;
  *(_QWORD *)&v3[v4] = a1;
  *(_QWORD *)&v3[v5] = a2;
  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for TrajectoryPoint();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_23A5C0108@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *v3;
  char *v4;
  uint64_t result;

  v3 = (objc_class *)type metadata accessor for TrajectoryPoint();
  v4 = (char *)objc_msgSend(objc_allocWithZone(v3), sel_init);
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time] = *(_QWORD *)(v1
                                                                                  + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time);
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions] = *(_QWORD *)(v1
                                                                                       + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities] = *(_QWORD *)(v1
                                                                                        + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  a1[3] = v3;
  *a1 = v4;
  return result;
}

uint64_t sub_23A5C01B4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr))
{
  id v5;
  uint64_t v6;
  _QWORD v8[4];

  v5 = a1;
  a4(v8);

  __swift_project_boxed_opaque_existential_1Tm(v8, v8[3]);
  v6 = sub_23A69150C();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v6;
}

id sub_23A5C0220(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_23A690E04();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23A5C0278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23A691290();
  sub_23A690E88();
  sub_23A690FCC();
  sub_23A690E88();
  v0 = swift_bridgeObjectRetain();
  v1 = MEMORY[0x24BEE13C8];
  MEMORY[0x23B852DA8](v0, MEMORY[0x24BEE13C8]);
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  v2 = swift_bridgeObjectRetain();
  MEMORY[0x23B852DA8](v2, v1);
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  return 0;
}

uint64_t sub_23A5C03BC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E6F697469736F70;
  if (*v0 != 1)
    v1 = 0x697469636F6C6576;
  if (*v0)
    return v1;
  else
    return 1701669236;
}

uint64_t sub_23A5C0418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5C9C1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A5C043C()
{
  sub_23A5C9894();
  return sub_23A691638();
}

uint64_t sub_23A5C0464()
{
  sub_23A5C9894();
  return sub_23A691644();
}

id TrajectoryPoint.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for TrajectoryPoint);
}

uint64_t sub_23A5C04D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E1C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C9894();
  sub_23A69162C();
  LOBYTE(v11) = 0;
  sub_23A6914B8();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions);
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E1D0);
    sub_23A5C98D8(&qword_25699E1D8, MEMORY[0x24BEE13D8], MEMORY[0x24BEE12A0]);
    sub_23A6914DC();
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities);
    HIBYTE(v10) = 2;
    sub_23A6914DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

char *TrajectoryPoint.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TrajectoryPoint.init(from:)(a1);
}

char *TrajectoryPoint.init(from:)(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  char v24;
  uint64_t v25;

  v2 = v1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E1E0);
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time] = 0;
  v8 = MEMORY[0x24BEE4AF8];
  v21 = OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions] = MEMORY[0x24BEE4AF8];
  v18 = OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities;
  v19 = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities] = v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5C9894();
  v20 = v2;
  v9 = v22;
  sub_23A691620();
  if (v9)
  {
    v12 = v20;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for TrajectoryPoint();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v25) = 0;
    v10 = v17;
    sub_23A69141C();
    *(_QWORD *)&v2[v7] = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E1D0);
    v24 = 1;
    sub_23A5C98D8(&qword_25699E1E8, MEMORY[0x24BEE1400], MEMORY[0x24BEE12D0]);
    sub_23A691440();
    *(_QWORD *)&v2[v21] = v25;
    swift_bridgeObjectRelease();
    v24 = 2;
    sub_23A691440();
    *(_QWORD *)&v2[v18] = v25;
    v14 = v20;

    swift_bridgeObjectRelease();
    v15 = (objc_class *)type metadata accessor for TrajectoryPoint();
    v23.receiver = v14;
    v23.super_class = v15;
    v2 = (char *)objc_msgSendSuper2(&v23, sel_init);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  }
  return v2;
}

uint64_t sub_23A5C0960@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23A5C0984(a1, type metadata accessor for TrajectoryPoint, (uint64_t (*)(uint64_t))TrajectoryPoint.init(from:), a2);
}

uint64_t sub_23A5C0984@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  id v8;
  uint64_t result;

  v8 = objc_allocWithZone((Class)a2());
  result = a3(a1);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_23A5C09D8(_QWORD *a1)
{
  return sub_23A5C04D0(a1);
}

uint64_t ActuatorLimit.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double ActuatorLimit.minPosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double ActuatorLimit.maxPosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double ActuatorLimit.maxSpeed.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ActuatorLimit.init(name:minPosition:maxPosition:maxSpeed:)(DockKitCore::ActuatorLimit *__return_ptr retstr, Swift::String name, Swift::Double minPosition, Swift::Double maxPosition, Swift::Double maxSpeed)
{
  uint64_t v5;

  if (maxSpeed >= 0.0)
  {
    retstr->name = name;
    retstr->minPosition = minPosition;
    retstr->maxPosition = maxPosition;
    retstr->maxSpeed = maxSpeed;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23A5C9938();
    swift_allocError();
    *(_QWORD *)v5 = 0xD00000000000001CLL;
    *(_QWORD *)(v5 + 8) = 0x800000023A69C080;
    *(_BYTE *)(v5 + 16) = 22;
    swift_willThrow();
  }
}

uint64_t static CameraLimit.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t CameraLimit.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore11CameraLimit_model);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CameraLimit.camera.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore11CameraLimit_camera);
}

uint64_t CameraLimit.minPosition.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore11CameraLimit_minPosition);
}

uint64_t CameraLimit.maxPosition.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore11CameraLimit_maxPosition);
}

id CameraLimit.__allocating_init(model:camera:minPosition:maxPosition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  objc_class *v7;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  objc_super v20;

  v15 = (char *)objc_allocWithZone(v7);
  v16 = &v15[OBJC_IVAR____TtC11DockKitCore11CameraLimit_model];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11DockKitCore11CameraLimit_camera] = a3;
  v17 = &v15[OBJC_IVAR____TtC11DockKitCore11CameraLimit_minPosition];
  *(_QWORD *)v17 = a4;
  v17[8] = a5 & 1;
  v18 = &v15[OBJC_IVAR____TtC11DockKitCore11CameraLimit_maxPosition];
  *(_QWORD *)v18 = a6;
  v18[8] = a7 & 1;
  v20.receiver = v15;
  v20.super_class = v7;
  return objc_msgSendSuper2(&v20, sel_init);
}

id CameraLimit.init(model:camera:minPosition:maxPosition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  char *v7;
  objc_class *ObjectType;
  char *v16;
  char *v17;
  char *v18;
  objc_super v20;

  ObjectType = (objc_class *)swift_getObjectType();
  v16 = &v7[OBJC_IVAR____TtC11DockKitCore11CameraLimit_model];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore11CameraLimit_camera] = a3;
  v17 = &v7[OBJC_IVAR____TtC11DockKitCore11CameraLimit_minPosition];
  *(_QWORD *)v17 = a4;
  v17[8] = a5 & 1;
  v18 = &v7[OBJC_IVAR____TtC11DockKitCore11CameraLimit_maxPosition];
  *(_QWORD *)v18 = a6;
  v18[8] = a7 & 1;
  v20.receiver = v7;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_init);
}

Swift::Void __swiftcall CameraLimit.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v3 = (void *)sub_23A690E04();
  v4 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  v5 = (void *)sub_23A691008();
  v6 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore11CameraLimit_minPosition + 8) & 1) != 0)
    v7 = 0;
  else
    v7 = (void *)sub_23A690FC0();
  v8 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore11CameraLimit_maxPosition + 8) & 1) != 0)
    v9 = 0;
  else
    v9 = (void *)sub_23A690FC0();
  v10 = (id)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

}

id CameraLimit.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23A5C9D78();

  return v4;
}

id CameraLimit.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23A5C9D78();

  return v2;
}

id CameraLimit.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CameraLimit.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23A5C0FE4(char *a1)
{
  sub_23A6094E4(*a1);
}

void sub_23A5C0FF0()
{
  char *v0;

  sub_23A683E94(*v0);
}

void sub_23A5C0FF8(uint64_t a1)
{
  char *v1;

  sub_23A68414C(a1, *v1);
}

void sub_23A5C1000(uint64_t a1)
{
  char *v1;

  sub_23A684208(a1, *v1);
}

uint64_t sub_23A5C1008@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23A5CA4FC();
  *a1 = result;
  return result;
}

uint64_t sub_23A5C1034()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23A5C1068 + 4 * byte_23A694228[*v0]))();
}

void sub_23A5C1068(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xED00006F72502032;
}

void sub_23A5C1080(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x800000023A69A690;
}

void sub_23A5C10A0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xEE00696E696D2032;
}

void sub_23A5C10B8(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1 + 1;
}

void sub_23A5C10C4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xEE00696E696D2033;
}

DockKitCore::TrajectoryCommand::Animation_optional __swiftcall TrajectoryCommand.Animation.init(rawValue:)(DockKitCore::TrajectoryCommand::Animation_optional rawValue)
{
  DockKitCore::TrajectoryCommand::Animation *v1;
  DockKitCore::TrajectoryCommand::Animation value;

  value = rawValue.value;
  if (rawValue.value >= DockKitCore_TrajectoryCommand_Animation_unknownDefault)
    value = DockKitCore_TrajectoryCommand_Animation_unknownDefault;
  *v1 = value;
  return rawValue;
}

DockKitCore::TrajectoryCommand::Animation_optional sub_23A5C1100(Swift::UInt8 *a1)
{
  return TrajectoryCommand.Animation.init(rawValue:)(*a1);
}

uint64_t sub_23A5C1108()
{
  sub_23A5D0044();
  return sub_23A690EE8();
}

uint64_t sub_23A5C1164()
{
  sub_23A5D0044();
  return sub_23A690EC4();
}

DockKitCore::TrajectoryCommand::Priority_optional __swiftcall TrajectoryCommand.Priority.init(rawValue:)(DockKitCore::TrajectoryCommand::Priority_optional rawValue)
{
  _BYTE *v1;
  unsigned int v2;

  v2 = 0x2010003u >> (8 * rawValue.value);
  if ((rawValue.value & 0xFC) != 0)
    LOBYTE(v2) = 3;
  *v1 = v2;
  return rawValue;
}

uint64_t TrajectoryCommand.Priority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

uint64_t sub_23A5C11E4()
{
  sub_23A6915C0();
  sub_23A6915D8();
  return sub_23A6915FC();
}

uint64_t sub_23A5C1228()
{
  return sub_23A6915D8();
}

uint64_t sub_23A5C1254()
{
  sub_23A6915C0();
  sub_23A6915D8();
  return sub_23A6915FC();
}

DockKitCore::TrajectoryCommand::Priority_optional sub_23A5C1294(Swift::UInt8 *a1)
{
  return TrajectoryCommand.Priority.init(rawValue:)(*a1);
}

void sub_23A5C129C(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1 + 1;
}

uint64_t sub_23A5C12AC()
{
  sub_23A5D0000();
  return sub_23A690EE8();
}

uint64_t sub_23A5C1308()
{
  sub_23A5D0000();
  return sub_23A690EC4();
}

double TrajectoryCommand.TrajectoryPoint.time.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void TrajectoryCommand.TrajectoryPoint.time.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*TrajectoryCommand.TrajectoryPoint.time.modify())()
{
  return nullsub_1;
}

double TrajectoryCommand.TrajectoryPoint.position.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void TrajectoryCommand.TrajectoryPoint.position.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*TrajectoryCommand.TrajectoryPoint.position.modify())()
{
  return nullsub_1;
}

double TrajectoryCommand.TrajectoryPoint.velocity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void TrajectoryCommand.TrajectoryPoint.velocity.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*TrajectoryCommand.TrajectoryPoint.velocity.modify())()
{
  return nullsub_1;
}

DockKitCore::TrajectoryCommand::TrajectoryPoint __swiftcall TrajectoryCommand.TrajectoryPoint.init()()
{
  _QWORD *v0;
  DockKitCore::TrajectoryCommand::TrajectoryPoint result;

  *v0 = 0;
  v0[1] = 0;
  v0[2] = 0;
  return result;
}

DockKitCore::TrajectoryCommand::TrajectoryPoint __swiftcall TrajectoryCommand.TrajectoryPoint.init(time:position:velocity:)(Swift::Double time, Swift::Double position, Swift::Double velocity)
{
  Swift::Double *v3;
  DockKitCore::TrajectoryCommand::TrajectoryPoint result;

  *v3 = time;
  v3[1] = position;
  v3[2] = velocity;
  result.velocity = velocity;
  result.position = position;
  result.time = time;
  return result;
}

uint64_t sub_23A5C13CC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E6F697469736F70;
  if (*v0 != 1)
    v1 = 0x797469636F6C6576;
  if (*v0)
    return v1;
  else
    return 1701669236;
}

uint64_t sub_23A5C1420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5CA544(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A5C1444()
{
  sub_23A5CA100();
  return sub_23A691638();
}

uint64_t sub_23A5C146C()
{
  sub_23A5CA100();
  return sub_23A691644();
}

uint64_t TrajectoryCommand.TrajectoryPoint.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E218);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5CA100();
  sub_23A69162C();
  v11 = 0;
  sub_23A6914B8();
  if (!v1)
  {
    v10 = 1;
    sub_23A6914B8();
    v9 = 2;
    sub_23A6914B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t TrajectoryCommand.TrajectoryPoint.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E228);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5CA100();
  sub_23A691620();
  if (!v2)
  {
    v16[15] = 0;
    sub_23A69141C();
    v10 = v9;
    v16[14] = 1;
    sub_23A69141C();
    v13 = v12;
    v16[13] = 2;
    sub_23A69141C();
    v15 = v14;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v13;
    a2[2] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_23A5C1768@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return TrajectoryCommand.TrajectoryPoint.init(from:)(a1, a2);
}

uint64_t sub_23A5C177C(_QWORD *a1)
{
  return TrajectoryCommand.TrajectoryPoint.encode(to:)(a1);
}

uint64_t TrajectoryCommand.Trajectory.points.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TrajectoryCommand.Trajectory.points.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*TrajectoryCommand.Trajectory.points.modify())()
{
  return nullsub_1;
}

double TrajectoryCommand.Trajectory.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void TrajectoryCommand.Trajectory.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*TrajectoryCommand.Trajectory.duration.modify())()
{
  return nullsub_1;
}

uint64_t TrajectoryCommand.Trajectory.actuatorId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TrajectoryCommand.Trajectory.actuatorId.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*TrajectoryCommand.Trajectory.actuatorId.modify())()
{
  return nullsub_1;
}

uint64_t TrajectoryCommand.Trajectory.relative.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t TrajectoryCommand.Trajectory.relative.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*TrajectoryCommand.Trajectory.relative.modify())()
{
  return nullsub_1;
}

uint64_t TrajectoryCommand.Trajectory.positionCommand.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t TrajectoryCommand.Trajectory.positionCommand.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = result;
  return result;
}

uint64_t (*TrajectoryCommand.Trajectory.positionCommand.modify())()
{
  return nullsub_1;
}

uint64_t TrajectoryCommand.Trajectory.velocityCommand.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t TrajectoryCommand.Trajectory.velocityCommand.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 26) = result;
  return result;
}

uint64_t (*TrajectoryCommand.Trajectory.velocityCommand.modify())()
{
  return nullsub_1;
}

DockKitCore::TrajectoryCommand::Trajectory __swiftcall TrajectoryCommand.Trajectory.init()()
{
  uint64_t v0;
  uint64_t v1;
  DockKitCore::TrajectoryCommand::Trajectory result;

  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 8) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)v0 = v1;
  *(_DWORD *)(v0 + 23) = 0;
  return result;
}

uint64_t sub_23A5C1888()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A5C18B4 + 4 * byte_23A69422E[*v0]))(0x73746E696F70, 0xE600000000000000);
}

uint64_t sub_23A5C18B4()
{
  return 0x6E6F697461727564;
}

uint64_t sub_23A5C18CC()
{
  return 0x726F746175746361;
}

uint64_t sub_23A5C18E8()
{
  return 0x65766974616C6572;
}

uint64_t sub_23A5C1900()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_23A5C1938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5CA688(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A5C195C()
{
  sub_23A5CA144();
  return sub_23A691638();
}

uint64_t sub_23A5C1984()
{
  sub_23A5CA144();
  return sub_23A691644();
}

uint64_t TrajectoryCommand.Trajectory.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  _DWORD v11[6];
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E230);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v12 = v1[2];
  v9 = *((unsigned __int8 *)v1 + 24);
  v11[4] = *((unsigned __int8 *)v1 + 25);
  v11[5] = v9;
  v11[3] = *((unsigned __int8 *)v1 + 26);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5CA144();
  sub_23A69162C();
  v19 = v8;
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E240);
  sub_23A5CAEE4(&qword_25699E248, &qword_25699E240, (uint64_t (*)(void))sub_23A5CA188, MEMORY[0x24BEE12A0]);
  sub_23A6914DC();
  if (!v2)
  {
    v17 = 1;
    sub_23A6914B8();
    v16 = 2;
    sub_23A6914D0();
    v15 = 3;
    sub_23A6914AC();
    v14 = 4;
    sub_23A6914AC();
    v13 = 5;
    sub_23A6914AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TrajectoryCommand.Trajectory.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E258);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5CA144();
  sub_23A691620();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E240);
    v23 = 0;
    sub_23A5CAEE4(&qword_25699E260, &qword_25699E240, (uint64_t (*)(void))sub_23A5CA1CC, MEMORY[0x24BEE12D0]);
    sub_23A691440();
    v10 = v24;
    v22 = 1;
    swift_bridgeObjectRetain();
    sub_23A69141C();
    v12 = v11;
    v21 = 2;
    v13 = sub_23A691434();
    v20 = 3;
    v17 = sub_23A691410();
    v19 = 4;
    v16 = sub_23A691410();
    v18 = 5;
    v14 = sub_23A691410();
    v16 &= 1u;
    v17 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v13;
    *(_BYTE *)(a2 + 24) = v17;
    *(_BYTE *)(a2 + 25) = v16;
    *(_BYTE *)(a2 + 26) = v14 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5C1E7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrajectoryCommand.Trajectory.init(from:)(a1, a2);
}

uint64_t sub_23A5C1E90(_QWORD *a1)
{
  return TrajectoryCommand.Trajectory.encode(to:)(a1);
}

DockKitCore::TrajectoryCommand::Status_optional __swiftcall TrajectoryCommand.Status.init(rawValue:)(DockKitCore::TrajectoryCommand::Status_optional rawValue)
{
  DockKitCore::TrajectoryCommand::Status *v1;
  DockKitCore::TrajectoryCommand::Status value;

  value = rawValue.value;
  if (rawValue.value >= DockKitCore_TrajectoryCommand_Status_unknownDefault)
    value = DockKitCore_TrajectoryCommand_Status_unknownDefault;
  *v1 = value;
  return rawValue;
}

uint64_t TrajectoryCommand.Status.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_23A5C1EC4()
{
  sub_23A6915C0();
  sub_23A6915D8();
  return sub_23A6915FC();
}

uint64_t sub_23A5C1F08()
{
  return sub_23A6915D8();
}

uint64_t sub_23A5C1F30()
{
  sub_23A6915C0();
  sub_23A6915D8();
  return sub_23A6915FC();
}

DockKitCore::TrajectoryCommand::Status_optional sub_23A5C1F70(Swift::UInt8 *a1)
{
  return TrajectoryCommand.Status.init(rawValue:)(*a1);
}

uint64_t sub_23A5C1F78()
{
  sub_23A5CFFBC();
  return sub_23A690EE8();
}

uint64_t sub_23A5C1FD4()
{
  sub_23A5CFFBC();
  return sub_23A690EC4();
}

void TrajectoryCommand.Progress.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *TrajectoryCommand.Progress.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*TrajectoryCommand.Progress.type.modify())()
{
  return nullsub_1;
}

void TrajectoryCommand.Progress.status.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *TrajectoryCommand.Progress.status.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*TrajectoryCommand.Progress.status.modify())()
{
  return nullsub_1;
}

uint64_t TrajectoryCommand.Progress.percent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t TrajectoryCommand.Progress.percent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*TrajectoryCommand.Progress.percent.modify())()
{
  return nullsub_1;
}

_BYTE *TrajectoryCommand.Progress.init(type:status:percent:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, char a3@<W2>, _BYTE *a4@<X8>)
{
  char v4;

  v4 = *a2;
  *a4 = *result;
  a4[1] = v4;
  a4[2] = a3;
  return result;
}

uint64_t TrajectoryCommand.Progress.init(nsdata:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  __int16 v9;
  char v10;

  sub_23A690594();
  swift_allocObject();
  sub_23A690588();
  v4 = a1;
  v5 = sub_23A690624();
  v7 = v6;

  sub_23A5CA210();
  sub_23A69057C();

  sub_23A5CA254(v5, v7);
  result = swift_release();
  *(_WORD *)a2 = v9;
  *(_BYTE *)(a2 + 2) = v10;
  return result;
}

void TrajectoryCommand.Progress.init(data:)(uint64_t a1, uint64_t a2)
{
  sub_23A69063C();
  MEMORY[0x24BDAC7A8]();
  __asm { BR              X10 }
}

uint64_t sub_23A5C22E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  unsigned __int8 v7;
  __int16 v8;
  __int16 v9;
  unsigned __int16 v10;
  uint64_t result;
  int v12;

  sub_23A5CA298(v4, v3);
  sub_23A690648();
  v6 = sub_23A690630();
  if ((v6 & 0x100) != 0
    || (v7 = v6, v6 >= 9u)
    || (v8 = sub_23A690630(), (v8 & 0x100) != 0)
    || (v9 = v8, v8 >= 6u))
  {
    sub_23A5CA254(v4, v3);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
    goto LABEL_8;
  }
  v10 = sub_23A690630();
  sub_23A5CA254(v4, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
  if ((v10 & 0x100) != 0)
  {
LABEL_8:
    v12 = 1536;
    goto LABEL_9;
  }
  v12 = (unsigned __int16)(v7 | (unsigned __int16)(v9 << 8)) | (v10 << 16);
LABEL_9:
  *(_WORD *)v0 = v12;
  *(_BYTE *)(v0 + 2) = BYTE2(v12);
  return result;
}

NSData_optional __swiftcall TrajectoryCommand.Progress.encode()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  Swift::Bool v4;
  objc_class *v5;
  NSData_optional result;

  sub_23A6905B8();
  swift_allocObject();
  sub_23A6905AC();
  sub_23A5CA2DC();
  v0 = sub_23A6905A0();
  v2 = v1;
  swift_release();
  v3 = sub_23A690618();
  sub_23A5CA254(v0, v2);
  v5 = (objc_class *)v3;
  result.value.super.isa = v5;
  result.is_nil = v4;
  return result;
}

uint64_t TrajectoryCommand.Progress.description.getter()
{
  sub_23A691290();
  swift_bridgeObjectRelease();
  sub_23A6914F4();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  sub_23A6914F4();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  return 0x3D65707954;
}

uint64_t sub_23A5C2630()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x737574617473;
  if (*v0 != 1)
    v1 = 0x746E6563726570;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_23A5C2680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5CA94C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A5C26A4()
{
  sub_23A5CA320();
  return sub_23A691638();
}

uint64_t sub_23A5C26CC()
{
  sub_23A5CA320();
  return sub_23A691644();
}

uint64_t TrajectoryCommand.Progress.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  _DWORD v11[3];
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E290);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v11[2] = v1[2];
  v12 = v9;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5CA320();
  sub_23A69162C();
  v17 = v8;
  v16 = 0;
  sub_23A5CA364();
  sub_23A6914DC();
  if (!v2)
  {
    v15 = v12;
    v14 = 1;
    sub_23A5CA3A8();
    sub_23A6914DC();
    v13 = 2;
    sub_23A6914E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TrajectoryCommand.Progress.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E2B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5CA320();
  sub_23A691620();
  if (!v2)
  {
    v17 = 0;
    sub_23A5CA3EC();
    sub_23A691440();
    v9 = v18;
    v15 = 1;
    sub_23A5CA430();
    sub_23A691440();
    v11 = v16;
    v14 = 2;
    v12 = sub_23A69144C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_23A5C2A18@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return TrajectoryCommand.Progress.init(from:)(a1, a2);
}

uint64_t sub_23A5C2A2C(_QWORD *a1)
{
  return TrajectoryCommand.Progress.encode(to:)(a1);
}

uint64_t sub_23A5C2A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_stamp;
  v2 = sub_23A6906D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

void TrajectoryCommand.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void TrajectoryCommand.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

DockKitCore::TrajectoryCommand __swiftcall TrajectoryCommand.init(type:priority:trajectories:)(DockKitCore::TrajectoryCommand::Animation type, DockKitCore::TrajectoryCommand::Priority_optional priority, Swift::OpaquePointer_optional trajectories)
{
  uint64_t v3;
  int v4;
  void *v5;
  void *rawValue;
  DockKitCore::TrajectoryCommand result;

  v4 = *(unsigned __int8 *)priority.value;
  v5 = (void *)MEMORY[0x24BEE4AF8];
  if (v4 == 3)
    LOBYTE(v4) = 0;
  *(_BYTE *)v3 = *(_BYTE *)type;
  if (trajectories.value._rawValue)
    rawValue = trajectories.value._rawValue;
  else
    rawValue = v5;
  *(_BYTE *)(v3 + 1) = v4;
  *(_QWORD *)(v3 + 8) = rawValue;
  LOBYTE(result.trajectories._rawValue) = priority;
  result.type = type;
  return result;
}

DockKitCore::TrajectoryCommand_optional __swiftcall TrajectoryCommand.init(nsdata:)(NSData nsdata)
{
  _QWORD *v1;
  _QWORD *v3;
  objc_class *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int16 v8;
  void *v9;
  unsigned __int16 v10;
  uint64_t v11;
  DockKitCore::TrajectoryCommand_optional result;

  v3 = v1;
  sub_23A690594();
  swift_allocObject();
  sub_23A690588();
  v4 = nsdata.super.isa;
  v5 = sub_23A690624();
  v7 = v6;

  sub_23A5CA474();
  sub_23A69057C();

  sub_23A5CA254(v5, v7);
  v8 = swift_release();
  *v3 = v10;
  v3[1] = v11;
  result.value.trajectories._rawValue = v9;
  *(_WORD *)&result.value.type = v8;
  return result;
}

NSData_optional __swiftcall TrajectoryCommand.encode()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  Swift::Bool v4;
  objc_class *v5;
  NSData_optional result;

  sub_23A6905B8();
  swift_allocObject();
  sub_23A6905AC();
  sub_23A5CA4B8();
  v0 = sub_23A6905A0();
  v2 = v1;
  swift_release();
  v3 = sub_23A690618();
  sub_23A5CA254(v0, v2);
  v5 = (objc_class *)v3;
  result.value.super.isa = v5;
  result.is_nil = v4;
  return result;
}

uint64_t TrajectoryCommand.encode()()
{
  uint64_t v0;
  int64_t v1;
  unint64_t v2;
  unint64_t v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  double v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double v20;
  double v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  unint64_t v34;
  unint64_t v35;
  double v36;
  unint64_t v37;
  int64_t v38;
  double v39;
  double v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t result;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;

  LOBYTE(v1) = *(_BYTE *)v0;
  LOBYTE(v2) = *(_BYTE *)(v0 + 1);
  v3 = *(_QWORD *)(v0 + 8);
  v4 = sub_23A5C59C4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v6 = *((_QWORD *)v4 + 2);
  v5 = *((_QWORD *)v4 + 3);
  v7 = v5 >> 1;
  v8 = v6 + 1;
  if (v5 >> 1 <= v6)
    goto LABEL_108;
  while (1)
  {
    *((_QWORD *)v4 + 2) = v8;
    v4[v6 + 32] = v1;
    v1 = v6 + 2;
    if (v7 < (uint64_t)(v6 + 2))
      v4 = sub_23A5C59C4((char *)(v5 > 1), v6 + 2, 1, v4);
    *((_QWORD *)v4 + 2) = v1;
    v4[v8 + 32] = v2 + 1;
    v2 = *(_QWORD *)(v3 + 16);
    if (v2 >= 0x100)
      break;
    v9 = *((_QWORD *)v4 + 3);
    v8 = v6 + 3;
    if ((uint64_t)(v6 + 3) > (uint64_t)(v9 >> 1))
      v4 = sub_23A5C59C4((char *)(v9 > 1), v6 + 3, 1, v4);
    *((_QWORD *)v4 + 2) = v8;
    v4[v1 + 32] = v2;
    v50 = *(_QWORD *)(v3 + 16);
    if (!v50)
    {
LABEL_93:
      v47 = sub_23A5CAD24((uint64_t)v4);
      swift_bridgeObjectRelease();
      return v47;
    }
    v51 = v3 + 32;
    swift_bridgeObjectRetain();
    v10 = 0;
    v49 = v3;
    while (1)
    {
      v5 = *(_QWORD *)(v3 + 16);
      if (v10 >= v5)
        break;
      v11 = v51 + 32 * v10;
      v12 = *(unsigned __int8 *)(v11 + 25);
      LODWORD(v2) = *(unsigned __int8 *)(v11 + 26);
      if ((*(_BYTE *)(v11 + 24) & 1) != 0)
      {
        if (*(_BYTE *)(v11 + 25))
          v13 = 7;
        else
          v13 = 5;
        if (*(_BYTE *)(v11 + 25))
          v14 = 3;
        else
          v14 = 1;
        if (!*(_BYTE *)(v11 + 26))
          goto LABEL_20;
      }
      else
      {
        if (*(_BYTE *)(v11 + 25))
          v13 = 6;
        else
          v13 = 4;
        if (*(_BYTE *)(v11 + 25))
          v14 = 2;
        else
          v14 = 0;
        if ((v2 & 1) == 0)
LABEL_20:
          v13 = v14;
      }
      v8 = *(_QWORD *)v11;
      v15 = *(double *)(v11 + 8);
      v16 = *(_QWORD *)(v11 + 16);
      swift_bridgeObjectRetain();
      v18 = *((_QWORD *)v4 + 2);
      v17 = *((_QWORD *)v4 + 3);
      v6 = v18 + 1;
      if (v18 >= v17 >> 1)
        v4 = sub_23A5C59C4((char *)(v17 > 1), v18 + 1, 1, v4);
      *((_QWORD *)v4 + 2) = v6;
      v4[v18 + 32] = v13;
      if ((v16 & 0x8000000000000000) != 0 || v16 >= 0x100)
        goto LABEL_109;
      v19 = *((_QWORD *)v4 + 3);
      v1 = v18 + 2;
      if ((uint64_t)(v18 + 2) > (uint64_t)(v19 >> 1))
        v4 = sub_23A5C59C4((char *)(v19 > 1), v18 + 2, 1, v4);
      *((_QWORD *)v4 + 2) = v1;
      v4[v6 + 32] = v16;
      v20 = v15 * 1000.0;
      if (v15 > 60.0)
        v20 = 60000.0;
      if (v15 < 0.0)
        v21 = 0.0;
      else
        v21 = v20;
      v5 = *(_QWORD *)&v21;
      if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
        goto LABEL_105;
      if (v21 <= -1.0)
        goto LABEL_106;
      v5 = 0x40F0000000000000;
      if (v21 >= 65536.0)
        goto LABEL_107;
      v22 = *((_QWORD *)v4 + 3);
      v23 = v22 >> 1;
      v24 = v18 + 3;
      if ((uint64_t)(v22 >> 1) < (uint64_t)(v18 + 3))
      {
        v4 = sub_23A5C59C4((char *)(v22 > 1), v18 + 3, 1, v4);
        v22 = *((_QWORD *)v4 + 3);
        v23 = v22 >> 1;
      }
      *((_QWORD *)v4 + 2) = v24;
      v4[v1 + 32] = (unsigned __int16)(int)v21 >> 8;
      v1 = v18 + 4;
      if (v23 < (uint64_t)(v18 + 4))
        v4 = sub_23A5C59C4((char *)(v22 > 1), v18 + 4, 1, v4);
      *((_QWORD *)v4 + 2) = v1;
      v4[v24 + 32] = (int)v21;
      v25 = *(_QWORD *)(v8 + 16);
      if (v25 >= 0x100)
        goto LABEL_109;
      v26 = *((_QWORD *)v4 + 3);
      v6 = v18 + 5;
      if ((uint64_t)(v18 + 5) > (uint64_t)(v26 >> 1))
        v4 = sub_23A5C59C4((char *)(v26 > 1), v18 + 5, 1, v4);
      *((_QWORD *)v4 + 2) = v6;
      v4[v1 + 32] = v25;
      v27 = *(_QWORD *)(v8 + 16);
      if (v27)
      {
        v52 = v10;
        swift_bridgeObjectRetain();
        v3 = 0;
        v28 = v12;
        while (1)
        {
          v5 = *(_QWORD *)(v8 + 16);
          if (v3 >= v5)
            break;
          v5 = v8 + 32 + 24 * v3;
          v29 = 255.0;
          v30 = *(double *)v5 * 255.0;
          if (v30 <= 255.0)
            v29 = *(double *)v5 * 255.0;
          if (v30 < 0.0)
            v31 = 0.0;
          else
            v31 = v29;
          if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
            goto LABEL_95;
          if (v31 <= -1.0)
            goto LABEL_96;
          if (v31 >= 256.0)
            goto LABEL_97;
          v33 = *(double *)(v5 + 8);
          v32 = *(double *)(v5 + 16);
          v35 = *((_QWORD *)v4 + 2);
          v34 = *((_QWORD *)v4 + 3);
          v1 = v35 + 1;
          if (v35 >= v34 >> 1)
          {
            v6 = v28;
            v4 = sub_23A5C59C4((char *)(v34 > 1), v35 + 1, 1, v4);
            v28 = v6;
          }
          *((_QWORD *)v4 + 2) = v1;
          v4[v35 + 32] = (int)v31;
          if ((_DWORD)v28)
          {
            while (v33 > 31.4159265)
              v33 = v33 + -6.28318531;
            while (v33 < -31.4159265)
              v33 = v33 + 6.28318531;
            v36 = v33 * 1000.0;
            v5 = *(_QWORD *)&v36;
            if ((~*(_QWORD *)&v36 & 0x7FF0000000000000) == 0)
              goto LABEL_98;
            if (v36 <= -32769.0)
              goto LABEL_99;
            if (v36 >= 32768.0)
              goto LABEL_101;
            v37 = *((_QWORD *)v4 + 3);
            v38 = v37 >> 1;
            v6 = v35 + 2;
            if ((uint64_t)(v37 >> 1) < (uint64_t)(v35 + 2))
            {
              v44 = v28;
              v4 = sub_23A5C59C4((char *)(v37 > 1), v35 + 2, 1, v4);
              v28 = v44;
              v37 = *((_QWORD *)v4 + 3);
              v38 = v37 >> 1;
            }
            *((_QWORD *)v4 + 2) = v6;
            v4[v1 + 32] = (unsigned __int16)(int)v36 >> 8;
            v1 = v35 + 3;
            if (v38 < (uint64_t)(v35 + 3))
            {
              v45 = v28;
              v4 = sub_23A5C59C4((char *)(v37 > 1), v1, 1, v4);
              v28 = v45;
            }
            *((_QWORD *)v4 + 2) = v1;
            v4[v6 + 32] = (int)v36;
          }
          if ((_DWORD)v2)
          {
            v39 = v32 * 1000.0;
            if (v32 > 31.4159265)
              v39 = 31415.9265;
            if (v32 < -31.4159265)
              v40 = -31415.9265;
            else
              v40 = v39;
            v5 = *(_QWORD *)&v40;
            if ((~*(_QWORD *)&v40 & 0x7FF0000000000000) == 0)
              goto LABEL_100;
            if (v40 <= -32769.0)
              goto LABEL_102;
            if (v40 >= 32768.0)
              goto LABEL_103;
            v41 = *((_QWORD *)v4 + 3);
            v6 = v1 + 1;
            if (v1 >= v41 >> 1)
            {
              v46 = v28;
              v4 = sub_23A5C59C4((char *)(v41 > 1), v1 + 1, 1, v4);
              v28 = v46;
            }
            *((_QWORD *)v4 + 2) = v6;
            v4[v1 + 32] = (unsigned __int16)(int)v40 >> 8;
            v42 = *((_QWORD *)v4 + 3);
            v1 += 2;
            if (v1 > (uint64_t)(v42 >> 1))
            {
              v43 = v28;
              v4 = sub_23A5C59C4((char *)(v42 > 1), v1, 1, v4);
              v28 = v43;
            }
            *((_QWORD *)v4 + 2) = v1;
            v4[v6 + 32] = (int)v40;
          }
          if (++v3 == v27)
          {
            swift_bridgeObjectRelease_n();
            v3 = v49;
            v10 = v52;
            goto LABEL_10;
          }
        }
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
        break;
      }
      swift_bridgeObjectRelease();
LABEL_10:
      if (++v10 == v50)
      {
        swift_bridgeObjectRelease();
        goto LABEL_93;
      }
    }
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    v4 = sub_23A5C59C4((char *)(v5 > 1), v8, 1, v4);
    v5 = *((_QWORD *)v4 + 3);
    v7 = v5 >> 1;
  }
LABEL_109:
  result = sub_23A691350();
  __break(1u);
  return result;
}

_QWORD *sub_23A5C36B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *result;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v22;

  *(_QWORD *)(a2 + 8) = 0x4014000000000000;
  *(_QWORD *)(a2 + 16) = a1;
  *(_WORD *)(a2 + 24) = 257;
  *(_BYTE *)(a2 + 26) = 1;
  result = sub_23A5C5ABC(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v4 = result;
  v6 = result[2];
  v5 = result[3];
  v7 = v5 >> 1;
  v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    result = sub_23A5C5ABC((_QWORD *)(v5 > 1), v6 + 1, 1, result);
    v4 = result;
    v5 = result[3];
    v7 = v5 >> 1;
  }
  v4[2] = v8;
  v9 = &v4[3 * v6];
  v9[5] = 0;
  v9[6] = 0;
  v10 = v6 + 2;
  v9[4] = 0;
  if (v7 < (uint64_t)(v6 + 2))
  {
    result = sub_23A5C5ABC((_QWORD *)(v5 > 1), v6 + 2, 1, v4);
    v4 = result;
  }
  v4[2] = v10;
  v11 = &v4[3 * v8];
  *((_OWORD *)v11 + 2) = xmmword_23A694040;
  v11[6] = 0;
  v12 = v4[3];
  v13 = v6 + 3;
  if ((uint64_t)(v6 + 3) > (uint64_t)(v12 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v12 > 1), v6 + 3, 1, v4);
    v4 = result;
  }
  v4[2] = v13;
  v14 = &v4[3 * v10];
  *((_OWORD *)v14 + 2) = xmmword_23A694050;
  v14[6] = 0;
  v15 = v4[3];
  v16 = v6 + 4;
  if ((uint64_t)(v6 + 4) > (uint64_t)(v15 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v15 > 1), v6 + 4, 1, v4);
    v4 = result;
  }
  v4[2] = v16;
  v17 = &v4[3 * v13];
  *((_OWORD *)v17 + 2) = xmmword_23A694060;
  v17[6] = 0;
  v18 = v4[3];
  v19 = v6 + 5;
  if ((uint64_t)(v6 + 5) > (uint64_t)(v18 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v18 > 1), v6 + 5, 1, v4);
    v4 = result;
  }
  v4[2] = v19;
  v20 = &v4[3 * v16];
  *((_OWORD *)v20 + 2) = xmmword_23A694070;
  v20[6] = 0;
  v21 = v4[3];
  if ((uint64_t)(v6 + 6) > (uint64_t)(v21 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v21 > 1), v6 + 6, 1, v4);
    v4 = result;
  }
  v4[2] = v6 + 6;
  v22 = &v4[3 * v19];
  v22[5] = 0;
  v22[6] = 0;
  v22[4] = 0x3FF0000000000000;
  *(_QWORD *)a2 = v4;
  return result;
}

_QWORD *sub_23A5C38BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v22;

  *(_QWORD *)(a2 + 8) = 0x4014000000000000;
  *(_QWORD *)(a2 + 16) = a1;
  *(_WORD *)(a2 + 24) = 257;
  *(_BYTE *)(a2 + 26) = 1;
  result = sub_23A5C5ABC(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v4 = result;
  v6 = result[2];
  v5 = result[3];
  v7 = v5 >> 1;
  v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    result = sub_23A5C5ABC((_QWORD *)(v5 > 1), v6 + 1, 1, result);
    v4 = result;
    v5 = result[3];
    v7 = v5 >> 1;
  }
  v4[2] = v8;
  v9 = &v4[3 * v6];
  v9[5] = 0;
  v9[6] = 0;
  v10 = v6 + 2;
  v9[4] = 0;
  if (v7 < (uint64_t)(v6 + 2))
  {
    result = sub_23A5C5ABC((_QWORD *)(v5 > 1), v6 + 2, 1, v4);
    v4 = result;
  }
  v4[2] = v10;
  v11 = &v4[3 * v8];
  *((_OWORD *)v11 + 2) = xmmword_23A694080;
  v11[6] = 0;
  v12 = v4[3];
  v13 = v6 + 3;
  if ((uint64_t)(v6 + 3) > (uint64_t)(v12 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v12 > 1), v6 + 3, 1, v4);
    v4 = result;
  }
  v4[2] = v13;
  v14 = &v4[3 * v10];
  *((_OWORD *)v14 + 2) = xmmword_23A694090;
  v14[6] = 0;
  v15 = v4[3];
  v16 = v6 + 4;
  if ((uint64_t)(v6 + 4) > (uint64_t)(v15 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v15 > 1), v6 + 4, 1, v4);
    v4 = result;
  }
  v4[2] = v16;
  v17 = &v4[3 * v13];
  *((_OWORD *)v17 + 2) = xmmword_23A6940A0;
  v17[6] = 0;
  v18 = v4[3];
  v19 = v6 + 5;
  if ((uint64_t)(v6 + 5) > (uint64_t)(v18 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v18 > 1), v6 + 5, 1, v4);
    v4 = result;
  }
  v4[2] = v19;
  v20 = &v4[3 * v16];
  *((_OWORD *)v20 + 2) = xmmword_23A6940B0;
  v20[6] = 0;
  v21 = v4[3];
  if ((uint64_t)(v6 + 6) > (uint64_t)(v21 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v21 > 1), v6 + 6, 1, v4);
    v4 = result;
  }
  v4[2] = v6 + 6;
  v22 = &v4[3 * v19];
  v22[5] = 0;
  v22[6] = 0;
  v22[4] = 0x3FF0000000000000;
  *(_QWORD *)a2 = v4;
  return result;
}

_QWORD *sub_23A5C3AC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *result;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  _QWORD *v28;

  *(_QWORD *)(a2 + 8) = 0x4018000000000000;
  *(_QWORD *)(a2 + 16) = a1;
  *(_WORD *)(a2 + 24) = 257;
  *(_BYTE *)(a2 + 26) = 1;
  result = sub_23A5C5ABC(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v4 = result;
  v6 = result[2];
  v5 = result[3];
  v7 = v5 >> 1;
  v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    result = sub_23A5C5ABC((_QWORD *)(v5 > 1), v6 + 1, 1, result);
    v4 = result;
    v5 = result[3];
    v7 = v5 >> 1;
  }
  v4[2] = v8;
  v9 = &v4[3 * v6];
  v9[5] = 0;
  v9[6] = 0;
  v10 = v6 + 2;
  v9[4] = 0;
  if (v7 < (uint64_t)(v6 + 2))
  {
    result = sub_23A5C5ABC((_QWORD *)(v5 > 1), v6 + 2, 1, v4);
    v4 = result;
  }
  v4[2] = v10;
  v11 = &v4[3 * v8];
  *((_OWORD *)v11 + 2) = xmmword_23A6940C0;
  v11[6] = 0xC000000000000000;
  v12 = v4[3];
  v13 = v6 + 3;
  if ((uint64_t)(v6 + 3) > (uint64_t)(v12 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v12 > 1), v6 + 3, 1, v4);
    v4 = result;
  }
  v4[2] = v13;
  v14 = &v4[3 * v10];
  *((_OWORD *)v14 + 2) = xmmword_23A6940D0;
  v14[6] = 0x4000000000000000;
  v15 = v4[3];
  v16 = v6 + 4;
  if ((uint64_t)(v6 + 4) > (uint64_t)(v15 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v15 > 1), v6 + 4, 1, v4);
    v4 = result;
  }
  v4[2] = v16;
  v17 = &v4[3 * v13];
  *((_OWORD *)v17 + 2) = xmmword_23A6940E0;
  v17[6] = 0;
  v18 = v4[3];
  v19 = v6 + 5;
  if ((uint64_t)(v6 + 5) > (uint64_t)(v18 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v18 > 1), v6 + 5, 1, v4);
    v4 = result;
  }
  v4[2] = v19;
  v20 = &v4[3 * v16];
  *((_OWORD *)v20 + 2) = xmmword_23A6940F0;
  v20[6] = 0;
  v21 = v4[3];
  v22 = v6 + 6;
  if ((uint64_t)(v6 + 6) > (uint64_t)(v21 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v21 > 1), v6 + 6, 1, v4);
    v4 = result;
  }
  v4[2] = v22;
  v23 = &v4[3 * v19];
  *((_OWORD *)v23 + 2) = xmmword_23A694100;
  v23[6] = 0;
  v24 = v4[3];
  v25 = v6 + 7;
  if ((uint64_t)(v6 + 7) > (uint64_t)(v24 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v24 > 1), v6 + 7, 1, v4);
    v4 = result;
  }
  v4[2] = v25;
  v26 = &v4[3 * v22];
  *((_OWORD *)v26 + 2) = xmmword_23A694110;
  v26[6] = 0;
  v27 = v4[3];
  if ((uint64_t)(v6 + 8) > (uint64_t)(v27 >> 1))
  {
    result = sub_23A5C5ABC((_QWORD *)(v27 > 1), v6 + 8, 1, v4);
    v4 = result;
  }
  v4[2] = v6 + 8;
  v28 = &v4[3 * v25];
  v28[5] = 0;
  v28[6] = 0;
  v28[4] = 0x3FF0000000000000;
  *(_QWORD *)a2 = v4;
  return result;
}

uint64_t sub_23A5C3D64()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x797469726F697270;
  if (*v0 != 1)
    v1 = 0x6F7463656A617274;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_23A5C3DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A5CB078(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A5C3DE4()
{
  sub_23A5CADD4();
  return sub_23A691638();
}

uint64_t sub_23A5C3E0C()
{
  sub_23A5CADD4();
  return sub_23A691644();
}

uint64_t TrajectoryCommand.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E2D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v13 = v1[1];
  v12 = *((_QWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5CADD4();
  sub_23A69162C();
  v19 = v8;
  v18 = 0;
  sub_23A5CA364();
  sub_23A6914DC();
  if (!v2)
  {
    v9 = v12;
    v17 = v13;
    v16 = 1;
    sub_23A5CAE18();
    sub_23A6914DC();
    v14 = v9;
    v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E2F0);
    sub_23A5CAEE4(&qword_25699E2F8, &qword_25699E2F0, (uint64_t (*)(void))sub_23A5CAE5C, MEMORY[0x24BEE12A0]);
    sub_23A6914DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TrajectoryCommand.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  unsigned __int8 v16;
  char v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E308);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A5CADD4();
  sub_23A691620();
  if (!v2)
  {
    v17 = 0;
    sub_23A5CA3EC();
    sub_23A691440();
    v9 = v18;
    v15 = 1;
    sub_23A5CAEA0();
    sub_23A691440();
    HIDWORD(v12) = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E2F0);
    v14 = 2;
    sub_23A5CAEE4(&qword_25699E318, &qword_25699E2F0, (uint64_t (*)(void))sub_23A5CAF48, MEMORY[0x24BEE12D0]);
    sub_23A691440();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v13;
    *(_BYTE *)a2 = v9;
    *(_BYTE *)(a2 + 1) = BYTE4(v12);
    *(_QWORD *)(a2 + 8) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_23A5C41F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrajectoryCommand.init(from:)(a1, a2);
}

uint64_t sub_23A5C4204(_QWORD *a1)
{
  return TrajectoryCommand.encode(to:)(a1);
}

const char *DockKitFeatures.domain.getter()
{
  return "DockKit";
}

uint64_t DockKitFeatures.feature.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_23A5C4254 + 4 * byte_23A694238[*v0]))("dockAccessoryDaemon", 19);
}

const char *sub_23A5C4254()
{
  return "dockAccessoryTools";
}

const char *sub_23A5C4268()
{
  return "cinematicModeDockKit";
}

const char *sub_23A5C427C()
{
  return "iTracking";
}

const char *sub_23A5C4290()
{
  return "RemoteControl";
}

BOOL static DockKitFeatures.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DockKitFeatures.hash(into:)()
{
  return sub_23A6915CC();
}

uint64_t DockKitFeatures.hashValue.getter()
{
  sub_23A6915C0();
  sub_23A6915CC();
  return sub_23A6915FC();
}

const char *sub_23A5C4324()
{
  return "DockKit";
}

uint64_t sub_23A5C4338()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_23A5C4360 + 4 * byte_23A69423D[*v0]))("dockAccessoryDaemon", 19);
}

const char *sub_23A5C4360()
{
  return "dockAccessoryTools";
}

const char *sub_23A5C4374()
{
  return "cinematicModeDockKit";
}

const char *sub_23A5C4388()
{
  return "iTracking";
}

const char *sub_23A5C439C()
{
  return "RemoteControl";
}

uint64_t static AccessorySystemEvent.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static AccessorySystemEvent.kHeaderCameraShutter.getter()
{
  return 32;
}

uint64_t static AccessorySystemEvent.kHeaderCameraFlip.getter()
{
  return 64;
}

uint64_t static AccessorySystemEvent.kHeaderCameraZoom.getter()
{
  return 128;
}

uint64_t static AccessorySystemEvent.kHeaderEventPress.getter()
{
  return 0;
}

uint64_t static AccessorySystemEvent.kHeaderEventRelease.getter()
{
  return 1;
}

id AccessorySystemEvent.__allocating_init(name:payload:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return AccessorySystemEvent.init(name:payload:)(a1, a2, a3 | ((HIDWORD(a3) & 1) << 32));
}

id AccessorySystemEvent.init(name:payload:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  int v9;
  char *v10;
  char *v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v3[OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent_name];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  if ((a3 & 0x100000000) != 0)
    v9 = 0;
  else
    v9 = a3;
  v10 = &v3[OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__header];
  *v10 = HIBYTE(v9);
  v10[1] = 0;
  v11 = &v3[OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__payload];
  *(_DWORD *)v11 = v9 & 0xFFFFFF;
  v11[4] = 0;
  v13.receiver = v3;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t AccessorySystemEvent.__allocating_init(data:name:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5C4C80(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_23A5CB1D4);
}

id AccessorySystemEvent.init(data:name:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;

  v6 = sub_23A5CB1D4(a1, a2, a3, a4);
  sub_23A5CA254(a1, a2);
  return v6;
}

Swift::Void __swiftcall AccessorySystemEvent.encode(with:)(NSCoder with)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v3 = (void *)sub_23A690E04();
  v4 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__payload + 4) & 1) != 0)
    v5 = 0;
  else
    v5 = sub_23A691614();
  v6 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);
  swift_unknownObjectRelease();

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__header + 1) & 1) != 0)
    v7 = 0;
  else
    v7 = sub_23A69159C();
  v8 = (id)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);
  swift_unknownObjectRelease();

}

id AccessorySystemEvent.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23A5CB3B4();

  return v4;
}

id AccessorySystemEvent.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23A5CB3B4();

  return v2;
}

uint64_t AccessorySystemEvent.header.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__header + 1))
    return 0;
  else
    return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__header);
}

uint64_t AccessorySystemEvent.payload.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__payload + 4))
    return 0;
  else
    return *(unsigned int *)(v0 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__payload);
}

_QWORD *AccessorySystemEvent.ids.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  int v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__header + 1) & 1) == 0
    && *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__header) > 1u)
  {
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v1 = 0;
  v2 = *(_DWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__payload);
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__payload + 4);
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    if (!v3 && v2 >> v1 == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_23A5C5BE0(0, v4[2] + 1, 1, v4);
      v6 = v4[2];
      v5 = v4[3];
      if (v6 >= v5 >> 1)
        v4 = sub_23A5C5BE0((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
      v4[2] = v6 + 1;
      v4[v6 + 4] = v1;
    }
    ++v1;
  }
  while (v1 != 24);
  return v4;
}

void AccessorySystemEvent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t AccessoryChargeState.description.getter(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
      return 0x6772616843746F4ELL;
    case 2:
      return 0x7261684320746F4ELL;
    case 1:
      return 0x676E696772616843;
  }
  result = sub_23A69153C();
  __break(1u);
  return result;
}

unint64_t AccessoryChargeState.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t sub_23A5C4A24()
{
  sub_23A6915C0();
  sub_23A6915CC();
  return sub_23A6915FC();
}

uint64_t sub_23A5C4A68()
{
  sub_23A6915C0();
  sub_23A6915CC();
  return sub_23A6915FC();
}

uint64_t *sub_23A5C4AA8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

uint64_t static AccessoryBatteryState.supportsSecureCoding.getter()
{
  return 1;
}

double AccessoryBatteryState.batteryPercent.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_batteryPercent);
}

uint64_t AccessoryBatteryState.lowBattery.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_lowBattery);
}

uint64_t AccessoryBatteryState.chargeState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_chargeState);
}

uint64_t AccessoryBatteryState.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_name);
  swift_bridgeObjectRetain();
  return v1;
}

id AccessoryBatteryState.__allocating_init(batteryPercent:lowBattery:chargeState:name:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  objc_class *v5;
  _BYTE *v11;
  _QWORD *v12;
  objc_super v14;

  v11 = objc_allocWithZone(v5);
  *(double *)&v11[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_batteryPercent] = a5;
  v11[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_lowBattery] = a1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_chargeState] = a2;
  v12 = &v11[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_name];
  *v12 = a3;
  v12[1] = a4;
  v14.receiver = v11;
  v14.super_class = v5;
  return objc_msgSendSuper2(&v14, sel_init);
}

id AccessoryBatteryState.init(batteryPercent:lowBattery:chargeState:name:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  _BYTE *v5;
  objc_class *ObjectType;
  _QWORD *v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  *(double *)&v5[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_batteryPercent] = a5;
  v5[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_lowBattery] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_chargeState] = a2;
  v12 = &v5[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_name];
  *v12 = a3;
  v12[1] = a4;
  v14.receiver = v5;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t AccessoryBatteryState.__allocating_init(data:name:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5C4C80(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_23A5CB728);
}

uint64_t sub_23A5C4C80(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  objc_class *v5;
  id v11;
  uint64_t v12;

  v11 = objc_allocWithZone(v5);
  v12 = a5(a1, a2, a3, a4);
  sub_23A5CA254(a1, a2);
  return v12;
}

id AccessoryBatteryState.init(data:name:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;

  v6 = sub_23A5CB728(a1, a2, a3, a4);
  sub_23A5CA254(a1, a2);
  return v6;
}

Swift::Void __swiftcall AccessoryBatteryState.encode(with:)(NSCoder with)
{
  uint64_t v1;
  double v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v3 = *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_batteryPercent);
  v4 = (void *)sub_23A690E04();
  -[objc_class encodeDouble:forKey:](with.super.isa, sel_encodeDouble_forKey_, v4, v3);

  v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_lowBattery);
  v6 = (void *)sub_23A690E04();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v5, v6);

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_chargeState);
  v8 = (void *)sub_23A690E04();
  -[objc_class encodeInteger:forKey:](with.super.isa, sel_encodeInteger_forKey_, v7, v8);

  v9 = (void *)sub_23A690E04();
  v10 = (id)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

}

id AccessoryBatteryState.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23A5CB818();

  return v4;
}

id AccessoryBatteryState.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23A5CB818();

  return v2;
}

void AccessoryBatteryState.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id _s11DockKitCore16ClientDictionaryCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_23A5C5028()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx);
}

void sub_23A5C5038(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx) = a1;
}

uint64_t (*sub_23A5C5048())()
{
  return nullsub_1;
}

double sub_23A5C5060()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy);
}

void sub_23A5C5070(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy) = a1;
}

uint64_t (*sub_23A5C5080())()
{
  return nullsub_1;
}

double sub_23A5C5098()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox);
}

void sub_23A5C50A8(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox) = a1;
}

uint64_t (*sub_23A5C50B8())()
{
  return nullsub_1;
}

double sub_23A5C50D0()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy);
}

void sub_23A5C50E0(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy) = a1;
}

uint64_t (*sub_23A5C50F0())()
{
  return nullsub_1;
}

double sub_23A5C5108()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions);
}

void sub_23A5C511C(double a1, double a2)
{
  uint64_t v2;
  double *v3;

  v3 = (double *)(v2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions);
  *v3 = a1;
  v3[1] = a2;
}

uint64_t (*sub_23A5C5130())()
{
  return nullsub_1;
}

uint64_t sub_23A5C5148()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23A5C5180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23A5C519C())()
{
  return nullsub_1;
}

uint64_t sub_23A5C51B4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation);
}

uint64_t sub_23A5C51C4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation) = result;
  return result;
}

uint64_t (*sub_23A5C51D4())()
{
  return nullsub_1;
}

double sub_23A5C51EC()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fov);
}

void sub_23A5C5200(double a1, double a2)
{
  uint64_t v2;
  double *v3;

  v3 = (double *)(v2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fov);
  *v3 = a1;
  v3[1] = a2;
}

uint64_t (*sub_23A5C5214())()
{
  return nullsub_1;
}

id CameraCalibration.init()()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  objc_class *v4;
  objc_super v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy] = 0;
  v1 = &v0[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType];
  strcpy(&v0[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType], "PortTypeFront");
  *((_WORD *)v2 + 7) = -4864;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation] = 0;
  v3 = &v0[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fov];
  v4 = (objc_class *)type metadata accessor for CameraCalibration();
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v6.receiver = v0;
  v6.super_class = v4;
  return objc_msgSendSuper2(&v6, sel_init);
}

id CameraCalibration.__allocating_init(fx:fy:ox:oy:referenceDimensions:portType:orientation:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  objc_class *v10;
  char v20;
  id v21;

  v20 = a3 & 1;
  v21 = objc_allocWithZone(v10);
  return CameraCalibration.init(fx:fy:ox:oy:referenceDimensions:portType:orientation:)(a1, a2, v20, a4, a5, a6, a7, a8, a9, a10);
}

id CameraCalibration.init(fx:fy:ox:oy:referenceDimensions:portType:orientation:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  char *v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  objc_super v26;

  v13 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy;
  v14 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox;
  v15 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy;
  *(double *)&v10[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx] = a7;
  *(double *)&v10[v13] = a8;
  *(double *)&v10[v14] = a9;
  *(double *)&v10[v15] = a10;
  if ((a3 & 1) != 0)
    *(double *)&a1 = 0.0;
  v18 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType;
  v19 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation;
  v20 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fov;
  if ((a3 & 1) != 0)
    *(double *)&a2 = 0.0;
  v21 = (double *)&v10[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions];
  *v21 = *(double *)&a1;
  v21[1] = *(double *)&a2;
  v22 = &v10[v18];
  v23 = &v10[v20];
  *(_QWORD *)v22 = a4;
  *((_QWORD *)v22 + 1) = a5;
  *(_QWORD *)&v10[v19] = a6;
  *(double *)v23 = sub_23A5CBB80(a6, a9, a10, a7, a8);
  *((_QWORD *)v23 + 1) = v24;
  v26.receiver = v10;
  v26.super_class = (Class)type metadata accessor for CameraCalibration();
  return objc_msgSendSuper2(&v26, sel_init);
}

id CameraCalibration.__allocating_init(intrinsics:referenceDimensions:portType:orientation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  char v14;
  id v15;

  v14 = a4 & 1;
  v15 = objc_allocWithZone(v7);
  return CameraCalibration.init(intrinsics:referenceDimensions:portType:orientation:)(a1, a2, a3, v14, a5, a6, a7);
}

id CameraCalibration.init(intrinsics:referenceDimensions:portType:orientation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  char *v14;
  double *v15;
  float v16;
  float v17;
  float v18;
  float v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  char *v28;
  uint64_t v29;
  float v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v41;
  __int128 v42;
  float v43;
  float v44;
  float v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[64];

  sub_23A5CBBF4(a1, (uint64_t)&v46);
  v31 = *((float *)&v47 + 1);
  v32 = *(float *)&v46;
  v33 = v48;
  v9 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx] = 0;
  v10 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy] = 0;
  v11 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox] = 0;
  v12 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy] = 0;
  v13 = (double *)&v7[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions];
  *v13 = 0.0;
  v13[1] = 0.0;
  v14 = &v7[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType];
  strcpy(&v7[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType], "PortTypeFront");
  *((_WORD *)v14 + 7) = -4864;
  v34 = OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation] = 0;
  v15 = (double *)&v7[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fov];
  *v15 = 0.0;
  v15[1] = 0.0;
  sub_23A5CBBF4(a1, (uint64_t)v49);
  if ((v49[48] & 1) != 0
    || v32 < COERCE_FLOAT(1)
    || (v16 = v31, v31 < COERCE_FLOAT(1))
    || *(float *)&v33 < COERCE_FLOAT(1)
    || (v18 = *((float *)&v33 + 1), v17 = *(float *)&v33, *((float *)&v33 + 1) < COERCE_FLOAT(1)))
  {
    v20 = a5;
    v21 = a6;
    sub_23A5CBC3C(a5, a6, &v42);
    v19 = *(float *)&v42;
    v17 = v44;
    v16 = v43;
    v18 = v45;
  }
  else
  {
    v19 = v32;
    v20 = a5;
    v21 = a6;
  }
  *(double *)&v7[v9] = v19;
  *(double *)&v7[v10] = v16;
  *(double *)&v7[v11] = v17;
  *(double *)&v7[v12] = v18;
  v22 = *(double *)&a2;
  v23 = *(double *)&a3;
  if ((a4 & 1) != 0)
  {
    v22 = 0.0;
    v23 = 0.0;
  }
  *v13 = v22;
  v13[1] = v23;
  *(_QWORD *)v14 = v20;
  *((_QWORD *)v14 + 1) = v21;
  *(_QWORD *)&v7[v34] = a7;
  v24 = *(double *)&v7[v11];
  v25 = *(double *)&v7[v12];
  v26 = *(double *)&v7[v9];
  v27 = *(double *)&v7[v10];
  v28 = v7;
  *v15 = sub_23A5CBB80(a7, v24, v25, v26, v27);
  *((_QWORD *)v15 + 1) = v29;

  v41.receiver = v28;
  v41.super_class = (Class)type metadata accessor for CameraCalibration();
  return objc_msgSendSuper2(&v41, sel_init);
}

BOOL sub_23A5C5764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_23A5D0350(a1, (uint64_t)v6, &qword_2569A0330);
  if (v7)
  {
    type metadata accessor for CameraCalibration();
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx) == *(double *)&v5[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx]
        && *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy) == *(double *)&v5[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy]
        && *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox) == *(double *)&v5[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox]
        && *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy) == *(double *)&v5[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy]
        && *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions) == *(double *)&v5[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions]
        && *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions + 8) == *(double *)&v5[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions + 8]
        && (*(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType) == *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType]
         && *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType + 8) == *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType + 8]
         || (sub_23A691518() & 1) != 0))
      {
        v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation);
        v3 = *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation];

        return v2 == v3;
      }

    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v6, &qword_2569A0330);
  }
  return 0;
}

uint64_t sub_23A5C58DC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  id v6;
  id v7;
  char v8;
  _OWORD v10[2];

  if (a3)
  {
    v6 = a1;
    swift_unknownObjectRetain();
    sub_23A6911F4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    v7 = a1;
  }
  v8 = a4(v10);

  sub_23A5C921C((uint64_t)v10, &qword_2569A0330);
  return v8 & 1;
}

id CameraCalibration.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for CameraCalibration);
}

id sub_23A5C5970(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

char *sub_23A5C59C4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA40);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23A5CAA88(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23A5C5ABC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699E9D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23A5CAF8C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23A5C5BE0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA20);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23A5CB640(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A5C5CEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2600);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542D27E8) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_23A691350();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542D27E8) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23A5CFC18(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_23A5C5EFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23A5CB640(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23A5C6008(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9C0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23A5CFD34(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A5C6128(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23A5C6150(a1, a2, a3, a4, &qword_25699E950, type metadata accessor for TrackingMetrics.TrackedPersonInfo);
}

uint64_t sub_23A5C613C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23A5C6150(a1, a2, a3, a4, &qword_25699E948, type metadata accessor for TrackingMetrics.DetectedSubjectInfo);
}

uint64_t sub_23A5C6150(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23A691350();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23A5CFE40(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_23A5C635C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9B8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23A5D015C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23A5C6468(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23A5D024C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_23A5C6588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23A6915C0();
  sub_23A690E7C();
  v4 = sub_23A6915FC();
  return sub_23A5C6740(a1, a2, v4);
}

unint64_t sub_23A5C65EC(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x23B853438](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_23A5C6820(a1, v3);
}

unint64_t sub_23A5C6620(uint64_t a1)
{
  uint64_t v2;

  sub_23A6915C0();
  sub_23A6915CC();
  v2 = sub_23A6915FC();
  return sub_23A5C68BC(a1, v2);
}

unint64_t sub_23A5C6678(unsigned __int8 a1)
{
  uint64_t v2;

  sub_23A6915C0();
  sub_23A6915CC();
  v2 = sub_23A6915FC();
  return sub_23A5C6958(a1, v2);
}

unint64_t sub_23A5C66D0(uint64_t a1)
{
  uint64_t v2;

  sub_23A69072C();
  sub_23A5CFF58(&qword_25699E030, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_23A690DD4();
  return sub_23A5C69F8(a1, v2);
}

unint64_t sub_23A5C6740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23A691518() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23A691518() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23A5C6820(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23A5C68BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23A5C6958(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23A5C69F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_23A69072C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_23A5CFF58(&qword_25699E958, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_23A690DF8();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

_BYTE *sub_23A5C6B3C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_23A5CAB6C(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_23A5CAC2C((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_23A5CACA4((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_23A5C6BB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA58);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_23A5C6E60((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23A5D0154();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_23A5C6C94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA50);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_23A5C705C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23A5D0154();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_23A5C6D78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9A0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_23A5C7254(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23A5D0154();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_23A5C6E60(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23A5C705C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23A5C7254(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_23A5C744C(unint64_t result)
{
  if (result > 5)
    return 0;
  return result;
}

uint64_t type metadata accessor for Track()
{
  return objc_opt_self();
}

unint64_t sub_23A5C747C()
{
  unint64_t result;

  result = qword_25699DEB8;
  if (!qword_25699DEB8)
  {
    result = MEMORY[0x23B853B34](&unk_23A696374, &type metadata for Track.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699DEB8);
  }
  return result;
}

unint64_t sub_23A5C74C0()
{
  unint64_t result;

  result = qword_25699DEC8;
  if (!qword_25699DEC8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrackedSubjectState, &type metadata for TrackedSubjectState);
    atomic_store(result, (unint64_t *)&qword_25699DEC8);
  }
  return result;
}

unint64_t sub_23A5C7504()
{
  unint64_t result;

  result = qword_25699DED0;
  if (!qword_25699DED0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockCoreAccessoryObservationType, &type metadata for DockCoreAccessoryObservationType);
    atomic_store(result, (unint64_t *)&qword_25699DED0);
  }
  return result;
}

unint64_t sub_23A5C7548()
{
  unint64_t result;

  result = qword_25699DEE8;
  if (!qword_25699DEE8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrackedSubjectState, &type metadata for TrackedSubjectState);
    atomic_store(result, (unint64_t *)&qword_25699DEE8);
  }
  return result;
}

unint64_t sub_23A5C758C()
{
  unint64_t result;

  result = qword_25699DEF0;
  if (!qword_25699DEF0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockCoreAccessoryObservationType, &type metadata for DockCoreAccessoryObservationType);
    atomic_store(result, (unint64_t *)&qword_25699DEF0);
  }
  return result;
}

unint64_t sub_23A5C75D0()
{
  unint64_t result;

  result = qword_25699DF00;
  if (!qword_25699DF00)
  {
    result = MEMORY[0x23B853B34](&unk_23A696324, &type metadata for FaceObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699DF00);
  }
  return result;
}

unint64_t sub_23A5C7614()
{
  unint64_t result;

  result = qword_25699DF18;
  if (!qword_25699DF18)
  {
    result = MEMORY[0x23B853B34](&unk_23A6962D4, &type metadata for BodyObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699DF18);
  }
  return result;
}

unint64_t sub_23A5C7658()
{
  unint64_t result;

  result = qword_25699DF30;
  if (!qword_25699DF30)
  {
    result = MEMORY[0x23B853B34](&unk_23A696284, &type metadata for ObjectObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699DF30);
  }
  return result;
}

unint64_t sub_23A5C769C()
{
  unint64_t result;

  result = qword_25699DF48;
  if (!qword_25699DF48)
  {
    result = MEMORY[0x23B853B34](&unk_23A696234, &type metadata for TrackedSubjectState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699DF48);
  }
  return result;
}

unint64_t sub_23A5C76E0()
{
  unint64_t result;

  result = qword_25699DF58;
  if (!qword_25699DF58)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for SubjectMotionState, &type metadata for SubjectMotionState);
    atomic_store(result, (unint64_t *)&qword_25699DF58);
  }
  return result;
}

unint64_t sub_23A5C7724()
{
  unint64_t result;

  result = qword_25699DF70;
  if (!qword_25699DF70)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for SubjectMotionState, &type metadata for SubjectMotionState);
    atomic_store(result, (unint64_t *)&qword_25699DF70);
  }
  return result;
}

unint64_t sub_23A5C7768()
{
  unint64_t result;

  result = qword_25699DF80;
  if (!qword_25699DF80)
  {
    result = MEMORY[0x23B853B34](&unk_23A6961E4, &type metadata for InputSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699DF80);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B853B28](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23A5C77F0()
{
  unint64_t result;

  result = qword_25699DF98;
  if (!qword_25699DF98)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for FaceObservation, &type metadata for FaceObservation);
    atomic_store(result, (unint64_t *)&qword_25699DF98);
  }
  return result;
}

unint64_t sub_23A5C7834()
{
  unint64_t result;

  result = qword_25699DFB0;
  if (!qword_25699DFB0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for BodyObservation, &type metadata for BodyObservation);
    atomic_store(result, (unint64_t *)&qword_25699DFB0);
  }
  return result;
}

unint64_t sub_23A5C7878()
{
  unint64_t result;

  result = qword_25699DFC8;
  if (!qword_25699DFC8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for FaceObservation, &type metadata for FaceObservation);
    atomic_store(result, (unint64_t *)&qword_25699DFC8);
  }
  return result;
}

unint64_t sub_23A5C78BC()
{
  unint64_t result;

  result = qword_25699DFD8;
  if (!qword_25699DFD8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for BodyObservation, &type metadata for BodyObservation);
    atomic_store(result, (unint64_t *)&qword_25699DFD8);
  }
  return result;
}

unint64_t sub_23A5C7900()
{
  unint64_t result;

  result = qword_25699DFE8;
  if (!qword_25699DFE8)
  {
    result = MEMORY[0x23B853B34](&unk_23A696194, &type metadata for DebugMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699DFE8);
  }
  return result;
}

uint64_t type metadata accessor for DebugMessage()
{
  return objc_opt_self();
}

unint64_t sub_23A5C7964()
{
  unint64_t result;

  result = qword_25699E010;
  if (!qword_25699E010)
  {
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25699E010);
  }
  return result;
}

uint64_t sub_23A5C79A8()
{
  unint64_t v0;

  v0 = sub_23A6913B0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_23A5C79F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1952671090 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C676E41776179 && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E416863746970 && a2 == 0xEA0000000000656CLL || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4972656B63617274 && a2 == 0xE900000000000064 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7974696C61646F6DLL && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F43746E697270 && a2 == 0xEF65636E65646966 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6563614677656ELL && a2 == 0xE700000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x644970756F7267 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_23A5C7E18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1952671090 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4972656B63617274 && a2 == 0xE900000000000064 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7974696C61646F6DLL && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F43746E697270 && a2 == 0xEF65636E65646966 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x79646F4277656ELL && a2 == 0xE700000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x644970756F7267 && a2 == 0xE700000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x64756C63634F7369 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_23A5C81DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1952671090 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4972656B63617274 && a2 == 0xE900000000000064 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23A5C8384(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4972656B63617274 && a2 == 0xE900000000000064;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x644965636166 && a2 == 0xE600000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x786F4265636166 && a2 == 0xE700000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x786F4279646F62 && a2 == 0xE700000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C676E41776179 && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E416863746970 && a2 == 0xEA0000000000656CLL || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x5072616C75676E61 && a2 == 0xEF6E6F697469736FLL || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x5672616C75676E61 && a2 == 0xEF797469636F6C65 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023A69C910 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F506172656D6163 && a2 == 0xEE006E6F69746973 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x65566172656D6163 && a2 == 0xEE00797469636F6CLL || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6F69746F4D776179 && a2 == 0xEE0065746174536ELL || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023A69C930 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023A69C950 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6576697463417369 && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x65636E6174736964 && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x4965636146707369 && a2 == 0xE900000000000064 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4979646F42707369 && a2 == 0xE900000000000064 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x63614665636E6973 && a2 == 0xED00006E65655365)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 20;
    else
      return 21;
  }
}

uint64_t sub_23A5C8C9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7365636166 && a2 == 0xE500000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736569646F62 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A5C8D7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6369706F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_23A5C8E64()
{
  void *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  objc_class *v19;
  uint64_t ObjectType;
  char *v22;
  __int128 v23;
  void *v24;
  unint64_t v25;
  objc_super v26;
  _BYTE v27[24];
  uint64_t v28;

  ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC40);
  MEMORY[0x24BDAC7A8]();
  v2 = (char *)&ObjectType - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23A69072C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v22 = (char *)&ObjectType - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v6 = swift_allocObject();
  v23 = xmmword_23A694020;
  *(_OWORD *)(v6 + 16) = xmmword_23A694020;
  *(_QWORD *)(v6 + 32) = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  v7 = v0;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v28)
  {
    if (swift_dynamicCast())
    {
      v8 = v24;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v27, &qword_2569A0330);
  }
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 2);
LABEL_6:
  v9 = objc_msgSend(v8, sel_integerValue, ObjectType);
  v10 = 1;
  if (v9 != (id)1)
    v10 = 2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type] = v10;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v23;
  v12 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  *(_QWORD *)(v11 + 32) = v12;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v28)
  {
    if (swift_dynamicCast())
    {
      v13 = v24;
      v14 = v25;
      goto LABEL_13;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v27, &qword_2569A0330);
  }
  v13 = 0;
  v14 = 0xE000000000000000;
LABEL_13:
  v15 = &v7[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name];
  *(_QWORD *)v15 = v13;
  *((_QWORD *)v15 + 1) = v14;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v23;
  *(_QWORD *)(v16 + 32) = v12;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v28)
  {
    if (swift_dynamicCast())
    {
      v17 = v22;
      goto LABEL_18;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v27, &qword_2569A0330);
  }
  v17 = v22;
LABEL_18:
  sub_23A6906E4();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_23A690720();

    sub_23A5C921C((uint64_t)v2, &qword_25699FC40);
    v18 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  }
  else
  {

    v18 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v18(v17, v2, v3);
  }
  v19 = (objc_class *)ObjectType;
  v18(&v7[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_identifier], v17, v3);

  v26.receiver = v7;
  v26.super_class = v19;
  return objc_msgSendSuper2(&v26, sel_init);
}

uint64_t sub_23A5C921C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23A5C9258()
{
  unint64_t result;

  result = qword_25699E040;
  if (!qword_25699E040)
  {
    result = MEMORY[0x23B853B34](&unk_23A696144, &type metadata for DockCoreInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E040);
  }
  return result;
}

unint64_t sub_23A5C929C()
{
  unint64_t result;

  result = qword_25699E048;
  if (!qword_25699E048)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockCoreAccessoryType, &type metadata for DockCoreAccessoryType);
    atomic_store(result, (unint64_t *)&qword_25699E048);
  }
  return result;
}

unint64_t sub_23A5C92E0()
{
  unint64_t result;

  result = qword_25699E060;
  if (!qword_25699E060)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockCoreAccessoryType, &type metadata for DockCoreAccessoryType);
    atomic_store(result, (unint64_t *)&qword_25699E060);
  }
  return result;
}

uint64_t sub_23A5C9324(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23A5C9464(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

uint64_t type metadata accessor for CameraLimit()
{
  return objc_opt_self();
}

unint64_t sub_23A5C9494(uint64_t a1)
{
  return sub_23A5C94AC(a1, &qword_25699FBD0);
}

unint64_t sub_23A5C94A0(uint64_t a1)
{
  return sub_23A5C94AC(a1, (uint64_t *)&unk_25699E990);
}

unint64_t sub_23A5C94AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)sub_23A691398();
  v5 = *(_DWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  result = sub_23A5C65EC(v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v4;
  }
  v9 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v4[6] + 4 * result) = v5;
    *(_QWORD *)(v4[7] + 8 * result) = v6;
    v10 = v4[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v4[2] = v12;
    if (!--v2)
      goto LABEL_8;
    v13 = v9 + 2;
    v5 = *((_DWORD *)v9 - 2);
    v14 = *v9;
    swift_unknownObjectRetain();
    result = sub_23A5C65EC(v5);
    v9 = v13;
    v6 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23A5C95A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  unint64_t result;
  char v6;
  _OWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  _OWORD *v11;
  char v12;
  __int128 v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC30);
  v3 = (_QWORD *)sub_23A691398();
  v4 = *(_BYTE *)(a1 + 32);
  v13 = *(_OWORD *)(a1 + 40);
  result = sub_23A5C6678(v4);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v7 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v13;
    v8 = v3[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      break;
    v3[2] = v10;
    if (!--v1)
      goto LABEL_8;
    v11 = (_OWORD *)((char *)v7 + 24);
    v4 = *((_BYTE *)v7 - 8);
    v13 = *v7;
    swift_retain();
    result = sub_23A5C6678(v4);
    v7 = v11;
    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23A5C96AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699E9E0);
    v3 = (_QWORD *)sub_23A691398();
    for (i = (_OWORD *)(a1 + 40); ; i = (_OWORD *)((char *)i + 24))
    {
      v5 = *((_QWORD *)i - 1);
      v11 = *i;
      result = sub_23A5C6620(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t type metadata accessor for TrajectoryPoint()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TrajectoryProgress()
{
  return objc_opt_self();
}

unint64_t sub_23A5C97C8()
{
  unint64_t result;

  result = qword_25699E178;
  if (!qword_25699E178)
  {
    result = MEMORY[0x23B853B34](&unk_23A6960F4, &type metadata for TrajectoryProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E178);
  }
  return result;
}

unint64_t sub_23A5C980C()
{
  unint64_t result;

  result = qword_25699E188;
  if (!qword_25699E188)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryStatus, &type metadata for TrajectoryStatus);
    atomic_store(result, (unint64_t *)&qword_25699E188);
  }
  return result;
}

unint64_t sub_23A5C9850()
{
  unint64_t result;

  result = qword_25699E1A0;
  if (!qword_25699E1A0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryStatus, &type metadata for TrajectoryStatus);
    atomic_store(result, (unint64_t *)&qword_25699E1A0);
  }
  return result;
}

unint64_t sub_23A5C9894()
{
  unint64_t result;

  result = qword_25699E1C8;
  if (!qword_25699E1C8)
  {
    result = MEMORY[0x23B853B34](&unk_23A6960A4, &type metadata for TrajectoryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E1C8);
  }
  return result;
}

uint64_t sub_23A5C98D8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25699E1D0);
    v8 = a2;
    result = MEMORY[0x23B853B34](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23A5C9938()
{
  unint64_t result;

  result = qword_25699E1F0;
  if (!qword_25699E1F0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for Errors, &type metadata for Errors);
    atomic_store(result, (unint64_t *)&qword_25699E1F0);
  }
  return result;
}

uint64_t sub_23A5C997C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736572676F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6175746361 && a2 == 0xE600000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xE900000000000065 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x654D737574617473 && a2 == 0xED00006567617373)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23A5C9C1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE900000000000073 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697469636F6C6576 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id sub_23A5C9D78()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  char *v3;
  id v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  id v15;
  char v16;
  char *v17;
  uint64_t v18;
  int v19;
  id v20;
  char v21;
  char *v22;
  __int128 v24;
  id v25;
  unint64_t v26;
  objc_super v27;
  _BYTE v28[24];
  uint64_t v29;

  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23A694020;
  *(_QWORD *)(v2 + 32) = sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  v3 = v0;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v29)
  {
    if (swift_dynamicCast())
    {
      v4 = v25;
      v5 = v26;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v28, &qword_2569A0330);
  }
  v4 = 0;
  v5 = 0xE000000000000000;
LABEL_6:
  v6 = &v3[OBJC_IVAR____TtC11DockKitCore11CameraLimit_model];
  *(_QWORD *)v6 = v4;
  *((_QWORD *)v6 + 1) = v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23A694020;
  v8 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  *(_QWORD *)(v7 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v29)
  {
    if (swift_dynamicCast())
    {
      v9 = v25;
      goto LABEL_11;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v28, &qword_2569A0330);
  }
  v9 = (void *)sub_23A691164();
LABEL_11:
  v10 = sub_23A68ABD4((unint64_t)objc_msgSend(v9, sel_integerValue, 1, 2));
  if ((v11 & 1) != 0)
    v12 = 1;
  else
    v12 = v10;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore11CameraLimit_camera] = v12;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v24;
  *(_QWORD *)(v13 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v29)
  {
    v14 = swift_dynamicCast();
    v15 = v25;
    if (!v14)
      v15 = 0;
    v16 = v14 ^ 1;
  }
  else
  {
    sub_23A5C921C((uint64_t)v28, &qword_2569A0330);
    v15 = 0;
    v16 = 1;
  }
  v17 = &v3[OBJC_IVAR____TtC11DockKitCore11CameraLimit_minPosition];
  *(_QWORD *)v17 = v15;
  v17[8] = v16;
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v24;
  *(_QWORD *)(v18 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();

  if (v29)
  {
    v19 = swift_dynamicCast();
    v20 = v25;
    if (!v19)
      v20 = 0;
    v21 = v19 ^ 1;
  }
  else
  {
    sub_23A5C921C((uint64_t)v28, &qword_2569A0330);
    v20 = 0;
    v21 = 1;
  }
  v22 = &v3[OBJC_IVAR____TtC11DockKitCore11CameraLimit_maxPosition];
  *(_QWORD *)v22 = v20;
  v22[8] = v21;

  v27.receiver = v3;
  v27.super_class = ObjectType;
  return objc_msgSendSuper2(&v27, sel_init);
}

unint64_t sub_23A5CA100()
{
  unint64_t result;

  result = qword_25699E220;
  if (!qword_25699E220)
  {
    result = MEMORY[0x23B853B34](&unk_23A696054, &type metadata for TrajectoryCommand.TrajectoryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E220);
  }
  return result;
}

unint64_t sub_23A5CA144()
{
  unint64_t result;

  result = qword_25699E238;
  if (!qword_25699E238)
  {
    result = MEMORY[0x23B853B34](&unk_23A696004, &type metadata for TrajectoryCommand.Trajectory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E238);
  }
  return result;
}

unint64_t sub_23A5CA188()
{
  unint64_t result;

  result = qword_25699E250;
  if (!qword_25699E250)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.TrajectoryPoint, &type metadata for TrajectoryCommand.TrajectoryPoint);
    atomic_store(result, (unint64_t *)&qword_25699E250);
  }
  return result;
}

unint64_t sub_23A5CA1CC()
{
  unint64_t result;

  result = qword_25699E268;
  if (!qword_25699E268)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.TrajectoryPoint, &type metadata for TrajectoryCommand.TrajectoryPoint);
    atomic_store(result, (unint64_t *)&qword_25699E268);
  }
  return result;
}

unint64_t sub_23A5CA210()
{
  unint64_t result;

  result = qword_25699E270;
  if (!qword_25699E270)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Progress, &type metadata for TrajectoryCommand.Progress);
    atomic_store(result, (unint64_t *)&qword_25699E270);
  }
  return result;
}

uint64_t sub_23A5CA254(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23A5CA298(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_23A5CA2DC()
{
  unint64_t result;

  result = qword_25699E288;
  if (!qword_25699E288)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Progress, &type metadata for TrajectoryCommand.Progress);
    atomic_store(result, (unint64_t *)&qword_25699E288);
  }
  return result;
}

unint64_t sub_23A5CA320()
{
  unint64_t result;

  result = qword_25699E298;
  if (!qword_25699E298)
  {
    result = MEMORY[0x23B853B34](&unk_23A695FB4, &type metadata for TrajectoryCommand.Progress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E298);
  }
  return result;
}

unint64_t sub_23A5CA364()
{
  unint64_t result;

  result = qword_25699E2A0;
  if (!qword_25699E2A0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Animation, &type metadata for TrajectoryCommand.Animation);
    atomic_store(result, (unint64_t *)&qword_25699E2A0);
  }
  return result;
}

unint64_t sub_23A5CA3A8()
{
  unint64_t result;

  result = qword_25699E2A8;
  if (!qword_25699E2A8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Status, &type metadata for TrajectoryCommand.Status);
    atomic_store(result, (unint64_t *)&qword_25699E2A8);
  }
  return result;
}

unint64_t sub_23A5CA3EC()
{
  unint64_t result;

  result = qword_25699E2B8;
  if (!qword_25699E2B8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Animation, &type metadata for TrajectoryCommand.Animation);
    atomic_store(result, (unint64_t *)&qword_25699E2B8);
  }
  return result;
}

unint64_t sub_23A5CA430()
{
  unint64_t result;

  result = qword_25699E2C0;
  if (!qword_25699E2C0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Status, &type metadata for TrajectoryCommand.Status);
    atomic_store(result, (unint64_t *)&qword_25699E2C0);
  }
  return result;
}

unint64_t sub_23A5CA474()
{
  unint64_t result;

  result = qword_25699E2C8;
  if (!qword_25699E2C8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand, &type metadata for TrajectoryCommand);
    atomic_store(result, (unint64_t *)&qword_25699E2C8);
  }
  return result;
}

unint64_t sub_23A5CA4B8()
{
  unint64_t result;

  result = qword_25699E2D0;
  if (!qword_25699E2D0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand, &type metadata for TrajectoryCommand);
    atomic_store(result, (unint64_t *)&qword_25699E2D0);
  }
  return result;
}

uint64_t sub_23A5CA4FC()
{
  unint64_t v0;

  v0 = sub_23A6913B0();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_23A5CA544(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469636F6C6576 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23A5CA688(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73746E696F70 && a2 == 0xE600000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F746175746361 && a2 == 0xEA00000000006449 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65766974616C6572 && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xEF646E616D6D6F43 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x797469636F6C6576 && a2 == 0xEF646E616D6D6F43)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23A5CA94C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E6563726570 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

char *sub_23A5CAA88(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5CAB6C(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_23A5CAC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_23A69054C();
  swift_allocObject();
  result = sub_23A690540();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23A69060C();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_23A5CACA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_23A69054C();
  swift_allocObject();
  result = sub_23A690540();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_23A5CAD24(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA30);
  v10 = sub_23A5D03DC(&qword_25699EA38, &qword_25699EA30, MEMORY[0x24BDCFBE0]);
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1Tm(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_23A5C6B3C(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v5;
}

unint64_t sub_23A5CADD4()
{
  unint64_t result;

  result = qword_25699E2E0;
  if (!qword_25699E2E0)
  {
    result = MEMORY[0x23B853B34](&unk_23A695F64, &type metadata for TrajectoryCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E2E0);
  }
  return result;
}

unint64_t sub_23A5CAE18()
{
  unint64_t result;

  result = qword_25699E2E8;
  if (!qword_25699E2E8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Priority, &type metadata for TrajectoryCommand.Priority);
    atomic_store(result, (unint64_t *)&qword_25699E2E8);
  }
  return result;
}

unint64_t sub_23A5CAE5C()
{
  unint64_t result;

  result = qword_25699E300;
  if (!qword_25699E300)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Trajectory, &type metadata for TrajectoryCommand.Trajectory);
    atomic_store(result, (unint64_t *)&qword_25699E300);
  }
  return result;
}

unint64_t sub_23A5CAEA0()
{
  unint64_t result;

  result = qword_25699E310;
  if (!qword_25699E310)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Priority, &type metadata for TrajectoryCommand.Priority);
    atomic_store(result, (unint64_t *)&qword_25699E310);
  }
  return result;
}

uint64_t sub_23A5CAEE4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x23B853B34](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23A5CAF48()
{
  unint64_t result;

  result = qword_25699E320;
  if (!qword_25699E320)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Trajectory, &type metadata for TrajectoryCommand.Trajectory);
    atomic_store(result, (unint64_t *)&qword_25699E320);
  }
  return result;
}

char *sub_23A5CAF8C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 24 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5CB078(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F7463656A617274 && a2 == 0xEC00000073656972)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id sub_23A5CB1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v8;
  char *v9;
  unsigned __int8 v10;
  char *v11;
  char v12;
  char *v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v4[OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent_name];
  *(_QWORD *)v8 = a3;
  *((_QWORD *)v8 + 1) = a4;
  v9 = v4;
  LODWORD(a4) = sub_23A690654() << 16;
  LODWORD(a4) = a4 & 0xFFFF00FF | (sub_23A690654() << 8);
  v10 = sub_23A690654();
  v11 = &v9[OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__payload];
  *(_DWORD *)v11 = a4 & 0xFFFFFF00 | v10;
  v11[4] = 0;
  v12 = sub_23A690654();
  v13 = &v9[OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__header];
  *v13 = v12;
  v13[1] = 0;
  sub_23A5D03A4(0, &qword_25699EA28);
  v14 = v9;
  v15 = sub_23A6911A0();
  v16 = sub_23A691044();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v17 = 67109120;

    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v15, v16, "event payload: %u", v17, 8u);
    MEMORY[0x23B853BD0](v17, -1, -1);

  }
  else
  {

  }
  v19.receiver = v14;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_init);
}

id sub_23A5CB3B4()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char *v10;
  uint64_t v11;
  char v12;
  char *v13;
  uint64_t v15;
  unint64_t v16;
  objc_super v17;
  _BYTE v18[24];
  uint64_t v19;

  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23A694020;
  *(_QWORD *)(v2 + 32) = sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  v3 = v0;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v19)
  {
    if (swift_dynamicCast())
    {
      v4 = v15;
      v5 = v16;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v18, &qword_2569A0330);
  }
  v4 = 0;
  v5 = 0xE000000000000000;
LABEL_6:
  v6 = &v3[OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent_name];
  *(_QWORD *)v6 = v4;
  *((_QWORD *)v6 + 1) = v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23A694020;
  v8 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  *(_QWORD *)(v7 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v19)
  {
    if (swift_dynamicCast())
    {
      v9 = v15;
      goto LABEL_11;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v18, &qword_2569A0330);
  }
  v9 = 0;
LABEL_11:
  v10 = &v3[OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__payload];
  *(_DWORD *)v10 = v9;
  v10[4] = 0;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23A694020;
  *(_QWORD *)(v11 + 32) = v8;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (!v19)
  {
    sub_23A5C921C((uint64_t)v18, &qword_2569A0330);
    goto LABEL_15;
  }
  if (!swift_dynamicCast())
  {
LABEL_15:
    v12 = 0;
    goto LABEL_16;
  }
  v12 = v15;
LABEL_16:
  v13 = &v3[OBJC_IVAR____TtC11DockKitCore20AccessorySystemEvent__header];
  *v13 = v12;
  v13[1] = 0;

  v17.receiver = v3;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_init);
}

char *sub_23A5CB640(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23A6913A4();
  __break(1u);
  return result;
}

id sub_23A5CB728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v8;
  char *v9;
  unsigned __int8 v10;
  int v11;
  _BOOL8 v12;
  BOOL v13;
  uint64_t v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v4[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_name];
  *(_QWORD *)v8 = a3;
  *((_QWORD *)v8 + 1) = a4;
  v9 = v4;
  v10 = sub_23A690654();
  v11 = v10 >> 1;
  v12 = v11 == 1;
  v13 = v11 == 2;
  v14 = 2;
  if (!v13)
    v14 = v12;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_chargeState] = v14;
  v9[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_lowBattery] = v10 & 1;
  *(double *)&v9[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_batteryPercent] = (double)sub_23A690654()
                                                                                      / 100.0;

  v16.receiver = v9;
  v16.super_class = ObjectType;
  return objc_msgSendSuper2(&v16, sel_init);
}

id sub_23A5CB818()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v15;
  unint64_t v16;
  objc_super v17;
  _BYTE v18[24];
  uint64_t v19;

  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23A694020;
  v3 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  *(_QWORD *)(v2 + 32) = v3;
  v4 = v0;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v19)
  {
    if (swift_dynamicCast())
    {
      v5 = v15;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v18, &qword_2569A0330);
  }
  v5 = 0;
LABEL_6:
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_batteryPercent] = v5;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23A694020;
  *(_QWORD *)(v6 + 32) = v3;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v19)
  {
    if (swift_dynamicCast())
    {
      v7 = v15;
      goto LABEL_11;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v18, &qword_2569A0330);
  }
  v7 = 0;
LABEL_11:
  v4[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_lowBattery] = v7;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23A694020;
  *(_QWORD *)(v8 + 32) = v3;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (!v19)
  {
    sub_23A5C921C((uint64_t)v18, &qword_2569A0330);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    v9 = 0;
    goto LABEL_18;
  }
  v9 = v15;
  if (v15 != 2)
    v9 = v15 == 1;
LABEL_18:
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_chargeState] = v9;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23A694020;
  *(_QWORD *)(v10 + 32) = sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (!v19)
  {
    sub_23A5C921C((uint64_t)v18, &qword_2569A0330);
    goto LABEL_22;
  }
  if (!swift_dynamicCast())
  {
LABEL_22:
    v11 = 0xE700000000000000;
    v12 = 0x6E776F6E6B6E75;
    goto LABEL_23;
  }
  v12 = v15;
  v11 = v16;
LABEL_23:
  v13 = (uint64_t *)&v4[OBJC_IVAR____TtC11DockKitCore21AccessoryBatteryState_name];
  *v13 = v12;
  v13[1] = v11;

  v17.receiver = v4;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t type metadata accessor for CameraCalibration()
{
  return objc_opt_self();
}

double sub_23A5CBB80(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v9;
  double v10;

  if ((unint64_t)(a1 - 3) > 1)
  {
    v9 = atan(a3 / a5);
    v10 = a2 / a4;
  }
  else
  {
    v9 = atan(a2 / a4);
    v10 = a3 / a5;
  }
  atan(v10);
  return v9 + v9;
}

uint64_t sub_23A5CBBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E3A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A5CBC3C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, __int128 *a3@<X8>)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = result;
  v6 = xmmword_23A694120;
  v7 = xmmword_23A694130;
  v8 = xmmword_23A694140;
  if (result != 0x6570795474726F50 || a2 != 0xED0000746E6F7246)
  {
    result = sub_23A691518();
    if ((result & 1) != 0)
      goto LABEL_4;
    v6 = xmmword_23A694150;
    v7 = xmmword_23A694160;
    v8 = xmmword_23A694170;
    if (v4 != 0x6570795474726F50 || a2 != 0xEC0000006B636142)
    {
      result = sub_23A691518();
      v8 = xmmword_23A694170;
      v7 = xmmword_23A694160;
      v6 = xmmword_23A694150;
      if ((result & 1) == 0)
      {
        v6 = xmmword_23A694180;
        v7 = xmmword_23A694190;
        v8 = xmmword_23A6941A0;
        if (v4 != 0xD000000000000015 || a2 != 0x800000023A69CA70)
        {
          result = sub_23A691518();
          v8 = xmmword_23A6941A0;
          v7 = xmmword_23A694190;
          v6 = xmmword_23A694180;
          if ((result & 1) == 0)
          {
            v6 = xmmword_23A6941B0;
            v7 = xmmword_23A6941C0;
            v8 = xmmword_23A6941D0;
            if (v4 != 0xD000000000000015 || a2 != 0x800000023A69CA90)
            {
              result = sub_23A691518();
              v8 = xmmword_23A6941D0;
              v7 = xmmword_23A6941C0;
              v6 = xmmword_23A6941B0;
              if ((result & 1) == 0)
              {
LABEL_4:
                v8 = xmmword_23A694140;
                v7 = xmmword_23A694130;
                v6 = xmmword_23A694120;
              }
            }
          }
        }
      }
    }
  }
  *a3 = v8;
  a3[1] = v7;
  a3[2] = v6;
  return result;
}

unint64_t sub_23A5CBE60()
{
  unint64_t result;

  result = qword_25699E3A8;
  if (!qword_25699E3A8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockStatus, &type metadata for DockStatus);
    atomic_store(result, (unint64_t *)&qword_25699E3A8);
  }
  return result;
}

unint64_t sub_23A5CBEA8()
{
  unint64_t result;

  result = qword_25699E3B0;
  if (!qword_25699E3B0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for PairingRequestState, &type metadata for PairingRequestState);
    atomic_store(result, (unint64_t *)&qword_25699E3B0);
  }
  return result;
}

unint64_t sub_23A5CBEF0()
{
  unint64_t result;

  result = qword_25699E3B8;
  if (!qword_25699E3B8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for SubjectMotionState, &type metadata for SubjectMotionState);
    atomic_store(result, (unint64_t *)&qword_25699E3B8);
  }
  return result;
}

unint64_t sub_23A5CBF38()
{
  unint64_t result;

  result = qword_25699E3C0;
  if (!qword_25699E3C0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for ActuatorType, &type metadata for ActuatorType);
    atomic_store(result, (unint64_t *)&qword_25699E3C0);
  }
  return result;
}

unint64_t sub_23A5CBF80()
{
  unint64_t result;

  result = qword_25699E3C8;
  if (!qword_25699E3C8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryStatus, &type metadata for TrajectoryStatus);
    atomic_store(result, (unint64_t *)&qword_25699E3C8);
  }
  return result;
}

unint64_t sub_23A5CBFC8()
{
  unint64_t result;

  result = qword_25699E3D0;
  if (!qword_25699E3D0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Animation, &type metadata for TrajectoryCommand.Animation);
    atomic_store(result, (unint64_t *)&qword_25699E3D0);
  }
  return result;
}

unint64_t sub_23A5CC010()
{
  unint64_t result;

  result = qword_25699E3D8;
  if (!qword_25699E3D8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Priority, &type metadata for TrajectoryCommand.Priority);
    atomic_store(result, (unint64_t *)&qword_25699E3D8);
  }
  return result;
}

unint64_t sub_23A5CC058()
{
  unint64_t result;

  result = qword_25699E3E0;
  if (!qword_25699E3E0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Status, &type metadata for TrajectoryCommand.Status);
    atomic_store(result, (unint64_t *)&qword_25699E3E0);
  }
  return result;
}

unint64_t sub_23A5CC0A0()
{
  unint64_t result;

  result = qword_25699E3E8;
  if (!qword_25699E3E8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitFeatures, &type metadata for DockKitFeatures);
    atomic_store(result, (unint64_t *)&qword_25699E3E8);
  }
  return result;
}

unint64_t sub_23A5CC0E8()
{
  unint64_t result;

  result = qword_25699E3F0;
  if (!qword_25699E3F0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for AccessoryChargeState, &type metadata for AccessoryChargeState);
    atomic_store(result, (unint64_t *)&qword_25699E3F0);
  }
  return result;
}

uint64_t sub_23A5CC12C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5B56F4(a1, &OBJC_IVAR____TtC11DockKitCore5Track__id, a2);
}

uint64_t sub_23A5CC148(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B6A88(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__id);
}

uint64_t sub_23A5CC164@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5B56F4(a1, &OBJC_IVAR____TtC11DockKitCore5Track__faceID, a2);
}

uint64_t sub_23A5CC180(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B6A88(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__faceID);
}

uint64_t sub_23A5CC19C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23A5B58FC(a1, &OBJC_IVAR____TtC11DockKitCore5Track__faceYaw, a2);
}

uint64_t sub_23A5CC1B8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B5998(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__faceYaw);
}

uint64_t sub_23A5CC1D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23A5B58FC(a1, &OBJC_IVAR____TtC11DockKitCore5Track__facePitch, a2);
}

uint64_t sub_23A5CC1F0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B5998(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__facePitch);
}

double sub_23A5CC20C@<D0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_23A5B5D94(a1, &OBJC_IVAR____TtC11DockKitCore5Track__bodyBox, a2).n128_u64[0];
  return result;
}

uint64_t sub_23A5CC228(__int128 *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B5E40(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__bodyBox);
}

double sub_23A5CC244@<D0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_23A5B5D94(a1, &OBJC_IVAR____TtC11DockKitCore5Track__faceBox, a2).n128_u64[0];
  return result;
}

uint64_t sub_23A5CC260(__int128 *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B5E40(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__faceBox);
}

uint64_t sub_23A5CC27C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5B6324(a1, &OBJC_IVAR____TtC11DockKitCore5Track__weightVertical, a2);
}

uint64_t sub_23A5CC298(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B63B4(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__weightVertical);
}

uint64_t sub_23A5CC2B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5B6324(a1, &OBJC_IVAR____TtC11DockKitCore5Track__weightHorizontal, a2);
}

uint64_t sub_23A5CC2D0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B63B4(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__weightHorizontal);
}

uint64_t sub_23A5CC2EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5B6324(a1, &OBJC_IVAR____TtC11DockKitCore5Track__timeSinceLastSeen, a2);
}

uint64_t sub_23A5CC308(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B63B4(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__timeSinceLastSeen);
}

uint64_t sub_23A5CC330(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5B6A88(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore5Track__type);
}

uint64_t sub_23A5CC34C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A5CC35C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5CC38C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A5CC39C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5CC3CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5BD32C(a1, &OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition, a2);
}

uint64_t sub_23A5CC3E8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5BD3BC(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
}

uint64_t sub_23A5CC404@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5BD32C(a1, &OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition, a2);
}

uint64_t sub_23A5CC420(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5BD3BC(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
}

uint64_t sub_23A5CC43C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5BD32C(a1, &OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed, a2);
}

uint64_t sub_23A5CC458(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5BD3BC(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed);
}

uint64_t sub_23A5CC474@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5BD32C(a1, &OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition, a2);
}

uint64_t sub_23A5CC490(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5BD3BC(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition);
}

uint64_t sub_23A5CC4B0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5BD3BC(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore8Actuator__currentVelocity);
}

uint64_t sub_23A5CC4CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5BD32C(a1, &OBJC_IVAR____TtC11DockKitCore8Actuator__currentAcceleration, a2);
}

uint64_t sub_23A5CC4E8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5BD3BC(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore8Actuator__currentAcceleration);
}

uint64_t sub_23A5CC504@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23A5BD32C(a1, &OBJC_IVAR____TtC11DockKitCore8Actuator__homePosition, a2);
}

uint64_t sub_23A5CC520(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_23A5BD3BC(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore8Actuator__homePosition);
}

double sub_23A5CC53C@<D0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*a1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_progress);
  *a2 = result;
  return result;
}

double sub_23A5CC554(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *(double *)(*a2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_progress) = *a1;
  return result;
}

id sub_23A5CC56C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual);
  *a2 = v2;
  return v2;
}

void sub_23A5CC584(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_actual) = *a1;
  v3 = v2;

}

id sub_23A5CC5C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command);
  *a2 = v2;
  return v2;
}

void sub_23A5CC5D8(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_command) = *a1;
  v3 = v2;

}

id sub_23A5CC614@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference);
  *a2 = v2;
  return v2;
}

void sub_23A5CC62C(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_reference) = *a1;
  v3 = v2;

}

_QWORD *sub_23A5CC668@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status);
  return result;
}

_BYTE *sub_23A5CC680(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status) = *result;
  return result;
}

uint64_t sub_23A5CC698@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*a1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_statusMessage);
  v3 = v2[1];
  *a2 = *v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A5CC6B4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_statusMessage);
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

double sub_23A5CC6F0@<D0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*a1 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time);
  *a2 = result;
  return result;
}

double sub_23A5CC708(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *(double *)(*a2 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_time) = *a1;
  return result;
}

uint64_t sub_23A5CC720@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A5CC738(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_positions);
}

uint64_t sub_23A5CC744@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A5CC75C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore15TrajectoryPoint_velocities);
}

uint64_t keypath_set_54Tm(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  *(_QWORD *)(*a2 + *a5) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

double sub_23A5CC79C@<D0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*a1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx);
  *a2 = result;
  return result;
}

double sub_23A5CC7B4(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *(double *)(*a2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx) = *a1;
  return result;
}

double sub_23A5CC7CC@<D0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*a1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy);
  *a2 = result;
  return result;
}

double sub_23A5CC7E4(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *(double *)(*a2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy) = *a1;
  return result;
}

double sub_23A5CC7FC@<D0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*a1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox);
  *a2 = result;
  return result;
}

double sub_23A5CC814(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *(double *)(*a2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox) = *a1;
  return result;
}

double sub_23A5CC82C@<D0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*a1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy);
  *a2 = result;
  return result;
}

double sub_23A5CC844(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *(double *)(*a2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy) = *a1;
  return result;
}

__n128 sub_23A5CC85C@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *(__n128 *)(*a1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions);
  *a2 = result;
  return result;
}

__n128 sub_23A5CC874(__n128 *a1, _QWORD *a2)
{
  __n128 result;

  result = *a1;
  *(__n128 *)(*a2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions) = *a1;
  return result;
}

uint64_t sub_23A5CC88C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*a1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType);
  v3 = v2[1];
  *a2 = *v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A5CC8A8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_portType);
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23A5CC8E4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation);
  return result;
}

_QWORD *sub_23A5CC8FC(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_orientation) = *result;
  return result;
}

__n128 sub_23A5CC914@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *(__n128 *)(*a1 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fov);
  *a2 = result;
  return result;
}

__n128 sub_23A5CC92C(__n128 *a1, _QWORD *a2)
{
  __n128 result;

  result = *a1;
  *(__n128 *)(*a2 + OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fov) = *a1;
  return result;
}

uint64_t dispatch thunk of DockStatusDelegate.statusUpdated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_23A5CC960(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23A5CC968(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DockStatus()
{
  return &type metadata for DockStatus;
}

ValueMetadata *type metadata accessor for PairingRequestState()
{
  return &type metadata for PairingRequestState;
}

uint64_t type metadata accessor for ClientDictionary()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClientDictionary()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClientDictionary.__allocating_init(dictionary:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for Track()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Track.faceID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of Track.faceID.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of Track.faceYaw.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of Track.faceYaw.setter(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))((*MEMORY[0x24BEE4EA0] & *v2) + 0x100))(a1, a2 & 1);
}

uint64_t dispatch thunk of Track.facePitch.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of Track.facePitch.setter(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))((*MEMORY[0x24BEE4EA0] & *v2) + 0x118))(a1, a2 & 1);
}

uint64_t dispatch thunk of Track.facePitch.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of Track.bodyBox.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of Track.bodyBox.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of Track.bodyBox.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of Track.faceBox.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of Track.faceBox.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of Track.faceBox.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of Track.weightVertical.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of Track.weightVertical.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of Track.weightVertical.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of Track.weightHorizontal.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of Track.weightHorizontal.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of Track.weightHorizontal.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x180))();
}

uint64_t dispatch thunk of Track.timeSinceLastSeen.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x188))();
}

uint64_t dispatch thunk of Track.timeSinceLastSeen.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x190))();
}

uint64_t dispatch thunk of Track.timeSinceLastSeen.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x198))();
}

uint64_t dispatch thunk of Track.trackedSubjectState.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of Track.trackedSubjectState.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of Track.trackedSubjectState.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of Track.type.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of Track.type.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of Track.type.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of Track.distance(fromTrackFace:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of Track.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of Track.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 744))();
}

uint64_t dispatch thunk of DockKitCoreObservation.rect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DockKitCoreObservation.rect.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DockKitCoreObservation.rect.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DockKitCoreObservation.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DockKitCoreObservation.id.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of DockKitCoreObservation.id.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DockKitCoreObservation.trackerId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DockKitCoreObservation.trackerId.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of DockKitCoreObservation.trackerId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of DockKitCoreObservation.confidence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of DockKitCoreObservation.confidence.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of DockKitCoreObservation.confidence.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FaceObservation(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 129))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 113);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceObservation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 129) = 0;
    if (a2)
      *(_BYTE *)(result + 113) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation()
{
  return &type metadata for FaceObservation;
}

__n128 __swift_memcpy98_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BodyObservation(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 98))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 81);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BodyObservation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 98) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 98) = 0;
    if (a2)
      *(_BYTE *)(result + 81) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for BodyObservation()
{
  return &type metadata for BodyObservation;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ObjectObservation(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ObjectObservation(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ObjectObservation()
{
  return &type metadata for ObjectObservation;
}

void *__swift_memcpy265_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x109uLL);
}

uint64_t getEnumTagSinglePayload for TrackedSubjectState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 265))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 208);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TrackedSubjectState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 264) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 265) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 265) = 0;
    if (a2)
      *(_BYTE *)(result + 208) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackedSubjectState()
{
  return &type metadata for TrackedSubjectState;
}

ValueMetadata *type metadata accessor for SubjectMotionState()
{
  return &type metadata for SubjectMotionState;
}

uint64_t destroy for InputSummary()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11DockKitCore12InputSummaryVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for InputSummary(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for InputSummary(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InputSummary(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputSummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InputSummary()
{
  return &type metadata for InputSummary;
}

uint64_t method lookup function for DebugMessage()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebugMessage.topic.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DebugMessage.topic.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DebugMessage.topic.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DebugMessage.message.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DebugMessage.message.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DebugMessage.message.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DebugMessage.__allocating_init(topic:message:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DebugMessage.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DebugMessage.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_23A5CD374()
{
  return type metadata accessor for DockCoreInfo(0);
}

uint64_t type metadata accessor for DockCoreInfo(uint64_t a1)
{
  return sub_23A5CDEC8(a1, (uint64_t *)&unk_25699E558);
}

uint64_t sub_23A5CD390()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A69072C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DockCoreInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DockCoreInfo.__allocating_init(type:name:identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DockCoreInfo.__allocating_init(uuidString:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DockCoreInfo.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DockCoreInfo.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for ActuatorType()
{
  return &type metadata for ActuatorType;
}

uint64_t type metadata accessor for Actuator()
{
  return objc_opt_self();
}

uint64_t method lookup function for Actuator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Actuator.__allocating_init(id:name:type:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 368))();
}

uint64_t dispatch thunk of Actuator.__allocating_init(id:type:name:minPosition:maxPosition:maxSpeed:maxAcceleration:homePosition:controlParams:cameraLimits:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t method lookup function for TrajectoryProgress()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TrajectoryProgress.progress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TrajectoryProgress.progress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TrajectoryProgress.command.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TrajectoryProgress.command.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TrajectoryProgress.command.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TrajectoryProgress.reference.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TrajectoryProgress.reference.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TrajectoryProgress.reference.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TrajectoryProgress.status.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of TrajectoryProgress.status.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of TrajectoryProgress.status.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of TrajectoryProgress.statusMessage.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of TrajectoryProgress.statusMessage.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of TrajectoryProgress.statusMessage.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of TrajectoryProgress.__allocating_init(status:statusMessage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of TrajectoryProgress.copy(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of TrajectoryProgress.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of TrajectoryProgress.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

ValueMetadata *type metadata accessor for TrajectoryStatus()
{
  return &type metadata for TrajectoryStatus;
}

uint64_t method lookup function for TrajectoryPoint()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TrajectoryPoint.time.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of TrajectoryPoint.time.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TrajectoryPoint.time.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TrajectoryPoint.positions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TrajectoryPoint.positions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TrajectoryPoint.positions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TrajectoryPoint.velocities.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TrajectoryPoint.velocities.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TrajectoryPoint.velocities.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TrajectoryPoint.__allocating_init(time:positions:velocities:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of TrajectoryPoint.copy(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TrajectoryPoint.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TrajectoryPoint.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t destroy for ActuatorLimit()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActuatorLimit(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ActuatorLimit(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for ActuatorLimit(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActuatorLimit(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActuatorLimit(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActuatorLimit()
{
  return &type metadata for ActuatorLimit;
}

uint64_t method lookup function for CameraLimit()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CameraLimit.__allocating_init(model:camera:minPosition:maxPosition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v7 + 112))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t sub_23A5CD9CC(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrajectoryCommand(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrajectoryCommand(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrajectoryCommand(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrajectoryCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrajectoryCommand()
{
  return &type metadata for TrajectoryCommand;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.Animation()
{
  return &type metadata for TrajectoryCommand.Animation;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.Priority()
{
  return &type metadata for TrajectoryCommand.Priority;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TrajectoryCommand.TrajectoryPoint(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TrajectoryCommand.TrajectoryPoint(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.TrajectoryPoint()
{
  return &type metadata for TrajectoryCommand.TrajectoryPoint;
}

uint64_t destroy for TrajectoryCommand.Trajectory()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TrajectoryCommand.Trajectory(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrajectoryCommand.Trajectory(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  return a1;
}

__n128 __swift_memcpy27_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TrajectoryCommand.Trajectory(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrajectoryCommand.Trajectory(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 27))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrajectoryCommand.Trajectory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 27) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 27) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.Trajectory()
{
  return &type metadata for TrajectoryCommand.Trajectory;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.Status()
{
  return &type metadata for TrajectoryCommand.Status;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TrajectoryCommand.Progress(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFB)
  {
    if ((a2 + 33554181) >> 24)
    {
      v2 = a1[3];
      if (a1[3])
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776965;
    }
    else
    {
      v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3))
        return (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776965;
    }
  }
  v4 = a1[1];
  v5 = v4 >= 6;
  v6 = v4 - 6;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for TrajectoryCommand.Progress(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554181) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFA)
    v3 = 0;
  if (a2 > 0xFA)
  {
    *(_WORD *)result = a2 - 251;
    *(_BYTE *)(result + 2) = (a2 - 251) >> 16;
    if (v3)
    {
      v4 = ((a2 - 251) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 1) = a2 + 5;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.Progress()
{
  return &type metadata for TrajectoryCommand.Progress;
}

uint64_t sub_23A5CDEAC()
{
  return type metadata accessor for TrajectoryCommand.StampedProgress(0);
}

uint64_t type metadata accessor for TrajectoryCommand.StampedProgress(uint64_t a1)
{
  return sub_23A5CDEC8(a1, qword_25699E690);
}

uint64_t sub_23A5CDEC8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A5CDEFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A6906D8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ComponentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DockKitFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23A5CE05C + 4 * byte_23A694247[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23A5CE090 + 4 * byte_23A694242[v4]))();
}

uint64_t sub_23A5CE090(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CE098(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5CE0A0);
  return result;
}

uint64_t sub_23A5CE0AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A5CE0B4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23A5CE0B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CE0C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DockKitFeatures()
{
  return &type metadata for DockKitFeatures;
}

uint64_t type metadata accessor for AccessorySystemEvent()
{
  return objc_opt_self();
}

uint64_t method lookup function for AccessorySystemEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccessorySystemEvent.__allocating_init(name:payload:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v3 + 104))(a1, a2, a3 | ((HIDWORD(a3) & 1) << 32));
}

uint64_t dispatch thunk of AccessorySystemEvent.__allocating_init(data:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for AccessoryChargeState()
{
  return &type metadata for AccessoryChargeState;
}

uint64_t type metadata accessor for AccessoryBatteryState()
{
  return objc_opt_self();
}

uint64_t method lookup function for AccessoryBatteryState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccessoryBatteryState.__allocating_init(batteryPercent:lowBattery:chargeState:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of AccessoryBatteryState.__allocating_init(data:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AccessoryBatteryState.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for CameraCalibration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CameraCalibration.fx.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CameraCalibration.fx.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CameraCalibration.fx.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CameraCalibration.fy.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of CameraCalibration.fy.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CameraCalibration.fy.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CameraCalibration.ox.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of CameraCalibration.ox.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of CameraCalibration.ox.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of CameraCalibration.oy.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of CameraCalibration.oy.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of CameraCalibration.oy.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of CameraCalibration.referenceDimensions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of CameraCalibration.referenceDimensions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of CameraCalibration.referenceDimensions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of CameraCalibration.portType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of CameraCalibration.portType.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of CameraCalibration.portType.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of CameraCalibration.orientation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of CameraCalibration.orientation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of CameraCalibration.orientation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of CameraCalibration.fov.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of CameraCalibration.fov.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of CameraCalibration.fov.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of CameraCalibration.__allocating_init(fx:fy:ox:oy:referenceDimensions:portType:orientation:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 336))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of CameraCalibration.__allocating_init(intrinsics:referenceDimensions:portType:orientation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  char v5;
  uint64_t (*v6)(_OWORD *, uint64_t, uint64_t, _QWORD);
  __int128 v7;
  _OWORD v9[3];
  char v10;

  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t, _QWORD))(v4 + 344);
  v7 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v7;
  v9[2] = *(_OWORD *)(a1 + 32);
  v10 = v5;
  return v6(v9, a2, a3, a4 & 1);
}

uint64_t sub_23A5CE47C()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for DKCoreErrors()
{
  return sub_23A5CE494();
}

uint64_t sub_23A5CE494()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s11DockKitCore12DKCoreErrorsOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23A5CE47C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DKCoreErrors(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_23A5CE47C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23A5CE494();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DKCoreErrors(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_23A5CE494();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKCoreErrors(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DKCoreErrors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23A5CE61C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23A5CE624(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DKCoreErrors()
{
  return &type metadata for DKCoreErrors;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.CodingKeys()
{
  return &type metadata for TrajectoryCommand.CodingKeys;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.Progress.CodingKeys()
{
  return &type metadata for TrajectoryCommand.Progress.CodingKeys;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.Trajectory.CodingKeys()
{
  return &type metadata for TrajectoryCommand.Trajectory.CodingKeys;
}

ValueMetadata *type metadata accessor for TrajectoryCommand.TrajectoryPoint.CodingKeys()
{
  return &type metadata for TrajectoryCommand.TrajectoryPoint.CodingKeys;
}

ValueMetadata *type metadata accessor for TrajectoryPoint.CodingKeys()
{
  return &type metadata for TrajectoryPoint.CodingKeys;
}

ValueMetadata *type metadata accessor for TrajectoryProgress.CodingKeys()
{
  return &type metadata for TrajectoryProgress.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RepeatingTimer.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11DockKitCore10DockStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A5CE77C + 4 * byte_23A694251[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A5CE7B0 + 4 * byte_23A69424C[v4]))();
}

uint64_t sub_23A5CE7B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CE7B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5CE7C0);
  return result;
}

uint64_t sub_23A5CE7CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A5CE7D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A5CE7D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CE7E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DockCoreInfo.CodingKeys()
{
  return &type metadata for DockCoreInfo.CodingKeys;
}

_BYTE *sub_23A5CE804(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DebugMessage.CodingKeys()
{
  return &type metadata for DebugMessage.CodingKeys;
}

uint64_t getEnumTagSinglePayload for lockState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11DockKitCore12DebugMessageC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A5CE8FC + 4 * byte_23A69425B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A5CE930 + 4 * byte_23A694256[v4]))();
}

uint64_t sub_23A5CE930(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CE938(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5CE940);
  return result;
}

uint64_t sub_23A5CE94C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A5CE954);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A5CE958(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CE960(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InputSummary.CodingKeys()
{
  return &type metadata for InputSummary.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TrackedSubjectState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TrackedSubjectState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_23A5CEA58 + 4 * byte_23A694265[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_23A5CEA8C + 4 * byte_23A694260[v4]))();
}

uint64_t sub_23A5CEA8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CEA94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5CEA9CLL);
  return result;
}

uint64_t sub_23A5CEAA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A5CEAB0);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_23A5CEAB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CEABC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrackedSubjectState.CodingKeys()
{
  return &type metadata for TrackedSubjectState.CodingKeys;
}

uint64_t _s11DockKitCore16TrajectoryStatusOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11DockKitCore16TrajectoryStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23A5CEBB4 + 4 * byte_23A69426F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23A5CEBE8 + 4 * byte_23A69426A[v4]))();
}

uint64_t sub_23A5CEBE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CEBF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5CEBF8);
  return result;
}

uint64_t sub_23A5CEC04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A5CEC0CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23A5CEC10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CEC18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ObjectObservation.CodingKeys()
{
  return &type metadata for ObjectObservation.CodingKeys;
}

uint64_t _s11DockKitCore17TrajectoryCommandV9AnimationOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11DockKitCore17TrajectoryCommandV9AnimationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23A5CED10 + 4 * byte_23A694279[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23A5CED44 + 4 * byte_23A694274[v4]))();
}

uint64_t sub_23A5CED44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CED4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5CED54);
  return result;
}

uint64_t sub_23A5CED60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A5CED68);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23A5CED6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CED74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BodyObservation.CodingKeys()
{
  return &type metadata for BodyObservation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for FaceObservation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceObservation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23A5CEE6C + 4 * byte_23A694283[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23A5CEEA0 + 4 * byte_23A69427E[v4]))();
}

uint64_t sub_23A5CEEA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CEEA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5CEEB0);
  return result;
}

uint64_t sub_23A5CEEBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A5CEEC4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23A5CEEC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CEED0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FaceObservation.CodingKeys()
{
  return &type metadata for FaceObservation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Track.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Track.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_23A5CEFC8 + 4 * byte_23A69428D[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_23A5CEFFC + 4 * byte_23A694288[v4]))();
}

uint64_t sub_23A5CEFFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CF004(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5CF00CLL);
  return result;
}

uint64_t sub_23A5CF018(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A5CF020);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_23A5CF024(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5CF02C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Track.CodingKeys()
{
  return &type metadata for Track.CodingKeys;
}

unint64_t sub_23A5CF04C()
{
  unint64_t result;

  result = qword_25699E7F8;
  if (!qword_25699E7F8)
  {
    result = MEMORY[0x23B853B34](&unk_23A6955E4, &type metadata for Track.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E7F8);
  }
  return result;
}

unint64_t sub_23A5CF094()
{
  unint64_t result;

  result = qword_25699E800;
  if (!qword_25699E800)
  {
    result = MEMORY[0x23B853B34](&unk_23A69569C, &type metadata for FaceObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E800);
  }
  return result;
}

unint64_t sub_23A5CF0DC()
{
  unint64_t result;

  result = qword_25699E808;
  if (!qword_25699E808)
  {
    result = MEMORY[0x23B853B34](&unk_23A695754, &type metadata for BodyObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E808);
  }
  return result;
}

unint64_t sub_23A5CF124()
{
  unint64_t result;

  result = qword_25699E810;
  if (!qword_25699E810)
  {
    result = MEMORY[0x23B853B34](&unk_23A69580C, &type metadata for ObjectObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E810);
  }
  return result;
}

unint64_t sub_23A5CF16C()
{
  unint64_t result;

  result = qword_25699E818;
  if (!qword_25699E818)
  {
    result = MEMORY[0x23B853B34](&unk_23A6958C4, &type metadata for TrackedSubjectState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E818);
  }
  return result;
}

unint64_t sub_23A5CF1B4()
{
  unint64_t result;

  result = qword_25699E820;
  if (!qword_25699E820)
  {
    result = MEMORY[0x23B853B34](&unk_23A69597C, &type metadata for InputSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E820);
  }
  return result;
}

unint64_t sub_23A5CF1FC()
{
  unint64_t result;

  result = qword_25699E828;
  if (!qword_25699E828)
  {
    result = MEMORY[0x23B853B34](&unk_23A695A34, &type metadata for DebugMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E828);
  }
  return result;
}

unint64_t sub_23A5CF244()
{
  unint64_t result;

  result = qword_25699E830;
  if (!qword_25699E830)
  {
    result = MEMORY[0x23B853B34](&unk_23A695AEC, &type metadata for DockCoreInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E830);
  }
  return result;
}

unint64_t sub_23A5CF28C()
{
  unint64_t result;

  result = qword_25699E838;
  if (!qword_25699E838)
  {
    result = MEMORY[0x23B853B34](&unk_23A695BA4, &type metadata for TrajectoryProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E838);
  }
  return result;
}

unint64_t sub_23A5CF2D4()
{
  unint64_t result;

  result = qword_25699E840;
  if (!qword_25699E840)
  {
    result = MEMORY[0x23B853B34](&unk_23A695C5C, &type metadata for TrajectoryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E840);
  }
  return result;
}

unint64_t sub_23A5CF31C()
{
  unint64_t result;

  result = qword_25699E848;
  if (!qword_25699E848)
  {
    result = MEMORY[0x23B853B34](&unk_23A695D14, &type metadata for TrajectoryCommand.TrajectoryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E848);
  }
  return result;
}

unint64_t sub_23A5CF364()
{
  unint64_t result;

  result = qword_25699E850;
  if (!qword_25699E850)
  {
    result = MEMORY[0x23B853B34](&unk_23A695DCC, &type metadata for TrajectoryCommand.Trajectory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E850);
  }
  return result;
}

unint64_t sub_23A5CF3AC()
{
  unint64_t result;

  result = qword_25699E858;
  if (!qword_25699E858)
  {
    result = MEMORY[0x23B853B34](&unk_23A695E84, &type metadata for TrajectoryCommand.Progress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E858);
  }
  return result;
}

unint64_t sub_23A5CF3F4()
{
  unint64_t result;

  result = qword_25699E860;
  if (!qword_25699E860)
  {
    result = MEMORY[0x23B853B34](&unk_23A695F3C, &type metadata for TrajectoryCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E860);
  }
  return result;
}

unint64_t sub_23A5CF43C()
{
  unint64_t result;

  result = qword_25699E868;
  if (!qword_25699E868)
  {
    result = MEMORY[0x23B853B34](&unk_23A695EAC, &type metadata for TrajectoryCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E868);
  }
  return result;
}

unint64_t sub_23A5CF484()
{
  unint64_t result;

  result = qword_25699E870;
  if (!qword_25699E870)
  {
    result = MEMORY[0x23B853B34](&unk_23A695ED4, &type metadata for TrajectoryCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E870);
  }
  return result;
}

unint64_t sub_23A5CF4CC()
{
  unint64_t result;

  result = qword_25699E878;
  if (!qword_25699E878)
  {
    result = MEMORY[0x23B853B34](&unk_23A695DF4, &type metadata for TrajectoryCommand.Progress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E878);
  }
  return result;
}

unint64_t sub_23A5CF514()
{
  unint64_t result;

  result = qword_25699E880;
  if (!qword_25699E880)
  {
    result = MEMORY[0x23B853B34](&unk_23A695E1C, &type metadata for TrajectoryCommand.Progress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E880);
  }
  return result;
}

unint64_t sub_23A5CF55C()
{
  unint64_t result;

  result = qword_25699E888;
  if (!qword_25699E888)
  {
    result = MEMORY[0x23B853B34](&unk_23A695D3C, &type metadata for TrajectoryCommand.Trajectory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E888);
  }
  return result;
}

unint64_t sub_23A5CF5A4()
{
  unint64_t result;

  result = qword_25699E890;
  if (!qword_25699E890)
  {
    result = MEMORY[0x23B853B34](&unk_23A695D64, &type metadata for TrajectoryCommand.Trajectory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E890);
  }
  return result;
}

unint64_t sub_23A5CF5EC()
{
  unint64_t result;

  result = qword_25699E898;
  if (!qword_25699E898)
  {
    result = MEMORY[0x23B853B34](&unk_23A695C84, &type metadata for TrajectoryCommand.TrajectoryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E898);
  }
  return result;
}

unint64_t sub_23A5CF634()
{
  unint64_t result;

  result = qword_25699E8A0;
  if (!qword_25699E8A0)
  {
    result = MEMORY[0x23B853B34](&unk_23A695CAC, &type metadata for TrajectoryCommand.TrajectoryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8A0);
  }
  return result;
}

unint64_t sub_23A5CF67C()
{
  unint64_t result;

  result = qword_25699E8A8;
  if (!qword_25699E8A8)
  {
    result = MEMORY[0x23B853B34](&unk_23A695BCC, &type metadata for TrajectoryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8A8);
  }
  return result;
}

unint64_t sub_23A5CF6C4()
{
  unint64_t result;

  result = qword_25699E8B0;
  if (!qword_25699E8B0)
  {
    result = MEMORY[0x23B853B34](&unk_23A695BF4, &type metadata for TrajectoryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8B0);
  }
  return result;
}

unint64_t sub_23A5CF70C()
{
  unint64_t result;

  result = qword_25699E8B8;
  if (!qword_25699E8B8)
  {
    result = MEMORY[0x23B853B34](&unk_23A695B14, &type metadata for TrajectoryProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8B8);
  }
  return result;
}

unint64_t sub_23A5CF754()
{
  unint64_t result;

  result = qword_25699E8C0;
  if (!qword_25699E8C0)
  {
    result = MEMORY[0x23B853B34](&unk_23A695B3C, &type metadata for TrajectoryProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8C0);
  }
  return result;
}

unint64_t sub_23A5CF79C()
{
  unint64_t result;

  result = qword_25699E8C8;
  if (!qword_25699E8C8)
  {
    result = MEMORY[0x23B853B34](&unk_23A695A5C, &type metadata for DockCoreInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8C8);
  }
  return result;
}

unint64_t sub_23A5CF7E4()
{
  unint64_t result;

  result = qword_25699E8D0;
  if (!qword_25699E8D0)
  {
    result = MEMORY[0x23B853B34](&unk_23A695A84, &type metadata for DockCoreInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8D0);
  }
  return result;
}

unint64_t sub_23A5CF82C()
{
  unint64_t result;

  result = qword_25699E8D8;
  if (!qword_25699E8D8)
  {
    result = MEMORY[0x23B853B34](&unk_23A6959A4, &type metadata for DebugMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8D8);
  }
  return result;
}

unint64_t sub_23A5CF874()
{
  unint64_t result;

  result = qword_25699E8E0;
  if (!qword_25699E8E0)
  {
    result = MEMORY[0x23B853B34](&unk_23A6959CC, &type metadata for DebugMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8E0);
  }
  return result;
}

unint64_t sub_23A5CF8BC()
{
  unint64_t result;

  result = qword_25699E8E8;
  if (!qword_25699E8E8)
  {
    result = MEMORY[0x23B853B34](&unk_23A6958EC, &type metadata for InputSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8E8);
  }
  return result;
}

unint64_t sub_23A5CF904()
{
  unint64_t result;

  result = qword_25699E8F0;
  if (!qword_25699E8F0)
  {
    result = MEMORY[0x23B853B34](&unk_23A695914, &type metadata for InputSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8F0);
  }
  return result;
}

unint64_t sub_23A5CF94C()
{
  unint64_t result;

  result = qword_25699E8F8;
  if (!qword_25699E8F8)
  {
    result = MEMORY[0x23B853B34](&unk_23A695834, &type metadata for TrackedSubjectState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E8F8);
  }
  return result;
}

unint64_t sub_23A5CF994()
{
  unint64_t result;

  result = qword_25699E900;
  if (!qword_25699E900)
  {
    result = MEMORY[0x23B853B34](&unk_23A69585C, &type metadata for TrackedSubjectState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E900);
  }
  return result;
}

unint64_t sub_23A5CF9DC()
{
  unint64_t result;

  result = qword_25699E908;
  if (!qword_25699E908)
  {
    result = MEMORY[0x23B853B34](&unk_23A69577C, &type metadata for ObjectObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E908);
  }
  return result;
}

unint64_t sub_23A5CFA24()
{
  unint64_t result;

  result = qword_25699E910;
  if (!qword_25699E910)
  {
    result = MEMORY[0x23B853B34](&unk_23A6957A4, &type metadata for ObjectObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E910);
  }
  return result;
}

unint64_t sub_23A5CFA6C()
{
  unint64_t result;

  result = qword_25699E918;
  if (!qword_25699E918)
  {
    result = MEMORY[0x23B853B34](&unk_23A6956C4, &type metadata for BodyObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E918);
  }
  return result;
}

unint64_t sub_23A5CFAB4()
{
  unint64_t result;

  result = qword_25699E920;
  if (!qword_25699E920)
  {
    result = MEMORY[0x23B853B34](&unk_23A6956EC, &type metadata for BodyObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E920);
  }
  return result;
}

unint64_t sub_23A5CFAFC()
{
  unint64_t result;

  result = qword_25699E928;
  if (!qword_25699E928)
  {
    result = MEMORY[0x23B853B34](&unk_23A69560C, &type metadata for FaceObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E928);
  }
  return result;
}

unint64_t sub_23A5CFB44()
{
  unint64_t result;

  result = qword_25699E930;
  if (!qword_25699E930)
  {
    result = MEMORY[0x23B853B34](&unk_23A695634, &type metadata for FaceObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E930);
  }
  return result;
}

unint64_t sub_23A5CFB8C()
{
  unint64_t result;

  result = qword_25699E938;
  if (!qword_25699E938)
  {
    result = MEMORY[0x23B853B34](&unk_23A69551C, &type metadata for Track.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E938);
  }
  return result;
}

unint64_t sub_23A5CFBD4()
{
  unint64_t result;

  result = qword_25699E940;
  if (!qword_25699E940)
  {
    result = MEMORY[0x23B853B34](&unk_23A695544, &type metadata for Track.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699E940);
  }
  return result;
}

uint64_t sub_23A5CFC18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542D27E8) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5CFD34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9C8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5CFE40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5CFF58(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x23B853B34](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1Tm(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23A5CFFBC()
{
  unint64_t result;

  result = qword_25699E960;
  if (!qword_25699E960)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Status, &type metadata for TrajectoryCommand.Status);
    atomic_store(result, (unint64_t *)&qword_25699E960);
  }
  return result;
}

unint64_t sub_23A5D0000()
{
  unint64_t result;

  result = qword_25699E968;
  if (!qword_25699E968)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Priority, &type metadata for TrajectoryCommand.Priority);
    atomic_store(result, (unint64_t *)&qword_25699E968);
  }
  return result;
}

unint64_t sub_23A5D0044()
{
  unint64_t result;

  result = qword_25699E970;
  if (!qword_25699E970)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryCommand.Animation, &type metadata for TrajectoryCommand.Animation);
    atomic_store(result, (unint64_t *)&qword_25699E970);
  }
  return result;
}

unint64_t sub_23A5D0088()
{
  unint64_t result;

  result = qword_25699E978;
  if (!qword_25699E978)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrajectoryStatus, &type metadata for TrajectoryStatus);
    atomic_store(result, (unint64_t *)&qword_25699E978);
  }
  return result;
}

unint64_t sub_23A5D00CC()
{
  unint64_t result;

  result = qword_25699E980;
  if (!qword_25699E980)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for SubjectMotionState, &type metadata for SubjectMotionState);
    atomic_store(result, (unint64_t *)&qword_25699E980);
  }
  return result;
}

unint64_t sub_23A5D0110()
{
  unint64_t result;

  result = qword_25699E988;
  if (!qword_25699E988)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for PairingRequestState, &type metadata for PairingRequestState);
    atomic_store(result, (unint64_t *)&qword_25699E988);
  }
  return result;
}

uint64_t sub_23A5D0154()
{
  return swift_release();
}

uint64_t sub_23A5D015C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5D024C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5D0340(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23A5D0350(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_23A5D0394(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23A5D03A4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23A5D03DC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B853B34](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TrackedSubjectInternal.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11DockKitCore17TrajectoryCommandV6StatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23A5D04F8 + 4 * byte_23A694297[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23A5D052C + 4 * byte_23A694292[v4]))();
}

uint64_t sub_23A5D052C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5D0534(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A5D053CLL);
  return result;
}

uint64_t sub_23A5D0548(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A5D0550);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23A5D0554(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A5D055C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HardwareModel()
{
  return &type metadata for HardwareModel;
}

unint64_t sub_23A5D057C()
{
  unint64_t result;

  result = qword_25699EA60;
  if (!qword_25699EA60)
  {
    result = MEMORY[0x23B853B34](&unk_23A696460, &type metadata for HardwareModel);
    atomic_store(result, (unint64_t *)&qword_25699EA60);
  }
  return result;
}

double sub_23A5D0650@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v6;
  char v7;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_23A5C6588(a1, a2), (v7 & 1) != 0))
  {
    sub_23A5EF1F4(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_23A5D0718()
{
  uint64_t v0;

  if (qword_25699DC70 != -1)
    swift_once();
  if (byte_2569AD6E8 == 2)
    return *(unsigned __int8 *)(v0 + OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig);
  else
    return byte_2569AD6E8 & 1;
}

uint64_t sub_23A5D0778()
{
  uint64_t result;

  result = sub_23A5D0794();
  byte_2569AD6E8 = result;
  return result;
}

uint64_t sub_23A5D0794()
{
  __CFString *v0;
  __CFString *v1;
  CFPropertyListRef v2;
  CFTypeID v3;
  CFTypeID v4;
  unsigned __int8 v6;

  v0 = (__CFString *)sub_23A690E04();
  v1 = (__CFString *)sub_23A690E04();
  v2 = CFPreferencesCopyAppValue(v0, v1);

  if (!v2)
    return 2;
  v3 = CFGetTypeID(v2);
  if (v3 != CFBooleanGetTypeID())
  {
    v4 = CFGetTypeID(v2);
    if (v4 != CFNumberGetTypeID())
    {
      swift_unknownObjectRelease();
      return 2;
    }
  }
  if (swift_dynamicCast())
    return v6;
  else
    return 2;
}

uint64_t sub_23A5D0894()
{
  uint64_t result;

  result = sub_23A5D08B4();
  byte_2569AD6E9 = result & 1;
  return result;
}

uint64_t sub_23A5D08B4()
{
  __CFString *v0;
  __CFString *v1;
  CFPropertyListRef v2;
  CFTypeID v3;
  CFTypeID v4;
  unsigned __int8 v6;

  v0 = (__CFString *)sub_23A690E04();
  v1 = (__CFString *)sub_23A690E04();
  v2 = CFPreferencesCopyAppValue(v0, v1);

  if (v2)
  {
    v3 = CFGetTypeID(v2);
    if (v3 == CFBooleanGetTypeID())
      return swift_dynamicCast() & v6;
    v4 = CFGetTypeID(v2);
    if (v4 == CFNumberGetTypeID())
      return swift_dynamicCast() & v6;
    swift_unknownObjectRelease();
  }
  return 0;
}

id ObjectTrackingAgent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ObjectTrackingAgent.init()()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  objc_super v36;
  uint64_t v37;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A691080();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A69105C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v7);
  v9 = sub_23A690D50();
  MEMORY[0x24BDAC7A8](v9);
  v33 = &v0[OBJC_IVAR___ObjectTrackingAgent_delegate];
  *((_QWORD *)v33 + 1) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR___ObjectTrackingAgent_tracker] = 0;
  v10 = &v0[OBJC_IVAR___ObjectTrackingAgent_appID];
  *v10 = 0;
  v10[1] = 0;
  v34 = OBJC_IVAR___ObjectTrackingAgent_debugEnabled;
  v0[OBJC_IVAR___ObjectTrackingAgent_debugEnabled] = 0;
  v0[OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig] = 1;
  v0[OBJC_IVAR___ObjectTrackingAgent__trackingEnabled] = 0;
  v0[OBJC_IVAR___ObjectTrackingAgent_expectingDisconnect] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___ObjectTrackingAgent_manager] = 0;
  v11 = v0;
  sub_23A690D08();
  v30 = OBJC_IVAR___ObjectTrackingAgent_agentQueue;
  sub_23A5D03A4(0, (unint64_t *)&qword_2542D2820);
  sub_23A690D38();
  v37 = MEMORY[0x24BEE4AF8];
  sub_23A5F0550((unint64_t *)&qword_2542D2810, v8, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27D0);
  sub_23A5F0590((unint64_t *)&qword_2542D27E0, (uint64_t *)&unk_2542D27D0);
  sub_23A691200();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v6, *MEMORY[0x24BEE5750], v32);
  *(_QWORD *)&v11[v30] = sub_23A6910A4();
  v11[OBJC_IVAR___ObjectTrackingAgent_setupOngoing] = 0;
  v11[OBJC_IVAR___ObjectTrackingAgent_setupComplete] = 0;
  v12 = OBJC_IVAR___ObjectTrackingAgent_lastImage;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_init);
  v13 = OBJC_IVAR___ObjectTrackingAgent_lastFaces;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE30]), sel_init);
  v14 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  type metadata accessor for LockActor();
  v15 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v15 + 112) = 1;
  v16 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v15 + 120) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v11[v14] = v15;
  v17 = OBJC_IVAR___ObjectTrackingAgent_configStateLock;
  v18 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v18 + 112) = 1;
  *(_QWORD *)(v18 + 120) = v16;
  *(_QWORD *)&v11[v17] = v18;
  v19 = OBJC_IVAR___ObjectTrackingAgent_trackingSummaryLock;
  v20 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v20 + 112) = 1;
  *(_QWORD *)(v20 + 120) = v16;
  *(_QWORD *)&v11[v19] = v20;
  v11[OBJC_IVAR___ObjectTrackingAgent_registeredForTrackingConfigChanges] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___ObjectTrackingAgent_currentCameraSession] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___ObjectTrackingAgent_publishSummaryPeriod] = 0x3FA999999999999ALL;
  sub_23A69066C();
  *(_QWORD *)&v11[OBJC_IVAR___ObjectTrackingAgent__selectedFaceIDs] = v16;
  *(_QWORD *)&v11[OBJC_IVAR___ObjectTrackingAgent__selectedBodyIDs] = v16;
  v21 = OBJC_IVAR___ObjectTrackingAgent__selectedIDsLock;
  *(_QWORD *)&v11[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  *((_QWORD *)v33 + 1) = 0;
  swift_unknownObjectWeakAssign();
  if (qword_2542D25F8 != -1)
    swift_once();
  v1[v34] = byte_2569AD6E9;

  v22 = (objc_class *)type metadata accessor for ObjectTrackingAgent();
  v36.receiver = v11;
  v36.super_class = v22;
  v23 = objc_msgSendSuper2(&v36, sel_init);
  v24 = sub_23A690F9C();
  v25 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v35, 1, 1, v24);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v23;
  v27 = v23;
  sub_23A5D120C(v25, (uint64_t)&unk_25699EB30, (uint64_t)v26);
  swift_release();
  return v27;
}

uint64_t sub_23A5D106C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  return sub_23A5D9B64(1);
}

uint64_t sub_23A5D10B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23A690F9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23A690F90();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23A5C921C(a1, (uint64_t *)&unk_2542D27F0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23A690F60();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F040);
  return swift_task_create();
}

uint64_t sub_23A5D120C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23A690F9C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23A690F90();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23A5C921C(a1, (uint64_t *)&unk_2542D27F0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23A690F60();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

id ObjectTrackingAgent.__allocating_init(appID:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return ObjectTrackingAgent.init(appID:)(a1, a2);
}

id ObjectTrackingAgent.init(appID:)(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  objc_class *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  objc_super v42;
  uint64_t v43;

  v3 = v2;
  v39 = a1;
  v40 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A691080();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A69105C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_23A690D50();
  MEMORY[0x24BDAC7A8](v11);
  v37 = &v2[OBJC_IVAR___ObjectTrackingAgent_delegate];
  *((_QWORD *)v37 + 1) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v2[OBJC_IVAR___ObjectTrackingAgent_tracker] = 0;
  v12 = &v2[OBJC_IVAR___ObjectTrackingAgent_appID];
  v36 = v12;
  *v12 = 0;
  v12[1] = 0;
  v38 = OBJC_IVAR___ObjectTrackingAgent_debugEnabled;
  v2[OBJC_IVAR___ObjectTrackingAgent_debugEnabled] = 0;
  v2[OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig] = 1;
  v2[OBJC_IVAR___ObjectTrackingAgent__trackingEnabled] = 0;
  v2[OBJC_IVAR___ObjectTrackingAgent_expectingDisconnect] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___ObjectTrackingAgent_manager] = 0;
  v13 = v2;
  sub_23A690D08();
  v33 = OBJC_IVAR___ObjectTrackingAgent_agentQueue;
  sub_23A5D03A4(0, (unint64_t *)&qword_2542D2820);
  sub_23A690D38();
  v43 = MEMORY[0x24BEE4AF8];
  sub_23A5F0550((unint64_t *)&qword_2542D2810, v10, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27D0);
  sub_23A5F0590((unint64_t *)&qword_2542D27E0, (uint64_t *)&unk_2542D27D0);
  sub_23A691200();
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v8, *MEMORY[0x24BEE5750], v35);
  *(_QWORD *)&v13[v33] = sub_23A6910A4();
  v13[OBJC_IVAR___ObjectTrackingAgent_setupOngoing] = 0;
  v13[OBJC_IVAR___ObjectTrackingAgent_setupComplete] = 0;
  v14 = OBJC_IVAR___ObjectTrackingAgent_lastImage;
  *(_QWORD *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_init);
  v15 = OBJC_IVAR___ObjectTrackingAgent_lastFaces;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE30]), sel_init);
  v16 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  type metadata accessor for LockActor();
  v17 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v17 + 112) = 1;
  v18 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v17 + 120) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v13[v16] = v17;
  v19 = OBJC_IVAR___ObjectTrackingAgent_configStateLock;
  v20 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v20 + 112) = 1;
  *(_QWORD *)(v20 + 120) = v18;
  *(_QWORD *)&v13[v19] = v20;
  v21 = OBJC_IVAR___ObjectTrackingAgent_trackingSummaryLock;
  v22 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 120) = v18;
  *(_QWORD *)&v13[v21] = v22;
  v13[OBJC_IVAR___ObjectTrackingAgent_registeredForTrackingConfigChanges] = 0;
  *(_QWORD *)&v13[OBJC_IVAR___ObjectTrackingAgent_currentCameraSession] = 0;
  *(_QWORD *)&v13[OBJC_IVAR___ObjectTrackingAgent_publishSummaryPeriod] = 0x3FA999999999999ALL;
  sub_23A69066C();
  *(_QWORD *)&v13[OBJC_IVAR___ObjectTrackingAgent__selectedFaceIDs] = v18;
  *(_QWORD *)&v13[OBJC_IVAR___ObjectTrackingAgent__selectedBodyIDs] = v18;
  v23 = OBJC_IVAR___ObjectTrackingAgent__selectedIDsLock;
  *(_QWORD *)&v13[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  *((_QWORD *)v37 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v24 = v36;
  v25 = v40;
  *v36 = v39;
  v24[1] = v25;
  swift_bridgeObjectRelease();
  if (qword_2542D25F8 != -1)
    swift_once();
  v3[v38] = byte_2569AD6E9;

  v26 = (objc_class *)type metadata accessor for ObjectTrackingAgent();
  v42.receiver = v13;
  v42.super_class = v26;
  v27 = objc_msgSendSuper2(&v42, sel_init);
  v28 = sub_23A690F9C();
  v29 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v41, 1, 1, v28);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = v27;
  v31 = v27;
  sub_23A5D120C(v29, (uint64_t)&unk_25699EB40, (uint64_t)v30);
  swift_release();
  return v31;
}

id ObjectTrackingAgent.__allocating_init(config:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ObjectTrackingAgent.init(config:)(a1);
}

id ObjectTrackingAgent.init(config:)(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char v30;
  char v31;
  objc_class *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  objc_super v51;
  __int128 v52;
  __int128 v53;

  v2 = v1;
  v46 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v3);
  v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A691080();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A69105C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_23A690D50();
  MEMORY[0x24BDAC7A8](v10);
  v44 = &v1[OBJC_IVAR___ObjectTrackingAgent_delegate];
  *((_QWORD *)v44 + 1) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR___ObjectTrackingAgent_tracker] = 0;
  v11 = &v1[OBJC_IVAR___ObjectTrackingAgent_appID];
  *v11 = 0;
  v11[1] = 0;
  v45 = v11;
  v47 = OBJC_IVAR___ObjectTrackingAgent_debugEnabled;
  v1[OBJC_IVAR___ObjectTrackingAgent_debugEnabled] = 0;
  v40 = OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig;
  v1[OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig] = 1;
  v1[OBJC_IVAR___ObjectTrackingAgent__trackingEnabled] = 0;
  v1[OBJC_IVAR___ObjectTrackingAgent_expectingDisconnect] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ObjectTrackingAgent_manager] = 0;
  v12 = v1;
  sub_23A690D08();
  v41 = OBJC_IVAR___ObjectTrackingAgent_agentQueue;
  sub_23A5D03A4(0, (unint64_t *)&qword_2542D2820);
  sub_23A690D38();
  *(_QWORD *)&v52 = MEMORY[0x24BEE4AF8];
  sub_23A5F0550((unint64_t *)&qword_2542D2810, v9, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27D0);
  sub_23A5F0590((unint64_t *)&qword_2542D27E0, (uint64_t *)&unk_2542D27D0);
  sub_23A691200();
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v7, *MEMORY[0x24BEE5750], v43);
  *(_QWORD *)&v12[v41] = sub_23A6910A4();
  v12[OBJC_IVAR___ObjectTrackingAgent_setupOngoing] = 0;
  v12[OBJC_IVAR___ObjectTrackingAgent_setupComplete] = 0;
  v13 = OBJC_IVAR___ObjectTrackingAgent_lastImage;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_init);
  v14 = OBJC_IVAR___ObjectTrackingAgent_lastFaces;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE30]), sel_init);
  v15 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  type metadata accessor for LockActor();
  v16 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v16 + 112) = 1;
  v17 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v16 + 120) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v12[v15] = v16;
  v18 = OBJC_IVAR___ObjectTrackingAgent_configStateLock;
  v19 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v19 + 112) = 1;
  *(_QWORD *)(v19 + 120) = v17;
  *(_QWORD *)&v12[v18] = v19;
  v20 = OBJC_IVAR___ObjectTrackingAgent_trackingSummaryLock;
  v21 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v21 + 112) = 1;
  *(_QWORD *)(v21 + 120) = v17;
  *(_QWORD *)&v12[v20] = v21;
  v12[OBJC_IVAR___ObjectTrackingAgent_registeredForTrackingConfigChanges] = 0;
  *(_QWORD *)&v12[OBJC_IVAR___ObjectTrackingAgent_currentCameraSession] = 0;
  *(_QWORD *)&v12[OBJC_IVAR___ObjectTrackingAgent_publishSummaryPeriod] = 0x3FA999999999999ALL;
  sub_23A69066C();
  *(_QWORD *)&v12[OBJC_IVAR___ObjectTrackingAgent__selectedFaceIDs] = v17;
  *(_QWORD *)&v12[OBJC_IVAR___ObjectTrackingAgent__selectedBodyIDs] = v17;
  v22 = OBJC_IVAR___ObjectTrackingAgent__selectedIDsLock;
  *(_QWORD *)&v12[v22] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v23 = v46;
  *((_QWORD *)v44 + 1) = 0;
  swift_unknownObjectWeakAssign();
  if (*(_QWORD *)(v23 + 16)
    && (v24 = sub_23A5C6588(0x4449707061, 0xE500000000000000), (v25 & 1) != 0)
    && (sub_23A5EF1F4(*(_QWORD *)(v23 + 56) + 32 * v24, (uint64_t)&v52), swift_dynamicCast()))
  {
    v26 = v49;
    v27 = v50;
  }
  else
  {
    v26 = 0;
    v27 = 0xE000000000000000;
  }
  v28 = v45;
  *v45 = v26;
  v28[1] = v27;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v23 + 16) && (v29 = sub_23A5C6588(0xD000000000000016, 0x800000023A69CAF0), (v30 & 1) != 0))
  {
    sub_23A5EF1F4(*(_QWORD *)(v23 + 56) + 32 * v29, (uint64_t)&v52);
  }
  else
  {
    v52 = 0u;
    v53 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v53 + 1))
  {
    if (swift_dynamicCast())
    {
      v31 = v49;
      goto LABEL_15;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)&v52, &qword_2569A0330);
  }
  v31 = 1;
LABEL_15:
  v2[v40] = v31;
  if (qword_2542D25F8 != -1)
    swift_once();
  v2[v47] = byte_2569AD6E9;

  v32 = (objc_class *)type metadata accessor for ObjectTrackingAgent();
  v51.receiver = v12;
  v51.super_class = v32;
  v33 = objc_msgSendSuper2(&v51, sel_init);
  v34 = sub_23A690F9C();
  v35 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v48, 1, 1, v34);
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = v33;
  v37 = v33;
  sub_23A5D120C(v35, (uint64_t)&unk_25699EB50, (uint64_t)v36);
  swift_release();
  return v37;
}

id ObjectTrackingAgent.__allocating_init(trackerConfig:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ObjectTrackingAgent.init(trackerConfig:)(a1);
}

id ObjectTrackingAgent.init(trackerConfig:)(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unsigned __int8 v29;
  objc_class *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  objc_super v46;
  uint64_t v47;

  v2 = v1;
  v44 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A691080();
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A69105C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_23A690D50();
  MEMORY[0x24BDAC7A8](v10);
  v40 = &v1[OBJC_IVAR___ObjectTrackingAgent_delegate];
  *((_QWORD *)v40 + 1) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR___ObjectTrackingAgent_tracker] = 0;
  v11 = (uint64_t *)&v1[OBJC_IVAR___ObjectTrackingAgent_appID];
  v41 = v11;
  *v11 = 0;
  v11[1] = 0;
  v43 = OBJC_IVAR___ObjectTrackingAgent_debugEnabled;
  v1[OBJC_IVAR___ObjectTrackingAgent_debugEnabled] = 0;
  v42 = OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig;
  v1[OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig] = 1;
  v1[OBJC_IVAR___ObjectTrackingAgent__trackingEnabled] = 0;
  v1[OBJC_IVAR___ObjectTrackingAgent_expectingDisconnect] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ObjectTrackingAgent_manager] = 0;
  v12 = v1;
  sub_23A690D08();
  v37 = OBJC_IVAR___ObjectTrackingAgent_agentQueue;
  sub_23A5D03A4(0, (unint64_t *)&qword_2542D2820);
  sub_23A690D38();
  v47 = MEMORY[0x24BEE4AF8];
  sub_23A5F0550((unint64_t *)&qword_2542D2810, v9, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27D0);
  sub_23A5F0590((unint64_t *)&qword_2542D27E0, (uint64_t *)&unk_2542D27D0);
  sub_23A691200();
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v7, *MEMORY[0x24BEE5750], v39);
  *(_QWORD *)&v12[v37] = sub_23A6910A4();
  v12[OBJC_IVAR___ObjectTrackingAgent_setupOngoing] = 0;
  v12[OBJC_IVAR___ObjectTrackingAgent_setupComplete] = 0;
  v13 = OBJC_IVAR___ObjectTrackingAgent_lastImage;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_init);
  v14 = OBJC_IVAR___ObjectTrackingAgent_lastFaces;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE30]), sel_init);
  v15 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  type metadata accessor for LockActor();
  v16 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v16 + 112) = 1;
  v17 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v16 + 120) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v12[v15] = v16;
  v18 = OBJC_IVAR___ObjectTrackingAgent_configStateLock;
  v19 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v19 + 112) = 1;
  *(_QWORD *)(v19 + 120) = v17;
  *(_QWORD *)&v12[v18] = v19;
  v20 = OBJC_IVAR___ObjectTrackingAgent_trackingSummaryLock;
  v21 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v21 + 112) = 1;
  *(_QWORD *)(v21 + 120) = v17;
  *(_QWORD *)&v12[v20] = v21;
  v12[OBJC_IVAR___ObjectTrackingAgent_registeredForTrackingConfigChanges] = 0;
  *(_QWORD *)&v12[OBJC_IVAR___ObjectTrackingAgent_currentCameraSession] = 0;
  *(_QWORD *)&v12[OBJC_IVAR___ObjectTrackingAgent_publishSummaryPeriod] = 0x3FA999999999999ALL;
  sub_23A69066C();
  *(_QWORD *)&v12[OBJC_IVAR___ObjectTrackingAgent__selectedFaceIDs] = v17;
  *(_QWORD *)&v12[OBJC_IVAR___ObjectTrackingAgent__selectedBodyIDs] = v17;
  v22 = OBJC_IVAR___ObjectTrackingAgent__selectedIDsLock;
  *(_QWORD *)&v12[v22] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  *((_QWORD *)v40 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v23 = v44;
  v24 = objc_msgSend(v44, sel_clientApplicationID);
  v25 = sub_23A690E1C();
  v27 = v26;

  v28 = v41;
  *v41 = v25;
  v28[1] = v27;
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v23, sel_customInferenceEnabled);
  v2[v42] = v29;
  if (qword_2542D25F8 != -1)
    swift_once();
  v2[v43] = byte_2569AD6E9;

  v30 = (objc_class *)type metadata accessor for ObjectTrackingAgent();
  v46.receiver = v12;
  v46.super_class = v30;
  v31 = objc_msgSendSuper2(&v46, sel_init);
  v32 = sub_23A690F9C();
  v33 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v45, 1, 1, v32);
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = v31;
  v35 = v31;
  sub_23A5D120C(v33, (uint64_t)&unk_25699EB60, (uint64_t)v34);

  swift_release();
  return v35;
}

id ObjectTrackingAgent.__allocating_init(delegate:appID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return ObjectTrackingAgent.init(delegate:appID:)(a1, a2, a3, a4);
}

id ObjectTrackingAgent.init(delegate:appID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  objc_class *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  objc_super v46;
  uint64_t v47;

  v5 = v4;
  v42 = a3;
  v43 = a4;
  v44 = a2;
  v41 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v6);
  v45 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A691080();
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A69105C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v11);
  v13 = sub_23A690D50();
  MEMORY[0x24BDAC7A8](v13);
  v39 = &v4[OBJC_IVAR___ObjectTrackingAgent_delegate];
  *((_QWORD *)v39 + 1) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v4[OBJC_IVAR___ObjectTrackingAgent_tracker] = 0;
  v14 = &v4[OBJC_IVAR___ObjectTrackingAgent_appID];
  v38 = v14;
  *v14 = 0;
  v14[1] = 0;
  v40 = OBJC_IVAR___ObjectTrackingAgent_debugEnabled;
  v4[OBJC_IVAR___ObjectTrackingAgent_debugEnabled] = 0;
  v4[OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig] = 1;
  v4[OBJC_IVAR___ObjectTrackingAgent__trackingEnabled] = 0;
  v4[OBJC_IVAR___ObjectTrackingAgent_expectingDisconnect] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ObjectTrackingAgent_manager] = 0;
  v15 = v4;
  sub_23A690D08();
  v35 = OBJC_IVAR___ObjectTrackingAgent_agentQueue;
  sub_23A5D03A4(0, (unint64_t *)&qword_2542D2820);
  sub_23A690D38();
  v47 = MEMORY[0x24BEE4AF8];
  sub_23A5F0550((unint64_t *)&qword_2542D2810, v12, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27D0);
  sub_23A5F0590((unint64_t *)&qword_2542D27E0, (uint64_t *)&unk_2542D27D0);
  sub_23A691200();
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v10, *MEMORY[0x24BEE5750], v37);
  *(_QWORD *)&v15[v35] = sub_23A6910A4();
  v15[OBJC_IVAR___ObjectTrackingAgent_setupOngoing] = 0;
  v15[OBJC_IVAR___ObjectTrackingAgent_setupComplete] = 0;
  v16 = OBJC_IVAR___ObjectTrackingAgent_lastImage;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_init);
  v17 = OBJC_IVAR___ObjectTrackingAgent_lastFaces;
  *(_QWORD *)&v15[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE30]), sel_init);
  v18 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  type metadata accessor for LockActor();
  v19 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v19 + 112) = 1;
  v20 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v19 + 120) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v15[v18] = v19;
  v21 = OBJC_IVAR___ObjectTrackingAgent_configStateLock;
  v22 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 120) = v20;
  *(_QWORD *)&v15[v21] = v22;
  v23 = OBJC_IVAR___ObjectTrackingAgent_trackingSummaryLock;
  v24 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v24 + 112) = 1;
  *(_QWORD *)(v24 + 120) = v20;
  *(_QWORD *)&v15[v23] = v24;
  v15[OBJC_IVAR___ObjectTrackingAgent_registeredForTrackingConfigChanges] = 0;
  *(_QWORD *)&v15[OBJC_IVAR___ObjectTrackingAgent_currentCameraSession] = 0;
  *(_QWORD *)&v15[OBJC_IVAR___ObjectTrackingAgent_publishSummaryPeriod] = 0x3FA999999999999ALL;
  sub_23A69066C();
  *(_QWORD *)&v15[OBJC_IVAR___ObjectTrackingAgent__selectedFaceIDs] = v20;
  *(_QWORD *)&v15[OBJC_IVAR___ObjectTrackingAgent__selectedBodyIDs] = v20;
  v25 = OBJC_IVAR___ObjectTrackingAgent__selectedIDsLock;
  *(_QWORD *)&v15[v25] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v26 = v38;
  v27 = v43;
  *v38 = v42;
  v26[1] = v27;
  swift_bridgeObjectRelease();
  *((_QWORD *)v39 + 1) = v44;
  swift_unknownObjectWeakAssign();
  if (qword_2542D25F8 != -1)
    swift_once();
  v5[v40] = byte_2569AD6E9;

  v28 = (objc_class *)type metadata accessor for ObjectTrackingAgent();
  v46.receiver = v15;
  v46.super_class = v28;
  v29 = objc_msgSendSuper2(&v46, sel_init);
  v30 = sub_23A690F9C();
  v31 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v45, 1, 1, v30);
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = 0;
  v32[3] = 0;
  v32[4] = v29;
  v33 = v29;
  sub_23A5D120C(v31, (uint64_t)&unk_25699EB70, (uint64_t)v32);
  swift_unknownObjectRelease();

  swift_release();
  return v33;
}

id ObjectTrackingAgent.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  objc_super v10;

  v1 = v0;
  v2 = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v3 = *(void **)&v0[OBJC_IVAR___ObjectTrackingAgent_tracker];
  if (v3)
  {
    v4 = v3;
    sub_23A62101C();

    v5 = *(void **)&v1[v2];
    if (v5)
    {
      v6 = v5;
      sub_23A5F4B18(0);

    }
  }
  v7 = *(void **)&v1[OBJC_IVAR___ObjectTrackingAgent_manager];
  if (v7)
  {
    v8 = v7;
    DockCoreManager.disconnect()();

  }
  *(_QWORD *)&v1[OBJC_IVAR___ObjectTrackingAgent_delegate + 8] = 0;
  swift_unknownObjectWeakAssign();
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for ObjectTrackingAgent();
  return objc_msgSendSuper2(&v10, sel_dealloc);
}

uint64_t sub_23A5D2DD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23A5D2DEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[3] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[4] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D2E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 40) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D2F20;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D2F20()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D2F74()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D2FB0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  char v7;
  id v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(char **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (v2)
  {
    v3 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
    v4 = *(void **)&v2[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore];
    v5 = v2;
    v6 = v4;
    sub_23A691104();

    v7 = v5[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled];
    v8 = *(id *)&v2[v3];
    sub_23A691110();

    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v7 = 0;
  }
  *(_BYTE *)(v0 + 56) = v7;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + *(_QWORD *)(v0 + 24));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D3074()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_23A5D31CC(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_23A5D3244;
  v5[2] = v4;
  return swift_task_switch();
}

uint64_t sub_23A5D3244(char a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  uint64_t v6;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 24);
  v4 = *(void **)(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_23A5D32B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 240) = v8;
  *(_DWORD *)(v9 + 296) = a6;
  *(double *)(v9 + 224) = a7;
  *(double *)(v9 + 232) = a8;
  *(_QWORD *)(v9 + 208) = a4;
  *(_QWORD *)(v9 + 216) = a5;
  *(_QWORD *)(v9 + 192) = a2;
  *(_QWORD *)(v9 + 200) = a3;
  *(_QWORD *)(v9 + 184) = a1;
  v10 = sub_23A6905DC();
  *(_QWORD *)(v9 + 248) = v10;
  *(_QWORD *)(v9 + 256) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 264) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5D332C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  double v17;
  double v18;
  char v19;
  unint64_t v20;
  double v21;
  char v22;
  unint64_t v23;
  double v24;
  char v25;
  unint64_t v26;
  char v27;
  id v28;
  _QWORD *v29;
  uint64_t v31;

  v1 = MEMORY[0x24BEE4AF8];
  v31 = MEMORY[0x24BEE4AF8];
  v2 = *(id *)(v0 + 184);
  sub_23A691140();

  sub_23A5F0550(&qword_25699EB88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
  sub_23A6911B8();
  if (*(_QWORD *)(v0 + 72))
  {
    v3 = (_OWORD *)(v0 + 80);
    v4 = (_OWORD *)(v0 + 144);
    v5 = (uint64_t *)(v0 + 176);
    do
    {
      sub_23A5D0394((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
      sub_23A5EF1F4(v0 + 16, v0 + 112);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699EB98);
      if (swift_dynamicCast())
      {
        v6 = *v5;
        if (*(_QWORD *)(*v5 + 16) && (v7 = sub_23A5C6588(0xD000000000000017, 0x800000023A69CB10), (v8 & 1) != 0))
        {
          sub_23A5EF1F4(*(_QWORD *)(v6 + 56) + 32 * v7, v0 + 80);
        }
        else
        {
          *v3 = 0u;
          *(_OWORD *)(v0 + 96) = 0u;
        }
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v0 + 104))
        {
          sub_23A5C921C(v0 + 80, &qword_2569A0330);
          sub_23A5D0394((_OWORD *)(v0 + 16), v4);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23A5EF34C(0, *(_QWORD *)(v1 + 16) + 1, 1);
            v1 = v31;
          }
          v10 = *(_QWORD *)(v1 + 16);
          v9 = *(_QWORD *)(v1 + 24);
          if (v10 >= v9 >> 1)
          {
            sub_23A5EF34C(v9 > 1, v10 + 1, 1);
            v1 = v31;
          }
          *(_QWORD *)(v1 + 16) = v10 + 1;
          v4 = (_OWORD *)(v0 + 144);
          sub_23A5D0394((_OWORD *)(v0 + 144), (_OWORD *)(v1 + 32 * v10 + 32));
          goto LABEL_5;
        }
      }
      else
      {
        *v3 = 0u;
        *(_OWORD *)(v0 + 96) = 0u;
      }
      sub_23A5C921C(v0 + 80, &qword_2569A0330);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
LABEL_5:
      sub_23A6911B8();
    }
    while (*(_QWORD *)(v0 + 72));
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
  sub_23A5C921C(v0 + 48, &qword_2569A0330);
  v11 = sub_23A5D3860(v1, (void (*)(BOOL, uint64_t, uint64_t))sub_23A5EF368, &qword_25699F0F8);
  swift_release();
  if (!v11)
    v11 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = *(_QWORD *)(v11 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 16))
    {
      v13 = sub_23A5C6588(0xD000000000000017, 0x800000023A69CB10);
      if ((v14 & 1) != 0)
      {
        v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v15 + 16))
        {
          v16 = sub_23A5C6588(88, 0xE100000000000000);
          v17 = 0.0;
          v18 = 0.0;
          if ((v19 & 1) != 0)
            v18 = *(double *)(*(_QWORD *)(v15 + 56) + 8 * v16);
          if (*(_QWORD *)(v15 + 16))
          {
            v20 = sub_23A5C6588(89, 0xE100000000000000);
            v21 = 0.0;
            if ((v22 & 1) != 0)
              v21 = *(double *)(*(_QWORD *)(v15 + 56) + 8 * v20);
            if (*(_QWORD *)(v15 + 16))
            {
              v23 = sub_23A5C6588(0x6874646957, 0xE500000000000000);
              v24 = 0.0;
              if ((v25 & 1) != 0)
                v17 = *(double *)(*(_QWORD *)(v15 + 56) + 8 * v23);
              if (*(_QWORD *)(v15 + 16))
              {
                v26 = sub_23A5C6588(0x746867696548, 0xE600000000000000);
                if ((v27 & 1) != 0)
                  v24 = *(double *)(*(_QWORD *)(v15 + 56) + 8 * v26);
              }
              goto LABEL_39;
            }
LABEL_38:
            v24 = 0.0;
LABEL_39:
            swift_bridgeObjectRelease();
            v28 = objc_msgSend(objc_allocWithZone((Class)DKFocusObservation), sel_initWithIdentifier_rect_userFocusStrong_detectionType_, -1, 0, 0, v18, v21, v17, v24);
            goto LABEL_35;
          }
        }
        else
        {
          v17 = 0.0;
          v18 = 0.0;
        }
        v21 = 0.0;
        goto LABEL_38;
      }
    }
  }
  swift_bridgeObjectRelease();
  v28 = 0;
LABEL_35:
  *(_QWORD *)(v0 + 272) = v28;
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v29;
  *v29 = v0;
  v29[1] = sub_23A5D3784;
  return sub_23A5D3CDC((uint64_t)v28, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_DWORD *)(v0 + 296), *(double *)(v0 + 224), *(double *)(v0 + 232));
}

uint64_t sub_23A5D3784()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D37E8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D3824()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D3860(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  _BYTE v13[32];
  uint64_t v14;

  v6 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  a2(0, v6, 0);
  v7 = v14;
  if (v6)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_23A5EF1F4(i, (uint64_t)v13);
      __swift_instantiateConcreteTypeFromMangledName(a3);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a2(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v14;
      }
      v10 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        a2(v9 > 1, v10 + 1, 1);
        v7 = v14;
      }
      *(_QWORD *)(v7 + 16) = v10 + 1;
      *(_QWORD *)(v7 + 8 * v10 + 32) = v12;
      if (!--v6)
        return v7;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

uint64_t sub_23A5D3B24(void *a1, void *a2, int a3, void *a4, int a5, void *aBlock, double a7, double a8, void *a9)
{
  _QWORD *v9;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  _QWORD *v23;

  v9[4] = a4;
  v9[5] = a9;
  v9[2] = a1;
  v9[3] = a2;
  v9[6] = _Block_copy(aBlock);
  v17 = sub_23A690E1C();
  v19 = v18;
  v9[7] = v18;
  v20 = a1;
  v21 = a2;
  v22 = a4;
  a9;
  v23 = (_QWORD *)swift_task_alloc();
  v9[8] = v23;
  *v23 = v9;
  v23[1] = sub_23A5D3C14;
  return sub_23A5D32B8((uint64_t)v20, (uint64_t)a2, v17, v19, (uint64_t)v22, a5, a7, a8);
}

uint64_t sub_23A5D3C14()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = *(void **)(*v1 + 32);
  v2 = *(void **)(*v1 + 40);
  v5 = *(void **)(*v1 + 16);
  v4 = *(void **)(*v1 + 24);
  v6 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 48);
  if (v0)
  {
    v8 = (void *)sub_23A6905C4();

    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v7 + 16))(*(_QWORD *)(v6 + 48), 0);
  }
  _Block_release(*(const void **)(v6 + 48));
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_23A5D3CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, double a8, double a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  *(_QWORD *)(v10 + 112) = v9;
  *(_DWORD *)(v10 + 280) = a7;
  *(double *)(v10 + 96) = a8;
  *(double *)(v10 + 104) = a9;
  *(_QWORD *)(v10 + 80) = a5;
  *(_QWORD *)(v10 + 88) = a6;
  *(_QWORD *)(v10 + 64) = a3;
  *(_QWORD *)(v10 + 72) = a4;
  *(_QWORD *)(v10 + 48) = a1;
  *(_QWORD *)(v10 + 56) = a2;
  v11 = sub_23A690D14();
  *(_QWORD *)(v10 + 120) = v11;
  *(_QWORD *)(v10 + 128) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v10 + 136) = swift_task_alloc();
  *(_QWORD *)(v10 + 144) = swift_task_alloc();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 152) = v12;
  *v12 = v10;
  v12[1] = sub_23A5D3D88;
  v12[2] = v9;
  return swift_task_switch();
}

uint64_t sub_23A5D3D88(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 284) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D3DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if ((*(_BYTE *)(v0 + 284) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 112);
    v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
    *(_QWORD *)(v0 + 160) = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v1 + v2);
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    sub_23A5C9938();
    swift_allocError();
    *(_QWORD *)v4 = 0xD000000000000014;
    *(_QWORD *)(v4 + 8) = 0x800000023A69CB30;
    *(_BYTE *)(v4 + 16) = 15;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

void sub_23A5D3EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D3F9C;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D3F9C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D3FF0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D402C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  double v4;
  double v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  float v18;
  float v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  uint64_t result;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = OBJC_IVAR___ObjectTrackingAgent_currentCameraSession;
  if (*(_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent_currentCameraSession)
    || (v29 = OBJC_IVAR___ObjectTrackingAgent_appID,
        *(_QWORD *)(v0 + 184) = OBJC_IVAR___ObjectTrackingAgent_appID,
        v30 = (_QWORD *)(v1 + v29),
        !*(_QWORD *)(v1 + v29 + 8)))
  {
    v3 = *(_DWORD *)(v0 + 280);
    v5 = *(double *)(v0 + 96);
    v4 = *(double *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(void **)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 48);
    v9 = *(void **)(v0 + 56);
    v11 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FollowerMetadata()), sel_init);
    *(_QWORD *)(v0 + 232) = v11;
    v12 = sub_23A5D5218(v9, v8, v6);
    v13 = OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_observations;
    *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_observations] = v12;
    swift_bridgeObjectRelease();
    v14 = sub_23A690E04();
    v15 = *(void **)&v11[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_portType];
    *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_portType] = v14;

    *(_DWORD *)&v11[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_orientation] = v3;
    v16 = *(void **)&v11[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_intrinsics];
    *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_intrinsics] = v7;
    v17 = v7;

    v18 = v5;
    *(float *)&v11[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_referenceWidth] = v18;
    v19 = v4;
    *(float *)&v11[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_referenceHeight] = v19;
    if (!v10)
      goto LABEL_8;
    v20 = *(void **)(v0 + 48);
    v21 = *(_QWORD *)&v11[v13];
    if (v21 >> 62)
    {
      v45 = v20;
      swift_bridgeObjectRetain();
      v46 = sub_23A691374();
      swift_bridgeObjectRelease();
      if (v46 > 0)
        goto LABEL_6;
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      v23 = v20;
      if (v22 > 0)
        goto LABEL_6;
    }
    if (!objc_msgSend(v20, sel_userFocusStrong))
    {
LABEL_7:

LABEL_8:
      v25 = *(_QWORD *)(v0 + 112);
      v26 = *(void **)(v25 + OBJC_IVAR___ObjectTrackingAgent_tracker);
      *(_QWORD *)(v0 + 240) = v26;
      if (v26)
      {
        v26;
        v27 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 248) = v27;
        *v27 = v0;
        v27[1] = sub_23A5D4C44;
        return sub_23A6229FC((uint64_t)v11, *(_QWORD *)(v0 + 64));
      }
      else
      {
        v40 = *(_QWORD *)(v0 + 160);
        sub_23A5EDB64();
        *(_QWORD *)(v0 + 264) = *(_QWORD *)(v25 + v40);
        swift_retain();
        return swift_task_switch();
      }
    }
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9A0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_23A696520;
    *(_QWORD *)(v24 + 32) = sub_23A5EFDE0(v20);
    sub_23A690F30();
    *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_focusObservation] = v24;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v31 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CameraSessionInformation()), sel_init);
  *(_QWORD *)(v0 + 192) = v31;
  result = v30[1];
  if (result)
  {
    v33 = *(_QWORD *)(v0 + 72);
    v32 = *(_QWORD *)(v0 + 80);
    v34 = &v31[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_appId];
    *(_QWORD *)v34 = *v30;
    *((_QWORD *)v34 + 1) = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_init);
    objc_msgSend(v35, sel_timeIntervalSince1970);
    v37 = v36;

    v38 = OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_startTime;
    *(_QWORD *)(v0 + 200) = OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_startTime;
    *(_QWORD *)&v31[v38] = v37;
    v39 = (v33 != 0x6570795474726F50 || v32 != 0xED0000746E6F7246) && (sub_23A691518() & 1) == 0;
    v41 = OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_cameraType;
    *(_QWORD *)(v0 + 208) = OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_cameraType;
    *(_QWORD *)&v31[v41] = v39;
    v42 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v31;
    v43 = v31;

    v44 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v44;
    *v44 = v0;
    v44[1] = sub_23A5D4468;
    return sub_23A5E0328((uint64_t)v43, 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23A5D4468(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_23A5D44C4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  double v34;
  double v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  float v48;
  float v49;
  void *v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v1 = *(_QWORD *)(v0 + 224);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_23A691374();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = &OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v4 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_39:
    v5 = (char *)MEMORY[0x23B85312C](v4, *(_QWORD *)(v0 + 224));
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v4 >= *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v5 = (char *)*(id *)(*(_QWORD *)(v0 + 224) + 8 * v4 + 32);
LABEL_9:
  v7 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 200);
  swift_bridgeObjectRelease();
  if (*(double *)(v7 + v6) - *(double *)&v5[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_endTime] >= 1.0
    || *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_cameraType]
    || *(_QWORD *)(*(_QWORD *)(v0 + 192) + *(_QWORD *)(v0 + 208)) != 1)
  {

LABEL_16:
    v16 = 0;
    goto LABEL_17;
  }
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 16))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 120));
  v8 = sub_23A690CFC();
  v9 = sub_23A691044();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 128);
  if (v10)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v64 = v13;
    v15 = swift_slowAlloc();
    v68 = v15;
    *(_DWORD *)v14 = 136315138;
    *(_QWORD *)(v0 + 40) = sub_23A5EEB40(0xD000000000000067, 0x800000023A69CB50, &v68);
    v3 = &OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name;
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v8, v9, "%s camera flip detected", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v15, -1, -1);
    MEMORY[0x23B853BD0](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v11, v12);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }

  v59 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + v3[348]);
  v16 = 0x400921FB54442D18;
  if (v59)
    *(_BYTE *)(v59 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_flipCamera) = 1;
LABEL_17:
  v17 = *(void **)(v0 + 112);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 16))(*(_QWORD *)(v0 + 136), (uint64_t)v17 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 120));
  v18 = v17;
  v19 = sub_23A690CFC();
  v20 = sub_23A691044();
  if (!os_log_type_enabled(v19, v20))
  {
    v26 = *(void **)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 128);
    v27 = *(_QWORD *)(v0 + 136);
    v30 = *(void **)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 120);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    goto LABEL_21;
  }
  v21 = *(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 184);
  v22 = swift_slowAlloc();
  v67 = swift_slowAlloc();
  v68 = v67;
  *(_DWORD *)v22 = 136315650;
  *(_QWORD *)(v0 + 16) = sub_23A5EEB40(0xD000000000000067, 0x800000023A69CB50, &v68);
  sub_23A6911D0();
  *(_WORD *)(v22 + 12) = 2080;
  v23 = *(_QWORD *)(v21 + 8);
  if (!v23)
  {
LABEL_44:

    __break(1u);
    return;
  }
  v62 = *(void **)(v0 + 192);
  v63 = *(_QWORD *)(v0 + 128);
  v24 = *(char **)(v0 + 112);
  v65 = *(_QWORD *)(v0 + 120);
  v66 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)&v24[*(_QWORD *)(v0 + 184)];
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 24) = sub_23A5EEB40(v25, v23, &v68);
  sub_23A6911D0();

  swift_bridgeObjectRelease();
  *(_WORD *)(v22 + 22) = 2048;
  *(_QWORD *)(v0 + 32) = v16;
  sub_23A6911D0();
  _os_log_impl(&dword_23A5B0000, v19, v20, "%s App: %s rotating to heading %f", (uint8_t *)v22, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x23B853BD0](v67, -1, -1);
  MEMORY[0x23B853BD0](v22, -1, -1);

  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v66, v65);
  v3 = &OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name;
LABEL_21:
  v31 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + v3[348]);
  if (v31)
  {
    v32 = *(_QWORD *)(v31 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
    if (v32)
      *(_QWORD *)(v32 + OBJC_IVAR____TtC11DockKitCore19ActuationController_rotateCameraAngle) = v16;
  }
  v33 = *(_DWORD *)(v0 + 280);
  v35 = *(double *)(v0 + 96);
  v34 = *(double *)(v0 + 104);
  v36 = *(_QWORD *)(v0 + 80);
  v37 = *(void **)(v0 + 88);
  v38 = *(_QWORD *)(v0 + 72);
  v40 = *(_QWORD *)(v0 + 48);
  v39 = *(void **)(v0 + 56);
  v41 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FollowerMetadata()), sel_init);
  *(_QWORD *)(v0 + 232) = v41;
  v42 = sub_23A5D5218(v39, v38, v36);
  v43 = OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_observations;
  *(_QWORD *)&v41[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_observations] = v42;
  swift_bridgeObjectRelease();
  v44 = sub_23A690E04();
  v45 = *(void **)&v41[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_portType];
  *(_QWORD *)&v41[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_portType] = v44;

  *(_DWORD *)&v41[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_orientation] = v33;
  v46 = *(void **)&v41[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_intrinsics];
  *(_QWORD *)&v41[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_intrinsics] = v37;
  v47 = v37;

  v48 = v35;
  *(float *)&v41[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_referenceWidth] = v48;
  v49 = v34;
  *(float *)&v41[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_referenceHeight] = v49;
  if (!v40)
    goto LABEL_30;
  v50 = *(void **)(v0 + 48);
  v51 = *(_QWORD *)&v41[v43];
  if (v51 >> 62)
  {
    v60 = v50;
    swift_bridgeObjectRetain();
    v61 = sub_23A691374();
    swift_bridgeObjectRelease();
    if (v61 > 0)
      goto LABEL_28;
  }
  else
  {
    v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
    v53 = v50;
    if (v52 > 0)
    {
LABEL_28:
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9A0);
      v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_23A696520;
      *(_QWORD *)(v54 + 32) = sub_23A5EFDE0(v50);
      v68 = v54;
      sub_23A690F30();
      *(_QWORD *)&v41[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_focusObservation] = v68;
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
  }
  if (objc_msgSend(v50, sel_userFocusStrong, v62))
    goto LABEL_28;
LABEL_29:

LABEL_30:
  v55 = *(_QWORD *)(v0 + 112);
  v56 = *(void **)(v55 + v3[348]);
  *(_QWORD *)(v0 + 240) = v56;
  if (v56)
  {
    v56;
    v57 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v57;
    *v57 = v0;
    v57[1] = sub_23A5D4C44;
    sub_23A6229FC((uint64_t)v41, *(_QWORD *)(v0 + 64));
  }
  else
  {
    v58 = *(_QWORD *)(v0 + 160);
    sub_23A5EDB64();
    *(_QWORD *)(v0 + 264) = *(_QWORD *)(v55 + v58);
    swift_retain();
    swift_task_switch();
  }
}

uint64_t sub_23A5D4C44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 256) = v0;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23A5D4CB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v2 = v0[14];
  sub_23A5EDB64();
  v0[33] = *(_QWORD *)(v2 + v1);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D4D00()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D4D44()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D4D8C()
{
  _QWORD *v0;

  v0[34] = *(_QWORD *)(v0[14] + v0[20]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D4DD8()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D4E1C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 232);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D4FF4(void *a1, void *a2, void *a3, int a4, void *a5, int a6, void *aBlock, double a8, double a9, void *a10)
{
  _QWORD *v10;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  _QWORD *v26;

  v10[5] = a5;
  v10[6] = a10;
  v10[3] = a2;
  v10[4] = a3;
  v10[2] = a1;
  v10[7] = _Block_copy(aBlock);
  v19 = sub_23A690E1C();
  v21 = v20;
  v10[8] = v20;
  v22 = a1;
  v23 = a2;
  v24 = a3;
  v25 = a5;
  a10;
  v26 = (_QWORD *)swift_task_alloc();
  v10[9] = v26;
  *v26 = v10;
  v26[1] = sub_23A5D50FC;
  return sub_23A5D3CDC((uint64_t)a1, (uint64_t)v23, (uint64_t)a3, v19, v21, (uint64_t)v25, a6, a8, a9);
}

uint64_t sub_23A5D50FC()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v3 = *(void **)(*v1 + 40);
  v2 = *(void **)(*v1 + 48);
  v5 = *(void **)(*v1 + 24);
  v4 = *(void **)(*v1 + 32);
  v6 = *(void **)(*v1 + 16);
  v7 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v7 + 56);
  if (v0)
  {
    v9 = (void *)sub_23A6905C4();

    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v9);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v8 + 16))(*(_QWORD *)(v7 + 56), 0);
  }
  _Block_release(*(const void **)(v7 + 56));
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_23A5D5218(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  double v44;
  unint64_t v45;
  char v46;
  double i;
  double v48;
  unint64_t v49;
  char v50;
  double j;
  void *v52;
  uint64_t v53;
  id v54;
  double v55;
  id v56;
  uint64_t v57;
  id v58;
  double v59;
  id v60;
  double v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  void *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  objc_class *v100;
  _BYTE *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  id v107;
  _QWORD v109[2];
  uint64_t v110;
  uint64_t v111;
  double *v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  double v121;
  uint64_t v122;
  _QWORD v123[4];
  objc_super v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  double v129;

  v111 = a3;
  v110 = a2;
  v4 = sub_23A6905DC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v120 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v109 - v9;
  v129 = MEMORY[0x24BEE4AF8];
  v11 = a1;
  sub_23A691140();
  v121 = *(double *)&v11;

  sub_23A5F0550(&qword_25699EB88, v5, MEMORY[0x24BDCD530]);
  sub_23A6911B8();
  while (*((_QWORD *)&v126 + 1))
  {
    sub_23A5D0394(&v125, &v127);
    sub_23A5EF1F4((uint64_t)&v127, (uint64_t)v123);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699EB98);
    if (swift_dynamicCast())
    {
      v12 = v122;
      if (*(_QWORD *)(v122 + 16) && (v13 = sub_23A5C6588(0x444965636146, 0xE600000000000000), (v14 & 1) != 0))
      {
        sub_23A5EF1F4(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v125);
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v126 + 1))
      {
        sub_23A5C921C((uint64_t)&v125, &qword_2569A0330);
        sub_23A5D0394(&v127, &v125);
        v15 = *(_QWORD *)&v129;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23A5EF34C(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = *(_QWORD *)&v129;
        }
        v17 = *(_QWORD *)(v15 + 16);
        v16 = *(_QWORD *)(v15 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_23A5EF34C(v16 > 1, v17 + 1, 1);
          v15 = *(_QWORD *)&v129;
        }
        *(_QWORD *)(v15 + 16) = v17 + 1;
        sub_23A5D0394(&v125, (_OWORD *)(v15 + 32 * v17 + 32));
        goto LABEL_5;
      }
    }
    else
    {
      v125 = 0u;
      v126 = 0u;
    }
    sub_23A5C921C((uint64_t)&v125, &qword_2569A0330);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v127);
LABEL_5:
    sub_23A6911B8();
  }
  v18 = *(void (**)(char *, uint64_t))(v120 + 8);
  v18(v10, v4);
  sub_23A5C921C((uint64_t)&v125, &qword_2569A0330);
  v19 = sub_23A5D3860(*(uint64_t *)&v129, (void (*)(BOOL, uint64_t, uint64_t))sub_23A5EF320, &qword_25699EB98);
  swift_release();
  if (v19)
    v20 = v19;
  else
    v20 = MEMORY[0x24BEE4AF8];
  v117 = v20;
  v129 = MEMORY[0x24BEE4AF8];
  v21 = *(id *)&v121;
  sub_23A691140();

  sub_23A6911B8();
  while (*((_QWORD *)&v126 + 1))
  {
    sub_23A5D0394(&v125, &v127);
    sub_23A5EF1F4((uint64_t)&v127, (uint64_t)v123);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699EB98);
    if (swift_dynamicCast())
    {
      v22 = v122;
      if (*(_QWORD *)(v122 + 16) && (v23 = sub_23A5C6588(17481, 0xE200000000000000), (v24 & 1) != 0))
      {
        sub_23A5EF1F4(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v125);
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v126 + 1))
      {
        sub_23A5C921C((uint64_t)&v125, &qword_2569A0330);
        sub_23A5D0394(&v127, &v125);
        v25 = *(_QWORD *)&v129;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23A5EF34C(0, *(_QWORD *)(v25 + 16) + 1, 1);
          v25 = *(_QWORD *)&v129;
        }
        v27 = *(_QWORD *)(v25 + 16);
        v26 = *(_QWORD *)(v25 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_23A5EF34C(v26 > 1, v27 + 1, 1);
          v25 = *(_QWORD *)&v129;
        }
        *(_QWORD *)(v25 + 16) = v27 + 1;
        sub_23A5D0394(&v125, (_OWORD *)(v25 + 32 * v27 + 32));
        goto LABEL_24;
      }
    }
    else
    {
      v125 = 0u;
      v126 = 0u;
    }
    sub_23A5C921C((uint64_t)&v125, &qword_2569A0330);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v127);
LABEL_24:
    sub_23A6911B8();
  }
  v18(v8, v4);
  sub_23A5C921C((uint64_t)&v125, &qword_2569A0330);
  v28 = (double *)sub_23A5D3860(*(uint64_t *)&v129, (void (*)(BOOL, uint64_t, uint64_t))sub_23A5EF320, &qword_25699EB98);
  swift_release();
  if (!v28)
    v28 = (double *)MEMORY[0x24BEE4AF8];
  v123[0] = MEMORY[0x24BEE4AF8];
  v29 = v117;
  v30 = *(_QWORD *)(v117 + 16);
  v112 = v28;
  v116 = v30;
  if (v30)
  {
    v31 = 0;
    v115 = v117 + 32;
    v32 = MEMORY[0x24BEE0D00];
    v114 = xmmword_23A694030;
    v33 = MEMORY[0x24BEE13C8];
    v113 = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      if (v31 >= *(_QWORD *)(v29 + 16))
      {
        __break(1u);
LABEL_200:
        swift_once();
LABEL_129:
        v70 = byte_2569AD6E8;
        if (byte_2569AD6E8 == 2)
          v70 = *(_BYTE *)(v109[1] + OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig);
        if ((v70 & 1) != 0)
          goto LABEL_132;
        goto LABEL_198;
      }
      v34 = *(_QWORD *)(v115 + 8 * v31);
      v35 = *(_QWORD *)(v34 + 16);
      swift_bridgeObjectRetain();
      if (v35 && (v36 = sub_23A5C6588(0x444965636146, 0xE600000000000000), (v37 & 1) != 0))
      {
        sub_23A5EF1F4(*(_QWORD *)(v34 + 56) + 32 * v36, (uint64_t)&v127);
        if (swift_dynamicCast())
        {
          *(_QWORD *)&v119 = v125;
          if (!*(_QWORD *)(v34 + 16))
            goto LABEL_51;
        }
        else
        {
          *(_QWORD *)&v119 = 0;
          if (!*(_QWORD *)(v34 + 16))
            goto LABEL_51;
        }
      }
      else
      {
        *(_QWORD *)&v119 = 0;
        if (!*(_QWORD *)(v34 + 16))
          goto LABEL_51;
      }
      v38 = sub_23A5C6588(0x6E656469666E6F43, 0xEF6C6576654C6563);
      if ((v39 & 1) == 0
        || (sub_23A5EF1F4(*(_QWORD *)(v34 + 56) + 32 * v38, (uint64_t)&v127), !swift_dynamicCast()))
      {
LABEL_51:
        v40 = 1;
        goto LABEL_52;
      }
      v40 = v125;
LABEL_52:
      v118 = v40;
      if (*(_QWORD *)(v34 + 16)
        && (v41 = sub_23A5C6588(0x7974696C61646F4DLL, 0xE800000000000000), (v42 & 1) != 0)
        && (sub_23A5EF1F4(*(_QWORD *)(v34 + 56) + 32 * v41, (uint64_t)&v127), swift_dynamicCast()))
      {
        v43 = v125;
      }
      else
      {
        v43 = -1;
      }
      v44 = 0.0;
      if (*(_QWORD *)(v34 + 16))
      {
        v45 = sub_23A5C6588(0x666E49656C676E41, 0xEC0000007761596FLL);
        if ((v46 & 1) != 0)
        {
          sub_23A5EF1F4(*(_QWORD *)(v34 + 56) + 32 * v45, (uint64_t)&v127);
          if (swift_dynamicCast())
            v44 = *(double *)&v125;
        }
      }
      for (i = v44 * 3.14159265 / 180.0; i > 3.14159265; i = i + -6.28318531)
        ;
      while (i < -3.14159265)
        i = i + 6.28318531;
      v48 = 0.0;
      if (*(_QWORD *)(v34 + 16))
      {
        v49 = sub_23A5C6588(0x666E49656C676E41, 0xEE0068637469506FLL);
        if ((v50 & 1) != 0)
        {
          sub_23A5EF1F4(*(_QWORD *)(v34 + 56) + 32 * v49, (uint64_t)&v127);
          if (swift_dynamicCast())
            v48 = *(double *)&v125;
        }
      }
      for (j = v48 * 3.14159265 / 180.0; j > 3.14159265; j = j + -6.28318531)
        ;
      while (j < -3.14159265)
        j = j + 6.28318531;
      sub_23A5D0650(1952671058, 0xE400000000000000, v34, &v127);
      if (*((_QWORD *)&v128 + 1))
      {
        sub_23A5D03A4(0, &qword_2569A0120);
        if (swift_dynamicCast())
        {
          v52 = (void *)v125;
          goto LABEL_80;
        }
      }
      else
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F0E8);
      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = v114;
      *(_QWORD *)(v53 + 32) = 88;
      *(_QWORD *)(v53 + 40) = 0xE100000000000000;
      *(_QWORD *)(v53 + 56) = v32;
      *(_QWORD *)(v53 + 64) = 0;
      *(_QWORD *)(v53 + 88) = v33;
      *(_QWORD *)(v53 + 96) = 89;
      *(_QWORD *)(v53 + 104) = 0xE100000000000000;
      *(_QWORD *)(v53 + 120) = v32;
      *(_QWORD *)(v53 + 128) = 0;
      *(_QWORD *)(v53 + 152) = v33;
      *(_QWORD *)(v53 + 160) = 0x6874646957;
      *(_QWORD *)(v53 + 168) = 0xE500000000000000;
      *(_QWORD *)(v53 + 184) = v32;
      *(_QWORD *)(v53 + 192) = 0;
      *(_QWORD *)(v53 + 216) = v33;
      *(_QWORD *)(v53 + 224) = 0x746867696548;
      *(_QWORD *)(v53 + 232) = 0xE600000000000000;
      *(_QWORD *)(v53 + 280) = v33;
      *(_QWORD *)(v53 + 248) = v32;
      *(_QWORD *)(v53 + 256) = 0;
      sub_23A5D03A4(0, &qword_2569A0120);
      v52 = (void *)sub_23A691014();
LABEL_80:
      *(_QWORD *)&v127 = 88;
      *((_QWORD *)&v127 + 1) = 0xE100000000000000;
      v54 = objc_msgSend(v52, sel___swift_objectForKeyedSubscript_, sub_23A691548());
      swift_unknownObjectRelease();
      if (v54)
      {
        sub_23A6911F4();
        swift_unknownObjectRelease();
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      sub_23A5F26D8((uint64_t)&v125, (uint64_t)&v127);
      if (*((_QWORD *)&v128 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v55 = v129;
          goto LABEL_88;
        }
      }
      else
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
      }
      v55 = 0.0;
LABEL_88:
      v121 = v55;
      *(_QWORD *)&v127 = 89;
      *((_QWORD *)&v127 + 1) = 0xE100000000000000;
      v56 = objc_msgSend(v52, sel___swift_objectForKeyedSubscript_, sub_23A691548());
      swift_unknownObjectRelease();
      if (v56)
      {
        sub_23A6911F4();
        swift_unknownObjectRelease();
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      sub_23A5F26D8((uint64_t)&v125, (uint64_t)&v127);
      if (*((_QWORD *)&v128 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v57 = *(_QWORD *)&v129;
          goto LABEL_96;
        }
      }
      else
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
      }
      v57 = 0;
LABEL_96:
      v120 = v57;
      *(_QWORD *)&v127 = 0x6874646957;
      *((_QWORD *)&v127 + 1) = 0xE500000000000000;
      v58 = objc_msgSend(v52, sel___swift_objectForKeyedSubscript_, sub_23A691548());
      swift_unknownObjectRelease();
      if (v58)
      {
        sub_23A6911F4();
        swift_unknownObjectRelease();
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      sub_23A5F26D8((uint64_t)&v125, (uint64_t)&v127);
      if (*((_QWORD *)&v128 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v59 = v129;
          goto LABEL_104;
        }
      }
      else
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
      }
      v59 = 0.0;
LABEL_104:
      *(_QWORD *)&v127 = 0x746867696548;
      *((_QWORD *)&v127 + 1) = 0xE600000000000000;
      v60 = objc_msgSend(v52, sel___swift_objectForKeyedSubscript_, sub_23A691548());
      swift_unknownObjectRelease();
      if (v60)
      {
        sub_23A6911F4();
        swift_unknownObjectRelease();
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      sub_23A5F26D8((uint64_t)&v125, (uint64_t)&v127);
      if (*((_QWORD *)&v128 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v61 = v129;
          goto LABEL_112;
        }
      }
      else
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
      }
      v61 = 0.0;
LABEL_112:
      sub_23A5D0650(0x444970756F7247, 0xE700000000000000, v34, &v127);
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v128 + 1))
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
LABEL_116:
        v63 = 0;
        v62 = 1;
        goto LABEL_117;
      }
      if (!swift_dynamicCast())
        goto LABEL_116;
      v62 = 0;
      v63 = v125;
LABEL_117:
      *(double *)&v64 = i * 180.0 / 3.14159265;
      v65 = (double)v118;
      v66 = objc_allocWithZone((Class)type metadata accessor for DockCoreObservation());
      v67 = objc_retain(DockCoreObservation.init(identifier:type:X:Y:width:height:trackerID:groupId:yawAngle:pitchAngle:confidence:printConfidence:newTrack:modality:)(v119, 0, -1, v63, v62, v64, 0, COERCE__INT64(j * 180.0 / 3.14159265), v121, *(double *)&v120, v59, v61, v65, 0, 0, 1, 1, v43,
                0));
      v28 = (double *)v123;
      MEMORY[0x23B852D78]();
      if (*(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23A690F3C();
      ++v31;
      sub_23A690F48();
      sub_23A690F30();

      v29 = v117;
      if (v31 == v116)
      {
        swift_bridgeObjectRelease();
        v28 = v112;
        goto LABEL_122;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_122:
  v68 = v110;
  v69 = v111;
  if (v110 == 0xD000000000000015 && v111 == 0x800000023A69CA70
    || (sub_23A691518() & 1) != 0
    || v68 == 0x6570795474726F50 && v69 == 0xEC0000006B636142
    || (sub_23A691518() & 1) != 0)
  {
    if (qword_25699DC70 != -1)
      goto LABEL_200;
    goto LABEL_129;
  }
LABEL_132:
  v120 = *((_QWORD *)v28 + 2);
  if (v120)
  {
    v71 = 0;
    v119 = xmmword_23A694030;
    v72 = MEMORY[0x24BEE0D00];
    v73 = MEMORY[0x24BEE13C8];
    v118 = MEMORY[0x24BEE4AD8] + 8;
    do
    {
      v74 = v28[v71 + 4];
      v75 = *(_QWORD *)(*(_QWORD *)&v74 + 16);
      swift_bridgeObjectRetain();
      if (v75
        && (v76 = sub_23A5C6588(17481, 0xE200000000000000), (v77 & 1) != 0)
        && (sub_23A5EF1F4(*(_QWORD *)(*(_QWORD *)&v74 + 56) + 32 * v76, (uint64_t)&v127),
            swift_dynamicCast()))
      {
        v121 = *(double *)&v125;
        if (!*(_QWORD *)(*(_QWORD *)&v74 + 16))
          goto LABEL_144;
      }
      else
      {
        v121 = 0.0;
        if (!*(_QWORD *)(*(_QWORD *)&v74 + 16))
          goto LABEL_144;
      }
      v78 = sub_23A5C6588(0x6E656469666E6F43, 0xEF6C6576654C6563);
      if ((v79 & 1) != 0)
      {
        sub_23A5EF1F4(*(_QWORD *)(*(_QWORD *)&v74 + 56) + 32 * v78, (uint64_t)&v127);
        if (swift_dynamicCast())
        {
          v80 = v125;
          if (!*(_QWORD *)(*(_QWORD *)&v74 + 16))
            goto LABEL_149;
          goto LABEL_145;
        }
      }
LABEL_144:
      v80 = 1;
      if (!*(_QWORD *)(*(_QWORD *)&v74 + 16))
        goto LABEL_149;
LABEL_145:
      v81 = sub_23A5C6588(0x7974696C61646F4DLL, 0xE800000000000000);
      if ((v82 & 1) == 0
        || (sub_23A5EF1F4(*(_QWORD *)(*(_QWORD *)&v74 + 56) + 32 * v81, (uint64_t)&v127),
            !swift_dynamicCast()))
      {
LABEL_149:
        v83 = -1;
        if (!*(_QWORD *)(*(_QWORD *)&v74 + 16))
          goto LABEL_153;
        goto LABEL_150;
      }
      v83 = v125;
      if (!*(_QWORD *)(*(_QWORD *)&v74 + 16))
        goto LABEL_153;
LABEL_150:
      v84 = sub_23A5C6588(1952671058, 0xE400000000000000);
      if ((v85 & 1) != 0)
      {
        sub_23A5EF1F4(*(_QWORD *)(*(_QWORD *)&v74 + 56) + 32 * v84, (uint64_t)&v127);
        sub_23A5D03A4(0, &qword_2569A0120);
        if (swift_dynamicCast())
        {
          v86 = (void *)v125;
          goto LABEL_154;
        }
      }
LABEL_153:
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F0E8);
      v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = v119;
      *(_QWORD *)(v87 + 32) = 88;
      *(_QWORD *)(v87 + 40) = 0xE100000000000000;
      *(_QWORD *)(v87 + 56) = v72;
      *(_QWORD *)(v87 + 64) = 0;
      *(_QWORD *)(v87 + 88) = v73;
      *(_QWORD *)(v87 + 96) = 89;
      *(_QWORD *)(v87 + 104) = 0xE100000000000000;
      *(_QWORD *)(v87 + 120) = v72;
      *(_QWORD *)(v87 + 128) = 0;
      *(_QWORD *)(v87 + 152) = v73;
      *(_QWORD *)(v87 + 160) = 0x6874646957;
      *(_QWORD *)(v87 + 168) = 0xE500000000000000;
      *(_QWORD *)(v87 + 184) = v72;
      *(_QWORD *)(v87 + 192) = 0;
      *(_QWORD *)(v87 + 216) = v73;
      *(_QWORD *)(v87 + 224) = 0x746867696548;
      *(_QWORD *)(v87 + 232) = 0xE600000000000000;
      *(_QWORD *)(v87 + 280) = v73;
      *(_QWORD *)(v87 + 248) = v72;
      *(_QWORD *)(v87 + 256) = 0;
      sub_23A5D03A4(0, &qword_2569A0120);
      v86 = (void *)sub_23A691014();
LABEL_154:
      *(_QWORD *)&v127 = 88;
      *((_QWORD *)&v127 + 1) = 0xE100000000000000;
      v88 = objc_msgSend(v86, sel___swift_objectForKeyedSubscript_, sub_23A691548());
      swift_unknownObjectRelease();
      if (v88)
      {
        sub_23A6911F4();
        swift_unknownObjectRelease();
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      sub_23A5F26D8((uint64_t)&v125, (uint64_t)&v127);
      if (*((_QWORD *)&v128 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v89 = *(_QWORD *)&v129;
          goto LABEL_162;
        }
      }
      else
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
      }
      v89 = 0;
LABEL_162:
      *(_QWORD *)&v127 = 89;
      *((_QWORD *)&v127 + 1) = 0xE100000000000000;
      v90 = objc_msgSend(v86, sel___swift_objectForKeyedSubscript_, sub_23A691548());
      swift_unknownObjectRelease();
      if (v90)
      {
        sub_23A6911F4();
        swift_unknownObjectRelease();
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      sub_23A5F26D8((uint64_t)&v125, (uint64_t)&v127);
      if (*((_QWORD *)&v128 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v91 = *(_QWORD *)&v129;
          goto LABEL_170;
        }
      }
      else
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
      }
      v91 = 0;
LABEL_170:
      *(_QWORD *)&v127 = 0x6874646957;
      *((_QWORD *)&v127 + 1) = 0xE500000000000000;
      v92 = objc_msgSend(v86, sel___swift_objectForKeyedSubscript_, sub_23A691548());
      swift_unknownObjectRelease();
      if (v92)
      {
        sub_23A6911F4();
        swift_unknownObjectRelease();
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      sub_23A5F26D8((uint64_t)&v125, (uint64_t)&v127);
      if (*((_QWORD *)&v128 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v93 = *(_QWORD *)&v129;
          goto LABEL_178;
        }
      }
      else
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
      }
      v93 = 0;
LABEL_178:
      *(_QWORD *)&v127 = 0x746867696548;
      *((_QWORD *)&v127 + 1) = 0xE600000000000000;
      v94 = objc_msgSend(v86, sel___swift_objectForKeyedSubscript_, sub_23A691548());
      swift_unknownObjectRelease();
      if (v94)
      {
        sub_23A6911F4();
        swift_unknownObjectRelease();
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      sub_23A5F26D8((uint64_t)&v125, (uint64_t)&v127);
      if (!*((_QWORD *)&v128 + 1))
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
LABEL_186:
        v95 = 0;
        if (!*(_QWORD *)(*(_QWORD *)&v74 + 16))
          goto LABEL_189;
        goto LABEL_187;
      }
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_186;
      v95 = *(_QWORD *)&v129;
      if (!*(_QWORD *)(*(_QWORD *)&v74 + 16))
        goto LABEL_189;
LABEL_187:
      v96 = sub_23A5C6588(0x444970756F7247, 0xE700000000000000);
      if ((v97 & 1) != 0)
      {
        sub_23A5EF1F4(*(_QWORD *)(*(_QWORD *)&v74 + 56) + 32 * v96, (uint64_t)&v127);
        goto LABEL_190;
      }
LABEL_189:
      v127 = 0u;
      v128 = 0u;
LABEL_190:
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v128 + 1))
      {
        sub_23A5C921C((uint64_t)&v127, &qword_2569A0330);
LABEL_194:
        v99 = 0;
        v98 = 1;
        goto LABEL_195;
      }
      if (!swift_dynamicCast())
        goto LABEL_194;
      v98 = 0;
      v99 = v125;
LABEL_195:
      v100 = (objc_class *)type metadata accessor for DockCoreObservation();
      v101 = objc_allocWithZone(v100);
      *(double *)&v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_identifier] = v121;
      *(_QWORD *)&v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_type] = 1;
      *(_QWORD *)&v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_X] = v89;
      *(_QWORD *)&v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_Y] = v91;
      *(_QWORD *)&v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_width] = v93;
      *(_QWORD *)&v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_height] = v95;
      *(_QWORD *)&v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_trackerID] = -1;
      v102 = &v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_groupId];
      *(_QWORD *)v102 = v99;
      v102[8] = v98;
      v103 = &v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_yawAngle];
      *(_QWORD *)v103 = 0;
      v103[8] = 1;
      v104 = &v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_pitchAngle];
      *(_QWORD *)v104 = 0;
      v104[8] = 1;
      *(double *)&v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_confidence] = (double)v80;
      v105 = &v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_printConfidence];
      *(_QWORD *)v105 = 0;
      v105[8] = 1;
      v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_newTrack] = 1;
      v106 = &v101[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_modality];
      *(_QWORD *)v106 = v83;
      v106[8] = 0;
      v124.receiver = v101;
      v124.super_class = v100;
      v107 = objc_msgSendSuper2(&v124, sel_init);
      MEMORY[0x23B852D78]();
      if (*(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v123[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23A690F3C();
      ++v71;
      sub_23A690F48();
      sub_23A690F30();

      v28 = v112;
    }
    while (v120 != v71);
  }
LABEL_198:
  swift_bridgeObjectRelease();
  return v123[0];
}

uint64_t sub_23A5D6A5C()
{
  return sub_23A5D6DF4((uint64_t)&unk_250B748F8, (uint64_t)&unk_25699EBB0, &OBJC_IVAR___ObjectTrackingAgent__selectedFaceIDs);
}

uint64_t sub_23A5D6A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F0C0);
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5D6ADC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[7] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[8] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D6B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D6C10;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D6C10()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D6C64()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D6CA0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = v0[3];
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (v2)
  {
    v4 = v0[5];
    v3 = v0[6];
    v5 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, (uint64_t)v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__selectedFaceIDs, v5);
    v6 = v2;
    sub_23A6909CC();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

    v7 = v0[2];
    v1 = v0[3];
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  v8 = v0[7];
  v9 = *(id *)(v1 + OBJC_IVAR___ObjectTrackingAgent__selectedIDsLock);
  objc_msgSend(v9, sel_lock);
  *(_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent__selectedFaceIDs) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_unlock);
  swift_bridgeObjectRelease();

  v0[10] = *(_QWORD *)(v1 + v8);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D6DD8()
{
  return sub_23A5D6DF4((uint64_t)&unk_250B74920, (uint64_t)&unk_25699EBC0, &OBJC_IVAR___ObjectTrackingAgent__selectedBodyIDs);
}

uint64_t sub_23A5D6DF4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v3;
  v11 = v3;
  sub_23A5D120C((uint64_t)v8, a2, (uint64_t)v10);
  swift_release();
  v12 = *(id *)&v11[OBJC_IVAR___ObjectTrackingAgent__selectedIDsLock];
  objc_msgSend(v12, sel_lock);
  v13 = *(_QWORD *)&v11[*a3];
  swift_bridgeObjectRetain();
  objc_msgSend(v12, sel_unlock);

  return v13;
}

uint64_t sub_23A5D6F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F0C0);
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5D6F6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[7] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[8] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D6FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D70A0;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D70A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D70F4()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D7130()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = v0[3];
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (v2)
  {
    v4 = v0[5];
    v3 = v0[6];
    v5 = v0[4];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, (uint64_t)v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__selectedBodyIDs, v5);
    v6 = v2;
    sub_23A6909CC();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

    v7 = v0[2];
    v1 = v0[3];
  }
  else
  {
    v7 = MEMORY[0x24BEE4AF8];
  }
  v8 = v0[7];
  v9 = *(id *)(v1 + OBJC_IVAR___ObjectTrackingAgent__selectedIDsLock);
  objc_msgSend(v9, sel_lock);
  *(_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent__selectedBodyIDs) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_unlock);
  swift_bridgeObjectRelease();

  v0[10] = *(_QWORD *)(v1 + v8);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D725C()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23A5D72AC(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_23A690F00();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23A5D72FC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[OBJC_IVAR___ObjectTrackingAgent_expectingDisconnect] = 1;
  v4 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v0;
  v6 = v0;
  sub_23A5D120C((uint64_t)v3, (uint64_t)&unk_25699EBD0, (uint64_t)v5);
  return swift_release();
}

uint64_t sub_23A5D73C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v5 = sub_23A690D14();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5D7428()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[6] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[7] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D747C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 64) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D755C;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D755C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D75B0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D75EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD *v11;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v0[9] = OBJC_IVAR___ObjectTrackingAgent_tracker;
  if (*(_QWORD *)(v1 + v2))
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[4] + 16))(v0[5], v1 + OBJC_IVAR___ObjectTrackingAgent_logger, v0[3]);
    v3 = sub_23A690CFC();
    v4 = sub_23A691044();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_23A5B0000, v3, v4, "calling tracker.stopTracking()", v5, 2u);
      MEMORY[0x23B853BD0](v5, -1, -1);
    }
    v7 = v0[4];
    v6 = v0[5];
    v8 = v0[3];

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = *(void **)(v1 + v2);
    if (v9)
    {
      v10 = v9;
      sub_23A62101C();

    }
    v11 = (_QWORD *)swift_task_alloc();
    v0[10] = v11;
    *v11 = v0;
    v11[1] = sub_23A5D7788;
    return sub_23A5ECC5C();
  }
  else
  {
    *(_QWORD *)(v1 + v2) = 0;
    v13 = OBJC_IVAR___ObjectTrackingAgent_manager;
    v14 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_manager);
    if (v14)
    {
      v15 = v14;
      DockCoreManager.disconnect()();

      v14 = *(void **)(v1 + v13);
    }
    v16 = v0[6];
    v17 = v0[2];
    *(_QWORD *)(v1 + v13) = 0;

    v0[11] = *(_QWORD *)(v17 + v16);
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_23A5D7788()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D77DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[9];
  v2 = v0[2];
  v3 = *(void **)(v2 + v1);
  if (v3)
  {
    v4 = v3;
    sub_23A5F4B18(0);

    v3 = *(void **)(v2 + v1);
    v1 = v0[9];
    v2 = v0[2];
  }
  *(_QWORD *)(v2 + v1) = 0;

  v5 = OBJC_IVAR___ObjectTrackingAgent_manager;
  v6 = *(void **)(v2 + OBJC_IVAR___ObjectTrackingAgent_manager);
  if (v6)
  {
    v7 = v6;
    DockCoreManager.disconnect()();

    v6 = *(void **)(v2 + v5);
  }
  v8 = v0[6];
  v9 = v0[2];
  *(_QWORD *)(v2 + v5) = 0;

  v0[11] = *(_QWORD *)(v9 + v8);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D7894()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D79B4()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR___ObjectTrackingAgent_lastFaces);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EBD8);
  sub_23A690F0C();

  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23A5D7AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23A5D7ADC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[4];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[5] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[6] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D7B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D7C10;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D7C10()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D7C64()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D7CA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = v0[4];
  v2 = v0[5];
  v3 = (void *)v0[2];
  v4 = (void *)v0[3];
  v5 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_lastImage);
  *(_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent_lastImage) = v3;
  v6 = v3;

  v7 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_lastFaces);
  *(_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent_lastFaces) = v4;
  v8 = v4;

  v0[8] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D7D24()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D7E94(void *a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  id v10;
  _QWORD *v11;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a2;
  v10 = a4;
  v11 = (_QWORD *)swift_task_alloc();
  v4[6] = v11;
  *v11 = v4;
  v11[1] = sub_23A5D7F38;
  v11[3] = v9;
  v11[4] = v10;
  v11[2] = v8;
  return swift_task_switch();
}

uint64_t sub_23A5D7F38()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  void *v3;
  void *v4;
  uint64_t v6;

  v1 = *(void (***)(_QWORD))(*v0 + 40);
  v3 = *(void **)(*v0 + 24);
  v2 = *(void **)(*v0 + 32);
  v4 = *(void **)(*v0 + 16);
  v6 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

BOOL sub_23A5D7FB0()
{
  uint64_t v0;
  id v2;
  char *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  char *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;

  if (*(_QWORD *)(v0 + OBJC_IVAR___ObjectTrackingAgent_tracker))
    return 1;
  v2 = objc_allocWithZone((Class)type metadata accessor for DeviceNotification());
  v3 = DeviceNotification.init(name:)(0xD000000000000022, 0x800000023A69CBC0);
  v4 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
  v5 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock];
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = &v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state];
  notify_get_state(*(_DWORD *)&v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token], (uint64_t *)&v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state]);
  v7 = *(_QWORD *)v6;
  v8 = *(os_unfair_lock_s **)&v3[v4];
  swift_retain();
  os_unfair_lock_unlock(v8 + 4);

  swift_release();
  return v7 != 0;
}

uint64_t sub_23A5D80CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23A5D80E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[3] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[4] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D8138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 40) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D8218;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D8218()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D826C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D82A8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  char v7;
  id v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(char **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (v2)
  {
    v3 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
    v4 = *(void **)&v2[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore];
    v5 = v2;
    v6 = v4;
    sub_23A691104();

    v7 = v5[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled];
    v8 = *(id *)&v2[v3];
    sub_23A691110();

    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v7 = 0;
  }
  *(_BYTE *)(v0 + 56) = v7;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + *(_QWORD *)(v0 + 24));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D8488(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_23A5F288C;
  v5[2] = v4;
  return swift_task_switch();
}

uint64_t sub_23A5D8500(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = v2;
  *(double *)(v3 + 16) = a1;
  *(double *)(v3 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23A5D851C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[4];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[5] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[6] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D8570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D8650;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D8650()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D86A4()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D86E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  *(_QWORD *)(v0 + 64) = v2;
  if (v2)
  {
    v2;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_23A5D8784;
    return sub_23A6222A0(*(double *)(v0 + 16), *(double *)(v0 + 24));
  }
  else
  {
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + *(_QWORD *)(v0 + 40));
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_23A5D8784()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D87E8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(*(_QWORD *)(v0 + 32) + *(_QWORD *)(v0 + 40));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D8838()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D8874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D88C4()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D8908()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D8A74(const void *a1, void *a2, double a3, double a4)
{
  _QWORD *v4;
  id v8;
  uint64_t v9;

  v4[2] = a2;
  v4[3] = _Block_copy(a1);
  v8 = a2;
  v9 = swift_task_alloc();
  v4[4] = v9;
  *(_QWORD *)v9 = v4;
  *(_QWORD *)(v9 + 8) = sub_23A5D8B00;
  *(_QWORD *)(v9 + 32) = v8;
  *(double *)(v9 + 16) = a3;
  *(double *)(v9 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_23A5D8B00()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_23A6905C4();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23A5D8BA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23A5D8BB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[4] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[5] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D8C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 48) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D8CEC;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D8CEC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D8D40()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D8D7C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  v0[7] = (uint64_t)v2;
  if (v2)
  {
    v2;
    v3 = (_QWORD *)swift_task_alloc();
    v0[8] = (uint64_t)v3;
    *v3 = v0;
    v3[1] = sub_23A5D8E24;
    return sub_23A62255C(v0[2]);
  }
  else
  {
    v0[10] = *(_QWORD *)(v1 + v0[4]);
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_23A5D8E24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D8E88()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 32));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D8ED8()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D8F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5D8F64()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D8FA8()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D9114(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_23A690F18();
  v3[4] = v5;
  v6 = a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_23A5D91B4;
  v7[2] = v5;
  v7[3] = v6;
  return swift_task_switch();
}

uint64_t sub_23A5D91B4()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_23A6905C4();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23A5D925C(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 48) = v4;
  *(double *)(v5 + 32) = a3;
  *(double *)(v5 + 40) = a4;
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5D92C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[6];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[8] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[9] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D9314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 80) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D93F4;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D93F4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D9448()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D9484()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v11;
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_BYTE **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    v6 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    v12 = *(_OWORD *)(v0 + 16);
    v2[OBJC_IVAR____TtC11DockKitCore13TrackingStand_userOverridedAspectRatio] = 1;
    v7 = sub_23A690F9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    *(_QWORD *)(v8 + 32) = v2;
    *(_OWORD *)(v8 + 40) = v12;
    *(_QWORD *)(v8 + 56) = v6;
    *(_QWORD *)(v8 + 64) = v5;
    v9 = v2;
    sub_23A5D120C(v3, (uint64_t)&unk_25699EC08, v8);
    swift_release();

    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v1 + v4);
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    sub_23A5C9938();
    swift_allocError();
    *(_QWORD *)v11 = 0xD000000000000015;
    *(_QWORD *)(v11 + 8) = 0x800000023A69CBF0;
    *(_BYTE *)(v11 + 16) = 9;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A5D960C()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5D9798(const void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  _QWORD *v6;
  _QWORD *v12;

  v6[2] = a2;
  v6[3] = _Block_copy(a1);
  a2;
  v12 = (_QWORD *)swift_task_alloc();
  v6[4] = v12;
  *v12 = v6;
  v12[1] = sub_23A5F28D0;
  return sub_23A5D925C(a3, a4, a5, a6);
}

uint64_t sub_23A5D9828(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(double, double, double, double);

  v11 = (uint64_t (*)(double, double, double, double))((char *)&dword_25699EC18 + dword_25699EC18);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23A5D98B0;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_23A5D98B0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A5D9A3C(const void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(double, double, double, double);

  *(_QWORD *)(v5 + 16) = _Block_copy(a1);
  v12 = (uint64_t (*)(double, double, double, double))((char *)&dword_25699EC18 + dword_25699EC18);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v10;
  *v10 = v5;
  v10[1] = sub_23A5D9ACC;
  return v12(a2, a3, a4, a5);
}

uint64_t sub_23A5D9ACC()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 16);
  if (v0)
  {
    v4 = (void *)sub_23A6905C4();

    (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v3 + 16))(*(_QWORD *)(v2 + 16), 0);
  }
  _Block_release(*(const void **)(v2 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A5D9B64(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 112) = v1;
  *(_BYTE *)(v2 + 660) = a1;
  v3 = sub_23A690D14();
  *(_QWORD *)(v2 + 120) = v3;
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 136) = swift_task_alloc();
  *(_QWORD *)(v2 + 144) = swift_task_alloc();
  *(_QWORD *)(v2 + 152) = swift_task_alloc();
  *(_QWORD *)(v2 + 160) = swift_task_alloc();
  *(_QWORD *)(v2 + 168) = swift_task_alloc();
  *(_QWORD *)(v2 + 176) = swift_task_alloc();
  *(_QWORD *)(v2 + 184) = swift_task_alloc();
  *(_QWORD *)(v2 + 192) = swift_task_alloc();
  *(_QWORD *)(v2 + 200) = swift_task_alloc();
  *(_QWORD *)(v2 + 208) = swift_task_alloc();
  *(_QWORD *)(v2 + 216) = swift_task_alloc();
  *(_QWORD *)(v2 + 224) = swift_task_alloc();
  *(_QWORD *)(v2 + 232) = swift_task_alloc();
  *(_QWORD *)(v2 + 240) = swift_task_alloc();
  *(_QWORD *)(v2 + 248) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5D9C74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[14];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[32] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[33] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5D9CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 272) = v5;
      *v5 = v0;
      v5[1] = sub_23A5D9DA8;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5D9DA8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5D9DFC()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5D9E38()
{
  _QWORD *v0;
  _QWORD *v1;
  _BYTE *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(uint64_t, _BYTE *, uint64_t);
  _BYTE *v10;
  NSObject *v11;
  os_log_type_t v12;
  char *v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, _BYTE *, uint64_t);
  uint64_t v45;

  v1 = v0;
  v3 = v0 + 14;
  v2 = (_BYTE *)v0[14];
  v4 = v3[17];
  v5 = v3[1];
  v6 = v3[2];
  v2[OBJC_IVAR___ObjectTrackingAgent_expectingDisconnect] = 0;
  v7 = OBJC_IVAR___ObjectTrackingAgent_logger;
  v3[21] = OBJC_IVAR___ObjectTrackingAgent_logger;
  v8 = &v2[v7];
  v9 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 16);
  v3[22] = (uint64_t)v9;
  v9(v4, &v2[v7], v5);
  v10 = v2;
  v11 = sub_23A690CFC();
  v12 = sub_23A691044();
  if (os_log_type_enabled(v11, v12))
  {
    v41 = v1[16];
    v13 = (char *)v1[14];
    v42 = v1[15];
    v43 = v1[31];
    v14 = (uint8_t *)swift_slowAlloc();
    v44 = v9;
    v45 = swift_slowAlloc();
    v15 = v45;
    *(_DWORD *)v14 = 136315138;
    v16 = *(_QWORD *)&v13[OBJC_IVAR___ObjectTrackingAgent_appID + 8];
    v1[7] = *(_QWORD *)&v13[OBJC_IVAR___ObjectTrackingAgent_appID];
    v1[8] = v16;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2690);
    v17 = sub_23A690E58();
    v1[13] = sub_23A5EEB40(v17, v18, &v45);
    sub_23A6911D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A5B0000, v11, v12, "setupAgent: appID %s", v14, 0xCu);
    swift_arrayDestroy();
    v19 = v15;
    v9 = v44;
    MEMORY[0x23B853BD0](v19, -1, -1);
    MEMORY[0x23B853BD0](v14, -1, -1);

    v20 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v20(v43, v42);
  }
  else
  {
    v21 = v1[31];
    v23 = v1[15];
    v22 = v1[16];
    v24 = (void *)v1[14];

    v20 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v20(v21, v23);
  }
  v25 = v1[14];
  v26 = OBJC_IVAR___ObjectTrackingAgent_manager;
  v1[37] = v20;
  v1[38] = v26;
  if (!*(_QWORD *)(v25 + v26))
  {
    v27 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DockCoreManager()), sel_init);
    v28 = *(void **)(v25 + v26);
    *(_QWORD *)(v25 + v26) = v27;

    v29 = *(_QWORD *)(v25 + v26);
    v25 = *v3;
    if (v29)
    {
      swift_unknownObjectWeakAssign();
      v25 = *v3;
    }
  }
  v30 = OBJC_IVAR___ObjectTrackingAgent_setupOngoing;
  v1[39] = OBJC_IVAR___ObjectTrackingAgent_setupOngoing;
  if ((*(_BYTE *)(v25 + v30) & 1) != 0
    || (v31 = OBJC_IVAR___ObjectTrackingAgent_setupComplete,
        v1[40] = OBJC_IVAR___ObjectTrackingAgent_setupComplete,
        *(_BYTE *)(v25 + v31) == 1))
  {
    v9(v1[30], v8, v1[15]);
    v32 = sub_23A690CFC();
    v33 = sub_23A691044();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_23A5B0000, v32, v33, "setup in process or already done, not duplicating", v34, 2u);
      MEMORY[0x23B853BD0](v34, -1, -1);
    }
    v35 = v1[32];
    v36 = v1[30];
    v38 = v1[14];
    v37 = v1[15];

    v20(v36, v37);
    v1[41] = *(_QWORD *)(v38 + v35);
    swift_retain();
  }
  else
  {
    v39 = v1[32];
    *(_BYTE *)(v25 + v30) = 1;
    v1[42] = *(_QWORD *)(v25 + v39);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5DA1C0()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DA2C0()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DA304()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "setting up agent - register for darwin notifications", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 120);

  v4(v6, v7);
  *(_QWORD *)(v0 + 344) = *(_QWORD *)(v8 + v5);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5DA3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 352) = v5;
      *v5 = v0;
      v5[1] = sub_23A5DA4D8;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5DA4D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DA52C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DA568()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0[14];
  v2 = *(void **)(v1 + v0[38]);
  if (v2)
  {
    v3 = v2;
    DockCoreManager.getStateEvents(delegate:syncWithDaemon:)(v1, 0);
    v0[45] = 0;

    v1 = v0[14];
  }
  v0[46] = 0;
  v0[47] = *(_QWORD *)(v1 + v0[32]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DA620()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DA664()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "registered for state events", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }

  v4 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 224);
  *(_QWORD *)(v0 + 384) = v4;
  v6 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD))(v0 + 296))(v5, *(_QWORD *)(v0 + 120));
  v7 = OBJC_IVAR___ObjectTrackingAgent_appID;
  *(_QWORD *)(v0 + 392) = OBJC_IVAR___ObjectTrackingAgent_appID;
  if (*(_QWORD *)(v6 + v7 + 8))
  {
    *(_QWORD *)(v0 + 400) = *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 256));
  }
  else
  {
    *(_QWORD *)(v0 + 440) = v4;
    *(_QWORD *)(v0 + 448) = *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 256));
  }
  swift_retain();
  return swift_task_switch();
}

void sub_23A5DA794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 408) = v5;
      *v5 = v0;
      v5[1] = sub_23A5DA874;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5DA874()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DA8C8()
{
  swift_release();
  return swift_task_switch();
}

void sub_23A5DA904()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[14];
  v2 = *(void **)(v1 + v0[38]);
  if (!v2)
  {
    v10 = v0[48];
    goto LABEL_7;
  }
  v3 = (uint64_t *)(v1 + v0[49]);
  v4 = v3[1];
  if (v4)
  {
    v5 = v0[48];
    v6 = *v3;
    v7 = v2;
    swift_bridgeObjectRetain();
    DockCoreManager.monitorSystemTrackingState(delegate:appID:)(v1, v6, v4);
    v0[52] = v5;
    if (v5)
    {
      v8 = v0[32];
      v9 = v0[14];
      swift_bridgeObjectRelease();

      v0[81] = *(_QWORD *)(v9 + v8);
      swift_retain();
LABEL_8:
      swift_task_switch();
      return;
    }
    swift_bridgeObjectRelease();

    v10 = 0;
    v1 = v0[14];
LABEL_7:
    v0[53] = v10;
    v0[54] = *(_QWORD *)(v1 + v0[32]);
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_23A5DAA04()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DAA48()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "registered for tracking config updates", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }

  v4 = *(_QWORD *)(v0 + 424);
  (*(void (**)(_QWORD, _QWORD))(v0 + 296))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 120));
  *(_QWORD *)(v0 + 440) = v4;
  *(_QWORD *)(v0 + 448) = *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 256));
  swift_retain();
  return swift_task_switch();
}

void sub_23A5DAB38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 456) = v5;
      *v5 = v0;
      v5[1] = sub_23A5DAC18;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5DAC18()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DAC6C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DACA8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 112);
  if (*(_QWORD *)(v1 + *(_QWORD *)(v0 + 304)))
  {
    *(_QWORD *)(v0 + 472) = *(_QWORD *)(v1 + *(_QWORD *)(v0 + 256));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 208), v1 + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
    v2 = sub_23A690CFC();
    v3 = sub_23A691038();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_23A5B0000, v2, v3, "manager is nil, aborting setupAgent", v4, 2u);
      MEMORY[0x23B853BD0](v4, -1, -1);
    }
    v5 = *(_QWORD *)(v0 + 312);
    v6 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);

    v6(v8, v9);
    *(_BYTE *)(v10 + v5) = 0;
    *(_QWORD *)(v0 + 464) = *(_QWORD *)(v10 + v7);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5DADDC()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DAEDC()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DAF20()
{
  uint64_t v0;
  int v1;
  id v2;
  char *v3;
  char *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  char *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  int v30;

  v1 = *(unsigned __int8 *)(v0 + 660);
  v2 = objc_allocWithZone((Class)type metadata accessor for DeviceNotification());
  v3 = DeviceNotification.init(name:)(0xD000000000000022, 0x800000023A69CBC0);
  v4 = v3;
  *(_QWORD *)(v0 + 480) = v3;
  if (v1 != 1)
    goto LABEL_3;
  v5 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
  v6 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock];
  swift_retain();
  os_unfair_lock_lock(v6 + 4);
  swift_release();
  v7 = &v4[OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state];
  notify_get_state(*(_DWORD *)&v4[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token], (uint64_t *)&v4[OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state]);
  v8 = *(_QWORD *)v7;
  v9 = *(os_unfair_lock_s **)&v4[v5];
  swift_retain();
  os_unfair_lock_unlock(v9 + 4);
  swift_release();
  if (!v8)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
    v24 = sub_23A690CFC();
    v25 = sub_23A691044();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_23A5B0000, v24, v25, "notification state 0, no accessories. not spinning up XPC", v26, 2u);
      MEMORY[0x23B853BD0](v26, -1, -1);
    }
    v27 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    v28 = *(_QWORD *)(v0 + 152);
    v29 = *(_QWORD *)(v0 + 120);

    v27(v28, v29);
    *(_QWORD *)(v0 + 616) = *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 256));
    swift_retain();
    return swift_task_switch();
  }
  else
  {
LABEL_3:
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
    v10 = v4;
    v11 = sub_23A690CFC();
    v12 = sub_23A691044();
    if (os_log_type_enabled(v11, v12))
    {
      v30 = *(unsigned __int8 *)(v0 + 660);
      v13 = swift_slowAlloc();
      *(_DWORD *)v13 = 134218240;
      v14 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
      v15 = *(os_unfair_lock_s **)((char *)&v10->isa + OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock);
      swift_retain();
      os_unfair_lock_lock(v15 + 4);
      swift_release();
      v16 = (uint64_t *)((char *)v10 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state);
      notify_get_state(*(_DWORD *)((char *)&v10->isa + OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token), (uint64_t *)((char *)v10 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state));
      v17 = *v16;
      v18 = *(os_unfair_lock_s **)((char *)&v10->isa + v14);
      swift_retain();
      os_unfair_lock_unlock(v18 + 4);
      swift_release();
      *(_QWORD *)(v0 + 72) = v17;
      sub_23A6911D0();

      *(_WORD *)(v13 + 12) = 1024;
      *(_DWORD *)(v0 + 656) = v30;
      sub_23A6911D0();
      _os_log_impl(&dword_23A5B0000, v11, v12, "reported %llu connected devices, trust %{BOOL}d, running XPC to figure out what is connected", (uint8_t *)v13, 0x12u);
      MEMORY[0x23B853BD0](v13, -1, -1);
    }
    else
    {

      v11 = v10;
    }
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    v20 = *(_QWORD *)(v0 + 200);
    v21 = *(_QWORD *)(v0 + 120);

    v19(v20, v21);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 488) = v22;
    *v22 = v0;
    v22[1] = sub_23A5DB2AC;
    return sub_23A5DEBE0();
  }
}

uint64_t sub_23A5DB2AC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 661) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DB308()
{
  uint64_t v0;
  int v1;
  char *v2;
  _QWORD *v3;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  char *v8;
  char *v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;

  v1 = *(unsigned __int8 *)(v0 + 661);
  *(_BYTE *)(*(_QWORD *)(v0 + 112) + OBJC_IVAR___ObjectTrackingAgent__trackingEnabled) = v1;
  v2 = *(char **)(v0 + 112);
  if (v1 == 1 && *(_QWORD *)&v2[*(_QWORD *)(v0 + 304)])
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 496) = v3;
    *v3 = v0;
    v3[1] = sub_23A5DB614;
    return sub_23A5DCFB0();
  }
  else
  {
    (*(void (**)(_QWORD, char *, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 192), &v2[*(_QWORD *)(v0 + 280)], *(_QWORD *)(v0 + 120));
    v5 = v2;
    v6 = sub_23A690CFC();
    v7 = sub_23A691038();
    if (os_log_type_enabled(v6, v7))
    {
      v19 = *(void **)(v0 + 480);
      v21 = *(_QWORD *)(v0 + 192);
      v22 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
      v8 = *(char **)(v0 + 112);
      v20 = *(_QWORD *)(v0 + 120);
      v9 = &v8[*(_QWORD *)(v0 + 392)];
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      *(_DWORD *)v10 = 136315138;
      v23 = v11;
      v12 = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v0 + 40) = *(_QWORD *)v9;
      *(_QWORD *)(v0 + 48) = v12;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2690);
      v13 = sub_23A690E58();
      *(_QWORD *)(v0 + 96) = sub_23A5EEB40(v13, v14, &v23);
      sub_23A6911D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A5B0000, v6, v7, "App %s disabled system tracking, don't track", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v11, -1, -1);
      MEMORY[0x23B853BD0](v10, -1, -1);

      v22(v21, v20);
    }
    else
    {
      v15 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
      v16 = *(_QWORD *)(v0 + 192);
      v18 = *(void **)(v0 + 112);
      v17 = *(_QWORD *)(v0 + 120);

      v15(v16, v17);
    }
    *(_BYTE *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 312)) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A5DB614()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 504) = v2;
  *v2 = v4;
  v2[1] = sub_23A5DB678;
  return sub_23A5DF558();
}

uint64_t sub_23A5DB678(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 512) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_23A5DB6D4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  char *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 112);
  if (*(_QWORD *)(v1 + *(_QWORD *)(v0 + 304)))
  {
    if (*(_QWORD *)(v0 + 512))
    {
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 176), v1 + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
      v2 = sub_23A690CFC();
      v3 = sub_23A691044();
      if (os_log_type_enabled(v2, v3))
      {
        v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v4 = 0;
        _os_log_impl(&dword_23A5B0000, v2, v3, "Updating cached list of connected", v4, 2u);
        MEMORY[0x23B853BD0](v4, -1, -1);
      }
      v6 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
      v5 = *(_QWORD *)(v0 + 304);
      v7 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 112);
      v8 = *(_QWORD *)(v0 + 120);

      v6(v7, v8);
      v10 = *(char **)(v9 + v5);
      if (v10)
      {
        v11 = *(void **)(v0 + 512);
        v12 = *(_QWORD *)(v0 + 440);
        v13 = *(os_unfair_lock_s **)&v10[OBJC_IVAR____TtC11DockKitCore15DockCoreManager_allocatedLock];
        v14 = v10;
        v15 = v11;
        swift_retain();
        os_unfair_lock_lock(v13 + 5);
        sub_23A6535C4((uint64_t)&v13[4], (uint64_t)v14, v11);
        os_unfair_lock_unlock(v13 + 5);
        if (v12)
          return;
        swift_release();

      }
      *(_QWORD *)(v0 + 520) = *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 256));
      swift_retain();
    }
    else
    {
      *(_QWORD *)(v0 + 616) = *(_QWORD *)(v1 + *(_QWORD *)(v0 + 256));
      swift_retain();
    }
    swift_task_switch();
    return;
  }
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 184), v1 + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
  v16 = sub_23A690CFC();
  v17 = sub_23A691038();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_23A5B0000, v16, v17, "manager is nil, aborting setupAgent, ignoring connected tracker", v18, 2u);
    MEMORY[0x23B853BD0](v18, -1, -1);
    v19 = *(NSObject **)(v0 + 480);
  }
  else
  {
    v19 = v16;
    v16 = *(NSObject **)(v0 + 480);
  }
  v20 = *(void **)(v0 + 512);
  v21 = *(_QWORD *)(v0 + 312);
  v22 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  v23 = *(_QWORD *)(v0 + 184);
  v25 = *(_QWORD *)(v0 + 112);
  v24 = *(_QWORD *)(v0 + 120);

  v22(v23, v24);
  *(_BYTE *)(v25 + v21) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(void))(v0 + 8))();
}

void sub_23A5DBA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 528) = v5;
      *v5 = v0;
      v5[1] = sub_23A5DBB10;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5DBB10()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DBB68()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DBBA4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;

  v1 = (void *)v0[64];
  v2 = v0[14];
  v3 = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v4 = *(void **)(v2 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  *(_QWORD *)(v2 + OBJC_IVAR___ObjectTrackingAgent_tracker) = v1;
  v5 = v1;

  v6 = *(_QWORD *)(v2 + v3);
  if (v6)
    *(_BYTE *)(v6 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_debugEnabled) = *(_BYTE *)(v0[14]
                                                                                          + OBJC_IVAR___ObjectTrackingAgent_debugEnabled);
  v0[67] = *(_QWORD *)(v0[14] + v0[32]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DBC40()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23A6763E8();
  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 544) = v1;
  *v1 = v0;
  v1[1] = sub_23A5DBC98;
  return sub_23A5DFE84();
}

uint64_t sub_23A5DBC98(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 32) = a2;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = a1;
  *(_BYTE *)(v3 + 662) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DBCF4()
{
  uint64_t v0;
  void (*v1)(_QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 288);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 280);
  if ((*(_BYTE *)(v0 + 662) & 1) != 0 || *(_QWORD *)(v0 + 24))
  {
    v1(*(_QWORD *)(v0 + 160), v3, v2);
    v18 = sub_23A690CFC();
    v19 = sub_23A691044();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_23A5B0000, v18, v19, "tracking button on, enabling tracking for stand", v20, 2u);
      MEMORY[0x23B853BD0](v20, -1, -1);
    }
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    v22 = *(_QWORD *)(v0 + 256);
    v23 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 112);
    v24 = *(_QWORD *)(v0 + 120);

    v21(v23, v24);
    *(_QWORD *)(v0 + 576) = *(_QWORD *)(v25 + v22);
    swift_retain();
  }
  else
  {
    v1(*(_QWORD *)(v0 + 168), v3, v2);
    v4 = sub_23A690CFC();
    v5 = sub_23A691044();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_23A5B0000, v4, v5, "tracking button off, disabling tracking for stand", v6, 2u);
      MEMORY[0x23B853BD0](v6, -1, -1);
    }
    v7 = *(char **)(v0 + 512);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    v9 = *(_QWORD *)(v0 + 256);
    v10 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 120);

    v8(v10, v11);
    v13 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
    v14 = *(void **)&v7[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore];
    v15 = v7;
    v16 = v14;
    sub_23A691104();

    v15[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled] = 0;
    v17 = *(id *)&v7[v13];
    sub_23A691110();

    *(_QWORD *)(v0 + 552) = *(_QWORD *)(v12 + v9);
    swift_retain();
  }
  return swift_task_switch();
}

void sub_23A5DBEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 560) = v5;
      *v5 = v0;
      v5[1] = sub_23A5DBFDC;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5DBFDC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DC034()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DC070()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  os_unfair_lock_s *v3;
  char *v4;

  v1 = v0[14];
  v2 = *(char **)(v1 + v0[38]);
  if (v2)
  {
    v3 = *(os_unfair_lock_s **)&v2[OBJC_IVAR____TtC11DockKitCore15DockCoreManager_allocatedLock];
    v4 = v2;
    swift_retain();
    os_unfair_lock_lock(v3 + 5);
    *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore15DockCoreManager__trackingButtonState] = 0;
    os_unfair_lock_unlock(v3 + 5);
    swift_release();

    v1 = v0[14];
  }
  v0[71] = *(_QWORD *)(v1 + v0[32]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DC120()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DC164()
{
  uint64_t v0;
  id v1;
  id v2;
  _QWORD *v3;

  v1 = *(id *)(v0 + 512);
  sub_23A62101C();

  v2 = v1;
  sub_23A5F4B18(1);

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 608) = v3;
  *v3 = v0;
  v3[1] = sub_23A5DC55C;
  return sub_23A5DDBFC();
}

void sub_23A5DC1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 584) = v5;
      *v5 = v0;
      v5[1] = sub_23A5DC2B8;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5DC2B8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DC310()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DC34C()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  os_unfair_lock_s *v3;
  char *v4;

  v1 = v0[14];
  v2 = *(char **)(v1 + v0[38]);
  if (v2)
  {
    v3 = *(os_unfair_lock_s **)&v2[OBJC_IVAR____TtC11DockKitCore15DockCoreManager_allocatedLock];
    v4 = v2;
    swift_retain();
    os_unfair_lock_lock(v3 + 5);
    *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore15DockCoreManager__trackingButtonState] = 1;
    os_unfair_lock_unlock(v3 + 5);
    swift_release();

    v1 = v0[14];
  }
  v0[74] = *(_QWORD *)(v1 + v0[32]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DC400()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DC444()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  id v5;
  id v6;
  _QWORD *v7;

  v1 = *(char **)(v0 + 512);
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  v3 = *(void **)&v1[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore];
  v4 = v1;
  v5 = v3;
  sub_23A691104();

  v4[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled] = 1;
  v6 = *(id *)&v1[v2];
  sub_23A691110();

  v4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 600) = v7;
  *v7 = v0;
  v7[1] = sub_23A5DC4F0;
  return sub_23A620534();
}

uint64_t sub_23A5DC4F0()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 608) = v2;
  *v2 = v4;
  v2[1] = sub_23A5DC55C;
  return sub_23A5DDBFC();
}

uint64_t sub_23A5DC55C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DC5B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(void);
  char *v7;

  v1 = v0[14] + OBJC_IVAR___ObjectTrackingAgent_delegate;
  v2 = MEMORY[0x23B853C6C](v1);
  swift_unknownObjectRelease();
  if (v2)
  {
    v3 = MEMORY[0x23B853C6C](v1);
    v4 = (char *)v0[64];
    if (v3)
    {
      v5 = *(_QWORD *)(v1 + 8);
      swift_getObjectType();
      v6 = *(void (**)(void))(v5 + 8);
      v7 = (char *)*(id *)&v4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
      v6();

      swift_unknownObjectRelease();
      v4 = v7;
    }
  }
  else
  {
    v4 = (char *)v0[64];
  }

  v0[77] = *(_QWORD *)(v0[14] + v0[32]);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5DC694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 616);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 624) = v5;
      *v5 = v0;
      v5[1] = sub_23A5DC774;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5DC774()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DC7CC()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DC808()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[40];
  v2 = v0[32];
  v3 = v0[14];
  *(_BYTE *)(v3 + v0[39]) = 0;
  *(_BYTE *)(v3 + v1) = 1;
  v0[79] = *(_QWORD *)(v3 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DC864()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DC8A8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DC9A0()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DC9E4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 360);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
  v2 = v1;
  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691038();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 360);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v10;
    sub_23A6911D0();
    *v8 = v10;

    _os_log_impl(&dword_23A5B0000, v4, v5, "failed registering for state events, err %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 360);

  }
  v12 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 384) = 0;
  v13 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, _QWORD))(v0 + 296))(v12, *(_QWORD *)(v0 + 120));
  v14 = OBJC_IVAR___ObjectTrackingAgent_appID;
  *(_QWORD *)(v0 + 392) = OBJC_IVAR___ObjectTrackingAgent_appID;
  if (*(_QWORD *)(v13 + v14 + 8))
  {
    *(_QWORD *)(v0 + 400) = *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 256));
  }
  else
  {
    *(_QWORD *)(v0 + 440) = 0;
    *(_QWORD *)(v0 + 448) = *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 256));
  }
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DCBF8()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DCC3C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 416);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 120));
  v2 = v1;
  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691038();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 416);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v10;
    sub_23A6911D0();
    *v8 = v10;

    _os_log_impl(&dword_23A5B0000, v4, v5, "failed registering for config updates, %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 416);

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 296))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  *(_QWORD *)(v0 + 440) = 0;
  *(_QWORD *)(v0 + 448) = *(_QWORD *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 256));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DCF3C(char a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  _QWORD *v6;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  a3;
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_23A5F28DC;
  return sub_23A5D9B64(a1);
}

uint64_t sub_23A5DCFB0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[12] = v0;
  v2 = sub_23A690D14();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5DD038()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[12];
  v2 = OBJC_IVAR___ObjectTrackingAgent_configStateLock;
  v0[19] = OBJC_IVAR___ObjectTrackingAgent_configStateLock;
  v0[20] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5DD08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v5;
      *v5 = v0;
      v5[1] = sub_23A5DD16C;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5DD16C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DD1C0()
{
  swift_release();
  return swift_task_switch();
}

void sub_23A5DD1FC()
{
  uint64_t v0;
  id *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(_QWORD, char *, uint64_t);
  _BYTE *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = (id *)(v0 + 96);
  v2 = *(_BYTE **)(v0 + 96);
  v3 = OBJC_IVAR___ObjectTrackingAgent_registeredForTrackingConfigChanges;
  *(_QWORD *)(v0 + 176) = OBJC_IVAR___ObjectTrackingAgent_registeredForTrackingConfigChanges;
  if (v2[v3] == 1)
  {
    *(_QWORD *)(v0 + 184) = *(_QWORD *)&v2[*(_QWORD *)(v0 + 152)];
    swift_retain();
LABEL_16:
    swift_task_switch();
    return;
  }
  v4 = (uint64_t *)&v2[OBJC_IVAR___ObjectTrackingAgent_appID];
  v5 = *(_QWORD *)&v2[OBJC_IVAR___ObjectTrackingAgent_appID + 8];
  v6 = OBJC_IVAR___ObjectTrackingAgent_logger;
  *(_QWORD *)(v0 + 192) = OBJC_IVAR___ObjectTrackingAgent_logger;
  v7 = &v2[v6];
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(void (**)(_QWORD, char *, uint64_t))(*(_QWORD *)(v0 + 112) + 16);
  *(_QWORD *)(v0 + 200) = v9;
  if (!v5)
  {
    v9(*(_QWORD *)(v0 + 128), v7, v8);
    v19 = sub_23A690CFC();
    v20 = sub_23A691044();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_23A5B0000, v19, v20, "No appID, can't register for config updates", v21, 2u);
      MEMORY[0x23B853BD0](v21, -1, -1);
    }
    v22 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 104);
    v24 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    goto LABEL_15;
  }
  v9(*(_QWORD *)(v0 + 136), v7, v8);
  v10 = v2;
  v11 = sub_23A690CFC();
  v12 = sub_23A691044();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v35 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = v4[1];
    if (!v15)
      goto LABEL_18;
    v16 = v14;
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 104);
    v34 = *(_QWORD *)(v0 + 136);
    v31 = *(void **)(v0 + 96);
    v17 = *v4;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_23A5EEB40(v17, v15, &v35);
    sub_23A6911D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A5B0000, v11, v12, "Registering for config updates for app %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v16, -1, -1);
    MEMORY[0x23B853BD0](v13, -1, -1);

    v18 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v18(v34, v33);
  }
  else
  {
    v1 = *(id **)(v0 + 136);
    v25 = *(_QWORD *)(v0 + 104);
    v26 = *(_QWORD *)(v0 + 112);

    v18 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v18((uint64_t)v1, v25);
  }
  *(_QWORD *)(v0 + 208) = v18;
  v27 = *(_QWORD *)(v0 + 96);
  v28 = *(void **)(v27 + OBJC_IVAR___ObjectTrackingAgent_manager);
  *(_QWORD *)(v0 + 216) = v28;
  if (!v28)
  {
    *(_BYTE *)(v27 + *(_QWORD *)(v0 + 176)) = 1;
LABEL_15:
    *(_QWORD *)(v0 + 248) = *(_QWORD *)(*(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 152));
    swift_retain();
    goto LABEL_16;
  }
  v29 = v4[1];
  *(_QWORD *)(v0 + 224) = v29;
  if (v29)
  {
    *(_QWORD *)(v0 + 232) = *v4;
    v30 = v28;
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  __break(1u);
LABEL_18:

  __break(1u);
}

uint64_t sub_23A5DD538()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DD57C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 16))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 96) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 104));
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "Already registered for config updates", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DD678()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v2 = (_QWORD *)v0[28];
  v1 = v0[29];
  v3 = v0[27];
  v4 = (void *)v0[12];
  v0[2] = v0;
  v0[3] = sub_23A5DD6FC;
  v5 = swift_continuation_init();
  v6 = v4;
  sub_23A664D44(v6, v1, v2, v3, v5);

  return swift_continuation_await();
}

uint64_t sub_23A5DD6FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 240) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5DD768()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  *(_BYTE *)(*(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 176)) = 1;
  *(_QWORD *)(v0 + 248) = *(_QWORD *)(*(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 152));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DD7D4()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DD838()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  void *v16;

  v1 = *(void **)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 192);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);

  swift_bridgeObjectRelease();
  v2(v4, v6 + v3, v5);
  v7 = v1;
  v8 = v1;
  v9 = sub_23A690CFC();
  v10 = sub_23A691044();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 240);
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    v14 = v11;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v15;
    sub_23A6911D0();
    *v13 = v15;

    _os_log_impl(&dword_23A5B0000, v9, v10, "Failed registering for config updates: %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v13, -1, -1);
    MEMORY[0x23B853BD0](v12, -1, -1);

  }
  else
  {
    v16 = *(void **)(v0 + 240);

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  *(_QWORD *)(v0 + 248) = *(_QWORD *)(*(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 152));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DDB38(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23A5DDB98;
  return sub_23A5DCFB0();
}

uint64_t sub_23A5DDB98()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  uint64_t v4;

  v1 = *(void (***)(_QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_23A5DDBFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[11] = v0;
  v2 = sub_23A690D14();
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5DDC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = OBJC_IVAR___ObjectTrackingAgent_manager;
  if (!*(_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent_manager))
  {
    v6 = (uint64_t *)(v0 + 136);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 136), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 96));
    v7 = sub_23A690CFC();
    v8 = sub_23A691044();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_12;
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "manager is nil, not registering for debug notifications";
LABEL_11:
    _os_log_impl(&dword_23A5B0000, v7, v8, v10, v9, 2u);
    MEMORY[0x23B853BD0](v9, -1, -1);
    goto LABEL_12;
  }
  if ((_s11DockKitCore0aC7ManagerC12debugAllowedSbvgZ_0() & 1) == 0)
  {
    v6 = (uint64_t *)(v0 + 128);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 88) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 96));
    v7 = sub_23A690CFC();
    v8 = sub_23A691044();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_12;
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "debug not allowed, skipping register for debug";
    goto LABEL_11;
  }
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v0 + 144) = v3;
  if (v3)
  {
    v4 = v3;
    return swift_task_switch();
  }
  v6 = (uint64_t *)(v0 + 120);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 96));
  v7 = sub_23A690CFC();
  v8 = sub_23A691044();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "registered for debug notifications";
    goto LABEL_11;
  }
LABEL_12:
  v11 = *v6;
  v12 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DDEB0()
{
  _QWORD *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (char *)v0[18];
  v2 = (void *)v0[11];
  v0[2] = v0;
  v0[3] = sub_23A5DDF20;
  v3 = swift_continuation_init();
  v4 = v2;
  sub_23A665894(v4, v1, v3);

  return swift_continuation_await();
}

uint64_t sub_23A5DDF20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 152) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5DDF8C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 96));
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "registered for debug notifications", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DE090()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v15;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void **)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1 + OBJC_IVAR___ObjectTrackingAgent_logger, v5);
  v6 = v2;
  v7 = v2;
  v8 = sub_23A690CFC();
  v9 = sub_23A691038();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 152);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v10;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v14;
    sub_23A6911D0();
    *v12 = v14;

    _os_log_impl(&dword_23A5B0000, v8, v9, "failed registering for debug notifications: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v12, -1, -1);
    MEMORY[0x23B853BD0](v11, -1, -1);

  }
  else
  {
    v15 = *(void **)(v0 + 152);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DE39C(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23A5F28DC;
  return sub_23A5DDBFC();
}

uint64_t sub_23A5DE3FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[11] = v0;
  v2 = sub_23A690D14();
  v1[12] = v2;
  v1[13] = *(_QWORD *)(v2 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5DE484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = OBJC_IVAR___ObjectTrackingAgent_manager;
  if (!*(_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent_manager))
  {
    v6 = (uint64_t *)(v0 + 136);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 136), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 96));
    v7 = sub_23A690CFC();
    v8 = sub_23A691044();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_12;
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "manager is nil, not de-registering from debug notifications";
LABEL_11:
    _os_log_impl(&dword_23A5B0000, v7, v8, v10, v9, 2u);
    MEMORY[0x23B853BD0](v9, -1, -1);
    goto LABEL_12;
  }
  if ((_s11DockKitCore0aC7ManagerC12debugAllowedSbvgZ_0() & 1) == 0)
  {
    v6 = (uint64_t *)(v0 + 128);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 88) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 96));
    v7 = sub_23A690CFC();
    v8 = sub_23A691044();
    if (!os_log_type_enabled(v7, v8))
      goto LABEL_12;
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "debug not allowed, skipping de-register from debug";
    goto LABEL_11;
  }
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v0 + 144) = v3;
  if (v3)
  {
    v4 = v3;
    return swift_task_switch();
  }
  v6 = (uint64_t *)(v0 + 120);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 96));
  v7 = sub_23A690CFC();
  v8 = sub_23A691044();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    v10 = "stopped debug notifications";
    goto LABEL_11;
  }
LABEL_12:
  v11 = *v6;
  v12 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DE6B0()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0[18];
  v0[2] = v0;
  v0[3] = sub_23A5DE704;
  v2 = swift_continuation_init();
  sub_23A656C78(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_23A5DE704()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 152) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5DE770()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 96));
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "stopped debug notifications", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DE874()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v15;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void **)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1 + OBJC_IVAR___ObjectTrackingAgent_logger, v5);
  v6 = v2;
  v7 = v2;
  v8 = sub_23A690CFC();
  v9 = sub_23A691038();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 152);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v10;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v14;
    sub_23A6911D0();
    *v12 = v14;

    _os_log_impl(&dword_23A5B0000, v8, v9, "failed stopping debug notifications: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v12, -1, -1);
    MEMORY[0x23B853BD0](v11, -1, -1);

  }
  else
  {
    v15 = *(void **)(v0 + 152);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5DEB80(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23A5F28DC;
  return sub_23A5DE3FC();
}

uint64_t sub_23A5DEBE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[14] = v0;
  v2 = sub_23A690D14();
  v1[15] = v2;
  v1[16] = *(_QWORD *)(v2 - 8);
  v1[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5DEC40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[14];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[18] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[19] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5DEC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v5;
      *v5 = v0;
      v5[1] = sub_23A5DED74;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5DED74()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5DEDC8()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DEE04()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;

  v1 = v0[14];
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_manager);
  v0[21] = v2;
  if (v2
    && (v3 = OBJC_IVAR___ObjectTrackingAgent_appID,
        v0[22] = OBJC_IVAR___ObjectTrackingAgent_appID,
        v4 = (_QWORD *)(v1 + v3),
        v5 = v4[1],
        (v0[23] = v5) != 0))
  {
    v0[24] = *v4;
    v6 = v2;
    swift_bridgeObjectRetain();
  }
  else
  {
    v0[26] = *(_QWORD *)(v1 + v0[18]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5DEEA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v2 = v0[23];
  v1 = v0[24];
  v3 = (char *)v0[21];
  v0[7] = v0 + 29;
  v0[2] = v0;
  v0[3] = sub_23A5DEF14;
  v4 = swift_continuation_init();
  sub_23A651D6C(v1, v2, v3, v4);
  return swift_continuation_await();
}

uint64_t sub_23A5DEF14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 200) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_BYTE *)(v1 + 233) = *(_BYTE *)(v1 + 232);
  return swift_task_switch();
}

uint64_t sub_23A5DEF88()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23A5DEFCC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)v0[21];
  v2 = v0[18];
  v3 = v0[14];
  swift_bridgeObjectRelease();

  v0[27] = *(_QWORD *)(v3 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DF030()
{
  uint64_t v0;
  uint64_t v1;

  sub_23A6763E8();
  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 233);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23A5DF078()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  void *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v3 = v0 + 14;
  v2 = (void *)v0[14];
  v4 = (void *)v3[11];
  v5 = (void *)v3[7];
  v7 = v3[2];
  v6 = v3[3];
  v8 = v3[1];
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, (uint64_t)v2 + OBJC_IVAR___ObjectTrackingAgent_logger, v8);
  v9 = v2;
  v10 = v4;
  v11 = v9;
  v12 = v4;
  v13 = sub_23A690CFC();
  v14 = sub_23A691044();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (void *)v1[25];
    v32 = v1[16];
    v16 = (char *)v1[14];
    v33 = v1[15];
    v34 = v1[17];
    v17 = &v16[v1[22]];
    v18 = swift_slowAlloc();
    v30 = (_QWORD *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v35 = v31;
    *(_DWORD *)v18 = 136315394;
    v19 = *((_QWORD *)v17 + 1);
    v1[10] = *(_QWORD *)v17;
    v1[11] = v19;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2690);
    v20 = sub_23A690E58();
    v1[12] = sub_23A5EEB40(v20, v21, &v35);
    sub_23A6911D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v18 + 12) = 2112;
    v22 = v15;
    v23 = _swift_stdlib_bridgeErrorToNSError();
    v1[13] = v23;
    sub_23A6911D0();
    *v30 = v23;

    _os_log_impl(&dword_23A5B0000, v13, v14, "Failed checking if app is enabled: %s, %@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v30, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v31, -1, -1);
    MEMORY[0x23B853BD0](v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  else
  {
    v24 = (void *)v1[25];
    v26 = v1[16];
    v25 = v1[17];
    v28 = (void *)v1[14];
    v27 = v1[15];

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  v1[28] = *(_QWORD *)(v1[14] + v1[18]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5DF35C()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5DF3A0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23A5DF4F8(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23A5F288C;
  return sub_23A5DEBE0();
}

uint64_t sub_23A5DF558()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[13] = v0;
  v2 = sub_23A690D14();
  v1[14] = v2;
  v1[15] = *(_QWORD *)(v2 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5DF5D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_manager);
  *(_QWORD *)(v0 + 152) = v2;
  if (v2)
  {
    v3 = v2;
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 16))(*(_QWORD *)(v0 + 136), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 112));
    v5 = sub_23A690CFC();
    v6 = sub_23A691044();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23A5B0000, v5, v6, "manager is nil, can't get/set tracker", v7, 2u);
      MEMORY[0x23B853BD0](v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_23A5DF708()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0[19];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_23A5DF764;
  v2 = swift_continuation_init();
  sub_23A64E190(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_23A5DF764()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 160) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 168) = *(_QWORD *)(v1 + 80);
  return swift_task_switch();
}

uint64_t sub_23A5DF7D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  char v12;
  void *v13;
  char v14;
  _QWORD *v16;

  v1 = *(void **)(v0 + 168);
  if (v1)
  {
    type metadata accessor for TrackingStand();
    v2 = swift_dynamicCastClass();
    if (v2)
    {
      (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 16))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 104) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 112));
      v3 = v1;
      v4 = sub_23A690CFC();
      v5 = sub_23A691044();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v16 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v6 = 138412290;
        *(_QWORD *)(v0 + 96) = v2;
        v7 = v3;
        sub_23A6911D0();
        *v16 = v2;

        _os_log_impl(&dword_23A5B0000, v4, v5, "daemon connected %@", v6, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
        swift_arrayDestroy();
        MEMORY[0x23B853BD0](v16, -1, -1);
        MEMORY[0x23B853BD0](v6, -1, -1);
      }
      else
      {

      }
      v8 = *(_QWORD *)(v0 + 104);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112));
      if (*(_QWORD *)(v8 + OBJC_IVAR___ObjectTrackingAgent_appID + 8))
      {
        v9 = *(_QWORD *)(v8 + OBJC_IVAR___ObjectTrackingAgent_appID);
        v10 = *(_QWORD *)(v8 + OBJC_IVAR___ObjectTrackingAgent_appID + 8);
      }
      else
      {
        v10 = 0xE700000000000000;
        v9 = 0x6E776F6E6B6E55;
      }
      v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_appID);
      *v11 = v9;
      v11[1] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  else
  {
    v2 = 0;
  }
  if (qword_25699DC70 != -1)
    swift_once();
  v12 = byte_2569AD6E8;
  v13 = *(void **)(v0 + 152);
  if (byte_2569AD6E8 == 2)
  {
    v14 = *(_BYTE *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR___ObjectTrackingAgent_customInferenceEnabledConfig);

    if (!v2)
      goto LABEL_20;
  }
  else
  {

    v14 = v12 & 1;
    if (!v2)
      goto LABEL_20;
  }
  if ((v14 & 1) == 0)
    *(_BYTE *)(v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_isInferenceEnabled) = 0;
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_23A5DFA8C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 160);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 112));
  v2 = v1;
  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691038();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 160);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v10;
    sub_23A6911D0();
    *v8 = v10;

    _os_log_impl(&dword_23A5B0000, v4, v5, "Failed fetching connected accessory: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 160);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  if (qword_25699DC70 != -1)
    swift_once();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23A5DFDAC(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23A5DFE0C;
  return sub_23A5DF558();
}

uint64_t sub_23A5DFE0C(void *a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  uint64_t v6;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 24);
  v4 = *(void **)(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc();

  ((void (**)(_QWORD, void *))v3)[2](v3, a1);
  _Block_release(v3);

  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_23A5DFE84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[12] = v0;
  v2 = sub_23A690D14();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5DFEF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_manager);
  *(_QWORD *)(v0 + 136) = v2;
  if (v2)
  {
    v3 = v2;
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 16))(*(_QWORD *)(v0 + 128), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 104));
    v5 = sub_23A690CFC();
    v6 = sub_23A691044();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23A5B0000, v5, v6, "manager is nil, can't get/set tracker", v7, 2u);
      MEMORY[0x23B853BD0](v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(0, 1);
  }
}

uint64_t sub_23A5E0020()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[17];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_23A5E007C;
  v2 = swift_continuation_init();
  sub_23A64F44C(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_23A5E007C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 144) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 152) = *(_QWORD *)(v1 + 80);
  return swift_task_switch();
}

uint64_t sub_23A5E00F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, 0);
}

uint64_t sub_23A5E013C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v13;

  v1 = *(void **)(v0 + 144);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 16))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 104));
  v2 = v1;
  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691038();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 144);
    v13 = *(void **)(v0 + 136);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v10;
    sub_23A6911D0();
    *v8 = v10;

    _os_log_impl(&dword_23A5B0000, v4, v5, "Failed fetching tracking button state: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 144);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(0, 1);
}

uint64_t sub_23A5E0328(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 176) = a2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v2;
  v4 = sub_23A690D14();
  *(_QWORD *)(v3 + 72) = v4;
  *(_QWORD *)(v3 + 80) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 88) = swift_task_alloc();
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E03B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  NSObject *v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(void **)(v2 + OBJC_IVAR___ObjectTrackingAgent_manager);
  *(_QWORD *)(v0 + 120) = v3;
  v4 = *(_QWORD *)(v0 + 80);
  if (v3)
  {
    v5 = *(void **)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = OBJC_IVAR___ObjectTrackingAgent_logger;
    *(_QWORD *)(v0 + 128) = OBJC_IVAR___ObjectTrackingAgent_logger;
    v8 = v2 + v7;
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    *(_QWORD *)(v0 + 136) = v9;
    v9(v6, v8, v1);
    v10 = v5;
    v11 = v3;
    v12 = sub_23A690CFC();
    v13 = sub_23A691044();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(_QWORD *)(v0 + 112);
    v17 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 80);
    v18 = *(char **)(v0 + 56);
    if (v14)
    {
      v37 = *(_QWORD *)(v0 + 80);
      v38 = v11;
      v19 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v39 = v35;
      *(_DWORD *)v19 = 136315650;
      v36 = v17;
      *(_QWORD *)(v0 + 32) = sub_23A5EEB40(0xD000000000000021, 0x800000023A69D3D0, &v39);
      sub_23A6911D0();
      *(_WORD *)(v19 + 12) = 2080;
      v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_appId];
      v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_appId + 8];
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 40) = sub_23A5EEB40(v20, v21, &v39);
      sub_23A6911D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2048;
      *(_QWORD *)(v0 + 48) = *(_QWORD *)&v18[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_cameraType];
      sub_23A6911D0();

      _os_log_impl(&dword_23A5B0000, v12, v13, "%s current session app=%s cam=%ld", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v35, -1, -1);
      v22 = v19;
      v11 = v38;
      MEMORY[0x23B853BD0](v22, -1, -1);

      v23 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v23(v15, v36);
    }
    else
    {

      v23 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v23(v15, v17);
    }
    *(_QWORD *)(v0 + 144) = v23;
    v31 = *(_BYTE *)(v0 + 176);
    v32 = *(_QWORD *)(v0 + 56);
    v33 = swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v33;
    *(_QWORD *)(v33 + 16) = v11;
    *(_QWORD *)(v33 + 24) = v32;
    *(_BYTE *)(v33 + 32) = v31;
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F0C8);
    *v34 = v0;
    v34[1] = sub_23A5E079C;
    return sub_23A691530();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v4 + 16))(*(_QWORD *)(v0 + 96), v2 + OBJC_IVAR___ObjectTrackingAgent_logger, v1);
    v24 = sub_23A690CFC();
    v25 = sub_23A691044();
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_23A5B0000, v24, (os_log_type_t)v25, "manager is nil, can't get/set tracker", v26, 2u);
      MEMORY[0x23B853BD0](v26, -1, -1);
    }
    v27 = *(_QWORD *)(v0 + 96);
    v28 = *(_QWORD *)(v0 + 72);
    v29 = *(_QWORD *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
  }
}

uint64_t sub_23A5E079C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E0808()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_23A691374())
  {
    v3 = 0;
    v23 = v1 & 0xC000000000000001;
    v4 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
    while (1)
    {
      v7 = v23 ? (id)MEMORY[0x23B85312C](v3, v1) : *(id *)(v1 + 8 * v3 + 32);
      v8 = v7;
      if (__OFADD__(v3, 1))
        break;
      v24 = v3 + 1;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 136))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 72));
      v9 = v8;
      v10 = sub_23A690CFC();
      v11 = sub_23A691044();
      if (os_log_type_enabled(v10, v11))
      {
        v21 = *(_QWORD *)(v0 + 104);
        v22 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
        v20 = *(_QWORD *)(v0 + 72);
        v12 = swift_slowAlloc();
        v19 = swift_slowAlloc();
        v25 = v19;
        *(_DWORD *)v12 = 136316162;
        *(_QWORD *)(v12 + 4) = sub_23A5EEB40(0xD000000000000021, 0x800000023A69D3D0, &v25);
        *(_WORD *)(v12 + 12) = 2080;
        v13 = v2;
        v14 = v1;
        v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_appId];
        v16 = *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_appId + 8];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v12 + 14) = sub_23A5EEB40(v15, v16, &v25);
        v1 = v14;
        v2 = v13;
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 22) = 2048;
        *(_QWORD *)(v12 + 24) = *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_cameraType];
        *(_WORD *)(v12 + 32) = 2048;
        *(_QWORD *)(v12 + 34) = *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_startTime];
        *(_WORD *)(v12 + 42) = 2048;
        *(_QWORD *)(v12 + 44) = *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore24CameraSessionInformation_endTime];

        _os_log_impl(&dword_23A5B0000, v10, v11, "%s previous session app=%s cam=%ld start=%f end=%f", (uint8_t *)v12, 0x34u);
        swift_arrayDestroy();
        MEMORY[0x23B853BD0](v19, -1, -1);
        MEMORY[0x23B853BD0](v12, -1, -1);

        v22(v21, v20);
        v4 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
      }
      else
      {
        v5 = *(_QWORD *)(v0 + 104);
        v6 = *(_QWORD *)(v0 + 72);

        v4(v5, v6);
      }
      ++v3;
      if (v24 == v2)
        goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  v17 = *(void **)(v0 + 120);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
}

uint64_t sub_23A5E0B28()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void (*v17)(uint64_t, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 168);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 128);
  swift_task_dealloc();
  v2(v3, v5, v4);
  v6 = v1;
  v7 = v1;
  v8 = sub_23A690CFC();
  v9 = sub_23A691038();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 168);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v10;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v14;
    sub_23A6911D0();
    *v12 = v14;

    _os_log_impl(&dword_23A5B0000, v8, v9, "Failed updating camera session: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v12, -1, -1);
    MEMORY[0x23B853BD0](v11, -1, -1);
  }
  else
  {
    v15 = *(void **)(v0 + 168);

  }
  v16 = *(void **)(v0 + 168);
  v17 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  v18 = *(void **)(v0 + 120);
  v19 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 72);

  v17(v19, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_23A5E0E50(void *a1, char a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  _QWORD *v9;

  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v8 = a1;
  a4;
  v9 = (_QWORD *)swift_task_alloc();
  v4[5] = v9;
  *v9 = v4;
  v9[1] = sub_23A5E0ED4;
  return sub_23A5E0328((uint64_t)v8, a2);
}

uint64_t sub_23A5E0ED4()
{
  uint64_t *v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;
  void *v3;
  void *v4;
  uint64_t v6;

  v1 = *(void (***)(_QWORD, _QWORD))(*v0 + 32);
  v3 = *(void **)(*v0 + 16);
  v2 = *(void **)(*v0 + 24);
  v6 = *v0;
  swift_task_dealloc();

  type metadata accessor for CameraSessionInformation();
  v4 = (void *)sub_23A690F00();
  swift_bridgeObjectRelease();
  ((void (**)(_QWORD, void *))v1)[2](v1, v4);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_23A5E0F70(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  id v15;
  uint64_t v17;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v4;
  v13[5] = a1;
  v13[6] = a2;
  v13[7] = a3;
  v13[8] = a4;
  v14 = v4;
  v15 = a1;
  sub_23A5D120C((uint64_t)v11, (uint64_t)&unk_25699EC28, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_23A5E1058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v13;
  *v13 = v8;
  v13[1] = sub_23A5F2890;
  return sub_23A5E11DC(a5, a6, a7, a8);
}

uint64_t sub_23A5E11DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  v6 = sub_23A690D14();
  v5[21] = v6;
  v5[22] = *(_QWORD *)(v6 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E1284()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = (void *)v0[16];
  v2 = v0[28];
  v3 = v0[21];
  v4 = v0[22];
  v5 = v0[20];
  v6 = OBJC_IVAR___ObjectTrackingAgent_logger;
  v0[29] = OBJC_IVAR___ObjectTrackingAgent_logger;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[30] = v7;
  v7(v2, v5 + v6, v3);
  v8 = v1;
  v9 = sub_23A690CFC();
  v10 = sub_23A691044();
  v11 = os_log_type_enabled(v9, v10);
  v12 = (void *)v0[16];
  if (!v11)
  {
    v19 = v0[28];
    v20 = v0[21];
    v21 = v0[22];

    v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v22(v19, v20);
LABEL_24:
    v0[31] = v22;
    v35 = (_QWORD *)swift_task_alloc();
    v0[32] = v35;
    *v35 = v0;
    v35[1] = sub_23A5E16FC;
    return sub_23A5DEBE0();
  }
  v38 = v10;
  v40 = v0[17];
  v13 = swift_slowAlloc();
  v14 = (_QWORD *)swift_slowAlloc();
  v15 = swift_slowAlloc();
  v41 = v15;
  v0[9] = v12;
  v39 = v15;
  *(_DWORD *)v13 = 138413058;
  v16 = v12;
  sub_23A6911D0();
  v37 = v14;
  *v14 = v12;

  *(_WORD *)(v13 + 12) = 2080;
  if (v40)
  {
    if (v40 == 2)
    {
      v17 = 0xE700000000000000;
      v18 = 0x6E776F6E6B6E55;
    }
    else
    {
      if (v40 != 1)
      {
        v23 = v0 + 10;
        v25 = v0 + 17;
        goto LABEL_25;
      }
      v17 = 0xEC00000064657463;
      v18 = 0x656E6E6F43746F4ELL;
    }
  }
  else
  {
    v17 = 0xE900000000000064;
    v18 = 0x657463656E6E6F43;
  }
  v23 = v0 + 12;
  v25 = v0 + 18;
  v24 = v0[18];
  v0[11] = sub_23A5EEB40(v18, v17, &v41);
  sub_23A6911D0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v13 + 22) = 2080;
  if (v24)
  {
    if (v24 == 2)
    {
      v26 = 0xE700000000000000;
      v27 = 0x6E776F6E6B6E55;
    }
    else
    {
      if (v24 != 1)
        goto LABEL_25;
      v26 = 0xE800000000000000;
      v27 = 0x64656B636F646E55;
    }
  }
  else
  {
    v26 = 0xE600000000000000;
    v27 = 0x64656B636F44;
  }
  v23 = v0 + 14;
  v25 = v0 + 19;
  v28 = v0[19];
  v0[13] = sub_23A5EEB40(v27, v26, &v41);
  sub_23A6911D0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v13 + 32) = 2080;
  switch(v28)
  {
    case 2:
      v29 = (uint8_t *)v13;
      v30 = 0xE700000000000000;
      v31 = 0x6E776F6E6B6E55;
      goto LABEL_23;
    case 1:
      v29 = (uint8_t *)v13;
      v30 = 0xE200000000000000;
      v31 = 28239;
      goto LABEL_23;
    case 0:
      v29 = (uint8_t *)v13;
      v30 = 0xE300000000000000;
      v31 = 6710863;
LABEL_23:
      v32 = v0[28];
      v34 = v0[21];
      v33 = v0[22];
      v0[15] = sub_23A5EEB40(v31, v30, &v41);
      sub_23A6911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23A5B0000, v9, v38, "state event, %@, connected %s, docked %s, tracking button %s", v29, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v37, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v39, -1, -1);
      MEMORY[0x23B853BD0](v29, -1, -1);

      v22 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v22(v32, v34);
      goto LABEL_24;
  }
LABEL_25:
  *v23 = *v25;
  return sub_23A69153C();
}

uint64_t sub_23A5E16FC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 428) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E1758()
{
  uint64_t v0;
  char *v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int v13;
  void *v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v1 = *(char **)(v0 + 160);
  (*(void (**)(_QWORD, char *, _QWORD))(v0 + 240))(*(_QWORD *)(v0 + 216), &v1[*(_QWORD *)(v0 + 232)], *(_QWORD *)(v0 + 168));
  v2 = v1;
  v3 = sub_23A690CFC();
  v4 = sub_23A691044();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 160);
    v6 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v6 = 136315394;
    if (*(_QWORD *)(v5 + OBJC_IVAR___ObjectTrackingAgent_appID + 8))
    {
      v7 = *(_QWORD *)(v5 + OBJC_IVAR___ObjectTrackingAgent_appID);
      v8 = *(_QWORD *)(v5 + OBJC_IVAR___ObjectTrackingAgent_appID + 8);
    }
    else
    {
      v8 = 0xE700000000000000;
      v7 = 0x6E776F6E6B6E75;
    }
    v13 = *(unsigned __int8 *)(v0 + 428);
    v18 = *(_QWORD *)(v0 + 216);
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v14 = *(void **)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 168);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_23A5EEB40(v7, v8, &v21);
    sub_23A6911D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 1024;
    *(_DWORD *)(v0 + 424) = v13;
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v3, v4, "tracking enabled for app %s? %{BOOL}d", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v20, -1, -1);
    MEMORY[0x23B853BD0](v6, -1, -1);

    v19(v18, v17);
  }
  else
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v10 = *(_QWORD *)(v0 + 216);
    v12 = *(void **)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 168);

    v9(v10, v11);
  }
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v15;
  *v15 = v0;
  v15[1] = sub_23A5E198C;
  return sub_23A5DF558();
}

uint64_t sub_23A5E198C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E19E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BOOL4 v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  int v19;
  id v20;
  void *v21;
  char *v23;
  char *v24;
  int64x2_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  id v33;
  id v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL4 v38;
  void *v39;
  uint8_t *v40;
  _QWORD *v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = OBJC_IVAR___ObjectTrackingAgent_tracker;
  *(_QWORD *)(v0 + 280) = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v3 = *(char **)(v1 + v2);
  *(_QWORD *)(v0 + 288) = v3;
  if (v3)
  {
    v4 = *(void **)(v0 + 128);
    v5 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info;
    *(_QWORD *)(v0 + 368) = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info;
    v6 = *(void **)&v3[v5];
    v7 = type metadata accessor for DockCoreInfo(0);
    *(_QWORD *)(v0 + 16) = v4;
    *(_QWORD *)(v0 + 40) = v7;
    v8 = v4;
    v9 = v3;
    v10 = v6;
    LOBYTE(v6) = DockCoreInfo.isEqual(_:)(v0 + 16);

    sub_23A5C921C(v0 + 16, &qword_2569A0330);
    if ((v6 & 1) != 0 && *(_QWORD *)(v0 + 136) == 1)
    {
      v11 = *(_QWORD *)(v0 + 160);
      v12 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
      *(_QWORD *)(v0 + 376) = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
      *(_QWORD *)(v0 + 384) = *(_QWORD *)(v11 + v12);
      swift_retain();
      return swift_task_switch();
    }

    v2 = *(_QWORD *)(v0 + 280);
    v1 = *(_QWORD *)(v0 + 160);
LABEL_6:
    v13 = *(char **)(v1 + v2);
    if (v13)
    {
      v14 = *(_QWORD *)(v0 + 152) != 1;
      v15 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
      v16 = *(void **)&v13[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore];
      v17 = v13;
      v18 = v16;
      sub_23A691104();

      v19 = v17[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled];
      v20 = *(id *)&v13[v15];
      sub_23A691110();

      if (((v14 ^ v19) & 1) == 0)
        sub_23A5E301C(*(void **)(v0 + 128), *(_QWORD *)(v0 + 152));
    }
    v21 = *(void **)(v0 + 272);
    if (v21)
    {

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v1 = *(_QWORD *)(v0 + 160);
    goto LABEL_17;
  }
  v23 = *(char **)(v0 + 272);
  if (v23)
  {
    v24 = *(char **)(v0 + 128);
    v25.i64[0] = *(_QWORD *)(v0 + 152);
    v25.i64[1] = *(_QWORD *)&v24[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_type];
    if ((vmaxv_u16((uint16x4_t)vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*(int64x2_t *)(v0 + 136)), (int32x4_t)vceqq_s64(v25, vdupq_n_s64(1uLL)))))) & 1) == 0&& *(_BYTE *)(v0 + 428))
    {
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
      v27 = *(_QWORD *)(v0 + 208);
      v28 = *(_QWORD *)(v0 + 168);
      v29 = v1 + *(_QWORD *)(v0 + 232);
      v30 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
      v31 = *(void **)&v23[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore];
      v32 = v23;
      v33 = v31;
      sub_23A691104();

      v32[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled] = 1;
      v34 = *(id *)&v23[v30];
      sub_23A691110();

      v26(v27, v29, v28);
      v35 = v24;
      v36 = sub_23A690CFC();
      v37 = sub_23A691044();
      v38 = os_log_type_enabled(v36, v37);
      v39 = *(void **)(v0 + 128);
      if (v38)
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v41 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v40 = 138412290;
        *(_QWORD *)(v0 + 56) = v39;
        v42 = v39;
        sub_23A6911D0();
        *v41 = v39;

        _os_log_impl(&dword_23A5B0000, v36, v37, "tracking stand just docked and connected %@", v40, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
        swift_arrayDestroy();
        MEMORY[0x23B853BD0](v41, -1, -1);
        MEMORY[0x23B853BD0](v40, -1, -1);
      }
      else
      {

      }
      v50 = *(_QWORD *)(v0 + 160);
      (*(void (**)(_QWORD, _QWORD))(v0 + 248))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 168));
      v51 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
      *(_QWORD *)(v0 + 296) = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
      *(_QWORD *)(v0 + 304) = *(_QWORD *)(v50 + v51);
      swift_retain();
      return swift_task_switch();
    }
    goto LABEL_6;
  }
LABEL_17:
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0 + 240))(*(_QWORD *)(v0 + 184), v1 + *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 168));
  v43 = sub_23A690CFC();
  v44 = sub_23A691038();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_23A5B0000, v43, v44, "No connected tracking stand found", v45, 2u);
    MEMORY[0x23B853BD0](v45, -1, -1);
  }
  v46 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  v47 = *(_QWORD *)(v0 + 184);
  v48 = *(_QWORD *)(v0 + 168);

  v46(v47, v48);
  v49 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 416) = v49;
  *v49 = v0;
  v49[1] = sub_23A5E2D3C;
  return sub_23A5DE3FC();
}

void sub_23A5E1EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 312) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E1FA4;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E1FA4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E1FF8()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E2034()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;

  v1 = (void *)v0[34];
  v2 = v0[35];
  v3 = v0[20];
  v4 = *(void **)(v3 + v2);
  *(_QWORD *)(v3 + v2) = v1;
  v5 = v1;

  v6 = *(_QWORD *)(v3 + v2);
  if (v6)
    *(_BYTE *)(v6 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_debugEnabled) = *(_BYTE *)(v0[20]
                                                                                          + OBJC_IVAR___ObjectTrackingAgent_debugEnabled);
  v7 = v0[20];
  v8 = *(void **)(v7 + OBJC_IVAR___ObjectTrackingAgent_currentCameraSession);
  v0[40] = v8;
  if (v8)
  {
    v9 = v8;
    v10 = (_QWORD *)swift_task_alloc();
    v0[41] = v10;
    *v10 = v0;
    v10[1] = sub_23A5E2128;
    return sub_23A5E0328((uint64_t)v9, 0);
  }
  else
  {
    v0[42] = *(_QWORD *)(v7 + v0[37]);
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_23A5E2128()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23A5E2188()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 336) = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 296));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E21DC()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E2220()
{
  uint64_t v0;
  _QWORD *v1;

  *(id *)(v0 + 272);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v1;
  *v1 = v0;
  v1[1] = sub_23A5E2278;
  return sub_23A620534();
}

uint64_t sub_23A5E2278()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(void **)(*v0 + 272);
  v5 = *v0;
  swift_task_dealloc();

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 352) = v3;
  *v3 = v5;
  v3[1] = sub_23A5E22E4;
  return sub_23A5DCFB0();
}

uint64_t sub_23A5E22E4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 360) = v2;
  *v2 = v4;
  v2[1] = sub_23A5E2348;
  return sub_23A5DDBFC();
}

uint64_t sub_23A5E2348()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E239C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  id v5;
  char *v6;
  _BOOL4 v7;
  uint64_t v8;
  void *v9;
  char *v10;
  id v11;
  int v12;
  id v13;
  void *v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = *(_QWORD *)(v0 + 160) + OBJC_IVAR___ObjectTrackingAgent_delegate;
  if (MEMORY[0x23B853C6C](v1))
  {
    v2 = *(_QWORD *)(v0 + 272);
    v3 = *(_QWORD *)(v1 + 8);
    swift_getObjectType();
    v4 = *(void (**)(void))(v3 + 8);
    v5 = *(id *)(v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
    v4();

    swift_unknownObjectRelease();
  }
  v6 = *(char **)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 280));
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 152) != 1;
    v8 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
    v9 = *(void **)&v6[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore];
    v10 = v6;
    v11 = v9;
    sub_23A691104();

    v12 = v10[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled];
    v13 = *(id *)&v6[v8];
    sub_23A691110();

    if (((v7 ^ v12) & 1) == 0)
      sub_23A5E301C(*(void **)(v0 + 128), *(_QWORD *)(v0 + 152));
  }
  v14 = *(void **)(v0 + 272);
  if (v14)
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 240))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 168));
    v16 = sub_23A690CFC();
    v17 = sub_23A691038();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23A5B0000, v16, v17, "No connected tracking stand found", v18, 2u);
      MEMORY[0x23B853BD0](v18, -1, -1);
    }
    v19 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v20 = *(_QWORD *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 168);

    v19(v20, v21);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v22;
    *v22 = v0;
    v22[1] = sub_23A5E2D3C;
    return sub_23A5DE3FC();
  }
}

void sub_23A5E25D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 392) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E26B0;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E26B0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E2704()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E2740()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  char *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  void *v21;
  void (*v22)(void *, uint64_t, uint64_t);
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;

  v1 = *(void **)(v0 + 288);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 240))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 168));
  v2 = v1;
  v3 = sub_23A690CFC();
  v4 = sub_23A691044();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 368);
    v6 = *(char **)(v0 + 288);
    v37 = *(_QWORD *)(v0 + 200);
    v38 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v36 = *(_QWORD *)(v0 + 168);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v39 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = (uint64_t *)(*(_QWORD *)&v6[v5] + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name);
    v11 = *v9;
    v10 = v9[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 48) = sub_23A5EEB40(v11, v10, &v39);
    sub_23A6911D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A5B0000, v3, v4, "tracking device %s disconnected, stopping tracking", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

    v38(v37, v36);
  }
  else
  {
    v12 = *(void **)(v0 + 288);
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v14 = *(_QWORD *)(v0 + 200);
    v15 = *(_QWORD *)(v0 + 168);

    v13(v14, v15);
  }
  v16 = *(_QWORD *)(v0 + 160) + OBJC_IVAR___ObjectTrackingAgent_delegate;
  if (MEMORY[0x23B853C6C](v16))
  {
    v17 = *(_QWORD *)(v0 + 368);
    v18 = *(_QWORD *)(v0 + 288);
    v19 = *(_QWORD *)(v16 + 8);
    ObjectType = swift_getObjectType();
    v21 = *(void **)(v18 + v17);
    v22 = *(void (**)(void *, uint64_t, uint64_t))(v19 + 16);
    v23 = v21;
    v22(v21, ObjectType, v19);

    swift_unknownObjectRelease();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 240))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 168));
  v24 = sub_23A690CFC();
  v25 = sub_23A691044();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_23A5B0000, v24, v25, "calling tracker.stopTracking()", v26, 2u);
    MEMORY[0x23B853BD0](v26, -1, -1);
  }
  v27 = *(_QWORD *)(v0 + 280);
  v28 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  v29 = *(_QWORD *)(v0 + 192);
  v31 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 168);

  v28(v29, v30);
  v32 = *(void **)(v31 + v27);
  if (v32)
  {
    v33 = v32;
    sub_23A62101C();

  }
  v34 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v34;
  *v34 = v0;
  v34[1] = sub_23A5E2A44;
  return sub_23A5ECC5C();
}

uint64_t sub_23A5E2A44()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E2A98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;

  v1 = v0[35];
  v2 = v0[20];
  v3 = *(void **)(v2 + v1);
  if (v3)
  {
    v4 = v3;
    sub_23A5F4B18(0);

    v3 = *(void **)(v2 + v1);
    v1 = v0[35];
    v2 = v0[20];
  }
  v5 = v0[47];
  *(_QWORD *)(v2 + v1) = 0;

  v0[51] = *(_QWORD *)(v2 + v5);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E2B20()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E2B64()
{
  uint64_t v0;
  char *v1;
  _BOOL4 v2;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  int v7;
  id v8;
  void *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v1 = *(char **)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 280));
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 152) != 1;
    v3 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
    v4 = *(void **)&v1[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore];
    v5 = v1;
    v6 = v4;
    sub_23A691104();

    v7 = v5[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled];
    v8 = *(id *)&v1[v3];
    sub_23A691110();

    if (((v2 ^ v7) & 1) == 0)
      sub_23A5E301C(*(void **)(v0 + 128), *(_QWORD *)(v0 + 152));
  }
  v9 = *(void **)(v0 + 272);
  if (v9)
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 240))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 168));
    v11 = sub_23A690CFC();
    v12 = sub_23A691038();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_23A5B0000, v11, v12, "No connected tracking stand found", v13, 2u);
      MEMORY[0x23B853BD0](v13, -1, -1);
    }
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v15 = *(_QWORD *)(v0 + 184);
    v16 = *(_QWORD *)(v0 + 168);

    v14(v15, v16);
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v17;
    *v17 = v0;
    v17[1] = sub_23A5E2D3C;
    return sub_23A5DE3FC();
  }
}

uint64_t sub_23A5E2D3C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A5E2F10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *aBlock, void *a6)
{
  _QWORD *v6;
  id v12;
  _QWORD *v13;

  v6[2] = a1;
  v6[3] = a6;
  v6[4] = _Block_copy(aBlock);
  v12 = a1;
  a6;
  v13 = (_QWORD *)swift_task_alloc();
  v6[5] = v13;
  *v13 = v6;
  v13[1] = sub_23A5E2FAC;
  return sub_23A5E11DC((uint64_t)v12, a2, a3, a4);
}

uint64_t sub_23A5E2FAC()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  void *v3;
  uint64_t v5;

  v1 = *(void (***)(_QWORD))(*v0 + 32);
  v3 = *(void **)(*v0 + 16);
  v2 = *(void **)(*v0 + 24);
  v5 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_23A5E301C(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  int v29;
  char *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A690D14();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, (uint64_t)v3 + OBJC_IVAR___ObjectTrackingAgent_logger, v9);
  v13 = a1;
  v14 = sub_23A690CFC();
  v15 = sub_23A691044();
  if (!os_log_type_enabled(v14, (os_log_type_t)v15))
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_10:
    v23 = sub_23A690F9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = 0;
    v24[3] = 0;
    v24[4] = v3;
    v24[5] = v13;
    v24[6] = a2;
    v25 = v13;
    v26 = v3;
    sub_23A5D120C((uint64_t)v8, (uint64_t)&unk_25699EC70, (uint64_t)v24);
    return swift_release();
  }
  v29 = v15;
  v30 = v8;
  v31 = v3;
  v16 = swift_slowAlloc();
  v28 = swift_slowAlloc();
  v33 = v28;
  *(_DWORD *)v16 = 136315394;
  v17 = a2;
  v18 = *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name];
  v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name + 8];
  swift_bridgeObjectRetain();
  v32 = sub_23A5EEB40(v18, v19, &v33);
  sub_23A6911D0();
  a2 = v17;
  swift_bridgeObjectRelease();

  *(_WORD *)(v16 + 12) = 2080;
  if (v17 == 2)
  {
    v20 = 0xE700000000000000;
    v21 = 0x6E776F6E6B6E55;
    v8 = v30;
    goto LABEL_9;
  }
  v8 = v30;
  if (a2 == 1)
  {
    v20 = 0xE200000000000000;
    v21 = 28239;
LABEL_9:
    v32 = sub_23A5EEB40(v21, v20, &v33);
    sub_23A6911D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A5B0000, v14, (os_log_type_t)v29, "%s Tracking button state changed to: %s", (uint8_t *)v16, 0x16u);
    v22 = v28;
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v22, -1, -1);
    MEMORY[0x23B853BD0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v3 = v31;
    goto LABEL_10;
  }
  if (!a2)
  {
    v20 = 0xE300000000000000;
    v21 = 6710863;
    goto LABEL_9;
  }
  v32 = a2;
  result = sub_23A69153C();
  __break(1u);
  return result;
}

uint64_t sub_23A5E3360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  v7 = sub_23A690D14();
  v6[12] = v7;
  v6[13] = *(_QWORD *)(v7 - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E33E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[9];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[17] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[18] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E3434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E3514;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E3514()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E3568()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E35A4()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint8_t *buf;
  uint8_t *bufa;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v1 = v0[9];
  v2 = *(char **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  v0[20] = v2;
  if (!v2)
    goto LABEL_8;
  v3 = (void *)v0[10];
  v4 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info;
  v5 = *(void **)&v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
  v6 = type metadata accessor for DockCoreInfo(0);
  v0[2] = v3;
  v0[5] = v6;
  v7 = v2;
  v8 = v5;
  v9 = v3;
  v10 = DockCoreInfo.isEqual(_:)((uint64_t)(v0 + 2));

  sub_23A5C921C((uint64_t)(v0 + 2), &qword_2569A0330);
  if ((v10 & 1) == 0)
  {

    v1 = v0[9];
LABEL_8:
    v27 = (void *)v0[10];
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[13] + 16))(v0[14], v1 + OBJC_IVAR___ObjectTrackingAgent_logger, v0[12]);
    v28 = v27;
    v29 = sub_23A690CFC();
    v30 = sub_23A691044();
    v31 = os_log_type_enabled(v29, v30);
    v33 = v0[13];
    v32 = v0[14];
    v34 = v0[12];
    v35 = (char *)v0[10];
    if (v31)
    {
      v61 = v0[14];
      v36 = (uint8_t *)swift_slowAlloc();
      v59 = v33;
      v37 = swift_slowAlloc();
      v62 = v37;
      *(_DWORD *)v36 = 136315138;
      v58 = v34;
      v38 = *(_QWORD *)&v35[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name];
      v39 = *(_QWORD *)&v35[OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name + 8];
      swift_bridgeObjectRetain();
      v0[6] = sub_23A5EEB40(v38, v39, &v62);
      sub_23A6911D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A5B0000, v29, v30, "No tracker matching %s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v37, -1, -1);
      MEMORY[0x23B853BD0](v36, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v61, v58);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    }
    goto LABEL_11;
  }
  v11 = v0[11];
  v12 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  v13 = *(id *)&v7[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore];
  sub_23A691104();

  v7[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled] = v11 == 1;
  v14 = *(id *)&v7[v12];
  sub_23A691110();

  if (!v11)
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[13] + 16))(v0[16], v0[9] + OBJC_IVAR___ObjectTrackingAgent_logger, v0[12]);
    v41 = v7;
    v42 = sub_23A690CFC();
    v43 = sub_23A691044();
    v44 = os_log_type_enabled(v42, v43);
    v45 = v0[16];
    v46 = v0[12];
    v47 = v0[13];
    if (v44)
    {
      v60 = v0[16];
      v48 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v62 = v56;
      *(_DWORD *)v48 = 136315138;
      bufa = v48;
      v49 = (uint64_t *)(*(_QWORD *)&v2[v4] + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name);
      v50 = v46;
      v51 = *v49;
      v52 = v49[1];
      swift_bridgeObjectRetain();
      v0[8] = sub_23A5EEB40(v51, v52, &v62);
      sub_23A6911D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23A5B0000, v42, v43, "Tracking button off, stopping %s", bufa, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v56, -1, -1);
      MEMORY[0x23B853BD0](bufa, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v60, v50);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
    }
    sub_23A62101C();
    sub_23A5F4B18(1);

    goto LABEL_11;
  }
  if (v11 != 1)
  {

LABEL_11:
    v0[24] = *(_QWORD *)(v0[9] + v0[17]);
    swift_retain();
    return swift_task_switch();
  }
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[13] + 16))(v0[15], v0[9] + OBJC_IVAR___ObjectTrackingAgent_logger, v0[12]);
  v15 = v7;
  v16 = sub_23A690CFC();
  v17 = sub_23A691044();
  v18 = os_log_type_enabled(v16, v17);
  v19 = v0[15];
  v20 = v0[12];
  v21 = v0[13];
  if (v18)
  {
    v57 = v0[15];
    v22 = (uint8_t *)swift_slowAlloc();
    buf = (uint8_t *)swift_slowAlloc();
    v62 = (uint64_t)buf;
    *(_DWORD *)v22 = 136315138;
    v23 = (uint64_t *)(*(_QWORD *)&v2[v4] + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_name);
    v24 = v21;
    v26 = *v23;
    v25 = v23[1];
    swift_bridgeObjectRetain();
    v0[7] = sub_23A5EEB40(v26, v25, &v62);
    sub_23A6911D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A5B0000, v16, v17, "Tracking button on, starting %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](buf, -1, -1);
    MEMORY[0x23B853BD0](v22, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v57, v20);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  v53 = (_QWORD *)swift_task_alloc();
  v0[21] = v53;
  *v53 = v0;
  v53[1] = sub_23A5E3BE0;
  return sub_23A620534();
}

uint64_t sub_23A5E3BE0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E3C34()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;

  v1 = *(void **)(*(_QWORD *)(v0 + 72) + OBJC_IVAR___ObjectTrackingAgent_currentCameraSession);
  *(_QWORD *)(v0 + 176) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v3;
    *v3 = v0;
    v3[1] = sub_23A5E3CE8;
    return sub_23A5E0328((uint64_t)v2, 0);
  }
  else
  {

    *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 136));
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_23A5E3CE8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23A5E3D48()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);

  *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 136));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E3DA4()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5E3E50(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(_QWORD);
  void (*v21)(_QWORD, _QWORD);
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD);
  void (*v32)(_QWORD, _QWORD);
  void *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  _QWORD *v39;
  char *v40;
  id v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  char *v49;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, void (*)(_QWORD, _QWORD));
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void *v70;
  void (*v71)(_QWORD, _QWORD);
  uint64_t v72;
  _QWORD aBlock[8];

  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v3 = sub_23A690D2C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A690D50();
  v66 = *(_QWORD *)(v7 - 8);
  v67 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v65 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23A690D68();
  v62 = *(_QWORD *)(v64 - 8);
  v9 = MEMORY[0x24BDAC7A8](v64);
  v61 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)&v55 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v12);
  v69 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23A690D14();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v60 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v55 - v18;
  v70 = v1;
  v20 = *(void (**)(_QWORD))(v15 + 16);
  v58 = (uint64_t)v1 + OBJC_IVAR___ObjectTrackingAgent_logger;
  v71 = v21;
  v59 = (void (*)(char *, uint64_t, void (*)(_QWORD, _QWORD)))v20;
  v20((char *)&v55 - v18);
  v22 = a1;
  v23 = a1;
  v24 = sub_23A690CFC();
  v25 = sub_23A691044();
  v26 = os_log_type_enabled(v24, v25);
  v68 = v4;
  if (v26)
  {
    v56 = v6;
    v57 = v3;
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v27 = 138412290;
    if (a1)
    {
      v29 = a1;
      v30 = _swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v30;
      sub_23A6911D0();
    }
    else
    {
      aBlock[0] = 0;
      sub_23A6911D0();
      v30 = 0;
    }
    *v28 = v30;

    _os_log_impl(&dword_23A5B0000, v24, v25, "agent disconnected with error %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v28, -1, -1);
    MEMORY[0x23B853BD0](v27, -1, -1);
    v3 = v57;
    v6 = v56;
  }
  else
  {

  }
  v31 = *(void (**)(char *, _QWORD))(v15 + 8);
  v32 = v71;
  v31(v19, v71);
  v33 = v70;
  *((_BYTE *)v70 + OBJC_IVAR___ObjectTrackingAgent_setupComplete) = 0;
  v34 = sub_23A690F9C();
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v36 = (uint64_t)v69;
  v35(v69, 1, 1, v34);
  v37 = (_QWORD *)swift_allocObject();
  v37[2] = 0;
  v37[3] = 0;
  v37[4] = v33;
  v38 = v33;
  sub_23A5D120C(v36, (uint64_t)&unk_25699EC80, (uint64_t)v37);
  swift_release();
  if (*(_QWORD *)&v38[OBJC_IVAR___ObjectTrackingAgent_manager])
  {
    v35((char *)v36, 1, 1, v34);
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v38;
    v40 = v38;
    sub_23A5D120C(v36, (uint64_t)&unk_25699EC90, (uint64_t)v39);
    swift_release();
    v41 = *(id *)&v40[OBJC_IVAR___ObjectTrackingAgent_agentQueue];
    v42 = v61;
    sub_23A690D5C();
    v43 = v6;
    v44 = v63;
    MEMORY[0x23B852C28](v42, 1.0);
    v71 = *(void (**)(_QWORD, _QWORD))(v62 + 8);
    v45 = v64;
    v71(v42, v64);
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = v40;
    aBlock[4] = sub_23A5F0540;
    aBlock[5] = v46;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23A5E4D44;
    aBlock[3] = &block_descriptor_0;
    v47 = _Block_copy(aBlock);
    v48 = v40;
    v49 = v65;
    sub_23A690D38();
    v72 = MEMORY[0x24BEE4AF8];
    sub_23A5F0550((unint64_t *)&qword_2569A01A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F710);
    sub_23A5F0590((unint64_t *)&qword_2569A01B0, (uint64_t *)&unk_25699F710);
    sub_23A691200();
    MEMORY[0x23B852EEC](v44, v49, v43, v47);
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v68 + 8))(v43, v3);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v67);
    v71(v44, v45);
    return swift_release();
  }
  else
  {
    v51 = v60;
    v59(v60, v58, v32);
    v52 = sub_23A690CFC();
    v53 = sub_23A691044();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_23A5B0000, v52, v53, "agent stopped, not starting again", v54, 2u);
      MEMORY[0x23B853BD0](v54, -1, -1);
    }

    return ((uint64_t (*)(char *, _QWORD))v31)(v51, v32);
  }
}

uint64_t sub_23A5E44E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23A5E44F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[3] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[4] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E454C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 40) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E462C;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E462C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E4680()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E46BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD *v12;
  uint64_t v14;

  v1 = v0[2] + OBJC_IVAR___ObjectTrackingAgent_delegate;
  v2 = MEMORY[0x23B853C6C](v1);
  swift_unknownObjectRelease();
  if (v2 && MEMORY[0x23B853C6C](v1))
  {
    v3 = *(_QWORD *)(v1 + 8);
    v4 = *(_QWORD *)(v0[2] + OBJC_IVAR___ObjectTrackingAgent_tracker);
    if (v4)
    {
      v5 = *(void **)(v4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
      v6 = v5;
    }
    else
    {
      v5 = 0;
    }
    ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v3 + 16))(v5, ObjectType, v3);
    swift_unknownObjectRelease();

  }
  v8 = v0[2];
  v9 = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v0[6] = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v10 = *(void **)(v8 + v9);
  if (v10)
  {
    v11 = v10;
    sub_23A62101C();

    if (*(_QWORD *)(v8 + v9))
    {
      v12 = (_QWORD *)swift_task_alloc();
      v0[7] = v12;
      *v12 = v0;
      v12[1] = sub_23A5E480C;
      return sub_23A5ECC5C();
    }
    v9 = v0[6];
    v8 = v0[2];
  }
  v14 = v0[3];
  *(_QWORD *)(v8 + v9) = 0;
  v0[8] = *(_QWORD *)(v8 + v14);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E480C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E4860()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = v0[6];
  v3 = v0[2];
  v2 = v0[3];
  v4 = *(void **)(v3 + v1);
  *(_QWORD *)(v3 + v1) = 0;

  v0[8] = *(_QWORD *)(v3 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E48B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23A5E48D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[3] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[4] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E4924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 40) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E4A04;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E4A04()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E4A58()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E4A94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0[2];
  v2 = v0[3];
  v3 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_manager);
  *(_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent_manager) = 0;

  v0[6] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E4AF0()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5E4B28(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A690F9C();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v9 = a1;
  if (v8 == 1)
  {
    sub_23A5C921C((uint64_t)v4, (uint64_t *)&unk_2542D27F0);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_23A690F90();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_23A690F60();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_25699F0B0;
  *(_QWORD *)(v13 + 24) = v7;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23A5E4CF8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  return sub_23A5D9B64(0);
}

uint64_t sub_23A5E4D44(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_23A5E4DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  v1 = sub_23A690D14();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR___ObjectTrackingAgent_logger, v1);
  v5 = sub_23A690CFC();
  v6 = sub_23A691044();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_23A5B0000, v5, v6, "Manager informed that XPC is connected", v7, 2u);
    MEMORY[0x23B853BD0](v7, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_23A5E4EF4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t result;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;

  v1 = sub_23A690D14();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v0;
  v13 = v0;
  sub_23A5D120C((uint64_t)v10, (uint64_t)&unk_25699ECA0, (uint64_t)v12);
  swift_release();
  v14 = OBJC_IVAR___ObjectTrackingAgent_expectingDisconnect;
  v15 = &v13[OBJC_IVAR___ObjectTrackingAgent_logger];
  v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  if ((v13[OBJC_IVAR___ObjectTrackingAgent_expectingDisconnect] & 1) != 0)
  {
    v16(v5, v15, v1);
    v17 = sub_23A690CFC();
    v18 = sub_23A691044();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_23A5B0000, v17, v18, "Manager disconnected, but this is expected", v19, 2u);
      MEMORY[0x23B853BD0](v19, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    v13[v14] = 0;
  }
  else
  {
    v16(v7, v15, v1);
    v21 = sub_23A690CFC();
    v22 = sub_23A691044();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_23A5B0000, v21, v22, "Manager XPC disconnected unexpectedly", v23, 2u);
      MEMORY[0x23B853BD0](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    return sub_23A5E3E50(0);
  }
  return result;
}

uint64_t sub_23A5E5164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23A5E517C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_configStateLock;
  v0[3] = OBJC_IVAR___ObjectTrackingAgent_configStateLock;
  v0[4] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E51D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 40) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E52B0;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E52B0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E5304()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E5340()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[2];
  v1 = v0[3];
  *(_BYTE *)(v2 + OBJC_IVAR___ObjectTrackingAgent_registeredForTrackingConfigChanges) = 0;
  v0[6] = *(_QWORD *)(v2 + v1);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E53C8()
{
  return sub_23A5E74F4((uint64_t)&unk_250B75758, (uint64_t)&unk_250B75780, (uint64_t)&unk_25699F098);
}

uint64_t sub_23A5E53FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a4;
  v5 = sub_23A690D14();
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E546C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[8] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[9] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E54C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 80) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E55A0;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E55A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E55F4()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E5630()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;

  v1 = v0[3];
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  v3 = v0[4];
  v4 = v0[5];
  if (v2)
  {
    v5 = v0[7];
    v6 = v2;
    swift_retain();
    v7 = (void *)sub_23A681EE4();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v1 + OBJC_IVAR___ObjectTrackingAgent_logger, v3);
    v8 = v7;
    v9 = sub_23A690CFC();
    v10 = sub_23A691044();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v0[2] = v8;
      v12 = v8;
      sub_23A6911D0();
      *v20 = v8;

      _os_log_impl(&dword_23A5B0000, v9, v10, "dumped tracker diagnostics %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v20, -1, -1);
      MEMORY[0x23B853BD0](v11, -1, -1);
      v8 = v9;
      v9 = v12;
    }
    else
    {

    }
    (*(void (**)(_QWORD, _QWORD))(v0[5] + 8))(v0[7], v0[4]);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v4 + 16))(v0[6], v1 + OBJC_IVAR___ObjectTrackingAgent_logger, v0[4]);
    v13 = sub_23A690CFC();
    v14 = sub_23A691044();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23A5B0000, v13, v14, "no tracker to dump diag from", v15, 2u);
      MEMORY[0x23B853BD0](v15, -1, -1);
    }
    v17 = v0[5];
    v16 = v0[6];
    v18 = v0[4];

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    v6 = 0;
  }
  v0[11] = v6;
  v0[12] = *(_QWORD *)(v0[3] + v0[8]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E58EC()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E5930()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5E59D4()
{
  return sub_23A5E74F4((uint64_t)&unk_250B75708, (uint64_t)&unk_250B75730, (uint64_t)&unk_25699F080);
}

uint64_t sub_23A5E5A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a4;
  v5 = sub_23A690D14();
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E5AD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[4];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[12] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[13] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E5B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
    __break(1u);
  *(_QWORD *)(v1 + 112) = v4;
  if (v4 < 0)
  {
    sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v6;
    *v6 = v0;
    v6[1] = sub_23A5E5C80;
    return sub_23A691500();
  }
  else
  {
    swift_release();
    return swift_task_switch();
  }
}

uint64_t sub_23A5E5C80()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E5D00()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E5D68()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0[4];
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (!v2)
  {
    v7 = v0 + 7;
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[6] + 16))(v0[7], v1 + OBJC_IVAR___ObjectTrackingAgent_logger, v0[5]);
    v8 = sub_23A690CFC();
    v12 = sub_23A691044();
    if (!os_log_type_enabled(v8, (os_log_type_t)v12))
    {
      v6 = 0;
      goto LABEL_10;
    }
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_23A5B0000, v8, (os_log_type_t)v12, "no tracker to dump state from", v10, 2u);
    v6 = 0;
    goto LABEL_8;
  }
  v4 = v0[10];
  v3 = v0[11];
  v5 = v0[9];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, (uint64_t)v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v5);
  v6 = v2;
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0[2])
  {
    sub_23A690930();
    swift_release();
  }

  v7 = v0 + 8;
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[6] + 16))(v0[8], v0[4] + OBJC_IVAR___ObjectTrackingAgent_logger, v0[5]);
  v8 = sub_23A690CFC();
  v9 = sub_23A691044();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v0[3] = 0;
    sub_23A6911D0();
    *v11 = 0;
    _os_log_impl(&dword_23A5B0000, v8, v9, "dumped state to %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v11, -1, -1);
LABEL_8:
    MEMORY[0x23B853BD0](v10, -1, -1);
  }
LABEL_10:
  v13 = *v7;
  v14 = v0[5];
  v15 = v0[6];

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v0[15] = v6;
  v0[16] = *(_QWORD *)(v0[4] + v0[12]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E6028()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E6098()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5E617C(char a1)
{
  return sub_23A5E676C(a1, (uint64_t)&unk_250B74AB0, (uint64_t)&unk_250B74AD8, (uint64_t)&unk_25699ECB0);
}

uint64_t sub_23A5E61A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a4;
  v5 = sub_23A690D14();
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  v4[8] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E6260()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[12] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[13] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E62B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E6394;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E6394()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E63E8()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E6424()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (!v2)
  {
    v11 = (uint64_t *)(v0 + 48);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 32));
    v12 = sub_23A690CFC();
    v16 = sub_23A691044();
    if (!os_log_type_enabled(v12, (os_log_type_t)v16))
    {
      v6 = 0;
      goto LABEL_10;
    }
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A5B0000, v12, (os_log_type_t)v16, "no tracker to search", v15, 2u);
    v6 = 0;
    goto LABEL_8;
  }
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, (uint64_t)v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v5);
  v6 = v2;
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = *(_QWORD *)(v0 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + 64);
    v9 = sub_23A690F9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v7;
    sub_23A5D120C(v8, (uint64_t)&unk_25699F070, (uint64_t)v10);
    swift_release();
  }

  v11 = (uint64_t *)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 32));
  v12 = sub_23A690CFC();
  v13 = sub_23A691044();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = v7 != 0;
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 67109120;
    *(_DWORD *)(v0 + 136) = v14;
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v12, v13, "started search: %{BOOL}d", v15, 8u);
LABEL_8:
    MEMORY[0x23B853BD0](v15, -1, -1);
  }
LABEL_10:
  v17 = *v11;
  v18 = *(_QWORD *)(v0 + 32);
  v19 = *(_QWORD *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 96));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E66C4()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E6748(char a1)
{
  return sub_23A5E676C(a1, (uint64_t)&unk_250B74B00, (uint64_t)&unk_250B74B28, (uint64_t)&unk_25699ECD0);
}

uint64_t sub_23A5E676C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A690F9C();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = v4;
  *(_BYTE *)(v12 + 40) = a1;
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  v14 = v4;
  if (v13 == 1)
  {
    sub_23A5C921C((uint64_t)v9, (uint64_t *)&unk_2542D27F0);
    v15 = 0;
    v16 = 0;
  }
  else
  {
    sub_23A690F90();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(v12 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v15 = sub_23A690F60();
      v16 = v17;
      swift_unknownObjectRelease();
    }
    else
    {
      v15 = 0;
      v16 = 0;
    }
  }
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = v12;
  if (v16 | v15)
  {
    v20[0] = 0;
    v20[1] = 0;
    v20[2] = v15;
    v20[3] = v16;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23A5E6948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a4;
  v5 = sub_23A690D14();
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  v4[8] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E6A08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[12] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[13] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E6A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E6B3C;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E6B3C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E6B90()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E6BCC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (!v2)
  {
    v11 = (uint64_t *)(v0 + 48);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 32));
    v12 = sub_23A690CFC();
    v16 = sub_23A691044();
    if (!os_log_type_enabled(v12, (os_log_type_t)v16))
    {
      v6 = 0;
      goto LABEL_10;
    }
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A5B0000, v12, (os_log_type_t)v16, "no tracker to stop search", v15, 2u);
    v6 = 0;
    goto LABEL_8;
  }
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, (uint64_t)v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v5);
  v6 = v2;
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = *(_QWORD *)(v0 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + 64);
    v9 = sub_23A690F9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v7;
    sub_23A5D120C(v8, (uint64_t)&unk_25699F068, (uint64_t)v10);
    swift_release();
  }

  v11 = (uint64_t *)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 32));
  v12 = sub_23A690CFC();
  v13 = sub_23A691044();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = v7 != 0;
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 67109120;
    *(_DWORD *)(v0 + 136) = v14;
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v12, v13, "stopped search: %{BOOL}d", v15, 8u);
LABEL_8:
    MEMORY[0x23B853BD0](v15, -1, -1);
  }
LABEL_10:
  v17 = *v11;
  v18 = *(_QWORD *)(v0 + 32);
  v19 = *(_QWORD *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 96));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E6E6C()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E6EB0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5E6F54()
{
  return sub_23A5E74F4((uint64_t)&unk_250B74B50, (uint64_t)&unk_250B74B78, (uint64_t)&unk_25699ECE8);
}

uint64_t sub_23A5E6F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a4;
  v5 = sub_23A690D14();
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  v4[8] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E7038()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[12] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[13] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E708C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E716C;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E716C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E71C0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E71FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (!v2)
  {
    v11 = (uint64_t *)(v0 + 48);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 32));
    v12 = sub_23A690CFC();
    v16 = sub_23A691044();
    if (!os_log_type_enabled(v12, (os_log_type_t)v16))
    {
      v6 = 0;
      goto LABEL_10;
    }
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A5B0000, v12, (os_log_type_t)v16, "no tracker to rtb", v15, 2u);
    v6 = 0;
    goto LABEL_8;
  }
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, (uint64_t)v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v5);
  v6 = v2;
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = *(_QWORD *)(v0 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + 64);
    v9 = sub_23A690F9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v7;
    sub_23A5D120C(v8, (uint64_t)&unk_25699FDF0, (uint64_t)v10);
    swift_release();
  }

  v11 = (uint64_t *)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 32));
  v12 = sub_23A690CFC();
  v13 = sub_23A691044();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = v7 != 0;
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 67109120;
    *(_DWORD *)(v0 + 136) = v14;
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v12, v13, "started RTB: %{BOOL}d", v15, 8u);
LABEL_8:
    MEMORY[0x23B853BD0](v15, -1, -1);
  }
LABEL_10:
  v17 = *v11;
  v18 = *(_QWORD *)(v0 + 32);
  v19 = *(_QWORD *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 96));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E74D0()
{
  return sub_23A5E74F4((uint64_t)&unk_250B74BA0, (uint64_t)&unk_250B74BC8, (uint64_t)&unk_25699ED00);
}

uint64_t sub_23A5E74F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A690F9C();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v3;
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  v12 = v3;
  if (v11 == 1)
  {
    sub_23A5C921C((uint64_t)v7, (uint64_t *)&unk_2542D27F0);
    v13 = 0;
    v14 = 0;
  }
  else
  {
    sub_23A690F90();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (v10[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_23A690F60();
      v14 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
  }
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = v10;
  if (v14 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    v18[2] = v13;
    v18[3] = v14;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23A5E76C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a4;
  v5 = sub_23A690D14();
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  v4[8] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E7788()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[12] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[13] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E77DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E78BC;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E78BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E7910()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E794C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (!v2)
  {
    v11 = (uint64_t *)(v0 + 48);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 32));
    v12 = sub_23A690CFC();
    v16 = sub_23A691044();
    if (!os_log_type_enabled(v12, (os_log_type_t)v16))
    {
      v6 = 0;
      goto LABEL_10;
    }
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A5B0000, v12, (os_log_type_t)v16, "no tracker to stop RTB", v15, 2u);
    v6 = 0;
    goto LABEL_8;
  }
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, (uint64_t)v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v5);
  v6 = v2;
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = *(_QWORD *)(v0 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + 64);
    v9 = sub_23A690F9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v7;
    sub_23A5D120C(v8, (uint64_t)&unk_25699FE00, (uint64_t)v10);
    swift_release();
  }

  v11 = (uint64_t *)(v0 + 56);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 32));
  v12 = sub_23A690CFC();
  v13 = sub_23A691044();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = v7 != 0;
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 67109120;
    *(_DWORD *)(v0 + 136) = v14;
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v12, v13, "stopped RTB: %{BOOL}d", v15, 8u);
LABEL_8:
    MEMORY[0x23B853BD0](v15, -1, -1);
  }
LABEL_10:
  v17 = *v11;
  v18 = *(_QWORD *)(v0 + 32);
  v19 = *(_QWORD *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 96));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E7C20(char a1)
{
  return sub_23A5E676C(a1, (uint64_t)&unk_250B74BF0, (uint64_t)&unk_250B74C18, (uint64_t)&unk_25699ED18);
}

uint64_t sub_23A5E7C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 124) = a5;
  *(_QWORD *)(v5 + 32) = a4;
  v6 = sub_23A690D14();
  *(_QWORD *)(v5 + 40) = v6;
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E7CB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[4];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[9] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[10] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E7D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E7DEC;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E7DEC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E7E40()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E7E7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  *(_QWORD *)(v0 + 96) = v2;
  if (v2)
  {
    v2;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v3;
    *v3 = v0;
    v3[1] = sub_23A5E7FD8;
    return sub_23A629DBC(*(_BYTE *)(v0 + 124));
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 16))(*(_QWORD *)(v0 + 64), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 40));
    v5 = sub_23A690CFC();
    v6 = sub_23A691044();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23A5B0000, v5, v6, "no tracker to flip180", v7, 2u);
      MEMORY[0x23B853BD0](v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    *(_QWORD *)(v0 + 112) = *(_QWORD *)(*(_QWORD *)(v0 + 32) + *(_QWORD *)(v0 + 72));
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_23A5E7FD8(char a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_BYTE *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 16) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E8034()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  void *v4;
  uint8_t *v5;
  NSObject *v6;

  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 16))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32) + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 40));
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(unsigned __int8 *)(v0 + 24);
    v4 = *(void **)(v0 + 96);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67109120;
    *(_DWORD *)(v0 + 120) = v3;
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v1, v2, "started flip180: %{BOOL}d", v5, 8u);
    MEMORY[0x23B853BD0](v5, -1, -1);

  }
  else
  {
    v6 = *(NSObject **)(v0 + 96);

    v1 = v6;
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(*(_QWORD *)(v0 + 32) + *(_QWORD *)(v0 + 72));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E816C()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5E8200(int a1, uint64_t a2, unint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  BOOL v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A690D14();
  v12 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)&v4[OBJC_IVAR___ObjectTrackingAgent_appID + 8];
  if (v16)
  {
    v17 = *(_QWORD *)&v4[OBJC_IVAR___ObjectTrackingAgent_appID] == a2 && v16 == a3;
    if (v17 || (result = sub_23A691518(), (result & 1) != 0))
    {
      v35 = a1;
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, &v4[OBJC_IVAR___ObjectTrackingAgent_logger], v11);
      swift_bridgeObjectRetain_n();
      v18 = sub_23A690CFC();
      v19 = sub_23A691044();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v34 = v10;
        v21 = v20;
        v33 = swift_slowAlloc();
        v37 = v33;
        *(_DWORD *)v21 = 136315394;
        swift_bridgeObjectRetain();
        v36 = sub_23A5EEB40(a2, a3, &v37);
        sub_23A6911D0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v21 + 12) = 1024;
        LODWORD(v36) = v35 & 1;
        sub_23A6911D0();
        _os_log_impl(&dword_23A5B0000, v18, v19, "tracking enable changed for %s: %{BOOL}d", (uint8_t *)v21, 0x12u);
        v22 = v33;
        swift_arrayDestroy();
        MEMORY[0x23B853BD0](v22, -1, -1);
        v23 = v21;
        v10 = v34;
        MEMORY[0x23B853BD0](v23, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      v24 = OBJC_IVAR___ObjectTrackingAgent__trackingEnabled;
      if (v4[OBJC_IVAR___ObjectTrackingAgent__trackingEnabled] == 1)
      {
        v25 = v35;
        if ((v35 & 1) == 0)
        {
          v26 = sub_23A690F9C();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
          v27 = (_QWORD *)swift_allocObject();
          v27[2] = 0;
          v27[3] = 0;
          v27[4] = v4;
          v28 = v4;
          sub_23A5D120C((uint64_t)v10, (uint64_t)&unk_25699ED40, (uint64_t)v27);
          result = swift_release();
          v28[OBJC_IVAR___ObjectTrackingAgent_setupOngoing] = 0;
          v28[OBJC_IVAR___ObjectTrackingAgent_setupComplete] = 0;
        }
      }
      else
      {
        v25 = v35;
        if ((v35 & 1) != 0)
        {
          v29 = sub_23A690F9C();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v10, 1, 1, v29);
          v30 = (_QWORD *)swift_allocObject();
          v30[2] = 0;
          v30[3] = 0;
          v30[4] = v4;
          v31 = v4;
          sub_23A5D120C((uint64_t)v10, (uint64_t)&unk_25699ED30, (uint64_t)v30);
          result = swift_release();
        }
      }
      v4[v24] = v25 & 1;
    }
  }
  return result;
}

uint64_t sub_23A5E8578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23A5E8590()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[3] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[4] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E85E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 40) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E86C4;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E86C4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E8718()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E8754()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  _QWORD *v7;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v0[6] = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v3 = *(void **)(v1 + v2);
  if (v3)
  {
    v4 = v3;
    sub_23A62101C();

    v5 = *(void **)(v1 + v2);
    if (v5)
    {
      v6 = v5;
      sub_23A5F4B18(0);

      if (*(_QWORD *)(v1 + v2))
      {
        v7 = (_QWORD *)swift_task_alloc();
        v0[7] = v7;
        *v7 = v0;
        v7[1] = sub_23A5E8838;
        return sub_23A5ECC5C();
      }
    }
    *(_QWORD *)(v0[2] + v0[6]) = 0;
    v1 = v0[2];
  }
  v0[8] = *(_QWORD *)(v1 + v0[3]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E8838()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E888C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0[6];
  v2 = v0[2];
  v3 = *(void **)(v2 + v1);
  *(_QWORD *)(v2 + v1) = 0;

  v0[8] = *(_QWORD *)(v0[2] + v0[3]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E8954(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A690D14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, (uint64_t)v2 + OBJC_IVAR___ObjectTrackingAgent_logger, v7);
  v11 = sub_23A690CFC();
  v12 = sub_23A691044();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v27 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = a1;
    v16 = a1;
    v17 = v14;
    v24 = a1;
    v25 = v2;
    v18 = 0xE900000000000063;
    v19 = 0x6974616D6F747541;
    switch(v15)
    {
      case 0:
        goto LABEL_7;
      case 1:
        v18 = 0xE600000000000000;
        v19 = 0x7265746E6543;
        goto LABEL_7;
      case 2:
        v18 = 0xE400000000000000;
        v19 = 1952867660;
        goto LABEL_7;
      case 3:
        v18 = 0xE500000000000000;
        v19 = 0x7468676952;
LABEL_7:
        v26 = sub_23A5EEB40(v19, v18, &v27);
        sub_23A6911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A5B0000, v11, v12, "Got framing mode config change: %s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B853BD0](v17, -1, -1);
        MEMORY[0x23B853BD0](v13, -1, -1);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        a1 = v24;
        v2 = v25;
        goto LABEL_8;
      default:
        v26 = v16;
        result = sub_23A69153C();
        __break(1u);
        return result;
    }
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_8:
  v20 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = 0;
  v21[3] = 0;
  v21[4] = v2;
  v21[5] = a1;
  v22 = v2;
  sub_23A5D120C((uint64_t)v6, (uint64_t)&unk_25699ED50, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_23A5E8C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  v5[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E8C8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[5] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[6] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E8CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E8DC0;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E8DC0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E8E14()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E8E50()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _BYTE *v7;

  v1 = v0[2];
  v2 = *(_BYTE **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  if (v2)
  {
    v4 = v0[3];
    v3 = v0[4];
    v2[OBJC_IVAR____TtC11DockKitCore13TrackingStand_userOverridedAspectRatio] = 1;
    v5 = sub_23A690F9C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v2;
    v6[5] = v4;
    v7 = v2;
    sub_23A5D120C(v3, (uint64_t)&unk_25699F058, (uint64_t)v6);
    swift_release();

    v1 = v0[2];
  }
  v0[8] = *(_QWORD *)(v1 + v0[5]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E8F3C()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5E8FC0(void *a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  NSObject *v24;
  id v25;
  id v26;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A690D14();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, (uint64_t)v3 + OBJC_IVAR___ObjectTrackingAgent_logger, v9);
  v13 = a1;
  v14 = a2;
  v15 = sub_23A690CFC();
  v16 = sub_23A691044();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (_DWORD *)swift_slowAlloc();
    v30 = v3;
    v18 = v17;
    *v17 = 134218240;
    v29 = v8;
    -[NSObject doubleValue](v13, sel_doubleValue);
    v31 = v19;
    sub_23A6911D0();

    *((_WORD *)v18 + 6) = 2048;
    objc_msgSend(v14, sel_doubleValue);
    v31 = v20;
    v8 = v29;
    sub_23A6911D0();

    _os_log_impl(&dword_23A5B0000, v15, v16, "Got request to select subject at: %f, %f", (uint8_t *)v18, 0x16u);
    v21 = v18;
    v3 = v30;
    MEMORY[0x23B853BD0](v21, -1, -1);
  }
  else
  {

    v15 = v13;
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v22 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 1, 1, v22);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = v3;
  v23[5] = v13;
  v23[6] = v14;
  v24 = v13;
  v25 = v14;
  v26 = v3;
  sub_23A5D120C((uint64_t)v8, (uint64_t)&unk_25699ED60, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_23A5E9228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[21] = a5;
  v6[22] = a6;
  v6[20] = a4;
  v7 = sub_23A690D14();
  v6[23] = v7;
  v6[24] = *(_QWORD *)(v7 - 8);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5E92A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[28] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[29] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5E92FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 240) = v5;
      *v5 = v0;
      v5[1] = sub_23A5E93DC;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5E93DC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5E9430()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5E946C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  _QWORD *v10;

  v1 = v0[20];
  v2 = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v0[31] = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v3 = *(void **)(v1 + v2);
  v0[32] = v3;
  if (v3)
  {
    v4 = (void *)v0[21];
    v5 = (void *)v0[22];
    v3;
    objc_msgSend(v4, sel_doubleValue);
    v7 = v6;
    objc_msgSend(v5, sel_doubleValue);
    v9 = v8;
    v10 = (_QWORD *)swift_task_alloc();
    v0[33] = v10;
    *v10 = v0;
    v10[1] = sub_23A5E9554;
    return sub_23A6222A0(v7, v9);
  }
  else
  {
    v0[39] = *(_QWORD *)(v1 + v0[28]);
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_23A5E9554()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_23A5E95C0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  id v4;

  v1 = v0[20];
  v2 = *(void **)(v1 + v0[31]);
  v0[35] = v2;
  if (v2)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent_appID);
    v0[36] = *v3;
    v0[37] = v3[1];
    swift_bridgeObjectRetain();
    v4 = v2;
  }
  else
  {
    v0[39] = *(_QWORD *)(v1 + v0[28]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5E9650()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)v0[36];
  v1 = v0[37];
  v3 = v0[35];
  v0[10] = v0;
  v0[11] = sub_23A5E96BC;
  v4 = swift_continuation_init();
  sub_23A5F8E74(v2, v1, 0, v3, v4);
  return swift_continuation_await();
}

uint64_t sub_23A5E96BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 304) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5E9728()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[35];
  swift_bridgeObjectRelease();

  v0[39] = *(_QWORD *)(v0[20] + v0[28]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E9784()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  void *v24;
  _QWORD *v25;
  id v26;
  id v27;
  NSObject *v28;
  uint64_t v29;
  _BOOL4 v30;
  void *v31;
  uint8_t *v32;

  v1 = (void *)v0[35];
  swift_bridgeObjectRelease();

  v2 = v0[20];
  v3 = (void *)v0[38];
  v4 = v0[27];
  v5 = v0[23];
  v6 = v0[24];
  v7 = OBJC_IVAR___ObjectTrackingAgent_logger;
  v0[40] = v3;
  v0[41] = v7;
  v8 = v2 + v7;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v0[42] = v9;
  v9(v4, v8, v5);
  v10 = v3;
  v11 = v3;
  v12 = sub_23A690CFC();
  v13 = sub_23A691038();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138412290;
    v16 = v3;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v17;
    sub_23A6911D0();
    *v15 = v17;

    _os_log_impl(&dword_23A5B0000, v12, v13, "Failed selecting subject %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v15, -1, -1);
    MEMORY[0x23B853BD0](v14, -1, -1);
  }
  else
  {

  }
  v18 = v0[31];
  v19 = v0[27];
  v20 = v0[23];
  v21 = v0[24];
  v22 = v0[20];

  v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v0[43] = v23;
  v23(v19, v20);
  v24 = *(void **)(v22 + v18);
  v0[44] = v24;
  if (v24)
  {
    v25 = (_QWORD *)(v0[20] + OBJC_IVAR___ObjectTrackingAgent_appID);
    v0[45] = *v25;
    v0[46] = v25[1];
    v26 = v3;
    swift_bridgeObjectRetain();
    v27 = v24;
  }
  else
  {
    ((void (*)(_QWORD, _QWORD, _QWORD))v0[42])(v0[26], v0[20] + v0[41], v0[23]);
    v28 = sub_23A690CFC();
    v29 = sub_23A691044();
    v30 = os_log_type_enabled(v28, (os_log_type_t)v29);
    v31 = (void *)v0[40];
    if (v30)
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23A5B0000, v28, (os_log_type_t)v29, "Notified daemon about response", v32, 2u);
      MEMORY[0x23B853BD0](v32, -1, -1);

    }
    else
    {

    }
    ((void (*)(_QWORD, _QWORD))v0[43])(v0[26], v0[23]);
    v0[39] = *(_QWORD *)(v0[20] + v0[28]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5E9A7C()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5E9ADC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)v0[45];
  v1 = v0[46];
  v3 = v0[44];
  v4 = v0[40];
  v0[2] = v0;
  v0[3] = sub_23A5E9B54;
  v5 = swift_continuation_init();
  sub_23A5F8E74(v2, v1, v4, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_23A5E9B54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 376) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5E9BC0()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  void *v5;
  uint8_t *v6;

  v1 = *(void **)(v0 + 352);

  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 336))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 184));
  v2 = sub_23A690CFC();
  v3 = sub_23A691044();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void **)(v0 + 320);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23A5B0000, v2, v3, "Notified daemon about response", v6, 2u);
    MEMORY[0x23B853BD0](v6, -1, -1);

  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 344))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 224));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5E9CE4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  _BOOL4 v29;
  void *v30;
  uint8_t *v31;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(void **)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = OBJC_IVAR___ObjectTrackingAgent_logger;
  *(_QWORD *)(v0 + 320) = v2;
  *(_QWORD *)(v0 + 328) = v6;
  v7 = v1 + v6;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(_QWORD *)(v0 + 336) = v8;
  v8(v3, v7, v4);
  v9 = v2;
  v10 = v2;
  v11 = sub_23A690CFC();
  v12 = sub_23A691038();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v15 = v2;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 152) = v16;
    sub_23A6911D0();
    *v14 = v16;

    _os_log_impl(&dword_23A5B0000, v11, v12, "Failed selecting subject %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v14, -1, -1);
    MEMORY[0x23B853BD0](v13, -1, -1);
  }
  else
  {

  }
  v17 = *(_QWORD *)(v0 + 248);
  v18 = *(_QWORD *)(v0 + 216);
  v19 = *(_QWORD *)(v0 + 184);
  v20 = *(_QWORD *)(v0 + 192);
  v21 = *(_QWORD *)(v0 + 160);

  v22 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  *(_QWORD *)(v0 + 344) = v22;
  v22(v18, v19);
  v23 = *(void **)(v21 + v17);
  *(_QWORD *)(v0 + 352) = v23;
  if (v23)
  {
    v24 = (_QWORD *)(*(_QWORD *)(v0 + 160) + OBJC_IVAR___ObjectTrackingAgent_appID);
    *(_QWORD *)(v0 + 360) = *v24;
    *(_QWORD *)(v0 + 368) = v24[1];
    v25 = v2;
    swift_bridgeObjectRetain();
    v26 = v23;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 336))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 184));
    v27 = sub_23A690CFC();
    v28 = sub_23A691044();
    v29 = os_log_type_enabled(v27, (os_log_type_t)v28);
    v30 = *(void **)(v0 + 320);
    if (v29)
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_23A5B0000, v27, (os_log_type_t)v28, "Notified daemon about response", v31, 2u);
      MEMORY[0x23B853BD0](v31, -1, -1);

    }
    else
    {

    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 344))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
    *(_QWORD *)(v0 + 312) = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 224));
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5E9FD4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  void *v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  void *v17;

  v1 = *(void **)(v0 + 376);
  v2 = *(void **)(v0 + 352);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 336);
  v4 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328);

  swift_bridgeObjectRelease();
  v3(v4, v6, v5);
  v7 = v1;
  v8 = v1;
  v9 = sub_23A690CFC();
  v10 = sub_23A691038();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 376);
    v12 = *(void **)(v0 + 320);
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v15 = v11;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v16;
    sub_23A6911D0();
    *v14 = v16;

    _os_log_impl(&dword_23A5B0000, v9, v10, "Failed reporting subject selection response: %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v14, -1, -1);
    MEMORY[0x23B853BD0](v13, -1, -1);

  }
  else
  {
    v17 = *(void **)(v0 + 376);

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 344))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 224));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EA23C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A690D14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, (uint64_t)v2 + OBJC_IVAR___ObjectTrackingAgent_logger, v7);
  swift_bridgeObjectRetain_n();
  v11 = sub_23A690CFC();
  v12 = sub_23A691044();
  if (os_log_type_enabled(v11, v12))
  {
    v27 = v7;
    v13 = swift_slowAlloc();
    v28 = v6;
    v14 = (uint8_t *)v13;
    v26 = swift_slowAlloc();
    v30 = v26;
    *(_DWORD *)v14 = 136315138;
    v25 = v14 + 4;
    v15 = swift_bridgeObjectRetain();
    v16 = MEMORY[0x23B852DA8](v15, MEMORY[0x24BEE0D00]);
    v18 = v17;
    swift_bridgeObjectRelease();
    v29 = sub_23A5EEB40(v16, v18, &v30);
    sub_23A6911D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A5B0000, v11, v12, "Got request to select subjects with ids : %s", v14, 0xCu);
    v19 = v26;
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v19, -1, -1);
    v20 = v14;
    v6 = v28;
    MEMORY[0x23B853BD0](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v21 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v2;
  v22[5] = a1;
  swift_bridgeObjectRetain();
  v23 = v2;
  sub_23A5D120C((uint64_t)v6, (uint64_t)&unk_25699ED70, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_23A5EA4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[20] = a4;
  v5[21] = a5;
  v6 = sub_23A690D14();
  v5[22] = v6;
  v5[23] = *(_QWORD *)(v6 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5EA564()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[27] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[28] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5EA5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 232) = v5;
      *v5 = v0;
      v5[1] = sub_23A5EA698;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5EA698()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5EA6EC()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5EA728()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v1 = v0[20];
  v2 = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v0[30] = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v3 = *(void **)(v1 + v2);
  v0[31] = v3;
  if (v3)
  {
    v3;
    v4 = (_QWORD *)swift_task_alloc();
    v0[32] = v4;
    *v4 = v0;
    v4[1] = sub_23A5EA7D4;
    return sub_23A62255C(v0[21]);
  }
  else
  {
    v0[38] = *(_QWORD *)(v1 + v0[27]);
    swift_retain();
    return swift_task_switch();
  }
}

uint64_t sub_23A5EA7D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_23A5EA840()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  id v4;

  v1 = v0[20];
  v2 = *(void **)(v1 + v0[30]);
  v0[34] = v2;
  if (v2)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR___ObjectTrackingAgent_appID);
    v0[35] = *v3;
    v0[36] = v3[1];
    swift_bridgeObjectRetain();
    v4 = v2;
  }
  else
  {
    v0[38] = *(_QWORD *)(v1 + v0[27]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5EA8D0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)v0[35];
  v1 = v0[36];
  v3 = v0[34];
  v0[10] = v0;
  v0[11] = sub_23A5EA93C;
  v4 = swift_continuation_init();
  sub_23A5F8E74(v2, v1, 0, v3, v4);
  return swift_continuation_await();
}

uint64_t sub_23A5EA93C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 296) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5EA9A8()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[34];
  swift_bridgeObjectRelease();

  v0[38] = *(_QWORD *)(v0[20] + v0[27]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EAA04()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  void *v24;
  _QWORD *v25;
  id v26;
  id v27;
  NSObject *v28;
  uint64_t v29;
  _BOOL4 v30;
  void *v31;
  uint8_t *v32;

  v1 = (void *)v0[34];
  swift_bridgeObjectRelease();

  v2 = v0[20];
  v3 = (void *)v0[37];
  v4 = v0[26];
  v5 = v0[22];
  v6 = v0[23];
  v7 = OBJC_IVAR___ObjectTrackingAgent_logger;
  v0[39] = v3;
  v0[40] = v7;
  v8 = v2 + v7;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v0[41] = v9;
  v9(v4, v8, v5);
  v10 = v3;
  v11 = v3;
  v12 = sub_23A690CFC();
  v13 = sub_23A691038();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138412290;
    v16 = v3;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v17;
    sub_23A6911D0();
    *v15 = v17;

    _os_log_impl(&dword_23A5B0000, v12, v13, "Failed selecting subject %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v15, -1, -1);
    MEMORY[0x23B853BD0](v14, -1, -1);
  }
  else
  {

  }
  v18 = v0[30];
  v19 = v0[26];
  v20 = v0[22];
  v21 = v0[23];
  v22 = v0[20];

  v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v0[42] = v23;
  v23(v19, v20);
  v24 = *(void **)(v22 + v18);
  v0[43] = v24;
  if (v24)
  {
    v25 = (_QWORD *)(v0[20] + OBJC_IVAR___ObjectTrackingAgent_appID);
    v0[44] = *v25;
    v0[45] = v25[1];
    v26 = v3;
    swift_bridgeObjectRetain();
    v27 = v24;
  }
  else
  {
    ((void (*)(_QWORD, _QWORD, _QWORD))v0[41])(v0[25], v0[20] + v0[40], v0[22]);
    v28 = sub_23A690CFC();
    v29 = sub_23A691044();
    v30 = os_log_type_enabled(v28, (os_log_type_t)v29);
    v31 = (void *)v0[39];
    if (v30)
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23A5B0000, v28, (os_log_type_t)v29, "Notified daemon about response", v32, 2u);
      MEMORY[0x23B853BD0](v32, -1, -1);

    }
    else
    {

    }
    ((void (*)(_QWORD, _QWORD))v0[42])(v0[25], v0[22]);
    v0[38] = *(_QWORD *)(v0[20] + v0[27]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5EACFC()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5EAD5C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)v0[44];
  v1 = v0[45];
  v3 = v0[43];
  v4 = v0[39];
  v0[2] = v0;
  v0[3] = sub_23A5EADD4;
  v5 = swift_continuation_init();
  sub_23A5F8E74(v2, v1, v4, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_23A5EADD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 368) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5EAE40()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  void *v5;
  uint8_t *v6;

  v1 = *(void **)(v0 + 344);

  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 328))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 176));
  v2 = sub_23A690CFC();
  v3 = sub_23A691044();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void **)(v0 + 312);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23A5B0000, v2, v3, "Notified daemon about response", v6, 2u);
    MEMORY[0x23B853BD0](v6, -1, -1);

  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 336))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 216));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EAF64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  _BOOL4 v29;
  void *v30;
  uint8_t *v31;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(void **)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = OBJC_IVAR___ObjectTrackingAgent_logger;
  *(_QWORD *)(v0 + 312) = v2;
  *(_QWORD *)(v0 + 320) = v6;
  v7 = v1 + v6;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(_QWORD *)(v0 + 328) = v8;
  v8(v3, v7, v4);
  v9 = v2;
  v10 = v2;
  v11 = sub_23A690CFC();
  v12 = sub_23A691038();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v15 = v2;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 152) = v16;
    sub_23A6911D0();
    *v14 = v16;

    _os_log_impl(&dword_23A5B0000, v11, v12, "Failed selecting subject %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v14, -1, -1);
    MEMORY[0x23B853BD0](v13, -1, -1);
  }
  else
  {

  }
  v17 = *(_QWORD *)(v0 + 240);
  v18 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 184);
  v21 = *(_QWORD *)(v0 + 160);

  v22 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  *(_QWORD *)(v0 + 336) = v22;
  v22(v18, v19);
  v23 = *(void **)(v21 + v17);
  *(_QWORD *)(v0 + 344) = v23;
  if (v23)
  {
    v24 = (_QWORD *)(*(_QWORD *)(v0 + 160) + OBJC_IVAR___ObjectTrackingAgent_appID);
    *(_QWORD *)(v0 + 352) = *v24;
    *(_QWORD *)(v0 + 360) = v24[1];
    v25 = v2;
    swift_bridgeObjectRetain();
    v26 = v23;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 328))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 176));
    v27 = sub_23A690CFC();
    v28 = sub_23A691044();
    v29 = os_log_type_enabled(v27, (os_log_type_t)v28);
    v30 = *(void **)(v0 + 312);
    if (v29)
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_23A5B0000, v27, (os_log_type_t)v28, "Notified daemon about response", v31, 2u);
      MEMORY[0x23B853BD0](v31, -1, -1);

    }
    else
    {

    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 336))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
    *(_QWORD *)(v0 + 304) = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 216));
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5EB254()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  void *v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  void *v17;

  v1 = *(void **)(v0 + 368);
  v2 = *(void **)(v0 + 344);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 328);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 320);

  swift_bridgeObjectRelease();
  v3(v4, v6, v5);
  v7 = v1;
  v8 = v1;
  v9 = sub_23A690CFC();
  v10 = sub_23A691038();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 368);
    v12 = *(void **)(v0 + 312);
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v15 = v11;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v16;
    sub_23A6911D0();
    *v14 = v16;

    _os_log_impl(&dword_23A5B0000, v9, v10, "Failed reporting subject selection response: %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v14, -1, -1);
    MEMORY[0x23B853BD0](v13, -1, -1);

  }
  else
  {
    v17 = *(void **)(v0 + 368);

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 336))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 216));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EB4C8(double a1, double a2, double a3, double a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23A690D14();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, (uint64_t)v5 + OBJC_IVAR___ObjectTrackingAgent_logger, v13);
  v17 = sub_23A690CFC();
  v18 = sub_23A691044();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v33 = v5;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v32 = v12;
    v22 = v21;
    *(_DWORD *)v20 = 136315138;
    v38 = v21;
    v34 = *(_QWORD *)&a1;
    v35 = a2;
    v36 = a3;
    v37 = a4;
    type metadata accessor for CGRect(0);
    v23 = sub_23A690E58();
    v34 = sub_23A5EEB40(v23, v24, &v38);
    sub_23A6911D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A5B0000, v17, v18, "Got request to set ROI to %s", v20, 0xCu);
    swift_arrayDestroy();
    v25 = v22;
    v12 = v32;
    MEMORY[0x23B853BD0](v25, -1, -1);
    v26 = v20;
    v5 = v33;
    MEMORY[0x23B853BD0](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v27 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v12, 1, 1, v27);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0;
  *(_QWORD *)(v28 + 24) = 0;
  *(_QWORD *)(v28 + 32) = v5;
  *(double *)(v28 + 40) = a1;
  *(double *)(v28 + 48) = a2;
  *(double *)(v28 + 56) = a3;
  *(double *)(v28 + 64) = a4;
  v29 = v5;
  sub_23A5D120C((uint64_t)v12, (uint64_t)&unk_25699ED80, v28);
  return swift_release();
}

uint64_t sub_23A5EB748(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(double *)(v8 + 184) = a3;
  *(double *)(v8 + 192) = a4;
  *(double *)(v8 + 168) = a1;
  *(double *)(v8 + 176) = a2;
  *(_QWORD *)(v8 + 160) = a8;
  v9 = sub_23A690D14();
  *(_QWORD *)(v8 + 200) = v9;
  *(_QWORD *)(v8 + 208) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  *(_QWORD *)(v8 + 232) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5EB7F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[31] = OBJC_IVAR___ObjectTrackingAgent_trackerLock;
  v0[32] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A5EB844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 264) = v5;
      *v5 = v0;
      v5[1] = sub_23A5EB924;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A5EB924()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5EB978()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5EB9B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = OBJC_IVAR___ObjectTrackingAgent_tracker;
  *(_QWORD *)(v0 + 272) = OBJC_IVAR___ObjectTrackingAgent_tracker;
  v3 = *(_BYTE **)(v1 + v2);
  if (!v3)
    goto LABEL_4;
  v4 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v15 = *(_OWORD *)(v0 + 168);
  v3[OBJC_IVAR____TtC11DockKitCore13TrackingStand_userOverridedAspectRatio] = 1;
  v7 = sub_23A690F9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = v3;
  *(_OWORD *)(v8 + 40) = v15;
  *(_QWORD *)(v8 + 56) = v6;
  *(_QWORD *)(v8 + 64) = v5;
  v9 = v3;
  sub_23A5D120C(v4, (uint64_t)&unk_25699F050, v8);
  swift_release();

  v10 = *(void **)(v1 + v2);
  *(_QWORD *)(v0 + 280) = v10;
  v1 = *(_QWORD *)(v0 + 160);
  if (v10)
  {
    v11 = OBJC_IVAR___ObjectTrackingAgent_appID;
    *(_QWORD *)(v0 + 288) = OBJC_IVAR___ObjectTrackingAgent_appID;
    v12 = (_QWORD *)(v1 + v11);
    *(_QWORD *)(v0 + 296) = *v12;
    *(_QWORD *)(v0 + 304) = v12[1];
    swift_bridgeObjectRetain();
    v13 = v10;
  }
  else
  {
LABEL_4:
    *(_QWORD *)(v0 + 320) = *(_QWORD *)(v1 + *(_QWORD *)(v0 + 248));
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5EBB10()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)v0[37];
  v1 = v0[38];
  v3 = v0[35];
  v0[2] = v0;
  v0[3] = sub_23A5EBB7C;
  v4 = swift_continuation_init();
  sub_23A5F96F4(v2, v1, 0, v3, v4);
  return swift_continuation_await();
}

uint64_t sub_23A5EBB7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 312) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5EBBE8()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[35];
  swift_bridgeObjectRelease();

  v0[40] = *(_QWORD *)(v0[20] + v0[31]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EBC44()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5EBCB4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  void *v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  void *v26;
  void *v27;
  _QWORD *v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  void *v34;
  uint8_t *v35;

  v1 = v0[20];
  v2 = (void *)v0[39];
  v3 = (void *)v0[35];
  v4 = v0[29];
  v5 = v0[25];
  v6 = v0[26];
  swift_bridgeObjectRelease();

  v7 = OBJC_IVAR___ObjectTrackingAgent_logger;
  v0[41] = OBJC_IVAR___ObjectTrackingAgent_logger;
  v8 = v1 + v7;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v0[42] = v9;
  v9(v4, v8, v5);
  v10 = v2;
  v11 = v2;
  v12 = sub_23A690CFC();
  v13 = sub_23A691038();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (void *)v0[39];
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v15 = 138412290;
    v17 = v14;
    v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v18;
    sub_23A6911D0();
    *v16 = v18;

    _os_log_impl(&dword_23A5B0000, v12, v13, "Failed setting ROI %@", v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v16, -1, -1);
    MEMORY[0x23B853BD0](v15, -1, -1);
  }
  else
  {
    v19 = (void *)v0[39];

  }
  v20 = v0[34];
  v21 = v0[29];
  v22 = v0[25];
  v23 = v0[26];
  v24 = v0[20];

  v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v0[43] = v25;
  v25(v21, v22);
  v26 = *(void **)(v24 + v20);
  v0[44] = v26;
  if (v26)
  {
    v27 = (void *)v0[39];
    v28 = (_QWORD *)(v0[20] + v0[36]);
    v0[45] = *v28;
    v0[46] = v28[1];
    v29 = v27;
    swift_bridgeObjectRetain();
    v30 = v26;
  }
  else
  {
    ((void (*)(_QWORD, _QWORD, _QWORD))v0[42])(v0[28], v0[20] + v0[41], v0[25]);
    v31 = sub_23A690CFC();
    v32 = sub_23A691044();
    v33 = os_log_type_enabled(v31, v32);
    v34 = (void *)v0[39];
    if (v33)
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_23A5B0000, v31, v32, "Notified daemon about response", v35, 2u);
      MEMORY[0x23B853BD0](v35, -1, -1);

    }
    else
    {

    }
    ((void (*)(_QWORD, _QWORD))v0[43])(v0[28], v0[25]);
    v0[40] = *(_QWORD *)(v0[20] + v0[31]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A5EBFB4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)v0[45];
  v1 = v0[46];
  v3 = v0[44];
  v4 = v0[39];
  v0[10] = v0;
  v0[11] = sub_23A5EC02C;
  v5 = swift_continuation_init();
  sub_23A5F96F4(v2, v1, v4, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_23A5EC02C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 376) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5EC098()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  void *v5;
  uint8_t *v6;

  v1 = *(void **)(v0 + 352);

  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 336))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 200));
  v2 = sub_23A690CFC();
  v3 = sub_23A691044();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(void **)(v0 + 312);
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23A5B0000, v2, v3, "Notified daemon about response", v6, 2u);
    MEMORY[0x23B853BD0](v6, -1, -1);

  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 344))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200));
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 248));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EC1BC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  void *v12;
  uint8_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  void *v17;

  v1 = *(void **)(v0 + 376);
  v2 = *(void **)(v0 + 352);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 336);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328);

  swift_bridgeObjectRelease();
  v3(v4, v6, v5);
  v7 = v1;
  v8 = v1;
  v9 = sub_23A690CFC();
  v10 = sub_23A691038();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 376);
    v12 = *(void **)(v0 + 312);
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v15 = v11;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v16;
    sub_23A6911D0();
    *v14 = v16;

    _os_log_impl(&dword_23A5B0000, v9, v10, "Failed reporting ROI set response: %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v14, -1, -1);
    MEMORY[0x23B853BD0](v13, -1, -1);

  }
  else
  {
    v17 = *(void **)(v0 + 376);

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 344))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 248));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EC430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  void (*v26)(char *, uint64_t);
  char v27;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58[2];
  uint64_t v59;
  uint64_t v60;

  v1 = sub_23A690D14();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v49 - v5;
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v49 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v49 - v10;
  sub_23A690594();
  swift_allocObject();
  sub_23A690588();
  sub_23A5CA474();
  sub_23A69057C();
  swift_release();
  v12 = v59;
  v56 = BYTE1(v59);
  v13 = v60;
  v57 = v0;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v53 = v0 + OBJC_IVAR___ObjectTrackingAgent_logger;
  v54 = v14;
  ((void (*)(char *))v14)(v11);
  swift_bridgeObjectRetain_n();
  v15 = sub_23A690CFC();
  v16 = sub_23A691044();
  v17 = os_log_type_enabled(v15, v16);
  v55 = v12;
  if (v17)
  {
    v52 = v1;
    v18 = swift_slowAlloc();
    v50 = v9;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v49 = v20;
    *(_DWORD *)v19 = 136315138;
    v58[0] = v20;
    v51 = v6;
    LOBYTE(v59) = v12;
    v21 = v56;
    BYTE1(v59) = v56;
    v60 = v13;
    swift_bridgeObjectRetain();
    v22 = sub_23A690E58();
    v59 = sub_23A5EEB40(v22, v23, v58);
    v6 = v51;
    sub_23A6911D0();
    v1 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23A5B0000, v15, v16, "Got request to send command: %s", v19, 0xCu);
    v24 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v24, -1, -1);
    v25 = v19;
    v9 = v50;
    MEMORY[0x23B853BD0](v25, -1, -1);

    v26 = *(void (**)(char *, uint64_t))(v2 + 8);
    v26(v11, v1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v26 = *(void (**)(char *, uint64_t))(v2 + 8);
    v26(v11, v1);
    v21 = v56;
  }
  if (!*(_QWORD *)(v13 + 16))
  {
    v54(v6, v53, v1);
    swift_bridgeObjectRetain();
    v29 = sub_23A690CFC();
    v30 = sub_23A691038();
    if (os_log_type_enabled(v29, v30))
    {
      v51 = v6;
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v33 = v21;
      v34 = v32;
      v52 = v1;
      *(_DWORD *)v31 = 136315138;
      v58[0] = v32;
      LOBYTE(v59) = v55;
      BYTE1(v59) = v33;
      v60 = v13;
      swift_bridgeObjectRetain();
      v35 = sub_23A690E58();
      v59 = sub_23A5EEB40(v35, v36, v58);
      sub_23A6911D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A5B0000, v29, v30, "No trajectory found in trajectory command: %s ", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v34, -1, -1);
      MEMORY[0x23B853BD0](v31, -1, -1);

      v37 = v51;
      v38 = v52;
      return ((uint64_t (*)(char *, uint64_t))v26)(v37, v38);
    }
    swift_bridgeObjectRelease_n();

    v37 = v6;
LABEL_16:
    v38 = v1;
    return ((uint64_t (*)(char *, uint64_t))v26)(v37, v38);
  }
  v27 = v55;
  if (v55 != 8)
  {
    if (v55 == 1)
    {
      swift_bridgeObjectRelease();
      return sub_23A5E6F54();
    }
    v54(v9, v53, v1);
    swift_bridgeObjectRetain();
    v41 = sub_23A690CFC();
    v42 = sub_23A691038();
    if (os_log_type_enabled(v41, v42))
    {
      v50 = v9;
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v45 = v21;
      v46 = v44;
      v52 = v1;
      *(_DWORD *)v43 = 136315138;
      v58[0] = v44;
      LOBYTE(v59) = v27;
      BYTE1(v59) = v45;
      v60 = v13;
      swift_bridgeObjectRetain();
      v47 = sub_23A690E58();
      v59 = sub_23A5EEB40(v47, v48, v58);
      sub_23A6911D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A5B0000, v41, v42, "command: %s not currently handled", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v46, -1, -1);
      MEMORY[0x23B853BD0](v43, -1, -1);

      v37 = v50;
      v38 = v52;
      return ((uint64_t (*)(_QWORD, _QWORD))v26)(v37, v38);
    }
    swift_bridgeObjectRelease_n();

    v37 = v9;
    goto LABEL_16;
  }
  v39 = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v39 + 16))
    return swift_bridgeObjectRelease();
  v40 = *(double *)(v39 + 40);
  swift_bridgeObjectRelease();
  return sub_23A5E7C20(v40 > 0.0);
}

uint64_t sub_23A5ECC5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[120] = v0;
  v2 = sub_23A6906D8();
  v1[121] = v2;
  v1[122] = *(_QWORD *)(v2 - 8);
  v1[123] = swift_task_alloc();
  v3 = sub_23A690744();
  v1[124] = v3;
  v1[125] = *(_QWORD *)(v3 - 8);
  v1[126] = swift_task_alloc();
  v4 = sub_23A69075C();
  v1[127] = v4;
  v1[128] = *(_QWORD *)(v4 - 8);
  v1[129] = swift_task_alloc();
  v5 = sub_23A690D14();
  v1[130] = v5;
  v1[131] = *(_QWORD *)(v5 - 8);
  v1[132] = swift_task_alloc();
  v1[133] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5ECD44()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  char *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  id v28;
  unint64_t v29;
  id v30;
  double v31;
  id v32;
  int v33;
  id v34;
  double v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  void *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _OWORD *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  void *v72;
  _OWORD *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  void *v78;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  os_log_type_t typea;
  os_log_type_t type[8];
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;

  v1 = *(_QWORD *)(v0 + 960);
  v2 = *(void **)(v1 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  v3 = *(_QWORD *)(v0 + 1048);
  v4 = *(_QWORD *)(v0 + 1040);
  if (v2)
  {
    v88 = v0 + 384;
    v5 = *(_QWORD *)(v0 + 1064);
    v6 = v2;
    swift_retain();
    v7 = (void *)sub_23A681EE4();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR___ObjectTrackingAgent_logger, v4);
    v8 = v6;
    v9 = v7;
    v10 = (char *)v8;
    v11 = v9;
    v12 = sub_23A690CFC();
    v13 = sub_23A691044();
    v87 = v10;
    if (os_log_type_enabled(v12, v13))
    {
      typea = v13;
      v14 = v10;
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412546;
      *(_QWORD *)(v0 + 944) = v11;
      v17 = v11;
      sub_23A6911D0();
      *v16 = v11;

      *(_WORD *)(v15 + 12) = 2112;
      v18 = *(void **)&v10[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
      *(_QWORD *)(v0 + 952) = v18;
      v19 = v18;
      sub_23A6911D0();
      v16[1] = v18;

      _os_log_impl(&dword_23A5B0000, v12, typea, "sending usage metric: dumped tracker diagnostics %@ for device %@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v16, -1, -1);
      MEMORY[0x23B853BD0](v15, -1, -1);
    }
    else
    {

    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1048) + 8))(*(_QWORD *)(v0 + 1064), *(_QWORD *)(v0 + 1040));
    strcpy((char *)(v0 + 848), "activeCamera");
    *(_BYTE *)(v0 + 861) = 0;
    *(_WORD *)(v0 + 862) = -5120;
    v90 = v11;
    v26 = objc_msgSend(v11, sel___swift_objectForKeyedSubscript_, sub_23A691548());
    swift_unknownObjectRelease();
    if (v26)
    {
      sub_23A6911F4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 320) = 0u;
      *(_OWORD *)(v0 + 336) = 0u;
    }
    sub_23A5F26D8(v0 + 320, v88);
    if (*(_QWORD *)(v0 + 408))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v86 = *(_QWORD *)(v0 + 880);
        v27 = *(_QWORD *)(v0 + 888);
        goto LABEL_16;
      }
    }
    else
    {
      sub_23A5C921C(v88, &qword_2569A0330);
    }
    v86 = 0x6E776F6E6B6E7528;
    v27 = 0xE900000000000029;
LABEL_16:
    *(_QWORD *)type = v27;
    *(_QWORD *)(v0 + 864) = 0xD000000000000011;
    *(_QWORD *)(v0 + 872) = 0x800000023A69D150;
    v28 = objc_msgSend(v11, sel___swift_objectForKeyedSubscript_, sub_23A691548());
    swift_unknownObjectRelease();
    if (v28)
    {
      sub_23A6911F4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 416) = 0u;
      *(_OWORD *)(v0 + 432) = 0u;
    }
    sub_23A5F26D8(v0 + 416, v0 + 352);
    if (*(_QWORD *)(v0 + 376))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v83 = *(_QWORD *)(v0 + 896);
        v29 = *(_QWORD *)(v0 + 904);
        goto LABEL_24;
      }
    }
    else
    {
      sub_23A5C921C(v0 + 352, &qword_2569A0330);
    }
    v83 = 0x6E776F6E6B6E7528;
    v29 = 0xE900000000000029;
LABEL_24:
    v82 = v29;
    *(_QWORD *)(v0 + 832) = 0x64657370616C65;
    *(_QWORD *)(v0 + 840) = 0xE700000000000000;
    v30 = objc_msgSend(v11, sel___swift_objectForKeyedSubscript_, sub_23A691548());
    swift_unknownObjectRelease();
    if (v30)
    {
      sub_23A6911F4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 512) = 0u;
      *(_OWORD *)(v0 + 528) = 0u;
    }
    sub_23A5F26D8(v0 + 512, v0 + 448);
    if (*(_QWORD *)(v0 + 472))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v31 = *(double *)(v0 + 920);
        goto LABEL_32;
      }
    }
    else
    {
      sub_23A5C921C(v0 + 448, &qword_2569A0330);
    }
    v31 = 0.0;
LABEL_32:
    *(_QWORD *)(v0 + 800) = 0xD000000000000012;
    *(_QWORD *)(v0 + 808) = 0x800000023A69D170;
    v32 = objc_msgSend(v11, sel___swift_objectForKeyedSubscript_, sub_23A691548());
    swift_unknownObjectRelease();
    if (v32)
    {
      sub_23A6911F4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 608) = 0u;
      *(_OWORD *)(v0 + 624) = 0u;
    }
    sub_23A5F26D8(v0 + 608, v0 + 544);
    if (*(_QWORD *)(v0 + 568))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v33 = *(_DWORD *)(v0 + 1072);
        goto LABEL_40;
      }
    }
    else
    {
      sub_23A5C921C(v0 + 544, &qword_2569A0330);
    }
    v33 = 0;
LABEL_40:
    *(_QWORD *)(v0 + 784) = 0xD000000000000015;
    *(_QWORD *)(v0 + 792) = 0x800000023A69D190;
    v34 = objc_msgSend(v11, sel___swift_objectForKeyedSubscript_, sub_23A691548());
    swift_unknownObjectRelease();
    if (v34)
    {
      sub_23A6911F4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 704) = 0u;
      *(_OWORD *)(v0 + 720) = 0u;
    }
    sub_23A5F26D8(v0 + 704, v0 + 640);
    if (*(_QWORD *)(v0 + 664))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v35 = *(double *)(v0 + 912);
        goto LABEL_48;
      }
    }
    else
    {
      sub_23A5C921C(v0 + 640, &qword_2569A0330);
    }
    v35 = 0.0;
LABEL_48:
    *(_QWORD *)(v0 + 768) = 0xD000000000000017;
    *(_QWORD *)(v0 + 776) = 0x800000023A69D1B0;
    v36 = objc_msgSend(v11, sel___swift_objectForKeyedSubscript_, sub_23A691548());
    swift_unknownObjectRelease();
    if (v36)
    {
      sub_23A6911F4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 672) = 0u;
      *(_OWORD *)(v0 + 688) = 0u;
    }
    sub_23A5F26D8(v0 + 672, v0 + 736);
    if (*(_QWORD *)(v0 + 760))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v81 = *(_QWORD *)(v0 + 928);
        goto LABEL_56;
      }
    }
    else
    {
      sub_23A5C921C(v0 + 736, &qword_2569A0330);
    }
    v81 = 0;
LABEL_56:
    *(_QWORD *)(v0 + 816) = 0xD000000000000019;
    *(_QWORD *)(v0 + 824) = 0x800000023A69D1D0;
    v37 = objc_msgSend(v11, sel___swift_objectForKeyedSubscript_, sub_23A691548());
    swift_unknownObjectRelease();
    if (v37)
    {
      sub_23A6911F4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 480) = 0u;
      *(_OWORD *)(v0 + 496) = 0u;
    }
    sub_23A5F26D8(v0 + 480, v0 + 576);
    if (*(_QWORD *)(v0 + 600))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v80 = *(_QWORD *)(v0 + 936);
LABEL_64:
        v38 = *(_QWORD *)(v0 + 1032);
        v39 = *(_QWORD *)(v0 + 1024);
        v89 = *(_QWORD *)(v0 + 1016);
        v40 = *(_QWORD *)(v0 + 1008);
        v41 = *(_QWORD *)(v0 + 1000);
        v42 = *(_QWORD *)(v0 + 992);
        v43 = *(_QWORD *)(v0 + 984);
        v44 = *(_QWORD *)(v0 + 976);
        v45 = *(_QWORD *)(v0 + 968);
        sub_23A690738();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104))(v40, *MEMORY[0x24BDCF230], v42);
        sub_23A6906CC();
        v46 = sub_23A690750();
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v89);
        if ((unint64_t)(v46 - 13) > 0xFFFFFFFFFFFFFFF7)
        {
          v57 = 0;
          v47 = v86;
          v48 = v87;
          v49 = (_QWORD *)(v0 + 960);
          v50 = v90;
          v51 = 0xE900000000000029;
          v53 = v83;
          v52 = *(_QWORD *)type;
          v55 = v81;
          v54 = v82;
          v56 = v80;
        }
        else
        {
          v47 = v86;
          v48 = v87;
          v49 = (_QWORD *)(v0 + 960);
          v50 = v90;
          v51 = 0xE900000000000029;
          v53 = v83;
          v52 = *(_QWORD *)type;
          v55 = v81;
          v54 = v82;
          v56 = v80;
          if ((unint64_t)(v46 - 18) > 0xFFFFFFFFFFFFFFFALL)
          {
            v57 = 1;
          }
          else
          {
            v57 = 2;
            if ((unint64_t)(v46 - 22) < 0xFFFFFFFFFFFFFFFCLL)
              v57 = 3;
          }
        }
        v58 = (uint64_t *)(*v49 + OBJC_IVAR___ObjectTrackingAgent_appID);
        v59 = v58[1];
        if (v59)
        {
          v60 = *v58;
          v61 = v59;
        }
        else
        {
          v60 = 0x6E776F6E6B6E7528;
          v61 = 0xE900000000000029;
        }
        if (*(_QWORD *)&v48[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion + 8])
        {
          v62 = *(_QWORD *)&v48[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion];
          v63 = *(_QWORD *)&v48[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion + 8];
        }
        else
        {
          v62 = 0x6E776F6E6B6E7528;
          v63 = 0xE900000000000029;
        }
        v64 = (_OWORD *)(v0 + 16);
        if (*(_QWORD *)&v48[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model + 8])
        {
          v65 = *(_QWORD *)&v48[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model];
          v51 = *(_QWORD *)&v48[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model + 8];
        }
        else
        {
          v65 = 0x6E776F6E6B6E7528;
        }
        *(_QWORD *)(v0 + 144) = v60;
        *(_QWORD *)(v0 + 152) = v61;
        *(_QWORD *)(v0 + 160) = v47;
        *(_QWORD *)(v0 + 168) = v52;
        *(double *)(v0 + 176) = v31;
        *(_QWORD *)(v0 + 184) = v62;
        *(_QWORD *)(v0 + 192) = v63;
        *(_QWORD *)(v0 + 200) = v65;
        *(_QWORD *)(v0 + 208) = v51;
        *(_DWORD *)(v0 + 216) = v33;
        *(_QWORD *)(v0 + 224) = v53;
        *(_QWORD *)(v0 + 232) = v54;
        *(_QWORD *)(v0 + 240) = v55;
        *(double *)(v0 + 248) = v31 * v35;
        *(_QWORD *)(v0 + 256) = v56;
        *(_QWORD *)(v0 + 264) = v57;
        v66 = *(_OWORD *)(v0 + 144);
        v67 = *(_OWORD *)(v0 + 160);
        v68 = *(_OWORD *)(v0 + 192);
        *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
        *(_OWORD *)(v0 + 64) = v68;
        *v64 = v66;
        *(_OWORD *)(v0 + 32) = v67;
        v69 = *(_OWORD *)(v0 + 208);
        v70 = *(_OWORD *)(v0 + 224);
        v71 = *(_OWORD *)(v0 + 256);
        *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
        *(_OWORD *)(v0 + 128) = v71;
        *(_OWORD *)(v0 + 80) = v69;
        *(_OWORD *)(v0 + 96) = v70;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v72 = (void *)sub_23A690E04();
        v73 = (_OWORD *)swift_allocObject();
        v74 = *(_OWORD *)(v0 + 96);
        v73[5] = *(_OWORD *)(v0 + 80);
        v73[6] = v74;
        v75 = *(_OWORD *)(v0 + 128);
        v73[7] = *(_OWORD *)(v0 + 112);
        v73[8] = v75;
        v76 = *(_OWORD *)(v0 + 32);
        v73[1] = *v64;
        v73[2] = v76;
        v77 = *(_OWORD *)(v0 + 64);
        v73[3] = *(_OWORD *)(v0 + 48);
        v73[4] = v77;
        *(_QWORD *)(v0 + 304) = sub_23A5B3944;
        *(_QWORD *)(v0 + 312) = v73;
        *(_QWORD *)(v0 + 272) = MEMORY[0x24BDAC760];
        *(_QWORD *)(v0 + 280) = 1107296256;
        *(_QWORD *)(v0 + 288) = sub_23A5B394C;
        *(_QWORD *)(v0 + 296) = &block_descriptor_580;
        v78 = _Block_copy((const void *)(v0 + 272));
        sub_23A5B39C8(v0 + 144);
        swift_release();
        AnalyticsSendEventLazy();
        _Block_release(v78);

        sub_23A5F2764(v0 + 144);
        goto LABEL_81;
      }
    }
    else
    {
      sub_23A5C921C(v0 + 576, &qword_2569A0330);
    }
    v80 = 0;
    goto LABEL_64;
  }
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v3 + 16))(*(_QWORD *)(v0 + 1056), v1 + OBJC_IVAR___ObjectTrackingAgent_logger, *(_QWORD *)(v0 + 1040));
  v20 = sub_23A690CFC();
  v21 = sub_23A691044();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_23A5B0000, v20, v21, "no tracker, can't fetch diagnostics", v22, 2u);
    MEMORY[0x23B853BD0](v22, -1, -1);
  }
  v23 = *(_QWORD *)(v0 + 1056);
  v24 = *(_QWORD *)(v0 + 1048);
  v25 = *(_QWORD *)(v0 + 1040);

  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
LABEL_81:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5EDB04(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23A5F28DC;
  return sub_23A5ECC5C();
}

uint64_t sub_23A5EDB64()
{
  return sub_23A5E74F4((uint64_t)&unk_250B75848, (uint64_t)&unk_250B75870, (uint64_t)&unk_25699F0D8);
}

uint64_t sub_23A5EDB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a4;
  v5 = sub_23A690D14();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  v6 = sub_23A6906D8();
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A5EDC3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = OBJC_IVAR___ObjectTrackingAgent_trackingSummaryLock;
  v0[15] = OBJC_IVAR___ObjectTrackingAgent_trackingSummaryLock;
  v0[16] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EDC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = v2 < 1;
  v4 = v2 - 1;
  if (v3)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    swift_release();
    return swift_task_switch();
  }
}

uint64_t sub_23A5EDD30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[11];
  v4 = v0[12];
  v5 = v0[5];
  sub_23A6906B4();
  v6 = v5 + OBJC_IVAR___ObjectTrackingAgent_lastSummaryPublishTime;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v6, v3);
  sub_23A690678();
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v2, v3);
  v9(v1, v3);
  if (v8 <= 0.05)
  {
LABEL_12:
    v0[30] = *(_QWORD *)(v0[5] + v0[15]);
    swift_retain();
    return swift_task_switch();
  }
  v10 = v0[14];
  v11 = v0[11];
  v12 = v0[12];
  v13 = v0[5];
  sub_23A6906B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v6, v10, v11);
  v14 = *(void **)(v13 + OBJC_IVAR___ObjectTrackingAgent_tracker);
  v0[17] = v14;
  if (v14)
  {
    if ((*(_BYTE *)(v0[5] + OBJC_IVAR___ObjectTrackingAgent_debugEnabled) & 1) != 0)
    {
      swift_retain();
      v15 = v14;
      sub_23A690A50();
      swift_release();
      v16 = v0[4];
      v0[19] = v16;
      if (!v16)
      {
        (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[7] + 16))(v0[10], v0[5] + OBJC_IVAR___ObjectTrackingAgent_logger, v0[6]);
        v26 = sub_23A690CFC();
        v27 = sub_23A691044();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v28 = 0;
          _os_log_impl(&dword_23A5B0000, v26, v27, "no summary", v28, 2u);
          MEMORY[0x23B853BD0](v28, -1, -1);
        }
        v29 = v0[15];
        v30 = v0[10];
        v31 = v0[6];
        v32 = v0[7];
        v33 = v0[5];

        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
        v0[23] = *(_QWORD *)(v33 + v29);
        swift_retain();
        return swift_task_switch();
      }
      v17 = *(void **)(v0[5] + OBJC_IVAR___ObjectTrackingAgent_manager);
      v0[20] = v17;
      if (v17)
      {
        v17;
        v18 = (_QWORD *)swift_task_alloc();
        v0[21] = v18;
        *v18 = v0;
        v18[1] = sub_23A5EE228;
        return DockCoreManager.updateTrackingSummaryDebug(summary:)(v16);
      }
    }
    else
    {
      v20 = v14;
      swift_retain();
      sub_23A690A50();
      swift_release();
      v21 = v0[2];
      v0[24] = v21;
      if (!v21)
      {
        (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[7] + 16))(v0[9], v0[5] + OBJC_IVAR___ObjectTrackingAgent_logger, v0[6]);
        v34 = sub_23A690CFC();
        v35 = sub_23A691044();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v36 = 0;
          _os_log_impl(&dword_23A5B0000, v34, v35, "no summary", v36, 2u);
          MEMORY[0x23B853BD0](v36, -1, -1);
        }
        v37 = v0[15];
        v38 = v0[9];
        v39 = v0[6];
        v40 = v0[7];
        v41 = v0[5];

        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
        v0[29] = *(_QWORD *)(v41 + v37);
        swift_retain();
        return swift_task_switch();
      }
      v22 = *(void **)(v0[5] + OBJC_IVAR___ObjectTrackingAgent_manager);
      v0[25] = v22;
      if (v22)
      {
        v23 = v22;
        v24 = swift_task_alloc();
        v0[26] = v24;
        *(_QWORD *)(v24 + 16) = v21;
        *(_QWORD *)(v24 + 24) = v23;
        v25 = (_QWORD *)swift_task_alloc();
        v0[27] = v25;
        *v25 = v0;
        v25[1] = sub_23A5EE334;
        return sub_23A691530();
      }
    }
    swift_release();

    goto LABEL_12;
  }
  v0[18] = *(_QWORD *)(v0[5] + v0[15]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EE1B8()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5EE228()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_23A5EE294()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[17];
  swift_release();

  v0[30] = *(_QWORD *)(v0[5] + v0[15]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EE2F0()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5EE334()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A5EE3A0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);

  swift_release();
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 120));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EE404()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;

  swift_task_dealloc();
  v1 = *(void **)(v0 + 224);
  v2 = *(void **)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  swift_release();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6 + OBJC_IVAR___ObjectTrackingAgent_logger, v5);
  v7 = v1;
  v8 = v1;
  v9 = sub_23A690CFC();
  v10 = sub_23A691038();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 136);
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    v14 = v1;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v15;
    sub_23A6911D0();
    *v13 = v15;

    _os_log_impl(&dword_23A5B0000, v9, v10, "Failed to send tracking summary %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v13, -1, -1);
    MEMORY[0x23B853BD0](v12, -1, -1);

  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 120));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A5EE600()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A5EE644()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5EE6AC()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5EE71C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);

  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5 + OBJC_IVAR___ObjectTrackingAgent_logger, v4);
  v6 = v1;
  v7 = v1;
  v8 = sub_23A690CFC();
  v9 = sub_23A691038();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 136);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v1;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v14;
    sub_23A6911D0();
    *v12 = v14;

    _os_log_impl(&dword_23A5B0000, v8, v9, "Failed to send tracking summary %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v12, -1, -1);
    MEMORY[0x23B853BD0](v11, -1, -1);

  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 120));
  swift_retain();
  return swift_task_switch();
}

uint64_t type metadata accessor for ObjectTrackingAgent()
{
  uint64_t result;

  result = qword_2542D2630;
  if (!qword_2542D2630)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A5EE9A8()
{
  return objectdestroyTm();
}

uint64_t sub_23A5EE9B0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return sub_23A5D9B64(1);
}

uint64_t sub_23A5EEA1C()
{
  return objectdestroyTm();
}

uint64_t sub_23A5EEA24()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return sub_23A5D9B64(1);
}

uint64_t sub_23A5EEA90(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23A5EEAF4;
  return v6(a1);
}

uint64_t sub_23A5EEAF4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A5EEB40(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23A5EEC10(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23A5EF1F4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23A5EF1F4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_23A5EEC10(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23A6911DC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23A5EEDC8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23A6912CC();
  if (!v8)
  {
    sub_23A691350();
    __break(1u);
LABEL_17:
    result = sub_23A6913A4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23A5EEDC8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23A5EEE5C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23A5EF034(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23A5EF034(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23A5EEE5C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23A5EEFD0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23A69129C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23A691350();
      __break(1u);
LABEL_10:
      v2 = sub_23A690E94();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23A6913A4();
    __break(1u);
LABEL_14:
    result = sub_23A691350();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23A5EEFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA40);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23A5EF034(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA40);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5EF180()
{
  return objectdestroyTm();
}

uint64_t sub_23A5EF188()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return sub_23A5D9B64(1);
}

uint64_t sub_23A5EF1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23A5EF230()
{
  return objectdestroyTm();
}

uint64_t sub_23A5EF238()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return sub_23A5D9B64(1);
}

uint64_t sub_23A5EF2A4()
{
  return objectdestroyTm();
}

uint64_t sub_23A5EF2AC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return sub_23A5D9B64(1);
}

uint64_t sub_23A5EF318(uint64_t a1)
{
  uint64_t v1;

  return sub_23A676288(a1, v1);
}

uint64_t sub_23A5EF320(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A5EF5AC(a1, a2, a3, (_QWORD *)*v3, &qword_25699F0F0, &qword_25699EB98);
  *v3 = result;
  return result;
}

uint64_t sub_23A5EF34C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23A5EF440(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23A5EF368(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A5EF5AC(a1, a2, a3, (_QWORD *)*v3, &qword_25699F100, &qword_25699F0F8);
  *v3 = result;
  return result;
}

uint64_t sub_23A5EF394(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23A5EF738(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23A5EF3B0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A5EFB48(a1, a2, a3, (_QWORD *)*v3, &qword_25699F028, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_23A5EF3DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23A5EF894(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23A5EF3F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23A5EF9FC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23A5EF414(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23A5EFB48(a1, a2, a3, (_QWORD *)*v3, &qword_25699E950, type metadata accessor for TrackingMetrics.TrackedPersonInfo);
  *v3 = result;
  return result;
}

uint64_t sub_23A5EF440(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5EF5AC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5EF738(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5EF894(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5EF9FC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F048);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5EFB48(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23A6913A4();
  __break(1u);
  return result;
}

uint64_t sub_23A5EFD28(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_23A5EFD90;
  return v5(v2 + 32);
}

uint64_t sub_23A5EFD90()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_23A5EFDE0(void *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CGFloat Width;
  CGFloat Height;
  unsigned __int8 v12;
  objc_class *v13;
  _BYTE *v14;
  objc_super v15;
  CGRect v16;
  CGRect v17;

  v2 = (unint64_t)objc_msgSend(a1, sel_detectionType);
  if (v2 > 2)
    v3 = 3;
  else
    v3 = qword_23A696610[v2];
  result = (uint64_t)objc_msgSend(a1, sel_identifier);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    v5 = result;
    if (result <= 0x7FFFFFFF)
    {
      objc_msgSend(a1, sel_rect);
      v7 = v6;
      objc_msgSend(a1, sel_rect);
      v9 = v8;
      objc_msgSend(a1, sel_rect);
      Width = CGRectGetWidth(v16);
      objc_msgSend(a1, sel_rect);
      Height = CGRectGetHeight(v17);
      v12 = objc_msgSend(a1, sel_userFocusStrong);
      v13 = (objc_class *)type metadata accessor for DockKitFocusObservation();
      v14 = objc_allocWithZone(v13);
      *(_DWORD *)&v14[OBJC_IVAR____TtC11DockKitCore23DockKitFocusObservation_identifier] = v5;
      *(_QWORD *)&v14[OBJC_IVAR____TtC11DockKitCore23DockKitFocusObservation_x] = v7;
      *(_QWORD *)&v14[OBJC_IVAR____TtC11DockKitCore23DockKitFocusObservation_y] = v9;
      *(CGFloat *)&v14[OBJC_IVAR____TtC11DockKitCore23DockKitFocusObservation_width] = Width;
      *(CGFloat *)&v14[OBJC_IVAR____TtC11DockKitCore23DockKitFocusObservation_height] = Height;
      v14[OBJC_IVAR____TtC11DockKitCore23DockKitFocusObservation_userFocusStrong] = v12;
      *(_QWORD *)&v14[OBJC_IVAR____TtC11DockKitCore23DockKitFocusObservation_type] = v3;
      v15.receiver = v14;
      v15.super_class = v13;
      return (uint64_t)objc_msgSendSuper2(&v15, sel_init);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23A5EFF6C()
{
  return objectdestroyTm();
}

uint64_t sub_23A5EFF74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5D6A78(a1, v4, v5, v6);
}

uint64_t sub_23A5EFFE0()
{
  return objectdestroyTm();
}

uint64_t sub_23A5EFFE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5D6F08(a1, v4, v5, v6);
}

uint64_t sub_23A5F0054()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F005C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5D73C8(a1, v4, v5, v6);
}

uint64_t sub_23A5F00C8()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F00D0(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _QWORD *v11;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23A5F2890;
  return sub_23A62033C(v7, v8, v9, v10, a1, v4, v5, v6);
}

uint64_t sub_23A5F016C(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return swift_task_switch();
}

uint64_t sub_23A5F0188()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DockCoreManager()), sel_init);
  return swift_task_switch();
}

uint64_t sub_23A5F01D8()
{
  double *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;

  v1 = *((_QWORD *)v0 + 14);
  v3 = v0[12];
  v2 = v0[13];
  v5 = v0[10];
  v4 = v0[11];
  *((_QWORD *)v0 + 2) = v0;
  *((_QWORD *)v0 + 3) = sub_23A5F0254;
  v6 = swift_continuation_init();
  sub_23A64CD3C(v1, v6, v5, v4, v3, v2);
  return swift_continuation_await();
}

uint64_t sub_23A5F0254()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 120) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A5F02C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5F02F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A5F0328()
{
  return objectdestroy_61Tm();
}

uint64_t sub_23A5F0330()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v5 = v0[8];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23A5F2890;
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_23A5F2890;
  return sub_23A5E11DC(v2, v3, v4, v5);
}

uint64_t sub_23A5F03C4()
{
  return objectdestroy_61Tm();
}

uint64_t sub_23A5F03CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23A5F2890;
  return sub_23A5E3360(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23A5F044C()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F0454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F2890;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23A5F04B4()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F04BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F2890;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23A5F051C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A5F0540()
{
  uint64_t v0;

  return sub_23A5E4B28(*(void **)(v0 + 16));
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_23A5F0550(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B853B34](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A5F0590(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23A5F05D0()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F05D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F2890;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23A5F0638()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F0640(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5E61A0(a1, v4, v5, v6);
}

uint64_t sub_23A5F06BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A5F06E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A5F2890;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25699ECB8 + dword_25699ECB8))(a1, v4);
}

uint64_t sub_23A5F0750()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F0758(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5E6948(a1, v4, v5, v6);
}

uint64_t sub_23A5F07D4()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F07DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5E6F78(a1, v4, v5, v6);
}

uint64_t sub_23A5F0848()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F0850(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5E76C8(a1, v4, v5, v6);
}

uint64_t sub_23A5F08BC()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F08C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23A5F2890;
  return sub_23A5E7C44(a1, v4, v5, v6, v7);
}

uint64_t sub_23A5F0940()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F0948()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return sub_23A5D9B64(1);
}

uint64_t sub_23A5F09B4()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F09BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F2890;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23A5F0A1C()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F0A24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23A5F2890;
  return sub_23A5E8C30(a1, v4, v5, v7, v6);
}

uint64_t sub_23A5F0A9C()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23A5F0AD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23A5F2890;
  return sub_23A5E9228(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23A5F0B58()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A5F0B8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23A5F2890;
  return sub_23A5EA4E8(a1, v4, v5, v7, v6);
}

uint64_t sub_23A5F0C04()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F0C0C(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _QWORD *v11;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23A5F2890;
  return sub_23A5EB748(v7, v8, v9, v10, a1, v4, v5, v6);
}

uint64_t dispatch thunk of ObjectTrackingAgentConnectionDelegate.trackingConnected(info:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ObjectTrackingAgentConnectionDelegate.trackingDisconnected(info:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_23A5F0CB8()
{
  return type metadata accessor for ObjectTrackingAgent();
}

uint64_t sub_23A5F0CC0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23A690D14();
  if (v1 <= 0x3F)
  {
    result = sub_23A6906D8();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ObjectTrackingAgent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjectTrackingAgent.customInferenceEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.__allocating_init(appID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 832))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 840))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.__allocating_init(trackerConfig:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 848))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.__allocating_init(delegate:appID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 856))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.isTracking()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x360);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F0E74;
  return v5();
}

uint64_t sub_23A5F0E74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of ObjectTrackingAgent.track(metadata:image:cameraPortType:cameraIntrinsics:referenceDimensions:orientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  _QWORD *v8;
  uint64_t v9;
  int *v18;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double);

  v18 = *(int **)((*MEMORY[0x24BEE4EA0] & *v8) + 0x368);
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))((char *)v18 + *v18);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v19;
  *v19 = v9;
  v19[1] = sub_23A5F2890;
  return v21(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of ObjectTrackingAgent.track(focusObservation:metadata:image:cameraPortType:cameraIntrinsics:referenceDimensions:orientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  _QWORD *v9;
  uint64_t v10;
  int *v20;
  _QWORD *v21;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double);

  v20 = *(int **)((*MEMORY[0x24BEE4EA0] & *v9) + 0x370);
  v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))((char *)v20 + *v20);
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v21;
  *v21 = v10;
  v21[1] = sub_23A5F2890;
  return v23(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t dispatch thunk of ObjectTrackingAgent.getSelectedFaceIds()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x388))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.getSelectedBodyIds()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x390))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.stop()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x398))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.getTrackedObjects()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x3A0))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.processImage(image:faces:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0x3A8);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23A5F2890;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ObjectTrackingAgent.docked()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.trackingButtonEnabled()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x3B8);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F2894;
  return v5();
}

uint64_t dispatch thunk of ObjectTrackingAgent.selectSubjectAt(point:)(double a1, double a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(double, double);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0x3C0);
  v9 = (uint64_t (*)(double, double))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23A5F2890;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ObjectTrackingAgent.selectSubjects(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x3C8);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A5D98B0;
  return v7(a1);
}

uint64_t dispatch thunk of ObjectTrackingAgent.setRectOfInterestLocally(rect:)(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(double, double, double, double);

  v10 = *(int **)((*MEMORY[0x24BEE4EA0] & *v4) + 0x3D0);
  v13 = (uint64_t (*)(double, double, double, double))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23A5F2890;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ObjectTrackingAgent.setRectOfInterest(rect:)(double a1, double a2, double a3, double a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(double, double, double, double);

  v10 = *(int **)((*MEMORY[0x24BEE4EA0] & *v4) + 0x3D8);
  v13 = (uint64_t (*)(double, double, double, double))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23A5F2890;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ObjectTrackingAgent.stateEvent(info:connectedState:dockState:trackingButtonState:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x420))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.stateEvent(info:connectedState:dockState:trackingButtonState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x24BEE4EA0] & *v4) + 0x428);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23A5F2890;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ObjectTrackingAgent.trackingButtonStateChanged(info:state:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x430))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.disconnected(err:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x438))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.xpcConnected()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x440))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.xpcDisconnected()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x448))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.dumpTrackerDiagnostics(path:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x450))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.dumpTrackerState(path:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x458))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.search(calibrate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x460))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.stopSearch(calibrate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x468))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.returnToBase()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x470))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.stopReturnToBase()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x478))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.flip180(clockwise:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x480))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.trackingEnabled(enabled:appID:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x488))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.setFramingModeEvent(mode:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x490))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.selectSubjectAtEvent(x:y:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x498))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.selectSubjectsEvent(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4A0))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.setRectOfInterestEvent(rect:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4A8))();
}

uint64_t dispatch thunk of ObjectTrackingAgent.sendCommandEvent(command:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x4B0))();
}

uint64_t sub_23A5F1690()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25699EDE8 + dword_25699EDE8))(v2, v3);
}

uint64_t sub_23A5F16FC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_23A5F1730()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v8;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v7 = (void *)v0[6];
  v6 = (void *)v0[7];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_23A5F2890;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, void *, void *))((char *)&dword_25699EDF8
                                                                                    + dword_25699EDF8))(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_23A5F17C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23A5F2890;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2569A1278 + dword_2569A1278))(v2, v3, v4);
}

uint64_t sub_23A5F183C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2569A1280 + dword_2569A1280))(a1, v4, v5, v6);
}

uint64_t sub_23A5F18C0()
{
  return objectdestroy_61Tm();
}

uint64_t objectdestroy_61Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23A5F1908()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23A5F193C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = *(void **)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v4 = *(void **)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23A5F2890;
  return ((uint64_t (*)(void *, char, void *, void *))((char *)&dword_25699EE20 + dword_25699EE20))(v2, v3, v5, v4);
}

uint64_t sub_23A5F19C4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25699EE40 + dword_25699EE40))(v2, v3);
}

uint64_t sub_23A5F1A34()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25699EE60 + dword_25699EE60))(v2, v3);
}

uint64_t sub_23A5F1AA4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25699EE80 + dword_25699EE80))(v2, v3);
}

uint64_t sub_23A5F1B14()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25699EEA0 + dword_25699EEA0))(v2, v3);
}

uint64_t sub_23A5F1B84()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25699EEC0 + dword_25699EEC0))(v2, v3);
}

uint64_t sub_23A5F1BF0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_23A5F1C1C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = *(_BYTE *)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23A5F2890;
  return ((uint64_t (*)(char, void *, void *))((char *)&dword_25699EEE0 + dword_25699EEE0))(v2, v4, v3);
}

uint64_t sub_23A5F1C94()
{
  double *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  const void *v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = (const void *)*((_QWORD *)v0 + 6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, double, double, double, double))((char *)&dword_25699EF00
                                                                               + dword_25699EF00))(v6, v2, v3, v4, v5);
}

uint64_t objectdestroy_335Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_23A5F1D58()
{
  double *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  const void *v6;
  void *v7;
  _QWORD *v8;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = (const void *)*((_QWORD *)v0 + 6);
  v7 = (void *)*((_QWORD *)v0 + 7);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *, double, double, double, double))((char *)&dword_25699EF20
                                                                                       + dword_25699EF20))(v6, v7, v2, v3, v4, v5);
}

uint64_t sub_23A5F1DEC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_23A5F1E20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23A5F2890;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_25699EF40 + dword_25699EF40))(v2, v3, v4);
}

uint64_t sub_23A5F1E94()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_23A5F1EC0()
{
  double *v0;
  uint64_t v1;
  double v2;
  double v3;
  const void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (const void *)*((_QWORD *)v0 + 4);
  v5 = (void *)*((_QWORD *)v0 + 5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *, double, double))((char *)&dword_25699EF60 + dword_25699EF60))(v4, v5, v2, v3);
}

uint64_t sub_23A5F1F44()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25699EF80 + dword_25699EF80))(v2, v3);
}

uint64_t sub_23A5F1FB0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23A5F1FEC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23A5F2890;
  return ((uint64_t (*)(void *, void *, void *, void *))((char *)&dword_25699EFA0 + dword_25699EFA0))(v2, v3, v5, v4);
}

uint64_t sub_23A5F206C()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F2074()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 80));
  return swift_deallocObject();
}

uint64_t sub_23A5F20C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  double v7;
  double v8;
  int v9;
  void *v10;
  void *v11;
  _QWORD *v12;

  v2 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = *(void **)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(void **)(v0 + 48);
  v7 = *(double *)(v0 + 56);
  v8 = *(double *)(v0 + 64);
  v9 = *(_DWORD *)(v0 + 72);
  v11 = *(void **)(v0 + 80);
  v10 = *(void **)(v0 + 88);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v12;
  *v12 = v1;
  v12[1] = sub_23A5F2890;
  return ((uint64_t (*)(void *, void *, void *, int, void *, int, void *, double, double, void *))((char *)&dword_25699EFC8 + dword_25699EFC8))(v2, v3, v4, v5, v6, v9, v11, v7, v8, v10);
}

uint64_t sub_23A5F2188()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 72));
  return swift_deallocObject();
}

uint64_t sub_23A5F21D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  int v8;
  void *v9;
  void *v10;
  _QWORD *v11;

  v2 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(void **)(v0 + 40);
  v6 = *(double *)(v0 + 48);
  v7 = *(double *)(v0 + 56);
  v8 = *(_DWORD *)(v0 + 64);
  v10 = *(void **)(v0 + 72);
  v9 = *(void **)(v0 + 80);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_23A5F2890;
  return ((uint64_t (*)(void *, void *, int, void *, int, void *, double, double, void *))((char *)&dword_25699EFE8 + dword_25699EFE8))(v2, v3, v4, v5, v8, v10, v6, v7, v9);
}

uint64_t objectdestroy_197Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_23A5F22B4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25699F008 + dword_25699F008))(v2, v3);
}

uint64_t objectdestroy_201Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A5F234C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_23A5F2370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A5F2890;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25699F030 + dword_25699F030))(a1, v4);
}

uint64_t sub_23A5F23E0()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F23E8()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F23F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23A5F2890;
  return sub_23A61FA88(a1, v4, v5, v7, v6);
}

uint64_t sub_23A5F2474()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5D98B0;
  return sub_23A629BD4();
}

uint64_t objectdestroy_506Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A5F2510()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  return sub_23A629B0C();
}

uint64_t sub_23A5F257C()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F2584(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5E5A08(a1, v4, v5, v6);
}

uint64_t sub_23A5F25F0()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F25F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5E53FC(a1, v4, v5, v6);
}

uint64_t sub_23A5F2664()
{
  return objectdestroyTm();
}

uint64_t sub_23A5F266C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return sub_23A5D9B64(0);
}

uint64_t sub_23A5F26D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569A0330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A5F2720()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A5F2764(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23A5F27CC(uint64_t a1)
{
  uint64_t v1;

  return sub_23A64FD1C(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_23A5F27D8()
{
  return objectdestroyTm();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23A5F2818(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A5EDB88(a1, v4, v5, v6);
}

void sub_23A5F2884(uint64_t a1)
{
  sub_23A650E34(a1);
}

uint64_t sub_23A5F28F4()
{
  return 1;
}

void *sub_23A5F290C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore13SensorBattery_state);
  v2 = v1;
  return v1;
}

unint64_t sub_23A5F29C0()
{
  sub_23A691290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  sub_23A6914F4();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  return 0xD000000000000015;
}

char *SensorBattery.__allocating_init(id:name:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  _BYTE *v9;
  _QWORD *v10;
  char *v11;
  void *v12;
  objc_super v14;

  v9 = objc_allocWithZone(v4);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  v9[OBJC_IVAR____TtC11DockKitCore9Component_type] = 4;
  v10 = &v9[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v10 = a2;
  v10[1] = a3;
  v14.receiver = v9;
  v14.super_class = (Class)type metadata accessor for Component();
  v11 = (char *)objc_msgSendSuper2(&v14, sel_init);
  v12 = *(void **)&v11[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state];
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state] = a4;

  return v11;
}

char *SensorBattery.init(id:name:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _QWORD *v6;
  char *v7;
  void *v8;
  objc_super v10;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  v4[OBJC_IVAR____TtC11DockKitCore9Component_type] = 4;
  v6 = &v4[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v6 = a2;
  v6[1] = a3;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for Component();
  v7 = (char *)objc_msgSendSuper2(&v10, sel_init);
  v8 = *(void **)&v7[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state];
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state] = a4;

  return v7;
}

void sub_23A5F2C2C(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC11DockKitCore13SensorBattery_state);
  v4 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  sub_23A62DFC8(a1);
}

void *SensorBattery.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  char *v3;
  id v4;
  void *v5;
  char *v6;
  uint64_t v7;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state] = 0;
  v4 = sub_23A62EFC8();
  v5 = v4;
  if (v4)
  {
    *((_BYTE *)v4 + OBJC_IVAR____TtC11DockKitCore9Component_type) = 4;
    type metadata accessor for AccessoryBatteryState();
    v6 = v5;
    v7 = sub_23A69114C();

    a1 = *(void **)&v6[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state];
    *(_QWORD *)&v6[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state] = v7;
  }

  return v5;
}

void *SensorBattery.init(coder:)(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13SensorBattery_state) = 0;
  v3 = sub_23A62EFC8();
  v4 = v3;
  if (v3)
  {
    *((_BYTE *)v3 + OBJC_IVAR____TtC11DockKitCore9Component_type) = 4;
    type metadata accessor for AccessoryBatteryState();
    v5 = v4;
    v6 = sub_23A69114C();

    a1 = *(void **)&v5[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state];
    *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore13SensorBattery_state] = v6;
  }

  return v4;
}

void SensorBattery.__allocating_init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SensorBattery.init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23A5F2F24()
{
  uint64_t v0;

}

id SensorBattery.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SensorBattery();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SensorBattery()
{
  return objc_opt_self();
}

id sub_23A5F2F94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore13SensorBattery_state);
  *a2 = v2;
  return v2;
}

void sub_23A5F2FAC(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC11DockKitCore13SensorBattery_state);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore13SensorBattery_state) = *a1;
  v3 = v2;

}

uint64_t method lookup function for SensorBattery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SensorBattery.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SensorBattery.__allocating_init(id:name:state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

unint64_t TrackerStateEvent.init(rawValue:)(unint64_t a1)
{
  return sub_23A5C9464(a1);
}

uint64_t sub_23A5F303C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state);
}

unint64_t sub_23A5F3058()
{
  sub_23A691290();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  return 0xD00000000000001BLL;
}

id SensorTrackerState.__allocating_init(state:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id SensorTrackerState.init(state:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for SensorTrackerState();
  return objc_msgSendSuper2(&v3, sel_init);
}

void sub_23A5F3250(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state);
  v4 = (id)sub_23A690E04();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v3, v4);

}

char *SensorTrackerState.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state] = 0;
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for SensorData();
  v4 = (char *)objc_msgSendSuper2(&v9, sel_init);
  v5 = (void *)sub_23A690E04();
  v6 = objc_msgSend(a1, sel_decodeIntegerForKey_, v5);

  if ((unint64_t)v6 >= 4)
    v7 = 0;
  else
    v7 = v6;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state] = v7;
  return v4;
}

char *SensorTrackerState.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  void *v4;
  id v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state] = 0;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SensorData();
  v3 = (char *)objc_msgSendSuper2(&v8, sel_init);
  v4 = (void *)sub_23A690E04();
  v5 = objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  if ((unint64_t)v5 >= 4)
    v6 = 0;
  else
    v6 = v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state] = v6;
  return v3;
}

id SensorTrackerState.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SensorTrackerState.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SensorTrackerState.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for SensorTrackerState);
}

void *sub_23A5F356C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore13SensorTracker_state);
  v2 = v1;
  return v1;
}

unint64_t sub_23A5F35D8()
{
  sub_23A691290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  sub_23A6914F4();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  return 0xD000000000000015;
}

_BYTE *SensorTracker.__allocating_init(id:name:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  _BYTE *v9;
  _QWORD *v10;
  _BYTE *v11;
  void *v12;
  objc_super v14;

  v9 = objc_allocWithZone(v4);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  v9[OBJC_IVAR____TtC11DockKitCore9Component_type] = 3;
  v10 = &v9[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v10 = a2;
  v10[1] = a3;
  v14.receiver = v9;
  v14.super_class = (Class)type metadata accessor for Component();
  v11 = objc_msgSendSuper2(&v14, sel_init);
  v12 = *(void **)&v11[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state];
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state] = a4;

  v11[OBJC_IVAR____TtC11DockKitCore9Component_type] = 3;
  return v11;
}

_BYTE *SensorTracker.init(id:name:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _QWORD *v6;
  _BYTE *v7;
  void *v8;
  objc_super v10;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  v4[OBJC_IVAR____TtC11DockKitCore9Component_type] = 3;
  v6 = &v4[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v6 = a2;
  v6[1] = a3;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for Component();
  v7 = objc_msgSendSuper2(&v10, sel_init);
  v8 = *(void **)&v7[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state];
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state] = a4;

  v7[OBJC_IVAR____TtC11DockKitCore9Component_type] = 3;
  return v7;
}

void sub_23A5F3864(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC11DockKitCore13SensorTracker_state);
  v4 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  sub_23A62DFC8(a1);
}

void *SensorTracker.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  char *v3;
  id v4;
  void *v5;
  char *v6;
  uint64_t v7;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state] = 0;
  v4 = sub_23A62EFC8();
  v5 = v4;
  if (v4)
  {
    *((_BYTE *)v4 + OBJC_IVAR____TtC11DockKitCore9Component_type) = 3;
    type metadata accessor for SensorTrackerState();
    v6 = v5;
    v7 = sub_23A69114C();

    a1 = *(void **)&v6[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state];
    *(_QWORD *)&v6[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state] = v7;
  }

  return v5;
}

void *SensorTracker.init(coder:)(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13SensorTracker_state) = 0;
  v3 = sub_23A62EFC8();
  v4 = v3;
  if (v3)
  {
    *((_BYTE *)v3 + OBJC_IVAR____TtC11DockKitCore9Component_type) = 3;
    type metadata accessor for SensorTrackerState();
    v5 = v4;
    v6 = sub_23A69114C();

    a1 = *(void **)&v5[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state];
    *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state] = v6;
  }

  return v4;
}

void sub_23A5F3AFC(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC11DockKitCore13SensorTracker_state);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13SensorTracker_state) = a1;
  v2 = a1;

}

void SensorTracker.__allocating_init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SensorTracker.init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23A5F3B88()
{
  uint64_t v0;

}

id SensorTracker.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for SensorTracker);
}

uint64_t type metadata accessor for SensorTrackerState()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SensorTracker()
{
  return objc_opt_self();
}

unint64_t sub_23A5F3BF8()
{
  unint64_t result;

  result = qword_25699F150;
  if (!qword_25699F150)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrackerStateEvent, &type metadata for TrackerStateEvent);
    atomic_store(result, (unint64_t *)&qword_25699F150);
  }
  return result;
}

_QWORD *sub_23A5F3C3C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state);
  return result;
}

_QWORD *sub_23A5F3C54(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state) = *result;
  return result;
}

id sub_23A5F3C6C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore13SensorTracker_state);
  *a2 = v2;
  return v2;
}

void sub_23A5F3C84(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC11DockKitCore13SensorTracker_state);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore13SensorTracker_state) = *a1;
  v3 = v2;

}

ValueMetadata *type metadata accessor for TrackerStateEvent()
{
  return &type metadata for TrackerStateEvent;
}

uint64_t method lookup function for SensorTrackerState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SensorTrackerState.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SensorTrackerState.__allocating_init(state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for SensorTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SensorTracker.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SensorTracker.__allocating_init(id:name:state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of SensorTracker.setState(state:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t currentSupportedAccessoryVersion.getter()
{
  return 2;
}

id sub_23A5F3D6C()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
}

uint64_t sub_23A5F3E00()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_23A5F3E64()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  v1 = v0;
  v2 = *(id *)(v0 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
  v3 = objc_msgSend(v2, sel_description);
  sub_23A690E1C();

  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23A691374();
    swift_bridgeObjectRelease();
  }
  sub_23A6914F4();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2690);
  sub_23A690E58();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E58();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E58();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A6906C0();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23A6914F4();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23A691290();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t sub_23A5F4410()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_description);
  v3 = sub_23A690E1C();

  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems];
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    return v3;
  }
  swift_bridgeObjectRetain();
  result = sub_23A691374();
  v5 = result;
  if (!result)
    goto LABEL_11;
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x23B85312C](v7, v4);
      else
        v8 = *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      sub_23A62E268();
      sub_23A690E88();
      swift_bridgeObjectRelease();
      sub_23A690E88();

      swift_bridgeObjectRelease();
    }
    while (v5 != v7);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A5F4584()
{
  return sub_23A5F45F0(&OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model);
}

uint64_t sub_23A5F4590(uint64_t a1, uint64_t a2)
{
  return sub_23A5F4630(a1, a2, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model);
}

uint64_t (*sub_23A5F459C())()
{
  return nullsub_1;
}

uint64_t sub_23A5F45B4()
{
  return sub_23A5F45F0(&OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion);
}

uint64_t sub_23A5F45C0(uint64_t a1, uint64_t a2)
{
  return sub_23A5F4630(a1, a2, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion);
}

uint64_t (*sub_23A5F45CC())()
{
  return nullsub_1;
}

uint64_t sub_23A5F45E4()
{
  return sub_23A5F45F0(&OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_serialNumber);
}

uint64_t sub_23A5F45F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23A5F4624(uint64_t a1, uint64_t a2)
{
  return sub_23A5F4630(a1, a2, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_serialNumber);
}

uint64_t sub_23A5F4630(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *a3);
  *v4 = a1;
  v4[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23A5F4648())()
{
  return nullsub_1;
}

uint64_t DockCoreAccessory.created.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_created;
  v4 = sub_23A6906D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23A5F46A4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_certified);
}

uint64_t sub_23A5F46B4(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_certified) = result;
  return result;
}

uint64_t (*sub_23A5F46C4())()
{
  return nullsub_1;
}

uint64_t sub_23A5F46DC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_isMagSafe);
}

uint64_t sub_23A5F46EC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_isMagSafe) = result;
  return result;
}

uint64_t (*sub_23A5F46FC())()
{
  return nullsub_1;
}

uint64_t sub_23A5F4714()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version);
}

uint64_t sub_23A5F4724()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_needsMigration);
}

uint64_t sub_23A5F4734(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_needsMigration) = result;
  return result;
}

uint64_t (*sub_23A5F4744())()
{
  return nullsub_1;
}

uint64_t sub_23A5F475C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;
  char *v8;
  _QWORD v9[3];
  uint64_t v10;

  sub_23A605D88(a1, (uint64_t)v9);
  if (!v10)
  {
    sub_23A5C921C((uint64_t)v9, &qword_2569A0330);
    goto LABEL_5;
  }
  type metadata accessor for DockCoreAccessory();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v6 = 0;
    return v6 & 1;
  }
  v2 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
  v3 = *(void **)&v8[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
  v10 = type metadata accessor for DockCoreInfo(0);
  v9[0] = v3;
  v4 = v2;
  v5 = v3;
  v6 = DockCoreInfo.isEqual(_:)((uint64_t)v9);

  sub_23A5C921C((uint64_t)v9, &qword_2569A0330);
  return v6 & 1;
}

id DockCoreAccessory.__allocating_init(info:systems:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_23A607414(a1, a2);

  return v6;
}

id DockCoreAccessory.init(info:systems:)(void *a1, uint64_t a2)
{
  id v3;

  v3 = sub_23A607414(a1, a2);

  return v3;
}

uint64_t sub_23A5F4A10(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t result;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info) = v3;
  v5 = v3;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems) = *(_QWORD *)(a1
                                                                                         + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version) = 2;
  return result;
}

uint64_t sub_23A5F4B18(int a1)
{
  void *v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  NSObject *v8;
  os_log_type_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  os_unfair_lock_s *v22;
  objc_class *v23;
  _QWORD v25[2];
  _QWORD *v26;
  int v27;
  void *v28;
  uint64_t v29;

  LODWORD(v2) = a1;
  v29 = *MEMORY[0x24BDAC8D0];
  v3 = sub_23A690D14();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v3);
  v7 = v1;
  v8 = sub_23A690CFC();
  v9 = sub_23A691044();
  v10 = &unk_25699F000;
  if (os_log_type_enabled(v8, v9))
  {
    v27 = (int)v2;
    v2 = (uint8_t *)swift_slowAlloc();
    v26 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v2 = 138412290;
    v11 = *(Class *)((char *)&v7->isa + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection);
    if (v11)
    {
      v25[1] = v2 + 12;
      v28 = v11;
      v12 = v11;
      v10 = (_QWORD *)&unk_25699F000;
    }
    else
    {
      v28 = 0;
    }
    sub_23A6911D0();
    v13 = v26;
    *v26 = v11;

    _os_log_impl(&dword_23A5B0000, v8, v9, "Asked to disconnect, invalidating any XPC connections %@", v2, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v13, -1, -1);
    MEMORY[0x23B853BD0](v2, -1, -1);
    LOBYTE(v2) = v27;
  }
  else
  {

    v8 = v7;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v14 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v15 = *(os_unfair_lock_s **)((char *)&v7->isa + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
  swift_retain();
  os_unfair_lock_lock(v15 + 4);
  swift_release();
  v16 = v10[55];
  objc_msgSend(*(id *)((char *)&v7->isa + v16), sel_invalidate);
  v17 = *(Class *)((char *)&v7->isa + v16);
  if (v17)
  {
    objc_msgSend(v17, sel_setExportedObject_, 0);
    v18 = *(Class *)((char *)&v7->isa + v16);
  }
  else
  {
    v18 = 0;
  }
  *(Class *)((char *)&v7->isa + v16) = 0;

  v19 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture;
  objc_msgSend(*(id *)((char *)&v7->isa + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture), sel_invalidate);
  v20 = *(Class *)((char *)&v7->isa + v19);
  if (v20)
  {
    objc_msgSend(v20, sel_setExportedObject_, 0);
    v21 = *(Class *)((char *)&v7->isa + v19);
  }
  else
  {
    v21 = 0;
  }
  *(Class *)((char *)&v7->isa + v19) = 0;

  *((_BYTE *)&v7->isa + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) = v2 & 1;
  v22 = *(os_unfair_lock_s **)((char *)&v7->isa + v14);
  swift_retain();
  os_unfair_lock_unlock(v22 + 4);
  swift_release();
  v23 = (objc_class *)MEMORY[0x24BEE4AF8];
  *(Class *)((char *)&v7->isa + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates) = (Class)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  *(Class *)((char *)&v7->isa + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_sensorDelegates) = v23;
  swift_bridgeObjectRelease();
  *(Class *)((char *)&v7->isa + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_eventDelegates) = v23;
  swift_bridgeObjectRelease();
  *(Class *)((char *)&v7->isa + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_batteryDelegates) = v23;
  swift_bridgeObjectRelease();
  *(Class *)((char *)&v7->isa + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_trackingSummaryDelegates) = v23;
  return swift_bridgeObjectRelease();
}

id DockCoreAccessory.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  objc_class *v10;
  objc_super v12;

  v1 = v0;
  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v2);
  v6 = sub_23A690CFC();
  v7 = sub_23A691044();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_23A5B0000, v6, v7, "de-init DockCoreAccessory and release delegates", v8, 2u);
    MEMORY[0x23B853BD0](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates] = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_sensorDelegates] = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_eventDelegates] = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_batteryDelegates] = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_trackingSummaryDelegates] = v9;
  swift_bridgeObjectRelease();
  v10 = (objc_class *)type metadata accessor for DockCoreAccessory();
  v12.receiver = v1;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, sel_dealloc);
}

BOOL sub_23A5F51D8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23A607668(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5 >> 62)
    v6 = sub_23A691374();
  else
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  return v6 > 0;
}

BOOL sub_23A5F535C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t i;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  id v30;

  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_23A607828(v6, a1, a2, (void (*)(_QWORD))type metadata accessor for ActuationController);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7 >> 62)
    goto LABEL_23;
  for (i = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_23A691374())
  {
    v9 = 0;
    v10 = *(_QWORD *)(a3 + 16);
    v22 = v7 + 32;
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
    v28 = (uint64_t *)(a3 + 40);
    v29 = v7 & 0xC000000000000001;
    v26 = v7;
    v27 = a3;
    v24 = v10;
    v25 = i;
    while (1)
    {
      if (v29)
      {
        v11 = (id)MEMORY[0x23B85312C](v9, v7);
      }
      else
      {
        if (v9 >= *(_QWORD *)(v23 + 16))
          goto LABEL_22;
        v11 = *(id *)(v22 + 8 * v9);
      }
      v12 = v11;
      v13 = __OFADD__(v9++, 1);
      if (v13)
        break;
      type metadata accessor for ActuationController();
      v14 = swift_dynamicCastClassUnconditional();
      if (v10)
      {
        v15 = v14;
        v7 = OBJC_IVAR____TtC11DockKitCore6System_components;
        v30 = v12;
        swift_bridgeObjectRetain();
        v16 = 0;
        a3 = v10;
        v17 = v28;
        while (1)
        {
          if (*(_QWORD *)(*(_QWORD *)(v15 + v7) + 16))
          {
            v19 = *(v17 - 1);
            v18 = *v17;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_23A5C6588(v19, v18);
            LOBYTE(v19) = v20;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v19 & 1) != 0)
            {
              v13 = __OFADD__(v16++, 1);
              if (v13)
                break;
            }
          }
          v17 += 2;
          if (!--a3)
          {
            a3 = v27;
            swift_bridgeObjectRelease();

            i = v25;
            v7 = v26;
            v10 = v24;
            goto LABEL_5;
          }
        }
        __break(1u);
        break;
      }
      v16 = 0;
LABEL_5:

      if (v9 == i)
      {
        swift_bridgeObjectRelease();
        return v16 == v10;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    ;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23A5F55A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint64_t i;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;

  v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_23A607828(v8, a3, a4, (void (*)(_QWORD))type metadata accessor for ActuationController);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9 >> 62)
    goto LABEL_15;
  for (i = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_23A691374())
  {
    v11 = 4;
    while (1)
    {
      v12 = (v9 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B85312C](v11 - 4, v9) : *(id *)(v9 + 8 * v11);
      v13 = v12;
      v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1))
        break;
      type metadata accessor for ActuationController();
      v15 = swift_dynamicCastClass();
      if (v15)
      {
        v16 = *(_QWORD *)(v15 + OBJC_IVAR____TtC11DockKitCore6System_components);
        if (*(_QWORD *)(v16 + 16))
        {
          v17 = v13;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v18 = sub_23A5C6588(a1, a2);
          if ((v19 & 1) != 0)
          {
            v20 = (char *)*(id *)(*(_QWORD *)(v16 + 56) + 8 * v18);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore9Component_id];
            return v21;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
      }

      ++v11;
      if (v14 == i)
        goto LABEL_16;
    }
    __break(1u);
LABEL_15:
    ;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return -1;
}

BOOL sub_23A5F5800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  id v24;
  uint64_t v25;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  id v35;

  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_23A607828(v6, a1, a2, (void (*)(_QWORD))type metadata accessor for SensorController);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7 >> 62)
    goto LABEL_29;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
LABEL_3:
    v9 = 0;
    v10 = *(_QWORD *)(a3 + 16);
    v27 = v7 + 32;
    v28 = v7 & 0xFFFFFFFFFFFFFF8;
    v33 = (uint64_t *)(a3 + 40);
    v34 = v7 & 0xC000000000000001;
    v31 = v7;
    v32 = a3;
    v29 = v10;
    v30 = v8;
    while (1)
    {
      if (v34)
      {
        v11 = (id)MEMORY[0x23B85312C](v9, v7);
      }
      else
      {
        if (v9 >= *(_QWORD *)(v28 + 16))
          goto LABEL_28;
        v11 = *(id *)(v27 + 8 * v9);
      }
      v12 = v11;
      v13 = __OFADD__(v9++, 1);
      if (v13)
        goto LABEL_27;
      type metadata accessor for SensorController();
      v14 = swift_dynamicCastClassUnconditional();
      if (v10)
        break;
      v16 = 0;
LABEL_5:

      if (v9 == v8)
      {
        swift_bridgeObjectRelease();
        return v16 == v10;
      }
    }
    v15 = v14;
    v7 = OBJC_IVAR____TtC11DockKitCore6System_components;
    v35 = v12;
    swift_bridgeObjectRetain();
    v16 = 0;
    a3 = v10;
    v17 = v33;
    while (1)
    {
      if (!*(_QWORD *)(*(_QWORD *)(v15 + v7) + 16))
        goto LABEL_15;
      v19 = *(v17 - 1);
      v18 = *v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23A5C6588(v19, v18);
      if ((v20 & 1) == 0)
        break;
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v15 + v7);
      if (!*(_QWORD *)(v21 + 16))
        goto LABEL_14;
      swift_bridgeObjectRetain();
      v22 = sub_23A5C6588(v19, v18);
      if ((v23 & 1) == 0)
        break;
      v24 = *(id *)(*(_QWORD *)(v21 + 56) + 8 * v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Sensor();
      v25 = swift_dynamicCastClass();

      if (v25)
      {
        v13 = __OFADD__(v16++, 1);
        if (v13)
        {
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          v8 = sub_23A691374();
          if (!v8)
            goto LABEL_30;
          goto LABEL_3;
        }
      }
LABEL_15:
      v17 += 2;
      if (!--a3)
      {
        a3 = v32;
        swift_bridgeObjectRelease();

        v8 = v30;
        v7 = v31;
        v10 = v29;
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23A5F5AB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = sub_23A690E1C();
  v9 = v8;
  v10 = sub_23A690F18();
  v11 = a1;
  LOBYTE(a5) = a5(v7, v9, v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a5 & 1;
}

uint64_t sub_23A5F5B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  uint64_t result;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  id v39;
  uint64_t v40;

  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_23A607828(v6, a1, a2, (void (*)(_QWORD))type metadata accessor for SensorController);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = MEMORY[0x24BEE4AF8];
  if (v7 >> 62)
    goto LABEL_31;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    v9 = 0;
    v10 = *(_QWORD *)(a3 + 16);
    v31 = v7 + 32;
    v32 = v7 & 0xFFFFFFFFFFFFFF8;
    v37 = (uint64_t *)(a3 + 40);
    v38 = v7 & 0xC000000000000001;
    v35 = v7;
    v36 = a3;
    v33 = v10;
    v34 = v8;
    while (1)
    {
      if (v38)
      {
        v11 = (id)MEMORY[0x23B85312C](v9, v7);
      }
      else
      {
        if (v9 >= *(_QWORD *)(v32 + 16))
          goto LABEL_30;
        v11 = *(id *)(v31 + 8 * v9);
      }
      v12 = v11;
      if (__OFADD__(v9++, 1))
        break;
      type metadata accessor for SensorController();
      v14 = swift_dynamicCastClassUnconditional();
      if (v10)
      {
        v15 = v14;
        v16 = OBJC_IVAR____TtC11DockKitCore6System_components;
        v39 = v12;
        swift_bridgeObjectRetain();
        v17 = v10;
        v18 = v37;
        do
        {
          if (*(_QWORD *)(*(_QWORD *)(v15 + v16) + 16))
          {
            v20 = *(v18 - 1);
            v19 = *v18;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_23A5C6588(v20, v19);
            if ((v21 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_12:
              swift_bridgeObjectRelease();
              goto LABEL_13;
            }
            swift_bridgeObjectRelease();
            v22 = *(_QWORD *)(v15 + v16);
            if (!*(_QWORD *)(v22 + 16))
              goto LABEL_12;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v23 = sub_23A5C6588(v20, v19);
            if ((v24 & 1) == 0)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_12;
            }
            v25 = *(id *)(*(_QWORD *)(v22 + 56) + 8 * v23);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            type metadata accessor for Sensor();
            if (swift_dynamicCastClass())
            {

              v26 = *(_QWORD *)(v15 + v16);
              if (!*(_QWORD *)(v26 + 16))
              {
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_34:
                swift_bridgeObjectRelease();
                result = swift_bridgeObjectRelease();
                __break(1u);
                return result;
              }
              swift_bridgeObjectRetain();
              v27 = sub_23A5C6588(v20, v19);
              if ((v28 & 1) == 0)
                goto LABEL_34;
              v29 = *(id *)(*(_QWORD *)(v26 + 56) + 8 * v27);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_dynamicCastClassUnconditional();
              MEMORY[0x23B852D78]();
              if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_23A690F3C();
              sub_23A690F48();
              sub_23A690F30();
            }
            else
            {
              swift_bridgeObjectRelease();

            }
          }
LABEL_13:
          v18 += 2;
          --v17;
        }
        while (v17);

        a3 = v36;
        swift_bridgeObjectRelease();
        v8 = v34;
        v7 = v35;
        v10 = v33;
        if (v9 == v34)
          goto LABEL_28;
      }
      else
      {

        if (v9 == v8)
        {
LABEL_28:
          swift_bridgeObjectRelease();
          return v40;
        }
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    v8 = sub_23A691374();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23A5F5F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v11;

  v4 = sub_23A5F6134(0);
  if (!v4)
    return 0;
  v5 = (void *)v4;
  type metadata accessor for ActuationController();
  v6 = swift_dynamicCastClass();
  if (!v6 || (v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC11DockKitCore6System_components), !*(_QWORD *)(v7 + 16)))
  {

    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_23A5C6588(a1, a2);
  if ((v9 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Actuator();
  v11 = swift_dynamicCastClass();

  if (!v11)
  return v11;
}

uint64_t sub_23A5F6134(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t result;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems);
  v14 = MEMORY[0x24BEE4AF8];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_23A691374();
    if (!v4)
      goto LABEL_15;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4)
      goto LABEL_15;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v4; ++i)
    {
      if (*(_QWORD *)(MEMORY[0x23B85312C](i, v3) + OBJC_IVAR____TtC11DockKitCore6System_type) == a1)
      {
        sub_23A6912D8();
        sub_23A6912F0();
        sub_23A6912FC();
        sub_23A6912E4();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    v6 = 0;
    v7 = OBJC_IVAR____TtC11DockKitCore6System_type;
    do
    {
      v8 = *(char **)(v3 + 8 * v6 + 32);
      if (*(_QWORD *)&v8[v7] == a1)
      {
        v9 = v8;
        sub_23A6912D8();
        sub_23A6912F0();
        sub_23A6912FC();
        sub_23A6912E4();
        v7 = OBJC_IVAR____TtC11DockKitCore6System_type;
      }
      ++v6;
    }
    while (v4 != v6);
  }
LABEL_15:
  result = swift_bridgeObjectRelease();
  v3 = v14;
  if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(v14 + 16))
      goto LABEL_18;
LABEL_23:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  v13 = sub_23A691374();
  result = swift_release();
  if (!v13)
    goto LABEL_23;
LABEL_18:
  if ((v14 & 0xC000000000000001) != 0)
  {
LABEL_26:
    v11 = (id)MEMORY[0x23B85312C](0, v3);
    goto LABEL_21;
  }
  if (*(_QWORD *)(v14 + 16))
  {
    v11 = *(id *)(v14 + 32);
LABEL_21:
    v12 = v11;
    swift_release();
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

void sub_23A5F6354()
{
  uint64_t v0;

  *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version) = 2;
}

void sub_23A5F6368(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;

  v2 = v1;
  v4 = *(id *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
  v5 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  type metadata accessor for System();
  swift_bridgeObjectRetain();
  v6 = (void *)sub_23A690F00();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion + 8))
  {
    swift_bridgeObjectRetain();
    v8 = sub_23A690E04();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model + 8))
  {
    swift_bridgeObjectRetain();
    v10 = sub_23A690E04();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v10, v11);
  swift_unknownObjectRelease();

  v12 = (void *)sub_23A690684();
  v13 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v12, v13);

  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version);
  v15 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v14, v15);

  v16 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_certified);
  v17 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeBool_forKey_, v16, v17);

  v18 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_isMagSafe);
  v19 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeBool_forKey_, v18, v19);

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_serialNumber + 8))
  {
    swift_bridgeObjectRetain();
    v20 = sub_23A690E04();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  v21 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v20, v21);
  swift_unknownObjectRelease();

  v22 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_needsMigration);
  v23 = (id)sub_23A690E04();
  objc_msgSend(a1, sel_encodeBool_forKey_, v22, v23);

}

uint64_t DockCoreAccessory.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DockCoreAccessory.init(coder:)(a1);
}

uint64_t DockCoreAccessory.init(coder:)(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  _BYTE *v23;
  NSObject *v24;
  os_log_type_t v25;
  _DWORD *v26;
  _DWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  objc_class *v31;
  void *v32;
  int v33;
  char *v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  void *v52;
  unsigned __int8 v53;
  void *v54;
  unsigned __int8 v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  void *v60;
  unsigned __int8 v61;
  objc_class *v62;
  char *v63;
  void *v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t result;
  uint64_t i;
  id v70;
  void *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  __int128 v85;
  void *v86;
  uint64_t v87;
  objc_super v88;
  _QWORD v89[3];
  uint64_t v90;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F1F8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_23A6906D8();
  v82 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v83 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23A690D14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection] = 0;
  v11 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v12 = swift_allocObject();
  *(_QWORD *)&v1[v11] = v12;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;
  v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_XPCTIMEOUT] = 0x4008000000000000;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_sensorDelegates] = v13;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_eventDelegates] = v13;
  *(_DWORD *)(v12 + 16) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_batteryDelegates] = v13;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_trackingSummaryDelegates] = v13;
  swift_unknownObjectWeakInit();
  v14 = &v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger];
  v15 = v1;
  sub_23A690D08();
  v76 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems] = v13;
  v16 = &v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model];
  *v16 = 0;
  v16[1] = 0;
  v77 = v16;
  v17 = &v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion];
  *v17 = 0;
  v17[1] = 0;
  v18 = &v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_serialNumber];
  *v18 = 0;
  v18[1] = 0;
  v80 = v18;
  v78 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_certified;
  v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_certified] = 0;
  v79 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_isMagSafe;
  v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_isMagSafe] = 0;
  v19 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version] = -1;
  v81 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_needsMigration;
  v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_needsMigration] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture] = 0;
  v20 = (void *)sub_23A690E04();
  v75 = a1;
  v21 = objc_msgSend(a1, sel_decodeIntegerForKey_, v20);

  *(_QWORD *)&v15[v19] = v21;
  if (v21 != (id)2)
  {
    v74 = v8;
    v22 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    *(_QWORD *)&v85 = v7;
    v22(v10, v14, v7);
    v23 = v15;
    v24 = sub_23A690CFC();
    v25 = sub_23A691044();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (_DWORD *)swift_slowAlloc();
      v73 = v5;
      v27 = v26;
      *v26 = 134218240;
      v89[0] = *(_QWORD *)&v15[v19];
      sub_23A6911D0();

      *((_WORD *)v27 + 6) = 2048;
      v89[0] = 2;
      sub_23A6911D0();
      _os_log_impl(&dword_23A5B0000, v24, v25, "converting DockCoreAccessory from v%ld to v%ld", (uint8_t *)v27, 0x16u);
      v28 = v27;
      v5 = v73;
      MEMORY[0x23B853BD0](v28, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, _QWORD))(v74 + 8))(v10, v85);
  }
  v29 = (uint64_t)v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v30 = swift_allocObject();
  v85 = xmmword_23A694020;
  *(_OWORD *)(v30 + 16) = xmmword_23A694020;
  v31 = (objc_class *)type metadata accessor for DockCoreInfo(0);
  *(_QWORD *)(v30 + 32) = v31;
  v32 = v75;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v90)
  {
    v33 = swift_dynamicCast();
    v34 = v83;
    if (v33)
    {
      v35 = v86;
      goto LABEL_11;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v89, &qword_2569A0330);
    v34 = v83;
  }
  v35 = objc_msgSend(objc_allocWithZone(v31), sel_init);
LABEL_11:
  *(_QWORD *)&v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info] = v35;
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_23A696770;
  *(_QWORD *)(v36 + 32) = sub_23A5D03A4(0, (unint64_t *)&unk_2569A04C0);
  *(_QWORD *)(v36 + 40) = type metadata accessor for System();
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v90)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F238);
    if (swift_dynamicCast())
    {
      v37 = v86;
      goto LABEL_16;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v89, &qword_2569A0330);
  }
  v37 = (void *)MEMORY[0x24BEE4AF8];
LABEL_16:
  *(_QWORD *)&v15[v76] = v37;
  swift_bridgeObjectRelease();
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v85;
  v39 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  *(_QWORD *)(v38 + 32) = v39;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v90)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v40 = v86;
      v41 = v87;
      goto LABEL_21;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v89, &qword_2569A0330);
  }
  v40 = 0;
  v41 = 0;
LABEL_21:
  *v17 = v40;
  v17[1] = v41;
  swift_bridgeObjectRelease();
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v85;
  *(_QWORD *)(v42 + 32) = v39;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v90)
  {
    v43 = swift_dynamicCast();
    v44 = v84;
    if ((v43 & 1) != 0)
    {
      v45 = v86;
      v46 = v87;
    }
    else
    {
      v45 = 0;
      v46 = 0;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v89, &qword_2569A0330);
    v45 = 0;
    v46 = 0;
    v44 = v84;
  }
  v47 = v77;
  *v77 = v45;
  v47[1] = v46;
  swift_bridgeObjectRelease();
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v85;
  *(_QWORD *)(v48 + 32) = sub_23A5D03A4(0, &qword_25699F228);
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v90)
  {
    v49 = swift_dynamicCast();
    v50 = v82;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v29, v49 ^ 1u, 1, v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v29, 1, v44) != 1)
    {
      v51 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 32);
      v51(v34, v29, v44);
      goto LABEL_31;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v89, &qword_2569A0330);
    v50 = v82;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v29, 1, 1, v44);
  }
  sub_23A6906B4();
  sub_23A5C921C(v29, (uint64_t *)&unk_25699F1F8);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 32);
LABEL_31:
  v51(&v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_created], (uint64_t)v34, v44);
  v52 = (void *)sub_23A690E04();
  v53 = objc_msgSend(v32, sel_decodeBoolForKey_, v52);

  v15[v78] = v53;
  v54 = (void *)sub_23A690E04();
  v55 = objc_msgSend(v32, sel_decodeBoolForKey_, v54);

  v15[v79] = v55;
  v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = v85;
  *(_QWORD *)(v56 + 32) = v39;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v90)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v57 = v86;
      v58 = v87;
      goto LABEL_36;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v89, &qword_2569A0330);
  }
  v57 = 0;
  v58 = 0;
LABEL_36:
  v59 = v80;
  *v80 = v57;
  v59[1] = v58;
  swift_bridgeObjectRelease();
  v60 = (void *)sub_23A690E04();
  v61 = objc_msgSend(v32, sel_decodeBoolForKey_, v60);

  v15[v81] = v61;
  v62 = (objc_class *)type metadata accessor for DockCoreAccessory();
  v88.receiver = v15;
  v88.super_class = v62;
  v63 = (char *)objc_msgSendSuper2(&v88, sel_init);
  v64 = v63;
  v65 = *(_QWORD *)&v63[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems];
  if (!(v65 >> 62))
  {
    v66 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
    v67 = v63;
    result = swift_bridgeObjectRetain();
    if (v66)
      goto LABEL_38;
LABEL_47:

    swift_bridgeObjectRelease();
    *((_BYTE *)v64 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) = 1;
    return (uint64_t)v64;
  }
  v72 = v63;
  swift_bridgeObjectRetain();
  result = sub_23A691374();
  v66 = result;
  if (!result)
    goto LABEL_47;
LABEL_38:
  if (v66 >= 1)
  {
    for (i = 0; i != v66; ++i)
    {
      if ((v65 & 0xC000000000000001) != 0)
        v70 = (id)MEMORY[0x23B85312C](i, v65);
      else
        v70 = *(id *)(v65 + 8 * i + 32);
      v71 = v70;
      type metadata accessor for SystemController();
      if (swift_dynamicCastClass())
        swift_unknownObjectWeakAssign();

    }
    goto LABEL_47;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A5F7298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t result;
  id v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  void *v84;
  void *v85;
  id v86;
  id v87;
  os_unfair_lock_s *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t aBlock;
  uint64_t v124;
  uint64_t (*v125)(uint64_t);
  void *v126;
  void *v127;
  uint64_t v128;

  v1 = v0;
  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v90 - v7;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v90 - v7, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
    v54 = sub_23A690CFC();
    v55 = sub_23A691038();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_23A5B0000, v54, v55, "not configured for XPC, failing out", v56, 2u);
      MEMORY[0x23B853BD0](v56, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return 0;
  }
  v9 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v10 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
  swift_retain();
  os_unfair_lock_lock(v10 + 4);
  swift_release();
  v11 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection;
  v12 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection);
  if (v12)
    goto LABEL_23;
  v91 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
  v13 = sub_23A690CFC();
  v14 = sub_23A691044();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A5B0000, v13, v14, "dockkit: creating XPC connection", v15, 2u);
    MEMORY[0x23B853BD0](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v16 = objc_allocWithZone(MEMORY[0x24BDD1988]);
  v17 = (void *)sub_23A690E04();
  v18 = objc_msgSend(v16, sel_initWithMachServiceName_options_, v17, 4096);

  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_interfaceWithProtocol_, &unk_2569B58C0);
  objc_msgSend(v18, sel_setRemoteObjectInterface_, v20);

  v21 = objc_msgSend(v19, sel_interfaceWithProtocol_, &unk_2569B5A40);
  objc_msgSend(v18, sel_setExportedInterface_, v21);

  v22 = sub_23A5D03A4(0, &qword_25699F3A8);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3B0);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_23A696780;
  v24 = type metadata accessor for DockCoreAccessory();
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3B8);
  *(_QWORD *)(v23 + 56) = v120;
  v122 = v24;
  *(_QWORD *)(v23 + 32) = v24;
  v25 = type metadata accessor for System();
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3C0);
  v119 = v25;
  *(_QWORD *)(v23 + 88) = v118;
  *(_QWORD *)(v23 + 64) = v25;
  v26 = type metadata accessor for Actuator();
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3C8);
  v117 = v26;
  *(_QWORD *)(v23 + 120) = v116;
  *(_QWORD *)(v23 + 96) = v26;
  v27 = type metadata accessor for DockCoreInfo(0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3D0);
  v115 = v27;
  *(_QWORD *)(v23 + 152) = v114;
  *(_QWORD *)(v23 + 128) = v27;
  v28 = type metadata accessor for SensorData();
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3D8);
  v113 = v28;
  *(_QWORD *)(v23 + 184) = v112;
  *(_QWORD *)(v23 + 160) = v28;
  v29 = type metadata accessor for SensorLEDState();
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3E0);
  v111 = v29;
  *(_QWORD *)(v23 + 216) = v110;
  *(_QWORD *)(v23 + 192) = v29;
  v30 = type metadata accessor for SensorButtonState();
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3E8);
  *(_QWORD *)(v23 + 248) = v108;
  v109 = v30;
  *(_QWORD *)(v23 + 224) = v30;
  v31 = sub_23A5D03A4(0, (unint64_t *)&unk_2569A04C0);
  v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F3F0);
  *(_QWORD *)(v23 + 280) = v106;
  v107 = v31;
  *(_QWORD *)(v23 + 256) = v31;
  v32 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F400);
  *(_QWORD *)(v23 + 312) = v104;
  v105 = v32;
  *(_QWORD *)(v23 + 288) = v32;
  v33 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F408);
  *(_QWORD *)(v23 + 344) = v102;
  v103 = v33;
  *(_QWORD *)(v23 + 320) = v33;
  v34 = sub_23A5D03A4(0, &qword_25699F410);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F418);
  *(_QWORD *)(v23 + 376) = v100;
  v101 = v34;
  *(_QWORD *)(v23 + 352) = v34;
  v35 = sub_23A5D03A4(0, &qword_25699F228);
  v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F420);
  *(_QWORD *)(v23 + 408) = v98;
  v99 = v35;
  *(_QWORD *)(v23 + 384) = v35;
  v36 = sub_23A5D03A4(0, &qword_2569A0120);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F430);
  *(_QWORD *)(v23 + 440) = v96;
  v97 = v36;
  *(_QWORD *)(v23 + 416) = v36;
  v37 = sub_23A5D03A4(0, &qword_25699F438);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F440);
  *(_QWORD *)(v23 + 472) = v94;
  v95 = v37;
  *(_QWORD *)(v23 + 448) = v37;
  v38 = sub_23A5D03A4(0, &qword_25699F448);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F450);
  *(_QWORD *)(v23 + 504) = v39;
  v93 = v38;
  *(_QWORD *)(v23 + 480) = v38;
  v92 = v22;
  v40 = (void *)MEMORY[0x23B852FB8](v23);
  aBlock = 0;
  result = sub_23A690FF0();
  if (aBlock)
  {

    v42 = objc_msgSend(v18, sel_exportedInterface);
    if (v42)
    {
      v43 = v42;
      v44 = (void *)sub_23A690FE4();
      objc_msgSend(v43, sel_setClasses_forSelector_argumentIndex_ofReply_, v44, sel_sensorDataWithInfo_system_sensors_data_, 0, 0);

    }
    v45 = objc_msgSend(v18, sel_exportedInterface);
    if (v45)
    {
      v46 = v45;
      v47 = (void *)sub_23A690FE4();
      objc_msgSend(v46, sel_setClasses_forSelector_argumentIndex_ofReply_, v47, sel_sensorDataWithInfo_system_sensors_data_, 1, 0);

    }
    v48 = objc_msgSend(v18, sel_exportedInterface);
    if (v48)
    {
      v49 = v48;
      v50 = (void *)sub_23A690FE4();
      objc_msgSend(v49, sel_setClasses_forSelector_argumentIndex_ofReply_, v50, sel_sensorDataWithInfo_system_sensors_data_, 2, 0);

    }
    v51 = objc_msgSend(v18, sel_exportedInterface);
    if (v51)
    {
      v52 = v51;
      v53 = (void *)sub_23A690FE4();
      swift_bridgeObjectRelease();
      objc_msgSend(v52, sel_setClasses_forSelector_argumentIndex_ofReply_, v53, sel_sensorDataWithInfo_system_sensors_data_, 3, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_23A696790;
    v58 = type metadata accessor for AccessoryBatteryState();
    v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F458);
    v60 = v122;
    *(_QWORD *)(v57 + 56) = v59;
    *(_QWORD *)(v57 + 64) = v60;
    *(_QWORD *)(v57 + 32) = v58;
    v61 = v119;
    *(_QWORD *)(v57 + 88) = v120;
    *(_QWORD *)(v57 + 96) = v61;
    v62 = v117;
    *(_QWORD *)(v57 + 120) = v118;
    *(_QWORD *)(v57 + 128) = v62;
    v63 = v115;
    *(_QWORD *)(v57 + 152) = v116;
    *(_QWORD *)(v57 + 160) = v63;
    v64 = v113;
    *(_QWORD *)(v57 + 184) = v114;
    *(_QWORD *)(v57 + 192) = v64;
    v65 = v111;
    *(_QWORD *)(v57 + 216) = v112;
    *(_QWORD *)(v57 + 224) = v65;
    v66 = v109;
    *(_QWORD *)(v57 + 248) = v110;
    *(_QWORD *)(v57 + 256) = v66;
    v67 = v107;
    *(_QWORD *)(v57 + 280) = v108;
    *(_QWORD *)(v57 + 288) = v67;
    v68 = v105;
    *(_QWORD *)(v57 + 312) = v106;
    *(_QWORD *)(v57 + 320) = v68;
    v69 = v103;
    *(_QWORD *)(v57 + 344) = v104;
    *(_QWORD *)(v57 + 352) = v69;
    v70 = v101;
    *(_QWORD *)(v57 + 376) = v102;
    *(_QWORD *)(v57 + 384) = v70;
    v71 = v99;
    *(_QWORD *)(v57 + 408) = v100;
    *(_QWORD *)(v57 + 416) = v71;
    v72 = v97;
    *(_QWORD *)(v57 + 440) = v98;
    *(_QWORD *)(v57 + 448) = v72;
    v73 = v95;
    *(_QWORD *)(v57 + 472) = v96;
    *(_QWORD *)(v57 + 480) = v73;
    *(_QWORD *)(v57 + 536) = v39;
    v74 = v93;
    *(_QWORD *)(v57 + 504) = v94;
    *(_QWORD *)(v57 + 512) = v74;
    v75 = (void *)MEMORY[0x23B852FB8](v57);
    aBlock = 0;
    result = sub_23A690FF0();
    if (aBlock)
    {

      v76 = objc_msgSend(v18, sel_remoteObjectInterface);
      if (v76)
      {
        v77 = v76;
        v78 = (void *)sub_23A690FE4();
        swift_bridgeObjectRelease();
        objc_msgSend(v77, sel_setClasses_forSelector_argumentIndex_ofReply_, v78, sel_getCurrentBatteryDataWithInfo_completion_, 0, 1);

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v79 = swift_allocObject();
      v80 = swift_unknownObjectWeakInit();
      v81 = (void *)MEMORY[0x23B853C6C](v80);
      objc_msgSend(v18, sel_setExportedObject_, v81);

      v127 = sub_23A6086EC;
      v128 = v79;
      v82 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v124 = 1107296256;
      v125 = sub_23A5E4D44;
      v126 = &block_descriptor_47;
      v83 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v18, sel_setInterruptionHandler_, v83);
      _Block_release(v83);
      v127 = sub_23A6086F4;
      v128 = v79;
      aBlock = v82;
      v124 = 1107296256;
      v125 = sub_23A5E4D44;
      v126 = &block_descriptor_50;
      v84 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v18, sel_setInvalidationHandler_, v84);
      _Block_release(v84);
      v85 = *(void **)(v1 + v11);
      *(_QWORD *)(v1 + v11) = v18;
      v86 = v18;

      v87 = *(id *)(v1 + v11);
      objc_msgSend(v87, sel_resume);

      swift_release();
      v12 = *(void **)(v1 + v11);
      v9 = v91;
      if (!v12)
      {
        v88 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + v91) + 16);
        goto LABEL_24;
      }
LABEL_23:
      v88 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + v9) + 16);
      v89 = v12;
LABEL_24:
      swift_retain();
      os_unfair_lock_unlock(v88);
      swift_release();
      return (uint64_t)v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23A5F7E48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;

  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + 16;
  v7 = (void *)MEMORY[0x23B853C6C](v6);

  if (v7)
  {
    v8 = MEMORY[0x23B853C6C](v6);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = *(id *)(v8 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection);

      objc_msgSend(v10, sel_invalidate);
    }
    v11 = MEMORY[0x23B853C6C](v6);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = *(void **)(v11 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection);
      v14 = v13;

      if (v13)
      {
        objc_msgSend(v14, sel_setExportedObject_, 0);

      }
    }
    v15 = (char *)MEMORY[0x23B853C6C](v6);
    if (v15)
    {
      v16 = *(void **)&v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection];
      *(_QWORD *)&v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection] = 0;

    }
    v17 = MEMORY[0x23B853C6C](v6);
    if (v17)
    {
      v18 = (void *)v17;
      v19 = *(os_unfair_lock_s **)(v17 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
      swift_retain();

      os_unfair_lock_lock(v19 + 4);
      swift_release();
    }
    v20 = MEMORY[0x23B853C6C](v6);
    if (v20)
    {
      v21 = (char *)v20;
      sub_23A5C9938();
      v22 = swift_allocError();
      *(_OWORD *)v23 = xmmword_23A6967A0;
      *(_BYTE *)(v23 + 16) = 1;
      v24 = *(void **)&v21[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
      *(_QWORD *)&v21[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = v22;

    }
    v25 = MEMORY[0x23B853C6C](v6);
    if (v25)
    {
      v26 = (void *)v25;
      v27 = *(os_unfair_lock_s **)(v25 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
      swift_retain();

      os_unfair_lock_unlock(v27 + 4);
      swift_release();
    }
  }
  v28 = MEMORY[0x23B853C6C](v6);
  if (v28)
  {
    v29 = (void *)v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v28 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);

    v30 = sub_23A690CFC();
    v31 = sub_23A691044();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23A5B0000, v30, v31, "dockkit: Connection interrupted", v32, 2u);
      MEMORY[0x23B853BD0](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v33 = MEMORY[0x23B853C6C](v6);
  if (v33)
  {
    v34 = (void *)v33;
    v35 = MEMORY[0x23B853C6C](v6);
    if (v35)
    {
      v36 = (void *)v35;
      v37 = *(void **)(v35 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
      v38 = v37;

    }
    else
    {
      v37 = 0;
    }
    sub_23A5FB0FC((uint64_t)v37);

  }
}

uint64_t sub_23A5F8134(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  os_unfair_lock_s *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  char *v18;
  void *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t result;
  void *v37;
  os_unfair_lock_s *v38;
  uint64_t v39;

  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + 16;
  v7 = MEMORY[0x23B853C6C](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = *(os_unfair_lock_s **)(v7 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
    swift_retain();

    os_unfair_lock_lock(v9 + 4);
    swift_release();
  }
  v10 = (void *)MEMORY[0x23B853C6C](v6);

  if (v10)
  {
    v11 = MEMORY[0x23B853C6C](v6);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = *(id *)(v11 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection);

      objc_msgSend(v13, sel_invalidate);
    }
    v14 = MEMORY[0x23B853C6C](v6);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = *(void **)(v14 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection);
      v17 = v16;

      if (v16)
      {
        objc_msgSend(v17, sel_setExportedObject_, 0);

      }
    }
    v18 = (char *)MEMORY[0x23B853C6C](v6);
    if (v18)
    {
      v19 = *(void **)&v18[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection];
      *(_QWORD *)&v18[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection] = 0;

    }
    v20 = MEMORY[0x23B853C6C](v6);
    if (v20)
    {
      v21 = (char *)v20;
      sub_23A5C9938();
      v22 = swift_allocError();
      *(_OWORD *)v23 = xmmword_23A6967B0;
      *(_BYTE *)(v23 + 16) = 2;
      v24 = *(void **)&v21[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
      *(_QWORD *)&v21[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = v22;

    }
  }
  v25 = MEMORY[0x23B853C6C](v6);
  if (v25)
  {
    v26 = (void *)v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v25 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);

    v27 = sub_23A690CFC();
    v28 = sub_23A691044();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_23A5B0000, v27, v28, "dockkit: Connection invalidated", v29, 2u);
      MEMORY[0x23B853BD0](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v30 = MEMORY[0x23B853C6C](v6);
  if (v30)
  {
    v31 = (void *)v30;
    v32 = MEMORY[0x23B853C6C](v6);
    if (v32)
    {
      v33 = (void *)v32;
      v34 = *(void **)(v32 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
      v35 = v34;

    }
    else
    {
      v34 = 0;
    }
    sub_23A5FB0FC((uint64_t)v34);

  }
  result = MEMORY[0x23B853C6C](v6);
  if (result)
  {
    v37 = (void *)result;
    v38 = *(os_unfair_lock_s **)(result + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
    swift_retain();

    os_unfair_lock_unlock(v38 + 4);
    return swift_release();
  }
  return result;
}

void sub_23A5F8428()
{
  sub_23A5F8D48(&OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection);
}

void *sub_23A5F8434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  os_unfair_lock_s *v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t aBlock;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;

  v1 = v0;
  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&aBlock - v7;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) & 1) != 0)
  {
    v9 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
    v10 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
    swift_retain();
    os_unfair_lock_lock(v10 + 4);
    swift_release();
    v11 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture;
    v12 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture);
    if (v12)
      goto LABEL_6;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
    v13 = sub_23A690CFC();
    v14 = sub_23A691044();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23A5B0000, v13, v14, "dockkit: creating camera capture XPC connection", v15, 2u);
      MEMORY[0x23B853BD0](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v16 = objc_allocWithZone(MEMORY[0x24BDD1988]);
    v17 = (void *)sub_23A690E04();
    v18 = objc_msgSend(v16, sel_initWithMachServiceName_options_, v17, 4096);

    v19 = (void *)objc_opt_self();
    v20 = objc_msgSend(v19, sel_interfaceWithProtocol_, &unk_2569B5920);
    objc_msgSend(v18, sel_setRemoteObjectInterface_, v20);

    v21 = objc_msgSend(v19, sel_interfaceWithProtocol_, &unk_2569B59E0);
    objc_msgSend(v18, sel_setExportedInterface_, v21);

    v22 = swift_allocObject();
    v23 = swift_unknownObjectWeakInit();
    v24 = (void *)MEMORY[0x23B853C6C](v23);
    objc_msgSend(v18, sel_setExportedObject_, v24);

    v41 = sub_23A6086D4;
    v42 = v22;
    v25 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v38 = 1107296256;
    v39 = sub_23A5E4D44;
    v40 = &block_descriptor_1;
    v26 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v18, sel_setInterruptionHandler_, v26);
    _Block_release(v26);
    v41 = sub_23A6086E4;
    v42 = v22;
    aBlock = v25;
    v38 = 1107296256;
    v39 = sub_23A5E4D44;
    v40 = &block_descriptor_43;
    v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v18, sel_setInvalidationHandler_, v27);
    _Block_release(v27);
    v28 = *(void **)(v1 + v11);
    *(_QWORD *)(v1 + v11) = v18;
    v29 = v18;

    v30 = *(id *)(v1 + v11);
    objc_msgSend(v30, sel_resume);

    swift_release();
    v12 = *(void **)(v1 + v11);
    if (v12)
    {
LABEL_6:
      v31 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + v9) + 16);
      v32 = v12;
    }
    else
    {
      v31 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + v9) + 16);
    }
    swift_retain();
    os_unfair_lock_unlock(v31);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&aBlock - v7, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
    v33 = sub_23A690CFC();
    v34 = sub_23A691038();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_23A5B0000, v33, v34, "not configured for XPC, failing out", v35, 2u);
      MEMORY[0x23B853BD0](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return 0;
  }
  return v12;
}

uint64_t sub_23A5F88B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  char *v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t result;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;

  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + 16;
  v7 = (void *)MEMORY[0x23B853C6C](v6);

  if (v7)
  {
    v8 = MEMORY[0x23B853C6C](v6);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = *(id *)(v8 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture);

      objc_msgSend(v10, sel_invalidate);
    }
    v11 = MEMORY[0x23B853C6C](v6);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = *(void **)(v11 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture);
      v14 = v13;

      if (v13)
      {
        objc_msgSend(v14, sel_setExportedObject_, 0);

      }
    }
    v15 = (char *)MEMORY[0x23B853C6C](v6);
    if (v15)
    {
      v16 = *(void **)&v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture];
      *(_QWORD *)&v15[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture] = 0;

    }
  }
  v17 = MEMORY[0x23B853C6C](v6);
  if (v17)
  {
    v18 = (char *)v17;
    sub_23A5C9938();
    v19 = swift_allocError();
    *(_OWORD *)v20 = xmmword_23A6967A0;
    *(_BYTE *)(v20 + 16) = 1;
    v21 = *(void **)&v18[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
    *(_QWORD *)&v18[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = v19;

  }
  result = MEMORY[0x23B853C6C](v6);
  if (result)
  {
    v23 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, result + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);

    v24 = sub_23A690CFC();
    v25 = sub_23A691044();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_23A5B0000, v24, v25, "dockkit: Accessory Camera Connection interrupted", v26, 2u);
      MEMORY[0x23B853BD0](v26, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_23A5F8AE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  os_unfair_lock_s *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t result;
  void *v27;
  os_unfair_lock_s *v28;
  uint64_t v29;

  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + 16;
  v7 = MEMORY[0x23B853C6C](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = *(os_unfair_lock_s **)(v7 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
    swift_retain();

    os_unfair_lock_lock(v9 + 4);
    swift_release();
  }
  v10 = (void *)MEMORY[0x23B853C6C](v6);

  if (v10)
  {
    v11 = MEMORY[0x23B853C6C](v6);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = *(id *)(v11 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture);

      objc_msgSend(v13, sel_invalidate);
    }
    v14 = (char *)MEMORY[0x23B853C6C](v6);
    if (v14)
    {
      v15 = *(void **)&v14[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture];
      *(_QWORD *)&v14[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture] = 0;

    }
  }
  v16 = MEMORY[0x23B853C6C](v6);
  if (v16)
  {
    v17 = (void *)v16;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v16 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);

    v18 = sub_23A690CFC();
    v19 = sub_23A691044();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_23A5B0000, v18, v19, "dockkit: Accessory Camera Connection invalidated", v20, 2u);
      MEMORY[0x23B853BD0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v21 = MEMORY[0x23B853C6C](v6);
  if (v21)
  {
    v22 = (char *)v21;
    sub_23A5C9938();
    v23 = swift_allocError();
    *(_OWORD *)v24 = xmmword_23A6967B0;
    *(_BYTE *)(v24 + 16) = 2;
    v25 = *(void **)&v22[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
    *(_QWORD *)&v22[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = v23;

  }
  result = MEMORY[0x23B853C6C](v6);
  if (result)
  {
    v27 = (void *)result;
    v28 = *(os_unfair_lock_s **)(result + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
    swift_retain();

    os_unfair_lock_unlock(v28 + 4);
    return swift_release();
  }
  return result;
}

void sub_23A5F8D3C()
{
  sub_23A5F8D48(&OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture);
}

void sub_23A5F8D48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = v1;
  v4 = sub_23A690D14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v4);
  v8 = sub_23A690CFC();
  v9 = sub_23A691038();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_23A5B0000, v8, v9, "No reply or XPC failed to open in time, closing XPC", v10, 2u);
    MEMORY[0x23B853BD0](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = *a1;
  objc_msgSend(*(id *)(v3 + *a1), sel_invalidate);
  v12 = *(void **)(v3 + v11);
  *(_QWORD *)(v3 + v11) = 0;

}

uint64_t sub_23A5F8E74(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  void *v24;
  os_unfair_lock_s *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  char *v51;
  id v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  id v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  uint8_t *v62;
  _QWORD *v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char isEscapingClosureAtFileLocation;
  _QWORD v70[3];
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  void *v74;
  uint64_t aBlock;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t (*v79)();
  _QWORD *v80;

  v71 = a1;
  v9 = sub_23A690D14();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v73 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v70 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v70 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v70 - v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a5;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v20, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v36 = sub_23A690CFC();
    v37 = sub_23A691038();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_23A5B0000, v36, v37, "xpc lock/queue not initialized, no XPC configured", v38, 2u);
      MEMORY[0x23B853BD0](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
    sub_23A5C9938();
    v39 = (void *)swift_allocError();
    *(_OWORD *)v40 = xmmword_23A6967C0;
    *(_BYTE *)(v40 + 16) = 3;
    goto LABEL_20;
  }
  v70[2] = a5;
  v72 = v21;
  v22 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v23 = *(os_unfair_lock_s **)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
  swift_retain();
  os_unfair_lock_lock(v23 + 4);
  swift_release();
  v24 = *(void **)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError) = 0;

  v25 = *(os_unfair_lock_s **)(a4 + v22);
  swift_retain();
  os_unfair_lock_unlock(v25 + 4);
  swift_release();
  v26 = sub_23A5F8434();
  if (!v26)
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v41(v18, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v42 = sub_23A690CFC();
    v43 = sub_23A691038();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_23A5B0000, v42, v43, "failed connecting to server xpc", v44, 2u);
      MEMORY[0x23B853BD0](v44, -1, -1);
    }

    v45 = *(void (**)(char *, uint64_t))(v10 + 8);
    v45(v18, v9);
    sub_23A5C9938();
    v39 = (void *)swift_allocError();
    *(_QWORD *)v46 = 0xD00000000000001FLL;
    *(_QWORD *)(v46 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v46 + 16) = 4;
    swift_willThrow();
    goto LABEL_16;
  }
  v27 = v26;
  v70[0] = a3;
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v28;
  v29[3] = sub_23A608ED4;
  v29[4] = v72;
  v79 = sub_23A608EE0;
  v80 = v29;
  aBlock = MEMORY[0x24BDAC760];
  v76 = 1107296256;
  v77 = sub_23A60D824;
  v78 = &block_descriptor_461;
  v30 = _Block_copy(&aBlock);
  v70[1] = v28;
  swift_retain();
  swift_retain();
  swift_release();
  v31 = objc_msgSend(v27, sel_synchronousRemoteObjectProxyWithErrorHandler_, v30);
  _Block_release(v30);
  sub_23A6911F4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F488);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v41(v15, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v47 = sub_23A690CFC();
    v48 = sub_23A691038();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_23A5B0000, v47, v48, "failed asynchronous server XPC connection", v49, 2u);
      MEMORY[0x23B853BD0](v49, -1, -1);
    }

    v45 = *(void (**)(char *, uint64_t))(v10 + 8);
    v45(v15, v9);
    sub_23A5C9938();
    v39 = (void *)swift_allocError();
    *(_OWORD *)v50 = xmmword_23A6967D0;
    *(_BYTE *)(v50 + 16) = 4;
    swift_willThrow();

    swift_release();
LABEL_16:
    v51 = v73;
    v41(v73, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v52 = v39;
    v53 = v39;
    v54 = sub_23A690CFC();
    v55 = sub_23A691038();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v71 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v56 = 138412290;
      v57 = v39;
      v58 = v9;
      v59 = v45;
      v60 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v60;
      sub_23A6911D0();
      v61 = v71;
      *v71 = v60;
      v45 = v59;
      v9 = v58;

      _os_log_impl(&dword_23A5B0000, v54, v55, "dockkit: failed getting sync connection, can't send xpc: %@", v56, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v61, -1, -1);
      v62 = v56;
      v51 = v73;
      MEMORY[0x23B853BD0](v62, -1, -1);
    }
    else
    {

    }
    v45(v51, v9);
    sub_23A5F8428();
LABEL_20:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v63 = v39;
    swift_continuation_throwingResumeWithError();
    return swift_release();
  }
  v32 = v74;
  v33 = v70[0];
  if (a2)
  {
    swift_unknownObjectRetain();
    v34 = (void *)sub_23A690E04();
    if (v33)
    {
LABEL_6:
      v35 = (void *)sub_23A6905C4();
      goto LABEL_24;
    }
  }
  else
  {
    swift_unknownObjectRetain();
    v34 = 0;
    if (v33)
      goto LABEL_6;
  }
  v35 = 0;
LABEL_24:
  v65 = swift_allocObject();
  v66 = v72;
  *(_QWORD *)(v65 + 16) = sub_23A608ED4;
  *(_QWORD *)(v65 + 24) = v66;
  v67 = swift_allocObject();
  *(_QWORD *)(v67 + 16) = sub_23A608ED8;
  *(_QWORD *)(v67 + 24) = v65;
  v79 = sub_23A609098;
  v80 = (_QWORD *)v67;
  aBlock = MEMORY[0x24BDAC760];
  v76 = 1107296256;
  v77 = sub_23A647AA0;
  v78 = &block_descriptor_471;
  v68 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v32, sel_selectSubjectResponseWithAppID_err_completion_, v34, v35, v68);

  swift_unknownObjectRelease_n();
  _Block_release(v68);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23A5F96F4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  void *v24;
  os_unfair_lock_s *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  char *v51;
  id v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  id v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  uint8_t *v62;
  _QWORD *v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char isEscapingClosureAtFileLocation;
  _QWORD v70[3];
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  void *v74;
  uint64_t aBlock;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t (*v79)();
  _QWORD *v80;

  v71 = a1;
  v9 = sub_23A690D14();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v73 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v70 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v70 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v70 - v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a5;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v20, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v36 = sub_23A690CFC();
    v37 = sub_23A691038();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_23A5B0000, v36, v37, "xpc lock/queue not initialized, no XPC configured", v38, 2u);
      MEMORY[0x23B853BD0](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
    sub_23A5C9938();
    v39 = (void *)swift_allocError();
    *(_OWORD *)v40 = xmmword_23A6967C0;
    *(_BYTE *)(v40 + 16) = 3;
    goto LABEL_20;
  }
  v70[2] = a5;
  v72 = v21;
  v22 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v23 = *(os_unfair_lock_s **)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
  swift_retain();
  os_unfair_lock_lock(v23 + 4);
  swift_release();
  v24 = *(void **)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError) = 0;

  v25 = *(os_unfair_lock_s **)(a4 + v22);
  swift_retain();
  os_unfair_lock_unlock(v25 + 4);
  swift_release();
  v26 = sub_23A5F8434();
  if (!v26)
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v41(v18, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v42 = sub_23A690CFC();
    v43 = sub_23A691038();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_23A5B0000, v42, v43, "failed connecting to server xpc", v44, 2u);
      MEMORY[0x23B853BD0](v44, -1, -1);
    }

    v45 = *(void (**)(char *, uint64_t))(v10 + 8);
    v45(v18, v9);
    sub_23A5C9938();
    v39 = (void *)swift_allocError();
    *(_QWORD *)v46 = 0xD00000000000001FLL;
    *(_QWORD *)(v46 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v46 + 16) = 4;
    swift_willThrow();
    goto LABEL_16;
  }
  v27 = v26;
  v70[0] = a3;
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v28;
  v29[3] = sub_23A608ED4;
  v29[4] = v72;
  v79 = sub_23A608EE0;
  v80 = v29;
  aBlock = MEMORY[0x24BDAC760];
  v76 = 1107296256;
  v77 = sub_23A60D824;
  v78 = &block_descriptor_441;
  v30 = _Block_copy(&aBlock);
  v70[1] = v28;
  swift_retain();
  swift_retain();
  swift_release();
  v31 = objc_msgSend(v27, sel_synchronousRemoteObjectProxyWithErrorHandler_, v30);
  _Block_release(v30);
  sub_23A6911F4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F488);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v41(v15, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v47 = sub_23A690CFC();
    v48 = sub_23A691038();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_23A5B0000, v47, v48, "failed asynchronous server XPC connection", v49, 2u);
      MEMORY[0x23B853BD0](v49, -1, -1);
    }

    v45 = *(void (**)(char *, uint64_t))(v10 + 8);
    v45(v15, v9);
    sub_23A5C9938();
    v39 = (void *)swift_allocError();
    *(_OWORD *)v50 = xmmword_23A6967D0;
    *(_BYTE *)(v50 + 16) = 4;
    swift_willThrow();

    swift_release();
LABEL_16:
    v51 = v73;
    v41(v73, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v52 = v39;
    v53 = v39;
    v54 = sub_23A690CFC();
    v55 = sub_23A691038();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v71 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v56 = 138412290;
      v57 = v39;
      v58 = v9;
      v59 = v45;
      v60 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v60;
      sub_23A6911D0();
      v61 = v71;
      *v71 = v60;
      v45 = v59;
      v9 = v58;

      _os_log_impl(&dword_23A5B0000, v54, v55, "dockkit: failed getting sync connection, can't send xpc: %@", v56, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v61, -1, -1);
      v62 = v56;
      v51 = v73;
      MEMORY[0x23B853BD0](v62, -1, -1);
    }
    else
    {

    }
    v45(v51, v9);
    sub_23A5F8D3C();
LABEL_20:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v63 = v39;
    swift_continuation_throwingResumeWithError();
    return swift_release();
  }
  v32 = v74;
  v33 = v70[0];
  if (a2)
  {
    swift_unknownObjectRetain();
    v34 = (void *)sub_23A690E04();
    if (v33)
    {
LABEL_6:
      v35 = (void *)sub_23A6905C4();
      goto LABEL_24;
    }
  }
  else
  {
    swift_unknownObjectRetain();
    v34 = 0;
    if (v33)
      goto LABEL_6;
  }
  v35 = 0;
LABEL_24:
  v65 = swift_allocObject();
  v66 = v72;
  *(_QWORD *)(v65 + 16) = sub_23A608ED4;
  *(_QWORD *)(v65 + 24) = v66;
  v67 = swift_allocObject();
  *(_QWORD *)(v67 + 16) = sub_23A608ED8;
  *(_QWORD *)(v67 + 24) = v65;
  v79 = sub_23A609098;
  v80 = (_QWORD *)v67;
  aBlock = MEMORY[0x24BDAC760];
  v76 = 1107296256;
  v77 = sub_23A647AA0;
  v78 = &block_descriptor_451;
  v68 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v32, sel_setRectOfInterestResponseWithAppID_err_completion_, v34, v35, v68);

  swift_unknownObjectRelease_n();
  _Block_release(v68);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23A5F9F74(uint64_t a1, unint64_t a2, _QWORD *a3, char *a4, unint64_t a5)
{
  uint64_t isEscapingClosureAtFileLocation;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  void *v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  id v53;
  char v54;
  void *v55;
  __int128 v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  uint64_t v84;
  _QWORD v85[2];
  id v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  __int128 v94;
  char *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t aBlock;
  uint64_t v99;
  void *v100;
  void *v101;
  uint64_t (*v102)();
  _QWORD *v103;

  isEscapingClosureAtFileLocation = sub_23A690D14();
  v11 = *(_QWORD *)(isEscapingClosureAtFileLocation - 8);
  v12 = MEMORY[0x24BDAC7A8](isEscapingClosureAtFileLocation);
  v95 = (char *)v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v85 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)&v94 = (char *)v85 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v85 - v19;
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = a5;
  if (a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] == 1)
  {
    v87 = a1;
    v90 = v16;
    if (a2 >> 62)
      goto LABEL_48;
    v22 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v91 = v21;
      v92 = isEscapingClosureAtFileLocation;
      v93 = a4;
      if (v22)
      {
        aBlock = MEMORY[0x24BEE4AF8];
        result = sub_23A5EF3DC(0, v22 & ~(v22 >> 63), 0);
        if (v22 < 0)
        {
          __break(1u);
          return result;
        }
        v88 = a5;
        v89 = v11;
        v96 = a3;
        v24 = aBlock;
        if ((a2 & 0xC000000000000001) != 0)
        {
          v25 = 0;
          do
          {
            v26 = MEMORY[0x23B85312C](v25, a2);
            v27 = *(_QWORD *)(v26 + OBJC_IVAR____TtC11DockKitCore9Component_name);
            v28 = *(_QWORD *)(v26 + OBJC_IVAR____TtC11DockKitCore9Component_name + 8);
            swift_bridgeObjectRetain();
            swift_unknownObjectRelease();
            aBlock = v24;
            v30 = *(_QWORD *)(v24 + 16);
            v29 = *(_QWORD *)(v24 + 24);
            if (v30 >= v29 >> 1)
            {
              sub_23A5EF3DC(v29 > 1, v30 + 1, 1);
              v24 = aBlock;
            }
            ++v25;
            *(_QWORD *)(v24 + 16) = v30 + 1;
            v31 = v24 + 16 * v30;
            *(_QWORD *)(v31 + 32) = v27;
            *(_QWORD *)(v31 + 40) = v28;
          }
          while (v22 != v25);
        }
        else
        {
          v37 = (_QWORD *)(a2 + 32);
          do
          {
            v38 = (uint64_t *)(*v37 + OBJC_IVAR____TtC11DockKitCore9Component_name);
            v40 = *v38;
            v39 = v38[1];
            aBlock = v24;
            v42 = *(_QWORD *)(v24 + 16);
            v41 = *(_QWORD *)(v24 + 24);
            swift_bridgeObjectRetain();
            if (v42 >= v41 >> 1)
            {
              sub_23A5EF3DC(v41 > 1, v42 + 1, 1);
              v24 = aBlock;
            }
            *(_QWORD *)(v24 + 16) = v42 + 1;
            v43 = v24 + 16 * v42;
            *(_QWORD *)(v43 + 32) = v40;
            *(_QWORD *)(v43 + 40) = v39;
            ++v37;
            --v22;
          }
          while (v22);
        }
        v21 = v91;
        a4 = v93;
        v11 = v89;
        a3 = v96;
      }
      v44 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
      v45 = *(os_unfair_lock_s **)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
      swift_retain();
      os_unfair_lock_lock(v45 + 4);
      swift_release();
      v46 = *(void **)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
      *(_QWORD *)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

      v47 = *(os_unfair_lock_s **)&a4[v44];
      swift_retain();
      os_unfair_lock_unlock(v47 + 4);
      swift_release();
      v48 = sub_23A5F7298();
      if (!v48)
      {
        swift_bridgeObjectRelease();
        v68 = v94;
        v69 = v92;
        (*(void (**)(_QWORD, char *, uint64_t))(v11 + 16))(v94, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v92);
        v70 = sub_23A690CFC();
        v71 = sub_23A691038();
        if (os_log_type_enabled(v70, v71))
        {
          v72 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v72 = 0;
          _os_log_impl(&dword_23A5B0000, v70, v71, "failed connecting to server xpc", v72, 2u);
          MEMORY[0x23B853BD0](v72, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v68, v69);
        sub_23A5C9938();
        v35 = swift_allocError();
        *(_QWORD *)v73 = 0xD00000000000001FLL;
        *(_QWORD *)(v73 + 8) = 0x800000023A69DA20;
        *(_BYTE *)(v73 + 16) = 4;
        swift_willThrow();
        goto LABEL_40;
      }
      v49 = (void *)v48;
      v50 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v51 = (_QWORD *)swift_allocObject();
      v51[2] = v50;
      v51[3] = sub_23A608ED4;
      v51[4] = v21;
      v102 = sub_23A608EE0;
      v103 = v51;
      aBlock = MEMORY[0x24BDAC760];
      v99 = 1107296256;
      v100 = sub_23A60D824;
      v101 = &block_descriptor_158;
      v52 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      v86 = v49;
      v53 = objc_msgSend(v49, sel_synchronousRemoteObjectProxyWithErrorHandler_, v52);
      _Block_release(v52);
      sub_23A6911F4();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
      a2 = MEMORY[0x24BEE4AD8];
      v54 = swift_dynamicCast();
      isEscapingClosureAtFileLocation = v92;
      if ((v54 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v74 = (uint64_t)v90;
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v90, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
        v75 = sub_23A690CFC();
        v76 = sub_23A691038();
        if (os_log_type_enabled(v75, v76))
        {
          v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v77 = 0;
          _os_log_impl(&dword_23A5B0000, v75, v76, "failed asynchronous server XPC connection", v77, 2u);
          MEMORY[0x23B853BD0](v77, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v74, isEscapingClosureAtFileLocation);
        sub_23A5C9938();
        v35 = swift_allocError();
        *(_OWORD *)v78 = xmmword_23A6967D0;
        *(_BYTE *)(v78 + 16) = 4;
        swift_willThrow();

        swift_release();
LABEL_40:
        sub_23A5F8428();
        goto LABEL_41;
      }
      v85[1] = v50;
      v85[0] = v97;
      v55 = (void *)a3[2];
      if (v55)
      {
        v21 = &v93[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger];
        swift_bridgeObjectRetain();
        a5 = 0;
        *(_QWORD *)&v56 = 136315394;
        v94 = v56;
        v89 = 0x800000023A69DAC0;
        v90 = (char *)0xD00000000000003FLL;
        v88 = a2 + 8;
        a4 = v95;
        while (a5 < a3[2])
        {
          if ((~a3[a5 + 4] & 0x7FF0000000000000) == 0)
          {
            (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a4, v21, isEscapingClosureAtFileLocation);
            v57 = sub_23A690CFC();
            v58 = sub_23A691044();
            a2 = v58;
            if (os_log_type_enabled(v57, v58))
            {
              v59 = swift_slowAlloc();
              v96 = a3;
              v60 = v59;
              v61 = v55;
              v62 = isEscapingClosureAtFileLocation;
              v63 = v21;
              v64 = v11;
              v65 = swift_slowAlloc();
              aBlock = v65;
              *(_DWORD *)v60 = v94;
              *(_QWORD *)(v60 + 4) = sub_23A5EEB40((uint64_t)v90, v89, &aBlock);
              *(_WORD *)(v60 + 12) = 2048;
              *(_QWORD *)(v60 + 14) = a5;
              _os_log_impl(&dword_23A5B0000, v57, (os_log_type_t)a2, "%s Invalid actuator velocity value at index %ld", (uint8_t *)v60, 0x16u);
              swift_arrayDestroy();
              v66 = v65;
              v11 = v64;
              v21 = v63;
              isEscapingClosureAtFileLocation = v62;
              v55 = v61;
              MEMORY[0x23B853BD0](v66, -1, -1);
              v67 = v60;
              a4 = v95;
              a3 = v96;
              MEMORY[0x23B853BD0](v67, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v11 + 8))(a4, isEscapingClosureAtFileLocation);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              a3 = sub_23A6838E0(a3);
            if (a5 >= a3[2])
              goto LABEL_47;
            a3[a5 + 4] = 0;
          }
          if (v55 == (void *)++a5)
            goto LABEL_44;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_44:
        v80 = *(void **)&v93[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
        v81 = (void *)v85[0];
        swift_unknownObjectRetain();
        v96 = v80;
        v11 = (unint64_t)a3;
        a3 = (_QWORD *)sub_23A690E04();
        v82 = (void *)sub_23A690F00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v83 = (void *)sub_23A690F00();
        swift_bridgeObjectRelease();
        v84 = swift_allocObject();
        a4 = v91;
        *(_QWORD *)(v84 + 16) = sub_23A608ED4;
        *(_QWORD *)(v84 + 24) = a4;
        a2 = swift_allocObject();
        *(_QWORD *)(a2 + 16) = sub_23A608ED8;
        *(_QWORD *)(a2 + 24) = v84;
        v102 = sub_23A609098;
        v103 = (_QWORD *)a2;
        aBlock = MEMORY[0x24BDAC760];
        v99 = 1107296256;
        v100 = sub_23A647AA0;
        v101 = &block_descriptor_168;
        v21 = (char *)_Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        a5 = (unint64_t)v96;
        objc_msgSend(v81, sel_setActuatorVelocitiesWithInfo_system_actuators_velocities_completion_, v96, a3, v82, v83, v21);

        swift_unknownObjectRelease_n();
        _Block_release(v21);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        result = swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return result;
        __break(1u);
      }
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      swift_bridgeObjectRetain();
      v22 = sub_23A691374();
      swift_bridgeObjectRelease();
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v20, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
  v32 = sub_23A690CFC();
  v33 = sub_23A691038();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_23A5B0000, v32, v33, "xpc lock/queue not initialized, no XPC configured", v34, 2u);
    MEMORY[0x23B853BD0](v34, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v20, isEscapingClosureAtFileLocation);
  sub_23A5C9938();
  v35 = swift_allocError();
  *(_OWORD *)v36 = xmmword_23A6967C0;
  *(_BYTE *)(v36 + 16) = 3;
LABEL_41:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v79 = v35;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A5FAA9C(uint64_t result, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v6 = result;
    swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      v8 = *(void **)(v3 + 8 * i + 32);
      if (v8)
      {
        swift_unknownObjectRetain();
        v9 = (void *)sub_23A690E04();
        v10 = (void *)sub_23A690F00();
        v11 = (void *)sub_23A690F00();
        v12 = (void *)sub_23A690F00();
        objc_msgSend(v8, sel_actuatorFeedbackWithInfo_system_actuators_positions_velocities_timestamp_, v6, v9, v10, v11, v12, a2);
        swift_unknownObjectRelease();

      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23A5FACE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  void *v8;
  id v9;

  v7 = MEMORY[0x23B853C6C](v4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_trajectoryProgressDelegate);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = (id)sub_23A690E04();
    objc_msgSend(v8, sel_trajectoryProgressFeedbackWithInfo_system_progress_, a1, v9, a4);
    swift_unknownObjectRelease();

  }
}

uint64_t sub_23A5FAE74(uint64_t a1, uint64_t a2)
{
  return sub_23A5FAFFC(a1, a2, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_eventDelegates, (SEL *)&selRef_systemEventDataWithInfo_data_);
}

uint64_t sub_23A5FAEF0(uint64_t a1, uint64_t a2)
{
  return sub_23A5FAFFC(a1, a2, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_batteryDelegates, (SEL *)&selRef_batteryStateDataWithInfo_data_);
}

uint64_t sub_23A5FAF6C(uint64_t a1, uint64_t a2)
{
  return sub_23A5FAFFC(a1, a2, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_trackingSummaryDelegates, (SEL *)&selRef_trackingSummaryDataWithInfo_data_);
}

uint64_t sub_23A5FAFE8(uint64_t a1, uint64_t a2)
{
  return sub_23A5FAFFC(a1, a2, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_trackingSummaryDelegates, (SEL *)&selRef_trackingSummaryDataDebugWithInfo_data_);
}

uint64_t sub_23A5FAFFC(uint64_t result, uint64_t a2, _QWORD *a3, SEL *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t i;
  void *v11;

  v5 = *(_QWORD *)(v4 + *a3);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v9 = result;
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      v11 = *(void **)(v5 + 8 * i + 32);
      if (v11)
        objc_msgSend(v11, *a4, v9, a2);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23A5FB0FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  void *v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  void *v35;
  void *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;

  v3 = sub_23A690D14();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v53 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v46 - v7;
  v9 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = &unk_23A696000;
  v13 = MEMORY[0x24BEE4AD8];
  v55 = a1;
  v56 = v11;
  v48 = v1;
  if (v11)
  {
    v47 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates;
    *(_QWORD *)&v54 = v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger;
    swift_bridgeObjectRetain();
    v14 = 0;
    *(_QWORD *)&v15 = 136315138;
    v50 = v15;
    v49 = v13 + 8;
    v52 = v8;
    do
    {
      v17 = *(void **)(v10 + 8 * v14 + 32);
      if (v17)
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 16))(v8, v54, v3);
        swift_unknownObjectRetain_n();
        v18 = v4;
        v19 = sub_23A690CFC();
        v20 = sub_23A691044();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = swift_slowAlloc();
          v22 = v3;
          v23 = v10;
          v24 = swift_slowAlloc();
          v57 = v17;
          v58 = v24;
          *(_DWORD *)v21 = v50;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(qword_25699F248);
          v25 = sub_23A690E58();
          *(_QWORD *)(v21 + 4) = sub_23A5EEB40(v25, v26, &v58);
          swift_unknownObjectRelease_n();
          a1 = v55;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A5B0000, v19, v20, "Informing delegate %s it was disconnected", (uint8_t *)v21, 0xCu);
          swift_arrayDestroy();
          v27 = v24;
          v10 = v23;
          v3 = v22;
          v8 = v52;
          MEMORY[0x23B853BD0](v27, -1, -1);
          MEMORY[0x23B853BD0](v21, -1, -1);

        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v3);
        v4 = v18;
        swift_unknownObjectRetain();
        if (a1)
          v16 = (void *)sub_23A6905C4();
        else
          v16 = 0;
        objc_msgSend(v17, sel_disconnectedWithErr_, v16);

        swift_unknownObjectRelease_n();
      }
      ++v14;
    }
    while (v56 != v14);
    swift_bridgeObjectRelease();
    v9 = v47;
    v1 = v48;
    v13 = MEMORY[0x24BEE4AD8];
    v12 = (_QWORD *)&unk_23A696000;
  }
  v28 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + v9) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v29 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_eventDelegates;
  v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_eventDelegates);
  v31 = *(_QWORD *)(v30 + 16);
  v32 = v53;
  if (v31)
  {
    *(_QWORD *)&v50 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_eventDelegates;
    v56 = v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger;
    swift_bridgeObjectRetain();
    v33 = 0;
    *(_QWORD *)&v34 = v12[153];
    v54 = v34;
    v51 = v4;
    v52 = (char *)(v13 + 8);
    do
    {
      v36 = *(void **)(v30 + 8 * v33 + 32);
      if (v36)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v32, v56, v3);
        swift_unknownObjectRetain_n();
        v37 = sub_23A690CFC();
        v38 = sub_23A691044();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = swift_slowAlloc();
          v40 = swift_slowAlloc();
          v57 = v36;
          v58 = v40;
          *(_DWORD *)v39 = v54;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_25699F240);
          v41 = sub_23A690E58();
          *(_QWORD *)(v39 + 4) = sub_23A5EEB40(v41, v42, &v58);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A5B0000, v37, v38, "Informing delegate %s it was disconnected", (uint8_t *)v39, 0xCu);
          swift_arrayDestroy();
          v43 = v40;
          a1 = v55;
          MEMORY[0x23B853BD0](v43, -1, -1);
          v44 = v39;
          v4 = v51;
          v32 = v53;
          MEMORY[0x23B853BD0](v44, -1, -1);

        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v32, v3);
        swift_unknownObjectRetain();
        if (a1)
          v35 = (void *)sub_23A6905C4();
        else
          v35 = 0;
        objc_msgSend(v36, sel_disconnectedWithErr_, v35);

        swift_unknownObjectRelease_n();
      }
      ++v33;
    }
    while (v31 != v33);
    swift_bridgeObjectRelease();
    v1 = v48;
    v29 = v50;
    v28 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v1 + v29) = v28;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A5FB63C(void *a1, unint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  void *v47;
  os_unfair_lock_s *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  void (*v67)(char *, char *, _QWORD *);
  char *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  char *v72;
  void *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint8_t *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  id v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  _QWORD *v90;
  id v91;
  uint64_t v92;
  _QWORD *v93;
  uint8_t *v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  id v105;
  char *v106;
  char *v107;
  uint64_t aBlock;
  uint64_t v109;
  void *v110;
  void *v111;
  uint64_t (*v112)();
  _QWORD *v113;

  v105 = a1;
  v9 = (_QWORD *)sub_23A690D14();
  v10 = *(v9 - 1);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v96 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v106 = (char *)&v96 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v96 - v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a5;
  if (a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] != 1)
  {
    (*(void (**)(char *, char *, _QWORD *))(v10 + 16))(v20, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v9);
    v32 = sub_23A690CFC();
    v33 = sub_23A691038();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_23A5B0000, v32, v33, "xpc lock/queue not initialized, no XPC configured", v34, 2u);
      MEMORY[0x23B853BD0](v34, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v10 + 8))(v20, v9);
    sub_23A5C9938();
    v35 = swift_allocError();
    *(_OWORD *)v36 = xmmword_23A6967C0;
    *(_BYTE *)(v36 + 16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v37 = v35;
    goto LABEL_34;
  }
  v98 = a3;
  v99 = v16;
  v100 = v10;
  v101 = a5;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_23A691374();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v102 = v21;
  v103 = a4;
  v104 = v13;
  if (v22)
  {
    aBlock = MEMORY[0x24BEE4AF8];
    result = sub_23A5EF3DC(0, v22 & ~(v22 >> 63), 0);
    if (v22 < 0)
    {
      __break(1u);
      return result;
    }
    v97 = v9;
    v24 = aBlock;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v25 = 0;
      do
      {
        v26 = MEMORY[0x23B85312C](v25, a2);
        v28 = *(_QWORD *)(v26 + OBJC_IVAR____TtC11DockKitCore9Component_name);
        v27 = *(_QWORD *)(v26 + OBJC_IVAR____TtC11DockKitCore9Component_name + 8);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        aBlock = v24;
        v30 = *(_QWORD *)(v24 + 16);
        v29 = *(_QWORD *)(v24 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_23A5EF3DC(v29 > 1, v30 + 1, 1);
          v24 = aBlock;
        }
        ++v25;
        *(_QWORD *)(v24 + 16) = v30 + 1;
        v31 = v24 + 16 * v30;
        *(_QWORD *)(v31 + 32) = v28;
        *(_QWORD *)(v31 + 40) = v27;
      }
      while (v22 != v25);
    }
    else
    {
      v38 = (_QWORD *)(a2 + 32);
      do
      {
        v39 = (uint64_t *)(*v38 + OBJC_IVAR____TtC11DockKitCore9Component_name);
        v41 = *v39;
        v40 = v39[1];
        aBlock = v24;
        v43 = *(_QWORD *)(v24 + 16);
        v42 = *(_QWORD *)(v24 + 24);
        swift_bridgeObjectRetain();
        if (v43 >= v42 >> 1)
        {
          sub_23A5EF3DC(v42 > 1, v43 + 1, 1);
          v24 = aBlock;
        }
        *(_QWORD *)(v24 + 16) = v43 + 1;
        v44 = v24 + 16 * v43;
        *(_QWORD *)(v44 + 32) = v41;
        *(_QWORD *)(v44 + 40) = v40;
        ++v38;
        --v22;
      }
      while (v22);
    }
    v21 = v102;
    a4 = v103;
    v9 = v97;
  }
  v45 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v46 = *(os_unfair_lock_s **)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
  swift_retain();
  os_unfair_lock_lock(v46 + 4);
  swift_release();
  v47 = *(void **)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
  *(_QWORD *)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

  v48 = *(os_unfair_lock_s **)&a4[v45];
  swift_retain();
  os_unfair_lock_unlock(v48 + 4);
  swift_release();
  v49 = sub_23A5F7298();
  if (v49)
  {
    v50 = (char *)v49;
    v51 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v52 = (_QWORD *)swift_allocObject();
    v52[2] = v51;
    v52[3] = sub_23A608ED4;
    v52[4] = v21;
    v112 = sub_23A608EE0;
    v113 = v52;
    v53 = a4;
    v54 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v109 = 1107296256;
    v110 = sub_23A60D824;
    v111 = &block_descriptor_178;
    v55 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v56 = objc_msgSend(v50, sel_synchronousRemoteObjectProxyWithErrorHandler_, v55);
    _Block_release(v55);
    sub_23A6911F4();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
    v57 = v50;
    if ((swift_dynamicCast() & 1) == 0)
    {
      v106 = v50;
      swift_bridgeObjectRelease();
      v75 = v99;
      v76 = v100;
      v67 = *(void (**)(char *, char *, _QWORD *))(v100 + 16);
      v67(v99, &v53[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v9);
      v77 = sub_23A690CFC();
      v78 = sub_23A691038();
      a4 = v53;
      if (os_log_type_enabled(v77, v78))
      {
        v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v79 = 0;
        _os_log_impl(&dword_23A5B0000, v77, v78, "failed asynchronous server XPC connection", v79, 2u);
        v80 = v79;
        v75 = v99;
        MEMORY[0x23B853BD0](v80, -1, -1);
      }

      v81 = v75;
      v72 = *(char **)(v76 + 8);
      ((void (*)(char *, _QWORD *))v72)(v81, v9);
      sub_23A5C9938();
      v73 = (void *)swift_allocError();
      *(_OWORD *)v82 = xmmword_23A6967D0;
      *(_BYTE *)(v82 + 16) = 4;
      swift_willThrow();

      swift_release();
      goto LABEL_30;
    }
    v106 = v107;
    v58 = *(void **)&v53[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
    swift_unknownObjectRetain();
    v105 = v58;
    v59 = v21;
    v60 = (void *)sub_23A690E04();
    v9 = (_QWORD *)sub_23A690F00();
    swift_bridgeObjectRelease();
    v61 = (void *)sub_23A690F00();
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = sub_23A608ED4;
    *(_QWORD *)(v62 + 24) = v59;
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = sub_23A608ED8;
    *(_QWORD *)(v63 + 24) = v62;
    v112 = sub_23A609098;
    v113 = (_QWORD *)v63;
    aBlock = v54;
    v109 = 1107296256;
    v110 = sub_23A647AA0;
    v111 = &block_descriptor_188;
    v64 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v65 = v105;
    a4 = v106;
    objc_msgSend(v106, sel_setActuatorPositionsWithInfo_system_actuators_positions_completion_, v105, v60, v9, v61, v64);

    swift_unknownObjectRelease_n();
    _Block_release(v64);
    LOBYTE(v64) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    result = swift_release();
    if ((v64 & 1) == 0)
      return result;
    __break(1u);
  }
  swift_bridgeObjectRelease();
  v66 = v100;
  v67 = *(void (**)(char *, char *, _QWORD *))(v100 + 16);
  v68 = v106;
  v67(v106, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v9);
  v69 = sub_23A690CFC();
  v70 = sub_23A691038();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v71 = 0;
    _os_log_impl(&dword_23A5B0000, v69, v70, "failed connecting to server xpc", v71, 2u);
    MEMORY[0x23B853BD0](v71, -1, -1);
  }

  v72 = *(char **)(v66 + 8);
  ((void (*)(char *, _QWORD *))v72)(v68, v9);
  sub_23A5C9938();
  v73 = (void *)swift_allocError();
  *(_QWORD *)v74 = 0xD00000000000001FLL;
  *(_QWORD *)(v74 + 8) = 0x800000023A69DA20;
  *(_BYTE *)(v74 + 16) = 4;
  swift_willThrow();
LABEL_30:
  v83 = v104;
  v67(v104, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v9);
  v84 = v73;
  v85 = v73;
  v86 = sub_23A690CFC();
  v87 = sub_23A691038();
  if (os_log_type_enabled(v86, v87))
  {
    v88 = (uint8_t *)swift_slowAlloc();
    v89 = swift_slowAlloc();
    v106 = v72;
    v90 = (_QWORD *)v89;
    *(_DWORD *)v88 = 138412290;
    v91 = v73;
    v92 = _swift_stdlib_bridgeErrorToNSError();
    aBlock = v92;
    sub_23A6911D0();
    *v90 = v92;

    _os_log_impl(&dword_23A5B0000, v86, v87, "dockkit: failed getting sync connection, can't send xpc %@", v88, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    v93 = v90;
    v72 = v106;
    MEMORY[0x23B853BD0](v93, -1, -1);
    v94 = v88;
    v83 = v104;
    MEMORY[0x23B853BD0](v94, -1, -1);
  }
  else
  {

  }
  ((void (*)(char *, _QWORD *))v72)(v83, v9);
  sub_23A5F8428();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v95 = v73;
LABEL_34:
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A5FC0C4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  void *v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  id v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  char *v73;
  id v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  _QWORD *v79;
  id v80;
  uint64_t v81;
  uint8_t *v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  char *v88;
  _QWORD v89[2];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void *v97;
  uint64_t aBlock;
  uint64_t v99;
  void *v100;
  void *v101;
  void *v102;
  _QWORD *v103;

  v8 = sub_23A690D14();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v89 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v96 = (char *)v89 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v89 - v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a4;
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v19, a3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v8);
    v31 = sub_23A690CFC();
    v32 = sub_23A691038();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_23A5B0000, v31, v32, "xpc lock/queue not initialized, no XPC configured", v33, 2u);
      MEMORY[0x23B853BD0](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
    sub_23A5C9938();
    v34 = swift_allocError();
    *(_OWORD *)v35 = xmmword_23A6967C0;
    *(_BYTE *)(v35 + 16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v36 = v34;
    goto LABEL_37;
  }
  v93 = v15;
  v94 = v9;
  v95 = v12;
  if (!a2)
  {
    v23 = 0;
    goto LABEL_23;
  }
  v89[1] = a1;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_23A691374();
    if (v21)
      goto LABEL_5;
LABEL_22:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
    goto LABEL_23;
  }
  v21 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v21)
    goto LABEL_22;
LABEL_5:
  aBlock = MEMORY[0x24BEE4AF8];
  result = sub_23A5EF3DC(0, v21 & ~(v21 >> 63), 0);
  if (v21 < 0)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v91 = a3;
  v92 = v8;
  v89[0] = a4;
  v90 = v20;
  v23 = aBlock;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v24 = 0;
    do
    {
      v25 = MEMORY[0x23B85312C](v24, a2);
      v27 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11DockKitCore9Component_name);
      v26 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11DockKitCore9Component_name + 8);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      aBlock = v23;
      v29 = *(_QWORD *)(v23 + 16);
      v28 = *(_QWORD *)(v23 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_23A5EF3DC(v28 > 1, v29 + 1, 1);
        v23 = aBlock;
      }
      ++v24;
      *(_QWORD *)(v23 + 16) = v29 + 1;
      v30 = v23 + 16 * v29;
      *(_QWORD *)(v30 + 32) = v27;
      *(_QWORD *)(v30 + 40) = v26;
    }
    while (v21 != v24);
  }
  else
  {
    v37 = (_QWORD *)(a2 + 32);
    do
    {
      v38 = (uint64_t *)(*v37 + OBJC_IVAR____TtC11DockKitCore9Component_name);
      v40 = *v38;
      v39 = v38[1];
      aBlock = v23;
      v42 = *(_QWORD *)(v23 + 16);
      v41 = *(_QWORD *)(v23 + 24);
      swift_bridgeObjectRetain();
      if (v42 >= v41 >> 1)
      {
        sub_23A5EF3DC(v41 > 1, v42 + 1, 1);
        v23 = aBlock;
      }
      *(_QWORD *)(v23 + 16) = v42 + 1;
      v43 = v23 + 16 * v42;
      *(_QWORD *)(v43 + 32) = v40;
      *(_QWORD *)(v43 + 40) = v39;
      ++v37;
      --v21;
    }
    while (v21);
  }
  swift_bridgeObjectRelease();
  v20 = v90;
  a3 = v91;
  v8 = v92;
LABEL_23:
  v44 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v45 = *(os_unfair_lock_s **)(a3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
  swift_retain();
  os_unfair_lock_lock(v45 + 4);
  swift_release();
  v46 = *(void **)(a3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError) = 0;

  v47 = *(os_unfair_lock_s **)(a3 + v44);
  swift_retain();
  os_unfair_lock_unlock(v47 + 4);
  swift_release();
  v48 = sub_23A5F7298();
  if (!v48)
  {
    swift_bridgeObjectRelease();
    v60 = v94;
    v61 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
    v62 = v96;
    v61(v96, a3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v8);
    v63 = sub_23A690CFC();
    v64 = sub_23A691038();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_23A5B0000, v63, v64, "failed connecting to server xpc", v65, 2u);
      MEMORY[0x23B853BD0](v65, -1, -1);
    }

    v96 = *(char **)(v60 + 8);
    ((void (*)(char *, uint64_t))v96)(v62, v8);
    sub_23A5C9938();
    v66 = (void *)swift_allocError();
    *(_QWORD *)v67 = 0xD00000000000001FLL;
    *(_QWORD *)(v67 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v67 + 16) = 4;
    swift_willThrow();
    goto LABEL_33;
  }
  v49 = (void *)v48;
  v50 = v20;
  v51 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v52 = (_QWORD *)swift_allocObject();
  v52[2] = v51;
  v52[3] = sub_23A60889C;
  v52[4] = v50;
  v102 = sub_23A608EE8;
  v103 = v52;
  aBlock = MEMORY[0x24BDAC760];
  v99 = 1107296256;
  v100 = sub_23A60D824;
  v101 = &block_descriptor_139;
  v53 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v54 = objc_msgSend(v49, sel_synchronousRemoteObjectProxyWithErrorHandler_, v53);
  _Block_release(v53);
  sub_23A6911F4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v90 = v50;
    swift_bridgeObjectRelease();
    v68 = v94;
    v61 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
    v61(v93, a3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v8);
    v69 = sub_23A690CFC();
    v70 = sub_23A691038();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v71 = 0;
      _os_log_impl(&dword_23A5B0000, v69, v70, "failed asynchronous server XPC connection", v71, 2u);
      MEMORY[0x23B853BD0](v71, -1, -1);
    }

    v96 = *(char **)(v68 + 8);
    ((void (*)(char *, uint64_t))v96)(v93, v8);
    sub_23A5C9938();
    v66 = (void *)swift_allocError();
    *(_OWORD *)v72 = xmmword_23A6967D0;
    *(_BYTE *)(v72 + 16) = 4;
    swift_willThrow();

    swift_release();
LABEL_33:
    v73 = v95;
    v61(v95, a3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v8);
    v74 = v66;
    v75 = v66;
    v76 = sub_23A690CFC();
    v77 = sub_23A691038();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      v79 = (_QWORD *)swift_slowAlloc();
      v91 = a3;
      v92 = v8;
      *(_DWORD *)v78 = 138412290;
      v80 = v66;
      v81 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v81;
      v8 = v92;
      sub_23A6911D0();
      *v79 = v81;

      _os_log_impl(&dword_23A5B0000, v76, v77, "dockkit: failed getting sync connection, can't send xpc %@", v78, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v79, -1, -1);
      v82 = v78;
      v73 = v95;
      MEMORY[0x23B853BD0](v82, -1, -1);
    }
    else
    {

    }
    v83 = v96;

    ((void (*)(char *, uint64_t))v83)(v73, v8);
    sub_23A5F8428();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v84 = v66;
LABEL_37:
    swift_continuation_throwingResumeWithError();
    return swift_release();
  }
  v55 = v50;
  v56 = v97;
  v57 = *(void **)(a3 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
  swift_unknownObjectRetain();
  v96 = v57;
  v58 = (void *)sub_23A690E04();
  if (v23)
  {
    v59 = (void *)sub_23A690F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    v59 = 0;
  }
  v85 = swift_allocObject();
  *(_QWORD *)(v85 + 16) = sub_23A60889C;
  *(_QWORD *)(v85 + 24) = v55;
  v86 = swift_allocObject();
  *(_QWORD *)(v86 + 16) = sub_23A608ED8;
  *(_QWORD *)(v86 + 24) = v85;
  v102 = sub_23A608710;
  v103 = (_QWORD *)v86;
  aBlock = MEMORY[0x24BDAC760];
  v99 = 1107296256;
  v100 = sub_23A5FCB6C;
  v101 = &block_descriptor_148;
  v87 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v88 = v96;
  objc_msgSend(v56, sel_getCurrentActuatorFeedbackWithInfo_system_actuators_completion_, v96, v58, v59, v87);

  swift_unknownObjectRelease_n();
  _Block_release(v87);
  LOBYTE(v87) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v87 & 1) != 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  return result;
}

void sub_23A5FCB6C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  v7 = a2;
  v6 = a3;
  v5(a2, a3);

}

uint64_t sub_23A5FCBCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = v1;
  return swift_task_switch();
}

uint64_t sub_23A5FCBE4()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[10];
  v1 = (char *)v0[11];
  v0[2] = v0;
  v0[3] = sub_23A5FCC74;
  v3 = swift_continuation_init();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  sub_23A606C0C(v2, (void (*)(void))sub_23A608EDC, v4, v1);
  swift_release();
  return swift_continuation_await();
}

uint64_t sub_23A5FCC74()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23A5FCCC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = v0;
  return swift_task_switch();
}

uint64_t sub_23A5FCCE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[11];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_23A5FCD3C;
  v2 = swift_continuation_init();
  sub_23A5FCE58(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_23A5FCD3C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 80));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23A5FCDAC(void *a1, void *a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v5;
  id v6;
  uint64_t v9;
  id v10;
  void *v11;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v5 = a2;
    v6 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v11 = a1;
    v9 = *(_QWORD *)(*(_QWORD *)(a3 + 64) + 40);
    v10 = a1;
    sub_23A608DD0((uint64_t)&v11, v9, a4);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_23A5FCE58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  void *v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  void (*v39)(char *, uint64_t, uint64_t);
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  char *v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  _QWORD *v56;
  id v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  _QWORD v62[2];
  char *v63;
  uint64_t v64;
  void *v65;
  uint64_t aBlock;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  _QWORD *v71;

  v64 = sub_23A690D14();
  v4 = *(_QWORD *)(v64 - 8);
  v5 = MEMORY[0x24BDAC7A8](v64);
  v7 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v62 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v62 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v62 - v14;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) == 1)
  {
    v63 = v7;
    v17 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
    v18 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
    swift_retain();
    os_unfair_lock_lock(v18 + 4);
    swift_release();
    v19 = *(void **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError) = 0;

    v20 = *(os_unfair_lock_s **)(a1 + v17);
    swift_retain();
    os_unfair_lock_unlock(v20 + 4);
    swift_release();
    v21 = sub_23A5F7298();
    v62[1] = a2;
    if (v21)
    {
      v22 = (void *)v21;
      v23 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = v23;
      v24[3] = sub_23A608D90;
      v24[4] = v16;
      v70 = sub_23A608DB4;
      v71 = v24;
      v25 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v67 = 1107296256;
      v68 = sub_23A60D824;
      v69 = &block_descriptor_406;
      v26 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      v27 = objc_msgSend(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_, v26);
      _Block_release(v26);
      sub_23A6911F4();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v28 = v65;
        v29 = *(void **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = sub_23A608D90;
        *(_QWORD *)(v30 + 24) = v16;
        v70 = sub_23A608710;
        v71 = (_QWORD *)v30;
        aBlock = v25;
        v67 = 1107296256;
        v68 = sub_23A5FD848;
        v69 = &block_descriptor_412;
        v31 = _Block_copy(&aBlock);
        swift_retain();
        swift_unknownObjectRetain();
        v32 = v29;
        swift_release();
        objc_msgSend(v28, sel_getCurrentSystemEventDataWithInfo_completion_, v32, v31);
        _Block_release(v31);

        swift_unknownObjectRelease_n();
        swift_release();

        return swift_release();
      }
      v62[0] = v16;
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v39(v10, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
      v46 = sub_23A690CFC();
      v47 = sub_23A691038();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_23A5B0000, v46, v47, "failed asynchronous server XPC connection", v48, 2u);
        MEMORY[0x23B853BD0](v48, -1, -1);
      }

      v43 = *(void (**)(char *, uint64_t))(v4 + 8);
      v43(v10, v64);
      sub_23A5C9938();
      v44 = (void *)swift_allocError();
      *(_OWORD *)v49 = xmmword_23A6967D0;
      *(_BYTE *)(v49 + 16) = 4;
      swift_willThrow();
      swift_release();

    }
    else
    {
      v62[0] = v16;
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v39(v13, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
      v40 = sub_23A690CFC();
      v41 = sub_23A691038();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_23A5B0000, v40, v41, "failed connecting to server xpc", v42, 2u);
        MEMORY[0x23B853BD0](v42, -1, -1);
      }

      v43 = *(void (**)(char *, uint64_t))(v4 + 8);
      v43(v13, v64);
      sub_23A5C9938();
      v44 = (void *)swift_allocError();
      *(_QWORD *)v45 = 0xD00000000000001FLL;
      *(_QWORD *)(v45 + 8) = 0x800000023A69DA20;
      *(_BYTE *)(v45 + 16) = 4;
      swift_willThrow();
    }
    v50 = v63;
    v39(v63, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
    v51 = v44;
    v52 = v44;
    v53 = sub_23A690CFC();
    v54 = sub_23A691038();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v55 = 138412290;
      v57 = v44;
      v58 = v43;
      v59 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v59;
      v50 = v63;
      sub_23A6911D0();
      *v56 = v59;
      v43 = v58;

      _os_log_impl(&dword_23A5B0000, v53, v54, "dockkit: failed getting sync connection, can't send xpc %@", v55, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v56, -1, -1);
      MEMORY[0x23B853BD0](v55, -1, -1);
    }
    else
    {

    }
    v43(v50, v64);
    sub_23A5F8428();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v60 = v44;
    swift_continuation_throwingResumeWithError();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v15, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
    v33 = sub_23A690CFC();
    v34 = sub_23A691038();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_23A5B0000, v33, v34, "xpc lock/queue not initialized, no XPC configured", v35, 2u);
      MEMORY[0x23B853BD0](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v64);
    sub_23A5C9938();
    v36 = swift_allocError();
    *(_OWORD *)v37 = xmmword_23A6967C0;
    *(_BYTE *)(v37 + 16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v38 = v36;
    swift_continuation_throwingResumeWithError();
  }
  return swift_release();
}

uint64_t sub_23A5FD638(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD, void *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint8_t *v20;
  _QWORD *v21;
  uint64_t (*v22)(_QWORD, void *);
  uint64_t v23;

  v22 = a3;
  v5 = sub_23A690D14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x23B853C6C](a2 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v5);

    v11 = a1;
    v12 = a1;
    v13 = sub_23A690CFC();
    v14 = sub_23A691038();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v20 = v15 + 4;
      v16 = a1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      v23 = v17;
      sub_23A6911D0();
      v18 = v21;
      *v21 = v17;

      _os_log_impl(&dword_23A5B0000, v13, v14, "failure from proxy: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v18, -1, -1);
      MEMORY[0x23B853BD0](v15, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v22(0, a1);
}

void sub_23A5FD848(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_23A5FD8BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_23A5FD8D4()
{
  _QWORD *v0;
  _BYTE *v1;
  uint64_t v2;

  v1 = (_BYTE *)v0[10];
  v0[2] = v0;
  v0[3] = sub_23A608EEC;
  v2 = swift_continuation_init();
  sub_23A5FD928(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_23A5FD928(_BYTE *a1, uint64_t a2)
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  void *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t result;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD v43[3];
  uint64_t aBlock;
  uint64_t v45;
  void (*v46)(uint64_t, void *);
  void *v47;
  uint64_t (*v48)();
  _QWORD *v49;

  isEscapingClosureAtFileLocation = sub_23A690D14();
  v5 = *(_QWORD *)(isEscapingClosureAtFileLocation - 8);
  v6 = MEMORY[0x24BDAC7A8](isEscapingClosureAtFileLocation);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v43 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v43 - v12;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  if (a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] != 1)
  {
LABEL_6:
    (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))(v13, &a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
    v29 = sub_23A690CFC();
    v30 = sub_23A691038();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_23A5B0000, v29, v30, "xpc lock/queue not initialized, no XPC configured", v31, 2u);
      MEMORY[0x23B853BD0](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, isEscapingClosureAtFileLocation);
    sub_23A5C9938();
    v32 = swift_allocError();
    *(_OWORD *)v33 = xmmword_23A6967C0;
    *(_BYTE *)(v33 + 16) = 3;
    goto LABEL_16;
  }
  v15 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v16 = *(os_unfair_lock_s **)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  swift_release();
  v17 = *(void **)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
  *(_QWORD *)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

  v18 = *(os_unfair_lock_s **)&a1[v15];
  swift_retain();
  os_unfair_lock_unlock(v18 + 4);
  swift_release();
  v19 = sub_23A5F7298();
  if (v19)
  {
    v20 = (void *)v19;
    v43[1] = a2;
    v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v21;
    v22[3] = sub_23A608EDC;
    v22[4] = v14;
    v48 = sub_23A608EE4;
    v49 = v22;
    aBlock = MEMORY[0x24BDAC760];
    v45 = 1107296256;
    v46 = sub_23A60D824;
    v47 = &block_descriptor_386;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v24 = objc_msgSend(v20, sel_synchronousRemoteObjectProxyWithErrorHandler_, v23);
    _Block_release(v23);
    sub_23A6911F4();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v25 = (void *)v43[2];
      v26 = *(void **)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
      v13 = (char *)swift_allocObject();
      *((_QWORD *)v13 + 2) = sub_23A608EDC;
      *((_QWORD *)v13 + 3) = v14;
      v5 = swift_allocObject();
      *(_QWORD *)(v5 + 16) = sub_23A608710;
      *(_QWORD *)(v5 + 24) = v13;
      v48 = sub_23A60909C;
      v49 = (_QWORD *)v5;
      aBlock = MEMORY[0x24BDAC760];
      v45 = 1107296256;
      v46 = sub_23A679C34;
      v47 = &block_descriptor_396;
      a1 = _Block_copy(&aBlock);
      swift_retain();
      v27 = v26;
      swift_retain();
      swift_release();
      objc_msgSend(v25, sel_stopSystemEventsDataWithInfo_completion_, v27, a1);

      swift_unknownObjectRelease();
      _Block_release(a1);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      result = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return result;
      __break(1u);
      goto LABEL_6;
    }
    (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))(v8, &a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
    v38 = sub_23A690CFC();
    v39 = sub_23A691038();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_23A5B0000, v38, v39, "failed asynchronous server XPC connection", v40, 2u);
      MEMORY[0x23B853BD0](v40, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, isEscapingClosureAtFileLocation);
    sub_23A5C9938();
    v32 = swift_allocError();
    *(_OWORD *)v41 = xmmword_23A6967D0;
    *(_BYTE *)(v41 + 16) = 4;
    swift_willThrow();
    swift_release();

  }
  else
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))(v11, &a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
    v34 = sub_23A690CFC();
    v35 = sub_23A691038();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_23A5B0000, v34, v35, "failed connecting to server xpc", v36, 2u);
      MEMORY[0x23B853BD0](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, isEscapingClosureAtFileLocation);
    sub_23A5C9938();
    v32 = swift_allocError();
    *(_QWORD *)v37 = 0xD00000000000001FLL;
    *(_QWORD *)(v37 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v37 + 16) = 4;
    swift_willThrow();
  }
  sub_23A5F8428();
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v42 = v32;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A5FDFB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = v1;
  return swift_task_switch();
}

uint64_t sub_23A5FDFC8()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  void *v3;

  v2 = v0[10];
  v1 = (char *)v0[11];
  v0[2] = v0;
  v0[3] = sub_23A608EEC;
  v3 = (void *)swift_continuation_init();
  sub_23A5FE028(v2, v1, v3);
  return swift_continuation_await();
}

uint64_t sub_23A5FE028(uint64_t a1, char *a2, void *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  void *v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  char *v34;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, char *, _QWORD *);
  _QWORD *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void (*v47)(char *, _QWORD *);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  _QWORD *v60;
  id v61;
  void (*v62)(char *, _QWORD *);
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  id v69;
  void *v70;
  uint64_t aBlock;
  uint64_t v72;
  void (*v73)(uint64_t, void *);
  void *v74;
  uint64_t (*v75)();
  _QWORD *v76;

  v6 = (_QWORD *)sub_23A690D14();
  v7 = (_QWORD *)*(v6 - 1);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v66 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v66 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v66 - v17);
  v19 = swift_allocObject();
  v69 = a3;
  *(_QWORD *)(v19 + 16) = a3;
  if (a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] == 1)
  {
    v67 = v10;
    v68 = v6;
    v20 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
    v21 = *(os_unfair_lock_s **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    swift_release();
    v22 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
    *(_QWORD *)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

    v23 = *(os_unfair_lock_s **)&a2[v20];
    swift_retain();
    os_unfair_lock_unlock(v23 + 4);
    swift_release();
    v24 = sub_23A5F7298();
    if (v24)
    {
      v6 = (_QWORD *)v24;
      v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v26 = (_QWORD *)swift_allocObject();
      v26[2] = v25;
      v26[3] = sub_23A608EDC;
      v26[4] = v19;
      v75 = sub_23A608EE4;
      v76 = v26;
      v27 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v72 = 1107296256;
      v73 = sub_23A60D824;
      v74 = &block_descriptor_366;
      v28 = _Block_copy(&aBlock);
      v29 = v19;
      swift_retain();
      swift_retain();
      swift_release();
      v30 = objc_msgSend(v6, sel_synchronousRemoteObjectProxyWithErrorHandler_, v28);
      _Block_release(v28);
      sub_23A6911F4();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v69 = v70;
        v31 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
        v18 = (_QWORD *)swift_allocObject();
        v18[2] = a2;
        v18[3] = a1;
        v18[4] = sub_23A608EDC;
        v18[5] = v29;
        v32 = swift_allocObject();
        *(_QWORD *)(v32 + 16) = sub_23A608D28;
        *(_QWORD *)(v32 + 24) = v18;
        v75 = sub_23A60909C;
        v76 = (_QWORD *)v32;
        aBlock = v27;
        v72 = 1107296256;
        v73 = sub_23A679C34;
        v74 = &block_descriptor_376;
        v7 = _Block_copy(&aBlock);
        swift_retain();
        v33 = v31;
        v34 = a2;
        swift_unknownObjectRetain();
        swift_retain();
        swift_release();
        objc_msgSend(v69, sel_startBatteryStatesDataWithInfo_completion_, v33, v7);

        swift_unknownObjectRelease();
        _Block_release(v7);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        swift_release();
        result = swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return result;
        __break(1u);
        goto LABEL_6;
      }
      v42 = (void (*)(char *, char *, _QWORD *))v7[2];
      v42(v13, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v68);
      v49 = sub_23A690CFC();
      v50 = sub_23A691038();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v51 = 0;
        _os_log_impl(&dword_23A5B0000, v49, v50, "failed asynchronous server XPC connection", v51, 2u);
        MEMORY[0x23B853BD0](v51, -1, -1);
      }

      v47 = (void (*)(char *, _QWORD *))v7[1];
      v52 = v68;
      v47(v13, v68);
      sub_23A5C9938();
      v40 = (void *)swift_allocError();
      *(_OWORD *)v53 = xmmword_23A6967D0;
      *(_BYTE *)(v53 + 16) = 4;
      swift_willThrow();
      swift_release();

      v43 = v52;
      v19 = v29;
    }
    else
    {
      v42 = (void (*)(char *, char *, _QWORD *))v7[2];
      v43 = v68;
      v42(v16, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v68);
      v44 = sub_23A690CFC();
      v45 = sub_23A691038();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_23A5B0000, v44, v45, "failed connecting to server xpc", v46, 2u);
        MEMORY[0x23B853BD0](v46, -1, -1);
      }

      v47 = (void (*)(char *, _QWORD *))v7[1];
      v47(v16, v43);
      sub_23A5C9938();
      v40 = (void *)swift_allocError();
      *(_QWORD *)v48 = 0xD00000000000001FLL;
      *(_QWORD *)(v48 + 8) = 0x800000023A69DA20;
      *(_BYTE *)(v48 + 16) = 4;
      swift_willThrow();
    }
    v54 = v67;
    v42(v67, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v43);
    v55 = v40;
    v56 = v40;
    v57 = sub_23A690CFC();
    v58 = sub_23A691038();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = (_QWORD *)swift_slowAlloc();
      v66 = v19;
      *(_DWORD *)v59 = 138412290;
      v61 = v40;
      v62 = v47;
      v63 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v63;
      v54 = v67;
      sub_23A6911D0();
      *v60 = v63;
      v47 = v62;

      _os_log_impl(&dword_23A5B0000, v57, v58, "dockkit: failed getting sync connection, can't send xpc %@", v59, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      v64 = v60;
      v43 = v68;
      MEMORY[0x23B853BD0](v64, -1, -1);
      MEMORY[0x23B853BD0](v59, -1, -1);
    }
    else
    {

    }
    v47(v54, v43);
    sub_23A5F8428();
    goto LABEL_19;
  }
LABEL_6:
  ((void (*)(_QWORD *, char *, _QWORD *))v7[2])(v18, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v6);
  v37 = sub_23A690CFC();
  v38 = sub_23A691038();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    _os_log_impl(&dword_23A5B0000, v37, v38, "xpc lock/queue not initialized, no XPC configured", v39, 2u);
    MEMORY[0x23B853BD0](v39, -1, -1);
  }

  ((void (*)(_QWORD *, void *))v7[1])(v18, v6);
  sub_23A5C9938();
  v40 = (void *)swift_allocError();
  *(_OWORD *)v41 = xmmword_23A6967C0;
  *(_BYTE *)(v41 + 16) = 3;
LABEL_19:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v65 = v40;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A5FE864(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = v1;
  return swift_task_switch();
}

uint64_t sub_23A5FE87C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  void *v3;

  v2 = v0[10];
  v1 = (char *)v0[11];
  v0[2] = v0;
  v0[3] = sub_23A608EEC;
  v3 = (void *)swift_continuation_init();
  sub_23A5FE8DC(v2, v1, v3);
  return swift_continuation_await();
}

uint64_t sub_23A5FE8DC(uint64_t a1, char *a2, void *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  void *v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  char *v34;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, char *, _QWORD *);
  _QWORD *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void (*v47)(char *, _QWORD *);
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  _QWORD *v60;
  id v61;
  void (*v62)(char *, _QWORD *);
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  id v69;
  void *v70;
  uint64_t aBlock;
  uint64_t v72;
  void (*v73)(uint64_t, void *);
  void *v74;
  uint64_t (*v75)();
  _QWORD *v76;

  v6 = (_QWORD *)sub_23A690D14();
  v7 = (_QWORD *)*(v6 - 1);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v66 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v66 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v66 - v17);
  v19 = swift_allocObject();
  v69 = a3;
  *(_QWORD *)(v19 + 16) = a3;
  if (a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] == 1)
  {
    v67 = v10;
    v68 = v6;
    v20 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
    v21 = *(os_unfair_lock_s **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    swift_release();
    v22 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
    *(_QWORD *)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

    v23 = *(os_unfair_lock_s **)&a2[v20];
    swift_retain();
    os_unfair_lock_unlock(v23 + 4);
    swift_release();
    v24 = sub_23A5F7298();
    if (v24)
    {
      v6 = (_QWORD *)v24;
      v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v26 = (_QWORD *)swift_allocObject();
      v26[2] = v25;
      v26[3] = sub_23A608EDC;
      v26[4] = v19;
      v75 = sub_23A608EE4;
      v76 = v26;
      v27 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v72 = 1107296256;
      v73 = sub_23A60D824;
      v74 = &block_descriptor_346;
      v28 = _Block_copy(&aBlock);
      v29 = v19;
      swift_retain();
      swift_retain();
      swift_release();
      v30 = objc_msgSend(v6, sel_synchronousRemoteObjectProxyWithErrorHandler_, v28);
      _Block_release(v28);
      sub_23A6911F4();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v69 = v70;
        v31 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
        v18 = (_QWORD *)swift_allocObject();
        v18[2] = a2;
        v18[3] = a1;
        v18[4] = sub_23A608EDC;
        v18[5] = v29;
        v32 = swift_allocObject();
        *(_QWORD *)(v32 + 16) = sub_23A608CDC;
        *(_QWORD *)(v32 + 24) = v18;
        v75 = sub_23A60909C;
        v76 = (_QWORD *)v32;
        aBlock = v27;
        v72 = 1107296256;
        v73 = sub_23A679C34;
        v74 = &block_descriptor_356;
        v7 = _Block_copy(&aBlock);
        swift_retain();
        v33 = v31;
        v34 = a2;
        swift_unknownObjectRetain();
        swift_retain();
        swift_release();
        objc_msgSend(v69, sel_startTrackingSummaryDataWithInfo_completion_, v33, v7);

        swift_unknownObjectRelease();
        _Block_release(v7);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        swift_release();
        result = swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return result;
        __break(1u);
        goto LABEL_6;
      }
      v42 = (void (*)(char *, char *, _QWORD *))v7[2];
      v42(v13, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v68);
      v49 = sub_23A690CFC();
      v50 = sub_23A691038();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v51 = 0;
        _os_log_impl(&dword_23A5B0000, v49, v50, "failed asynchronous server XPC connection", v51, 2u);
        MEMORY[0x23B853BD0](v51, -1, -1);
      }

      v47 = (void (*)(char *, _QWORD *))v7[1];
      v52 = v68;
      v47(v13, v68);
      sub_23A5C9938();
      v40 = (void *)swift_allocError();
      *(_OWORD *)v53 = xmmword_23A6967D0;
      *(_BYTE *)(v53 + 16) = 4;
      swift_willThrow();
      swift_release();

      v43 = v52;
      v19 = v29;
    }
    else
    {
      v42 = (void (*)(char *, char *, _QWORD *))v7[2];
      v43 = v68;
      v42(v16, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v68);
      v44 = sub_23A690CFC();
      v45 = sub_23A691038();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_23A5B0000, v44, v45, "failed connecting to server xpc", v46, 2u);
        MEMORY[0x23B853BD0](v46, -1, -1);
      }

      v47 = (void (*)(char *, _QWORD *))v7[1];
      v47(v16, v43);
      sub_23A5C9938();
      v40 = (void *)swift_allocError();
      *(_QWORD *)v48 = 0xD00000000000001FLL;
      *(_QWORD *)(v48 + 8) = 0x800000023A69DA20;
      *(_BYTE *)(v48 + 16) = 4;
      swift_willThrow();
    }
    v54 = v67;
    v42(v67, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v43);
    v55 = v40;
    v56 = v40;
    v57 = sub_23A690CFC();
    v58 = sub_23A691038();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = (_QWORD *)swift_slowAlloc();
      v66 = v19;
      *(_DWORD *)v59 = 138412290;
      v61 = v40;
      v62 = v47;
      v63 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v63;
      v54 = v67;
      sub_23A6911D0();
      *v60 = v63;
      v47 = v62;

      _os_log_impl(&dword_23A5B0000, v57, v58, "dockkit: failed getting sync connection, can't send xpc %@", v59, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      v64 = v60;
      v43 = v68;
      MEMORY[0x23B853BD0](v64, -1, -1);
      MEMORY[0x23B853BD0](v59, -1, -1);
    }
    else
    {

    }
    v47(v54, v43);
    sub_23A5F8428();
    goto LABEL_19;
  }
LABEL_6:
  ((void (*)(_QWORD *, char *, _QWORD *))v7[2])(v18, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v6);
  v37 = sub_23A690CFC();
  v38 = sub_23A691038();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    _os_log_impl(&dword_23A5B0000, v37, v38, "xpc lock/queue not initialized, no XPC configured", v39, 2u);
    MEMORY[0x23B853BD0](v39, -1, -1);
  }

  ((void (*)(_QWORD *, void *))v7[1])(v18, v6);
  sub_23A5C9938();
  v40 = (void *)swift_allocError();
  *(_OWORD *)v41 = xmmword_23A6967C0;
  *(_BYTE *)(v41 + 16) = 3;
LABEL_19:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v65 = v40;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A5FF118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, _QWORD *a6)
{
  uint64_t v8;
  uint64_t v9;

  v8 = a2 + *a6;
  v9 = swift_unknownObjectRetain();
  MEMORY[0x23B852D78](v9);
  if (*(_QWORD *)(*(_QWORD *)v8 + 16) >= *(_QWORD *)(*(_QWORD *)v8 + 24) >> 1)
    sub_23A690F3C();
  sub_23A690F48();
  sub_23A690F30();
  return a4(a1);
}

uint64_t sub_23A5FF1A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = v0;
  return swift_task_switch();
}

uint64_t sub_23A5FF1C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[11];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_23A608F1C;
  v2 = swift_continuation_init();
  sub_23A5FF2A4(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_23A5FF21C(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v4;
  id v5;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v4 = a2;
    v5 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(a3 + 64) + 40) = a1;
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_23A5FF2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  void *v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  void (*v39)(char *, uint64_t, uint64_t);
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  char *v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  _QWORD *v56;
  id v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  _QWORD v62[2];
  char *v63;
  uint64_t v64;
  void *v65;
  uint64_t aBlock;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  _QWORD *v71;

  v64 = sub_23A690D14();
  v4 = *(_QWORD *)(v64 - 8);
  v5 = MEMORY[0x24BDAC7A8](v64);
  v7 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v62 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v62 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v62 - v14;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) == 1)
  {
    v63 = v7;
    v17 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
    v18 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
    swift_retain();
    os_unfair_lock_lock(v18 + 4);
    swift_release();
    v19 = *(void **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError) = 0;

    v20 = *(os_unfair_lock_s **)(a1 + v17);
    swift_retain();
    os_unfair_lock_unlock(v20 + 4);
    swift_release();
    v21 = sub_23A5F7298();
    v62[1] = a2;
    if (v21)
    {
      v22 = (void *)v21;
      v23 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = v23;
      v24[3] = sub_23A608CAC;
      v24[4] = v16;
      v70 = sub_23A608CB8;
      v71 = v24;
      v25 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v67 = 1107296256;
      v68 = sub_23A60D824;
      v69 = &block_descriptor_330;
      v26 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      v27 = objc_msgSend(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_, v26);
      _Block_release(v26);
      sub_23A6911F4();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v28 = v65;
        v29 = *(void **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = sub_23A608CAC;
        *(_QWORD *)(v30 + 24) = v16;
        v70 = sub_23A608ED8;
        v71 = (_QWORD *)v30;
        aBlock = v25;
        v67 = 1107296256;
        v68 = sub_23A5FFC98;
        v69 = &block_descriptor_336;
        v31 = _Block_copy(&aBlock);
        swift_retain();
        swift_unknownObjectRetain();
        v32 = v29;
        swift_release();
        objc_msgSend(v28, sel_getCurrentBatteryDataWithInfo_completion_, v32, v31);
        _Block_release(v31);

        swift_unknownObjectRelease_n();
        swift_release();

        return swift_release();
      }
      v62[0] = v16;
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v39(v10, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
      v46 = sub_23A690CFC();
      v47 = sub_23A691038();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_23A5B0000, v46, v47, "failed asynchronous server XPC connection", v48, 2u);
        MEMORY[0x23B853BD0](v48, -1, -1);
      }

      v43 = *(void (**)(char *, uint64_t))(v4 + 8);
      v43(v10, v64);
      sub_23A5C9938();
      v44 = (void *)swift_allocError();
      *(_OWORD *)v49 = xmmword_23A6967D0;
      *(_BYTE *)(v49 + 16) = 4;
      swift_willThrow();
      swift_release();

    }
    else
    {
      v62[0] = v16;
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v39(v13, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
      v40 = sub_23A690CFC();
      v41 = sub_23A691038();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_23A5B0000, v40, v41, "failed connecting to server xpc", v42, 2u);
        MEMORY[0x23B853BD0](v42, -1, -1);
      }

      v43 = *(void (**)(char *, uint64_t))(v4 + 8);
      v43(v13, v64);
      sub_23A5C9938();
      v44 = (void *)swift_allocError();
      *(_QWORD *)v45 = 0xD00000000000001FLL;
      *(_QWORD *)(v45 + 8) = 0x800000023A69DA20;
      *(_BYTE *)(v45 + 16) = 4;
      swift_willThrow();
    }
    v50 = v63;
    v39(v63, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
    v51 = v44;
    v52 = v44;
    v53 = sub_23A690CFC();
    v54 = sub_23A691038();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v55 = 138412290;
      v57 = v44;
      v58 = v43;
      v59 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v59;
      v50 = v63;
      sub_23A6911D0();
      *v56 = v59;
      v43 = v58;

      _os_log_impl(&dword_23A5B0000, v53, v54, "dockkit: failed getting sync connection, can't send xpc %@", v55, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v56, -1, -1);
      MEMORY[0x23B853BD0](v55, -1, -1);
    }
    else
    {

    }
    v43(v50, v64);
    sub_23A5F8428();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v60 = v44;
    swift_continuation_throwingResumeWithError();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v15, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
    v33 = sub_23A690CFC();
    v34 = sub_23A691038();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_23A5B0000, v33, v34, "xpc lock/queue not initialized, no XPC configured", v35, 2u);
      MEMORY[0x23B853BD0](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v64);
    sub_23A5C9938();
    v36 = swift_allocError();
    *(_OWORD *)v37 = xmmword_23A6967C0;
    *(_BYTE *)(v37 + 16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v38 = v36;
    swift_continuation_throwingResumeWithError();
  }
  return swift_release();
}

uint64_t sub_23A5FFA84(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD, void *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint8_t *v20;
  _QWORD *v21;
  uint64_t (*v22)(_QWORD, void *);
  uint64_t v23;

  v22 = a3;
  v5 = sub_23A690D14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x23B853C6C](a2 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v5);

    v11 = a1;
    v12 = a1;
    v13 = sub_23A690CFC();
    v14 = sub_23A691038();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v20 = v15 + 4;
      v16 = a1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      v23 = v17;
      sub_23A6911D0();
      v18 = v21;
      *v21 = v17;

      _os_log_impl(&dword_23A5B0000, v13, v14, "failure from proxy: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v18, -1, -1);
      MEMORY[0x23B853BD0](v15, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v22(MEMORY[0x24BEE4AF8], a1);
}

void sub_23A5FFC98(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  type metadata accessor for AccessoryBatteryState();
  v5 = sub_23A690F18();
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t sub_23A5FFD20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

uint64_t sub_23A5FFD38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[12];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_23A5FFD94;
  v2 = swift_continuation_init();
  sub_23A5FFEAC(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_23A5FFD94()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23A5FFE04(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v6;
  id v7;
  _QWORD v9[2];

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v6 = a3;
    v7 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v9[0] = a1;
    v9[1] = a2;
    sub_23A608C88(a1, a2);
    sub_23A608DD0((uint64_t)v9, *(_QWORD *)(*(_QWORD *)(a4 + 64) + 40), &qword_25699F478);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_23A5FFEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  void *v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  void (*v39)(char *, uint64_t, uint64_t);
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void (*v43)(char *, uint64_t);
  void *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  char *v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  _QWORD *v56;
  id v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  _QWORD v62[2];
  char *v63;
  uint64_t v64;
  void *v65;
  uint64_t aBlock;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  _QWORD *v71;

  v64 = sub_23A690D14();
  v4 = *(_QWORD *)(v64 - 8);
  v5 = MEMORY[0x24BDAC7A8](v64);
  v7 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v62 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v62 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v62 - v14;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) == 1)
  {
    v63 = v7;
    v17 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
    v18 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
    swift_retain();
    os_unfair_lock_lock(v18 + 4);
    swift_release();
    v19 = *(void **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError) = 0;

    v20 = *(os_unfair_lock_s **)(a1 + v17);
    swift_retain();
    os_unfair_lock_unlock(v20 + 4);
    swift_release();
    v21 = sub_23A5F7298();
    v62[1] = a2;
    if (v21)
    {
      v22 = (void *)v21;
      v23 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = v23;
      v24[3] = sub_23A608C5C;
      v24[4] = v16;
      v70 = sub_23A608C68;
      v71 = v24;
      v25 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v67 = 1107296256;
      v68 = sub_23A60D824;
      v69 = &block_descriptor_314;
      v26 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      v27 = objc_msgSend(v22, sel_synchronousRemoteObjectProxyWithErrorHandler_, v26);
      _Block_release(v26);
      sub_23A6911F4();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v28 = v65;
        v29 = *(void **)(a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = sub_23A608C5C;
        *(_QWORD *)(v30 + 24) = v16;
        v70 = sub_23A608710;
        v71 = (_QWORD *)v30;
        aBlock = v25;
        v67 = 1107296256;
        v68 = sub_23A6008A0;
        v69 = &block_descriptor_320;
        v31 = _Block_copy(&aBlock);
        swift_retain();
        swift_unknownObjectRetain();
        v32 = v29;
        swift_release();
        objc_msgSend(v28, sel_getCurrentTrackingSummaryDataWithInfo_completion_, v32, v31);
        _Block_release(v31);

        swift_unknownObjectRelease_n();
        swift_release();

        return swift_release();
      }
      v62[0] = v16;
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v39(v10, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
      v46 = sub_23A690CFC();
      v47 = sub_23A691038();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_23A5B0000, v46, v47, "failed asynchronous server XPC connection", v48, 2u);
        MEMORY[0x23B853BD0](v48, -1, -1);
      }

      v43 = *(void (**)(char *, uint64_t))(v4 + 8);
      v43(v10, v64);
      sub_23A5C9938();
      v44 = (void *)swift_allocError();
      *(_OWORD *)v49 = xmmword_23A6967D0;
      *(_BYTE *)(v49 + 16) = 4;
      swift_willThrow();
      swift_release();

    }
    else
    {
      v62[0] = v16;
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v39(v13, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
      v40 = sub_23A690CFC();
      v41 = sub_23A691038();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_23A5B0000, v40, v41, "failed connecting to server xpc", v42, 2u);
        MEMORY[0x23B853BD0](v42, -1, -1);
      }

      v43 = *(void (**)(char *, uint64_t))(v4 + 8);
      v43(v13, v64);
      sub_23A5C9938();
      v44 = (void *)swift_allocError();
      *(_QWORD *)v45 = 0xD00000000000001FLL;
      *(_QWORD *)(v45 + 8) = 0x800000023A69DA20;
      *(_BYTE *)(v45 + 16) = 4;
      swift_willThrow();
    }
    v50 = v63;
    v39(v63, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
    v51 = v44;
    v52 = v44;
    v53 = sub_23A690CFC();
    v54 = sub_23A691038();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v55 = 138412290;
      v57 = v44;
      v58 = v43;
      v59 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v59;
      v50 = v63;
      sub_23A6911D0();
      *v56 = v59;
      v43 = v58;

      _os_log_impl(&dword_23A5B0000, v53, v54, "dockkit: failed getting sync connection, can't send xpc %@", v55, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v56, -1, -1);
      MEMORY[0x23B853BD0](v55, -1, -1);
    }
    else
    {

    }
    v43(v50, v64);
    sub_23A5F8428();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v60 = v44;
    swift_continuation_throwingResumeWithError();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v15, a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v64);
    v33 = sub_23A690CFC();
    v34 = sub_23A691038();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_23A5B0000, v33, v34, "xpc lock/queue not initialized, no XPC configured", v35, 2u);
      MEMORY[0x23B853BD0](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v64);
    sub_23A5C9938();
    v36 = swift_allocError();
    *(_OWORD *)v37 = xmmword_23A6967C0;
    *(_BYTE *)(v37 + 16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v38 = v36;
    swift_continuation_throwingResumeWithError();
  }
  return swift_release();
}

uint64_t sub_23A60068C(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD, unint64_t, void *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint8_t *v20;
  _QWORD *v21;
  uint64_t (*v22)(_QWORD, unint64_t, void *);
  uint64_t v23;

  v22 = a3;
  v5 = sub_23A690D14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x23B853C6C](a2 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v5);

    v11 = a1;
    v12 = a1;
    v13 = sub_23A690CFC();
    v14 = sub_23A691038();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v20 = v15 + 4;
      v16 = a1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      v23 = v17;
      sub_23A6911D0();
      v18 = v21;
      *v21 = v17;

      _os_log_impl(&dword_23A5B0000, v13, v14, "failure from proxy: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v18, -1, -1);
      MEMORY[0x23B853BD0](v15, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v22(0, 0xF000000000000000, a1);
}

uint64_t sub_23A6008A0(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_23A690624();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_23A608C74((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_23A600934()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_23A60094C()
{
  _QWORD *v0;
  _BYTE *v1;
  uint64_t v2;

  v1 = (_BYTE *)v0[10];
  v0[2] = v0;
  v0[3] = sub_23A5FCC74;
  v2 = swift_continuation_init();
  sub_23A6009A0(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_23A6009A0(_BYTE *a1, uint64_t a2)
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  void *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  _BYTE *v29;
  uint64_t result;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t *v45;
  _QWORD v46[3];
  uint64_t aBlock;
  uint64_t v48;
  void (*v49)(uint64_t, void *);
  void *v50;
  uint64_t (*v51)(void *);
  _QWORD *v52;

  isEscapingClosureAtFileLocation = sub_23A690D14();
  v5 = *(_QWORD *)(isEscapingClosureAtFileLocation - 8);
  v6 = MEMORY[0x24BDAC7A8](isEscapingClosureAtFileLocation);
  v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v46 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (_QWORD *)((char *)v46 - v12);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  if (a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] != 1)
  {
LABEL_6:
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v5 + 16))(v13, &a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
    v31 = sub_23A690CFC();
    v32 = sub_23A691038();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_23A5B0000, v31, v32, "xpc lock/queue not initialized, no XPC configured", v33, 2u);
      MEMORY[0x23B853BD0](v33, -1, -1);
    }

    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v13, isEscapingClosureAtFileLocation);
    sub_23A5C9938();
    v34 = swift_allocError();
    *(_OWORD *)v35 = xmmword_23A6967C0;
    *(_BYTE *)(v35 + 16) = 3;
    goto LABEL_16;
  }
  v15 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v16 = *(os_unfair_lock_s **)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  swift_release();
  v17 = *(void **)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
  *(_QWORD *)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

  v18 = *(os_unfair_lock_s **)&a1[v15];
  swift_retain();
  os_unfair_lock_unlock(v18 + 4);
  swift_release();
  v19 = sub_23A5F7298();
  if (v19)
  {
    v20 = (void *)v19;
    v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v21;
    v22[3] = sub_23A608B80;
    v22[4] = v14;
    v51 = sub_23A608B9C;
    v52 = v22;
    aBlock = MEMORY[0x24BDAC760];
    v48 = 1107296256;
    v49 = sub_23A60D824;
    v50 = &block_descriptor_294;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v24 = objc_msgSend(v20, sel_synchronousRemoteObjectProxyWithErrorHandler_, v23);
    _Block_release(v23);
    sub_23A6911F4();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v25 = (void *)v46[2];
      v26 = *(void **)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = sub_23A608B80;
      v13[3] = v14;
      v13[4] = a1;
      v5 = swift_allocObject();
      *(_QWORD *)(v5 + 16) = sub_23A608BE8;
      *(_QWORD *)(v5 + 24) = v13;
      v51 = (uint64_t (*)(void *))sub_23A60909C;
      v52 = (_QWORD *)v5;
      aBlock = MEMORY[0x24BDAC760];
      v48 = 1107296256;
      v49 = sub_23A679C34;
      v50 = &block_descriptor_304;
      v27 = _Block_copy(&aBlock);
      swift_retain();
      v28 = v26;
      v29 = a1;
      swift_retain();
      swift_release();
      objc_msgSend(v25, sel_stopBatteryStatesDataWithInfo_completion_, v28, v27);

      swift_unknownObjectRelease();
      _Block_release(v27);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      result = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return result;
      __break(1u);
      goto LABEL_6;
    }
    (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))(v8, &a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
    v40 = sub_23A690CFC();
    v41 = sub_23A691038();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v46[1] = a2;
      v43 = v42;
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_23A5B0000, v40, v41, "failed asynchronous server XPC connection", v42, 2u);
      MEMORY[0x23B853BD0](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, isEscapingClosureAtFileLocation);
    sub_23A5C9938();
    v34 = swift_allocError();
    *(_OWORD *)v44 = xmmword_23A6967D0;
    *(_BYTE *)(v44 + 16) = 4;
    swift_willThrow();
    swift_release();

  }
  else
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))(v11, &a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
    v36 = sub_23A690CFC();
    v37 = sub_23A691038();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_23A5B0000, v36, v37, "failed connecting to server xpc", v38, 2u);
      MEMORY[0x23B853BD0](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, isEscapingClosureAtFileLocation);
    sub_23A5C9938();
    v34 = swift_allocError();
    *(_QWORD *)v39 = 0xD00000000000001FLL;
    *(_QWORD *)(v39 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v39 + 16) = 4;
    swift_willThrow();
  }
  sub_23A5F8428();
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v45 = v34;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A601038()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_23A601050()
{
  _QWORD *v0;
  _BYTE *v1;
  uint64_t v2;

  v1 = (_BYTE *)v0[10];
  v0[2] = v0;
  v0[3] = sub_23A608EEC;
  v2 = swift_continuation_init();
  sub_23A60111C(v1, v2);
  return swift_continuation_await();
}

uint64_t sub_23A6010A4(void *a1)
{
  _QWORD *v2;
  id v3;

  if (!a1)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v2 = a1;
  v3 = a1;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_23A60111C(_BYTE *a1, uint64_t a2)
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  void *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  _BYTE *v29;
  uint64_t result;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t *v45;
  _QWORD v46[3];
  uint64_t aBlock;
  uint64_t v48;
  void (*v49)(uint64_t, void *);
  void *v50;
  uint64_t (*v51)();
  _QWORD *v52;

  isEscapingClosureAtFileLocation = sub_23A690D14();
  v5 = *(_QWORD *)(isEscapingClosureAtFileLocation - 8);
  v6 = MEMORY[0x24BDAC7A8](isEscapingClosureAtFileLocation);
  v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v46 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (_QWORD *)((char *)v46 - v12);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  if (a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] != 1)
  {
LABEL_6:
    (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v5 + 16))(v13, &a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
    v31 = sub_23A690CFC();
    v32 = sub_23A691038();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_23A5B0000, v31, v32, "xpc lock/queue not initialized, no XPC configured", v33, 2u);
      MEMORY[0x23B853BD0](v33, -1, -1);
    }

    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v13, isEscapingClosureAtFileLocation);
    sub_23A5C9938();
    v34 = swift_allocError();
    *(_OWORD *)v35 = xmmword_23A6967C0;
    *(_BYTE *)(v35 + 16) = 3;
    goto LABEL_16;
  }
  v15 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v16 = *(os_unfair_lock_s **)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  swift_release();
  v17 = *(void **)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
  *(_QWORD *)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

  v18 = *(os_unfair_lock_s **)&a1[v15];
  swift_retain();
  os_unfair_lock_unlock(v18 + 4);
  swift_release();
  v19 = sub_23A5F7298();
  if (v19)
  {
    v20 = (void *)v19;
    v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v21;
    v22[3] = sub_23A608EDC;
    v22[4] = v14;
    v51 = sub_23A608EE4;
    v52 = v22;
    aBlock = MEMORY[0x24BDAC760];
    v48 = 1107296256;
    v49 = sub_23A60D824;
    v50 = &block_descriptor_274;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v24 = objc_msgSend(v20, sel_synchronousRemoteObjectProxyWithErrorHandler_, v23);
    _Block_release(v23);
    sub_23A6911F4();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v25 = (void *)v46[2];
      v26 = *(void **)&a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = sub_23A608EDC;
      v13[3] = v14;
      v13[4] = a1;
      v5 = swift_allocObject();
      *(_QWORD *)(v5 + 16) = sub_23A608B54;
      *(_QWORD *)(v5 + 24) = v13;
      v51 = sub_23A60909C;
      v52 = (_QWORD *)v5;
      aBlock = MEMORY[0x24BDAC760];
      v48 = 1107296256;
      v49 = sub_23A679C34;
      v50 = &block_descriptor_284;
      v27 = _Block_copy(&aBlock);
      swift_retain();
      v28 = v26;
      v29 = a1;
      swift_retain();
      swift_release();
      objc_msgSend(v25, sel_stopTrackingSummaryDataWithInfo_completion_, v28, v27);

      swift_unknownObjectRelease();
      _Block_release(v27);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      result = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return result;
      __break(1u);
      goto LABEL_6;
    }
    (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))(v8, &a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
    v40 = sub_23A690CFC();
    v41 = sub_23A691038();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v46[1] = a2;
      v43 = v42;
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_23A5B0000, v40, v41, "failed asynchronous server XPC connection", v42, 2u);
      MEMORY[0x23B853BD0](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, isEscapingClosureAtFileLocation);
    sub_23A5C9938();
    v34 = swift_allocError();
    *(_OWORD *)v44 = xmmword_23A6967D0;
    *(_BYTE *)(v44 + 16) = 4;
    swift_willThrow();
    swift_release();

  }
  else
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 16))(v11, &a1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], isEscapingClosureAtFileLocation);
    v36 = sub_23A690CFC();
    v37 = sub_23A691038();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_23A5B0000, v36, v37, "failed connecting to server xpc", v38, 2u);
      MEMORY[0x23B853BD0](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, isEscapingClosureAtFileLocation);
    sub_23A5C9938();
    v34 = swift_allocError();
    *(_QWORD *)v39 = 0xD00000000000001FLL;
    *(_QWORD *)(v39 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v39 + 16) = 4;
    swift_willThrow();
  }
  sub_23A5F8428();
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v45 = v34;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A6017B4(void *a1, uint64_t a2, uint64_t (*a3)(void *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint8_t *v20;
  _QWORD *v21;
  uint64_t (*v22)(void *);
  uint64_t v23;

  v22 = a3;
  v5 = sub_23A690D14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x23B853C6C](a2 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v5);

    v11 = a1;
    v12 = a1;
    v13 = sub_23A690CFC();
    v14 = sub_23A691038();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412290;
      v20 = v15 + 4;
      v16 = a1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      v23 = v17;
      sub_23A6911D0();
      v18 = v21;
      *v21 = v17;

      _os_log_impl(&dword_23A5B0000, v13, v14, "failure from proxy: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v18, -1, -1);
      MEMORY[0x23B853BD0](v15, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v22(a1);
}

uint64_t sub_23A6019C0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  os_unfair_lock_s *v47;
  void *v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  void *v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void (*v59)(char *, _BYTE *, uint64_t);
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  void *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  id v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  _QWORD *v81;
  id v82;
  uint64_t v83;
  uint8_t *v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  void *v88;
  _BYTE *v89;
  void *v90;
  char *v91;
  void *v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  id v102;
  char *v103;
  char *v104;
  uint64_t aBlock;
  uint64_t v106;
  void *v107;
  void *v108;
  uint64_t (*v109)();
  _QWORD *v110;

  v100 = a1;
  v11 = sub_23A690D14();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v101 = (char *)&v93 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v103 = (char *)&v93 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v93 - v20;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a6;
  if (a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] != 1)
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v12 + 16))(v21, &a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v11);
    v33 = sub_23A690CFC();
    v34 = sub_23A691038();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_23A5B0000, v33, v34, "xpc lock/queue not initialized, no XPC configured", v35, 2u);
      MEMORY[0x23B853BD0](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
    sub_23A5C9938();
    v36 = swift_allocError();
    *(_OWORD *)v37 = xmmword_23A6967C0;
    *(_BYTE *)(v37 + 16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v38 = v36;
    goto LABEL_37;
  }
  v98 = a6;
  v99 = v15;
  v102 = (id)v11;
  v95 = a3;
  v96 = a4;
  if (!a2)
  {
    v25 = 0;
    goto LABEL_23;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_23A691374();
    if (v23)
      goto LABEL_5;
LABEL_22:
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
    goto LABEL_23;
  }
  v23 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23)
    goto LABEL_22;
LABEL_5:
  aBlock = MEMORY[0x24BEE4AF8];
  result = sub_23A5EF3DC(0, v23 & ~(v23 >> 63), 0);
  if (v23 < 0)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v93 = v12;
  v94 = a5;
  v97 = v22;
  v25 = aBlock;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v26 = 0;
    do
    {
      v27 = MEMORY[0x23B85312C](v26, a2);
      v29 = *(_QWORD *)(v27 + OBJC_IVAR____TtC11DockKitCore9Component_name);
      v28 = *(_QWORD *)(v27 + OBJC_IVAR____TtC11DockKitCore9Component_name + 8);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      aBlock = v25;
      v31 = *(_QWORD *)(v25 + 16);
      v30 = *(_QWORD *)(v25 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_23A5EF3DC(v30 > 1, v31 + 1, 1);
        v25 = aBlock;
      }
      ++v26;
      *(_QWORD *)(v25 + 16) = v31 + 1;
      v32 = v25 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v29;
      *(_QWORD *)(v32 + 40) = v28;
    }
    while (v23 != v26);
  }
  else
  {
    v39 = (_QWORD *)(a2 + 32);
    do
    {
      v40 = (uint64_t *)(*v39 + OBJC_IVAR____TtC11DockKitCore9Component_name);
      v42 = *v40;
      v41 = v40[1];
      aBlock = v25;
      v44 = *(_QWORD *)(v25 + 16);
      v43 = *(_QWORD *)(v25 + 24);
      swift_bridgeObjectRetain();
      if (v44 >= v43 >> 1)
      {
        sub_23A5EF3DC(v43 > 1, v44 + 1, 1);
        v25 = aBlock;
      }
      *(_QWORD *)(v25 + 16) = v44 + 1;
      v45 = v25 + 16 * v44;
      *(_QWORD *)(v45 + 32) = v42;
      *(_QWORD *)(v45 + 40) = v41;
      ++v39;
      --v23;
    }
    while (v23);
  }
  swift_bridgeObjectRelease();
  v22 = v97;
  v12 = v93;
  a5 = v94;
  v11 = (uint64_t)v102;
LABEL_23:
  v46 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v47 = *(os_unfair_lock_s **)&a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
  swift_retain();
  os_unfair_lock_lock(v47 + 4);
  swift_release();
  v48 = *(void **)&a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
  *(_QWORD *)&a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

  v49 = *(os_unfair_lock_s **)&a5[v46];
  swift_retain();
  os_unfair_lock_unlock(v49 + 4);
  swift_release();
  v50 = sub_23A5F7298();
  if (!v50)
  {
    swift_bridgeObjectRelease();
    v58 = v12;
    v59 = *(void (**)(char *, _BYTE *, uint64_t))(v12 + 16);
    v60 = v103;
    v59(v103, &a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v11);
    v61 = sub_23A690CFC();
    v62 = sub_23A691038();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_23A5B0000, v61, v62, "failed connecting to server xpc", v63, 2u);
      MEMORY[0x23B853BD0](v63, -1, -1);
    }

    v64 = v60;
    v65 = *(void (**)(char *, uint64_t))(v58 + 8);
    v65(v64, v11);
    sub_23A5C9938();
    v66 = (void *)swift_allocError();
    *(_QWORD *)v67 = 0xD00000000000001FLL;
    *(_QWORD *)(v67 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v67 + 16) = 4;
    swift_willThrow();
    goto LABEL_33;
  }
  v51 = (void *)v50;
  v52 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v53 = (_QWORD *)swift_allocObject();
  v53[2] = v52;
  v53[3] = sub_23A608ED4;
  v53[4] = v22;
  v109 = sub_23A608EE0;
  v110 = v53;
  aBlock = MEMORY[0x24BDAC760];
  v106 = 1107296256;
  v107 = sub_23A60D824;
  v108 = &block_descriptor_218;
  v54 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v55 = objc_msgSend(v51, sel_synchronousRemoteObjectProxyWithErrorHandler_, v54);
  _Block_release(v54);
  sub_23A6911F4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v68 = v12;
    v59 = *(void (**)(char *, _BYTE *, uint64_t))(v12 + 16);
    v69 = v101;
    v59(v101, &a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], (uint64_t)v102);
    v70 = sub_23A690CFC();
    v71 = sub_23A691038();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v72 = 0;
      _os_log_impl(&dword_23A5B0000, v70, v71, "failed asynchronous server XPC connection", v72, 2u);
      MEMORY[0x23B853BD0](v72, -1, -1);
    }

    v65 = *(void (**)(char *, uint64_t))(v68 + 8);
    v73 = (uint64_t)v102;
    v65(v69, (uint64_t)v102);
    sub_23A5C9938();
    v66 = (void *)swift_allocError();
    *(_OWORD *)v74 = xmmword_23A6967D0;
    *(_BYTE *)(v74 + 16) = 4;
    swift_willThrow();

    v11 = v73;
    swift_release();
LABEL_33:
    v75 = v99;
    v59(v99, &a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v11);
    v76 = v66;
    v77 = v66;
    v78 = sub_23A690CFC();
    v79 = sub_23A691038();
    if (os_log_type_enabled(v78, v79))
    {
      v97 = v22;
      v80 = (uint8_t *)swift_slowAlloc();
      v81 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v80 = 138412290;
      v82 = v66;
      v83 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v83;
      v11 = (uint64_t)v102;
      sub_23A6911D0();
      *v81 = v83;

      _os_log_impl(&dword_23A5B0000, v78, v79, "dockkit: failed getting sync connection, can't send xpc %@", v80, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v81, -1, -1);
      v84 = v80;
      v75 = v99;
      MEMORY[0x23B853BD0](v84, -1, -1);
    }
    else
    {

    }
    v65(v75, v11);
    sub_23A5F8428();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v85 = v66;
LABEL_37:
    swift_continuation_throwingResumeWithError();
    return swift_release();
  }
  v56 = v22;
  v57 = *(void **)&a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
  v103 = v104;
  swift_unknownObjectRetain();
  v102 = v57;
  v101 = (char *)sub_23A690E04();
  if (v25)
  {
    v100 = sub_23A690F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    v100 = 0;
  }
  v86 = (_QWORD *)swift_allocObject();
  v86[2] = a2;
  v86[3] = a5;
  v86[4] = v95;
  v86[5] = sub_23A608ED4;
  v86[6] = v56;
  v87 = swift_allocObject();
  *(_QWORD *)(v87 + 16) = sub_23A608A18;
  *(_QWORD *)(v87 + 24) = v86;
  v109 = sub_23A609098;
  v110 = (_QWORD *)v87;
  aBlock = MEMORY[0x24BDAC760];
  v106 = 1107296256;
  v107 = sub_23A647AA0;
  v108 = &block_descriptor_228;
  v88 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v89 = a5;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  v90 = v102;
  v92 = (void *)v100;
  v91 = v101;
  objc_msgSend(v103, sel_getActuatorFeedbackWithInfo_system_actuators_occurrence_completion_, v102, v101, v100, v96, v88);

  swift_unknownObjectRelease_n();
  _Block_release(v88);
  LOBYTE(v88) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v88 & 1) != 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_23A60249C(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  void *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _BYTE *v30;
  uint64_t result;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  _BYTE *v47;
  void *v48;
  uint64_t aBlock;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t (*v53)();
  _QWORD *v54;

  v5 = (_QWORD *)sub_23A690D14();
  v6 = *(v5 - 1);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v46 - v11;
  MEMORY[0x24BDAC7A8](v10);
  isEscapingClosureAtFileLocation = (uint64_t)&v46 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  if (a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] != 1)
  {
LABEL_6:
    (*(void (**)(uint64_t, _BYTE *, _QWORD *))(v6 + 16))(isEscapingClosureAtFileLocation, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v5);
    v32 = sub_23A690CFC();
    v33 = sub_23A691038();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_23A5B0000, v32, v33, "xpc lock/queue not initialized, no XPC configured", v34, 2u);
      MEMORY[0x23B853BD0](v34, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD *))(v6 + 8))(isEscapingClosureAtFileLocation, v5);
    sub_23A5C9938();
    v35 = swift_allocError();
    *(_OWORD *)v36 = xmmword_23A6967C0;
    *(_BYTE *)(v36 + 16) = 3;
    goto LABEL_16;
  }
  v47 = a3;
  v16 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v17 = *(os_unfair_lock_s **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
  swift_retain();
  os_unfair_lock_lock(v17 + 4);
  swift_release();
  v18 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
  *(_QWORD *)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

  v19 = *(os_unfair_lock_s **)&a2[v16];
  swift_retain();
  os_unfair_lock_unlock(v19 + 4);
  swift_release();
  v20 = sub_23A5F7298();
  if (v20)
  {
    v21 = (void *)v20;
    v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v22;
    v23[3] = sub_23A608ED4;
    v23[4] = v15;
    v53 = sub_23A608EE0;
    v54 = v23;
    aBlock = MEMORY[0x24BDAC760];
    v50 = 1107296256;
    v51 = sub_23A60D824;
    v52 = &block_descriptor_198;
    v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v25 = objc_msgSend(v21, sel_synchronousRemoteObjectProxyWithErrorHandler_, v24);
    _Block_release(v24);
    sub_23A6911F4();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v26 = v48;
      v27 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
      swift_unknownObjectRetain();
      v47 = v27;
      v28 = (void *)sub_23A690E04();
      v5 = (_QWORD *)swift_allocObject();
      v5[2] = a2;
      v5[3] = sub_23A608ED4;
      v5[4] = v15;
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = sub_23A608954;
      *(_QWORD *)(v6 + 24) = v5;
      v53 = sub_23A609098;
      v54 = (_QWORD *)v6;
      aBlock = MEMORY[0x24BDAC760];
      v50 = 1107296256;
      v51 = sub_23A647AA0;
      v52 = &block_descriptor_208;
      v29 = _Block_copy(&aBlock);
      swift_retain();
      v30 = a2;
      swift_retain();
      swift_release();
      a2 = v47;
      objc_msgSend(v26, sel_stopActuatorFeedbackWithInfo_system_completion_, v47, v28, v29);

      swift_unknownObjectRelease_n();
      _Block_release(v29);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      result = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return result;
      __break(1u);
      goto LABEL_6;
    }
    (*(void (**)(char *, _BYTE *, _QWORD *))(v6 + 16))(v9, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v5);
    v41 = sub_23A690CFC();
    v42 = sub_23A691038();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_23A5B0000, v41, v42, "failed asynchronous server XPC connection", v43, 2u);
      MEMORY[0x23B853BD0](v43, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v6 + 8))(v9, v5);
    sub_23A5C9938();
    v35 = swift_allocError();
    *(_OWORD *)v44 = xmmword_23A6967D0;
    *(_BYTE *)(v44 + 16) = 4;
    swift_willThrow();

    swift_release();
  }
  else
  {
    (*(void (**)(char *, _BYTE *, _QWORD *))(v6 + 16))(v12, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v5);
    v37 = sub_23A690CFC();
    v38 = sub_23A691038();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_23A5B0000, v37, v38, "failed connecting to server xpc", v39, 2u);
      MEMORY[0x23B853BD0](v39, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v6 + 8))(v12, v5);
    sub_23A5C9938();
    v35 = swift_allocError();
    *(_QWORD *)v40 = 0xD00000000000001FLL;
    *(_QWORD *)(v40 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v40 + 16) = 4;
    swift_willThrow();
  }
  sub_23A5F8428();
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v45 = v35;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A602B7C(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  void *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _BYTE *v30;
  uint64_t result;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  _BYTE *v47;
  void *v48;
  uint64_t aBlock;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t (*v53)();
  _QWORD *v54;

  v5 = (_QWORD *)sub_23A690D14();
  v6 = *(v5 - 1);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v46 - v11;
  MEMORY[0x24BDAC7A8](v10);
  isEscapingClosureAtFileLocation = (uint64_t)&v46 - v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  if (a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] != 1)
  {
LABEL_6:
    (*(void (**)(uint64_t, _BYTE *, _QWORD *))(v6 + 16))(isEscapingClosureAtFileLocation, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v5);
    v32 = sub_23A690CFC();
    v33 = sub_23A691038();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_23A5B0000, v32, v33, "xpc lock/queue not initialized, no XPC configured", v34, 2u);
      MEMORY[0x23B853BD0](v34, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD *))(v6 + 8))(isEscapingClosureAtFileLocation, v5);
    sub_23A5C9938();
    v35 = swift_allocError();
    *(_OWORD *)v36 = xmmword_23A6967C0;
    *(_BYTE *)(v36 + 16) = 3;
    goto LABEL_16;
  }
  v47 = a3;
  v16 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v17 = *(os_unfair_lock_s **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
  swift_retain();
  os_unfair_lock_lock(v17 + 4);
  swift_release();
  v18 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
  *(_QWORD *)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

  v19 = *(os_unfair_lock_s **)&a2[v16];
  swift_retain();
  os_unfair_lock_unlock(v19 + 4);
  swift_release();
  v20 = sub_23A5F7298();
  if (v20)
  {
    v21 = (void *)v20;
    v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v22;
    v23[3] = sub_23A608ED4;
    v23[4] = v15;
    v53 = sub_23A608EE0;
    v54 = v23;
    aBlock = MEMORY[0x24BDAC760];
    v50 = 1107296256;
    v51 = sub_23A60D824;
    v52 = &block_descriptor_238;
    v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v25 = objc_msgSend(v21, sel_synchronousRemoteObjectProxyWithErrorHandler_, v24);
    _Block_release(v24);
    sub_23A6911F4();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v26 = v48;
      v27 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
      swift_unknownObjectRetain();
      v47 = v27;
      v28 = (void *)sub_23A690E04();
      v5 = (_QWORD *)swift_allocObject();
      v5[2] = a2;
      v5[3] = sub_23A608ED4;
      v5[4] = v15;
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = sub_23A608A9C;
      *(_QWORD *)(v6 + 24) = v5;
      v53 = sub_23A609098;
      v54 = (_QWORD *)v6;
      aBlock = MEMORY[0x24BDAC760];
      v50 = 1107296256;
      v51 = sub_23A647AA0;
      v52 = &block_descriptor_248;
      v29 = _Block_copy(&aBlock);
      swift_retain();
      v30 = a2;
      swift_retain();
      swift_release();
      a2 = v47;
      objc_msgSend(v26, sel_stopTrajectoryProgressFeedbackWithInfo_system_completion_, v47, v28, v29);

      swift_unknownObjectRelease_n();
      _Block_release(v29);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      result = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return result;
      __break(1u);
      goto LABEL_6;
    }
    (*(void (**)(char *, _BYTE *, _QWORD *))(v6 + 16))(v9, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v5);
    v41 = sub_23A690CFC();
    v42 = sub_23A691038();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_23A5B0000, v41, v42, "failed asynchronous server XPC connection", v43, 2u);
      MEMORY[0x23B853BD0](v43, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v6 + 8))(v9, v5);
    sub_23A5C9938();
    v35 = swift_allocError();
    *(_OWORD *)v44 = xmmword_23A6967D0;
    *(_BYTE *)(v44 + 16) = 4;
    swift_willThrow();

    swift_release();
  }
  else
  {
    (*(void (**)(char *, _BYTE *, _QWORD *))(v6 + 16))(v12, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v5);
    v37 = sub_23A690CFC();
    v38 = sub_23A691038();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_23A5B0000, v37, v38, "failed connecting to server xpc", v39, 2u);
      MEMORY[0x23B853BD0](v39, -1, -1);
    }

    (*(void (**)(char *, _QWORD *))(v6 + 8))(v12, v5);
    sub_23A5C9938();
    v35 = swift_allocError();
    *(_QWORD *)v40 = 0xD00000000000001FLL;
    *(_QWORD *)(v40 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v40 + 16) = 4;
    swift_willThrow();
  }
  sub_23A5F8428();
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v45 = v35;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A60325C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_sensorDelegates);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = result;
    swift_bridgeObjectRetain();
    for (i = 0; i != v3; ++i)
    {
      v6 = *(void **)(v2 + 8 * i + 32);
      if (v6)
      {
        swift_unknownObjectRetain();
        v7 = (void *)sub_23A690E04();
        v8 = (void *)sub_23A690F00();
        type metadata accessor for SensorData();
        v9 = (void *)sub_23A690F00();
        objc_msgSend(v6, sel_sensorDataWithInfo_system_sensors_data_, v4, v7, v8, v9);

        swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23A603448(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  os_unfair_lock_s *v47;
  void *v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  void *v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void (*v59)(char *, _BYTE *, uint64_t);
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  void *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  id v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  _QWORD *v81;
  id v82;
  uint64_t v83;
  uint8_t *v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  void *v88;
  _BYTE *v89;
  void *v90;
  char *v91;
  void *v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  id v102;
  char *v103;
  char *v104;
  uint64_t aBlock;
  uint64_t v106;
  void *v107;
  void *v108;
  uint64_t (*v109)(void *);
  _QWORD *v110;

  v100 = a1;
  v11 = sub_23A690D14();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v101 = (char *)&v93 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v103 = (char *)&v93 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v93 - v20;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a6;
  if (a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] != 1)
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v12 + 16))(v21, &a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v11);
    v33 = sub_23A690CFC();
    v34 = sub_23A691038();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_23A5B0000, v33, v34, "xpc lock/queue not initialized, no XPC configured", v35, 2u);
      MEMORY[0x23B853BD0](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
    sub_23A5C9938();
    v36 = swift_allocError();
    *(_OWORD *)v37 = xmmword_23A6967C0;
    *(_BYTE *)(v37 + 16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v38 = v36;
    goto LABEL_37;
  }
  v98 = a6;
  v99 = v15;
  v102 = (id)v11;
  v95 = a3;
  v96 = a4;
  if (!a2)
  {
    v25 = 0;
    goto LABEL_23;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_23A691374();
    if (v23)
      goto LABEL_5;
LABEL_22:
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
    goto LABEL_23;
  }
  v23 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23)
    goto LABEL_22;
LABEL_5:
  aBlock = MEMORY[0x24BEE4AF8];
  result = sub_23A5EF3DC(0, v23 & ~(v23 >> 63), 0);
  if (v23 < 0)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v93 = v12;
  v94 = a5;
  v97 = v22;
  v25 = aBlock;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v26 = 0;
    do
    {
      v27 = MEMORY[0x23B85312C](v26, a2);
      v29 = *(_QWORD *)(v27 + OBJC_IVAR____TtC11DockKitCore9Component_name);
      v28 = *(_QWORD *)(v27 + OBJC_IVAR____TtC11DockKitCore9Component_name + 8);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      aBlock = v25;
      v31 = *(_QWORD *)(v25 + 16);
      v30 = *(_QWORD *)(v25 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_23A5EF3DC(v30 > 1, v31 + 1, 1);
        v25 = aBlock;
      }
      ++v26;
      *(_QWORD *)(v25 + 16) = v31 + 1;
      v32 = v25 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v29;
      *(_QWORD *)(v32 + 40) = v28;
    }
    while (v23 != v26);
  }
  else
  {
    v39 = (_QWORD *)(a2 + 32);
    do
    {
      v40 = (uint64_t *)(*v39 + OBJC_IVAR____TtC11DockKitCore9Component_name);
      v42 = *v40;
      v41 = v40[1];
      aBlock = v25;
      v44 = *(_QWORD *)(v25 + 16);
      v43 = *(_QWORD *)(v25 + 24);
      swift_bridgeObjectRetain();
      if (v44 >= v43 >> 1)
      {
        sub_23A5EF3DC(v43 > 1, v44 + 1, 1);
        v25 = aBlock;
      }
      *(_QWORD *)(v25 + 16) = v44 + 1;
      v45 = v25 + 16 * v44;
      *(_QWORD *)(v45 + 32) = v42;
      *(_QWORD *)(v45 + 40) = v41;
      ++v39;
      --v23;
    }
    while (v23);
  }
  swift_bridgeObjectRelease();
  v22 = v97;
  v12 = v93;
  a5 = v94;
  v11 = (uint64_t)v102;
LABEL_23:
  v46 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v47 = *(os_unfair_lock_s **)&a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
  swift_retain();
  os_unfair_lock_lock(v47 + 4);
  swift_release();
  v48 = *(void **)&a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
  *(_QWORD *)&a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

  v49 = *(os_unfair_lock_s **)&a5[v46];
  swift_retain();
  os_unfair_lock_unlock(v49 + 4);
  swift_release();
  v50 = sub_23A5F7298();
  if (!v50)
  {
    swift_bridgeObjectRelease();
    v58 = v12;
    v59 = *(void (**)(char *, _BYTE *, uint64_t))(v12 + 16);
    v60 = v103;
    v59(v103, &a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v11);
    v61 = sub_23A690CFC();
    v62 = sub_23A691038();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_23A5B0000, v61, v62, "failed connecting to server xpc", v63, 2u);
      MEMORY[0x23B853BD0](v63, -1, -1);
    }

    v64 = v60;
    v65 = *(void (**)(char *, uint64_t))(v58 + 8);
    v65(v64, v11);
    sub_23A5C9938();
    v66 = (void *)swift_allocError();
    *(_QWORD *)v67 = 0xD00000000000001FLL;
    *(_QWORD *)(v67 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v67 + 16) = 4;
    swift_willThrow();
    goto LABEL_33;
  }
  v51 = (void *)v50;
  v52 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v53 = (_QWORD *)swift_allocObject();
  v53[2] = v52;
  v53[3] = sub_23A6087D8;
  v53[4] = v22;
  v109 = sub_23A6087F4;
  v110 = v53;
  aBlock = MEMORY[0x24BDAC760];
  v106 = 1107296256;
  v107 = sub_23A60D824;
  v108 = &block_descriptor_99;
  v54 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v55 = objc_msgSend(v51, sel_synchronousRemoteObjectProxyWithErrorHandler_, v54);
  _Block_release(v54);
  sub_23A6911F4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v68 = v12;
    v59 = *(void (**)(char *, _BYTE *, uint64_t))(v12 + 16);
    v69 = v101;
    v59(v101, &a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], (uint64_t)v102);
    v70 = sub_23A690CFC();
    v71 = sub_23A691038();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v72 = 0;
      _os_log_impl(&dword_23A5B0000, v70, v71, "failed asynchronous server XPC connection", v72, 2u);
      MEMORY[0x23B853BD0](v72, -1, -1);
    }

    v65 = *(void (**)(char *, uint64_t))(v68 + 8);
    v73 = (uint64_t)v102;
    v65(v69, (uint64_t)v102);
    sub_23A5C9938();
    v66 = (void *)swift_allocError();
    *(_OWORD *)v74 = xmmword_23A6967D0;
    *(_BYTE *)(v74 + 16) = 4;
    swift_willThrow();

    v11 = v73;
    swift_release();
LABEL_33:
    v75 = v99;
    v59(v99, &a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v11);
    v76 = v66;
    v77 = v66;
    v78 = sub_23A690CFC();
    v79 = sub_23A691038();
    if (os_log_type_enabled(v78, v79))
    {
      v97 = v22;
      v80 = (uint8_t *)swift_slowAlloc();
      v81 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v80 = 138412290;
      v82 = v66;
      v83 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v83;
      v11 = (uint64_t)v102;
      sub_23A6911D0();
      *v81 = v83;

      _os_log_impl(&dword_23A5B0000, v78, v79, "dockkit: failed getting sync connection, can't send xpc %@", v80, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v81, -1, -1);
      v84 = v80;
      v75 = v99;
      MEMORY[0x23B853BD0](v84, -1, -1);
    }
    else
    {

    }
    v65(v75, v11);
    sub_23A5F8428();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v85 = v66;
LABEL_37:
    swift_continuation_throwingResumeWithError();
    return swift_release();
  }
  v56 = v22;
  v57 = *(void **)&a5[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
  v103 = v104;
  swift_unknownObjectRetain();
  v102 = v57;
  v101 = (char *)sub_23A690E04();
  if (v25)
  {
    v100 = sub_23A690F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    v100 = 0;
  }
  v86 = (_QWORD *)swift_allocObject();
  v86[2] = a2;
  v86[3] = a5;
  v86[4] = v95;
  v86[5] = sub_23A6087D8;
  v86[6] = v56;
  v87 = swift_allocObject();
  *(_QWORD *)(v87 + 16) = sub_23A60881C;
  *(_QWORD *)(v87 + 24) = v86;
  v109 = (uint64_t (*)(void *))sub_23A609098;
  v110 = (_QWORD *)v87;
  aBlock = MEMORY[0x24BDAC760];
  v106 = 1107296256;
  v107 = sub_23A647AA0;
  v108 = &block_descriptor_109;
  v88 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v89 = a5;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  v90 = v102;
  v92 = (void *)v100;
  v91 = v101;
  objc_msgSend(v103, sel_getSensorDataWithInfo_system_sensors_occurrence_completion_, v102, v101, v100, v96, v88);

  swift_unknownObjectRelease_n();
  _Block_release(v88);
  LOBYTE(v88) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v88 & 1) != 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_23A603F24(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t), uint64_t a7, _QWORD *a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (!a3)
    goto LABEL_8;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_23A691374();
    swift_bridgeObjectRelease();
    if (v15 >= 1)
      goto LABEL_4;
LABEL_8:
    *(_QWORD *)(a4 + *a8) = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    return a6(a1 & 1, a2);
  }
  if (*(uint64_t *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_8;
LABEL_4:
  v13 = a4 + *a8;
  v14 = swift_unknownObjectRetain();
  MEMORY[0x23B852D78](v14);
  if (*(_QWORD *)(*(_QWORD *)v13 + 16) >= *(_QWORD *)(*(_QWORD *)v13 + 24) >> 1)
    sub_23A690F3C();
  sub_23A690F48();
  sub_23A690F30();
  return a6(a1 & 1, a2);
}

uint64_t sub_23A604040(uint64_t a1, unint64_t a2, _BYTE *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  void *v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  void (*v59)(char *, _BYTE *, uint64_t);
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  char *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  _QWORD *v79;
  id v80;
  uint64_t v81;
  uint8_t *v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  void *v86;
  _BYTE *v87;
  char *v88;
  void *v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void *v99;
  uint64_t aBlock;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t (*v104)();
  _QWORD *v105;

  v8 = sub_23A690D14();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v90 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v98 = (char *)&v90 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v90 - v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a4;
  if (a3[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] != 1)
  {
    (*(void (**)(char *, _BYTE *, uint64_t))(v9 + 16))(v19, &a3[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v8);
    v31 = sub_23A690CFC();
    v32 = sub_23A691038();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_23A5B0000, v31, v32, "xpc lock/queue not initialized, no XPC configured", v33, 2u);
      MEMORY[0x23B853BD0](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
    sub_23A5C9938();
    v34 = swift_allocError();
    *(_OWORD *)v35 = xmmword_23A6967C0;
    *(_BYTE *)(v35 + 16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v36 = v34;
    goto LABEL_37;
  }
  v94 = v15;
  v95 = v9;
  v96 = a4;
  v97 = (uint64_t)v12;
  if (!a2)
  {
    v23 = 0;
    goto LABEL_23;
  }
  v92 = a1;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_23A691374();
    if (v21)
      goto LABEL_5;
LABEL_22:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
    goto LABEL_23;
  }
  v21 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v21)
    goto LABEL_22;
LABEL_5:
  aBlock = MEMORY[0x24BEE4AF8];
  result = sub_23A5EF3DC(0, v21 & ~(v21 >> 63), 0);
  if (v21 < 0)
  {
LABEL_42:
    __break(1u);
    return result;
  }
  v93 = v8;
  v90 = a3;
  v91 = v20;
  v23 = aBlock;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v24 = 0;
    do
    {
      v25 = MEMORY[0x23B85312C](v24, a2);
      v27 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11DockKitCore9Component_name);
      v26 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11DockKitCore9Component_name + 8);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      aBlock = v23;
      v29 = *(_QWORD *)(v23 + 16);
      v28 = *(_QWORD *)(v23 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_23A5EF3DC(v28 > 1, v29 + 1, 1);
        v23 = aBlock;
      }
      ++v24;
      *(_QWORD *)(v23 + 16) = v29 + 1;
      v30 = v23 + 16 * v29;
      *(_QWORD *)(v30 + 32) = v27;
      *(_QWORD *)(v30 + 40) = v26;
    }
    while (v21 != v24);
  }
  else
  {
    v37 = (_QWORD *)(a2 + 32);
    do
    {
      v38 = (uint64_t *)(*v37 + OBJC_IVAR____TtC11DockKitCore9Component_name);
      v40 = *v38;
      v39 = v38[1];
      aBlock = v23;
      v42 = *(_QWORD *)(v23 + 16);
      v41 = *(_QWORD *)(v23 + 24);
      swift_bridgeObjectRetain();
      if (v42 >= v41 >> 1)
      {
        sub_23A5EF3DC(v41 > 1, v42 + 1, 1);
        v23 = aBlock;
      }
      *(_QWORD *)(v23 + 16) = v42 + 1;
      v43 = v23 + 16 * v42;
      *(_QWORD *)(v43 + 32) = v40;
      *(_QWORD *)(v43 + 40) = v39;
      ++v37;
      --v21;
    }
    while (v21);
  }
  swift_bridgeObjectRelease();
  a3 = v90;
  v20 = v91;
  v8 = v93;
LABEL_23:
  v44 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v45 = *(os_unfair_lock_s **)&a3[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
  swift_retain();
  os_unfair_lock_lock(v45 + 4);
  swift_release();
  v46 = *(void **)&a3[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
  *(_QWORD *)&a3[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

  v47 = *(os_unfair_lock_s **)&a3[v44];
  swift_retain();
  os_unfair_lock_unlock(v47 + 4);
  swift_release();
  v48 = sub_23A5F7298();
  if (!v48)
  {
    swift_bridgeObjectRelease();
    v58 = v95;
    v59 = *(void (**)(char *, _BYTE *, uint64_t))(v95 + 16);
    v60 = v98;
    v59(v98, &a3[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v8);
    v61 = sub_23A690CFC();
    v62 = sub_23A691038();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_23A5B0000, v61, v62, "failed connecting to server xpc", v63, 2u);
      MEMORY[0x23B853BD0](v63, -1, -1);
    }

    v64 = *(char **)(v58 + 8);
    ((void (*)(char *, uint64_t))v64)(v60, v8);
    sub_23A5C9938();
    v65 = (void *)swift_allocError();
    *(_QWORD *)v66 = 0xD00000000000001FLL;
    *(_QWORD *)(v66 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v66 + 16) = 4;
    swift_willThrow();
    goto LABEL_33;
  }
  v49 = (void *)v48;
  v50 = v8;
  v51 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v52 = (_QWORD *)swift_allocObject();
  v52[2] = v51;
  v52[3] = sub_23A608ED4;
  v52[4] = v20;
  v104 = sub_23A608EE0;
  v105 = v52;
  aBlock = MEMORY[0x24BDAC760];
  v101 = 1107296256;
  v102 = sub_23A60D824;
  v103 = &block_descriptor_79;
  v53 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v54 = objc_msgSend(v49, sel_synchronousRemoteObjectProxyWithErrorHandler_, v53);
  _Block_release(v53);
  sub_23A6911F4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v67 = v95;
    v59 = *(void (**)(char *, _BYTE *, uint64_t))(v95 + 16);
    v59(v94, &a3[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v50);
    v68 = sub_23A690CFC();
    v69 = sub_23A691038();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v70 = 0;
      _os_log_impl(&dword_23A5B0000, v68, v69, "failed asynchronous server XPC connection", v70, 2u);
      MEMORY[0x23B853BD0](v70, -1, -1);
    }

    v71 = *(void (**)(char *, uint64_t))(v67 + 8);
    v71(v94, v50);
    sub_23A5C9938();
    v65 = (void *)swift_allocError();
    *(_OWORD *)v72 = xmmword_23A6967D0;
    *(_BYTE *)(v72 + 16) = 4;
    swift_willThrow();

    v8 = v50;
    v64 = (char *)v71;
    swift_release();
LABEL_33:
    v73 = v97;
    v59((char *)v97, &a3[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v8);
    v74 = v65;
    v75 = v65;
    v76 = sub_23A690CFC();
    v77 = sub_23A691038();
    if (os_log_type_enabled(v76, v77))
    {
      v93 = v8;
      v78 = (uint8_t *)swift_slowAlloc();
      v79 = (_QWORD *)swift_slowAlloc();
      v98 = v64;
      *(_DWORD *)v78 = 138412290;
      v80 = v65;
      v81 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v81;
      v8 = v93;
      v64 = v98;
      sub_23A6911D0();
      *v79 = v81;

      _os_log_impl(&dword_23A5B0000, v76, v77, "dockkit: failed getting sync connection, can't send xpc %@", v78, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v79, -1, -1);
      v82 = v78;
      v73 = v97;
      MEMORY[0x23B853BD0](v82, -1, -1);
    }
    else
    {

    }
    ((void (*)(uint64_t, uint64_t))v64)(v73, v8);
    sub_23A5F8428();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v83 = v65;
LABEL_37:
    swift_continuation_throwingResumeWithError();
    return swift_release();
  }
  v55 = v99;
  v56 = *(void **)&a3[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
  swift_unknownObjectRetain();
  v98 = v56;
  v97 = sub_23A690E04();
  if (v23)
  {
    v57 = (void *)sub_23A690F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    v57 = 0;
  }
  v84 = (_QWORD *)swift_allocObject();
  v84[2] = a3;
  v84[3] = sub_23A608ED4;
  v84[4] = v20;
  v85 = swift_allocObject();
  *(_QWORD *)(v85 + 16) = sub_23A608760;
  *(_QWORD *)(v85 + 24) = v84;
  v104 = sub_23A609098;
  v105 = (_QWORD *)v85;
  aBlock = MEMORY[0x24BDAC760];
  v101 = 1107296256;
  v102 = sub_23A647AA0;
  v103 = &block_descriptor_89;
  v86 = _Block_copy(&aBlock);
  swift_retain();
  v87 = a3;
  swift_retain();
  swift_release();
  v89 = (void *)v97;
  v88 = v98;
  objc_msgSend(v55, sel_stopSensorDataWithInfo_system_sensors_completion_, v98, v97, v57, v86);

  swift_unknownObjectRelease_n();
  _Block_release(v86);
  LOBYTE(v86) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v86 & 1) != 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_23A604AE4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  void *v50;
  os_unfair_lock_s *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  void *v63;
  void *v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  void (*v70)(char *, uint64_t);
  void *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  id v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  _QWORD *v83;
  id v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  void *v102;
  uint64_t aBlock;
  uint64_t v104;
  void *v105;
  void *v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  _QWORD *v108;

  v99 = a1;
  v9 = sub_23A690D14();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v91 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v101 = (char *)&v91 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v91 - v19;
  v21 = swift_allocObject();
  v22 = v21;
  *(_QWORD *)(v21 + 16) = a5;
  if (*(_BYTE *)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v20, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v33 = sub_23A690CFC();
    v34 = sub_23A691038();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = v10;
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_23A5B0000, v33, v34, "xpc lock/queue not initialized, no XPC configured", v36, 2u);
      v37 = v36;
      v10 = v35;
      MEMORY[0x23B853BD0](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
    sub_23A5C9938();
    v38 = swift_allocError();
    *(_OWORD *)v39 = xmmword_23A6967C0;
    *(_BYTE *)(v39 + 16) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
    swift_allocError();
    *v40 = v38;
    swift_continuation_throwingResumeWithError();
    return swift_release();
  }
  v96 = v16;
  v97 = a5;
  v98 = v21;
  v100 = v10;
  v93 = a3;
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v23 = sub_23A691374();
      if (v23)
        goto LABEL_5;
    }
    else
    {
      v23 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v23)
      {
LABEL_5:
        aBlock = MEMORY[0x24BEE4AF8];
        result = sub_23A5EF3DC(0, v23 & ~(v23 >> 63), 0);
        if (v23 < 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v94 = v13;
        v95 = v9;
        v92 = a4;
        v25 = aBlock;
        if ((a2 & 0xC000000000000001) != 0)
        {
          v26 = 0;
          do
          {
            v27 = MEMORY[0x23B85312C](v26, a2);
            v29 = *(_QWORD *)(v27 + OBJC_IVAR____TtC11DockKitCore9Component_name);
            v28 = *(_QWORD *)(v27 + OBJC_IVAR____TtC11DockKitCore9Component_name + 8);
            swift_bridgeObjectRetain();
            swift_unknownObjectRelease();
            aBlock = v25;
            v31 = *(_QWORD *)(v25 + 16);
            v30 = *(_QWORD *)(v25 + 24);
            if (v31 >= v30 >> 1)
            {
              sub_23A5EF3DC(v30 > 1, v31 + 1, 1);
              v25 = aBlock;
            }
            ++v26;
            *(_QWORD *)(v25 + 16) = v31 + 1;
            v32 = v25 + 16 * v31;
            *(_QWORD *)(v32 + 32) = v29;
            *(_QWORD *)(v32 + 40) = v28;
          }
          while (v23 != v26);
        }
        else
        {
          v41 = (_QWORD *)(a2 + 32);
          do
          {
            v42 = (uint64_t *)(*v41 + OBJC_IVAR____TtC11DockKitCore9Component_name);
            v44 = *v42;
            v43 = v42[1];
            aBlock = v25;
            v46 = *(_QWORD *)(v25 + 16);
            v45 = *(_QWORD *)(v25 + 24);
            swift_bridgeObjectRetain();
            if (v46 >= v45 >> 1)
            {
              sub_23A5EF3DC(v45 > 1, v46 + 1, 1);
              v25 = aBlock;
            }
            *(_QWORD *)(v25 + 16) = v46 + 1;
            v47 = v25 + 16 * v46;
            *(_QWORD *)(v47 + 32) = v44;
            *(_QWORD *)(v47 + 40) = v43;
            ++v41;
            --v23;
          }
          while (v23);
        }
        swift_bridgeObjectRelease();
        v22 = v98;
        v13 = v94;
        v9 = v95;
        a4 = v92;
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v25 = 0;
  }
LABEL_23:
  v48 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v49 = *(os_unfair_lock_s **)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
  swift_retain();
  os_unfair_lock_lock(v49 + 4);
  swift_release();
  v50 = *(void **)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
  *(_QWORD *)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError) = 0;

  v51 = *(os_unfair_lock_s **)(a4 + v48);
  swift_retain();
  os_unfair_lock_unlock(v51 + 4);
  swift_release();
  v52 = sub_23A5F7298();
  if (v52)
  {
    v53 = (void *)v52;
    v54 = v22;
    v55 = v9;
    v56 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = v56;
    v57[3] = sub_23A608ED4;
    v57[4] = v54;
    v107 = (uint64_t (*)(uint64_t, uint64_t))sub_23A608EE0;
    v108 = v57;
    aBlock = MEMORY[0x24BDAC760];
    v104 = 1107296256;
    v105 = sub_23A60D824;
    v106 = &block_descriptor_60;
    v58 = _Block_copy(&aBlock);
    v101 = (char *)v56;
    swift_retain();
    swift_retain();
    swift_release();
    v59 = objc_msgSend(v53, sel_synchronousRemoteObjectProxyWithErrorHandler_, v58);
    _Block_release(v58);
    sub_23A6911F4();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v60 = v102;
      v61 = *(void **)(a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
      swift_unknownObjectRetain();
      v62 = v61;
      v100 = sub_23A690E04();
      if (v25)
      {
        v63 = (void *)sub_23A690F00();
        swift_bridgeObjectRelease();
        if (v93)
        {
LABEL_27:
          type metadata accessor for SensorData();
          v64 = (void *)sub_23A690F00();
          goto LABEL_40;
        }
      }
      else
      {
        v63 = 0;
        if (v93)
          goto LABEL_27;
      }
      v64 = 0;
LABEL_40:
      v87 = swift_allocObject();
      *(_QWORD *)(v87 + 16) = sub_23A608ED4;
      *(_QWORD *)(v87 + 24) = v54;
      v88 = swift_allocObject();
      *(_QWORD *)(v88 + 16) = sub_23A608710;
      *(_QWORD *)(v88 + 24) = v87;
      v107 = sub_23A608740;
      v108 = (_QWORD *)v88;
      aBlock = MEMORY[0x24BDAC760];
      v104 = 1107296256;
      v105 = sub_23A647AA0;
      v106 = &block_descriptor_69;
      v89 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      v90 = (void *)v100;
      objc_msgSend(v60, sel_setSensorStatesWithInfo_system_sensors_states_completion_, v62, v100, v63, v64, v89);

      swift_unknownObjectRelease_n();
      _Block_release(v89);
      LOBYTE(v89) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      result = swift_release();
      if ((v89 & 1) == 0)
        return result;
LABEL_43:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    v66 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 16);
    v9 = v55;
    v66(v96, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v55);
    v73 = sub_23A690CFC();
    v74 = sub_23A691038();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v75 = 0;
      _os_log_impl(&dword_23A5B0000, v73, v74, "failed asynchronous server XPC connection", v75, 2u);
      MEMORY[0x23B853BD0](v75, -1, -1);
    }

    v76 = *(void (**)(char *, uint64_t))(v100 + 8);
    v76(v96, v55);
    sub_23A5C9938();
    v71 = (void *)swift_allocError();
    *(_OWORD *)v77 = xmmword_23A6967D0;
    *(_BYTE *)(v77 + 16) = 4;
    swift_willThrow();

    v70 = v76;
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v65 = v101;
    v66 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 16);
    v66(v101, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
    v67 = sub_23A690CFC();
    v68 = sub_23A691038();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v69 = 0;
      _os_log_impl(&dword_23A5B0000, v67, v68, "failed connecting to server xpc", v69, 2u);
      MEMORY[0x23B853BD0](v69, -1, -1);
    }

    v70 = *(void (**)(char *, uint64_t))(v100 + 8);
    v70(v65, v9);
    sub_23A5C9938();
    v71 = (void *)swift_allocError();
    *(_QWORD *)v72 = 0xD00000000000001FLL;
    *(_QWORD *)(v72 + 8) = 0x800000023A69DA20;
    *(_BYTE *)(v72 + 16) = 4;
    swift_willThrow();
  }
  v66(v13, a4 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v9);
  v78 = v71;
  v79 = v71;
  v80 = sub_23A690CFC();
  v81 = sub_23A691038();
  if (os_log_type_enabled(v80, v81))
  {
    v94 = v13;
    v82 = (uint8_t *)swift_slowAlloc();
    v83 = (_QWORD *)swift_slowAlloc();
    v95 = v9;
    *(_DWORD *)v82 = 138412290;
    v84 = v71;
    v85 = _swift_stdlib_bridgeErrorToNSError();
    aBlock = v85;
    v9 = v95;
    sub_23A6911D0();
    *v83 = v85;
    v13 = v94;

    _os_log_impl(&dword_23A5B0000, v80, v81, "dockkit: failed getting sync connection, can't send xpc %@", v82, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v83, -1, -1);
    MEMORY[0x23B853BD0](v82, -1, -1);
  }
  else
  {

  }
  v70(v13, v9);
  sub_23A5F8428();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v86 = v71;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

uint64_t sub_23A6055F0(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_23A605668(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD, void *), uint64_t a4, const char *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[2];
  _QWORD *v24;
  const char *v25;
  uint64_t (*v26)(_QWORD, void *);
  uint64_t v27;

  v26 = a3;
  v8 = sub_23A690D14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x23B853C6C](a2 + 16);
  if (v12)
  {
    v13 = (void *)v12;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v8);

    v14 = a1;
    v15 = a1;
    v16 = sub_23A690CFC();
    v17 = sub_23A691038();
    if (os_log_type_enabled(v16, v17))
    {
      v25 = a5;
      v18 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v18 = 138412290;
      v23[1] = v18 + 4;
      v19 = a1;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      v27 = v20;
      sub_23A6911D0();
      v21 = v24;
      *v24 = v20;

      _os_log_impl(&dword_23A5B0000, v16, v17, v25, v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v21, -1, -1);
      MEMORY[0x23B853BD0](v18, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v26(0, a1);
}

id DockCoreAccessory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DockCoreAccessory.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23A6058F4()
{
  JUMPOUT(0x23B853C6CLL);
}

id SystemController.__allocating_init(accessory:id:type:name:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  char *v11;
  char *v12;
  id v13;
  objc_super v15;

  v11 = (char *)objc_allocWithZone(v5);
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore6System_components] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore6System_id] = a2;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore6System_type] = a3;
  v12 = &v11[OBJC_IVAR____TtC11DockKitCore6System_name];
  *(_QWORD *)v12 = a4;
  *((_QWORD *)v12 + 1) = a5;
  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for System();
  v13 = objc_msgSendSuper2(&v15, sel_init);
  swift_unknownObjectWeakAssign();

  return v13;
}

id SystemController.init(accessory:id:type:name:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v11;
  id v12;
  objc_super v14;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore6System_components] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore6System_id] = a2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore6System_type] = a3;
  v11 = &v5[OBJC_IVAR____TtC11DockKitCore6System_name];
  *(_QWORD *)v11 = a4;
  *((_QWORD *)v11 + 1) = a5;
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for System();
  v12 = objc_msgSendSuper2(&v14, sel_init);
  swift_unknownObjectWeakAssign();

  return v12;
}

id SystemController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_unknownObjectWeakInit();
  v4 = sub_23A62F264();

  return v4;
}

id SystemController.init(coder:)(void *a1)
{
  id v2;

  swift_unknownObjectWeakInit();
  v2 = sub_23A62F264();

  return v2;
}

void SystemController.__allocating_init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SystemController.init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23A605D38()
{
  return swift_unknownObjectWeakDestroy();
}

id SystemController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SystemController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23A605D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569A0330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DockCoreAccessory()
{
  uint64_t result;

  result = qword_25699F320;
  if (!qword_25699F320)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A605E0C(uint64_t a1, uint8_t *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  void *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  uint8_t *v45;
  _QWORD *v46;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  _QWORD v52[2];
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t aBlock;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  _QWORD *v63;

  v56 = a5;
  LODWORD(v55) = a4;
  v52[1] = a1;
  v53 = a2;
  v10 = sub_23A690D14();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a7;
  v15 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  v16 = *(os_unfair_lock_s **)(a6 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock);
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  swift_release();
  v17 = *(void **)(a6 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError);
  *(_QWORD *)(a6 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError) = 0;

  v18 = *(os_unfair_lock_s **)(a6 + v15);
  swift_retain();
  os_unfair_lock_unlock(v18 + 4);
  swift_release();
  v19 = sub_23A5F7298();
  if (v19)
  {
    v20 = (void *)v19;
    v54 = a3;
    v21 = v55;
    v22 = v55 >> 8;
    v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = v23;
    v24[3] = sub_23A608ED4;
    v24[4] = v14;
    v62 = sub_23A608B18;
    v63 = v24;
    aBlock = MEMORY[0x24BDAC760];
    v59 = 1107296256;
    v60 = sub_23A60D824;
    v61 = &block_descriptor_258;
    v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v26 = objc_msgSend(v20, sel_synchronousRemoteObjectProxyWithErrorHandler_, v25);
    _Block_release(v25);
    sub_23A6911F4();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
    if (swift_dynamicCast())
      v27 = v57;
    else
      v27 = 0;
    LOBYTE(aBlock) = v21;
    BYTE1(aBlock) = v22;
    v59 = v56;
    v28 = (void *)TrajectoryCommand.encode()();
    if (v28)
    {
      v29 = v28;
      if (v27)
      {
        v30 = *(void **)(a6 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
        if (v53)
        {
          swift_unknownObjectRetain();
          v31 = v30;
          v56 = sub_23A690E04();
        }
        else
        {
          swift_unknownObjectRetain();
          v48 = v30;
          v56 = 0;
        }
        v49 = swift_allocObject();
        *(_QWORD *)(v49 + 16) = sub_23A608ED4;
        *(_QWORD *)(v49 + 24) = v14;
        v62 = sub_23A608ED8;
        v63 = (_QWORD *)v49;
        aBlock = MEMORY[0x24BDAC760];
        v59 = 1107296256;
        v60 = sub_23A647AEC;
        v61 = &block_descriptor_264;
        v50 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v51 = (void *)v56;
        objc_msgSend(v27, sel_sendTrajectoryWithInfo_system_data_completion_, v30, v56, v29, v50);

        swift_unknownObjectRelease();
        _Block_release(v50);

        swift_unknownObjectWeakAssign();
        goto LABEL_17;
      }

    }
    swift_unknownObjectWeakAssign();
LABEL_17:
    swift_release();

    swift_release();
    return swift_unknownObjectRelease();
  }
  v56 = a7;
  sub_23A5C9938();
  v32 = (void *)swift_allocError();
  *(_OWORD *)v33 = xmmword_23A6967D0;
  *(_BYTE *)(v33 + 16) = 4;
  swift_willThrow();
  v55 = a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a6 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v10);
  v34 = v32;
  v35 = v32;
  v36 = v32;
  v37 = sub_23A690CFC();
  v38 = sub_23A691038();
  v39 = v10;
  if (os_log_type_enabled(v37, v38))
  {
    v40 = swift_slowAlloc();
    v54 = v10;
    v41 = (uint8_t *)v40;
    v42 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v41 = 138412290;
    v53 = v41 + 4;
    v43 = v32;
    v44 = _swift_stdlib_bridgeErrorToNSError();
    aBlock = v44;
    sub_23A6911D0();
    *v42 = v44;

    _os_log_impl(&dword_23A5B0000, v37, v38, "dockkit: failed getting sync debug connection, can't send xpc %@", v41, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v42, -1, -1);
    v45 = v41;
    v39 = v54;
    MEMORY[0x23B853BD0](v45, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v39);
  sub_23A5F8428();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v46 = v32;
  swift_continuation_throwingResumeWithError();

  return swift_release();
}

uint64_t sub_23A6063C4(void *a1, char *a2, char *a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  void *v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  char *v36;
  id v37;
  uint64_t result;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  uint64_t v43;
  void (*v44)(char *, char *, _QWORD *);
  _QWORD *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  void (*v49)(char *, _QWORD *);
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  id v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  _QWORD *v62;
  id v63;
  void (*v64)(char *, _QWORD *);
  uint64_t v65;
  _QWORD *v66;
  uint8_t *v67;
  _QWORD *v68;
  void *v69;
  char *v70;
  _QWORD *v71;
  char *v72;
  char *v73;
  uint64_t aBlock;
  uint64_t v75;
  void (*v76)(uint64_t, void *);
  void *v77;
  uint64_t (*v78)(uint64_t);
  _QWORD *v79;

  v6 = (_QWORD *)sub_23A690D14();
  v7 = (_QWORD *)*(v6 - 1);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v69 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v69 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (void **)((char *)&v69 - v17);
  v19 = swift_allocObject();
  v72 = a3;
  *(_QWORD *)(v19 + 16) = a3;
  if (a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] == 1)
  {
    v69 = a1;
    v71 = v6;
    v20 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
    v21 = *(os_unfair_lock_s **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    swift_release();
    v22 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
    *(_QWORD *)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

    v23 = *(os_unfair_lock_s **)&a2[v20];
    swift_retain();
    os_unfair_lock_unlock(v23 + 4);
    swift_release();
    v24 = sub_23A5F7298();
    v70 = v10;
    if (v24)
    {
      v6 = (_QWORD *)v24;
      v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v26 = (_QWORD *)swift_allocObject();
      v26[2] = v25;
      v26[3] = sub_23A608EDC;
      v26[4] = v19;
      v78 = (uint64_t (*)(uint64_t))sub_23A608EE4;
      v79 = v26;
      v27 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v75 = 1107296256;
      v76 = sub_23A60D824;
      v77 = &block_descriptor_120;
      v28 = _Block_copy(&aBlock);
      v29 = v19;
      swift_retain();
      swift_retain();
      swift_release();
      v30 = objc_msgSend(v6, sel_synchronousRemoteObjectProxyWithErrorHandler_, v28);
      _Block_release(v28);
      sub_23A6911F4();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v72 = v73;
        v31 = *(void **)&a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
        v18 = (_QWORD *)swift_allocObject();
        v32 = v27;
        v33 = v69;
        v18[2] = a2;
        v18[3] = v33;
        v18[4] = sub_23A608EDC;
        v18[5] = v19;
        v34 = swift_allocObject();
        *(_QWORD *)(v34 + 16) = sub_23A608850;
        *(_QWORD *)(v34 + 24) = v18;
        v78 = sub_23A608884;
        v79 = (_QWORD *)v34;
        aBlock = v32;
        v75 = 1107296256;
        v76 = sub_23A679C34;
        v77 = &block_descriptor_129;
        v7 = _Block_copy(&aBlock);
        swift_retain();
        v35 = v31;
        v36 = a2;
        v37 = v33;
        swift_retain();
        swift_release();
        a2 = v72;
        objc_msgSend(v72, sel_startSystemEventsDataWithInfo_completion_, v35, v7);
        swift_unknownObjectRelease();

        _Block_release(v7);
        LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        swift_release();
        result = swift_release();
        if ((v35 & 1) == 0)
          return result;
        __break(1u);
        goto LABEL_6;
      }
      v44 = (void (*)(char *, char *, _QWORD *))v7[2];
      v44(v13, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v71);
      v51 = sub_23A690CFC();
      v52 = sub_23A691038();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        _os_log_impl(&dword_23A5B0000, v51, v52, "failed asynchronous server XPC connection", v53, 2u);
        MEMORY[0x23B853BD0](v53, -1, -1);
      }

      v49 = (void (*)(char *, _QWORD *))v7[1];
      v54 = v71;
      v49(v13, v71);
      sub_23A5C9938();
      v42 = (void *)swift_allocError();
      *(_OWORD *)v55 = xmmword_23A6967D0;
      *(_BYTE *)(v55 + 16) = 4;
      swift_willThrow();

      v45 = v54;
      swift_release();
      v19 = v29;
    }
    else
    {
      v44 = (void (*)(char *, char *, _QWORD *))v7[2];
      v45 = v71;
      v44(v16, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v71);
      v46 = sub_23A690CFC();
      v47 = sub_23A691038();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_23A5B0000, v46, v47, "failed connecting to server xpc", v48, 2u);
        MEMORY[0x23B853BD0](v48, -1, -1);
      }

      v49 = (void (*)(char *, _QWORD *))v7[1];
      v49(v16, v45);
      sub_23A5C9938();
      v42 = (void *)swift_allocError();
      *(_QWORD *)v50 = 0xD00000000000001FLL;
      *(_QWORD *)(v50 + 8) = 0x800000023A69DA20;
      *(_BYTE *)(v50 + 16) = 4;
      swift_willThrow();
    }
    v56 = v70;
    v44(v70, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v45);
    v57 = v42;
    v58 = v42;
    v59 = sub_23A690CFC();
    v60 = sub_23A691038();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = (_QWORD *)swift_slowAlloc();
      v69 = (void *)v19;
      *(_DWORD *)v61 = 138412290;
      v63 = v42;
      v64 = v49;
      v65 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v65;
      sub_23A6911D0();
      *v62 = v65;
      v49 = v64;

      _os_log_impl(&dword_23A5B0000, v59, v60, "dockkit: failed getting sync connection, can't send xpc %@", v61, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      v66 = v62;
      v45 = v71;
      MEMORY[0x23B853BD0](v66, -1, -1);
      v67 = v61;
      v56 = v70;
      MEMORY[0x23B853BD0](v67, -1, -1);
    }
    else
    {

    }
    v49(v56, v45);
    sub_23A5F8428();
    goto LABEL_19;
  }
LABEL_6:
  ((void (*)(_QWORD *, char *, _QWORD *))v7[2])(v18, &a2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v6);
  v39 = sub_23A690CFC();
  v40 = sub_23A691038();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v41 = 0;
    _os_log_impl(&dword_23A5B0000, v39, v40, "xpc lock/queue not initialized, no XPC configured", v41, 2u);
    MEMORY[0x23B853BD0](v41, -1, -1);
  }

  ((void (*)(_QWORD *, void *))v7[1])(v18, v6);
  sub_23A5C9938();
  v42 = (void *)swift_allocError();
  *(_OWORD *)v43 = xmmword_23A6967C0;
  *(_BYTE *)(v43 + 16) = 3;
LABEL_19:
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699E280);
  swift_allocError();
  *v68 = v42;
  swift_continuation_throwingResumeWithError();
  return swift_release();
}

void sub_23A606C0C(uint64_t a1, void (*a2)(void), uint64_t a3, char *a4)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  void *v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void (*v26)(void);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  uint64_t v40;
  void (*v41)(char *, char *, id);
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void (*v46)(char *, id);
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  id v51;
  uint64_t v52;
  char *v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  _QWORD *v59;
  id v60;
  void (*v61)(char *, id);
  uint64_t v62;
  _QWORD *v63;
  id v64;
  uint64_t v65;
  char *v66;
  id v67;
  void (*v68)(void);
  void *v69;
  uint64_t aBlock;
  uint64_t v71;
  void (*v72)(uint64_t, void *);
  void *v73;
  uint64_t (*v74)();
  _QWORD *v75;

  v68 = a2;
  v7 = (_QWORD *)sub_23A690D14();
  v8 = (_QWORD *)*(v7 - 1);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v65 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v65 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v18 = (uint64_t *)((char *)&v65 - v17);
  if (a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] == 1)
  {
    v66 = v16;
    v67 = v7;
    v19 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
    v20 = *(os_unfair_lock_s **)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock];
    swift_retain();
    os_unfair_lock_lock(v20 + 4);
    swift_release();
    v21 = *(void **)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError];
    *(_QWORD *)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;

    v22 = *(os_unfair_lock_s **)&a4[v19];
    swift_retain();
    os_unfair_lock_unlock(v22 + 4);
    swift_release();
    v23 = sub_23A5F7298();
    if (v23)
    {
      v7 = (_QWORD *)v23;
      v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v25 = (_QWORD *)swift_allocObject();
      v26 = v68;
      v25[2] = v24;
      v25[3] = v26;
      v25[4] = a3;
      v74 = sub_23A608EE4;
      v75 = v25;
      v27 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v71 = 1107296256;
      v72 = sub_23A60D824;
      v73 = &block_descriptor_420;
      v28 = _Block_copy(&aBlock);
      v29 = a3;
      swift_retain();
      swift_retain();
      swift_release();
      v30 = objc_msgSend(v7, sel_synchronousRemoteObjectProxyWithErrorHandler_, v28);
      _Block_release(v28);
      sub_23A6911F4();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F468);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v67 = v69;
        v31 = v27;
        v32 = *(void **)&a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info];
        v18 = (_QWORD *)swift_allocObject();
        v18[2] = a4;
        v18[3] = a1;
        v18[4] = v68;
        v18[5] = a3;
        v33 = swift_allocObject();
        *(_QWORD *)(v33 + 16) = sub_23A608EF0;
        *(_QWORD *)(v33 + 24) = v18;
        v74 = sub_23A60909C;
        v75 = (_QWORD *)v33;
        aBlock = v31;
        v71 = 1107296256;
        v72 = sub_23A679C34;
        v73 = &block_descriptor_431;
        v8 = _Block_copy(&aBlock);
        swift_retain();
        v34 = v32;
        v35 = a4;
        swift_unknownObjectRetain();
        swift_retain();
        swift_release();
        objc_msgSend(v67, sel_startSystemEventsDataWithInfo_completion_, v34, v8);

        swift_unknownObjectRelease();
        _Block_release(v8);
        LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        swift_release();
        if ((v34 & 1) == 0)
          return;
        __break(1u);
        goto LABEL_6;
      }
      v41 = (void (*)(char *, char *, id))v8[2];
      v41(v12, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v67);
      v48 = sub_23A690CFC();
      v49 = sub_23A691038();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_23A5B0000, v48, v49, "failed asynchronous server XPC connection", v50, 2u);
        MEMORY[0x23B853BD0](v50, -1, -1);
      }

      v46 = (void (*)(char *, id))v8[1];
      v51 = v67;
      v46(v12, v67);
      sub_23A5C9938();
      v39 = (void *)swift_allocError();
      *(_OWORD *)v52 = xmmword_23A6967D0;
      *(_BYTE *)(v52 + 16) = 4;
      swift_willThrow();
      swift_release();

      v42 = v51;
      a3 = v29;
    }
    else
    {
      v41 = (void (*)(char *, char *, id))v8[2];
      v42 = v67;
      v41(v15, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v67);
      v43 = sub_23A690CFC();
      v44 = sub_23A691038();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        _os_log_impl(&dword_23A5B0000, v43, v44, "failed connecting to server xpc", v45, 2u);
        MEMORY[0x23B853BD0](v45, -1, -1);
      }

      v46 = (void (*)(char *, id))v8[1];
      v46(v15, v42);
      sub_23A5C9938();
      v39 = (void *)swift_allocError();
      *(_QWORD *)v47 = 0xD00000000000001FLL;
      *(_QWORD *)(v47 + 8) = 0x800000023A69DA20;
      *(_BYTE *)(v47 + 16) = 4;
      swift_willThrow();
    }
    v53 = v66;
    v41(v66, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v42);
    v54 = v39;
    v55 = v39;
    v56 = sub_23A690CFC();
    v57 = sub_23A691038();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = (_QWORD *)swift_slowAlloc();
      v65 = a3;
      *(_DWORD *)v58 = 138412290;
      v60 = v39;
      v61 = v46;
      v62 = _swift_stdlib_bridgeErrorToNSError();
      aBlock = v62;
      v53 = v66;
      sub_23A6911D0();
      *v59 = v62;
      v46 = v61;

      _os_log_impl(&dword_23A5B0000, v56, v57, "dockkit: failed getting sync connection, can't send xpc %@", v58, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
      swift_arrayDestroy();
      v63 = v59;
      v42 = v67;
      MEMORY[0x23B853BD0](v63, -1, -1);
      MEMORY[0x23B853BD0](v58, -1, -1);
    }
    else
    {

    }
    v46(v53, v42);
    sub_23A5F8428();
    v64 = v39;
    ((void (*)(void *))v68)(v39);

    goto LABEL_19;
  }
LABEL_6:
  ((void (*)(_QWORD *, char *, _QWORD *))v8[2])(v18, &a4[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v7);
  v36 = sub_23A690CFC();
  v37 = sub_23A691038();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_23A5B0000, v36, v37, "xpc lock/queue not initialized, no XPC configured", v38, 2u);
    MEMORY[0x23B853BD0](v38, -1, -1);
  }

  ((void (*)(_QWORD *, void *))v8[1])(v18, v7);
  sub_23A5C9938();
  v39 = (void *)swift_allocError();
  *(_OWORD *)v40 = xmmword_23A6967C0;
  *(_BYTE *)(v40 + 16) = 3;
  v68();
LABEL_19:

}

id sub_23A607414(void *a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  objc_class *v19;
  objc_super v21;

  v5 = sub_23A6906D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection] = 0;
  v9 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v10 = swift_allocObject();
  *(_QWORD *)&v2[v9] = v10;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnectionError] = 0;
  v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcAllowed] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_XPCTIMEOUT] = 0x4008000000000000;
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_sensorDelegates] = v11;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_eventDelegates] = v11;
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_batteryDelegates] = v11;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_trackingSummaryDelegates] = v11;
  swift_unknownObjectWeakInit();
  v12 = v2;
  sub_23A690D08();
  v13 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems;
  v14 = &v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model];
  *v14 = 0;
  v14[1] = 0;
  v15 = &v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion];
  *v15 = 0;
  v15[1] = 0;
  v16 = &v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_serialNumber];
  *v16 = 0;
  v16[1] = 0;
  v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_certified] = 0;
  v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_isMagSafe] = 0;
  v17 = OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version] = -1;
  v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_needsMigration] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory__xpcConnection_CameraCapture] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info] = a1;
  *(_QWORD *)&v12[v13] = a2;
  v18 = a1;
  sub_23A6906B4();
  (*(void (**)(_BYTE *, char *, uint64_t))(v6 + 32))(&v12[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_created], v8, v5);
  *(_QWORD *)&v12[v17] = 2;

  v19 = (objc_class *)type metadata accessor for DockCoreAccessory();
  v21.receiver = v12;
  v21.super_class = v19;
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t sub_23A607668(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  char *v8;
  void *v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v13 = a3;
      v7 = 0;
      v14 = a2;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (char *)MEMORY[0x23B85312C](v7, a1);
LABEL_9:
        v9 = v8;
        v10 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_20;
        v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC11DockKitCore6System_name] == a2
           && *(_QWORD *)&v8[OBJC_IVAR____TtC11DockKitCore6System_name + 8] == a3;
        if ((v11 || (sub_23A691518() & 1) != 0)
          && (objc_msgSend(v9, sel_isKindOfClass_, swift_getObjCClassFromMetadata()) & 1) != 0)
        {
          sub_23A6912D8();
          sub_23A6912F0();
          sub_23A6912FC();
          sub_23A6912E4();
          a3 = v13;
          a2 = v14;
        }
        else
        {

        }
        ++v7;
        if (v10 == v6)
          return v15;
      }
      if (v7 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      v6 = sub_23A691374();
      if (!v6)
        return MEMORY[0x24BEE4AF8];
    }
    v8 = (char *)*(id *)(a1 + 8 * v7 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23A607828(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v8;
  unint64_t v9;
  char *v10;
  void *v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      v15 = a3;
      v9 = 0;
      v16 = a2;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v10 = (char *)MEMORY[0x23B85312C](v9, a1);
LABEL_9:
        v11 = v10;
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_20;
        v13 = *(_QWORD *)&v10[OBJC_IVAR____TtC11DockKitCore6System_name] == a2
           && *(_QWORD *)&v10[OBJC_IVAR____TtC11DockKitCore6System_name + 8] == a3;
        if ((v13 || (sub_23A691518() & 1) != 0)
          && (a4(0), (objc_msgSend(v11, sel_isKindOfClass_, swift_getObjCClassFromMetadata()) & 1) != 0))
        {
          sub_23A6912D8();
          sub_23A6912F0();
          sub_23A6912FC();
          sub_23A6912E4();
          a3 = v15;
          a2 = v16;
        }
        else
        {

        }
        ++v9;
        if (v12 == v8)
          return v17;
      }
      if (v9 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      v8 = sub_23A691374();
      if (!v8)
        return MEMORY[0x24BEE4AF8];
    }
    v10 = (char *)*(id *)(a1 + 8 * v9 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t type metadata accessor for SystemController()
{
  return objc_opt_self();
}

uint64_t sub_23A607A0C()
{
  return swift_deallocObject();
}

id sub_23A607A1C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
  *a2 = v2;
  return v2;
}

void sub_23A607A34(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_info) = *a1;
  v3 = v2;

}

uint64_t sub_23A607A70@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A607A88(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A607AC0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_12Tm(a1, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model, a2);
}

uint64_t sub_23A607ACC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_13Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_model);
}

uint64_t sub_23A607AD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_12Tm(a1, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion, a2);
}

uint64_t sub_23A607AE4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_13Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_firmwareVersion);
}

uint64_t sub_23A607AF0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_12Tm(a1, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_serialNumber, a2);
}

uint64_t keypath_get_12Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + *a2);
  v4 = v3[1];
  *a3 = *v3;
  a3[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A607B14(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_13Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_serialNumber);
}

uint64_t keypath_set_13Tm(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23A607B58@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_certified);
  return result;
}

_BYTE *sub_23A607B70(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_certified) = *result;
  return result;
}

_QWORD *sub_23A607B88@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_isMagSafe);
  return result;
}

_BYTE *sub_23A607BA0(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_isMagSafe) = *result;
  return result;
}

_QWORD *sub_23A607BB8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version);
  return result;
}

_QWORD *sub_23A607BD0(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_version) = *result;
  return result;
}

_QWORD *sub_23A607BE8@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_needsMigration);
  return result;
}

_BYTE *sub_23A607C00(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_needsMigration) = *result;
  return result;
}

uint64_t sub_23A607C18@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = MEMORY[0x23B853C6C](*a1 + OBJC_IVAR____TtC11DockKitCore16SystemController_accessory);
  *a2 = result;
  return result;
}

uint64_t sub_23A607C4C()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_23A607C68()
{
  return type metadata accessor for DockCoreAccessory();
}

uint64_t sub_23A607C70()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23A690D14();
  if (v1 <= 0x3F)
  {
    result = sub_23A6906D8();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for DockCoreAccessory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static DockCoreAccessory.supportsSecureCoding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 552))();
}

uint64_t dispatch thunk of DockCoreAccessory.info.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x230))();
}

uint64_t dispatch thunk of DockCoreAccessory.systems.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x248))();
}

uint64_t dispatch thunk of DockCoreAccessory.summary.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x260))();
}

uint64_t dispatch thunk of DockCoreAccessory.model.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x268))();
}

uint64_t dispatch thunk of DockCoreAccessory.model.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x270))();
}

uint64_t dispatch thunk of DockCoreAccessory.model.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x278))();
}

uint64_t dispatch thunk of DockCoreAccessory.firmwareVersion.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x280))();
}

uint64_t dispatch thunk of DockCoreAccessory.firmwareVersion.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x288))();
}

uint64_t dispatch thunk of DockCoreAccessory.firmwareVersion.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x290))();
}

uint64_t dispatch thunk of DockCoreAccessory.serialNumber.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x298))();
}

uint64_t dispatch thunk of DockCoreAccessory.serialNumber.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of DockCoreAccessory.serialNumber.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of DockCoreAccessory.certified.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of DockCoreAccessory.certified.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of DockCoreAccessory.certified.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of DockCoreAccessory.isMagSafe.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of DockCoreAccessory.isMagSafe.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of DockCoreAccessory.isMagSafe.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2D8))();
}

uint64_t dispatch thunk of DockCoreAccessory.version.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of DockCoreAccessory.needsMigration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of DockCoreAccessory.needsMigration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x300))();
}

uint64_t dispatch thunk of DockCoreAccessory.needsMigration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x308))();
}

uint64_t dispatch thunk of DockCoreAccessory.__allocating_init(info:systems:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 784))();
}

uint64_t dispatch thunk of DockCoreAccessory.updateFrom(accessory:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x318))();
}

uint64_t dispatch thunk of DockCoreAccessory.disconnect(allowReconnect:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x320))();
}

uint64_t dispatch thunk of DockCoreAccessory.hasSystem(name:kind:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x330))();
}

uint64_t dispatch thunk of DockCoreAccessory.hasSystemActuators(name:actuators:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x338))();
}

uint64_t dispatch thunk of DockCoreAccessory.getActuatorIndex(name:system:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x340))();
}

uint64_t dispatch thunk of DockCoreAccessory.hasSystemSensors(name:sensors:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x348))();
}

uint64_t dispatch thunk of DockCoreAccessory.getSystemSensors(name:sensors:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x350))();
}

uint64_t dispatch thunk of DockCoreAccessory.getActuator(name:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x358))();
}

uint64_t dispatch thunk of DockCoreAccessory.prepForPersistence()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x370))();
}

uint64_t dispatch thunk of DockCoreAccessory.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x378))();
}

uint64_t dispatch thunk of DockCoreAccessory.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 896))();
}

uint64_t dispatch thunk of DockCoreAccessory.actuatorFeedback(info:system:actuators:positions:velocities:timestamp:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x3F8))();
}

uint64_t dispatch thunk of DockCoreAccessory.trajectoryProgressFeedback(info:system:progress:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x400))();
}

uint64_t dispatch thunk of DockCoreAccessory.systemEventData(info:data:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x408))();
}

uint64_t dispatch thunk of DockCoreAccessory.batteryStateData(info:data:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x410))();
}

uint64_t dispatch thunk of DockCoreAccessory.trackingSummaryData(info:data:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x418))();
}

uint64_t dispatch thunk of DockCoreAccessory.trackingSummaryDataDebug(info:data:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x420))();
}

uint64_t dispatch thunk of DockCoreAccessory.disconnected(err:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x428))();
}

uint64_t dispatch thunk of DockCoreAccessory.startSystemEventsData(delegate:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x450);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A5F2890;
  return v7(a1);
}

uint64_t dispatch thunk of DockCoreAccessory.getCurrentSystemEvent()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x460);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A6082C4;
  return v5();
}

uint64_t sub_23A6082C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of DockCoreAccessory.stopSystemEventsData()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x470);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F2890;
  return v5();
}

uint64_t dispatch thunk of DockCoreAccessory.startBatteryStatesData(delegate:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x480);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A5F2890;
  return v7(a1);
}

uint64_t dispatch thunk of DockCoreAccessory.startTrackingSummaryData(delegate:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x490);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A5F2890;
  return v7(a1);
}

uint64_t dispatch thunk of DockCoreAccessory.getCurrentBatteryStates()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x4A0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A6090A0;
  return v5();
}

uint64_t dispatch thunk of DockCoreAccessory.getCurrentTrackingSummary()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x4B0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A608534;
  return v5();
}

uint64_t sub_23A608534(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of DockCoreAccessory.stopBatteryData()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x4C0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5D98B0;
  return v5();
}

uint64_t dispatch thunk of DockCoreAccessory.stopTrackingSummaryData()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x4D0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F2890;
  return v5();
}

uint64_t dispatch thunk of DockCoreAccessory.sensorData(info:system:sensors:data:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x510))();
}

uint64_t method lookup function for SystemController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SystemController.accessory.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SystemController.__allocating_init(accessory:id:type:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_23A6086B0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A6086D4()
{
  uint64_t v0;

  return sub_23A5F88B8(v0);
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_23A6086E4()
{
  uint64_t v0;

  return sub_23A5F8AE4(v0);
}

void sub_23A6086EC()
{
  uint64_t v0;

  sub_23A5F7E48(v0);
}

uint64_t sub_23A6086F4()
{
  uint64_t v0;

  return sub_23A5F8134(v0);
}

uint64_t sub_23A6086FC()
{
  return swift_deallocObject();
}

uint64_t sub_23A608710()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23A608730()
{
  return swift_deallocObject();
}

uint64_t sub_23A608740(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23A647A80(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_23A608748()
{
  return swift_deallocObject();
}

uint64_t sub_23A608760(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t);

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24);
  *(_QWORD *)(*(_QWORD *)(v2 + 16) + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_sensorDelegates) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  return v5(a1, a2);
}

uint64_t sub_23A6087B8()
{
  return swift_deallocObject();
}

uint64_t sub_23A6087C8()
{
  return swift_deallocObject();
}

uint64_t sub_23A6087D8(uint64_t a1, void *a2)
{
  return sub_23A6055F0(a1, a2);
}

uint64_t sub_23A6087F4(void *a1)
{
  uint64_t v1;

  return sub_23A605668(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD, void *))(v1 + 24), *(_QWORD *)(v1 + 32), "failure from proxy: %@");
}

uint64_t sub_23A60881C(char a1, uint64_t a2)
{
  return sub_23A608A24(a1, a2, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_sensorDelegates);
}

uint64_t sub_23A608828()
{
  return swift_deallocObject();
}

uint64_t sub_23A608838()
{
  return swift_deallocObject();
}

uint64_t sub_23A608850(uint64_t a1)
{
  uint64_t v1;

  return sub_23A5FF118(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_eventDelegates);
}

uint64_t sub_23A608874()
{
  return swift_deallocObject();
}

uint64_t sub_23A608884(uint64_t a1)
{
  uint64_t v1;

  return sub_23A679C14(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_23A60888C()
{
  return swift_deallocObject();
}

uint64_t sub_23A60889C(void *a1, void *a2)
{
  uint64_t v2;

  return sub_23A5FCDAC(a1, a2, *(_QWORD *)(v2 + 16), &qword_25699F470);
}

uint64_t sub_23A6088C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A6088E4()
{
  return swift_deallocObject();
}

uint64_t sub_23A6088F4()
{
  return swift_deallocObject();
}

uint64_t sub_23A608908()
{
  return swift_deallocObject();
}

uint64_t sub_23A608918()
{
  return swift_deallocObject();
}

uint64_t sub_23A60892C()
{
  return swift_deallocObject();
}

uint64_t sub_23A60893C()
{
  return swift_deallocObject();
}

uint64_t sub_23A608954(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(_QWORD, uint64_t);

  v5 = *(uint64_t (**)(_QWORD, uint64_t))(v2 + 24);
  if ((a1 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v2 + 16) + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates) = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
  }
  return v5(a1 & 1, a2);
}

uint64_t sub_23A6089B4()
{
  return swift_deallocObject();
}

uint64_t sub_23A6089C4()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_101Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A608A18(char a1, uint64_t a2)
{
  return sub_23A608A24(a1, a2, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_feedbackDelegates);
}

uint64_t sub_23A608A24(char a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_23A603F24(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(uint64_t (**)(_QWORD, uint64_t))(v3 + 40), *(_QWORD *)(v3 + 48), a3);
}

uint64_t sub_23A608A48()
{
  return swift_deallocObject();
}

uint64_t sub_23A608A58()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_81Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A608A9C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(_QWORD, uint64_t);

  v5 = *(uint64_t (**)(_QWORD, uint64_t))(v2 + 24);
  if ((a1 & 1) != 0)
    swift_unknownObjectWeakAssign();
  return v5(a1 & 1, a2);
}

uint64_t sub_23A608AF4()
{
  return swift_deallocObject();
}

uint64_t sub_23A608B04()
{
  return swift_deallocObject();
}

uint64_t sub_23A608B18(void *a1)
{
  uint64_t v1;

  return sub_23A605668(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD, void *))(v1 + 24), *(_QWORD *)(v1 + 32), "error from remote proxy: %@");
}

uint64_t sub_23A608B3C()
{
  return swift_deallocObject();
}

uint64_t sub_23A608B54(uint64_t a1)
{
  return sub_23A608BF4(a1, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_trackingSummaryDelegates);
}

uint64_t sub_23A608B60()
{
  return swift_deallocObject();
}

uint64_t sub_23A608B70()
{
  return swift_deallocObject();
}

uint64_t sub_23A608B80(void *a1)
{
  return sub_23A6010A4(a1);
}

uint64_t sub_23A608B9C(void *a1)
{
  uint64_t v1;

  return sub_23A6017B4(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24));
}

uint64_t objectdestroy_276Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23A608BE8(uint64_t a1)
{
  return sub_23A608BF4(a1, &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_batteryDelegates);
}

uint64_t sub_23A608BF4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 32);
  (*(void (**)(void))(v2 + 16))();
  *(_QWORD *)(v4 + *a2) = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A608C3C()
{
  return swift_deallocObject();
}

uint64_t sub_23A608C4C()
{
  return swift_deallocObject();
}

uint64_t sub_23A608C5C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_23A5FFE04(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_23A608C68(void *a1)
{
  uint64_t v1;

  return sub_23A60068C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD, unint64_t, void *))(v1 + 24));
}

uint64_t sub_23A608C74(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23A5CA254(a1, a2);
  return a1;
}

uint64_t sub_23A608C88(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23A5CA298(a1, a2);
  return a1;
}

uint64_t sub_23A608C9C()
{
  return swift_deallocObject();
}

uint64_t sub_23A608CAC(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_23A5FF21C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23A608CB8(void *a1)
{
  uint64_t v1;

  return sub_23A5FFA84(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD, void *))(v1 + 24));
}

uint64_t sub_23A608CC4()
{
  return swift_deallocObject();
}

uint64_t sub_23A608CDC(uint64_t a1)
{
  uint64_t v1;

  return sub_23A5FF118(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_trackingSummaryDelegates);
}

uint64_t sub_23A608D00()
{
  return swift_deallocObject();
}

uint64_t sub_23A608D10()
{
  return swift_deallocObject();
}

uint64_t sub_23A608D28(uint64_t a1)
{
  uint64_t v1;

  return sub_23A5FF118(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), &OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_batteryDelegates);
}

uint64_t sub_23A608D4C()
{
  return swift_deallocObject();
}

uint64_t sub_23A608D5C()
{
  return swift_deallocObject();
}

uint64_t sub_23A608D70()
{
  return swift_deallocObject();
}

uint64_t sub_23A608D80()
{
  return swift_deallocObject();
}

uint64_t sub_23A608D90(void *a1, void *a2)
{
  uint64_t v2;

  return sub_23A5FCDAC(a1, a2, *(_QWORD *)(v2 + 16), &qword_25699F480);
}

uint64_t sub_23A608DB4(void *a1)
{
  uint64_t v1;

  return sub_23A5FD638(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD, void *))(v1 + 24));
}

uint64_t sub_23A608DD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroy_122Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A608E50()
{
  return swift_deallocObject();
}

uint64_t sub_23A608E60()
{
  return swift_deallocObject();
}

uint64_t sub_23A608E74()
{
  return swift_deallocObject();
}

uint64_t sub_23A608E84()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_56Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A608EC4()
{
  return swift_deallocObject();
}

uint64_t sub_23A6090A4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x737463656A627573;
    else
      v3 = 0x7461746E6569726FLL;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xEB000000006E6F69;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x737463656A627573;
      else
        v6 = 0x7461746E6569726FLL;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xEB000000006E6F69;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701669236;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701669236)
  {
LABEL_21:
    v8 = sub_23A691518();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_23A6091BC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23A609218(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23A6092AC + 4 * byte_23A6968E6[a2]))(1701869940);
}

uint64_t sub_23A6092AC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701869940 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_23A691518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23A609394(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEC00000079746963;
  v3 = 0x6F6C65567761795FLL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x655668637469705FLL;
    else
      v5 = 0x6C65566C6C6F725FLL;
    if (v4 == 1)
      v6 = 0xEE00797469636F6CLL;
    else
      v6 = 0xED0000797469636FLL;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6F6C65567761795FLL;
  v6 = 0xEC00000079746963;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x655668637469705FLL;
    else
      v3 = 0x6C65566C6C6F725FLL;
    if (v7 == 1)
      v2 = 0xEE00797469636F6CLL;
    else
      v2 = 0xED0000797469636FLL;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_23A691518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_23A6094E4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23A609540(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_23A6095BC + 4 * byte_23A6968F2[a2]))();
}

uint64_t sub_23A6095BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0xED00006F72502032)
    v4 = 1;
  else
    v4 = sub_23A691518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_23A60968C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x68637469705FLL;
    else
      v3 = 0x6C6C6F725FLL;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x68637469705FLL;
      else
        v6 = 0x6C6C6F725FLL;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 2002876767;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 2002876767)
  {
LABEL_21:
    v8 = sub_23A691518();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_23A609784(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23A6097E8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23A609850 + 4 * byte_23A6968FC[a2]))(0x7265747369676572);
}

uint64_t sub_23A609850(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7265747369676572 && v1 == 0xEB00000000676E69)
    v2 = 1;
  else
    v2 = sub_23A691518();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23A609900(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_23A691218();
    v5 = v4;
    v6 = sub_23A691254();
    v8 = MEMORY[0x23B8530A8](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_23A61C000(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_23A617980(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_23A61C000(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_23A617BE8(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23A609A0C()
{
  uint64_t v0;

  v0 = sub_23A690D14();
  __swift_allocate_value_buffer(v0, qword_25699F490);
  __swift_project_value_buffer(v0, (uint64_t)qword_25699F490);
  return sub_23A690D08();
}

DockKitCore::DockKitIDSMessageType_optional __swiftcall DockKitIDSMessageType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 17;
  if ((unint64_t)rawValue < 0x11)
    v2 = rawValue;
  *v1 = v2;
  return (DockKitCore::DockKitIDSMessageType_optional)rawValue;
}

DockKitCore::DockKitIDSMessageType_optional sub_23A609A8C(Swift::Int *a1)
{
  return DockKitIDSMessageType.init(rawValue:)(*a1);
}

uint64_t sub_23A609A94()
{
  sub_23A61BDBC();
  return sub_23A690EDC();
}

uint64_t sub_23A609AF0()
{
  sub_23A61BDBC();
  return sub_23A690EB8();
}

void DockKitIDSMessage.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *DockKitIDSMessage.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*DockKitIDSMessage.type.modify())()
{
  return nullsub_1;
}

uint64_t DockKitIDSMessage.token.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DockKitIDSMessage(0) + 20);
  v4 = sub_23A69072C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for DockKitIDSMessage(uint64_t a1)
{
  return sub_23A5CDEC8(a1, qword_25699F7A8);
}

uint64_t DockKitIDSMessage.token.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DockKitIDSMessage(0) + 20);
  v4 = sub_23A69072C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DockKitIDSMessage.token.modify())()
{
  type metadata accessor for DockKitIDSMessage(0);
  return nullsub_1;
}

uint64_t DockKitIDSMessage.payload.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for DockKitIDSMessage(0) + 24);
  v2 = *(_QWORD *)v1;
  sub_23A608C88(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t DockKitIDSMessage.payload.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for DockKitIDSMessage(0) + 24);
  result = sub_23A608C74(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*DockKitIDSMessage.payload.modify())()
{
  type metadata accessor for DockKitIDSMessage(0);
  return nullsub_1;
}

uint64_t DockKitIDSMessage.init(type:)@<X0>(char *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  v3 = *a1;
  *(_OWORD *)&a2[*(int *)(type metadata accessor for DockKitIDSMessage(0) + 24)] = xmmword_23A697E50;
  *a2 = v3;
  return sub_23A690720();
}

uint64_t DockKitIDSMessage.init(type:token:payload:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t result;

  v9 = *a1;
  v10 = type metadata accessor for DockKitIDSMessage(0);
  v11 = &a5[*(int *)(v10 + 24)];
  *a5 = v9;
  v12 = &a5[*(int *)(v10 + 20)];
  v13 = sub_23A69072C();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a2, v13);
  *v11 = a3;
  v11[1] = a4;
  return result;
}

uint64_t DockKitIDSMessage.message.getter()
{
  uint64_t v0;

  sub_23A6905B8();
  swift_allocObject();
  sub_23A6905AC();
  type metadata accessor for DockKitIDSMessage(0);
  sub_23A5F0550(&qword_25699F4C0, type metadata accessor for DockKitIDSMessage, (uint64_t)&protocol conformance descriptor for DockKitIDSMessage);
  v0 = sub_23A6905A0();
  swift_release();
  return v0;
}

uint64_t sub_23A609E60()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E656B6F74;
  if (*v0 != 1)
    v1 = 0x64616F6C796170;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_23A609EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A617FB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A609ED4()
{
  sub_23A60A0D8();
  return sub_23A691638();
}

uint64_t sub_23A609EFC()
{
  sub_23A60A0D8();
  return sub_23A691644();
}

uint64_t DockKitIDSMessage.encode(to:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F4C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A60A0D8();
  sub_23A69162C();
  LOBYTE(v11) = *v3;
  v12 = 0;
  sub_23A60A11C();
  sub_23A6914DC();
  if (!v2)
  {
    v9 = type metadata accessor for DockKitIDSMessage(0);
    LOBYTE(v11) = 1;
    sub_23A69072C();
    sub_23A5F0550(&qword_25699E050, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23A6914DC();
    v11 = *(_OWORD *)&v3[*(int *)(v9 + 24)];
    v12 = 2;
    sub_23A60A160();
    sub_23A691494();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23A60A0D8()
{
  unint64_t result;

  result = qword_25699F4D0;
  if (!qword_25699F4D0)
  {
    result = MEMORY[0x23B853B34](&unk_23A697DF4, &type metadata for DockKitIDSMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F4D0);
  }
  return result;
}

unint64_t sub_23A60A11C()
{
  unint64_t result;

  result = qword_25699F4D8;
  if (!qword_25699F4D8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSMessageType, &type metadata for DockKitIDSMessageType);
    atomic_store(result, (unint64_t *)&qword_25699F4D8);
  }
  return result;
}

unint64_t sub_23A60A160()
{
  unint64_t result;

  result = qword_25699F4E8;
  if (!qword_25699F4E8)
  {
    result = MEMORY[0x23B853B34](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25699F4E8);
  }
  return result;
}

uint64_t DockKitIDSMessage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v24 = a2;
  v3 = sub_23A69072C();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F4F0);
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DockKitIDSMessage(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = &v12[*(int *)(v10 + 24)];
  *(_OWORD *)v30 = xmmword_23A697E50;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A60A0D8();
  v27 = v8;
  v13 = (uint64_t)v29;
  sub_23A691620();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return sub_23A608C74(*(_QWORD *)v30, *((_QWORD *)v30 + 1));
  }
  else
  {
    v23 = v9;
    v29 = a1;
    v14 = v6;
    v16 = v25;
    v15 = v26;
    v33 = 0;
    sub_23A60A494();
    v17 = v27;
    v18 = v28;
    sub_23A691440();
    *v12 = v31;
    LOBYTE(v31) = 1;
    sub_23A5F0550(&qword_25699F500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23A691440();
    (*(void (**)(_BYTE *, char *, uint64_t))(v16 + 32))(&v12[*(int *)(v23 + 20)], v5, v15);
    v33 = 2;
    sub_23A60A4D8();
    sub_23A6913F8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v18);
    v20 = v31;
    v19 = v32;
    v21 = v30;
    sub_23A608C74(*(_QWORD *)v30, *((_QWORD *)v30 + 1));
    *v21 = v20;
    v21[1] = v19;
    sub_23A60A51C((uint64_t)v12, v24);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    return sub_23A60A560((uint64_t)v12);
  }
}

unint64_t sub_23A60A494()
{
  unint64_t result;

  result = qword_25699F4F8;
  if (!qword_25699F4F8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSMessageType, &type metadata for DockKitIDSMessageType);
    atomic_store(result, (unint64_t *)&qword_25699F4F8);
  }
  return result;
}

unint64_t sub_23A60A4D8()
{
  unint64_t result;

  result = qword_25699F508;
  if (!qword_25699F508)
  {
    result = MEMORY[0x23B853B34](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25699F508);
  }
  return result;
}

uint64_t sub_23A60A51C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DockKitIDSMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23A60A560(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DockKitIDSMessage(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23A60A59C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DockKitIDSMessage.init(from:)(a1, a2);
}

uint64_t sub_23A60A5B0(_QWORD *a1)
{
  return DockKitIDSMessage.encode(to:)(a1);
}

DockKitCore::DockKitCameraCommand_optional __swiftcall DockKitCameraCommand.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (DockKitCore::DockKitCameraCommand_optional)rawValue;
}

uint64_t DockKitCameraCommand.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

DockKitCore::DockKitCameraCommand_optional sub_23A60A5E0(Swift::Int *a1)
{
  return DockKitCameraCommand.init(rawValue:)(*a1);
}

uint64_t sub_23A60A5E8()
{
  sub_23A61BD78();
  return sub_23A690EDC();
}

uint64_t sub_23A60A644()
{
  sub_23A61BD78();
  return sub_23A690EB8();
}

void DockKitCameraCommandPayload.command.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *DockKitCameraCommandPayload.command.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*DockKitCameraCommandPayload.command.modify())()
{
  return nullsub_1;
}

uint64_t DockKitCameraCommandPayload.payload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23A608C88(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t DockKitCameraCommandPayload.payload.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23A608C74(*(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*DockKitCameraCommandPayload.payload.modify())()
{
  return nullsub_1;
}

_BYTE *DockKitCameraCommandPayload.init(command:payload:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_BYTE *)a4 = *result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_23A60A73C()
{
  _BYTE *v0;

  if (*v0)
    return 0x64616F6C796170;
  else
    return 0x646E616D6D6F63;
}

uint64_t sub_23A60A770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A6180EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A60A794()
{
  sub_23A60A93C();
  return sub_23A691638();
}

uint64_t sub_23A60A7BC()
{
  sub_23A60A93C();
  return sub_23A691644();
}

uint64_t DockKitCameraCommandPayload.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F510);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v11 = *((_QWORD *)v1 + 2);
  v12 = v9;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A60A93C();
  sub_23A69162C();
  LOBYTE(v13) = v8;
  v15 = 0;
  sub_23A60A980();
  sub_23A6914DC();
  if (!v2)
  {
    v13 = v12;
    v14 = v11;
    v15 = 1;
    sub_23A60A160();
    sub_23A691494();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23A60A93C()
{
  unint64_t result;

  result = qword_25699F518;
  if (!qword_25699F518)
  {
    result = MEMORY[0x23B853B34](&unk_23A697DA4, &type metadata for DockKitCameraCommandPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F518);
  }
  return result;
}

unint64_t sub_23A60A980()
{
  unint64_t result;

  result = qword_25699F520;
  if (!qword_25699F520)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitCameraCommand, &type metadata for DockKitCameraCommand);
    atomic_store(result, (unint64_t *)&qword_25699F520);
  }
  return result;
}

uint64_t DockKitCameraCommandPayload.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F528);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A60A93C();
  sub_23A691620();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    v13 = 0;
    v14 = 0xF000000000000000;
  }
  else
  {
    v17 = 0;
    sub_23A60AB7C();
    sub_23A691440();
    v9 = v15;
    v17 = 1;
    sub_23A60A4D8();
    sub_23A6913F8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v15;
    v12 = v16;
    sub_23A608C88(v15, v16);
    sub_23A608C74(0, 0xF000000000000000);
    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v12;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    v13 = v11;
    v14 = v12;
  }
  return sub_23A608C74(v13, v14);
}

unint64_t sub_23A60AB7C()
{
  unint64_t result;

  result = qword_25699F530;
  if (!qword_25699F530)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitCameraCommand, &type metadata for DockKitCameraCommand);
    atomic_store(result, (unint64_t *)&qword_25699F530);
  }
  return result;
}

uint64_t sub_23A60ABC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DockKitCameraCommandPayload.init(from:)(a1, a2);
}

uint64_t sub_23A60ABD4(_QWORD *a1)
{
  return DockKitCameraCommandPayload.encode(to:)(a1);
}

id DockKitIDSInfo.info.getter()
{
  id *v0;

  return *v0;
}

void DockKitIDSInfo.info.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*DockKitIDSInfo.info.modify())()
{
  return nullsub_1;
}

uint64_t DockKitIDSInfo.dockState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t DockKitIDSInfo.dockState.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*DockKitIDSInfo.dockState.modify())()
{
  return nullsub_1;
}

uint64_t DockKitIDSInfo.trackingState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t DockKitIDSInfo.trackingState.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*DockKitIDSInfo.trackingState.modify())()
{
  return nullsub_1;
}

uint64_t DockKitIDSInfo.firmwareVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DockKitIDSInfo.firmwareVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*DockKitIDSInfo.firmwareVersion.modify())()
{
  return nullsub_1;
}

uint64_t DockKitIDSInfo.serialNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DockKitIDSInfo.serialNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*DockKitIDSInfo.serialNumber.modify())()
{
  return nullsub_1;
}

uint64_t DockKitIDSInfo.init(info:dockState:trackingState:firmwareVersion:serialNumber:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t sub_23A60AD5C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A60AD84 + 4 * byte_23A696900[*v0]))(1868983913, 0xE400000000000000);
}

uint64_t sub_23A60AD84()
{
  return 0x746174536B636F64;
}

uint64_t sub_23A60ADA0()
{
  return 0x676E696B63617274;
}

uint64_t sub_23A60ADC4()
{
  return 0x657261776D726966;
}

uint64_t sub_23A60ADE8()
{
  return 0x754E6C6169726573;
}

uint64_t sub_23A60AE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A6181DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A60AE2C(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23A60AE38()
{
  sub_23A60B0AC();
  return sub_23A691638();
}

uint64_t sub_23A60AE60()
{
  sub_23A60B0AC();
  return sub_23A691644();
}

uint64_t DockKitIDSInfo.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F538);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v15 = v1[2];
  v16 = v8;
  v10 = v1[3];
  v14[3] = v1[4];
  v14[4] = v10;
  v11 = v1[6];
  v14[1] = v1[5];
  v14[2] = v11;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A60B0AC();
  sub_23A69162C();
  v18 = v9;
  v17 = 0;
  type metadata accessor for DockCoreInfo(0);
  sub_23A5F0550(&qword_25699F548, type metadata accessor for DockCoreInfo, (uint64_t)&protocol conformance descriptor for DockCoreInfo);
  sub_23A6914DC();
  if (!v2)
  {
    v12 = v15;
    v18 = v16;
    v17 = 1;
    sub_23A60B0F0();
    sub_23A6914DC();
    v18 = v12;
    v17 = 2;
    sub_23A60B134();
    sub_23A6914DC();
    LOBYTE(v18) = 3;
    sub_23A6914A0();
    LOBYTE(v18) = 4;
    sub_23A6914A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23A60B0AC()
{
  unint64_t result;

  result = qword_25699F540;
  if (!qword_25699F540)
  {
    result = MEMORY[0x23B853B34](&unk_23A697D54, &type metadata for DockKitIDSInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F540);
  }
  return result;
}

unint64_t sub_23A60B0F0()
{
  unint64_t result;

  result = qword_25699F550;
  if (!qword_25699F550)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockState, &type metadata for DockState);
    atomic_store(result, (unint64_t *)&qword_25699F550);
  }
  return result;
}

unint64_t sub_23A60B134()
{
  unint64_t result;

  result = qword_25699F558;
  if (!qword_25699F558)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrackingButtonState, &type metadata for TrackingButtonState);
    atomic_store(result, (unint64_t *)&qword_25699F558);
  }
  return result;
}

void DockKitIDSInfo.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F560);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A60B0AC();
  sub_23A691620();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    type metadata accessor for DockCoreInfo(0);
    v26 = 0;
    sub_23A5F0550(&qword_25699F568, type metadata accessor for DockCoreInfo, (uint64_t)&protocol conformance descriptor for DockCoreInfo);
    sub_23A691440();
    v9 = v27;
    v26 = 1;
    sub_23A60B468();
    v10 = v9;
    sub_23A691440();
    v11 = (uint64_t)v27;
    v26 = 2;
    sub_23A60B4AC();
    sub_23A691440();
    v25 = v11;
    v12 = v27;
    LOBYTE(v27) = 3;
    v22 = sub_23A691404();
    v23 = v12;
    LOBYTE(v27) = 4;
    v24 = v13;
    swift_bridgeObjectRetain();
    v14 = sub_23A691404();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v17 = v10;
    swift_bridgeObjectRetain();

    v19 = v24;
    v18 = v25;
    *a2 = v17;
    a2[1] = v18;
    v20 = v22;
    a2[2] = v23;
    a2[3] = v20;
    a2[4] = v19;
    a2[5] = v14;
    a2[6] = v16;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

unint64_t sub_23A60B468()
{
  unint64_t result;

  result = qword_25699F570;
  if (!qword_25699F570)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockState, &type metadata for DockState);
    atomic_store(result, (unint64_t *)&qword_25699F570);
  }
  return result;
}

unint64_t sub_23A60B4AC()
{
  unint64_t result;

  result = qword_25699F578;
  if (!qword_25699F578)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for TrackingButtonState, &type metadata for TrackingButtonState);
    atomic_store(result, (unint64_t *)&qword_25699F578);
  }
  return result;
}

void sub_23A60B4F0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  DockKitIDSInfo.init(from:)(a1, a2);
}

uint64_t sub_23A60B504(_QWORD *a1)
{
  return DockKitIDSInfo.encode(to:)(a1);
}

uint64_t DockKitBoundingBox.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DockKitBoundingBox(0) + 32);
  v4 = sub_23A69072C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for DockKitBoundingBox(uint64_t a1)
{
  return sub_23A5CDEC8(a1, qword_25699F840);
}

uint64_t DockKitBoundingBox.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DockKitBoundingBox(0) + 32);
  v4 = sub_23A69072C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DockKitBoundingBox.id.modify())()
{
  type metadata accessor for DockKitBoundingBox(0);
  return nullsub_1;
}

uint64_t DockKitBoundingBox.init(_:id:)@<X0>(uint64_t a1@<X0>, float *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  float v7;
  float v8;
  float v9;
  float v10;
  char *v11;
  uint64_t v12;

  v7 = a3;
  v8 = a4;
  *a2 = v7;
  a2[1] = v8;
  v9 = a5;
  v10 = a6;
  a2[2] = v9;
  a2[3] = v10;
  v11 = (char *)a2 + *(int *)(type metadata accessor for DockKitBoundingBox(0) + 32);
  v12 = sub_23A69072C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
}

double DockKitBoundingBox.cgRect.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t sub_23A60B668()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A60B68C + 4 * byte_23A696905[*v0]))(120, 0xE100000000000000);
}

uint64_t sub_23A60B68C()
{
  return 121;
}

uint64_t sub_23A60B694()
{
  return 0x6874646977;
}

uint64_t sub_23A60B6A8()
{
  return 0x746867696568;
}

uint64_t sub_23A60B6BC()
{
  return 25705;
}

uint64_t sub_23A60B6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A618454(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23A60B6EC()
{
  sub_23A617D08();
  return sub_23A691638();
}

uint64_t sub_23A60B714()
{
  sub_23A617D08();
  return sub_23A691644();
}

uint64_t DockKitBoundingBox.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F580);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A617D08();
  sub_23A69162C();
  v8[15] = 0;
  sub_23A6914C4();
  if (!v1)
  {
    v8[14] = 1;
    sub_23A6914C4();
    v8[13] = 2;
    sub_23A6914C4();
    v8[12] = 3;
    sub_23A6914C4();
    type metadata accessor for DockKitBoundingBox(0);
    v8[11] = 4;
    sub_23A69072C();
    sub_23A5F0550(&qword_25699E050, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23A6914DC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DockKitBoundingBox.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v21 = a2;
  v24 = sub_23A69072C();
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v23 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F590);
  v4 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DockKitBoundingBox(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A617D08();
  v10 = v26;
  sub_23A691620();
  if (!v10)
  {
    v26 = v7;
    v11 = v4;
    v13 = v23;
    v12 = v24;
    v31 = 0;
    v14 = v25;
    sub_23A691428();
    *(_DWORD *)v9 = v15;
    v30 = 1;
    sub_23A691428();
    *((_DWORD *)v9 + 1) = v16;
    v29 = 2;
    sub_23A691428();
    *((_DWORD *)v9 + 2) = v17;
    v28 = 3;
    sub_23A691428();
    *((_DWORD *)v9 + 3) = v19;
    v27 = 4;
    sub_23A5F0550(&qword_25699F500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23A691440();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v14);
    v20 = v21;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v9[*(int *)(v26 + 32)], v13, v12);
    sub_23A617D4C((uint64_t)v9, v20);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_23A60BBA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DockKitBoundingBox.init(from:)(a1, a2);
}

uint64_t sub_23A60BBB8(_QWORD *a1)
{
  return DockKitBoundingBox.encode(to:)(a1);
}

BOOL static DockKitIDSMessagingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DockKitIDSMessagingError.hash(into:)()
{
  return sub_23A6915CC();
}

uint64_t sub_23A60BC0C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A60BC4C + 4 * byte_23A69690A[a1]))(0x6465726961506F6ELL, 0xEE00656369766544);
}

unint64_t sub_23A60BC4C()
{
  return 0xD000000000000016;
}

uint64_t sub_23A60BCDC()
{
  return 0x656C706D49746F6ELL;
}

uint64_t sub_23A60BD00()
{
  return 0;
}

void sub_23A60BD0C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23A60BD18()
{
  sub_23A617E18();
  return sub_23A691638();
}

uint64_t sub_23A60BD40()
{
  sub_23A617E18();
  return sub_23A691644();
}

uint64_t sub_23A60BD68()
{
  unsigned __int8 *v0;

  return sub_23A60BC0C(*v0);
}

uint64_t sub_23A60BD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23A618614(a1, a2);
  *a3 = result;
  return result;
}

void sub_23A60BD94(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_23A60BDA0()
{
  sub_23A617D90();
  return sub_23A691638();
}

uint64_t sub_23A60BDC8()
{
  sub_23A617D90();
  return sub_23A691644();
}

uint64_t sub_23A60BDF0()
{
  sub_23A617E5C();
  return sub_23A691638();
}

uint64_t sub_23A60BE18()
{
  sub_23A617E5C();
  return sub_23A691644();
}

uint64_t sub_23A60BE40()
{
  sub_23A617F6C();
  return sub_23A691638();
}

uint64_t sub_23A60BE68()
{
  sub_23A617F6C();
  return sub_23A691644();
}

uint64_t sub_23A60BE90()
{
  sub_23A617DD4();
  return sub_23A691638();
}

uint64_t sub_23A60BEB8()
{
  sub_23A617DD4();
  return sub_23A691644();
}

uint64_t sub_23A60BEE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23A60BF0C()
{
  sub_23A617EA0();
  return sub_23A691638();
}

uint64_t sub_23A60BF34()
{
  sub_23A617EA0();
  return sub_23A691644();
}

uint64_t sub_23A60BF5C()
{
  sub_23A617EE4();
  return sub_23A691638();
}

uint64_t sub_23A60BF84()
{
  sub_23A617EE4();
  return sub_23A691644();
}

uint64_t sub_23A60BFAC()
{
  sub_23A617F28();
  return sub_23A691638();
}

uint64_t sub_23A60BFD4()
{
  sub_23A617F28();
  return sub_23A691644();
}

void DockKitIDSMessagingError.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[22];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F598);
  v17[16] = *(_QWORD *)(v3 - 8);
  v17[17] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v17[15] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F5A0);
  v17[13] = *(_QWORD *)(v5 - 8);
  v17[14] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v17[12] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F5A8);
  v17[10] = *(_QWORD *)(v7 - 8);
  v17[11] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v17[9] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F5B0);
  v17[7] = *(_QWORD *)(v9 - 8);
  v17[8] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v17[6] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F5B8);
  v17[4] = *(_QWORD *)(v11 - 8);
  v17[5] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v17[3] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F5C0);
  v17[1] = *(_QWORD *)(v13 - 8);
  v17[2] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F5C8);
  MEMORY[0x24BDAC7A8](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F5D0);
  v17[19] = *(_QWORD *)(v15 - 8);
  v17[20] = v15;
  MEMORY[0x24BDAC7A8](v15);
  v16 = *v1;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_23A617D90();
  sub_23A69162C();
  __asm { BR              X9 }
}

uint64_t sub_23A60C270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 71) = 0;
  sub_23A617F6C();
  v5 = *(_QWORD *)(v4 - 96);
  sub_23A691464();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v1, v5);
}

uint64_t DockKitIDSMessagingError.hashValue.getter()
{
  sub_23A6915C0();
  sub_23A6915CC();
  return sub_23A6915FC();
}

uint64_t DockKitIDSMessagingError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;

  v50 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F618);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v49 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F620);
  v38 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F628);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F630);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F638);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F640);
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v44 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F648);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F650);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v21);
  sub_23A617D90();
  v22 = v52;
  sub_23A691620();
  if (!v22)
  {
    v30[2] = v16;
    v30[0] = v14;
    v30[1] = v13;
    v52 = v18;
    v31 = v17;
    v23 = v20;
    v24 = sub_23A691458();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X9 }
    v25 = sub_23A6912C0();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F658);
    *v27 = &type metadata for DockKitIDSMessagingError;
    v28 = v31;
    sub_23A6913C8();
    sub_23A6912B4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v28);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
}

void sub_23A60C8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 70) = 1;
  sub_23A617F28();
  v4 = *(_QWORD *)(v3 - 160);
  v5 = *(_QWORD *)(v3 - 264);
  sub_23A6913BC();
  if (!v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 256) + 8))(v4, *(_QWORD *)(v3 - 248));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v5);
    JUMPOUT(0x23A60CB80);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x23A60C8CCLL);
}

uint64_t sub_23A60CB88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DockKitIDSMessagingError.init(from:)(a1, a2);
}

void sub_23A60CB9C(_QWORD *a1)
{
  DockKitIDSMessagingError.encode(to:)(a1);
}

uint64_t DockKitIDSMessagingError.errorDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23A60CBE4 + 4 * byte_23A69691F[*v0]))(0xD00000000000001ELL, 0x800000023A69DD00);
}

uint64_t sub_23A60CBE4(uint64_t a1)
{
  return a1 - 1;
}

void sub_23A60CC58(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, NSObject *a6)
{
  sub_23A61893C(a3, a4, a5, a6);
}

uint64_t sub_23A60CD74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_23A619094(a1, a4, a5);
}

uint64_t sub_23A60CE68(uint64_t result)
{
  _QWORD *v1;

  if (result)
    return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v1) + 0x70))();
  __break(1u);
  return result;
}

id DKIDSHandler.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DKIDSHandler();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DKIDSHandler.__deallocating_deinit(uint64_t a1)
{
  return sub_23A613F60(a1, type metadata accessor for DKIDSHandler);
}

DockKitCore::DKIDSKeepAliveType_optional __swiftcall DKIDSKeepAliveType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (DockKitCore::DKIDSKeepAliveType_optional)rawValue;
}

uint64_t DKIDSKeepAliveType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_23A60CFBC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_23A60CFDC()
{
  sub_23A61BD34();
  return sub_23A690EDC();
}

uint64_t sub_23A60D038()
{
  sub_23A61BD34();
  return sub_23A690EB8();
}

uint64_t DKIDSKeepAlive.__allocating_init(_:)(char a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = sub_23A5BD9F8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v2 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 64) = xmmword_23A697E60;
  *(_QWORD *)(v2 + 80) = 5;
  *(_BYTE *)(v2 + 56) = a1;
  return v2;
}

uint64_t DKIDSKeepAlive.init(_:)(char a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = sub_23A5BD9F8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v1 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 64) = xmmword_23A697E60;
  *(_QWORD *)(v1 + 80) = 5;
  *(_BYTE *)(v1 + 56) = a1;
  return v1;
}

uint64_t DKIDSKeepAlive.deinit()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_invalidate);

  swift_bridgeObjectRelease();
  sub_23A5F234C(v0 + 32);
  return v0;
}

uint64_t DKIDSKeepAlive.__deallocating_deinit()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_invalidate);

  swift_bridgeObjectRelease();
  sub_23A5F234C(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_23A60D1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23A617C70(a1, v3, a3, a2);
}

uint64_t sub_23A60D1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  unint64_t v28;
  char v29;
  char v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 24);
  v35 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v34 = v0 + 32;
  v36 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v33 = v0;
  while (v5)
  {
    v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v9 = v8 | (v7 << 6);
LABEL_21:
    v13 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v9);
    v15 = *v13;
    v14 = v13[1];
    v16 = *(_QWORD *)(v2 + 56) + 24 * v9;
    v17 = *(_QWORD *)(v16 + 8);
    if ((*(_BYTE *)(v16 + 16) & 1) != 0)
    {
      if (v17 >= 0xF)
      {
LABEL_25:
        v18 = qword_25699DC80;
        swift_bridgeObjectRetain();
        if (v18 != -1)
          swift_once();
        v19 = sub_23A690D14();
        __swift_project_value_buffer(v19, (uint64_t)qword_25699F490);
        swift_bridgeObjectRetain_n();
        v20 = sub_23A690CFC();
        v21 = sub_23A691038();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = v2;
          v23 = swift_slowAlloc();
          v24 = swift_slowAlloc();
          v37 = v24;
          *(_DWORD *)v23 = 136315394;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v23 + 4) = sub_23A5EEB40(v15, v14, &v37);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v23 + 12) = 2048;
          *(_QWORD *)(v23 + 14) = v17;
          _os_log_impl(&dword_23A5B0000, v20, v21, "Keep-alive expired for %s: missed= %lu", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B853BD0](v24, -1, -1);
          v25 = v23;
          v2 = v22;
          v1 = v33;
          MEMORY[0x23B853BD0](v25, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        if (MEMORY[0x23B853C6C](v34))
        {
          v26 = *(_QWORD *)(v1 + 40);
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v26 + 8))(v15, v14, ObjectType, v26);
          swift_unknownObjectRelease();
        }
        swift_bridgeObjectRetain();
        v28 = sub_23A5C6588(v15, v14);
        v30 = v29;
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v32 = *(_QWORD *)(v1 + 24);
          v37 = v32;
          *(_QWORD *)(v1 + 24) = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_23A616A84();
            v32 = v37;
          }
          swift_bridgeObjectRelease();
          sub_23A615AA4(v28, v32);
          *(_QWORD *)(v1 + 24) = v32;
          swift_bridgeObjectRelease();
        }
        result = swift_bridgeObjectRelease();
      }
    }
    else if (v17 >= 0xA)
    {
      goto LABEL_25;
    }
  }
  v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v10 >= v36)
    return swift_release();
  v11 = *(_QWORD *)(v35 + 8 * v10);
  ++v7;
  if (v11)
    goto LABEL_20;
  v7 = v10 + 1;
  if (v10 + 1 >= v36)
    return swift_release();
  v11 = *(_QWORD *)(v35 + 8 * v7);
  if (v11)
    goto LABEL_20;
  v7 = v10 + 2;
  if (v10 + 2 >= v36)
    return swift_release();
  v11 = *(_QWORD *)(v35 + 8 * v7);
  if (v11)
  {
LABEL_20:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_21;
  }
  v12 = v10 + 3;
  if (v12 >= v36)
    return swift_release();
  v11 = *(_QWORD *)(v35 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v36)
      return swift_release();
    v11 = *(_QWORD *)(v35 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_23A60D5CC(double a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  objc_msgSend(*(id *)(v1 + 16), sel_invalidate);
  v3 = swift_allocObject();
  swift_weakInit();
  v11[4] = sub_23A61C030;
  v11[5] = v3;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23A60D824;
  v11[3] = &block_descriptor_38;
  v4 = _Block_copy(v11);
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_timerWithTimeInterval_repeats_block_, 1, v4, a1);
  _Block_release(v4);
  swift_release();
  swift_release();
  v7 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = v6;

  if ((*(_BYTE *)(v1 + 56) & 1) == 0)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
    v9 = *(_QWORD *)(v1 + 16);
    if (v9)
    {
      v10 = v8;
      objc_msgSend(v8, sel_addTimer_forMode_, v9, *MEMORY[0x24BDBCA90]);

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_23A60D734(void *a1)
{
  uint64_t Strong;
  uint64_t v3;
  id result;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  Strong = swift_weakLoadStrong();
  if (!Strong)
    return objc_msgSend(a1, sel_invalidate);
  v3 = Strong;
  *(_QWORD *)(Strong + 24) = sub_23A6177AC(*(_QWORD *)(Strong + 24));
  swift_bridgeObjectRelease();
  result = (id)sub_23A60D1E4();
  v5 = *(_QWORD *)(v3 + 48);
  v6 = __CFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 48) = v7;
    if (v7 < 5)
      return (id)swift_release();
    if ((*(_BYTE *)(v3 + 56) & 1) != 0)
      return (id)swift_release();
    *(_QWORD *)(v3 + 48) = 0;
    if (!MEMORY[0x23B853C6C](v3 + 32))
    {
      return (id)swift_release();
    }
    else
    {
      v8 = *(_QWORD *)(v3 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v8 + 16))(ObjectType, v8);
      swift_release();
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_23A60D824(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_23A60D874(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16[3];

  v4 = v3;
  if (*(_QWORD *)(*(_QWORD *)(v3 + 24) + 16))
  {
    v7 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23A5C6588(v7, a2);
    if ((v8 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_25699DC80 != -1)
      swift_once();
    v9 = sub_23A690D14();
    __swift_project_value_buffer(v9, (uint64_t)qword_25699F490);
    swift_bridgeObjectRetain_n();
    v10 = sub_23A690CFC();
    v11 = sub_23A691038();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v16[0] = v15;
      *(_DWORD *)v12 = 136315394;
      swift_bridgeObjectRetain();
      sub_23A5EEB40(v7, a2, v16);
      sub_23A6911D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2048;
      sub_23A6911D0();
      _os_log_impl(&dword_23A5B0000, v10, v11, "Expiring keep-alive for %s: missed= %lu", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v15, -1, -1);
      MEMORY[0x23B853BD0](v12, -1, -1);

      if ((a3 & 1) == 0)
        return sub_23A614040(v7, a2, (uint64_t)v16);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if ((a3 & 1) == 0)
        return sub_23A614040(v7, a2, (uint64_t)v16);
    }
    if (MEMORY[0x23B853C6C](v4 + 32))
    {
      v13 = *(_QWORD *)(v4 + 40);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v13 + 8))(v7, a2, ObjectType, v13);
      swift_unknownObjectRelease();
    }
    return sub_23A614040(v7, a2, (uint64_t)v16);
  }
  return result;
}

uint64_t sub_23A60DB18(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  char isUniquelyReferenced_nonNull_native;
  double v29;
  char v30;
  double v31;
  double v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = sub_23A6906D8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*(_QWORD *)(v2 + 24) + 16)
    && (swift_bridgeObjectRetain(), sub_23A5C6588(a1, a2), v11 = v10, swift_bridgeObjectRelease(), (v11 & 1) != 0))
  {
    if (qword_25699DC80 != -1)
      swift_once();
    v12 = sub_23A690D14();
    __swift_project_value_buffer(v12, (uint64_t)qword_25699F490);
    swift_bridgeObjectRetain_n();
    v13 = sub_23A690CFC();
    v14 = sub_23A691044();
    if (os_log_type_enabled(v13, v14))
    {
      v34 = v6;
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v35 = v7;
      v17 = v16;
      v37 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain();
      v36 = sub_23A5EEB40(a1, a2, &v37);
      v6 = v34;
      sub_23A6911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A5B0000, v13, v14, "Got Keep-alive monitor: Marking %s as seen.", v15, 0xCu);
      swift_arrayDestroy();
      v18 = v17;
      v7 = v35;
      MEMORY[0x23B853BD0](v18, -1, -1);
      MEMORY[0x23B853BD0](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_23A6906B4();
    sub_23A690660();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v3 + 24) = 0x8000000000000000;
    v29 = v32;
    v30 = 0;
  }
  else
  {
    if (qword_25699DC80 != -1)
      swift_once();
    v19 = sub_23A690D14();
    __swift_project_value_buffer(v19, (uint64_t)qword_25699F490);
    swift_bridgeObjectRetain_n();
    v20 = sub_23A690CFC();
    v21 = sub_23A691044();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v34 = v6;
      v35 = a1;
      v24 = v23;
      v37 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_bridgeObjectRetain();
      v36 = sub_23A5EEB40(v35, a2, &v37);
      sub_23A6911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A5B0000, v20, v21, "Got Keep-alive monitor: Adding %s.", v22, 0xCu);
      swift_arrayDestroy();
      v25 = v24;
      v6 = v34;
      a1 = v35;
      MEMORY[0x23B853BD0](v25, -1, -1);
      MEMORY[0x23B853BD0](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_23A6906B4();
    sub_23A690660();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v3 + 24) = 0x8000000000000000;
    v29 = v27;
    v30 = 1;
  }
  sub_23A615F9C(0, v30, a1, a2, isUniquelyReferenced_nonNull_native, v29);
  *(_QWORD *)(v3 + 24) = v37;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A60DF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  void (*v10)(void *, uint64_t, uint64_t);
  id v11;

  v1 = v0;
  if (qword_25699DC80 != -1)
    swift_once();
  v2 = sub_23A690D14();
  __swift_project_value_buffer(v2, (uint64_t)qword_25699F490);
  v3 = sub_23A690CFC();
  v4 = sub_23A691044();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23A5B0000, v3, v4, "Starting keep-alive...", v5, 2u);
    MEMORY[0x23B853BD0](v5, -1, -1);
  }

  sub_23A60D5CC(2.0);
  result = MEMORY[0x23B853C6C](v1 + 32);
  if (result)
  {
    v7 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType();
    v9 = *(void **)(v1 + 16);
    v10 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 24);
    v11 = v9;
    v10(v9, ObjectType, v7);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_23A60E0CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;

  v1 = v0;
  if (qword_25699DC80 != -1)
    swift_once();
  v2 = sub_23A690D14();
  __swift_project_value_buffer(v2, (uint64_t)qword_25699F490);
  v3 = sub_23A690CFC();
  v4 = sub_23A691044();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23A5B0000, v3, v4, "Stopping keep-alive...", v5, 2u);
    MEMORY[0x23B853BD0](v5, -1, -1);
  }

  objc_msgSend(*(id *)(v1 + 16), sel_invalidate);
  v6 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;

}

id DKIDSMessagingCenter.service.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC11DockKitCore20DKIDSMessagingCenter_service);
}

uint64_t DKIDSMessagingCenter.serviceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore20DKIDSMessagingCenter_serviceName);
  swift_bridgeObjectRetain();
  return v1;
}

void DKIDSMessagingCenter.__allocating_init(serviceName:delegate:queue:)(uint64_t a1, uint64_t a2, char *a3, void *a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  DKIDSMessagingCenter.init(serviceName:delegate:queue:)(a1, a2, a3, a4);
}

void DKIDSMessagingCenter.init(serviceName:delegate:queue:)(uint64_t a1, uint64_t a2, char *a3, void *a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  id v12;
  char *v13;
  char *v14;
  void *v15;
  id v16;
  char *v17;
  NSObject *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  objc_super v24;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore20DKIDSMessagingCenter_queue] = a4;
  v11 = &v5[OBJC_IVAR____TtC11DockKitCore20DKIDSMessagingCenter_serviceName];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  v12 = objc_allocWithZone(MEMORY[0x24BE4FCB8]);
  v13 = v5;
  v14 = a4;
  swift_bridgeObjectRetain();
  v15 = (void *)sub_23A690E04();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v12, sel_initWithService_, v15);

  if (v16)
  {
    *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore20DKIDSMessagingCenter_service] = v16;

    v24.receiver = v13;
    v24.super_class = ObjectType;
    v17 = (char *)objc_msgSendSuper2(&v24, sel_init);
    if (a3)
    {
      v18 = *(id *)&v17[OBJC_IVAR____TtC11DockKitCore20DKIDSMessagingCenter_service];
      -[NSObject addDelegate:queue:](v18, sel_addDelegate_queue_, a3, v14);
    }
    else
    {
      v19 = qword_25699DC80;
      v20 = v17;
      if (v19 != -1)
        swift_once();
      v21 = sub_23A690D14();
      __swift_project_value_buffer(v21, (uint64_t)qword_25699F490);
      v18 = sub_23A690CFC();
      v22 = sub_23A691038();
      if (os_log_type_enabled(v18, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_23A5B0000, v18, v22, "Unable to add delegate to service!", v23, 2u);
        MEMORY[0x23B853BD0](v23, -1, -1);
      }
      a3 = v14;
      v14 = v20;
    }

  }
  else
  {
    __break(1u);
  }
}

void DKIDSMessagingCenter.send(data:doNotCompress:timeout:)(double a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v4;
  void *v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t inited;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  unsigned __int8 v49;
  void *v50;
  unsigned __int8 v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  _BYTE *v61;
  id v62;
  _OWORD v63[2];
  __int128 v64;
  uint64_t v65;
  uint64_t v66;

  v66 = *MEMORY[0x24BDAC8D0];
  v8 = *(void **)(v4 + OBJC_IVAR____TtC11DockKitCore20DKIDSMessagingCenter_service);
  v9 = objc_msgSend(v8, sel_devices);
  if (!v9)
    goto LABEL_31;
  v10 = v9;
  sub_23A5D03A4(0, &qword_25699F680);
  v11 = sub_23A690F18();

  v62 = v8;
  if (!(v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
      goto LABEL_4;
    goto LABEL_30;
  }
LABEL_29:
  swift_bridgeObjectRetain();
  v12 = sub_23A691374();
  if (!v12)
  {
LABEL_30:
    swift_bridgeObjectRelease_n();
LABEL_31:
    if (qword_25699DC80 != -1)
      swift_once();
    v57 = sub_23A690D14();
    __swift_project_value_buffer(v57, (uint64_t)qword_25699F490);
    v58 = sub_23A690CFC();
    v59 = sub_23A691038();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_23A5B0000, v58, v59, "No paired devices!", v60, 2u);
      MEMORY[0x23B853BD0](v60, -1, -1);
    }

    sub_23A619350();
    swift_allocError();
    *v61 = 0;
    swift_willThrow();
    return;
  }
LABEL_4:
  v13 = 4;
  while (1)
  {
    if ((v11 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x23B85312C](v13 - 4, v11);
    else
      v14 = *(id *)(v11 + 8 * v13);
    v15 = v14;
    v16 = v13 - 3;
    if (__OFADD__(v13 - 4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (objc_msgSend(v14, sel_isDefaultPairedDevice)
      && objc_msgSend(v15, sel_isActive)
      && (objc_msgSend(v15, sel_isNearby) & 1) != 0)
    {
      break;
    }

    ++v13;
    if (v16 == v12)
      goto LABEL_30;
  }
  swift_bridgeObjectRelease_n();
  v17 = sub_23A5BDB38(MEMORY[0x24BEE4AF8]);
  v18 = MEMORY[0x24BEE1328];
  if ((a4 & 1) != 0)
  {
    v19 = sub_23A690E1C();
    v21 = v20;
    v65 = v18;
    LOBYTE(v64) = 0;
    sub_23A5D0394(&v64, v63);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23A61612C(v63, v19, v21, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v23 = sub_23A690E1C();
  v25 = v24;
  v65 = v18;
  LOBYTE(v64) = 1;
  sub_23A5D0394(&v64, v63);
  v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_23A61612C(v63, v23, v25, v26);
  v27 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1 > 0.0)
  {
    v28 = sub_23A690E1C();
    v30 = v29;
    v65 = MEMORY[0x24BEE13C8];
    *(double *)&v64 = a1;
    sub_23A5D0394(&v64, v63);
    v31 = swift_isUniquelyReferenced_nonNull_native();
    sub_23A61612C(v63, v28, v30, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = sub_23A690E1C();
    v34 = v33;
    v65 = v18;
    LOBYTE(v64) = 1;
    sub_23A5D0394(&v64, v63);
    v35 = swift_isUniquelyReferenced_nonNull_native();
    sub_23A61612C(v63, v32, v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a3 >> 60 == 15)
    v36 = 0;
  else
    v36 = sub_23A690618();
  v37 = objc_msgSend(v62, sel_accounts);
  if (v37)
  {
    v38 = v37;
    sub_23A5D03A4(0, &qword_25699F688);
    sub_23A619394();
    v39 = sub_23A690FFC();

    v40 = (void *)sub_23A609900(v39);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F698);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23A694020;
    v42 = IDSCopyIDForDevice();
    if (v42)
    {
      v43 = (void *)v42;
      v44 = sub_23A690E1C();
      v46 = v45;

    }
    else
    {
      v44 = 0;
      v46 = 0;
    }
    *(_QWORD *)&v64 = v44;
    *((_QWORD *)&v64 + 1) = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2690);
    sub_23A6193EC();
    sub_23A691278();
    sub_23A61964C(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    v47 = (void *)sub_23A690FE4();
    swift_bridgeObjectRelease();
    sub_23A60EAFC(v27);
    swift_bridgeObjectRelease();
    v48 = (void *)sub_23A690DB0();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v64 = 0;
    *(_QWORD *)&v63[0] = 0;
    v49 = objc_msgSend(v62, sel_sendData_fromAccount_toDestinations_priority_options_identifier_error_, v36, v40, v47, 300, v48, &v64, v63);
    v50 = (void *)v36;
    v51 = v49;

    v52 = (void *)v64;
    if ((v51 & 1) != 0)
    {
      v53 = *(id *)&v63[0];
      v54 = v52;
    }
    else
    {
      v55 = *(id *)&v63[0];
      v56 = v52;
      sub_23A6905D0();

      swift_willThrow();
    }

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23A60EAFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC48);
    v2 = sub_23A691398();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_23A5EF1F4(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_23A5D0394(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_23A5D0394(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_23A5D0394(v36, v37);
    sub_23A5D0394(v37, &v33);
    result = sub_23A691260();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_23A5D0394(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_23A5D0154();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t DKIDSMessagingCenter.send(_:)()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_23A6905B8();
  swift_allocObject();
  sub_23A6905AC();
  type metadata accessor for DockKitIDSMessage(0);
  sub_23A5F0550(&qword_25699F4C0, type metadata accessor for DockKitIDSMessage, (uint64_t)&protocol conformance descriptor for DockKitIDSMessage);
  v1 = sub_23A6905A0();
  if (v0)
  {

    swift_release();
    v3 = 0;
    v4 = 0xC000000000000000;
  }
  else
  {
    v3 = v1;
    v4 = v2;
    swift_release();
  }
  DKIDSMessagingCenter.send(data:doNotCompress:timeout:)(0.0, v3, v4, 0);
  return sub_23A5CA254(v3, v4);
}

void DKIDSMessagingCenter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DKIDSMessagingCenter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

DockKitCore::DockKitIDSClient::DKIDSClientState_optional __swiftcall DockKitIDSClient.DKIDSClientState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  DockKitCore::DockKitIDSClient::DKIDSClientState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23A6913B0();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DockKitIDSClient.DKIDSClientState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23A60F120 + 4 * byte_23A696926[*v0]))(0x7473696765726E75, 0xEC00000064657265);
}

uint64_t sub_23A60F120()
{
  return 0x7265747369676572;
}

void sub_23A60F160(char *a1)
{
  sub_23A609784(*a1);
}

void sub_23A60F16C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23A6915C0();
  __asm { BR              X9 }
}

uint64_t sub_23A60F1C4()
{
  sub_23A690E7C();
  swift_bridgeObjectRelease();
  return sub_23A6915FC();
}

void sub_23A60F234()
{
  __asm { BR              X10 }
}

uint64_t sub_23A60F278()
{
  sub_23A690E7C();
  return swift_bridgeObjectRelease();
}

void sub_23A60F2CC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23A6915C0();
  __asm { BR              X9 }
}

uint64_t sub_23A60F320()
{
  sub_23A690E7C();
  swift_bridgeObjectRelease();
  return sub_23A6915FC();
}

DockKitCore::DockKitIDSClient::DKIDSClientState_optional sub_23A60F390(Swift::String *a1)
{
  return DockKitIDSClient.DKIDSClientState.init(rawValue:)(*a1);
}

uint64_t sub_23A60F39C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23A60F3D4 + 4 * byte_23A696936[*v0]))();
}

void sub_23A60F3D4(_QWORD *a1@<X8>)
{
  *a1 = 0x7265747369676572;
  a1[1] = 0xEB00000000676E69;
}

void sub_23A60F3F8(_QWORD *a1@<X8>)
{
  *a1 = 0x7265747369676572;
  a1[1] = 0xEA00000000006465;
}

void sub_23A60F418(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xED0000676E697265;
}

uint64_t sub_23A60F430()
{
  sub_23A61BCF0();
  return sub_23A690ED0();
}

uint64_t sub_23A60F48C()
{
  sub_23A61BCF0();
  return sub_23A690EAC();
}

uint64_t sub_23A60F4D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC40);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23A69072C();
  __swift_allocate_value_buffer(v3, qword_25699F4A8);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_25699F4A8);
  sub_23A6906E4();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t static DockKitIDSClient.DockKitBroadcastToken.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_25699DC88 != -1)
    swift_once();
  v2 = sub_23A69072C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25699F4A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

char *DockKitIDSClient.__allocating_init(_:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return DockKitIDSClient.init(_:delegate:)(a1, a2, a3, a4);
}

char *DockKitIDSClient.init(_:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  void *v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  objc_super v46;
  uint64_t v47;

  v41 = a4;
  v42 = a3;
  v43 = a1;
  v44 = a2;
  ObjectType = swift_getObjectType();
  v40 = sub_23A691080();
  v5 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A69105C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_23A690D50();
  MEMORY[0x24BDAC7A8](v10);
  v11 = v4;
  sub_23A690720();
  v39 = OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_queue;
  sub_23A5D03A4(0, (unint64_t *)&qword_2542D2820);
  sub_23A690D38();
  v47 = MEMORY[0x24BEE4AF8];
  sub_23A5F0550((unint64_t *)&qword_2542D2810, v9, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27D0);
  sub_23A5F0590((unint64_t *)&qword_2542D27E0, (uint64_t *)&unk_2542D27D0);
  sub_23A691200();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5750], v40);
  *(_QWORD *)&v11[v39] = sub_23A6910A4();
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_messagingCenter] = 0;
  v12 = OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_accessories;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v11[v12] = sub_23A5BDC6C(MEMORY[0x24BEE4AF8]);
  v11[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_state] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_boundingBoxes] = v13;
  v14 = OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_keepAlive;
  type metadata accessor for DKIDSKeepAlive();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = sub_23A5BD9F8(v13);
  *(_QWORD *)(v15 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v15 + 48) = 0;
  *(_OWORD *)(v15 + 64) = xmmword_23A697E60;
  *(_QWORD *)(v15 + 80) = 5;
  *(_BYTE *)(v15 + 56) = 1;
  *(_QWORD *)&v11[v14] = v15;
  v11[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_initialRegister] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v16 = OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient__messageDispatch;
  *(_QWORD *)&v11[v16] = sub_23A5C95A8(v13);

  v17 = (objc_class *)type metadata accessor for DockKitIDSClient(0);
  v46.receiver = v11;
  v46.super_class = v17;
  v18 = (char *)objc_msgSendSuper2(&v46, sel_init);
  *(_QWORD *)(*(_QWORD *)&v18[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_keepAlive] + 40) = &protocol witness table for DockKitIDSClient;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v18[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate + 8] = v41;
  swift_unknownObjectWeakAssign();
  v19 = *(void **)&v18[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_queue];
  v20 = objc_allocWithZone((Class)type metadata accessor for DKIDSMessagingCenter());
  v21 = v18;
  v22 = v19;
  DKIDSMessagingCenter.init(serviceName:delegate:queue:)(v43, v44, v18, v22);
  v23 = *(void **)&v21[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_messagingCenter];
  *(_QWORD *)&v21[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_messagingCenter] = v24;

  v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v26 = OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient__messageDispatch;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47 = *(_QWORD *)&v21[v26];
  *(_QWORD *)&v21[v26] = 0x8000000000000000;
  sub_23A61625C((uint64_t)sub_23A619828, v25, 3u, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)&v21[v26] = v47;
  swift_release();
  swift_bridgeObjectRelease();
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v29 = swift_isUniquelyReferenced_nonNull_native();
  v47 = *(_QWORD *)&v21[v26];
  *(_QWORD *)&v21[v26] = 0x8000000000000000;
  sub_23A61625C((uint64_t)sub_23A619840, v28, 2u, v29);
  *(_QWORD *)&v21[v26] = v47;
  swift_release();
  swift_bridgeObjectRelease();
  v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v31 = swift_isUniquelyReferenced_nonNull_native();
  v47 = *(_QWORD *)&v21[v26];
  *(_QWORD *)&v21[v26] = 0x8000000000000000;
  sub_23A61625C((uint64_t)sub_23A619858, v30, 0xAu, v31);
  *(_QWORD *)&v21[v26] = v47;
  swift_release();
  swift_bridgeObjectRelease();
  v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v33 = swift_isUniquelyReferenced_nonNull_native();
  v47 = *(_QWORD *)&v21[v26];
  *(_QWORD *)&v21[v26] = 0x8000000000000000;
  sub_23A61625C((uint64_t)sub_23A619870, v32, 9u, v33);
  *(_QWORD *)&v21[v26] = v47;
  swift_release();
  swift_bridgeObjectRelease();
  v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v35 = swift_allocObject();
  v36 = ObjectType;
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)(v35 + 24) = v36;
  swift_retain();
  v37 = swift_isUniquelyReferenced_nonNull_native();
  v47 = *(_QWORD *)&v21[v26];
  *(_QWORD *)&v21[v26] = 0x8000000000000000;
  sub_23A61625C((uint64_t)sub_23A6198AC, v35, 0xFu, v37);
  *(_QWORD *)&v21[v26] = v47;
  swift_release();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

void sub_23A60FC8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v7 = sub_23A69072C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  v12 = a2[1];
  v45 = v11;
  v13 = a3 + 16;
  v14 = MEMORY[0x23B853C6C](v13);
  if (!v14)
    goto LABEL_10;
  v15 = (void *)v14;
  v16 = sub_23A690708();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  if ((v16 & 1) == 0)
  {
    if (qword_25699DC88 != -1)
      swift_once();
    __swift_project_value_buffer(v7, (uint64_t)qword_25699F4A8);
    v17 = sub_23A690708();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

    if ((v17 & 1) != 0)
      goto LABEL_7;
LABEL_10:
    sub_23A619350();
    swift_allocError();
    *v21 = 2;
    swift_willThrow();
    return;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

LABEL_7:
  if (v12 >> 60 != 15)
  {
    v18 = MEMORY[0x23B853C6C](v13);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_state);
      sub_23A608C88(v45, v12);

      __asm { BR              X9 }
    }
    v22 = v45;
    sub_23A5CA298(v45, v12);
    if (qword_25699DC80 != -1)
      swift_once();
    v23 = sub_23A690D14();
    __swift_project_value_buffer(v23, (uint64_t)qword_25699F490);
    v24 = sub_23A690CFC();
    v25 = sub_23A691038();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_23A5B0000, v24, v25, "Got accessory INFO broadcast while not registered, saving off anyways...", v26, 2u);
      MEMORY[0x23B853BD0](v26, -1, -1);
    }

    sub_23A690594();
    swift_allocObject();
    sub_23A690588();
    sub_23A61BF0C();
    sub_23A69057C();
    if (v3)
    {
      sub_23A608C74(v22, v12);
      swift_release();
    }
    else
    {
      swift_release();
      v27 = v39;
      v28 = v40;
      v36 = v41;
      v37 = v38;
      v29 = v42;
      v30 = v43;
      v31 = v44;
      v32 = MEMORY[0x23B853C6C](v13);
      if (v32)
      {
        v33 = (void *)v32;
        v34 = v37;
        v38 = v37;
        v39 = v27;
        v40 = v28;
        v41 = v36;
        v42 = v29;
        v43 = v30;
        v44 = v31;
        sub_23A611A7C((uint64_t)&v38);

        sub_23A608C74(v45, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_23A608C74(v45, v12);
      }
    }
  }
}

void sub_23A6100B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  char v17;
  unsigned __int8 *v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  _BYTE *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v7 = sub_23A69072C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 8);
  v12 = a3 + 16;
  v13 = MEMORY[0x23B853C6C](v12);
  if (!v13)
    goto LABEL_10;
  v14 = (void *)v13;
  v32 = v3;
  v15 = sub_23A690708();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  if ((v15 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

    v16 = v32;
    goto LABEL_7;
  }
  if (qword_25699DC88 != -1)
    swift_once();
  __swift_project_value_buffer(v7, (uint64_t)qword_25699F4A8);
  v17 = sub_23A690708();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

  v16 = v32;
  if ((v17 & 1) == 0)
  {
LABEL_10:
    sub_23A619350();
    swift_allocError();
    v21 = 2;
LABEL_11:
    *v20 = v21;
LABEL_12:
    swift_willThrow();
    return;
  }
LABEL_7:
  if (v11 >> 60 == 15)
  {
    v18 = (unsigned __int8 *)MEMORY[0x23B853C6C](v12);
    if (v18)
    {
      v19 = v18[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_state];

      __asm { BR              X9 }
    }
    v28 = (unsigned __int8 *)MEMORY[0x23B853C6C](v12);
    if (v28)
    {
      v29 = v28[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_state];

      __asm { BR              X9 }
    }
    sub_23A619350();
    swift_allocError();
    v21 = 1;
    goto LABEL_11;
  }
  sub_23A690594();
  swift_allocObject();
  sub_23A690588();
  sub_23A61BEC8();
  sub_23A69057C();
  swift_release();
  if (!v16)
  {
    v22 = v31;
    if (v31 != 3)
    {
      sub_23A619350();
      swift_allocError();
      *v27 = v22;
      goto LABEL_12;
    }
    v23 = MEMORY[0x23B853C6C](v12);
    if (v23)
    {
      v24 = (void *)v23;
      LOBYTE(v31) = 0;
      sub_23A6114C8((unsigned __int8 *)&v31);

    }
    v25 = MEMORY[0x23B853C6C](v12);
    if (v25)
    {
      v26 = (void *)v25;
      sub_23A612280();

    }
  }
}

void sub_23A61064C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  void *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23A69072C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  v10 = a2[1];
  v12 = a3 + 16;
  v13 = MEMORY[0x23B853C6C](v12);
  if (!v13)
    goto LABEL_9;
  v14 = (void *)v13;
  v24 = v10;
  v15 = v11;
  v16 = sub_23A690708();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if ((v16 & 1) == 0)
  {
    if (qword_25699DC88 != -1)
      swift_once();
    __swift_project_value_buffer(v6, (uint64_t)qword_25699F4A8);
    v19 = sub_23A690708();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    v17 = v15;
    v18 = v24;
    if ((v19 & 1) != 0)
      goto LABEL_7;
LABEL_9:
    sub_23A619350();
    swift_allocError();
    *v22 = 2;
    swift_willThrow();
    return;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  v17 = v15;
  v18 = v24;
LABEL_7:
  v20 = (_QWORD *)MEMORY[0x23B853C6C](v12);
  if (v20)
  {
    v21 = v20;
    (*(void (**)(uint64_t, uint64_t))((*MEMORY[0x24BEE4EA0] & *v20) + 0x210))(v17, v18);

  }
}

unsigned __int8 *sub_23A610824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *result;
  uint64_t v11;
  _QWORD v12[8];

  v12[7] = a1;
  v4 = sub_23A690D2C();
  v12[5] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v12[4] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A690D50();
  v12[2] = *(_QWORD *)(v6 - 8);
  v12[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v12[1] = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A69072C();
  MEMORY[0x24BDAC7A8](v8);
  v9 = a3 + 16;
  result = (unsigned __int8 *)MEMORY[0x23B853C6C](v9);
  if (result)
  {
    v12[6] = v9;
    v12[0] = v4;
    v11 = result[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_state];

    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_23A610E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  *(_QWORD *)(a1 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_boundingBoxes) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate;
  result = MEMORY[0x23B853C6C](a1 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate);
  if (result)
  {
    v6 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

unsigned __int8 *sub_23A610F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unsigned __int8 *result;
  uint64_t v6;

  v4 = sub_23A69072C();
  MEMORY[0x24BDAC7A8](v4);
  result = (unsigned __int8 *)MEMORY[0x23B853C6C](a3 + 16);
  if (result)
  {
    v6 = result[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_state];

    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_23A611208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate + 8) = a2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_23A611224()
{
  unsigned __int8 v1;

  sub_23A69108C();
  return v1;
}

void sub_23A611284(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23A6112EC()
{
  _BYTE *v0;
  char v1;
  uint64_t result;

  v1 = sub_23A691518();
  result = swift_bridgeObjectRelease();
  *v0 = v1 & 1;
  return result;
}

uint64_t sub_23A61136C()
{
  return sub_23A619448((uint64_t)sub_23A61BE10, (uint64_t)&block_descriptor_26);
}

void sub_23A611390(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  unsigned __int8 v10;

  v1 = a1 + 16;
  v2 = MEMORY[0x23B853C6C](a1 + 16);
  if (v2)
  {
    v3 = (void *)v2;
    v10 = 0;
    sub_23A6114C8(&v10);

  }
  v4 = MEMORY[0x23B853C6C](v1);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = v4 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate;
    v7 = MEMORY[0x23B853C6C](v4 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate);
    v8 = *(_QWORD *)(v6 + 8);

    if (v7)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v8 + 40))(ObjectType, v8);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_23A61143C(uint64_t result)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  id v6;

  if (result)
  {
    v2 = (void *)result;
    v3 = v1 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate;
    result = MEMORY[0x23B853C6C](v1 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate);
    if (result)
    {
      v4 = *(_QWORD *)(v3 + 8);
      swift_getObjectType();
      v5 = *(void (**)(void))(v4 + 48);
      v6 = v2;
      v5();

      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_23A6114C8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _DWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v3 = *a1;
  v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_state);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_state) = v3;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_boundingBoxes) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  if (qword_25699DC80 != -1)
    swift_once();
  v5 = sub_23A690D14();
  __swift_project_value_buffer(v5, (uint64_t)qword_25699F490);
  v6 = sub_23A690CFC();
  v7 = sub_23A691044();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (_DWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *v8 = 136315394;
    __asm { BR              X9 }
  }

  sub_23A609784(v3);
  if ((v9 & 1) == 0)
  {
    v10 = v2 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate;
    if (MEMORY[0x23B853C6C](v2 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate))
    {
      v11 = *(_QWORD *)(v10 + 8);
      ObjectType = swift_getObjectType();
      LOBYTE(v14) = v4;
      LOBYTE(v13) = v3;
      (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v11 + 8))(&v14, &v13, ObjectType, v11);
      swift_unknownObjectRelease();
    }
    __asm { BR              X9 }
  }
}

void *sub_23A611A7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[7];
  _OWORD v31[3];
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_23A69072C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_OWORD *)(a1 + 16);
  v33 = *(_OWORD *)a1;
  v36 = *(_QWORD *)(a1 + 48);
  v9 = *(_OWORD *)(a1 + 32);
  v34 = v8;
  v35 = v9;
  v10 = v33 + OBJC_IVAR____TtC11DockKitCore12DockCoreInfo_identifier;
  v11 = OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_accessories;
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_accessories);
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_23A5C66D0(v10);
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(v12 + 56) + 56 * v13;
      v16 = *(void **)v15;
      v29 = *(_QWORD *)(v15 + 8);
      v28 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 32);
      v27 = *(_QWORD *)(v15 + 24);
      v18 = *(_QWORD *)(v15 + 48);
      v26 = *(_QWORD *)(v15 + 40);
      v19 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = 0;
      v29 = 0;
      v28 = 0;
      v27 = 0;
      v17 = 0;
      v26 = 0;
      v18 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
    v29 = 0;
    v28 = 0;
    v27 = 0;
    v17 = 0;
    v26 = 0;
    v18 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_23A61BC3C((id *)&v33);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v31[0] = *(_QWORD *)(v2 + v11);
  *(_QWORD *)(v2 + v11) = 0x8000000000000000;
  sub_23A616398(&v33, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + v11) = *(_QWORD *)&v31[0];
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v21 = v2 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate;
  if (MEMORY[0x23B853C6C](v21))
  {
    v22 = *(_QWORD *)(v21 + 8);
    ObjectType = swift_getObjectType();
    v31[0] = v33;
    v31[1] = v34;
    v31[2] = v35;
    v32 = v36;
    v30[0] = v16;
    v30[1] = v29;
    v30[2] = v28;
    v30[3] = v27;
    v30[4] = v17;
    v30[5] = v26;
    v30[6] = v18;
    (*(void (**)(_OWORD *, _QWORD *, uint64_t, uint64_t))(v22 + 16))(v31, v30, ObjectType, v22);
    swift_unknownObjectRelease();
  }
  return sub_23A61BC84(v16);
}

uint64_t sub_23A611D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t i;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  char *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void *v51;
  void *v52;
  _QWORD *v53;
  void *v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  id v59;
  char *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;
  _QWORD *v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  char *v73;
  void *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  char *v89;
  uint64_t v90;
  int64_t v91;
  void *v92;
  void *v93;
  _QWORD *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *v99;
  void *v100;
  void (*v101)(char *, uint64_t, uint64_t);

  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FBD8);
  v1 = MEMORY[0x24BDAC7A8](v97);
  v86 = (char *)&v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v89 = (char *)&v83 - v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v99 = (uint64_t)&v83 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)&v83 - v7;
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_accessories);
  v9 = *(_QWORD *)(v8 + 64);
  v83 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v84 = (unint64_t)(v10 + 63) >> 6;
  v87 = v8;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v91)
  {
    if (v12)
    {
      v90 = (v12 - 1) & v12;
      v91 = i;
      v15 = __clz(__rbit64(v12)) | (i << 6);
      goto LABEL_22;
    }
    v16 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v84)
      goto LABEL_25;
    v17 = *(_QWORD *)(v83 + 8 * v16);
    v18 = i + 1;
    if (!v17)
    {
      v18 = i + 2;
      if (i + 2 >= v84)
        goto LABEL_25;
      v17 = *(_QWORD *)(v83 + 8 * v18);
      if (!v17)
      {
        v18 = i + 3;
        if (i + 3 >= v84)
          goto LABEL_25;
        v17 = *(_QWORD *)(v83 + 8 * v18);
        if (!v17)
          break;
      }
    }
LABEL_21:
    v90 = (v17 - 1) & v17;
    v91 = v18;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_22:
    v20 = v87;
    v21 = *(_QWORD *)(v87 + 48);
    v22 = sub_23A69072C();
    v23 = *(_QWORD **)(v22 - 8);
    v24 = v21 + v23[9] * v15;
    v25 = (void (*)(char *, uint64_t, uint64_t))v23[2];
    v94 = v23;
    v26 = v23;
    v101 = v25;
    v27 = v85;
    v28 = v22;
    ((void (*)(char *, uint64_t))v25)(v85, v24);
    v29 = (void **)(*(_QWORD *)(v20 + 56) + 56 * v15);
    v30 = *(int *)(v97 + 48);
    v31 = &v27[v30];
    v32 = *v29;
    v33 = v29[1];
    v34 = v29[2];
    v35 = v29[3];
    v36 = v29[5];
    v100 = v29[4];
    v37 = v100;
    v98 = v36;
    v38 = v29[6];
    *(_QWORD *)v31 = v32;
    *((_QWORD *)v31 + 1) = v33;
    v39 = v32;
    v92 = v32;
    v93 = v38;
    v40 = v33;
    *((_QWORD *)v31 + 2) = v34;
    *((_QWORD *)v31 + 3) = v35;
    *((_QWORD *)v31 + 4) = v37;
    *((_QWORD *)v31 + 5) = v36;
    *((_QWORD *)v31 + 6) = v38;
    v41 = v99;
    v42 = (_QWORD *)(v99 + v30);
    v43 = (void (*)(char *, uint64_t, uint64_t))v26[4];
    v96 = v28;
    v88 = v43;
    v43((char *)v99, (uint64_t)v27, v28);
    *v42 = v39;
    v42[1] = v40;
    v44 = v40;
    v95 = v40;
    v42[2] = v34;
    v42[3] = v35;
    v45 = v34;
    v46 = v35;
    v47 = v98;
    v42[4] = v100;
    v42[5] = v47;
    v42[6] = v38;
    v48 = v97;
    v49 = v89;
    v50 = &v89[*(int *)(v97 + 48)];
    v101(v89, v41, v28);
    v51 = v92;
    *(_QWORD *)v50 = v92;
    *((_QWORD *)v50 + 1) = v44;
    *((_QWORD *)v50 + 2) = v45;
    *((_QWORD *)v50 + 3) = v46;
    v52 = v100;
    *((_QWORD *)v50 + 4) = v100;
    *((_QWORD *)v50 + 5) = v47;
    v54 = v93;
    v53 = v94;
    *((_QWORD *)v50 + 6) = v93;
    v55 = v49;
    v56 = v48;
    v57 = (_QWORD *)v53[1];
    v58 = v51;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v59 = v58;
    v60 = v55;
    v61 = v96;
    v62 = v45;
    v94 = v57;
    ((void (*)(char *, uint64_t))v57)(v60, v96);
    v63 = (uint64_t)v86;
    v64 = &v86[*(int *)(v56 + 48)];
    v101(v86, v99, v61);
    v65 = v59;
    v66 = v95;
    *(_QWORD *)v64 = v59;
    *((_QWORD *)v64 + 1) = v66;
    v67 = v62;
    *((_QWORD *)v64 + 2) = v62;
    *((_QWORD *)v64 + 3) = v46;
    v92 = v46;
    v68 = v98;
    *((_QWORD *)v64 + 4) = v52;
    *((_QWORD *)v64 + 5) = v68;
    *((_QWORD *)v64 + 6) = v54;
    if (v66)
    {
      sub_23A61BBFC(v63);
    }
    else
    {
      v69 = v42;
      v71 = v88;
      v70 = v89;
      v72 = v96;
      v73 = &v89[*(int *)(v97 + 48)];
      v101(v89, v63, v96);
      *(_QWORD *)v73 = v65;
      *((_QWORD *)v73 + 1) = 0;
      v74 = v92;
      *((_QWORD *)v73 + 2) = v67;
      *((_QWORD *)v73 + 3) = v74;
      *((_QWORD *)v73 + 4) = v100;
      *((_QWORD *)v73 + 5) = v68;
      *((_QWORD *)v73 + 6) = v54;
      sub_23A61BBFC(v63);
      ((void (*)(char *, uint64_t))v94)(v70, v72);
      if (v67 == (void *)1)
      {
        swift_release();
        v75 = v96;
        v76 = v89;
        v77 = &v89[*(int *)(v97 + 48)];
        v71(v89, v99, v96);
        v78 = *v69;
        v79 = v69[3];
        v80 = v69[4];
        v82 = v69[5];
        v81 = v69[6];
        *(_QWORD *)v77 = *v69;
        *(_OWORD *)(v77 + 8) = *(_OWORD *)(v69 + 1);
        *((_QWORD *)v77 + 3) = v79;
        *((_QWORD *)v77 + 4) = v80;
        *((_QWORD *)v77 + 5) = v82;
        *((_QWORD *)v77 + 6) = v81;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v94)(v76, v75);
        return v78;
      }
    }
    result = sub_23A61BBFC(v99);
    v12 = v90;
  }
  v19 = i + 4;
  if (i + 4 >= v84)
  {
LABEL_25:
    swift_release();
    return 0;
  }
  v17 = *(_QWORD *)(v83 + 8 * v19);
  if (v17)
  {
    v18 = i + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v84)
      goto LABEL_25;
    v17 = *(_QWORD *)(v83 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23A612218()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F700);
  sub_23A69108C();
  return v1;
}

uint64_t sub_23A612280()
{
  return sub_23A619448((uint64_t)sub_23A619914, (uint64_t)&block_descriptor_2);
}

void sub_23A612294(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  unsigned __int8 v28[16];

  v2 = type metadata accessor for DockKitIDSMessage(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_BYTE *)MEMORY[0x23B853C6C](a1 + 16);
  if (v5)
  {
    v6 = *(void **)&v5[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_messagingCenter];
    if (v6)
    {
      v7 = OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_initialRegister;
      v27 = v5;
      if ((v5[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_initialRegister] & 1) != 0)
      {
        v8 = qword_25699DC80;
        v9 = v6;
        if (v8 != -1)
          swift_once();
        v10 = sub_23A690D14();
        __swift_project_value_buffer(v10, (uint64_t)qword_25699F490);
        v11 = sub_23A690CFC();
        v12 = sub_23A691044();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v13 = 0;
          _os_log_impl(&dword_23A5B0000, v11, v12, "This is an initial register!", v13, 2u);
          MEMORY[0x23B853BD0](v13, -1, -1);
        }

        v27[v7] = 0;
        v14 = sub_23A5CAD24((uint64_t)&unk_250B72438);
        v15 = v27;
        v17 = v16;
      }
      else
      {
        v18 = v6;
        v14 = 0;
        v17 = 0xF000000000000000;
        v15 = v27;
      }
      v19 = &v15[OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_token];
      v20 = &v4[*(int *)(v2 + 20)];
      v21 = sub_23A69072C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v19, v21);
      v22 = (uint64_t *)&v4[*(int *)(v2 + 24)];
      *v4 = 0;
      *v22 = v14;
      v22[1] = v17;
      sub_23A6905B8();
      swift_allocObject();
      sub_23A608C88(v14, v17);
      sub_23A6905AC();
      sub_23A5F0550(&qword_25699F4C0, type metadata accessor for DockKitIDSMessage, (uint64_t)&protocol conformance descriptor for DockKitIDSMessage);
      v23 = sub_23A6905A0();
      v25 = v24;
      swift_release();
      DKIDSMessagingCenter.send(data:doNotCompress:timeout:)(0.0, v23, v25, 0);
      sub_23A5CA254(v23, v25);
      sub_23A60A560((uint64_t)v4);
      v28[0] = 1;
      sub_23A6114C8(v28);
      sub_23A608C74(v14, v17);

    }
    else
    {

    }
  }
}

uint64_t sub_23A612744()
{
  return sub_23A619448((uint64_t)sub_23A619924, (uint64_t)&block_descriptor_12_0);
}

uint64_t sub_23A612758(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for DockKitIDSMessage(0);
  MEMORY[0x24BDAC7A8](v2);
  result = MEMORY[0x23B853C6C](a1 + 16);
  if (result)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_23A612BB4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_23A690D2C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A690D50();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_queue);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_BYTE *)(v13 + 24) = a1;
  aBlock[4] = sub_23A619950;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A5E4D44;
  aBlock[3] = &block_descriptor_19;
  v14 = _Block_copy(aBlock);
  swift_retain();
  sub_23A690D38();
  v18 = MEMORY[0x24BEE4AF8];
  sub_23A5F0550((unint64_t *)&qword_2569A01A0, v5, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F710);
  sub_23A5F0590((unint64_t *)&qword_2569A01B0, (uint64_t *)&unk_25699F710);
  sub_23A691200();
  MEMORY[0x23B852F1C](0, v11, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_23A612DE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for DockKitIDSMessage(0);
  MEMORY[0x24BDAC7A8](v2);
  result = MEMORY[0x23B853C6C](a1 + 16);
  if (result)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_23A613100()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F720);
  sub_23A69108C();
  return v1;
}

uint64_t sub_23A613168()
{
  return sub_23A61317C();
}

uint64_t sub_23A61317C()
{
  _BYTE *v0;

  sub_23A619350();
  swift_allocError();
  *v0 = 6;
  return swift_willThrow();
}

void sub_23A6131C8(void *a1)
{
  _DWORD *v1;
  _DWORD *v2;
  _DWORD *v3;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  _DWORD *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  unsigned int v40;
  BOOL v41;
  uint64_t v42;
  unint64_t v43;
  __int128 v44;
  _DWORD *v45;
  char *v46;
  NSObject *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;

  v3 = v1;
  v5 = sub_23A690D14();
  v6 = *(NSObject **)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_devices);
  if (!v9)
  {
    __break(1u);
LABEL_38:

    __break(1u);
LABEL_39:

    __break(1u);
    JUMPOUT(0x23A613958);
  }
  v10 = v9;
  sub_23A5D03A4(0, &qword_25699F680);
  v11 = sub_23A690F18();

  if (v11 >> 62)
    goto LABEL_36;
  v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v13)
    {
      swift_bridgeObjectRelease();
LABEL_33:
      __asm { BR              X10 }
    }
    v45 = v3;
    v48 = 0;
    v14 = 0;
    v56 = v11 & 0xC000000000000001;
    v49 = v11 & 0xFFFFFFFFFFFFFF8;
    *(_QWORD *)&v12 = 136315138;
    v51 = v12;
    v50 = MEMORY[0x24BEE4AD8] + 8;
    *(_QWORD *)&v12 = 136315650;
    v44 = v12;
    v52 = v11;
    v53 = v13;
    v46 = v8;
    v47 = v6;
    while (1)
    {
      if (v56)
      {
        v15 = (id)MEMORY[0x23B85312C](v14, v11);
      }
      else
      {
        if ((unint64_t)v14 >= *(_QWORD *)(v49 + 16))
          goto LABEL_35;
        v15 = *(id *)(v11 + 8 * (_QWORD)v14 + 32);
      }
      v16 = v15;
      v8 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      if (qword_25699DC80 != -1)
        swift_once();
      v6 = __swift_project_value_buffer(v5, (uint64_t)qword_25699F490);
      v3 = v16;
      v55 = v6;
      v17 = sub_23A690CFC();
      v18 = sub_23A691044();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v54 = swift_slowAlloc();
        v58 = v54;
        *(_DWORD *)v19 = v51;
        v20 = v3;
        v57 = v14 + 1;
        v21 = v20;
        v22 = v5;
        v23 = objc_msgSend(v20, sel_description);
        v24 = sub_23A690E1C();
        v6 = v25;

        v5 = v22;
        v26 = v24;
        v13 = v53;
        *(_QWORD *)(v19 + 4) = sub_23A5EEB40(v26, (unint64_t)v6, &v58);

        v8 = v57;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23A5B0000, v17, v18, "%s", (uint8_t *)v19, 0xCu);
        v27 = v54;
        swift_arrayDestroy();
        MEMORY[0x23B853BD0](v27, -1, -1);
        v28 = v19;
        v11 = v52;
        MEMORY[0x23B853BD0](v28, -1, -1);

      }
      else
      {

      }
      if (objc_msgSend(v3, sel_isDefaultPairedDevice, v44))
      {
        v57 = v8;
        v8 = v46;
        v29 = v47;
        ((void (*)(char *, NSObject *, uint64_t))v47[2].isa)(v46, v55, v5);
        v2 = v3;
        v6 = sub_23A690CFC();
        v3 = (_DWORD *)sub_23A691044();
        if (os_log_type_enabled(v6, (os_log_type_t)v3))
        {
          LODWORD(v55) = (_DWORD)v3;
          v3 = (_DWORD *)swift_slowAlloc();
          v30 = swift_slowAlloc();
          v58 = v30;
          *v3 = v44;
          v31 = objc_msgSend(v2, sel_uniqueIDOverride);
          if (!v31)
            goto LABEL_38;
          v32 = v31;
          v33 = sub_23A690E1C();
          v35 = v34;

          *(_QWORD *)(v3 + 1) = sub_23A5EEB40(v33, v35, &v58);
          swift_bridgeObjectRelease();
          *((_WORD *)v3 + 6) = 2080;
          v36 = objc_msgSend(v2, sel_name);
          if (!v36)
            goto LABEL_39;
          v37 = v36;
          v8 = (char *)sub_23A690E1C();
          v39 = v38;

          *(_QWORD *)((char *)v3 + 14) = sub_23A5EEB40((uint64_t)v8, v39, &v58);
          swift_bridgeObjectRelease();
          *((_WORD *)v3 + 11) = 2080;
          v40 = objc_msgSend(v2, sel_isConnected);
          v41 = v40 == 0;
          if (v40)
            v42 = 0x657463656E6E6F63;
          else
            v42 = 0x656E6E6F63736964;
          if (v41)
            v43 = 0xEC00000064657463;
          else
            v43 = 0xE900000000000064;
          *((_QWORD *)v3 + 3) = sub_23A5EEB40(v42, v43, &v58);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23A5B0000, v6, (os_log_type_t)v55, "Device %s (%s) %s", (uint8_t *)v3, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x23B853BD0](v30, -1, -1);
          MEMORY[0x23B853BD0](v3, -1, -1);

          v6 = v47;
          ((void (*)(char *, uint64_t))v47[1].isa)(v46, v5);
          v13 = v53;
        }
        else
        {

          ((void (*)(char *, uint64_t))v29[1].isa)(v8, v5);
        }
        v48 = 1;
        v14 = v57;
        if (v57 == (char *)v13)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          v3 = v45;
          goto LABEL_33;
        }
      }
      else
      {

        ++v14;
        if (v8 == (char *)v13)
          goto LABEL_18;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v13 = sub_23A691374();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23A613968(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void (*v9)(unsigned __int8 *, __int128 *);
  _BYTE *v11;
  __int128 v12;

  v3 = type metadata accessor for DockKitIDSMessage(0);
  v4 = &a1[*(int *)(v3 + 20)];
  if (qword_25699DC88 != -1)
    swift_once();
  v5 = sub_23A69072C();
  __swift_project_value_buffer(v5, (uint64_t)qword_25699F4A8);
  if ((sub_23A690708() & 1) != 0)
    __asm { BR              X10 }
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient__messageDispatch);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_23A5C6678(*a1), (v8 & 1) != 0))
  {
    v9 = *(void (**)(unsigned __int8 *, __int128 *))(*(_QWORD *)(v6 + 56) + 16 * v7);
    v12 = *(_OWORD *)&a1[*(int *)(v3 + 24)];
    swift_retain();
    v9(v4, &v12);
    return swift_release();
  }
  else
  {
    sub_23A619350();
    swift_allocError();
    *v11 = 1;
    return swift_willThrow();
  }
}

void sub_23A613B60()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_messagingCenter);
  if (v2)
  {
    sub_23A6905B8();
    swift_allocObject();
    v3 = v2;
    sub_23A6905AC();
    type metadata accessor for DockKitIDSMessage(0);
    sub_23A5F0550(&qword_25699F4C0, type metadata accessor for DockKitIDSMessage, (uint64_t)&protocol conformance descriptor for DockKitIDSMessage);
    v4 = sub_23A6905A0();
    if (v1)
    {

      swift_release();
      v6 = 0;
      v7 = 0xC000000000000000;
    }
    else
    {
      v6 = v4;
      v7 = v5;
      swift_release();
    }
    DKIDSMessagingCenter.send(data:doNotCompress:timeout:)(0.0, v6, v7, 0);
    sub_23A5CA254(v6, v7);

  }
}

uint64_t sub_23A613C78(char *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  char v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v8 = type metadata accessor for DockKitIDSMessage(0);
  result = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v3 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_messagingCenter);
  if (v12)
  {
    v13 = *a1;
    v14 = v3 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_token;
    v15 = &v11[*(int *)(v8 + 20)];
    v16 = sub_23A69072C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, v14, v16);
    v17 = (uint64_t *)&v11[*(int *)(v8 + 24)];
    *v11 = v13;
    *v17 = a2;
    v17[1] = a3;
    sub_23A6905B8();
    swift_allocObject();
    v18 = v12;
    sub_23A608C88(a2, a3);
    sub_23A6905AC();
    sub_23A5F0550(&qword_25699F4C0, type metadata accessor for DockKitIDSMessage, (uint64_t)&protocol conformance descriptor for DockKitIDSMessage);
    v19 = sub_23A6905A0();
    if (v4)
    {

      swift_release();
      v21 = 0;
      v22 = 0xC000000000000000;
    }
    else
    {
      v21 = v19;
      v22 = v20;
      swift_release();
    }
    sub_23A60A560((uint64_t)v11);
    DKIDSMessagingCenter.send(data:doNotCompress:timeout:)(0.0, v21, v22, 0);

    return sub_23A5CA254(v21, v22);
  }
  return result;
}

id DockKitIDSClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DockKitIDSClient.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23A613EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_token;
  v2 = sub_23A69072C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23A5F234C(v0 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_delegate);
  return swift_bridgeObjectRelease();
}

id DockKitIDSClient.__deallocating_deinit()
{
  return sub_23A613F60(0, (uint64_t (*)(void))type metadata accessor for DockKitIDSClient);
}

id sub_23A613F60(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_23A614040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23A5C6588(a1, a2);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    v16 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23A616A84();
      v12 = v16;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56) + 24 * v8;
    v14 = *(_QWORD *)v13;
    v15 = *(_QWORD *)(v13 + 8);
    LOBYTE(v13) = *(_BYTE *)(v13 + 16);
    *(_QWORD *)a3 = v14;
    *(_QWORD *)(a3 + 8) = v15;
    *(_BYTE *)(a3 + 16) = v13;
    sub_23A615AA4(v8, v12);
    *v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = 2;
  }
  return result;
}

uint64_t sub_23A614138(unsigned int a1)
{
  return sub_23A614150(a1, &qword_25699FBD0);
}

uint64_t sub_23A614144(unsigned int a1)
{
  return sub_23A614150(a1, (uint64_t *)&unk_25699E990);
}

uint64_t sub_23A614150(unsigned int a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = v2;
  v5 = sub_23A5C65EC(a1);
  if ((v6 & 1) == 0)
    return 0;
  v7 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v2;
  v12 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23A617610(a2);
    v9 = v12;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v7);
  sub_23A615C98(v7, v9);
  *v4 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23A6141EC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699E9E0);
  result = sub_23A69138C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = a2;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v33 = 1 << *(_BYTE *)(v5 + 32);
              if (v33 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v33;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v18);
      v25 = *v23;
      v24 = v23[1];
      sub_23A6915C0();
      sub_23A6915CC();
      result = sub_23A6915FC();
      v26 = -1 << *(_BYTE *)(v7 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v14 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
      v16 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v15);
      *v16 = v25;
      v16[1] = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_23A6144BC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA10);
  v39 = a2;
  v6 = sub_23A69138C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v39 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v35 = *(_BYTE *)(v32 + 16);
      if ((v39 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_23A6915C0();
      sub_23A690E7C();
      result = sub_23A6915FC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_QWORD *)v19 = v33;
      *(_QWORD *)(v19 + 8) = v34;
      *(_BYTE *)(v19 + 16) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23A6147E0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA00);
  v6 = sub_23A69138C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_23A5D0394(v24, v35);
      }
      else
      {
        sub_23A5EF1F4((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_23A6915C0();
      sub_23A690E7C();
      result = sub_23A6915FC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_23A5D0394(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23A614ADC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC30);
  result = sub_23A69138C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v29 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v12)
          goto LABEL_33;
        v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v12)
            goto LABEL_33;
          v21 = v29[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v29 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v21 = v29[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
      v30 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_23A6915C0();
      sub_23A6915CC();
      result = sub_23A6915FC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v27;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_23A614DB0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  void **v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  int64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  id v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;

  v3 = v2;
  v5 = sub_23A69072C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FBE0);
  v56 = a2;
  v10 = sub_23A69138C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v62 = v8;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v53 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v51 = v2;
  v52 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v54 = v9;
  v55 = v6;
  v63 = v5;
  while (1)
  {
    if (v15)
    {
      v24 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v25 = v24 | (v18 << 6);
      goto LABEL_22;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v52)
      break;
    v27 = v53;
    v28 = v53[v26];
    ++v18;
    if (!v28)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v52)
        goto LABEL_34;
      v28 = v53[v18];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v52)
        {
LABEL_34:
          swift_release();
          v3 = v51;
          if ((v56 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v53[v29];
        if (!v28)
        {
          while (1)
          {
            v18 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v18 >= v52)
              goto LABEL_34;
            v28 = v53[v18];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v18 = v29;
      }
    }
LABEL_21:
    v15 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v18 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v6 + 72);
    v31 = *(_QWORD *)(v9 + 48) + v30 * v25;
    if ((v56 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v62, v31, v63);
      v32 = (void **)(*(_QWORD *)(v9 + 56) + 56 * v25);
      v33 = *v32;
      v34 = v32[1];
      v60 = v32[2];
      v61 = (uint64_t)v34;
      v35 = v32[4];
      v59 = v32[3];
      v36 = v32[5];
      v37 = v32[6];
      v57 = v33;
      v58 = (uint64_t)v36;
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v62, v31, v63);
      v38 = *(_QWORD *)(v9 + 56) + 56 * v25;
      v39 = *(void **)v38;
      v40 = *(_QWORD *)(v38 + 8);
      v60 = *(void **)(v38 + 16);
      v61 = v40;
      v41 = *(void **)(v38 + 24);
      v35 = *(void **)(v38 + 32);
      v37 = *(void **)(v38 + 48);
      v58 = *(_QWORD *)(v38 + 40);
      v59 = v41;
      v57 = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23A5F0550(&qword_25699E030, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23A690DD4();
    v42 = -1 << *(_BYTE *)(v11 + 32);
    v43 = result & ~v42;
    v44 = v43 >> 6;
    if (((-1 << v43) & ~*(_QWORD *)(v16 + 8 * (v43 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v43) & ~*(_QWORD *)(v16 + 8 * (v43 >> 6)))) | v43 & 0x7FFFFFFFFFFFFFC0;
      v6 = v55;
    }
    else
    {
      v45 = 0;
      v46 = (unint64_t)(63 - v42) >> 6;
      v6 = v55;
      do
      {
        if (++v44 == v46 && (v45 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v47 = v44 == v46;
        if (v44 == v46)
          v44 = 0;
        v45 |= v47;
        v48 = *(_QWORD *)(v16 + 8 * v44);
      }
      while (v48 == -1);
      v19 = __clz(__rbit64(~v48)) + (v44 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v30 * v19, v62, v63);
    v20 = (_QWORD *)(*(_QWORD *)(v11 + 56) + 56 * v19);
    v21 = v61;
    *v20 = v57;
    v20[1] = v21;
    v22 = v59;
    v20[2] = v60;
    v20[3] = v22;
    v23 = v58;
    v20[4] = v35;
    v20[5] = v23;
    v20[6] = v37;
    ++*(_QWORD *)(v11 + 16);
    v9 = v54;
  }
  swift_release();
  v3 = v51;
  v27 = v53;
  if ((v56 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v49 = 1 << *(_BYTE *)(v9 + 32);
  if (v49 >= 64)
    bzero(v27, ((unint64_t)(v49 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v49;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23A6151D0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC10);
  v6 = a2;
  v7 = sub_23A69138C();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_23A5D0340(v37);
      }
      sub_23A6915C0();
      sub_23A690E7C();
      result = sub_23A6915FC();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_23A6154DC(uint64_t a1, char a2)
{
  return sub_23A6154E8(a1, a2, &qword_25699EA18);
}

uint64_t sub_23A6154E8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_23A69138C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_23A6915C0();
    sub_23A690E7C();
    result = sub_23A6915FC();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23A6157F0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD *v32;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_23A69138C();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v31 = v4;
    v32 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v32[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v32[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v31;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v6 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v4 = v31;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v22 = v32[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v9 >= v13)
                  goto LABEL_33;
                v22 = v32[v9];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v9 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(unsigned int *)(*(_QWORD *)(v6 + 48) + 4 * v20);
      v29 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v20);
      if ((a2 & 1) == 0)
        swift_unknownObjectRetain();
      result = MEMORY[0x23B853438](*(_QWORD *)(v8 + 40), v28, 4);
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_DWORD *)(*(_QWORD *)(v8 + 48) + 4 * v18) = v28;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v29;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

unint64_t sub_23A615AA4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  BOOL v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23A69120C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23A6915C0();
        swift_bridgeObjectRetain();
        sub_23A690E7C();
        v10 = sub_23A6915FC();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 24 * v3;
          v17 = (__int128 *)(v15 + 24 * v6);
          if (24 * v3 < (uint64_t)(24 * v6) || v16 >= (unint64_t)v17 + 24 || (v18 = v3 == v6, v3 = v6, !v18))
          {
            v9 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23A615C98(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  unint64_t v11;
  _DWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23A69120C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_DWORD *)(v9 + 4 * v6);
        result = MEMORY[0x23B853438](*(_QWORD *)(a2 + 40), *v10, 4);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_DWORD *)(v9 + 4 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_23A615E30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23A5C6588(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23A617468((uint64_t *)&unk_25699FC70);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_23A6154E8(v15, a4 & 1, (uint64_t *)&unk_25699FC70);
  v20 = sub_23A5C6588(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23A691554();
  __break(1u);
}

uint64_t sub_23A615F9C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v7 = v6;
  v14 = *v6;
  v16 = sub_23A5C6588(a3, a4);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= result && (a5 & 1) != 0)
  {
LABEL_9:
    v23 = a2 & 1;
    v24 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
      v25 = v24[7] + 24 * v16;
      *(double *)v25 = a6;
      *(_QWORD *)(v25 + 8) = a1;
      *(_BYTE *)(v25 + 16) = v23;
      return result;
    }
    v24[(v16 >> 6) + 8] |= 1 << v16;
    v26 = (uint64_t *)(v24[6] + 16 * v16);
    *v26 = a3;
    v26[1] = a4;
    v27 = v24[7] + 24 * v16;
    *(double *)v27 = a6;
    *(_QWORD *)(v27 + 8) = a1;
    *(_BYTE *)(v27 + 16) = v23;
    v28 = v24[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v24[2] = v30;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  if (v21 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_23A616A84();
    goto LABEL_9;
  }
  sub_23A6144BC(result, a5 & 1);
  result = sub_23A5C6588(a3, a4);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = result;
    goto LABEL_9;
  }
LABEL_15:
  result = sub_23A691554();
  __break(1u);
  return result;
}

_OWORD *sub_23A61612C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23A5C6588(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        return sub_23A5D0394(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23A616C4C();
      goto LABEL_7;
    }
    sub_23A6147E0(v15, a4 & 1);
    v21 = sub_23A5C6588(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23A6167D8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_23A691554();
  __break(1u);
  return result;
}

uint64_t sub_23A61625C(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23A5C6678(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_23A616E30();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_23A614ADC(result, a4 & 1);
  result = sub_23A5C6678(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23A691554();
  __break(1u);
  return result;
}

uint64_t sub_23A616398(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_23A69072C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23A5C66D0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_23A61BCBC((uint64_t)a1, v20[7] + 56 * v14);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_23A616FD4();
      goto LABEL_7;
    }
    sub_23A614DB0(v17, a3 & 1);
    v22 = sub_23A5C66D0(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return sub_23A61BCBC((uint64_t)a1, v20[7] + 56 * v14);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_23A616840(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_23A691554();
  __break(1u);
  return result;
}

uint64_t sub_23A61650C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_23A5C6588(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_23A617298();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (uint64_t *)(v20[7] + 16 * v14);
      result = sub_23A61BE00(*v21);
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (uint64_t *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23A6151D0(v17, a5 & 1);
  v23 = sub_23A5C6588(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23A691554();
  __break(1u);
  return result;
}

uint64_t sub_23A616680(uint64_t a1, unsigned int a2, char a3)
{
  return sub_23A616698(a1, a2, a3, &qword_25699FBD0);
}

uint64_t sub_23A61668C(uint64_t a1, unsigned int a2, char a3)
{
  return sub_23A616698(a1, a2, a3, (uint64_t *)&unk_25699E990);
}

uint64_t sub_23A616698(uint64_t a1, unsigned int a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v6 = v4;
  v10 = *v4;
  v12 = sub_23A5C65EC(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23A617610(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a2;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_23A6157F0(result, a3 & 1, a4);
  result = sub_23A5C65EC(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23A691554();
  __break(1u);
  return result;
}

_OWORD *sub_23A6167D8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_23A5D0394(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_23A616840(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23A69072C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = a4[7] + 56 * a1;
  *(_QWORD *)(v11 + 48) = *((_QWORD *)a3 + 6);
  v12 = a3[2];
  v13 = *a3;
  *(_OWORD *)(v11 + 16) = a3[1];
  *(_OWORD *)(v11 + 32) = v12;
  *(_OWORD *)v11 = v13;
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a4[2] = v16;
  return result;
}

void *sub_23A6168F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699E9E0);
  v2 = *v0;
  v3 = sub_23A691380();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23A616A84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA10);
  v2 = *v0;
  v3 = sub_23A691380();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    LOBYTE(v21) = *(_BYTE *)(v21 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = v19;
    v24[1] = v18;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v22;
    *(_QWORD *)(v25 + 8) = v23;
    *(_BYTE *)(v25 + 16) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23A616C4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA00);
  v2 = *v0;
  v3 = sub_23A691380();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_23A5EF1F4(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_23A5D0394(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23A616E30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC30);
  v2 = *v0;
  v3 = sub_23A691380();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    result = (void *)swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23A616FD4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, char *, uint64_t);
  uint64_t v29;
  id v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  const void *v38;
  int64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  __int128 v47;
  uint64_t v48;

  v1 = sub_23A69072C();
  v41 = *(_QWORD *)(v1 - 8);
  v42 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v40 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FBE0);
  v37 = v0;
  v3 = *v0;
  v4 = sub_23A691380();
  v5 = *(_QWORD *)(v3 + 16);
  v44 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v36 = v44;
    v35 = v37;
LABEL_28:
    *v35 = v36;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v38 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v38, 8 * v8);
    v6 = v44;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v43 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v39 = (unint64_t)(v11 + 63) >> 6;
  v14 = v40;
  v15 = v41;
  v16 = v42;
  v17 = v44;
  while (1)
  {
    if (v13)
    {
      v45 = (v13 - 1) & v13;
      v46 = v10;
      v18 = __clz(__rbit64(v13)) | (v10 << 6);
      v19 = v43;
      goto LABEL_12;
    }
    v31 = v10 + 1;
    v19 = v43;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v31 >= v39)
      goto LABEL_26;
    v32 = *((_QWORD *)v38 + v31);
    v33 = v10 + 1;
    if (!v32)
    {
      v33 = v10 + 2;
      if (v10 + 2 >= v39)
        goto LABEL_26;
      v32 = *((_QWORD *)v38 + v33);
      if (!v32)
        break;
    }
LABEL_25:
    v45 = (v32 - 1) & v32;
    v46 = v33;
    v18 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v15 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v14, *(_QWORD *)(v19 + 48) + v20, v16);
    v21 = 56 * v18;
    v22 = *(_QWORD *)(v19 + 56) + 56 * v18;
    v23 = *(void **)v22;
    v24 = *(_QWORD *)(v22 + 24);
    v25 = *(_QWORD *)(v22 + 32);
    v26 = *(_QWORD *)(v22 + 48);
    v48 = *(_QWORD *)(v22 + 40);
    v27 = *(_QWORD *)(v17 + 48) + v20;
    v28 = *(void (**)(unint64_t, char *, uint64_t))(v15 + 32);
    v47 = *(_OWORD *)(v22 + 8);
    v28(v27, v14, v16);
    v29 = *(_QWORD *)(v17 + 56) + v21;
    *(_QWORD *)v29 = v23;
    *(_OWORD *)(v29 + 8) = v47;
    *(_QWORD *)(v29 + 24) = v24;
    *(_QWORD *)(v29 + 32) = v25;
    *(_QWORD *)(v29 + 40) = v48;
    *(_QWORD *)(v29 + 48) = v26;
    v30 = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    v13 = v45;
    v10 = v46;
  }
  v34 = v10 + 3;
  if (v10 + 3 >= v39)
  {
LABEL_26:
    result = (void *)swift_release();
    v35 = v37;
    v36 = v44;
    goto LABEL_28;
  }
  v32 = *((_QWORD *)v38 + v34);
  if (v32)
  {
    v33 = v10 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v33 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v33 >= v39)
      goto LABEL_26;
    v32 = *((_QWORD *)v38 + v33);
    ++v34;
    if (v32)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23A617298()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC10);
  v2 = *v0;
  v3 = sub_23A691380();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)sub_23A5D0340(v24);
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23A61745C()
{
  return sub_23A617468(&qword_25699EA18);
}

id sub_23A617468(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23A691380();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23A617610(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23A691380();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 4 * v16;
    v18 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v16);
    v19 = 8 * v16;
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v19);
    *(_DWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v19) = v20;
    result = (void *)swift_unknownObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23A6177AC(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25699EA10);
  result = sub_23A691380();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = 24 * i;
    v17 = *(_QWORD *)(a1 + 56) + 24 * i;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = __CFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v21 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v22 = *(_BYTE *)(v17 + 16);
    v23 = *(_QWORD *)v17;
    v24 = *v21;
    result = v21[1];
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v25 = (_QWORD *)(v3[6] + 16 * i);
    *v25 = v24;
    v25[1] = result;
    v26 = v3[7] + v16;
    *(_QWORD *)v26 = v23;
    *(_QWORD *)(v26 + 8) = v20;
    *(_BYTE *)(v26 + 16) = v22;
    v27 = v3[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_25;
    v3[2] = v29;
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_26;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_23A617980(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_23A691230() == *(_DWORD *)(a4 + 36))
      {
        sub_23A69123C();
        sub_23A5D03A4(0, &qword_25699F688);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_23A691170();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_23A69117C();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_23A69117C();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x23B8530CC](a1, a2, v7);
  sub_23A5D03A4(0, &qword_25699F688);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_23A617BE8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23A617C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a2 + 40) = a4;
  return swift_unknownObjectWeakAssign();
}

uint64_t _s11DockKitCore0aB11BoundingBoxV2eeoiySbAC_ACtFZ_0(float *a1, float *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2] || a1[3] != a2[3])
    return 0;
  type metadata accessor for DockKitBoundingBox(0);
  return sub_23A690708();
}

unint64_t sub_23A617D08()
{
  unint64_t result;

  result = qword_25699F588;
  if (!qword_25699F588)
  {
    result = MEMORY[0x23B853B34](&unk_23A697D04, &type metadata for DockKitBoundingBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F588);
  }
  return result;
}

uint64_t sub_23A617D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DockKitBoundingBox(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23A617D90()
{
  unint64_t result;

  result = qword_25699F5D8;
  if (!qword_25699F5D8)
  {
    result = MEMORY[0x23B853B34](&unk_23A697CB4, &type metadata for DockKitIDSMessagingError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F5D8);
  }
  return result;
}

unint64_t sub_23A617DD4()
{
  unint64_t result;

  result = qword_25699F5E0;
  if (!qword_25699F5E0)
  {
    result = MEMORY[0x23B853B34](&unk_23A697C64, &type metadata for DockKitIDSMessagingError.NotImplementedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F5E0);
  }
  return result;
}

unint64_t sub_23A617E18()
{
  unint64_t result;

  result = qword_25699F5E8;
  if (!qword_25699F5E8)
  {
    result = MEMORY[0x23B853B34](&unk_23A697C14, &type metadata for DockKitIDSMessagingError.ArgumentNotNormalizedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F5E8);
  }
  return result;
}

unint64_t sub_23A617E5C()
{
  unint64_t result;

  result = qword_25699F5F0;
  if (!qword_25699F5F0)
  {
    result = MEMORY[0x23B853B34](&unk_23A697BC4, &type metadata for DockKitIDSMessagingError.InvalidOrMissingParametersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F5F0);
  }
  return result;
}

unint64_t sub_23A617EA0()
{
  unint64_t result;

  result = qword_25699F5F8;
  if (!qword_25699F5F8)
  {
    result = MEMORY[0x23B853B34](&unk_23A697B74, &type metadata for DockKitIDSMessagingError.NotRegisteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F5F8);
  }
  return result;
}

unint64_t sub_23A617EE4()
{
  unint64_t result;

  result = qword_25699F600;
  if (!qword_25699F600)
  {
    result = MEMORY[0x23B853B34](&unk_23A697B24, &type metadata for DockKitIDSMessagingError.UnrecognizedClientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F600);
  }
  return result;
}

unint64_t sub_23A617F28()
{
  unint64_t result;

  result = qword_25699F608;
  if (!qword_25699F608)
  {
    result = MEMORY[0x23B853B34](&unk_23A697AD4, &type metadata for DockKitIDSMessagingError.UnsupportedMessageTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F608);
  }
  return result;
}

unint64_t sub_23A617F6C()
{
  unint64_t result;

  result = qword_25699F610;
  if (!qword_25699F610)
  {
    result = MEMORY[0x23B853B34](&unk_23A697A84, &type metadata for DockKitIDSMessagingError.NoPairedDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699F610);
  }
  return result;
}

uint64_t sub_23A617FB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23A6180EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23A6181DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1868983913 && a2 == 0xE400000000000000;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746174536B636F64 && a2 == 0xE900000000000065 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696B63617274 && a2 == 0xED00006574617453 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657261776D726966 && a2 == 0xEF6E6F6973726556 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23A618454(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 120 && a2 == 0xE100000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 121 && a2 == 0xE100000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23A618614(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6465726961506F6ELL && a2 == 0xEE00656369766544;
  if (v2 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023A69DF90 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023A69DFB0 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7369676552746F6ELL && a2 == 0xED00006465726574 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023A69DFD0 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023A69DFF0 || (sub_23A691518() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C706D49746F6ELL && a2 == 0xEE006465746E656DLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23A691518();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void sub_23A61893C(uint64_t a1, unint64_t a2, uint64_t a3, NSObject *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void (*v22)(char *);
  NSObject *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_t v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39[3];

  v36 = a3;
  v37 = a4;
  v6 = sub_23A690D14();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DockKitIDSMessage(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  if (a2 >> 60 != 15)
  {
    v35 = v4;
    sub_23A690594();
    swift_allocObject();
    sub_23A690588();
    sub_23A5F0550(&qword_25699FC68, type metadata accessor for DockKitIDSMessage, (uint64_t)&protocol conformance descriptor for DockKitIDSMessage);
    sub_23A69057C();
    swift_release();
    if (qword_25699DC80 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v6, (uint64_t)qword_25699F490);
    v22 = *(void (**)(char *))(v7 + 16);
    v34 = v21;
    v22(v9);
    sub_23A60A51C((uint64_t)v18, (uint64_t)v16);
    v23 = v37;
    swift_bridgeObjectRetain_n();
    v24 = sub_23A690CFC();
    v33 = sub_23A69102C();
    if (os_log_type_enabled(v24, (os_log_type_t)v33))
    {
      v32 = v24;
      v25 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v39[0] = v31;
      *(_DWORD *)v25 = 136380931;
      if (!v23)
      {
        __break(1u);
        return;
      }
      v30 = v25 + 4;
      swift_bridgeObjectRetain();
      v38 = sub_23A5EEB40(v36, (unint64_t)v23, v39);
      sub_23A6911D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2081;
      v30 = v25 + 14;
      sub_23A60A51C((uint64_t)v16, (uint64_t)v13);
      v26 = sub_23A690E58();
      v38 = sub_23A5EEB40(v26, v27, v39);
      v23 = v37;
      sub_23A6911D0();
      swift_bridgeObjectRelease();
      sub_23A60A560((uint64_t)v16);
      v28 = v32;
      _os_log_impl(&dword_23A5B0000, v32, (os_log_type_t)v33, "Got IDS message from %{private}s: %{private}s", (uint8_t *)v25, 0x16u);
      v29 = v31;
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v29, -1, -1);
      MEMORY[0x23B853BD0](v25, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_23A60A560((uint64_t)v16);

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t, NSObject *))((*MEMORY[0x24BEE4EA0] & *v35) + 0x78))(v18, v36, v23);
    sub_23A60A560((uint64_t)v18);
    return;
  }
  if (qword_25699DC80 != -1)
    swift_once();
  __swift_project_value_buffer(v6, (uint64_t)qword_25699F490);
  v37 = sub_23A690CFC();
  v19 = sub_23A691038();
  if (os_log_type_enabled(v37, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_23A5B0000, v37, v19, "Got incoming data message, but it is nil!", v20, 2u);
    MEMORY[0x23B853BD0](v20, -1, -1);
  }

}

uint64_t sub_23A619094(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23A690D14();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25699DC80 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v6, (uint64_t)qword_25699F490);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  swift_bridgeObjectRetain_n();
  v11 = a1;
  v12 = sub_23A690CFC();
  v13 = sub_23A691038();
  if (os_log_type_enabled(v12, v13))
  {
    v22 = a2;
    v23 = v7;
    v14 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v24 = (uint64_t)a1;
    v25 = v21;
    *(_DWORD *)v14 = 136315394;
    v15 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC60);
    v16 = sub_23A690E58();
    v24 = sub_23A5EEB40(v16, v17, &v25);
    sub_23A6911D0();

    result = swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    if (a3)
    {
      swift_bridgeObjectRetain();
      v24 = sub_23A5EEB40(v22, a3, &v25);
      sub_23A6911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23A5B0000, v12, v13, "Got message on service %s from %s", (uint8_t *)v14, 0x16u);
      v19 = v21;
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v19, -1, -1);
      MEMORY[0x23B853BD0](v14, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v6);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t type metadata accessor for DKIDSHandler()
{
  return objc_opt_self();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_23A619350()
{
  unint64_t result;

  result = qword_25699F678;
  if (!qword_25699F678)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSMessagingError, &type metadata for DockKitIDSMessagingError);
    atomic_store(result, (unint64_t *)&qword_25699F678);
  }
  return result;
}

unint64_t sub_23A619394()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25699F690;
  if (!qword_25699F690)
  {
    v1 = sub_23A5D03A4(255, &qword_25699F688);
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25699F690);
  }
  return result;
}

unint64_t sub_23A6193EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25699F6A8;
  if (!qword_25699F6A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542D2690);
    v2 = MEMORY[0x24BEE0D10];
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25699F6A8);
  }
  return result;
}

uint64_t sub_23A619448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v5 = v2;
  v6 = sub_23A690D2C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A690D50();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)(v5 + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_queue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A5E4D44;
  aBlock[3] = a2;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_23A690D38();
  v19 = MEMORY[0x24BEE4AF8];
  sub_23A5F0550((unint64_t *)&qword_2569A01A0, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F710);
  sub_23A5F0590((unint64_t *)&qword_2569A01B0, (uint64_t *)&unk_25699F710);
  sub_23A691200();
  MEMORY[0x23B852F1C](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return swift_release();
}

uint64_t sub_23A61964C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _BYTE v20[40];
  _OWORD v21[2];
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FC50);
    v3 = sub_23A691284();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      sub_23A61BF90(v6 + 40 * v4, (uint64_t)v21);
      result = sub_23A691260();
      v8 = ~(-1 << *(_BYTE *)(v3 + 32));
      v9 = result & v8;
      v10 = (result & (unint64_t)v8) >> 6;
      v11 = *(_QWORD *)(v5 + 8 * v10);
      v12 = 1 << (result & v8);
      if ((v12 & v11) != 0)
      {
        while (1)
        {
          sub_23A61BF90(*(_QWORD *)(v3 + 48) + 40 * v9, (uint64_t)v20);
          v13 = MEMORY[0x23B8530F0](v20, v21);
          result = sub_23A61BFCC((uint64_t)v20);
          if ((v13 & 1) != 0)
            break;
          v9 = (v9 + 1) & v8;
          v10 = v9 >> 6;
          v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
          v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0)
            goto LABEL_8;
        }
        sub_23A61BFCC((uint64_t)v21);
      }
      else
      {
LABEL_8:
        *(_QWORD *)(v5 + 8 * v10) = v12 | v11;
        v14 = *(_QWORD *)(v3 + 48) + 40 * v9;
        v15 = v21[0];
        v16 = v21[1];
        *(_QWORD *)(v14 + 32) = v22;
        *(_OWORD *)v14 = v15;
        *(_OWORD *)(v14 + 16) = v16;
        v17 = *(_QWORD *)(v3 + 16);
        v18 = __OFADD__(v17, 1);
        v19 = v17 + 1;
        if (v18)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v19;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t type metadata accessor for DKIDSKeepAlive()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DockKitIDSClient(uint64_t a1)
{
  return sub_23A5CDEC8(a1, (uint64_t *)&unk_25699FAD0);
}

uint64_t type metadata accessor for DKIDSMessagingCenter()
{
  return objc_opt_self();
}

uint64_t sub_23A619804()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A619828(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23A60FC8C(a1, a2, v2);
}

void sub_23A619840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23A6100B4(a1, a2, v2);
}

void sub_23A619858(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23A61064C(a1, a2, v2);
}

unsigned __int8 *sub_23A619870(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23A610824(a1, a2, v2);
}

uint64_t sub_23A619888()
{
  swift_release();
  return swift_deallocObject();
}

unsigned __int8 *sub_23A6198AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23A610F14(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_23A6198C4()
{
  uint64_t v0;

  sub_23A611284(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A6198DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23A611D60();
  *a1 = result;
  return result;
}

void sub_23A619914()
{
  uint64_t v0;

  sub_23A612294(v0);
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_23A619924()
{
  uint64_t v0;

  return sub_23A612758(v0);
}

uint64_t sub_23A61992C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A619950()
{
  uint64_t v0;

  return sub_23A612DE0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23A61995C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC11DockKitCore16DockKitIDSClient_boundingBoxes);
  return swift_bridgeObjectRetain();
}

unint64_t sub_23A619988()
{
  unint64_t result;

  result = qword_25699F728;
  if (!qword_25699F728)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSMessageType, &type metadata for DockKitIDSMessageType);
    atomic_store(result, (unint64_t *)&qword_25699F728);
  }
  return result;
}

unint64_t sub_23A6199D0()
{
  unint64_t result;

  result = qword_25699F730;
  if (!qword_25699F730)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitCameraCommand, &type metadata for DockKitCameraCommand);
    atomic_store(result, (unint64_t *)&qword_25699F730);
  }
  return result;
}

unint64_t sub_23A619A18()
{
  unint64_t result;

  result = qword_25699F738;
  if (!qword_25699F738)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSMessagingError, &type metadata for DockKitIDSMessagingError);
    atomic_store(result, (unint64_t *)&qword_25699F738);
  }
  return result;
}

unint64_t sub_23A619A64()
{
  unint64_t result;

  result = qword_25699F740;
  if (!qword_25699F740)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DKIDSKeepAliveType, &type metadata for DKIDSKeepAliveType);
    atomic_store(result, (unint64_t *)&qword_25699F740);
  }
  return result;
}

unint64_t sub_23A619AAC()
{
  unint64_t result;

  result = qword_25699F748;
  if (!qword_25699F748)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSClient.DKIDSClientState, &type metadata for DockKitIDSClient.DKIDSClientState);
    atomic_store(result, (unint64_t *)&qword_25699F748);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DockKitIDSMessageType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DockKitIDSMessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_23A619BCC + 4 * byte_23A696973[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_23A619C00 + 4 * byte_23A69696E[v4]))();
}

uint64_t sub_23A619C00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A619C08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A619C10);
  return result;
}

uint64_t sub_23A619C1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A619C24);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_23A619C28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A619C30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DockKitIDSMessageType()
{
  return &type metadata for DockKitIDSMessageType;
}

uint64_t *initializeBufferWithCopyOfBuffer for DockKitIDSMessage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23A69072C();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(a3 + 24);
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v16 = *(_QWORD *)v13;
      sub_23A5CA298(*(_QWORD *)v13, *((_QWORD *)v13 + 1));
      *(_QWORD *)v12 = v16;
      *((_QWORD *)v12 + 1) = v14;
    }
  }
  return v4;
}

uint64_t destroy for DockKitIDSMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t *v7;
  unint64_t v8;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23A69072C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v7 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  v8 = v7[1];
  if (v8 >> 60 != 15)
    return sub_23A5CA254(*v7, v8);
  return result;
}

_BYTE *initializeWithCopy for DockKitIDSMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  unint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23A69072C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  else
  {
    v14 = *(_QWORD *)v12;
    sub_23A5CA298(*(_QWORD *)v12, *((_QWORD *)v12 + 1));
    *(_QWORD *)v11 = v14;
    *((_QWORD *)v11 + 1) = v13;
  }
  return a1;
}

_BYTE *assignWithCopy for DockKitIDSMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23A69072C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (uint64_t *)&a1[v10];
  v12 = (uint64_t *)&a2[v10];
  v13 = *(_QWORD *)&a2[v10 + 8];
  if (*(_QWORD *)&a1[v10 + 8] >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      v15 = *v12;
      sub_23A5CA298(v15, v13);
      v16 = *v11;
      v17 = v11[1];
      *v11 = v15;
      v11[1] = v13;
      sub_23A5CA254(v16, v17);
      return a1;
    }
    sub_23A619F2C((uint64_t)v11);
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    return a1;
  }
  v14 = *v12;
  sub_23A5CA298(v14, v13);
  *v11 = v14;
  v11[1] = v13;
  return a1;
}

uint64_t sub_23A619F2C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

_BYTE *initializeWithTake for DockKitIDSMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23A69072C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *assignWithTake for DockKitIDSMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23A69072C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (uint64_t *)&a1[v10];
  v12 = (uint64_t *)&a2[v10];
  v13 = *(_QWORD *)&a1[v10 + 8];
  if (v13 >> 60 != 15)
  {
    v14 = v12[1];
    if (v14 >> 60 != 15)
    {
      v15 = *v11;
      *v11 = *v12;
      v11[1] = v14;
      sub_23A5CA254(v15, v13);
      return a1;
    }
    sub_23A619F2C((uint64_t)v11);
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
  return a1;
}

uint64_t getEnumTagSinglePayload for DockKitIDSMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A61A0A0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 239)
  {
    v4 = *a1;
    if (v4 >= 0x11)
      return v4 - 16;
    else
      return 0;
  }
  else
  {
    v8 = sub_23A69072C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DockKitIDSMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_23A61A120(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 239)
  {
    *result = a2 + 16;
  }
  else
  {
    v7 = sub_23A69072C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23A61A190()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A69072C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DockKitCameraCommand()
{
  return &type metadata for DockKitCameraCommand;
}

uint64_t destroy for DockKitCameraCommandPayload(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 16);
  if (v1 >> 60 != 15)
    return sub_23A5CA254(*(_QWORD *)(result + 8), v1);
  return result;
}

uint64_t _s11DockKitCore27DockKitCameraCommandPayloadVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (uint64_t *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v3;
  }
  else
  {
    v5 = *v3;
    sub_23A5CA298(*v3, *(_QWORD *)(a2 + 16));
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for DockKitCameraCommandPayload(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  v4 = (uint64_t *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_23A5CA298(*v4, *(_QWORD *)(a2 + 16));
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v5;
      sub_23A5CA254(v8, v9);
      return a1;
    }
    sub_23A619F2C(a1 + 8);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *v3 = *(_OWORD *)v4;
    return a1;
  }
  v6 = *v4;
  sub_23A5CA298(*v4, *(_QWORD *)(a2 + 16));
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithTake for DockKitCameraCommandPayload(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 16);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)(a1 + 8) = *v5;
      *(_QWORD *)(a1 + 16) = v7;
      sub_23A5CA254(v8, v6);
      return a1;
    }
    sub_23A619F2C(a1 + 8);
  }
  *v4 = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for DockKitCameraCommandPayload(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && a1[24])
    return (*(_DWORD *)a1 + 253);
  v3 = *a1;
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DockKitCameraCommandPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for DockKitCameraCommandPayload()
{
  return &type metadata for DockKitCameraCommandPayload;
}

uint64_t destroy for DockKitIDSInfo(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DockKitIDSInfo(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DockKitIDSInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DockKitIDSInfo(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DockKitIDSInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DockKitIDSInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DockKitIDSInfo()
{
  return &type metadata for DockKitIDSInfo;
}

uint64_t *initializeBufferWithCopyOfBuffer for DockKitBoundingBox(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 32);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23A69072C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for DockKitBoundingBox(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_23A69072C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *initializeWithCopy for DockKitBoundingBox(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23A69072C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithCopy for DockKitBoundingBox(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23A69072C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for DockKitBoundingBox(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23A69072C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *assignWithTake for DockKitBoundingBox(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23A69072C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for DockKitBoundingBox()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A61A8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 32);
  v5 = sub_23A69072C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for DockKitBoundingBox()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23A61A928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 32);
  v6 = sub_23A69072C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_23A61A96C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A69072C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DockKitIDSMessagingError()
{
  return &type metadata for DockKitIDSMessagingError;
}

uint64_t method lookup function for DKIDSHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKIDSHandler.service(_:account:incomingData:fromID:context:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x50))();
}

uint64_t dispatch thunk of DKIDSHandler.service(_:account:incomingMessage:fromID:context:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of DKIDSHandler.service(_:devicesChanged:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DKIDSHandler.service(_:connectedDevicesChanged:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DKIDSHandler.enumerateDevices(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DKIDSHandler.handleDockKitIDSMessage(_:from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

ValueMetadata *type metadata accessor for DKIDSKeepAliveType()
{
  return &type metadata for DKIDSKeepAliveType;
}

uint64_t dispatch thunk of DKIDSKeepAliveMonitor.keepAliveFailed(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of DKIDSKeepAliveMonitor.triggerKeepAlive()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DKIDSKeepAliveMonitor.keepAliveStarted(timer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for DKIDSKeepAlive()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKIDSKeepAlive.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of DKIDSKeepAlive.setDelegate(delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKIDSKeepAlive.expire(from:fail:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKIDSKeepAlive.monitor(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKIDSKeepAlive.startKeepAlive()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKIDSKeepAlive.stopKeepAlive()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t method lookup function for DKIDSMessagingCenter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKIDSMessagingCenter.__allocating_init(serviceName:delegate:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DockKitIDSClientDelegate.stateChanged(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of DockKitIDSClientDelegate.accessoryAddedOrUpdated(_:oldInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of DockKitIDSClientDelegate.accessoryRemoved(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DockKitIDSClientDelegate.boundingBoxesUpdated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of DockKitIDSClientDelegate.keepAliveExpired()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DockKitIDSClientDelegate.keepAliveStarted(timer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_23A61AB84()
{
  return type metadata accessor for DockKitIDSClient(0);
}

uint64_t sub_23A61AB8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A69072C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DockKitIDSClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DockKitIDSClient.__allocating_init(_:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 408))();
}

uint64_t dispatch thunk of DockKitIDSClient.setDelegate(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of DockKitIDSClient.isRegistered.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of DockKitIDSClient.keepAliveFailed(from:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of DockKitIDSClient.keepAliveStarted(timer:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of DockKitIDSClient.triggerKeepAlive()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of DockKitIDSClient.activeAccessory()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of DockKitIDSClient.register()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of DockKitIDSClient.deRegister()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of DockKitIDSClient.setSystemTracking(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x200))();
}

uint64_t dispatch thunk of DockKitIDSClient.faceBoundingBoxes()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x208))();
}

uint64_t dispatch thunk of DockKitIDSClient.handleDebugMessage(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x210))();
}

uint64_t dispatch thunk of DockKitIDSClient.handleObjectsMessage(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x218))();
}

uint64_t dispatch thunk of DockKitIDSClient.send(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x220))();
}

uint64_t dispatch thunk of DockKitIDSClient.send(type:payload:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x228))();
}

uint64_t _s11DockKitCore20DockKitCameraCommandOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23A61AE74 + 4 * byte_23A69697D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23A61AEA8 + 4 * byte_23A696978[v4]))();
}

uint64_t sub_23A61AEA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61AEB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A61AEB8);
  return result;
}

uint64_t sub_23A61AEC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A61AECCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23A61AED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61AED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DockKitIDSClient.DKIDSClientState()
{
  return &type metadata for DockKitIDSClient.DKIDSClientState;
}

uint64_t getEnumTagSinglePayload for DKIDSKeepAlive.DKIDSKeepAliveRecord(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DKIDSKeepAlive.DKIDSKeepAliveRecord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIDSKeepAlive.DKIDSKeepAliveRecord()
{
  return &type metadata for DKIDSKeepAlive.DKIDSKeepAliveRecord;
}

uint64_t _s11DockKitCore24DockKitIDSMessagingErrorOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11DockKitCore24DockKitIDSMessagingErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23A61B068 + 4 * byte_23A696987[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23A61B09C + 4 * byte_23A696982[v4]))();
}

uint64_t sub_23A61B09C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61B0A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A61B0ACLL);
  return result;
}

uint64_t sub_23A61B0B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A61B0C0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23A61B0C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61B0CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DockKitIDSMessagingError.CodingKeys()
{
  return &type metadata for DockKitIDSMessagingError.CodingKeys;
}

ValueMetadata *type metadata accessor for DockKitIDSMessagingError.NoPairedDeviceCodingKeys()
{
  return &type metadata for DockKitIDSMessagingError.NoPairedDeviceCodingKeys;
}

ValueMetadata *type metadata accessor for DockKitIDSMessagingError.UnsupportedMessageTypeCodingKeys()
{
  return &type metadata for DockKitIDSMessagingError.UnsupportedMessageTypeCodingKeys;
}

ValueMetadata *type metadata accessor for DockKitIDSMessagingError.UnrecognizedClientCodingKeys()
{
  return &type metadata for DockKitIDSMessagingError.UnrecognizedClientCodingKeys;
}

ValueMetadata *type metadata accessor for DockKitIDSMessagingError.NotRegisteredCodingKeys()
{
  return &type metadata for DockKitIDSMessagingError.NotRegisteredCodingKeys;
}

ValueMetadata *type metadata accessor for DockKitIDSMessagingError.InvalidOrMissingParametersCodingKeys()
{
  return &type metadata for DockKitIDSMessagingError.InvalidOrMissingParametersCodingKeys;
}

ValueMetadata *type metadata accessor for DockKitIDSMessagingError.ArgumentNotNormalizedCodingKeys()
{
  return &type metadata for DockKitIDSMessagingError.ArgumentNotNormalizedCodingKeys;
}

ValueMetadata *type metadata accessor for DockKitIDSMessagingError.NotImplementedCodingKeys()
{
  return &type metadata for DockKitIDSMessagingError.NotImplementedCodingKeys;
}

ValueMetadata *type metadata accessor for DockKitBoundingBox.CodingKeys()
{
  return &type metadata for DockKitBoundingBox.CodingKeys;
}

uint64_t _s11DockKitCore18DockKitBoundingBoxV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23A61B1BC + 4 * byte_23A696991[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23A61B1F0 + 4 * byte_23A69698C[v4]))();
}

uint64_t sub_23A61B1F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61B1F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A61B200);
  return result;
}

uint64_t sub_23A61B20C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A61B214);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23A61B218(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61B220(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DockKitIDSInfo.CodingKeys()
{
  return &type metadata for DockKitIDSInfo.CodingKeys;
}

uint64_t _s11DockKitCore18DKIDSKeepAliveTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23A61B288 + 4 * byte_23A69699B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23A61B2BC + 4 * byte_23A696996[v4]))();
}

uint64_t sub_23A61B2BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61B2C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A61B2CCLL);
  return result;
}

uint64_t sub_23A61B2D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A61B2E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23A61B2E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61B2EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DockKitCameraCommandPayload.CodingKeys()
{
  return &type metadata for DockKitCameraCommandPayload.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DockKitIDSMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A61B354 + 4 * byte_23A6969A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A61B388 + 4 * byte_23A6969A0[v4]))();
}

uint64_t sub_23A61B388(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61B390(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A61B398);
  return result;
}

uint64_t sub_23A61B3A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A61B3ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A61B3B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A61B3B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DockKitIDSMessage.CodingKeys()
{
  return &type metadata for DockKitIDSMessage.CodingKeys;
}

unint64_t sub_23A61B3D8()
{
  unint64_t result;

  result = qword_25699FAE0;
  if (!qword_25699FAE0)
  {
    result = MEMORY[0x23B853B34](&unk_23A69754C, &type metadata for DockKitIDSMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FAE0);
  }
  return result;
}

unint64_t sub_23A61B420()
{
  unint64_t result;

  result = qword_25699FAE8;
  if (!qword_25699FAE8)
  {
    result = MEMORY[0x23B853B34](&unk_23A697604, &type metadata for DockKitCameraCommandPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FAE8);
  }
  return result;
}

unint64_t sub_23A61B468()
{
  unint64_t result;

  result = qword_25699FAF0;
  if (!qword_25699FAF0)
  {
    result = MEMORY[0x23B853B34](&unk_23A6976BC, &type metadata for DockKitIDSInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FAF0);
  }
  return result;
}

unint64_t sub_23A61B4B0()
{
  unint64_t result;

  result = qword_25699FAF8;
  if (!qword_25699FAF8)
  {
    result = MEMORY[0x23B853B34](&unk_23A697774, &type metadata for DockKitBoundingBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FAF8);
  }
  return result;
}

unint64_t sub_23A61B4F8()
{
  unint64_t result;

  result = qword_25699FB00;
  if (!qword_25699FB00)
  {
    result = MEMORY[0x23B853B34](&unk_23A697A5C, &type metadata for DockKitIDSMessagingError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB00);
  }
  return result;
}

unint64_t sub_23A61B540()
{
  unint64_t result;

  result = qword_25699FB08;
  if (!qword_25699FB08)
  {
    result = MEMORY[0x23B853B34](&unk_23A69797C, &type metadata for DockKitIDSMessagingError.NoPairedDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB08);
  }
  return result;
}

unint64_t sub_23A61B588()
{
  unint64_t result;

  result = qword_25699FB10;
  if (!qword_25699FB10)
  {
    result = MEMORY[0x23B853B34](&unk_23A6979A4, &type metadata for DockKitIDSMessagingError.NoPairedDeviceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB10);
  }
  return result;
}

unint64_t sub_23A61B5D0()
{
  unint64_t result;

  result = qword_25699FB18;
  if (!qword_25699FB18)
  {
    result = MEMORY[0x23B853B34](&unk_23A69792C, &type metadata for DockKitIDSMessagingError.UnsupportedMessageTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB18);
  }
  return result;
}

unint64_t sub_23A61B618()
{
  unint64_t result;

  result = qword_25699FB20;
  if (!qword_25699FB20)
  {
    result = MEMORY[0x23B853B34](&unk_23A697954, &type metadata for DockKitIDSMessagingError.UnsupportedMessageTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB20);
  }
  return result;
}

unint64_t sub_23A61B660()
{
  unint64_t result;

  result = qword_25699FB28;
  if (!qword_25699FB28)
  {
    result = MEMORY[0x23B853B34](&unk_23A6978DC, &type metadata for DockKitIDSMessagingError.UnrecognizedClientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB28);
  }
  return result;
}

unint64_t sub_23A61B6A8()
{
  unint64_t result;

  result = qword_25699FB30;
  if (!qword_25699FB30)
  {
    result = MEMORY[0x23B853B34](&unk_23A697904, &type metadata for DockKitIDSMessagingError.UnrecognizedClientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB30);
  }
  return result;
}

unint64_t sub_23A61B6F0()
{
  unint64_t result;

  result = qword_25699FB38;
  if (!qword_25699FB38)
  {
    result = MEMORY[0x23B853B34](&unk_23A69788C, &type metadata for DockKitIDSMessagingError.NotRegisteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB38);
  }
  return result;
}

unint64_t sub_23A61B738()
{
  unint64_t result;

  result = qword_25699FB40;
  if (!qword_25699FB40)
  {
    result = MEMORY[0x23B853B34](&unk_23A6978B4, &type metadata for DockKitIDSMessagingError.NotRegisteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB40);
  }
  return result;
}

unint64_t sub_23A61B780()
{
  unint64_t result;

  result = qword_25699FB48;
  if (!qword_25699FB48)
  {
    result = MEMORY[0x23B853B34](&unk_23A69783C, &type metadata for DockKitIDSMessagingError.InvalidOrMissingParametersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB48);
  }
  return result;
}

unint64_t sub_23A61B7C8()
{
  unint64_t result;

  result = qword_25699FB50;
  if (!qword_25699FB50)
  {
    result = MEMORY[0x23B853B34](&unk_23A697864, &type metadata for DockKitIDSMessagingError.InvalidOrMissingParametersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB50);
  }
  return result;
}

unint64_t sub_23A61B810()
{
  unint64_t result;

  result = qword_25699FB58;
  if (!qword_25699FB58)
  {
    result = MEMORY[0x23B853B34](&unk_23A6977EC, &type metadata for DockKitIDSMessagingError.ArgumentNotNormalizedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB58);
  }
  return result;
}

unint64_t sub_23A61B858()
{
  unint64_t result;

  result = qword_25699FB60;
  if (!qword_25699FB60)
  {
    result = MEMORY[0x23B853B34](&unk_23A697814, &type metadata for DockKitIDSMessagingError.ArgumentNotNormalizedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB60);
  }
  return result;
}

unint64_t sub_23A61B8A0()
{
  unint64_t result;

  result = qword_25699FB68;
  if (!qword_25699FB68)
  {
    result = MEMORY[0x23B853B34](&unk_23A69779C, &type metadata for DockKitIDSMessagingError.NotImplementedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB68);
  }
  return result;
}

unint64_t sub_23A61B8E8()
{
  unint64_t result;

  result = qword_25699FB70;
  if (!qword_25699FB70)
  {
    result = MEMORY[0x23B853B34](&unk_23A6977C4, &type metadata for DockKitIDSMessagingError.NotImplementedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB70);
  }
  return result;
}

unint64_t sub_23A61B930()
{
  unint64_t result;

  result = qword_25699FB78;
  if (!qword_25699FB78)
  {
    result = MEMORY[0x23B853B34](&unk_23A6979CC, &type metadata for DockKitIDSMessagingError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB78);
  }
  return result;
}

unint64_t sub_23A61B978()
{
  unint64_t result;

  result = qword_25699FB80;
  if (!qword_25699FB80)
  {
    result = MEMORY[0x23B853B34](&unk_23A6979F4, &type metadata for DockKitIDSMessagingError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB80);
  }
  return result;
}

unint64_t sub_23A61B9C0()
{
  unint64_t result;

  result = qword_25699FB88;
  if (!qword_25699FB88)
  {
    result = MEMORY[0x23B853B34](&unk_23A6976E4, &type metadata for DockKitBoundingBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB88);
  }
  return result;
}

unint64_t sub_23A61BA08()
{
  unint64_t result;

  result = qword_25699FB90;
  if (!qword_25699FB90)
  {
    result = MEMORY[0x23B853B34](&unk_23A69770C, &type metadata for DockKitBoundingBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB90);
  }
  return result;
}

unint64_t sub_23A61BA50()
{
  unint64_t result;

  result = qword_25699FB98;
  if (!qword_25699FB98)
  {
    result = MEMORY[0x23B853B34](&unk_23A69762C, &type metadata for DockKitIDSInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FB98);
  }
  return result;
}

unint64_t sub_23A61BA98()
{
  unint64_t result;

  result = qword_25699FBA0;
  if (!qword_25699FBA0)
  {
    result = MEMORY[0x23B853B34](&unk_23A697654, &type metadata for DockKitIDSInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FBA0);
  }
  return result;
}

unint64_t sub_23A61BAE0()
{
  unint64_t result;

  result = qword_25699FBA8;
  if (!qword_25699FBA8)
  {
    result = MEMORY[0x23B853B34](&unk_23A697574, &type metadata for DockKitCameraCommandPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FBA8);
  }
  return result;
}

unint64_t sub_23A61BB28()
{
  unint64_t result;

  result = qword_25699FBB0;
  if (!qword_25699FBB0)
  {
    result = MEMORY[0x23B853B34](&unk_23A69759C, &type metadata for DockKitCameraCommandPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FBB0);
  }
  return result;
}

unint64_t sub_23A61BB70()
{
  unint64_t result;

  result = qword_25699FBB8;
  if (!qword_25699FBB8)
  {
    result = MEMORY[0x23B853B34](&unk_23A6974BC, &type metadata for DockKitIDSMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FBB8);
  }
  return result;
}

unint64_t sub_23A61BBB8()
{
  unint64_t result;

  result = qword_25699FBC0;
  if (!qword_25699FBC0)
  {
    result = MEMORY[0x23B853B34](&unk_23A6974E4, &type metadata for DockKitIDSMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25699FBC0);
  }
  return result;
}

uint64_t sub_23A61BBFC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FBD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id *sub_23A61BC3C(id *a1)
{
  id v2;

  v2 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_23A61BC84(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23A61BCBC(uint64_t a1, uint64_t a2)
{
  assignWithTake for DockKitIDSInfo(a2, a1);
  return a2;
}

unint64_t sub_23A61BCF0()
{
  unint64_t result;

  result = qword_25699FBE8;
  if (!qword_25699FBE8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSClient.DKIDSClientState, &type metadata for DockKitIDSClient.DKIDSClientState);
    atomic_store(result, (unint64_t *)&qword_25699FBE8);
  }
  return result;
}

unint64_t sub_23A61BD34()
{
  unint64_t result;

  result = qword_25699FBF0;
  if (!qword_25699FBF0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DKIDSKeepAliveType, &type metadata for DKIDSKeepAliveType);
    atomic_store(result, (unint64_t *)&qword_25699FBF0);
  }
  return result;
}

unint64_t sub_23A61BD78()
{
  unint64_t result;

  result = qword_25699FBF8;
  if (!qword_25699FBF8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitCameraCommand, &type metadata for DockKitCameraCommand);
    atomic_store(result, (unint64_t *)&qword_25699FBF8);
  }
  return result;
}

unint64_t sub_23A61BDBC()
{
  unint64_t result;

  result = qword_25699FC00;
  if (!qword_25699FC00)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSMessageType, &type metadata for DockKitIDSMessageType);
    atomic_store(result, (unint64_t *)&qword_25699FC00);
  }
  return result;
}

uint64_t sub_23A61BE00(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_23A61BE10()
{
  uint64_t v0;

  sub_23A611390(v0);
}

unint64_t sub_23A61BE18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25699FC18;
  if (!qword_25699FC18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25699F720);
    v2 = sub_23A5F0550(&qword_25699FC20, type metadata accessor for DockKitBoundingBox, (uint64_t)&protocol conformance descriptor for DockKitBoundingBox);
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25699FC18);
  }
  return result;
}

uint64_t sub_23A61BE94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23A61BEC0()
{
  uint64_t v0;

  return sub_23A610E80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_23A61BEC8()
{
  unint64_t result;

  result = qword_25699FC28;
  if (!qword_25699FC28)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSMessagingError, &type metadata for DockKitIDSMessagingError);
    atomic_store(result, (unint64_t *)&qword_25699FC28);
  }
  return result;
}

unint64_t sub_23A61BF0C()
{
  unint64_t result;

  result = qword_25699FC38;
  if (!qword_25699FC38)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DockKitIDSInfo, &type metadata for DockKitIDSInfo);
    atomic_store(result, (unint64_t *)&qword_25699FC38);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23A61BF90(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_23A61BFCC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_23A61C000(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23A61C00C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

id sub_23A61C030(void *a1)
{
  return sub_23A60D734(a1);
}

void *sub_23A61C078()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  v2 = v1;
  return v1;
}

void *sub_23A61C0A4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_sensorController);
  v2 = v1;
  return v1;
}

void sub_23A61C0D0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  id v7;

  v3 = *a1;
  v4 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  v5 = *(id *)(*a1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore);
  sub_23A691104();

  v6 = *(_BYTE *)(v3 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled);
  v7 = *(id *)(v3 + v4);
  sub_23A691110();

  *a2 = v6;
}

void sub_23A61C140(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;

  v2 = *a1;
  v3 = *a2;
  v4 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  v5 = *(id *)(*a2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore);
  sub_23A691104();

  *(_BYTE *)(v3 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled) = v2;
  v6 = *(id *)(v3 + v4);
  sub_23A691110();

}

uint64_t sub_23A61C1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  v3 = *(id *)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore);
  sub_23A691104();

  v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled);
  v5 = *(id *)(v1 + v2);
  sub_23A691110();

  return v4;
}

void sub_23A61C214(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  id v6;

  v2 = v1;
  v4 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  v5 = *(id *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore);
  sub_23A691104();

  *(_BYTE *)(v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled) = a1;
  v6 = *(id *)(v2 + v4);
  sub_23A691110();

}

void (*sub_23A61C284(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char v7;
  id v8;

  v2 = v1;
  v4 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(id *)(v1 + v4);
  sub_23A691104();

  v6 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled;
  *(_QWORD *)(a1 + 16) = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled;
  v7 = *(_BYTE *)(v2 + v6);
  v8 = *(id *)(v2 + v4);
  sub_23A691110();

  *(_BYTE *)(a1 + 24) = v7;
  return sub_23A61C308;
}

void sub_23A61C308(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  id v6;

  v2 = a1[1];
  v1 = a1[2];
  v3 = *a1;
  v4 = *((_BYTE *)a1 + 24);
  v5 = *(id *)(*a1 + v2);
  sub_23A691104();

  *(_BYTE *)(v3 + v1) = v4;
  v6 = *(id *)(v3 + v2);
  sub_23A691110();

}

uint64_t sub_23A61C374()
{
  return swift_retain();
}

uint64_t sub_23A61C384(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummaryDebug) = a1;
  return swift_release();
}

uint64_t (*sub_23A61C39C())()
{
  return nullsub_1;
}

uint64_t sub_23A61C3B4()
{
  return swift_retain();
}

uint64_t sub_23A61C3C4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummary) = a1;
  return swift_release();
}

uint64_t (*sub_23A61C3DC())()
{
  return nullsub_1;
}

uint64_t sub_23A61C3F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  id v7;
  void *v8;
  id v9;
  void *v10;

  v1 = OBJC_IVAR____TtC11DockKitCore13TrackingStand____lazy_storage___trackingSensor;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand____lazy_storage___trackingSensor);
  v3 = v2;
  if (v2 != (void *)1)
    goto LABEL_13;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_sensorController))
  {
    v3 = 0;
    *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand____lazy_storage___trackingSensor) = 0;
LABEL_13:
    sub_23A62CB28(v2);
    return (uint64_t)v3;
  }
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23A61C534(v4);
  result = swift_bridgeObjectRelease();
  if (!(v5 >> 62))
  {
    v3 = *(void **)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_5;
LABEL_11:
    swift_bridgeObjectRelease();
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v3 = (void *)sub_23A691374();
  result = swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_11;
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v7 = (id)MEMORY[0x23B85312C](0, v5);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v5 + 32);
LABEL_8:
    v3 = v7;
    swift_bridgeObjectRelease();
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v9 = v3;
    v10 = v8;
LABEL_12:
    sub_23A62C940(v10);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_23A61C534(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_22:
    v14 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    type metadata accessor for SensorTracker();
    result = swift_dynamicCastClass();
    if (result)
    {
      MEMORY[0x23B852D78](v14);
      if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23A690F3C();
      sub_23A690F48();
      result = sub_23A690F30();
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_21;
  v8 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_26;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

id TrackingStand.__allocating_init(info:systems:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return TrackingStand.init(info:systems:)(a1, a2);
}

id TrackingStand.init(info:systems:)(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  id v63;
  id v64;
  id v65;
  _QWORD v67[4];
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v91 = a1;
  v92 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FC90);
  v89 = *(_QWORD *)(v3 - 8);
  v90 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v88 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F0C0);
  v86 = *(_QWORD *)(v5 - 8);
  v87 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FCA0);
  MEMORY[0x24BDAC7A8](v7);
  v84 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23A690B64();
  v82 = *(_QWORD *)(v9 - 8);
  v83 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v81 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A690984();
  v78 = *(_QWORD *)(v11 - 8);
  v79 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v77 = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23A690CB4();
  MEMORY[0x24BDAC7A8](v13);
  v80 = (char *)v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v74 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v73 = (char *)v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_23A691080();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v70 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23A69105C();
  MEMORY[0x24BDAC7A8](v17);
  v18 = sub_23A690D50();
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore13TrackingStand_sensorController] = 0;
  v19 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  v20 = v2;
  *(_QWORD *)&v2[v19] = dispatch_semaphore_create(1);
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled] = 0;
  v21 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingMetrics;
  type metadata accessor for TrackingMetrics(0);
  swift_allocObject();
  *(_QWORD *)&v20[v21] = sub_23A67E9C8();
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_assertion] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoCheckTimer] = 0;
  v22 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoLock;
  *(_QWORD *)&v20[v22] = dispatch_semaphore_create(1);
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoStreamConnected] = 0;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_motionStopped] = 0;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_useDeviceMotion] = 1;
  v23 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerLock;
  v69 = sub_23A690960();
  *(_QWORD *)&v20[v23] = sub_23A690954();
  v24 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerRunningLock;
  v25 = type metadata accessor for LockActor();
  v26 = swift_allocObject();
  swift_defaultActor_initialize();
  v27 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v26 + 112) = 1;
  *(_QWORD *)(v26 + 120) = v27;
  v28 = v27;
  *(_QWORD *)&v20[v24] = v26;
  v29 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_positionCommandLock;
  v75 = v25;
  v30 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v30 + 112) = 1;
  *(_QWORD *)(v30 + 120) = v28;
  *(_QWORD *)&v20[v29] = v30;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingRunning] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTimer] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerTimerInterval] = 0x3FA1111111111111;
  sub_23A6906CC();
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_observations] = v28;
  v31 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_observationsLock;
  v32 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v32 + 112) = 1;
  *(_QWORD *)(v32 + 120) = v28;
  *(_QWORD *)&v20[v31] = v32;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_maxObservations] = 1;
  v33 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_appID];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0xE000000000000000;
  v34 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_aspectRatio;
  *(_QWORD *)&v20[v34] = sub_23A5C96AC(v28);
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_userOverridedAspectRatio] = 0;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_flipCamera] = 0;
  v68 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_processingQueue;
  sub_23A5D03A4(0, (unint64_t *)&qword_2542D2820);
  sub_23A690D38();
  v94 = v28;
  v67[2] = sub_23A5F0550((unint64_t *)&qword_2542D2810, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  v67[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27D0);
  v67[3] = sub_23A62A2E4();
  sub_23A691200();
  v35 = *MEMORY[0x24BEE5750];
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v37 = v70;
  v38 = v72;
  v36(v70, v35, v72);
  *(_QWORD *)&v20[v68] = sub_23A6910A4();
  v71 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingQueue;
  sub_23A690D44();
  v94 = MEMORY[0x24BEE4AF8];
  sub_23A691200();
  v36(v37, v35, v38);
  *(_QWORD *)&v20[v71] = sub_23A6910A4();
  v39 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_debugMessageCallbacks;
  v40 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v20[v39] = sub_23A5BDE24(MEMORY[0x24BEE4AF8]);
  v41 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_intelligentTrackingLock;
  *(_QWORD *)&v20[v41] = sub_23A690954();
  v42 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking];
  v94 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FCD0);
  v43 = v73;
  sub_23A6909C0();
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v42, v43, v76);
  v44 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_cameraManager;
  (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, *MEMORY[0x24BE5B578], v79);
  (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v81, *MEMORY[0x24BE5B768], v83);
  v45 = sub_23A690C48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v84, 1, 1, v45);
  sub_23A690C90();
  sub_23A690A20();
  swift_allocObject();
  *(_QWORD *)&v20[v44] = sub_23A690A08();
  sub_23A69066C();
  v46 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummaryDebug;
  v94 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FCD8);
  swift_allocObject();
  *(_QWORD *)&v20[v46] = sub_23A690A68();
  v47 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummary;
  v94 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FCE0);
  swift_allocObject();
  *(_QWORD *)&v20[v47] = sub_23A690A68();
  v48 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuatorPositionEpsilon;
  v93 = 0x4014000000000000;
  sub_23A62A330();
  sub_23A690DC8();
  *(_QWORD *)&v20[v48] = v94;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_isInferenceEnabled] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand____lazy_storage___trackingSensor] = 1;
  v49 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__selectedFaceIDs];
  v94 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FD00);
  v50 = v85;
  sub_23A6909C0();
  v51 = v87;
  v52 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
  v52(v49, v50, v87);
  v53 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__selectedBodyIDs];
  v94 = v40;
  sub_23A6909C0();
  v52(v53, v50, v51);
  v54 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTaskLock;
  v55 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v55 + 112) = 1;
  *(_QWORD *)(v55 + 120) = v40;
  *(_QWORD *)&v20[v54] = v55;
  v56 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_observationLock;
  v57 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v57 + 112) = 1;
  *(_QWORD *)(v57 + 120) = v40;
  *(_QWORD *)&v20[v56] = v57;
  v58 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_currentObservation];
  *(_QWORD *)v58 = 0;
  *((_QWORD *)v58 + 1) = 0;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_debugEnabled] = 0;
  v59 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_cameraFPSTracker;
  sub_23A6909B4();
  swift_allocObject();
  *(_QWORD *)&v20[v59] = sub_23A6909A8();
  v60 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationLock;
  *(_QWORD *)&v20[v60] = sub_23A690954();
  v61 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__lastLatency];
  v94 = 0x3FA0E5604189374CLL;
  v62 = v88;
  sub_23A6909C0();
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v61, v62, v90);

  v63 = v91;
  v64 = sub_23A607414(v63, v92);

  v65 = v64;
  sub_23A61D8B0();

  return v65;
}

uint64_t sub_23A61D1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();

  v1 = v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_timeElapsedSinceStartup;
  v2 = sub_23A6906D8();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  v4 = v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  v3(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastSummaryPrintTime, v2);
  swift_release();
  swift_release();
  sub_23A62C940(*(id *)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand____lazy_storage___trackingSensor));
  v6 = v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__selectedFaceIDs;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F0C0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__selectedBodyIDs, v7);
  swift_release();
  swift_release();
  sub_23A62AE70(*(void **)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_currentObservation), *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_currentObservation + 8));
  swift_release();
  swift_release();
  v9 = v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__lastLatency;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FC90);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

id TrackingStand.__deallocating_deinit()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  objc_class *v9;
  objc_super v11;

  v1 = v0;
  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, (uint64_t)v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
  v6 = sub_23A690CFC();
  v7 = sub_23A691044();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_23A5B0000, v6, v7, "TrackingStand deinit", v8, 2u);
    MEMORY[0x23B853BD0](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = (objc_class *)type metadata accessor for TrackingStand();
  v11.receiver = v1;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, sel_dealloc);
}

void sub_23A61D8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)sub_23A690E04();
  v7 = (void *)MGGetStringAnswer();

  if (v7)
  {
    v21 = 0;
    v22 = 0;
    sub_23A690E10();

    if (v22)
    {
      v8 = sub_23A62A508((uint64_t)&unk_250B724C0);
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v8 + 16);
      swift_bridgeObjectRelease();
      if (v9)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
        v10 = sub_23A690CFC();
        v11 = sub_23A691044();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = (uint8_t *)swift_slowAlloc();
          v13 = swift_slowAlloc();
          v21 = v13;
          *(_DWORD *)v12 = 136315138;
          v20 = sub_23A5EEB40(0x72756769666E6F63, 0xEB00000000292865, &v21);
          sub_23A6911D0();
          _os_log_impl(&dword_23A5B0000, v10, v11, "%s Recognition is disabled", v12, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B853BD0](v13, -1, -1);
          MEMORY[0x23B853BD0](v12, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_isInferenceEnabled) = 0;
      }
    }
  }
  v14 = sub_23A5F6134(0);
  if (v14)
  {
    v15 = (void *)v14;
    type metadata accessor for ActuationController();
    v14 = swift_dynamicCastClass();
    if (!v14)
    {

      v14 = 0;
    }
  }
  v16 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController) = v14;

  v17 = sub_23A5F6134(1);
  if (v17)
  {
    v18 = (void *)v17;
    type metadata accessor for SensorController();
    v17 = swift_dynamicCastClass();
    if (!v17)
    {

      v17 = 0;
    }
  }
  v19 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_sensorController);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_sensorController) = v17;

}

uint64_t sub_23A61DB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  char v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  _QWORD *v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  _QWORD *v90;

  v1 = v0;
  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (unint64_t)&v88 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (uint8_t *)&v88 - v10;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_appID);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_appID + 8);
  if (v12 == 0xD000000000000012 && v13 == 0x800000023A69E680 || (sub_23A691518() & 1) != 0)
  {
    (*(void (**)(uint8_t *, uint64_t, uint64_t))(v3 + 16))(v11, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
    v14 = sub_23A690CFC();
    v15 = sub_23A691044();
    if (os_log_type_enabled(v14, v15))
    {
      v9 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v90 = (_QWORD *)v16;
      *(_DWORD *)v9 = 136315138;
      v89 = sub_23A5EEB40(0xD00000000000001ELL, 0x800000023A69E6E0, (uint64_t *)&v90);
      sub_23A6911D0();
      _os_log_impl(&dword_23A5B0000, v14, v15, "%s Setting 1:1 aspect ratio for FaceTime", (uint8_t *)v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v16, -1, -1);
      MEMORY[0x23B853BD0](v9, -1, -1);
    }

    (*(void (**)(uint8_t *, uint64_t))(v3 + 8))(v11, v2);
    v17 = 0;
    v18 = (_QWORD *)OBJC_IVAR____TtC11DockKitCore13TrackingStand_aspectRatio;
    __asm { FMOV            V0.2D, #1.0 }
    v88 = _Q0;
    while (1)
    {
      if (v17 >= 4)
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        while (1)
        {
          __break(1u);
          __break(1u);
LABEL_78:
          sub_23A6168F4();
          v47 = v90;
          if ((v11 & 1) != 0)
          {
LABEL_34:
            __asm { FMOV            V0.2D, #1.0 }
            *(_OWORD *)(v47[7] + 16 * v9) = _Q0;
          }
          else
          {
LABEL_30:
            v47[(v9 >> 6) + 8] |= 1 << v9;
            *(_QWORD *)(v47[6] + 8 * v9) = v2;
            __asm { FMOV            V0.2D, #1.0 }
            *(_OWORD *)(v47[7] + 16 * v9) = _Q0;
            v49 = v47[2];
            _VF = __OFADD__(v49, 1);
            v50 = v49 + 1;
            if (_VF)
              continue;
            v47[2] = v50;
          }
          *(_QWORD *)(v1 + v17) = v47;
          swift_bridgeObjectRelease();
          if (v18[97] < 2uLL)
            goto LABEL_75;
          v2 = 2;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v90 = *(_QWORD **)(v1 + v17);
          v53 = (uint64_t)v90;
          *(_QWORD *)(v1 + v17) = 0x8000000000000000;
          v9 = sub_23A5C6620(2);
          v55 = *(_QWORD *)(v53 + 16);
          v56 = (v54 & 1) == 0;
          v57 = v55 + v56;
          if (__OFADD__(v55, v56))
            goto LABEL_76;
          LOBYTE(v11) = v54;
          if (*(_QWORD *)(v53 + 24) >= v57)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v60 = v90;
              if ((v54 & 1) != 0)
                goto LABEL_44;
            }
            else
            {
LABEL_81:
              sub_23A6168F4();
              v60 = v90;
              if ((v11 & 1) != 0)
                goto LABEL_44;
            }
          }
          else
          {
            sub_23A6141EC(v57, isUniquelyReferenced_nonNull_native);
            v58 = sub_23A5C6620(2);
            if ((v11 & 1) != (v59 & 1))
              goto LABEL_87;
            v9 = v58;
            v60 = v90;
            if ((v11 & 1) != 0)
            {
LABEL_44:
              v64 = v60[7];
              __asm { FMOV            V0.2D, #1.0 }
              goto LABEL_69;
            }
          }
          v60[(v9 >> 6) + 8] |= 1 << v9;
          *(_QWORD *)(v60[6] + 8 * v9) = v2;
          __asm { FMOV            V0.2D, #1.0 }
          *(_OWORD *)(v60[7] + 16 * v9) = _Q0;
          v62 = v60[2];
          _VF = __OFADD__(v62, 1);
          v63 = v62 + 1;
          if (!_VF)
            goto LABEL_41;
        }
      }
      v2 = *((_QWORD *)&unk_250B722B8 + v17 + 4);
      v25 = swift_isUniquelyReferenced_nonNull_native();
      v90 = *(_QWORD **)((char *)v18 + v1);
      v26 = (uint64_t)v90;
      *(_QWORD *)((char *)v18 + v1) = 0x8000000000000000;
      v9 = sub_23A5C6620(v2);
      v28 = *(_QWORD *)(v26 + 16);
      v29 = (v27 & 1) == 0;
      v30 = v28 + v29;
      if (__OFADD__(v28, v29))
        goto LABEL_73;
      LOBYTE(v11) = v27;
      if (*(_QWORD *)(v26 + 24) >= v30)
      {
        if ((v25 & 1) != 0)
        {
          v33 = v90;
          if ((v27 & 1) != 0)
            goto LABEL_7;
        }
        else
        {
          sub_23A6168F4();
          v33 = v90;
          if ((v11 & 1) != 0)
            goto LABEL_7;
        }
      }
      else
      {
        sub_23A6141EC(v30, v25);
        v31 = sub_23A5C6620(v2);
        if ((v11 & 1) != (v32 & 1))
          goto LABEL_87;
        v9 = v31;
        v33 = v90;
        if ((v11 & 1) != 0)
        {
LABEL_7:
          *(_OWORD *)(v33[7] + 16 * v9) = v88;
          goto LABEL_8;
        }
      }
      v33[(v9 >> 6) + 8] |= 1 << v9;
      *(_QWORD *)(v33[6] + 8 * v9) = v2;
      *(_OWORD *)(v33[7] + 16 * v9) = v88;
      v34 = v33[2];
      _VF = __OFADD__(v34, 1);
      v35 = v34 + 1;
      if (_VF)
        goto LABEL_74;
      v33[2] = v35;
LABEL_8:
      ++v17;
      *(_QWORD *)((char *)v18 + v1) = v33;
      result = swift_bridgeObjectRelease();
      if (v17 == 4)
        return result;
    }
  }
  if (v12 == 0xD000000000000011 && v13 == 0x800000023A69E6A0 || (sub_23A691518() & 1) != 0)
  {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v9, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
    v36 = sub_23A690CFC();
    v37 = sub_23A691044();
    if (os_log_type_enabled(v36, v37))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v90 = (_QWORD *)v38;
      *(_DWORD *)v11 = 136315138;
      v89 = sub_23A5EEB40(0xD00000000000001ELL, 0x800000023A69E6E0, (uint64_t *)&v90);
      sub_23A6911D0();
      _os_log_impl(&dword_23A5B0000, v36, v37, "%s Setting 1:1 aspect ratio for Webex", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v38, -1, -1);
      MEMORY[0x23B853BD0](v11, -1, -1);
    }

    (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v9, v2);
    v18 = &unk_250B72000;
    v17 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_aspectRatio;
    v2 = 1;
    v39 = swift_isUniquelyReferenced_nonNull_native();
    v90 = *(_QWORD **)(v1 + v17);
    v40 = (uint64_t)v90;
    *(_QWORD *)(v1 + v17) = 0x8000000000000000;
    v9 = sub_23A5C6620(1);
    v42 = *(_QWORD *)(v40 + 16);
    v43 = (v41 & 1) == 0;
    v44 = v42 + v43;
    if (__OFADD__(v42, v43))
      goto LABEL_76;
    LOBYTE(v11) = v41;
    if (*(_QWORD *)(v40 + 24) >= v44)
    {
      if ((v39 & 1) == 0)
        goto LABEL_78;
      v47 = v90;
      if ((v41 & 1) != 0)
        goto LABEL_34;
      goto LABEL_30;
    }
    sub_23A6141EC(v44, v39);
    v45 = sub_23A5C6620(1);
    if ((v11 & 1) == (v46 & 1))
    {
      v9 = v45;
      v47 = v90;
      if ((v11 & 1) != 0)
        goto LABEL_34;
      goto LABEL_30;
    }
    goto LABEL_87;
  }
  if (v12 == 0xD000000000000011 && v13 == 0x800000023A69E6C0 || (result = sub_23A691518(), (result & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
    v66 = sub_23A690CFC();
    v67 = sub_23A691044();
    if (os_log_type_enabled(v66, v67))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      v90 = (_QWORD *)v68;
      *(_DWORD *)v11 = 136315138;
      v89 = sub_23A5EEB40(0xD00000000000001ELL, 0x800000023A69E6E0, (uint64_t *)&v90);
      sub_23A6911D0();
      _os_log_impl(&dword_23A5B0000, v66, v67, "%s Setting 16:9 aspect ratio for Continuity Capture", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v68, -1, -1);
      MEMORY[0x23B853BD0](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v18 = &unk_250B72000;
    v17 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_aspectRatio;
    v2 = 1;
    v69 = swift_isUniquelyReferenced_nonNull_native();
    v90 = *(_QWORD **)(v1 + v17);
    v70 = (uint64_t)v90;
    *(_QWORD *)(v1 + v17) = 0x8000000000000000;
    v9 = sub_23A5C6620(1);
    v72 = *(_QWORD *)(v70 + 16);
    v73 = (v71 & 1) == 0;
    v74 = v72 + v73;
    if (__OFADD__(v72, v73))
      goto LABEL_80;
    LOBYTE(v11) = v71;
    if (*(_QWORD *)(v70 + 24) < v74)
    {
      sub_23A6141EC(v74, v69);
      v75 = sub_23A5C6620(1);
      if ((v11 & 1) != (v76 & 1))
      {
LABEL_87:
        result = sub_23A691554();
        __break(1u);
        return result;
      }
      v9 = v75;
      v77 = v90;
      if ((v11 & 1) == 0)
        goto LABEL_54;
LABEL_58:
      *(_OWORD *)(v77[7] + 16 * v9) = xmmword_23A697E80;
      goto LABEL_59;
    }
    if ((v69 & 1) != 0)
    {
      v77 = v90;
      if ((v71 & 1) != 0)
        goto LABEL_58;
    }
    else
    {
      sub_23A6168F4();
      v77 = v90;
      if ((v11 & 1) != 0)
        goto LABEL_58;
    }
LABEL_54:
    v77[(v9 >> 6) + 8] |= 1 << v9;
    *(_QWORD *)(v77[6] + 8 * v9) = 1;
    *(_OWORD *)(v77[7] + 16 * v9) = xmmword_23A697E80;
    v78 = v77[2];
    _VF = __OFADD__(v78, 1);
    v79 = v78 + 1;
    if (_VF)
      goto LABEL_65;
    v77[2] = v79;
LABEL_59:
    *(_QWORD *)(v1 + v17) = v77;
    swift_bridgeObjectRelease();
    v2 = 2;
    v69 = swift_isUniquelyReferenced_nonNull_native();
    v90 = *(_QWORD **)(v1 + v17);
    v80 = (uint64_t)v90;
    *(_QWORD *)(v1 + v17) = 0x8000000000000000;
    v9 = sub_23A5C6620(2);
    v82 = *(_QWORD *)(v80 + 16);
    v83 = (v81 & 1) == 0;
    v84 = v82 + v83;
    if (!__OFADD__(v82, v83))
    {
      LOBYTE(v11) = v81;
      if (*(_QWORD *)(v80 + 24) >= v84)
        goto LABEL_66;
      sub_23A6141EC(v84, v69);
      v85 = sub_23A5C6620(2);
      if ((v11 & 1) != (v86 & 1))
        goto LABEL_87;
      v9 = v85;
      v60 = v90;
      if ((v11 & 1) != 0)
      {
LABEL_68:
        v64 = v60[7];
        _Q0 = xmmword_23A697E80;
LABEL_69:
        *(_OWORD *)(v64 + 16 * v9) = _Q0;
      }
      else
      {
        while (1)
        {
          v60[(v9 >> 6) + 8] |= 1 << v9;
          *(_QWORD *)(v60[6] + 8 * v9) = v2;
          *(_OWORD *)(v60[7] + 16 * v9) = xmmword_23A697E80;
          v87 = v60[2];
          _VF = __OFADD__(v87, 1);
          v63 = v87 + 1;
          if (!_VF)
            break;
LABEL_65:
          __break(1u);
LABEL_66:
          if ((v69 & 1) != 0)
          {
            v60 = v90;
            if ((v11 & 1) != 0)
              goto LABEL_68;
          }
          else
          {
            sub_23A6168F4();
            v60 = v90;
            if ((v11 & 1) != 0)
              goto LABEL_68;
          }
        }
LABEL_41:
        v60[2] = v63;
      }
      *(_QWORD *)(v1 + v17) = v60;
      return swift_bridgeObjectRelease();
    }
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  return result;
}

uint64_t sub_23A61E658()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[5] = v0;
  sub_23A6906D8();
  v1[6] = swift_task_alloc();
  sub_23A690CF0();
  v1[7] = swift_task_alloc();
  v2 = sub_23A690C60();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v3 = sub_23A690834();
  v1[11] = v3;
  v1[12] = *(_QWORD *)(v3 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A61E730()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[5];
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_intelligentTrackingLock;
  v0[15] = OBJC_IVAR____TtC11DockKitCore13TrackingStand_intelligentTrackingLock;
  v0[16] = *(_QWORD *)(v1 + v2);
  v5 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5B528] + MEMORY[0x24BE5B528]);
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[17] = v3;
  *v3 = v0;
  v3[1] = sub_23A61E7B0;
  return v5();
}

uint64_t sub_23A61E7B0(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 176) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A61E814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  os_unfair_lock_s *v25;
  uint64_t v27;
  unint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  os_unfair_lock_s *v35;
  _QWORD *v36;

  if (*(_BYTE *)(v0 + 176) == 1)
  {
    v1 = *(_QWORD *)(v0 + 104);
    v2 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 40);
    sub_23A690888();
    swift_allocObject();
    *(_QWORD *)(v0 + 144) = sub_23A69087C();
    if (*(_BYTE *)(v8 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_isInferenceEnabled))
      v9 = (unsigned int *)MEMORY[0x24BE5B3C8];
    else
      v9 = (unsigned int *)MEMORY[0x24BE5B3D0];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *v9, v4);
    sub_23A690870();
    sub_23A69084C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v6, *MEMORY[0x24BE5B860], v7);
    sub_23A691290();
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0xE000000000000000;
    sub_23A690E88();
    sub_23A690864();
    sub_23A691344();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
    sub_23A690E88();
    sub_23A690840();
    sub_23A690C6C();
    sub_23A690E88();
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v0 + 16);
    v11 = *(_QWORD *)(v0 + 24);
    v12 = sub_23A691020();
    MEMORY[0x23B852AD8](v6, v10, v11, v12);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    v13 = *(char **)(v8 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
    if (v13)
    {
      v14 = OBJC_IVAR____TtC11DockKitCore6System_components;
      v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore6System_components];
      v16 = *(_QWORD *)(v15 + 16);
      v17 = v13;
      if (v16)
      {
        swift_bridgeObjectRetain();
        v18 = sub_23A5C6588(7823737, 0xE300000000000000);
        if ((v19 & 1) != 0)
        {
          v20 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v18);
          swift_bridgeObjectRelease();
          type metadata accessor for Actuator();
          v21 = swift_dynamicCastClass();
          if (v21)
          {
            v22 = v21;
            v23 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
            v24 = *(os_unfair_lock_s **)(v21 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
            swift_retain();
            os_unfair_lock_lock(v24 + 4);
            swift_release();
            v25 = *(os_unfair_lock_s **)(v22 + v23);
            swift_retain();
            os_unfair_lock_unlock(v25 + 4);
            swift_release();
          }

        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v27 = *(_QWORD *)&v13[v14];
      if (*(_QWORD *)(v27 + 16))
      {
        swift_bridgeObjectRetain();
        v28 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
        if ((v29 & 1) != 0)
        {
          v30 = *(id *)(*(_QWORD *)(v27 + 56) + 8 * v28);
          swift_bridgeObjectRelease();
          type metadata accessor for Actuator();
          v31 = swift_dynamicCastClass();
          if (v31)
          {
            v32 = v31;
            v33 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
            v34 = *(os_unfair_lock_s **)(v31 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
            swift_retain();
            os_unfair_lock_lock(v34 + 4);
            swift_release();
            v35 = *(os_unfair_lock_s **)(v32 + v33);
            swift_retain();
            os_unfair_lock_unlock(v35 + 4);
            swift_release();
          }

        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      sub_23A690CC0();
      sub_23A690858();
      sub_23A690828();

    }
    swift_retain();
    swift_retain();
    sub_23A6906B4();
    sub_23A69093C();
    swift_allocObject();
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v36;
    *v36 = v0;
    v36[1] = sub_23A61ED04;
    return sub_23A690924();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A61ED04(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A61ED60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[15];
  v2 = v0[5];
  v0[4] = v0[20];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  sub_23A6909D8();
  v0[21] = *(_QWORD *)(v2 + v1);
  sub_23A690960();
  sub_23A5F0550(&qword_25699FEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B550], MEMORY[0x24BE5B560]);
  swift_retain();
  sub_23A690F60();
  return swift_task_switch();
}

uint64_t sub_23A61EE24()
{
  sub_23A690948();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A61EE68()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *TrackingStand.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TrackingStand.init(coder:)(a1);
}

void *TrackingStand.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  id v63;
  void *v64;
  void *v65;
  id v66;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;

  v92 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FC90);
  v90 = *(_QWORD *)(v2 - 8);
  v91 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v89 = (char *)v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F0C0);
  v87 = *(_QWORD *)(v4 - 8);
  v88 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v86 = (char *)v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FCA0);
  MEMORY[0x24BDAC7A8](v6);
  v85 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23A690B64();
  v83 = *(_QWORD *)(v8 - 8);
  v84 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v82 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A690984();
  v79 = *(_QWORD *)(v10 - 8);
  v80 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v78 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A690CB4();
  MEMORY[0x24BDAC7A8](v12);
  v81 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v74 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_23A691080();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v71 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23A69105C();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v16);
  v18 = sub_23A690D50();
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore13TrackingStand_sensorController] = 0;
  v19 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  v20 = v1;
  *(_QWORD *)&v1[v19] = dispatch_semaphore_create(1);
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled] = 0;
  v21 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingMetrics;
  type metadata accessor for TrackingMetrics(0);
  swift_allocObject();
  *(_QWORD *)&v20[v21] = sub_23A67E9C8();
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_assertion] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoCheckTimer] = 0;
  v22 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoLock;
  *(_QWORD *)&v20[v22] = dispatch_semaphore_create(1);
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoStreamConnected] = 0;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_motionStopped] = 0;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_useDeviceMotion] = 1;
  v23 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerLock;
  v70 = sub_23A690960();
  *(_QWORD *)&v20[v23] = sub_23A690954();
  v24 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerRunningLock;
  v25 = type metadata accessor for LockActor();
  v26 = swift_allocObject();
  swift_defaultActor_initialize();
  v27 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v26 + 112) = 1;
  *(_QWORD *)(v26 + 120) = v27;
  v28 = v27;
  *(_QWORD *)&v20[v24] = v26;
  v29 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_positionCommandLock;
  v76 = v25;
  v30 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v30 + 112) = 1;
  *(_QWORD *)(v30 + 120) = v28;
  *(_QWORD *)&v20[v29] = v30;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingRunning] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTimer] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerTimerInterval] = 0x3FA1111111111111;
  sub_23A6906CC();
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_observations] = v28;
  v31 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_observationsLock;
  v32 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v32 + 112) = 1;
  *(_QWORD *)(v32 + 120) = v28;
  *(_QWORD *)&v20[v31] = v32;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_maxObservations] = 1;
  v33 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_appID];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0xE000000000000000;
  v34 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_aspectRatio;
  *(_QWORD *)&v20[v34] = sub_23A5C96AC(v28);
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_userOverridedAspectRatio] = 0;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_flipCamera] = 0;
  v69 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_processingQueue;
  sub_23A5D03A4(0, (unint64_t *)&qword_2542D2820);
  sub_23A690D38();
  v94 = v28;
  v68[1] = sub_23A5F0550((unint64_t *)&qword_2542D2810, v17, MEMORY[0x24BEE5698]);
  v68[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27D0);
  v68[2] = sub_23A62A2E4();
  sub_23A691200();
  v35 = *MEMORY[0x24BEE5750];
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 104);
  v37 = v71;
  v38 = v73;
  v36(v71, v35, v73);
  *(_QWORD *)&v20[v69] = sub_23A6910A4();
  v72 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingQueue;
  sub_23A690D44();
  v94 = MEMORY[0x24BEE4AF8];
  sub_23A691200();
  v36(v37, v35, v38);
  *(_QWORD *)&v20[v72] = sub_23A6910A4();
  v39 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_debugMessageCallbacks;
  v40 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v20[v39] = sub_23A5BDE24(MEMORY[0x24BEE4AF8]);
  v41 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_intelligentTrackingLock;
  *(_QWORD *)&v20[v41] = sub_23A690954();
  v42 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking];
  v94 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FCD0);
  v43 = v74;
  sub_23A6909C0();
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v42, v43, v77);
  v44 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_cameraManager;
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, *MEMORY[0x24BE5B578], v80);
  (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, *MEMORY[0x24BE5B768], v84);
  v45 = sub_23A690C48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v85, 1, 1, v45);
  sub_23A690C90();
  sub_23A690A20();
  swift_allocObject();
  *(_QWORD *)&v20[v44] = sub_23A690A08();
  sub_23A69066C();
  v46 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummaryDebug;
  v94 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FCD8);
  swift_allocObject();
  *(_QWORD *)&v20[v46] = sub_23A690A68();
  v47 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummary;
  v94 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FCE0);
  swift_allocObject();
  *(_QWORD *)&v20[v47] = sub_23A690A68();
  v48 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuatorPositionEpsilon;
  v93 = 0x4014000000000000;
  sub_23A62A330();
  sub_23A690DC8();
  *(_QWORD *)&v20[v48] = v94;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_isInferenceEnabled] = 1;
  *(_QWORD *)&v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand____lazy_storage___trackingSensor] = 1;
  v49 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__selectedFaceIDs];
  v94 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FD00);
  v50 = v86;
  sub_23A6909C0();
  v51 = v88;
  v52 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
  v52(v49, v50, v88);
  v53 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__selectedBodyIDs];
  v94 = v40;
  sub_23A6909C0();
  v52(v53, v50, v51);
  v54 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTaskLock;
  v55 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v55 + 112) = 1;
  *(_QWORD *)(v55 + 120) = v40;
  *(_QWORD *)&v20[v54] = v55;
  v56 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_observationLock;
  v57 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v57 + 112) = 1;
  *(_QWORD *)(v57 + 120) = v40;
  *(_QWORD *)&v20[v56] = v57;
  v58 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_currentObservation];
  *(_QWORD *)v58 = 0;
  *((_QWORD *)v58 + 1) = 0;
  v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand_debugEnabled] = 0;
  v59 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_cameraFPSTracker;
  sub_23A6909B4();
  swift_allocObject();
  *(_QWORD *)&v20[v59] = sub_23A6909A8();
  v60 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationLock;
  *(_QWORD *)&v20[v60] = sub_23A690954();
  v61 = &v20[OBJC_IVAR____TtC11DockKitCore13TrackingStand__lastLatency];
  v94 = 0x3FA0E5604189374CLL;
  v62 = v89;
  sub_23A6909C0();
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v61, v62, v91);

  v63 = v92;
  v64 = (void *)DockCoreAccessory.init(coder:)(v63);
  v65 = v64;
  if (v64)
  {
    v66 = v64;
    sub_23A61D8B0();

  }
  return v65;
}

uint64_t sub_23A61F9B8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE *v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC11DockKitCore13TrackingStand_userOverridedAspectRatio] = 1;
  v6 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v7[5] = a1;
  v8 = v1;
  sub_23A5D120C((uint64_t)v5, (uint64_t)&unk_25699F058, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_23A61FA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[4] = a4;
  v5[5] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FFE8);
  v5[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FFF0);
  v5[7] = swift_task_alloc();
  v6 = sub_23A690A44();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v5[11] = v7;
  v5[12] = *(_QWORD *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A61FB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)();
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD, _QWORD, _QWORD);

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v3);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 112) = v4;
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 40);
    switch(v5)
    {
      case 0:
        v6 = *(_QWORD *)(v0 + 56);
        v7 = *(_QWORD *)(v0 + 48);
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 104))(*(_QWORD *)(v0 + 80), *MEMORY[0x24BE5B688], *(_QWORD *)(v0 + 64));
        v8 = sub_23A690A38();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
        v9 = sub_23A690A2C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
        v31 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))((int)*MEMORY[0x24BE5B4A8] + MEMORY[0x24BE5B4A8]);
        v10 = (_QWORD *)swift_task_alloc();
        v11 = sub_23A61FF60;
        *(_QWORD *)(v0 + 120) = v10;
        goto LABEL_9;
      case 1:
        v13 = *(_QWORD *)(v0 + 56);
        v14 = *(_QWORD *)(v0 + 48);
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 104))(*(_QWORD *)(v0 + 80), *MEMORY[0x24BE5B680], *(_QWORD *)(v0 + 64));
        v15 = *MEMORY[0x24BE5B668];
        v16 = sub_23A690A38();
        v17 = *(_QWORD *)(v16 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(v13, v15, v16);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
        v18 = sub_23A690A2C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 1, 1, v18);
        v31 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))((int)*MEMORY[0x24BE5B4A8] + MEMORY[0x24BE5B4A8]);
        v10 = (_QWORD *)swift_task_alloc();
        v11 = sub_23A620060;
        *(_QWORD *)(v0 + 128) = v10;
        goto LABEL_9;
      case 2:
        v19 = *(_QWORD *)(v0 + 56);
        v20 = *(_QWORD *)(v0 + 48);
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 104))(*(_QWORD *)(v0 + 80), *MEMORY[0x24BE5B680], *(_QWORD *)(v0 + 64));
        v21 = *MEMORY[0x24BE5B658];
        v22 = sub_23A690A38();
        v23 = *(_QWORD *)(v22 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 104))(v19, v21, v22);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
        v24 = sub_23A690A2C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 1, 1, v24);
        v31 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))((int)*MEMORY[0x24BE5B4A8] + MEMORY[0x24BE5B4A8]);
        v10 = (_QWORD *)swift_task_alloc();
        v11 = sub_23A620100;
        *(_QWORD *)(v0 + 136) = v10;
        goto LABEL_9;
      case 3:
        v25 = *(_QWORD *)(v0 + 56);
        v26 = *(_QWORD *)(v0 + 48);
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 104))(*(_QWORD *)(v0 + 80), *MEMORY[0x24BE5B680], *(_QWORD *)(v0 + 64));
        v27 = *MEMORY[0x24BE5B660];
        v28 = sub_23A690A38();
        v29 = *(_QWORD *)(v28 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 104))(v25, v27, v28);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
        v30 = sub_23A690A2C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v26, 1, 1, v30);
        v31 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))((int)*MEMORY[0x24BE5B4A8] + MEMORY[0x24BE5B4A8]);
        v10 = (_QWORD *)swift_task_alloc();
        v11 = sub_23A6201A0;
        *(_QWORD *)(v0 + 144) = v10;
LABEL_9:
        *v10 = v0;
        v10[1] = v11;
        result = v31(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 48));
        break;
      default:
        *(_QWORD *)(v0 + 24) = v5;
        result = sub_23A69153C();
        break;
    }
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23A61FF60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  sub_23A5C921C(v5, &qword_25699FFE8);
  sub_23A5C921C(v4, (uint64_t *)&unk_25699FFF0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23A620000()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A620060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  sub_23A5C921C(v5, &qword_25699FFE8);
  sub_23A5C921C(v4, (uint64_t *)&unk_25699FFF0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23A620100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  sub_23A5C921C(v5, &qword_25699FFE8);
  sub_23A5C921C(v4, (uint64_t *)&unk_25699FFF0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23A6201A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  sub_23A5C921C(v5, &qword_25699FFE8);
  sub_23A5C921C(v4, (uint64_t *)&unk_25699FFF0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23A620240(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR____TtC11DockKitCore13TrackingStand_userOverridedAspectRatio] = 1;
  v12 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = v4;
  *(double *)(v13 + 40) = a1;
  *(double *)(v13 + 48) = a2;
  *(double *)(v13 + 56) = a3;
  *(double *)(v13 + 64) = a4;
  v14 = v4;
  sub_23A5D120C((uint64_t)v11, (uint64_t)&unk_25699EC08, v13);
  return swift_release();
}

uint64_t sub_23A62033C(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(double *)(v8 + 48) = a3;
  *(double *)(v8 + 56) = a4;
  *(double *)(v8 + 32) = a1;
  *(double *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 24) = a8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A6203A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(double, double, double, double);

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v3);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 88) = v4;
  if (v4)
  {
    v7 = (uint64_t (*)(double, double, double, double))((int)*MEMORY[0x24BE5B4E8] + MEMORY[0x24BE5B4E8]);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v5;
    *v5 = v0;
    v5[1] = sub_23A620490;
    return v7(*(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56));
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A620490()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_23A6204FC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A620534()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  v1[3] = swift_task_alloc();
  v2 = sub_23A690D14();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A6205B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerRunningLock;
  v0[7] = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerRunningLock;
  v0[8] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A62060C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 72) = v5;
      *v5 = v0;
      v5[1] = sub_23A6206EC;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A6206EC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A620740()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A62077C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[2];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingRunning) == 1)
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[5] + 16))(v0[6], v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v0[4]);
    v2 = sub_23A690CFC();
    v3 = sub_23A691044();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_23A5B0000, v2, v3, "startTracking() already called, ignoring request to start again", v4, 2u);
      MEMORY[0x23B853BD0](v4, -1, -1);
    }
    v5 = v0[6];
    v6 = v0[7];
    v7 = v0[4];
    v8 = v0[5];
    v9 = v0[2];

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
    v0[10] = *(_QWORD *)(v9 + v6);
    swift_retain();
  }
  else
  {
    v10 = v0[7];
    *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingRunning) = 1;
    v0[11] = *(_QWORD *)(v1 + v10);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A6208BC()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A620908()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A62094C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v14;
  id v15;
  _QWORD *v16;
  id v17;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23A61DB74();
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingMetrics;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingMetrics);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_appID + 8);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_appID);
  *(_QWORD *)(v3 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + v2);
  v6 = objc_allocWithZone(MEMORY[0x24BDBCE60]);
  swift_retain();
  v7 = objc_msgSend(v6, sel_init);
  objc_msgSend(v7, sel_timeIntervalSince1970);
  v9 = v8;

  *(_QWORD *)(v5 + OBJC_IVAR____TtC11DockKitCore15TrackingMetrics_startTime) = v9;
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController))
  {
    *(_BYTE *)(v0 + 96) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699FD48);
    sub_23A6909D8();
  }
  v11 = *(void **)(v0 + 16);
  v10 = *(_QWORD *)(v0 + 24);
  v12 = sub_23A690F9C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v10, 1, 1, v12);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v11;
  v15 = v11;
  sub_23A5D10B8(v10, (uint64_t)&unk_25699FD58, (uint64_t)v14);
  swift_release();
  sub_23A628E18();
  sub_23A622F60();
  v13(v10, 1, 1, v12);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v15;
  v17 = v15;
  sub_23A5D10B8(v10, (uint64_t)&unk_25699FD68, (uint64_t)v16);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A620B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_23A620B44()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v1;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v2;
    *v2 = v0;
    v2[1] = sub_23A620BD0;
    return sub_23A6344C0();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A620BD0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23A620C28()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A620C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a1;
  v4[4] = a4;
  v5 = sub_23A6906D8();
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v4[8] = v6;
  v4[9] = *(_QWORD *)(v6 - 8);
  v4[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A620CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD);

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v3);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 88) = v4;
  if (v4)
  {
    sub_23A6906B4();
    v7 = (uint64_t (*)(_QWORD))((int)*MEMORY[0x24BE5B4C0] + MEMORY[0x24BE5B4C0]);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v5;
    *v5 = v0;
    v5[1] = sub_23A620DD8;
    return v7(*(_QWORD *)(v0 + 56));
  }
  else
  {
    **(_BYTE **)(v0 + 24) = 1;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A620DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23A620E54()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 24) = *(_QWORD *)(v0 + 88) == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A620FBC(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23A5DDB98;
  return sub_23A620534();
}

uint64_t sub_23A62101C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A6291EC();
  sub_23A6289B4();
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingMetrics];
  v5 = objc_allocWithZone(MEMORY[0x24BDBCE60]);
  swift_retain();
  v6 = objc_msgSend(v5, sel_init);
  objc_msgSend(v6, sel_timeIntervalSince1970);
  v8 = v7;

  *(_QWORD *)(v4 + OBJC_IVAR____TtC11DockKitCore15TrackingMetrics_endTime) = v8;
  swift_release();
  sub_23A6296E4();
  v9 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v0;
  v11 = v0;
  sub_23A5D120C((uint64_t)v3, (uint64_t)&unk_25699FD80, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_23A621150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23A621168()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerRunningLock;
  v0[3] = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerRunningLock;
  v0[4] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A6211BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 40) = v5;
      *v5 = v0;
      v5[1] = sub_23A62129C;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A62129C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A6212F0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A62132C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[2];
  v1 = v0[3];
  *(_BYTE *)(v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingRunning) = 0;
  v0[6] = *(_QWORD *)(v2 + v1);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A6213B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_23A6213D4()
{
  uint64_t v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = sub_23A62A734(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(char **)(v0 + 48));
  *(_QWORD *)(v0 + 64) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_23A621454;
  v3 = *(_QWORD *)(v0 + 56);
  v2[3] = *(_QWORD *)(v0 + 24);
  v2[4] = v3;
  v2[2] = v1;
  return swift_task_switch();
}

uint64_t sub_23A621454()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A6214B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A6214EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A621520(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 40) = v1;
  v4 = sub_23A690D14();
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  *(_BYTE *)(v2 + 120) = *a1;
  return swift_task_switch();
}

uint64_t sub_23A62158C()
{
  int64_t v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  char v28;
  char v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  char v40;
  char v41;
  char v42;

  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_systems);
  v39[0] = MEMORY[0x24BEE4AF8];
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v0 = v5;
    else
      v0 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = sub_23A691374();
    if (v6)
    {
LABEL_3:
      if (v6 < 1)
      {
        __break(1u);
        goto LABEL_50;
      }
      v2 = 0;
      v4 = v5 & 0xC000000000000001;
      do
      {
        if (v4)
          v7 = (char *)MEMORY[0x23B85312C](v2, v5);
        else
          v7 = (char *)*(id *)(v5 + 8 * (_QWORD)v2 + 32);
        if (*(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore6System_type])
        {

        }
        else
        {
          sub_23A6912D8();
          v3 = *(id *)(v39[0] + 16);
          sub_23A6912F0();
          sub_23A6912FC();
          sub_23A6912E4();
        }
        v2 = (_QWORD *)((char *)v2 + 1);
      }
      while ((_QWORD *)v6 != v2);
      swift_bridgeObjectRelease();
      v0 = v39[0];
      if ((v39[0] & 0x8000000000000000) != 0)
        goto LABEL_45;
      goto LABEL_19;
    }
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v0 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
    goto LABEL_45;
LABEL_19:
  if ((v0 & 0x4000000000000000) != 0)
  {
LABEL_45:
    swift_bridgeObjectRetain();
    v37 = sub_23A691374();
    swift_release();
    if (!v37)
      goto LABEL_46;
    goto LABEL_21;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
LABEL_46:
    swift_release();
    goto LABEL_47;
  }
LABEL_21:
  if ((v0 & 0xC000000000000001) != 0)
  {
LABEL_50:
    v9 = (id)MEMORY[0x23B85312C](0, v0);
    goto LABEL_24;
  }
  v8 = *(_QWORD *)(v0 + 16);
  if (!v8)
  {
    __break(1u);
LABEL_52:
    v2 = sub_23A5C5ABC((_QWORD *)(v8 > 1), v0, 1, v2);
LABEL_43:
    v28 = 0;
    v2[2] = v0;
    v31 = &v2[3 * v4];
    *((_OWORD *)v31 + 2) = xmmword_23A697E90;
    v31[6] = 0;
    v29 = 1;
    v27 = 1.0;
    v30 = 1;
LABEL_44:
    v32 = *(_QWORD *)(v1 + 40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9B8);
    v33 = swift_allocObject();
    *(_QWORD *)(v1 + 88) = v33;
    *(_OWORD *)(v33 + 16) = xmmword_23A694020;
    *(_QWORD *)(v33 + 32) = v2;
    *(double *)(v33 + 40) = v27;
    *(_QWORD *)(v33 + 48) = v6;
    *(_BYTE *)(v33 + 56) = v28;
    *(_BYTE *)(v33 + 57) = v29;
    *(_BYTE *)(v33 + 58) = v30;
    *(_WORD *)(v1 + 16) = 512;
    *(_QWORD *)(v1 + 24) = v33;
    v34 = swift_task_alloc();
    *(_QWORD *)(v1 + 96) = v34;
    *(_QWORD *)(v34 + 16) = v32;
    *(_QWORD *)(v34 + 24) = v3;
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 104) = v35;
    *v35 = v1;
    v35[1] = sub_23A621B70;
    return ActuationController.sendTrajectoryCommand(trajectoryCommand:progressCallback:)(v1 + 16, (uint64_t)sub_23A62AE24, v34);
  }
  v9 = *(id *)(v0 + 32);
LABEL_24:
  v10 = v9;
  swift_release();
  *(_QWORD *)(v1 + 72) = v10;
  type metadata accessor for ActuationController();
  v11 = swift_dynamicCastClass();
  if (v11)
  {
    v12 = v11;
    v13 = OBJC_IVAR____TtC11DockKitCore6System_components;
    v14 = *(_QWORD *)(v11 + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (!*(_QWORD *)(v14 + 16))
      goto LABEL_36;
    swift_bridgeObjectRetain();
    v15 = sub_23A5C6588(7823737, 0xE300000000000000);
    if ((v16 & 1) != 0)
    {
      v17 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      type metadata accessor for Actuator();
      v18 = swift_dynamicCastClass();
      if (!v18)
      {
LABEL_35:

LABEL_36:
        sub_23A5C9938();
        swift_allocError();
        *(_QWORD *)v25 = 0xD000000000000018;
        *(_QWORD *)(v25 + 8) = 0x800000023A69E0C0;
        *(_BYTE *)(v25 + 16) = 16;
        swift_willThrow();
LABEL_37:

        goto LABEL_48;
      }
      v19 = *(_QWORD *)(v18 + OBJC_IVAR____TtC11DockKitCore9Component_id);

      v20 = *(_QWORD *)(v12 + v13);
      if (!*(_QWORD *)(v20 + 16))
        goto LABEL_36;
      swift_bridgeObjectRetain();
      v21 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
      if ((v22 & 1) != 0)
      {
        v17 = *(id *)(*(_QWORD *)(v20 + 56) + 8 * v21);
        swift_bridgeObjectRelease();
        v23 = swift_dynamicCastClass();
        if (v23)
        {
          v24 = *(unsigned __int8 *)(v1 + 120);
          v6 = *(_QWORD *)(v23 + OBJC_IVAR____TtC11DockKitCore9Component_id);

          v3 = objc_msgSend((id)objc_opt_self(), sel_progressWithTotalUnitCount_, 1);
          *(_QWORD *)(v1 + 80) = v3;
          switch(v24)
          {
            case 4:
              sub_23A5C36B4(v6, (uint64_t)v39);
              break;
            case 5:
              sub_23A5C38BC(v19, (uint64_t)v39);
              break;
            case 6:
              sub_23A5C3AC4(v6, (uint64_t)v39);
              break;
            case 7:
              v2 = sub_23A5C5ABC(0, 1, 1, MEMORY[0x24BEE4AF8]);
              v4 = v2[2];
              v8 = v2[3];
              v0 = v4 + 1;
              if (v4 < v8 >> 1)
                goto LABEL_43;
              goto LABEL_52;
            default:
              sub_23A5C9938();
              swift_allocError();
              *(_QWORD *)v26 = 0xD000000000000013;
              *(_QWORD *)(v26 + 8) = 0x800000023A69E0E0;
              *(_BYTE *)(v26 + 16) = 16;
              swift_willThrow();

              goto LABEL_37;
          }
          v2 = (_QWORD *)v39[0];
          v27 = *(double *)&v39[1];
          v6 = v39[2];
          v28 = v40;
          v29 = v41;
          v30 = v42;
          goto LABEL_44;
        }
        goto LABEL_35;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }

LABEL_47:
  sub_23A5C9938();
  swift_allocError();
  *(_QWORD *)v38 = 0xD000000000000017;
  *(_QWORD *)(v38 + 8) = 0x800000023A69E0A0;
  *(_BYTE *)(v38 + 16) = 9;
  swift_willThrow();
LABEL_48:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23A621B70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23A621BE4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80));
}

uint64_t sub_23A621C24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v5);
  v6 = v2;
  v7 = v2;
  v8 = sub_23A690CFC();
  v9 = sub_23A691038();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 112);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v10;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v14;
    sub_23A6911D0();
    *v12 = v14;

    _os_log_impl(&dword_23A5B0000, v8, v9, "Failed executing trajectory, raising %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v12, -1, -1);
    MEMORY[0x23B853BD0](v11, -1, -1);
  }
  else
  {
    v15 = *(void **)(v0 + 112);

  }
  v17 = *(void **)(v0 + 72);
  v16 = *(void **)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  objc_msgSend(v16, sel_cancel);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23A621E24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23A690D14();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  __asm { BR              X10 }
}

uint64_t sub_23A621F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v0);
  v4 = sub_23A690CFC();
  v5 = sub_23A691044();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23A5B0000, v4, v5, "calibrating: calibrating progress", v6, 2u);
    MEMORY[0x23B853BD0](v6, -1, -1);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
}

uint64_t sub_23A6222A0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 40) = v2;
  *(double *)(v3 + 24) = a1;
  *(double *)(v3 + 32) = a2;
  v4 = sub_23A690C3C();
  *(_QWORD *)(v3 + 48) = v4;
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 64) = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  *(_QWORD *)(v3 + 72) = v5;
  *(_QWORD *)(v3 + 80) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A622330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v3);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 96) = v4;
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 56);
    *(_OWORD *)*(_QWORD *)(v0 + 64) = *(_OWORD *)(v0 + 24);
    (*(void (**)(void))(v5 + 104))();
    v9 = (uint64_t (*)(_QWORD))((int)*MEMORY[0x24BE5B4A0] + MEMORY[0x24BE5B4A0]);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v6;
    *v6 = v0;
    v6[1] = sub_23A6224A0;
    return v9(*(_QWORD *)(v0 + 64));
  }
  else
  {
    sub_23A62AE2C();
    swift_allocError();
    *(_QWORD *)v8 = 0xD000000000000027;
    *(_QWORD *)(v8 + 8) = 0x800000023A69E100;
    *(_BYTE *)(v8 + 16) = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A6224A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23A622514()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A62255C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FC40);
  v2[5] = swift_task_alloc();
  v3 = sub_23A69072C();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v4 = sub_23A690C3C();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 - 8);
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A622634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v3);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 120) = v4;
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v5 + 16);
    v7 = MEMORY[0x24BEE4AF8];
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 56);
      v22 = MEMORY[0x24BEE4AF8];
      sub_23A5EF3B0(0, v6, 0);
      v9 = v5 + 40;
      do
      {
        v11 = *(_QWORD *)(v0 + 40);
        v10 = *(_QWORD *)(v0 + 48);
        swift_bridgeObjectRetain();
        sub_23A6906E4();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11, 1, v10) == 1)
        {
          v12 = *(_QWORD *)(v0 + 40);
          sub_23A690720();
          sub_23A5C921C(v12, &qword_25699FC40);
        }
        else
        {
          (*(void (**)(_QWORD, _QWORD, _QWORD))(v8 + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
        }
        swift_bridgeObjectRelease();
        v7 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23A5EF3B0(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v7 = v22;
        }
        v14 = *(_QWORD *)(v7 + 16);
        v13 = *(_QWORD *)(v7 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_23A5EF3B0(v13 > 1, v14 + 1, 1);
          v7 = v22;
        }
        v15 = *(_QWORD *)(v0 + 64);
        v16 = *(_QWORD *)(v0 + 48);
        *(_QWORD *)(v7 + 16) = v14 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v7+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v14, v15, v16);
        v22 = v7;
        v9 += 16;
        --v6;
      }
      while (v6);
    }
    v17 = *(_QWORD *)(v0 + 80);
    **(_QWORD **)(v0 + 88) = v7;
    (*(void (**)(void))(v17 + 104))();
    v21 = (uint64_t (*)(_QWORD))((int)*MEMORY[0x24BE5B4A0] + MEMORY[0x24BE5B4A0]);
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v18;
    *v18 = v0;
    v18[1] = sub_23A622920;
    return v21(*(_QWORD *)(v0 + 88));
  }
  else
  {
    sub_23A62AE2C();
    swift_allocError();
    *(_QWORD *)v20 = 0xD000000000000027;
    *(_QWORD *)(v20 + 8) = 0x800000023A69E100;
    *(_BYTE *)(v20 + 16) = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A622920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23A622994()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A6229FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23A622A18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[4];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTimer))
  {
    sub_23A622F60();
    v1 = v0[4];
  }
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_observationLock;
  v0[5] = OBJC_IVAR____TtC11DockKitCore13TrackingStand_observationLock;
  v0[6] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A622A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v5;
      *v5 = v0;
      v5[1] = sub_23A622B64;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A622B64()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A622BB8()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A622BF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v2 = v0[4];
  v1 = v0[5];
  v4 = (void *)v0[2];
  v3 = (void *)v0[3];
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_currentObservation);
  v7 = *(void **)(v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_currentObservation);
  v6 = *(void **)(v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_currentObservation + 8);
  *v5 = v3;
  v5[1] = v4;
  v8 = v3;
  v9 = v4;
  sub_23A62AE70(v7, v6);
  swift_retain();
  sub_23A69099C();
  swift_release();
  v0[8] = *(_QWORD *)(v2 + v1);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A622C98()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A622E0C(void *a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  id v10;
  _QWORD *v11;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a2;
  v10 = a4;
  v11 = (_QWORD *)swift_task_alloc();
  v4[6] = v11;
  *v11 = v4;
  v11[1] = sub_23A622EAC;
  v11[3] = a2;
  v11[4] = v10;
  v11[2] = v8;
  return swift_task_switch();
}

uint64_t sub_23A622EAC()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(void **)(*v1 + 24);
  v2 = *(void **)(*v1 + 32);
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  v6 = *(_QWORD *)(v5 + 40);
  if (v0)
  {
    v7 = (void *)sub_23A6905C4();

    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 40), 0);
  }
  _Block_release(*(const void **)(v5 + 40));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_23A622F60()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  double v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A690CF0();
  MEMORY[0x24BDAC7A8](v5);
  v36 = sub_23A6908E8();
  v6 = *(_QWORD *)(v36 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - v10;
  v12 = sub_23A690D14();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTimer])
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, &v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v12);
    v16 = sub_23A690CFC();
    v17 = sub_23A691044();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23A5B0000, v16, v17, "Tracking check timer already running", v18, 2u);
      MEMORY[0x23B853BD0](v18, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v35 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTimer;
    sub_23A690CC0();
    sub_23A6908DC();
    v20 = sub_23A690F9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
    v21 = v36;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v36);
    v22 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v23 = (char *)swift_allocObject();
    *((_QWORD *)v23 + 2) = 0;
    *((_QWORD *)v23 + 3) = 0;
    *((_QWORD *)v23 + 4) = v1;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v23[v22], v9, v21);
    v24 = v1;
    sub_23A5D120C((uint64_t)v4, (uint64_t)&unk_25699FFA0, (uint64_t)v23);
    swift_release();
    v25 = *(double *)&v24[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerTimerInterval];
    v26 = *(void **)&v24[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingQueue];
    v27 = swift_allocObject();
    v28 = ObjectType;
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v28;
    v29 = objc_allocWithZone((Class)type metadata accessor for RepeatingTimer());
    v30 = v24;
    v31 = v26;
    v32 = RepeatingTimer.init(interval:fireOnce:queue:_:)(0, v26, (uint64_t)sub_23A62CE78, v27, v25);
    v33 = *(void **)&v1[v35];
    *(_QWORD *)&v1[v35] = v32;

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v21);
  }
}

uint64_t sub_23A6232B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_23A6232CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[2];
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerLock;
  v0[4] = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerLock;
  v0[5] = *(_QWORD *)(v1 + v2);
  v5 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5B538] + MEMORY[0x24BE5B538]);
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_23A62334C;
  return v5();
}

uint64_t sub_23A62334C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  swift_release();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v4;
  v2[1] = sub_23A6233BC;
  return sub_23A62613C(*(_QWORD *)(v1 + 24));
}

uint64_t sub_23A6233BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A623410()
{
  _QWORD *v0;

  v0[8] = *(_QWORD *)(v0[2] + v0[4]);
  sub_23A690960();
  sub_23A5F0550(&qword_25699FEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B550], MEMORY[0x24BE5B560]);
  swift_retain();
  sub_23A690F60();
  return swift_task_switch();
}

uint64_t sub_23A6234A4()
{
  uint64_t v0;

  sub_23A690948();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A6234DC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23A690F84();
  v7 = sub_23A690F9C();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_25699FFB0;
  v10[5] = v9;
  LODWORD(v9) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  v11 = a1;
  if ((_DWORD)v9 == 1)
  {
    sub_23A5C921C((uint64_t)v6, (uint64_t *)&unk_2542D27F0);
    v12 = 0;
    v13 = 0;
  }
  else
  {
    sub_23A690F90();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if (v10[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_23A690F60();
      v13 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      v12 = 0;
      v13 = 0;
    }
  }
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = &unk_25699FFC0;
  *(_QWORD *)(v15 + 24) = v10;
  if (v13 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v13;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23A6236E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[8] = a2;
  v3[9] = a3;
  v4 = sub_23A690D14();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v5 = sub_23A690B64();
  v3[14] = v5;
  v3[15] = *(_QWORD *)(v5 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v6 = sub_23A690CB4();
  v3[18] = v6;
  v3[19] = *(_QWORD *)(v6 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699FF80);
  v3[22] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FC90);
  v3[23] = v7;
  v3[24] = *(_QWORD *)(v7 - 8);
  v3[25] = swift_task_alloc();
  v8 = sub_23A6906D8();
  v3[26] = v8;
  v3[27] = *(_QWORD *)(v8 - 8);
  v3[28] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v3[29] = v9;
  v3[30] = *(_QWORD *)(v9 - 8);
  v3[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A623864()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[8];
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTaskLock;
  v0[32] = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTaskLock;
  v0[33] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A6238B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  BOOL v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v1 + 112);
  v4 = __OFSUB__(v2, 1);
  v3 = v2 - 1 < 0;
  v5 = v2 - 1;
  if (v3 == v4)
    *(_QWORD *)(v1 + 112) = v5;
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A623914()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[8];
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_observationLock;
  v0[34] = OBJC_IVAR____TtC11DockKitCore13TrackingStand_observationLock;
  v0[35] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A623968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 288) = v5;
      *v5 = v0;
      v5[1] = sub_23A623BA4;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A623A48()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 16))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, *(_QWORD *)(v0 + 80));
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "Another tracking task running, ignoring", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A623BA4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A623BF8()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A623C34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = v0[34];
  v2 = v0[8];
  v3 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_currentObservation;
  v0[37] = OBJC_IVAR____TtC11DockKitCore13TrackingStand_currentObservation;
  v4 = v2 + v3;
  v5 = *(void **)v4;
  v0[38] = *(_QWORD *)v4;
  v6 = *(void **)(v4 + 8);
  v0[39] = v6;
  v0[40] = *(_QWORD *)(v2 + v1);
  swift_retain();
  sub_23A62CF90(v5, v6);
  return swift_task_switch();
}

uint64_t sub_23A623CB4()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A623CF8()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  char *v8;
  id v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  os_unfair_lock_s *v27;
  os_unfair_lock_s *v28;
  os_unfair_lock_s *v29;
  os_unfair_lock_s *v30;
  os_unfair_lock_s *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  _QWORD *v51;
  _QWORD *v52;
  void (*v53)(uint64_t, uint64_t);
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t (*v56)(uint64_t);

  v1 = (void *)v0[39];
  if (!v1)
  {
    v0[42] = *(_QWORD *)(v0[8] + v0[32]);
    swift_retain();
    return swift_task_switch();
  }
  v2 = (void *)v0[38];
  v4 = v0[30];
  v3 = v0[31];
  v5 = v0[29];
  v6 = v0[8] + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8 = v1;
  v7(v3, v6, v5);
  v9 = v2;
  sub_23A6909CC();
  v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  v11 = v0[2];
  v0[41] = v11;
  if (!v11)
    goto LABEL_14;
  v55 = v6;
  v13 = v0[27];
  v12 = v0[28];
  v14 = v0[26];
  sub_23A6906B4();
  v15 = objc_msgSend(v9, sel_pixelBuffer);
  v16 = _s11DockKitCore13TrackingStandC7convert4time8metadata5image011IntelligentdC021DKObservationMetadataCSg10Foundation4DateV_AA08FollowerL0CSo11CVBufferRefaSgtFZ_0(v12, v8, v15);
  v0[43] = v16;

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  if (!v16)
  {
    swift_release();
LABEL_14:
    v52 = (_QWORD *)swift_task_alloc();
    v0[48] = v52;
    *v52 = v0;
    v52[1] = sub_23A62451C;
    return sub_23A61E658();
  }
  v53 = v10;
  v54 = v7;
  v17 = v0[24];
  v18 = v0[25];
  v19 = v0[23];
  v20 = v0[8];
  swift_bridgeObjectRetain();
  sub_23A690C18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v20 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__lastLatency, v19);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
  sub_23A690C24();
  v21 = *(void **)(v20 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  if (v21)
  {
    v22 = v21;
    v23 = ActuationController.getOrientation()();

    if (v23)
    {
      v24 = v0[22];
      v25 = OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock;
      v26 = *(os_unfair_lock_s **)&v23[OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock];
      swift_retain();
      os_unfair_lock_lock(v26 + 4);
      swift_release();
      v27 = *(os_unfair_lock_s **)&v23[v25];
      swift_retain();
      os_unfair_lock_unlock(v27 + 4);
      swift_release();
      v28 = *(os_unfair_lock_s **)&v23[v25];
      swift_retain();
      os_unfair_lock_lock(v28 + 4);
      swift_release();
      v29 = *(os_unfair_lock_s **)&v23[v25];
      swift_retain();
      os_unfair_lock_unlock(v29 + 4);
      swift_release();
      v30 = *(os_unfair_lock_s **)&v23[v25];
      swift_retain();
      os_unfair_lock_lock(v30 + 4);
      swift_release();
      v31 = *(os_unfair_lock_s **)&v23[v25];
      swift_retain();
      os_unfair_lock_unlock(v31 + 4);
      swift_release();
      sub_23A690CC0();
      v32 = sub_23A690CF0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v24, 0, 1, v32);
      sub_23A690C00();

    }
  }
  v34 = v0[16];
  v33 = v0[17];
  v36 = v0[14];
  v35 = v0[15];
  static TrackingStand.getCamera(metadata:)((uint64_t)v8, v0[21]);
  sub_23A690C78();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v34, *MEMORY[0x24BE5B768], v36);
  sub_23A5F0550(&qword_25699FFD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B788], MEMORY[0x24BE5B798]);
  sub_23A690EA0();
  sub_23A690EA0();
  v37 = v0[5];
  v38 = v0[6];
  v39 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v39(v34, v36);
  v39(v33, v36);
  if (v37 == v38
    && (v40 = v0[31],
        v41 = v0[29],
        v54(v40, v55, v41),
        sub_23A6909CC(),
        v53(v40, v41),
        v42 = v0[7],
        (v0[44] = v42) != 0))
  {
    v56 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
    v43 = (_QWORD *)swift_task_alloc();
    v0[45] = v43;
    *v43 = v0;
    v43[1] = sub_23A624330;
    v44 = 6;
  }
  else
  {
    v46 = v0[43];
    v48 = v0[19];
    v47 = v0[20];
    v49 = v0[18];
    static TrackingStand.getCamera(metadata:)(v0[39], v47);
    sub_23A690A14();
    v50 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v0[46] = v50;
    v50(v47, v49);
    v56 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B4F0] + MEMORY[0x24BE5B4F0]);
    v51 = (_QWORD *)swift_task_alloc();
    v0[47] = v51;
    *v51 = v0;
    v51[1] = sub_23A624448;
    v44 = v46;
  }
  return v56(v44);
}

uint64_t sub_23A624270()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A624330()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A624384()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  swift_release();
  v1 = v0[43];
  v3 = v0[19];
  v2 = v0[20];
  v4 = v0[18];
  static TrackingStand.getCamera(metadata:)(v0[39], v2);
  sub_23A690A14();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[46] = v5;
  v5(v2, v4);
  v8 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B4F0] + MEMORY[0x24BE5B4F0]);
  v6 = (_QWORD *)swift_task_alloc();
  v0[47] = v6;
  *v6 = v0;
  v6[1] = sub_23A624448;
  return v8(v1);
}

uint64_t sub_23A624448()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A62449C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 144);

  swift_release();
  v1(v2, v3);
  *(_QWORD *)(v0 + 392) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 272));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A62451C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A624570()
{
  _QWORD *v0;

  v0[49] = *(_QWORD *)(v0[8] + v0[34]);
  swift_retain();
  return swift_task_switch();
}

void sub_23A6245BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 400) = v5;
      *v5 = v0;
      v5[1] = sub_23A62469C;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A62469C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A6246F0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A62472C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v1 = v0[34];
  v2 = v0[8];
  v3 = v2 + v0[37];
  v4 = *(void **)v3;
  v5 = *(void **)(v3 + 8);
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  sub_23A62AE70(v4, v5);
  v0[51] = *(_QWORD *)(v2 + v1);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A62478C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23A6763E8();
  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 416) = v1;
  *v1 = v0;
  v1[1] = sub_23A6247E4;
  return sub_23A626880();
}

uint64_t sub_23A6247E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A624848()
{
  _QWORD *v0;

  v0[54] = *(_QWORD *)(v0[8] + v0[32]);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A624894()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A6248D8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 304);
  v2 = *(void **)(v0 + 312);

  sub_23A62AE70(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A6249A0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = (void *)v0[53];
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[11] + 16))(v0[12], v0[8] + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v0[10]);
  v2 = v1;
  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691038();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[53];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v10;
    sub_23A6911D0();
    *v8 = v10;

    _os_log_impl(&dword_23A5B0000, v4, v5, "Failed to run tracker loop %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

  }
  else
  {
    v11 = (void *)v0[53];

  }
  (*(void (**)(_QWORD, _QWORD))(v0[11] + 8))(v0[12], v0[10]);
  v0[54] = *(_QWORD *)(v0[8] + v0[32]);
  swift_retain();
  return swift_task_switch();
}

void static TrackingStand.getCamera(metadata:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FCA0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)&v46 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FDC8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v46 - v11;
  v12 = sub_23A690B64();
  v54 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v52 = (char *)&v46 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FDD0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v46 - v21;
  v23 = sub_23A690984();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v46 - v28;
  v30 = sub_23A690CB4();
  v31 = MEMORY[0x24BDAC7A8](v30);
  v50 = (char *)&v46 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(void **)(a1 + OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_intrinsics);
  if (v34)
  {
    v48 = v32;
    v49 = (char *)v31;
    sub_23A690E1C();
    v47 = v34;
    sub_23A690978();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v29, *MEMORY[0x24BE5B570], v23);
      sub_23A5C921C((uint64_t)v22, &qword_25699FDD0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v22, v23);
    }
    v36 = v54;
    v37 = (uint64_t)v51;
    sub_23A690B4C();
    v38 = v55;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v37, 1, v55) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v52, *MEMORY[0x24BE5B780], v38);
      sub_23A5C921C(v37, &qword_25699FDC8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v52, v37, v38);
    }
    v39 = sub_23A690C48();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v53, 1, 1, v39);
    v40 = v47;
    v41 = v50;
    sub_23A690C84();
    (*(void (**)(uint64_t, char *, char *))(v48 + 32))(v56, v41, v49);
    sub_23A690CA8();

  }
  else
  {
    v35 = v49;
    sub_23A690E1C();
    sub_23A690978();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v20, 1, v23) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v27, *MEMORY[0x24BE5B570], v23);
      sub_23A5C921C((uint64_t)v20, &qword_25699FDD0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v27, v20, v23);
    }
    v42 = v55;
    v43 = (uint64_t)v10;
    sub_23A690B4C();
    v44 = v54;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v43, 1, v42) == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v15, *MEMORY[0x24BE5B780], v42);
      sub_23A5C921C(v43, &qword_25699FDC8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v15, v43, v42);
    }
    v45 = sub_23A690C48();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v35, 1, 1, v45);
    sub_23A690C90();
  }
}

uint64_t sub_23A625170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[6] = a4;
  v5[7] = a5;
  v6 = sub_23A6908C4();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v5[12] = v7;
  v5[13] = *(_QWORD *)(v7 - 8);
  v5[14] = swift_task_alloc();
  v8 = sub_23A690CF0();
  v5[15] = v8;
  v5[16] = *(_QWORD *)(v8 - 8);
  v5[17] = swift_task_alloc();
  v9 = sub_23A690D14();
  v5[18] = v9;
  v5[19] = *(_QWORD *)(v9 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A62526C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v0[22] = *(_QWORD *)(v0[6] + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationLock);
  v3 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5B528] + MEMORY[0x24BE5B528]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[23] = v1;
  *v1 = v0;
  v1[1] = sub_23A6252D8;
  return v3();
}

uint64_t sub_23A6252D8(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 257) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A625334()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  os_unfair_lock_s *v17;
  char v18;
  char v19;
  double v20;
  double v21;
  uint64_t v22;
  _QWORD *v23;
  NSObject *v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (*(_BYTE *)(v0 + 257) != 1)
  {
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  *(_QWORD *)(v0 + 192) = v2;
  if (!v2)
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 16))(*(_QWORD *)(v0 + 168), v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, *(_QWORD *)(v0 + 144));
    v25 = sub_23A690CFC();
    v26 = sub_23A691038();
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_23A5B0000, v25, (os_log_type_t)v26, "Failed to set position : ActuationController not initilized", v27, 2u);
      MEMORY[0x23B853BD0](v27, -1, -1);
    }
    v28 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
    goto LABEL_10;
  }
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = objc_allocWithZone((Class)type metadata accessor for Orientation());
  v2;
  v7 = (char *)objc_msgSend(v6, sel_init);
  *(_QWORD *)(v0 + 200) = v7;
  sub_23A6908AC();
  sub_23A690CCC();
  v9 = v8;
  v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v0 + 208) = v10;
  v10(v3, v5);
  v11 = OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock;
  v12 = *(os_unfair_lock_s **)&v7[OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock];
  swift_retain();
  os_unfair_lock_lock(v12 + 4);
  swift_release();
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore11Orientation__yaw] = v9;
  v13 = *(os_unfair_lock_s **)&v7[v11];
  swift_retain();
  os_unfair_lock_unlock(v13 + 4);
  swift_release();
  sub_23A6908AC();
  sub_23A690CD8();
  v15 = v14;
  v10(v3, v5);
  v16 = *(os_unfair_lock_s **)&v7[v11];
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  swift_release();
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore11Orientation__pitch] = v15;
  v17 = *(os_unfair_lock_s **)&v7[v11];
  swift_retain();
  os_unfair_lock_unlock(v17 + 4);
  swift_release();
  if ((sub_23A690894() & 1) != 0)
    v18 = 2;
  else
    v18 = 0;
  v19 = sub_23A6908B8();
  sub_23A6908A0();
  v21 = v20;
  *(_BYTE *)(v0 + 256) = v18;
  v22 = swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v22;
  *(_QWORD *)(v22 + 16) = v1;
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v23;
  *v23 = v0;
  v23[1] = sub_23A625660;
  return ActuationController.setOrientation(orientation:relative:duration:priority:progressCallback:)((uint64_t)v7, v19 & 1, (_BYTE *)(v0 + 256), (uint64_t)sub_23A62CAAC, v22, v21);
}

uint64_t sub_23A625660()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A6256CC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);

  sub_23A690960();
  sub_23A5F0550(&qword_25699FEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B550], MEMORY[0x24BE5B560]);
  sub_23A690F60();
  return swift_task_switch();
}

uint64_t sub_23A62574C()
{
  uint64_t v0;

  sub_23A690948();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A6257C8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A625824()
{
  uint64_t v0;

  sub_23A690960();
  sub_23A5F0550(&qword_25699FEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B550], MEMORY[0x24BE5B560]);
  sub_23A690F60();
  return swift_task_switch();
}

uint64_t sub_23A6258A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(id, uint64_t, uint64_t);
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  os_log_type_t type[8];
  id v47;
  NSObject *v48;
  uint64_t (*v49)(_QWORD);

  v1 = *(void **)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  v42 = *(id *)(v0 + 88);
  v44 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)type = *(_QWORD *)(v0 + 80);
  v47 = *(id *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);

  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v44 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v4);
  v8 = *(void (**)(id, uint64_t, uint64_t))(v5 + 16);
  v8(v42, v7, v6);
  v8(*(id *)type, v7, v6);
  v9 = v47;
  v10 = v47;
  v11 = sub_23A690CFC();
  v12 = sub_23A691038();
  if (os_log_type_enabled(v11, v12))
  {
    v43 = *(id *)(v0 + 232);
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    v14 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 64);
    v40 = *(_QWORD *)(v0 + 72);
    v41 = *(_QWORD *)(v0 + 80);
    v18 = swift_slowAlloc();
    v45 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v18 = 134218498;
    sub_23A6908AC();
    sub_23A690CCC();
    v20 = v19;
    v13(v14, v15);
    *(_QWORD *)(v0 + 24) = v20;
    sub_23A6911D0();
    v48 = v11;
    v21 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v21(v16, v17);
    *(_WORD *)(v18 + 12) = 2048;
    sub_23A6908AC();
    sub_23A690CD8();
    v23 = v22;
    v13(v14, v15);
    *(_QWORD *)(v0 + 32) = v23;
    sub_23A6911D0();
    v21(v41, v17);
    v11 = v48;
    *(_WORD *)(v18 + 22) = 2112;
    v24 = v43;
    v25 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v25;
    sub_23A6911D0();
    *v45 = v25;

    _os_log_impl(&dword_23A5B0000, v48, v12, "Failed to set position (x: %f, y: %f) with error:  %@", (uint8_t *)v18, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v45, -1, -1);
    MEMORY[0x23B853BD0](v18, -1, -1);
  }
  else
  {
    v26 = *(void **)(v0 + 232);
    v27 = *(_QWORD *)(v0 + 80);
    v28 = *(_QWORD *)(v0 + 64);
    v29 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 72) + 8);
    v29(*(_QWORD *)(v0 + 88), v28);
    v29(v27, v28);

  }
  v31 = *(_QWORD *)(v0 + 152);
  v30 = *(_QWORD *)(v0 + 160);
  v32 = *(_QWORD *)(v0 + 144);
  v34 = *(_QWORD *)(v0 + 104);
  v33 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 96);
  v36 = *(_QWORD *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v33, v36 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v35);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
  v37 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 240) = v37;
  if (v37)
  {
    v49 = (uint64_t (*)(_QWORD))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
    v38 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v38;
    *v38 = v0;
    v38[1] = sub_23A6257C8;
    return v49(0);
  }
  else
  {

    sub_23A690960();
    sub_23A5F0550(&qword_25699FEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B550], MEMORY[0x24BE5B560]);
    sub_23A690F60();
    return swift_task_switch();
  }
}

uint64_t sub_23A625CE4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC11DockKitCore18TrajectoryProgress_status) - 1 <= 2)
  {
    v8 = sub_23A690F9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = a2;
    v10 = a2;
    sub_23A5D120C((uint64_t)v7, (uint64_t)&unk_25699FEE8, (uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_23A625DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a4;
  v5 = sub_23A690D14();
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v4[7] = v6;
  v4[8] = *(_QWORD *)(v6 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A625E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v3);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 80) = v4;
  if (v4)
  {
    v13 = (uint64_t (*)(_QWORD))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v5;
    *v5 = v0;
    v5[1] = sub_23A625FEC;
    return v13(0);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, *(_QWORD *)(v0 + 32));
    v7 = sub_23A690CFC();
    v8 = sub_23A691038();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23A5B0000, v7, v8, "trajectory finished", v9, 2u);
      MEMORY[0x23B853BD0](v9, -1, -1);
    }
    v11 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 32);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A625FEC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A626048()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, *(_QWORD *)(v0 + 32));
  v1 = sub_23A690CFC();
  v2 = sub_23A691038();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "trajectory finished", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 32);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A62613C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_23A6908E8();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v4 = sub_23A690D14();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v5 = sub_23A690CF0();
  v2[15] = v5;
  v2[16] = *(_QWORD *)(v5 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A626228()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  void (*v9)(uint64_t, uint64_t);
  double v10;
  double v11;
  _QWORD *v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  *(_QWORD *)(v0 + 160) = v2;
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    v2;
    sub_23A6908D0();
    sub_23A690CCC();
    v8 = v7;
    v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    *(_QWORD *)(v0 + 168) = v9;
    v9(v3, v5);
    sub_23A6908D0();
    sub_23A690CD8();
    v11 = v10;
    v9(v4, v5);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v12;
    *v12 = v0;
    v12[1] = sub_23A626430;
    return ActuationController.setRotationalVelocity(yaw:pitch:roll:)(v8, v11, INFINITY);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 16))(*(_QWORD *)(v0 + 112), v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, *(_QWORD *)(v0 + 88));
    v14 = sub_23A690CFC();
    v15 = sub_23A691038();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_23A5B0000, v14, v15, "Failed to set velocity : ActuationController not initilized", v16, 2u);
      MEMORY[0x23B853BD0](v16, -1, -1);
    }
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A626430()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A626494()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A626518()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(id, uint64_t, uint64_t);
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  NSObject *log;
  _QWORD *v38;
  os_log_type_t type[8];
  id v40;
  id v41;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)type = *(_QWORD *)(v0 + 80);
  v40 = *(id *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v7 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v5);
  v9 = *(void (**)(id, uint64_t, uint64_t))(v6 + 16);
  v9(*(id *)type, v1, v8);
  v9(v40, v1, v8);
  v10 = v2;
  v11 = v2;
  v12 = sub_23A690CFC();
  v13 = sub_23A691038();
  if (os_log_type_enabled(v12, v13))
  {
    v41 = *(id *)(v0 + 184);
    v14 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    v15 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 120);
    v34 = v14;
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 56);
    v35 = *(_QWORD *)(v0 + 64);
    v36 = *(_QWORD *)(v0 + 72);
    v19 = swift_slowAlloc();
    v38 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v19 = 134218498;
    sub_23A6908D0();
    sub_23A690CCC();
    v21 = v20;
    v14(v15, v16);
    *(_QWORD *)(v0 + 16) = v21;
    log = v12;
    sub_23A6911D0();
    v22 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v22(v17, v18);
    *(_WORD *)(v19 + 12) = 2048;
    sub_23A6908D0();
    sub_23A690CD8();
    v24 = v23;
    v34(v15, v16);
    *(_QWORD *)(v0 + 24) = v24;
    sub_23A6911D0();
    v22(v36, v18);
    *(_WORD *)(v19 + 22) = 2112;
    v25 = v41;
    v26 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v26;
    sub_23A6911D0();
    *v38 = v26;

    _os_log_impl(&dword_23A5B0000, log, v13, "Failed to set velocity (x: %f, y: %f) with error:  %@", (uint8_t *)v19, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v38, -1, -1);
    MEMORY[0x23B853BD0](v19, -1, -1);

  }
  else
  {
    v27 = *(void **)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 72);
    v28 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 56);
    v31 = *(_QWORD *)(v0 + 64);

    v32 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v32(v28, v30);
    v32(v29, v30);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A626880()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1[8] = v0;
  v2 = sub_23A6909FC();
  v1[9] = v2;
  v1[10] = *(_QWORD *)(v2 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v3 = sub_23A690D20();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = swift_task_alloc();
  v4 = sub_23A690D68();
  v1[16] = v4;
  v1[17] = *(_QWORD *)(v4 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  v1[20] = swift_task_alloc();
  v5 = sub_23A6908C4();
  v1[21] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[22] = v6;
  v1[23] = *(_QWORD *)(v6 + 64);
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v7 = sub_23A6908E8();
  v1[26] = v7;
  v1[27] = *(_QWORD *)(v7 - 8);
  v1[28] = swift_task_alloc();
  v8 = sub_23A6908F4();
  v1[29] = v8;
  v1[30] = *(_QWORD *)(v8 - 8);
  v1[31] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v1[32] = v9;
  v1[33] = *(_QWORD *)(v9 - 8);
  v1[34] = swift_task_alloc();
  v10 = sub_23A6906D8();
  v1[35] = v10;
  v1[36] = *(_QWORD *)(v10 - 8);
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v11 = sub_23A690D14();
  v1[39] = v11;
  v1[40] = *(_QWORD *)(v11 - 8);
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A626AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(double);

  v1 = *(_QWORD *)(v0 + 64);
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore;
  v3 = *(id *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonSemaphore);
  sub_23A691104();

  v4 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__trackingButtonEnabled);
  v5 = *(id *)(v1 + v2);
  sub_23A691110();

  if ((v4 & 1) != 0)
  {
    v6 = *(_QWORD *)(v0 + 64);
    v7 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerLock;
    *(_QWORD *)(v0 + 360) = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerLock;
    *(_QWORD *)(v0 + 368) = *(_QWORD *)(v6 + v7);
    v16 = (uint64_t (*)(double))((int)*MEMORY[0x24BE5B530] + MEMORY[0x24BE5B530]);
    swift_retain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v8;
    *v8 = v0;
    v8[1] = sub_23A626D38;
    return v16(0.05);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 320) + 16))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, *(_QWORD *)(v0 + 312));
    v10 = sub_23A690CFC();
    v11 = sub_23A691044();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23A5B0000, v10, v11, "tracking disabled at start of track(), dropping", v12, 2u);
      MEMORY[0x23B853BD0](v12, -1, -1);
    }
    v13 = *(_QWORD *)(v0 + 352);
    v14 = *(_QWORD *)(v0 + 312);
    v15 = *(_QWORD *)(v0 + 320);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A626D38(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 504) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A626D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, _QWORD, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;

  if (*(_BYTE *)(v0 + 504) == 1)
  {
    v2 = *(_QWORD *)(v0 + 264);
    v1 = *(_QWORD *)(v0 + 272);
    v3 = *(_QWORD *)(v0 + 256);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 64);
    sub_23A6906B4();
    v7 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingMetrics;
    *(_QWORD *)(v0 + 384) = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingMetrics;
    v8 = *(_QWORD *)(v6 + v7) + OBJC_IVAR____TtC11DockKitCore15TrackingMetrics_trackingMode;
    v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    *(_QWORD *)(v0 + 392) = v9;
    swift_retain();
    v9(v8, v4);
    v10 = *MEMORY[0x24BE5B608];
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104);
    *(_QWORD *)(v0 + 400) = v11;
    v11(v8, v10, v4);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v3);
    sub_23A6909CC();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    v12 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 408) = v12;
    if (v12)
    {
      sub_23A6906B4();
      v28 = (uint64_t (*)(_QWORD))((int)*MEMORY[0x24BE5B4D0] + MEMORY[0x24BE5B4D0]);
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 416) = v13;
      *v13 = v0;
      v13[1] = sub_23A6271F0;
      return v28(*(_QWORD *)(v0 + 296));
    }
    else
    {
      *(_QWORD *)(v0 + 24) = 0;
      swift_retain();
      sub_23A690A5C();
      swift_release();
      *(_QWORD *)(v0 + 32) = 0;
      swift_retain();
      sub_23A690A5C();
      swift_release();
      v15 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
      v16 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 400);
      v17 = *(_QWORD *)(v0 + 296);
      v26 = *(_QWORD *)(v0 + 288);
      v27 = *(_QWORD *)(v0 + 280);
      v29 = *(_QWORD *)(v0 + 360);
      v19 = *(_QWORD *)(v0 + 88);
      v18 = *(_QWORD *)(v0 + 96);
      v20 = *(_QWORD *)(v0 + 72);
      v21 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 16))(v18, *(_QWORD *)(v21 + *(_QWORD *)(v0 + 384)) + OBJC_IVAR____TtC11DockKitCore15TrackingMetrics_trackingMode, v20);
      v16(v19, *MEMORY[0x24BE5B5F8], v20);
      LOBYTE(v16) = sub_23A6909F0();
      v15(v19, v20);
      v15(v18, v20);
      if ((v16 & 1) != 0)
        v22 = 2;
      else
        v22 = 1;
      sub_23A628420(v22);
      swift_retain();
      sub_23A67FD08(0);
      swift_release();
      sub_23A6906B4();
      sub_23A690678();
      v24 = v23;
      v25 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      *(_QWORD *)(v0 + 488) = v25;
      v25(v17, v27);
      *(_QWORD *)(v0 + 40) = v24;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FC90);
      sub_23A6909D8();
      *(_QWORD *)(v0 + 496) = *(_QWORD *)(v21 + v29);
      sub_23A690960();
      sub_23A5F0550(&qword_25699FEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B550], MEMORY[0x24BE5B560]);
      swift_retain();
      sub_23A690F60();
      return swift_task_switch();
    }
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A6271F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 296);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  *(_QWORD *)(*(_QWORD *)v1 + 424) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23A62726C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  id v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t (*v57)(void);

  if (!v0[53])
    goto LABEL_16;
  v2 = v0[30];
  v1 = v0[31];
  v3 = v0[29];
  sub_23A690900();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 != *MEMORY[0x24BE5B480])
  {
    if (v4 == *MEMORY[0x24BE5B478])
    {
      v22 = v0[40];
      v21 = v0[41];
      v23 = v0[39];
      v24 = v0[31];
      v25 = (char *)v0[25];
      v26 = v0[21];
      v27 = v0[22];
      v28 = v0[8];
      (*(void (**)(uint64_t, _QWORD))(v0[30] + 96))(v24, v0[29]);
      v56 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
      v56(v25, v24, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v21, v28 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v23);
      v29 = sub_23A690CFC();
      v30 = sub_23A69102C();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_23A5B0000, v29, v30, "Track command: position", v31, 2u);
        MEMORY[0x23B853BD0](v31, -1, -1);
      }
      v32 = v0[40];
      v33 = v0[41];
      v34 = v0[39];
      v35 = v0[24];
      v36 = v0[22];
      v54 = v0[25];
      v37 = v0[20];
      v38 = v0[21];
      v55 = (void *)v0[8];

      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
      v39 = sub_23A690F9C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v37, 1, 1, v39);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v54, v38);
      v40 = (*(unsigned __int8 *)(v36 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      v41 = (char *)swift_allocObject();
      *((_QWORD *)v41 + 2) = 0;
      *((_QWORD *)v41 + 3) = 0;
      *((_QWORD *)v41 + 4) = v55;
      v56(&v41[v40], v35, v38);
      v42 = v55;
      sub_23A5D120C(v37, (uint64_t)&unk_25699FED8, (uint64_t)v41);
      swift_release();
      swift_release();
      v43 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v44 = v54;
    }
    else
    {
      if (v4 == *MEMORY[0x24BE5B470])
      {
        (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[40] + 16))(v0[43], v0[8] + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v0[39]);
        v45 = sub_23A690CFC();
        v46 = sub_23A69102C();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v47 = 0;
          _os_log_impl(&dword_23A5B0000, v45, v46, "Track command: no command", v47, 2u);
          MEMORY[0x23B853BD0](v47, -1, -1);
        }
        v48 = v0[43];
        v49 = v0[39];
        v50 = v0[40];

        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
        goto LABEL_16;
      }
      v52 = v0[30];
      v51 = v0[31];
      v38 = v0[29];
      swift_release();
      v43 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v44 = v51;
    }
    v43(v44, v38);
LABEL_16:
    v57 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5B508] + MEMORY[0x24BE5B508]);
    v53 = (_QWORD *)swift_task_alloc();
    v0[55] = v53;
    *v53 = v0;
    v53[1] = sub_23A6277D8;
    return v57();
  }
  v5 = v0[42];
  v6 = v0[39];
  v7 = v0[40];
  v8 = v0[31];
  v9 = v0[28];
  v10 = v0[26];
  v11 = v0[27];
  v12 = v0[8];
  (*(void (**)(uint64_t, _QWORD))(v0[30] + 96))(v8, v0[29]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v9, v8, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v12 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v6);
  v13 = sub_23A690CFC();
  v14 = sub_23A69102C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A5B0000, v13, v14, "Track command: velocity", v15, 2u);
    MEMORY[0x23B853BD0](v15, -1, -1);
  }
  v16 = v0[42];
  v17 = v0[39];
  v18 = v0[40];

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  v19 = (_QWORD *)swift_task_alloc();
  v0[54] = v19;
  *v19 = v0;
  v19[1] = sub_23A627700;
  return sub_23A62613C(v0[28]);
}

uint64_t sub_23A627700()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A627754()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = v0[27];
  v1 = v0[28];
  v3 = v0[26];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5B508] + MEMORY[0x24BE5B508]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[55] = v4;
  *v4 = v0;
  v4[1] = sub_23A6277D8;
  return v6();
}

uint64_t sub_23A6277D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A62782C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char v4;
  uint64_t v5;
  double v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t ObjectType;
  id v15;
  void (*v16)(uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v19;
  uint64_t (*v20)(void);

  v1 = sub_23A690918();
  v0[56] = v1;
  swift_retain();
  sub_23A690990();
  swift_release();
  sub_23A69081C();
  v2 = sub_23A62B754(v1);
  v0[57] = v2;
  v0[6] = v2;
  swift_retain();
  sub_23A690A5C();
  swift_release();
  swift_retain();
  sub_23A680A60(v1);
  swift_release();
  sub_23A628100();
  v3 = COERCE_DOUBLE(sub_23A690768());
  if ((v4 & 1) == 0)
  {
    v5 = v0[8];
    v6 = 1.0 / v3;
    if (*(double *)(v5 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerTimerInterval) != 1.0 / v3)
    {
      *(double *)(v5 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerTimerInterval) = v6;
      v7 = *(void **)(v5 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTimer);
      if (v7)
      {
        v9 = v0[18];
        v8 = v0[19];
        v10 = v0[16];
        v11 = v0[17];
        v13 = v0[14];
        v12 = (_QWORD *)v0[15];
        v19 = v0[13];
        ObjectType = swift_getObjectType();
        v15 = v7;
        sub_23A690D5C();
        MEMORY[0x23B852C28](v9, v6);
        v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
        v16(v9, v10);
        sub_23A631178(v12);
        MEMORY[0x23B852FAC](v8, v12, ObjectType, v6);
        (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v12, v19);
        v16(v8, v10);

      }
    }
  }
  v20 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5B498] + MEMORY[0x24BE5B498]);
  v17 = (_QWORD *)swift_task_alloc();
  v0[58] = v17;
  *v17 = v0;
  v17[1] = sub_23A627A40;
  return v20();
}

uint64_t sub_23A627A40()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A627A94()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v3)(uint64_t, uint64_t);
  void (*v4)(uint64_t, _QWORD, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;

  if (*(_BYTE *)(v0[8] + OBJC_IVAR____TtC11DockKitCore13TrackingStand_debugEnabled) == 1)
  {
    v16 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5B500] + MEMORY[0x24BE5B500]);
    v1 = (_QWORD *)swift_task_alloc();
    v0[59] = v1;
    *v1 = v0;
    v1[1] = sub_23A627CEC;
    return v16();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    v3 = (void (*)(uint64_t, uint64_t))v0[49];
    v4 = (void (*)(uint64_t, _QWORD, uint64_t))v0[50];
    v5 = v0[37];
    v14 = v0[36];
    v15 = v0[35];
    v17 = v0[45];
    v7 = v0[11];
    v6 = v0[12];
    v8 = v0[8];
    v9 = v0[9];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[10] + 16))(v6, *(_QWORD *)(v8 + v0[48]) + OBJC_IVAR____TtC11DockKitCore15TrackingMetrics_trackingMode, v9);
    v4(v7, *MEMORY[0x24BE5B5F8], v9);
    LOBYTE(v4) = sub_23A6909F0();
    v3(v7, v9);
    v3(v6, v9);
    if ((v4 & 1) != 0)
      v10 = 2;
    else
      v10 = 1;
    sub_23A628420(v10);
    swift_retain();
    sub_23A67FD08(0);
    swift_release();
    sub_23A6906B4();
    sub_23A690678();
    v12 = v11;
    v13 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v0[61] = v13;
    v13(v5, v15);
    v0[5] = v12;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FC90);
    sub_23A6909D8();
    v0[62] = *(_QWORD *)(v8 + v17);
    sub_23A690960();
    sub_23A5F0550(&qword_25699FEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B550], MEMORY[0x24BE5B560]);
    swift_retain();
    sub_23A690F60();
    return swift_task_switch();
  }
}

uint64_t sub_23A627CEC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A627D48()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  void (*v3)(uint64_t, _QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0[60];
  if (v1)
  {
    v0[7] = v1;
    swift_retain();
    swift_retain();
    sub_23A690A5C();
    swift_release();
    swift_release_n();
  }
  swift_release();
  swift_release();
  swift_release();
  v2 = (void (*)(uint64_t, uint64_t))v0[49];
  v3 = (void (*)(uint64_t, _QWORD, uint64_t))v0[50];
  v4 = v0[37];
  v14 = v0[36];
  v15 = v0[35];
  v16 = v0[45];
  v6 = v0[11];
  v5 = v0[12];
  v7 = v0[8];
  v8 = v0[9];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[10] + 16))(v5, *(_QWORD *)(v7 + v0[48]) + OBJC_IVAR____TtC11DockKitCore15TrackingMetrics_trackingMode, v8);
  v3(v6, *MEMORY[0x24BE5B5F8], v8);
  LOBYTE(v3) = sub_23A6909F0();
  v2(v6, v8);
  v2(v5, v8);
  if ((v3 & 1) != 0)
    v9 = 2;
  else
    v9 = 1;
  sub_23A628420(v9);
  swift_retain();
  sub_23A67FD08(0);
  swift_release();
  sub_23A6906B4();
  sub_23A690678();
  v11 = v10;
  v12 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[61] = v12;
  v12(v4, v15);
  v0[5] = v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699FC90);
  sub_23A6909D8();
  v0[62] = *(_QWORD *)(v7 + v16);
  sub_23A690960();
  sub_23A5F0550(&qword_25699FEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B550], MEMORY[0x24BE5B560]);
  swift_retain();
  sub_23A690F60();
  return swift_task_switch();
}

uint64_t sub_23A627F98()
{
  sub_23A690948();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A627FDC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 488))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 280));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23A628100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  unint64_t result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  char v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD v28[2];
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v1 = sub_23A690B1C();
  v33 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v28 - v5;
  result = sub_23A6907D4();
  if (result)
  {
    v8 = result;
    if (result >> 62)
    {
      result = sub_23A691374();
      v9 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v9 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
          return result;
        }
        v28[1] = v0;
        v10 = 0;
        v31 = v8 & 0xC000000000000001;
        v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v32 = v8;
        do
        {
          if (v31)
            MEMORY[0x23B85312C](v10, v8);
          else
            swift_retain();
          sub_23A690B94();
          v11 = sub_23A690B10();
          v12 = *(void (**)(char *, uint64_t))(v33 + 8);
          v12(v6, v1);
          if (v11)
          {
            v13 = sub_23A690AD4();
            v15 = v14;
            swift_release();
            if ((v15 & 1) == 0)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                v16 = v29;
              else
                v16 = sub_23A5C5BE0(0, v29[2] + 1, 1, v29);
              v18 = v16[2];
              v17 = v16[3];
              if (v18 >= v17 >> 1)
                v16 = sub_23A5C5BE0((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
              v16[2] = v18 + 1;
              v29 = v16;
              v16[v18 + 4] = v13;
            }
          }
          sub_23A690B94();
          v19 = sub_23A690B04();
          v12(v4, v1);
          if (v19)
          {
            v20 = sub_23A690A98();
            v22 = v21;
            swift_release();
            if ((v22 & 1) == 0)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                v23 = v30;
              else
                v23 = sub_23A5C5BE0(0, v30[2] + 1, 1, v30);
              v25 = v23[2];
              v24 = v23[3];
              if (v25 >= v24 >> 1)
                v23 = sub_23A5C5BE0((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
              v23[2] = v25 + 1;
              v30 = v23;
              v23[v25 + 4] = v20;
            }
          }
          ++v10;
          swift_release();
          v8 = v32;
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
        v26 = v29;
        v27 = v30;
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    v26 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v27 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_29:
    v34 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F0C0);
    sub_23A6909D8();
    v34 = v27;
    return sub_23A6909D8();
  }
  return result;
}

void sub_23A628420(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  char *v17;
  uint64_t v18;
  char *v19;
  objc_super v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (char *)sub_23A61C3F4();
  if (v6)
  {
    v7 = OBJC_IVAR____TtC11DockKitCore13SensorTracker_state;
    v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC11DockKitCore13SensorTracker_state];
    if (v8 && *(_QWORD *)(v8 + OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state) == a1)
    {

    }
    else
    {
      v19 = v6;
      v9 = (objc_class *)type metadata accessor for SensorTrackerState();
      v10 = (char *)objc_allocWithZone(v9);
      *(_QWORD *)&v10[OBJC_IVAR____TtC11DockKitCore18SensorTrackerState_state] = a1;
      v20.receiver = v10;
      v20.super_class = v9;
      v11 = objc_msgSendSuper2(&v20, sel_init);
      v12 = *(void **)&v19[v7];
      *(_QWORD *)&v19[v7] = v11;
      v13 = v11;

      v14 = sub_23A690F9C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = 0;
      v15[3] = 0;
      v15[4] = v1;
      v15[5] = v19;
      v15[6] = v13;
      v16 = v1;
      v17 = v19;
      sub_23A5D120C((uint64_t)v5, (uint64_t)&unk_25699FEB8, (uint64_t)v15);
      swift_release();

    }
  }
}

uint64_t sub_23A628598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v7 = sub_23A690D14();
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A6285FC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC11DockKitCore13TrackingStand_sensorController);
  *(_QWORD *)(v0 + 112) = v1;
  if (v1)
  {
    v3 = *(void **)(v0 + 72);
    v2 = *(void **)(v0 + 80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9A0);
    inited = swift_initStackObject();
    *(_QWORD *)(v0 + 120) = inited;
    *(_OWORD *)(inited + 16) = xmmword_23A696520;
    *(_QWORD *)(inited + 32) = v3;
    v11 = inited;
    sub_23A690F30();
    v5 = v11;
    *(_QWORD *)(v0 + 128) = v11;
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_23A696520;
    *(_QWORD *)(v6 + 32) = v2;
    v12 = v6;
    sub_23A690F30();
    *(_QWORD *)(v0 + 136) = v12;
    v1;
    v7 = v3;
    v8 = v2;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v9;
    *v9 = v0;
    v9[1] = sub_23A628734;
    return sub_23A677BB4(v5, v12);
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A628734()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(void **)(v2 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A6287CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  void *v16;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(void **)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(void **)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v5);
  v7 = v2;
  v8 = v2;
  v9 = sub_23A690CFC();
  v10 = sub_23A691044();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v0 + 152);
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 138412290;
    v14 = v11;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 56) = v15;
    sub_23A6911D0();
    *v13 = v15;

    _os_log_impl(&dword_23A5B0000, v9, v10, "Unable to set tracker sensor state threw %@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v13, -1, -1);
    MEMORY[0x23B853BD0](v12, -1, -1);

  }
  else
  {
    v16 = *(void **)(v0 + 152);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A6289B4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23A690D14();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v23 - v9;
  v11 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTimer;
  v12 = *(void **)&v0[OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackingTimer];
  if (!v12)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, &v0[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v4);
    v15 = sub_23A690CFC();
    v18 = sub_23A691044();
    if (!os_log_type_enabled(v15, v18))
    {
      v10 = v8;
      goto LABEL_8;
    }
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_23A5B0000, v15, v18, "Tracking loop: no loop running", v17, 2u);
    v10 = v8;
    goto LABEL_6;
  }
  v13 = v12;
  sub_23A63142C();

  v14 = *(void **)&v1[v11];
  *(_QWORD *)&v1[v11] = 0;

  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, &v1[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v4);
  v15 = sub_23A690CFC();
  v16 = sub_23A691044();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_23A5B0000, v15, v16, "Tracking loop stopped", v17, 2u);
LABEL_6:
    MEMORY[0x23B853BD0](v17, -1, -1);
  }
LABEL_8:

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v19 = sub_23A690F9C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v1;
  v21 = v1;
  sub_23A5D10B8((uint64_t)v3, (uint64_t)&unk_25699FDE0, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_23A628C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a1;
  v4[4] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A628C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v3);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 64) = v4;
  if (v4)
  {
    v7 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5B4B8] + MEMORY[0x24BE5B4B8]);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v5;
    *v5 = v0;
    v5[1] = sub_23A628D7C;
    return v7();
  }
  else
  {
    **(_BYTE **)(v0 + 24) = 1;
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A628D7C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A628DD8()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 24) = *(_QWORD *)(v0 + 64) == 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23A628E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;

  v1 = v0;
  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoCheckTimer;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoCheckTimer))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
    v7 = sub_23A690CFC();
    v8 = sub_23A691044();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23A5B0000, v7, v8, "Video check timer already running", v9, 2u);
      MEMORY[0x23B853BD0](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v11 = objc_allocWithZone((Class)type metadata accessor for RepeatingTimer());
    swift_retain();
    v12 = RepeatingTimer.init(interval:fireOnce:queue:_:)(0, 0, (uint64_t)sub_23A62CFE0, v10, 0.5);
    v14 = *(id *)(v1 + v6);
    *(_QWORD *)(v1 + v6) = v12;
    swift_release();

  }
}

void sub_23A628FB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *v21;
  _BYTE *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A690D14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x23B853C6C](a1 + 16);
  if (v9)
  {
    v10 = (_BYTE *)v9;
    v11 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoLock;
    v12 = *(id *)(v9 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoLock);
    sub_23A691104();

    v13 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoStreamConnected;
    if ((v10[OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoStreamConnected] & 1) == 0)
    {
      v14 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_motionStopped;
      if ((v10[OBJC_IVAR____TtC11DockKitCore13TrackingStand_motionStopped] & 1) == 0)
      {
        (*(void (**)(char *, _BYTE *, uint64_t))(v6 + 16))(v8, &v10[OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger], v5);
        v15 = sub_23A690CFC();
        v16 = sub_23A691044();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = (uint8_t *)swift_slowAlloc();
          v25 = v14;
          v18 = v17;
          *(_WORD *)v17 = 0;
          _os_log_impl(&dword_23A5B0000, v15, v16, "stopping wheels and stand due to camera inactivity", v17, 2u);
          v19 = v18;
          v14 = v25;
          MEMORY[0x23B853BD0](v19, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_23A6296E4();
        v10[v14] = 1;
        v20 = sub_23A690F9C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
        v21 = (_QWORD *)swift_allocObject();
        v21[2] = 0;
        v21[3] = 0;
        v21[4] = v10;
        v22 = v10;
        sub_23A5D120C((uint64_t)v4, (uint64_t)&unk_25699FFE0, (uint64_t)v21);
        swift_release();
      }
    }
    v10[v13] = 0;
    v23 = *(id *)&v10[v11];
    sub_23A691110();

  }
}

uint64_t sub_23A6291EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  os_log_type_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - v7;
  v9 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoCheckTimer;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_videoCheckTimer);
  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v0 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
    v13 = sub_23A690CFC();
    v16 = sub_23A691044();
    if (!os_log_type_enabled(v13, v16))
    {
      v8 = v6;
      goto LABEL_8;
    }
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A5B0000, v13, v16, "Video connection check loop: no loop running", v15, 2u);
    v8 = v6;
    goto LABEL_6;
  }
  v11 = v10;
  sub_23A63142C();

  v12 = *(void **)(v1 + v9);
  *(_QWORD *)(v1 + v9) = 0;

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
  v13 = sub_23A690CFC();
  v14 = sub_23A691044();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_23A5B0000, v13, v14, "Video connection check loop stopped", v15, 2u);
LABEL_6:
    MEMORY[0x23B853BD0](v15, -1, -1);
  }
LABEL_8:

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_23A6293D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  sub_23A690CF0();
  v4[3] = swift_task_alloc();
  v5 = sub_23A6908E8();
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A629450()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[2];
  sub_23A690CC0();
  sub_23A6908DC();
  v2 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerLock;
  v0[7] = OBJC_IVAR____TtC11DockKitCore13TrackingStand_trackerLock;
  v0[8] = *(_QWORD *)(v1 + v2);
  v5 = (uint64_t (*)(void))((int)*MEMORY[0x24BE5B538] + MEMORY[0x24BE5B538]);
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  *v3 = v0;
  v3[1] = sub_23A6294F8;
  return v5();
}

uint64_t sub_23A6294F8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  swift_release();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 80) = v2;
  *v2 = v4;
  v2[1] = sub_23A62956C;
  return sub_23A62613C(*(_QWORD *)(v1 + 48));
}

uint64_t sub_23A62956C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A6295C0()
{
  _QWORD *v0;

  v0[11] = *(_QWORD *)(v0[2] + v0[7]);
  sub_23A690960();
  sub_23A5F0550(&qword_25699FEC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B550], MEMORY[0x24BE5B560]);
  swift_retain();
  sub_23A690F60();
  return swift_task_switch();
}

uint64_t sub_23A629654()
{
  sub_23A690948();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A629698()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_23A6296E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23A690D14();
  v3 = *(_QWORD *)(v2 - 8);
  result = (void *)MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_assertion;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_assertion))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1 + OBJC_IVAR____TtC11DockKitCore17DockCoreAccessory_logger, v2);
    v8 = sub_23A690CFC();
    v9 = sub_23A691044();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23A5B0000, v8, v9, "[IdleTimer] Stopped Idling Prevention", v10, 2u);
      MEMORY[0x23B853BD0](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    result = *(void **)(v1 + v7);
    if (result)
    {
      objc_msgSend(result, sel_invalidate);
      *(_QWORD *)(v1 + v7) = 0;
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_23A629820()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_23A681EE4();
  swift_release();
  return v0;
}

uint64_t sub_23A6298B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v1);
  sub_23A6909CC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v6[1])
  {
    sub_23A690930();
    swift_release();
  }
  return 0;
}

BOOL sub_23A629AE4()
{
  return sub_23A62BD40((uint64_t)&unk_250B77E70, (uint64_t)&unk_25699F070);
}

uint64_t sub_23A629B0C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  return v3(1);
}

BOOL sub_23A629BAC()
{
  return sub_23A62BD40((uint64_t)&unk_250B77E48, (uint64_t)&unk_25699F068);
}

uint64_t sub_23A629BD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  return v3(4);
}

BOOL sub_23A629C74()
{
  return sub_23A62BD40((uint64_t)&unk_250B77BA0, (uint64_t)&unk_25699FDF0);
}

uint64_t sub_23A629C88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  return v3(2);
}

BOOL sub_23A629D18()
{
  return sub_23A62BD40((uint64_t)&unk_250B77BC8, (uint64_t)&unk_25699FE00);
}

uint64_t sub_23A629D2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  return v3(5);
}

uint64_t sub_23A629DBC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 24) = v1;
  *(_BYTE *)(v2 + 72) = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A629E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v3);
  sub_23A6909CC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 56) = v4;
  if (v4)
  {
    sub_23A69090C();
    v7 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v5;
    *v5 = v0;
    v5[1] = sub_23A629F18;
    return v7(3);
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 56) != 0);
  }
}

uint64_t sub_23A629F18()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A629F6C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 56) != 0);
}

uint64_t sub_23A62A0DC(char a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  _QWORD *v6;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  a3;
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_23A5D3244;
  return sub_23A629DBC(a1);
}

uint64_t sub_23A62A150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *);
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v5 = v4;
  if (a3)
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a3;
    *(_QWORD *)(v10 + 24) = a4;
    v11 = sub_23A62BFA0;
  }
  else
  {
    v11 = 0;
    v10 = 0;
  }
  v12 = OBJC_IVAR____TtC11DockKitCore13TrackingStand_debugMessageCallbacks;
  sub_23A5D0340(a3);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *(_QWORD *)(v5 + v12);
  *(_QWORD *)(v5 + v12) = 0x8000000000000000;
  sub_23A61650C((uint64_t)v11, v10, a1, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v5 + v12) = v15;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A62A238(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_appID);
  *v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_23A62A270()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_isInferenceEnabled) = 0;
}

uint64_t sub_23A62A280(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_23A5F2890;
  return v8(a1);
}

unint64_t sub_23A62A2E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542D27E0;
  if (!qword_2542D27E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542D27D0);
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2542D27E0);
  }
  return result;
}

unint64_t sub_23A62A330()
{
  unint64_t result;

  result = qword_25699FCE8;
  if (!qword_25699FCE8)
  {
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE13E0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_25699FCE8);
  }
  return result;
}

uint64_t type metadata accessor for TrackingStand()
{
  uint64_t result;

  result = qword_25699FE38;
  if (!qword_25699FE38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A62A3B0()
{
  return objectdestroyTm();
}

uint64_t sub_23A62A3B8()
{
  return objectdestroyTm();
}

uint64_t sub_23A62A3C0()
{
  return objectdestroyTm();
}

uint64_t sub_23A62A3C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A5F2890;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_23A62A42C()
{
  return objectdestroyTm();
}

uint64_t sub_23A62A434(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A620C44(a1, v4, v5, v6);
}

uint64_t sub_23A62A4A0()
{
  return objectdestroyTm();
}

uint64_t sub_23A62A4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F2890;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23A62A508(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X8 }
  return MEMORY[0x24BEE4AF8];
}

char *sub_23A62A734(unint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char **v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  _BYTE *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  float v43;
  float v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char *v50;
  void *v51;
  id v52;
  void *v53;
  uint64_t v55;
  char *v56;
  char *v57;
  objc_super v58;
  uint64_t v59;

  v7 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FollowerMetadata()), sel_init);
  sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  v8 = sub_23A691194();
  v9 = *(void **)&v7[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_portType];
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_portType] = v8;

  v59 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23A691374();
    if (v10)
    {
LABEL_3:
      if (v10 >= 1)
      {
        v55 = a3;
        v56 = a4;
        v57 = v7;
        v11 = 0;
        while (1)
        {
          v33 = (a1 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x23B85312C](v11, a1)
              : *(id *)(a1 + 8 * v11 + 32);
          v34 = v33;
          objc_opt_self();
          v35 = (void *)swift_dynamicCastObjCClass();
          if (v35)
            break;
          objc_opt_self();
          v37 = swift_dynamicCastObjCClass();
          if (v37)
          {
            v36 = (void *)v37;
            v13 = 0;
            v15 = &selRef_bodyID;
            v14 = 1;
LABEL_7:
            v16 = objc_msgSend(v36, *v15, v55, v56);
            objc_msgSend(v34, sel_bounds);
            v18 = v17;
            objc_msgSend(v34, sel_bounds);
            v20 = v19;
            objc_msgSend(v34, sel_bounds);
            v22 = v21;
            objc_msgSend(v34, sel_bounds);
            v24 = v23;
            v25 = (objc_class *)type metadata accessor for DockCoreObservation();
            v26 = objc_allocWithZone(v25);
            *(_QWORD *)&v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_identifier] = v16;
            *(_QWORD *)&v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_type] = v14;
            *(_QWORD *)&v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_X] = v18;
            *(_QWORD *)&v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_Y] = v20;
            *(_QWORD *)&v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_width] = v22;
            *(_QWORD *)&v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_height] = v24;
            *(_QWORD *)&v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_trackerID] = -1;
            v27 = &v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_groupId];
            *(_QWORD *)v27 = 0;
            v27[8] = 1;
            v28 = &v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_yawAngle];
            *(_QWORD *)v28 = v13;
            v28[8] = 0;
            v29 = &v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_pitchAngle];
            *(_QWORD *)v29 = 0;
            v29[8] = 1;
            *(_QWORD *)&v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_confidence] = 0x3FF0000000000000;
            v30 = &v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_printConfidence];
            *(_QWORD *)v30 = 0;
            v30[8] = 1;
            v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_newTrack] = 1;
            v31 = &v26[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_modality];
            *(_QWORD *)v31 = 0;
            v31[8] = 1;
            v58.receiver = v26;
            v58.super_class = v25;
            v32 = objc_msgSendSuper2(&v58, sel_init);
            MEMORY[0x23B852D78]();
            if (*(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_23A690F3C();
            sub_23A690F48();
            sub_23A690F30();

          }
          ++v11;

          if (v10 == v11)
          {
            swift_bridgeObjectRelease();
            v38 = v59;
            a4 = v56;
            v7 = v57;
            a3 = v55;
            goto LABEL_22;
          }
        }
        v36 = v35;
        if (objc_msgSend(v35, sel_hasYawAngle))
        {
          objc_msgSend(v36, sel_yawAngle);
          v13 = v12;
          v14 = 0;
        }
        else
        {
          v14 = 0;
          v13 = 0;
        }
        v15 = &selRef_faceID;
        goto LABEL_7;
      }
LABEL_29:
      __break(1u);
      JUMPOUT(0x23A62AE14);
    }
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v38 = MEMORY[0x24BEE4AF8];
LABEL_22:
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_observations] = v38;
  swift_bridgeObjectRelease();
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(_DWORD *)&v7[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_orientation] = a3;
  v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_init);
  objc_msgSend(v39, sel_timeIntervalSince1970);
  v41 = v40;

  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_timestamp] = v41;
  if (a4)
  {
    v42 = (double *)&a4[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions];
    v43 = *(double *)&a4[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_referenceDimensions];
    *(float *)&v7[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_referenceWidth] = v43;
    v44 = v42[1];
    *(float *)&v7[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_referenceHeight] = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F3B0);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_23A697EA0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E9B0);
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_23A697EA0;
    *(_QWORD *)(v46 + 32) = *(_QWORD *)&a4[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fx];
    *(_QWORD *)(v46 + 40) = 0;
    *(_QWORD *)(v46 + 48) = *(_QWORD *)&a4[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_ox];
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699E1D0);
    *(_QWORD *)(v45 + 56) = v47;
    *(_QWORD *)(v45 + 32) = v46;
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_23A697EA0;
    *(_QWORD *)(v48 + 32) = 0;
    *(_QWORD *)(v48 + 40) = *(_QWORD *)&a4[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_fy];
    *(_QWORD *)(v48 + 48) = *(_QWORD *)&a4[OBJC_IVAR____TtC11DockKitCore17CameraCalibration_oy];
    *(_QWORD *)(v45 + 64) = v48;
    *(_QWORD *)(v45 + 120) = v47;
    *(_QWORD *)(v45 + 88) = v47;
    *(_QWORD *)(v45 + 96) = &unk_250B724E8;
    v49 = objc_allocWithZone(MEMORY[0x24BDBCE30]);
    v50 = a4;
    v51 = (void *)sub_23A690F00();
    swift_bridgeObjectRelease();
    v52 = objc_msgSend(v49, sel_initWithArray_, v51);

    v53 = *(void **)&v7[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_intrinsics];
    *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_intrinsics] = v52;

  }
  return v7;
}

void sub_23A62AE24(uint64_t a1)
{
  sub_23A621E24(a1);
}

unint64_t sub_23A62AE2C()
{
  unint64_t result;

  result = qword_25699FDB0;
  if (!qword_25699FDB0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for DKCoreErrors, &type metadata for DKCoreErrors);
    atomic_store(result, &qword_25699FDB0);
  }
  return result;
}

void sub_23A62AE70(void *a1, void *a2)
{
  if (a2)
  {

  }
}

uint64_t _s11DockKitCore13TrackingStandC7convert4time8metadata5image011IntelligentdC021DKObservationMetadataCSg10Foundation4DateV_AA08FollowerL0CSo11CVBufferRefaSgtFZ_0(uint64_t a1, char *a2, void *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  _QWORD *v31;
  unint64_t *v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  char *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  char *v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;

  v57 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FF80);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A6906D8();
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v54 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v48 - v13;
  v15 = sub_23A69072C();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v53 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v51 = (char *)&v48 - v18;
  v19 = *(_QWORD *)&a2[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_focusObservation];
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_23A691374();
    if (v20)
    {
LABEL_3:
      if ((v19 & 0xC000000000000001) != 0)
      {
        v22 = (char *)MEMORY[0x23B85312C](0, v19);
      }
      else
      {
        v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v21)
        {
          __break(1u);
          goto LABEL_36;
        }
        v22 = (char *)*(id *)(v19 + 32);
      }
      a2 = v22;
      swift_bridgeObjectRelease();
      sub_23A690720();
      sub_23A6906B4();
      v3 = sub_23A690AE0();
      swift_allocObject();
      v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
      a3 = (void *)sub_23A690ABC();
      swift_retain();
      v19 = (unint64_t)sub_23A5C6008(0, 1, 1, v23);
      v4 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      v20 = v4 + 1;
      if (v4 < v21 >> 1)
      {
LABEL_7:
        v61 = v3;
        v62 = sub_23A5F0550(&qword_25699FF88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B718], MEMORY[0x24BE5B710]);
        *(_QWORD *)&v60 = a3;
        *(_QWORD *)(v19 + 16) = v20;
        sub_23A62CD34(&v60, v19 + 40 * v4 + 32);
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v14, v57, v56);
        v24 = sub_23A690CF0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 1, 1, v24);
        v25 = objc_allocWithZone((Class)sub_23A690C30());
        v26 = sub_23A690C0C();

        swift_release();
        return v26;
      }
LABEL_36:
      v19 = (unint64_t)sub_23A5C6008((_QWORD *)(v21 > 1), v20, 1, (_QWORD *)v19);
      goto LABEL_7;
    }
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_3;
  }
  v49 = v9;
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)&a2[OBJC_IVAR____TtC11DockKitCore16FollowerMetadata_observations];
  if (!(v27 >> 62))
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v28)
      goto LABEL_11;
LABEL_38:
    swift_bridgeObjectRelease();
LABEL_39:
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v14, v57, v56);
    v45 = sub_23A690CF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v49, 1, 1, v45);
    v46 = objc_allocWithZone((Class)sub_23A690C30());
    v47 = a3;
    return sub_23A690C0C();
  }
  swift_bridgeObjectRetain();
  result = sub_23A691374();
  v28 = result;
  if (!result)
    goto LABEL_38;
LABEL_11:
  if (v28 >= 1)
  {
    v48 = a3;
    v30 = 0;
    v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v58 = v27 & 0xC000000000000001;
    v52 = v28;
    v50 = v27;
    while (1)
    {
      if (v58)
        v35 = (char *)MEMORY[0x23B85312C](v30, v27);
      else
        v35 = (char *)*(id *)(v27 + 8 * v30 + 32);
      v36 = v35;
      v37 = *(_QWORD *)&v35[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_type];
      if (v37 == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v14, v57, v56);
        sub_23A690720();
        v43 = sub_23A690AA4();
        swift_allocObject();
        v39 = sub_23A690A80();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_23A5C6008(0, v31[2] + 1, 1, v31);
        v41 = v31[2];
        v44 = v31[3];
        v42 = v41 + 1;
        if (v41 >= v44 >> 1)
          v31 = sub_23A5C6008((_QWORD *)(v44 > 1), v41 + 1, 1, v31);
        v61 = v43;
        v32 = (unint64_t *)&unk_25699FF90;
        v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B6E8];
        v34 = MEMORY[0x24BE5B6E0];
      }
      else
      {
        if (v37)
        {

          goto LABEL_15;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
        sub_23A690720();
        if ((v36[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_yawAngle + 8] & 1) == 0)
        {
          v59 = *(_QWORD *)&v36[OBJC_IVAR____TtC11DockKitCore19DockCoreObservation_yawAngle];
          sub_23A62A330();
          sub_23A690DC8();
        }
        v38 = sub_23A690AE0();
        swift_allocObject();
        v39 = sub_23A690ABC();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_23A5C6008(0, v31[2] + 1, 1, v31);
        v41 = v31[2];
        v40 = v31[3];
        v42 = v41 + 1;
        v27 = v50;
        if (v41 >= v40 >> 1)
          v31 = sub_23A5C6008((_QWORD *)(v40 > 1), v41 + 1, 1, v31);
        v61 = v38;
        v32 = &qword_25699FF88;
        v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B718];
        v34 = MEMORY[0x24BE5B710];
      }
      v62 = sub_23A5F0550(v32, v33, v34);
      *(_QWORD *)&v60 = v39;
      v31[2] = v42;
      sub_23A62CD34(&v60, (uint64_t)&v31[5 * v41 + 4]);

      swift_release();
      v28 = v52;
LABEL_15:
      if (v28 == ++v30)
      {
        swift_bridgeObjectRelease();
        a3 = v48;
        goto LABEL_39;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23A62B6E0()
{
  return objectdestroyTm();
}

uint64_t sub_23A62B6E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A628C30(a1, v4, v5, v6);
}

uint64_t sub_23A62B754(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  Swift::Int v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  unsigned int v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v2 = sub_23A6906D8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A690B64();
  v61 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FEF0);
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A69072C();
  v72 = *(_QWORD *)(v10 - 8);
  v73 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v71 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A690AF8();
  v69 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v68 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v67 = (char *)v56 - v15;
  v16 = MEMORY[0x24BEE4AF8];
  v75 = MEMORY[0x24BEE4AF8];
  result = sub_23A6907BC();
  if (result)
    v18 = result;
  else
    v18 = v16;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_23A691374();
    result = swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_6;
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v19)
    goto LABEL_19;
LABEL_6:
  if (v19 < 1)
  {
    __break(1u);
    return result;
  }
  v56[0] = v6;
  v56[1] = a1;
  v57 = v5;
  v58 = v3;
  v59 = v2;
  v20 = 0;
  v64 = v18 & 0xC000000000000001;
  v63 = *MEMORY[0x24BE5B728];
  v65 = v19;
  v66 = v18;
  do
  {
    if (v64)
      MEMORY[0x23B85312C](v20, v18);
    else
      swift_retain();
    sub_23A690B88();
    sub_23A690B34();
    swift_release();
    v21 = v74;
    if (v74 < 1)
    {
      v22 = 0;
    }
    else
    {
      sub_23A690B88();
      sub_23A690B34();
      swift_release();
      v22 = v74;
    }
    v23 = v21 < 1;
    v24 = v67;
    sub_23A690BD0();
    v26 = v68;
    v25 = v69;
    v27 = v70;
    (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, v63, v70);
    v28 = sub_23A690AEC();
    v29 = *(void (**)(char *, uint64_t))(v25 + 8);
    v29(v26, v27);
    v29(v24, v27);
    v30 = v71;
    sub_23A690BDC();
    sub_23A690BC4();
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;
    sub_23A690BB8();
    sub_23A690B28();
    v40 = v39;
    swift_release();
    sub_23A690BA0();
    sub_23A690B28();
    v42 = v41;
    swift_release();
    type metadata accessor for TrackedSubjectInternal(0);
    v43 = swift_allocObject();
    v44 = v43 + OBJC_IVAR____TtC11DockKitCore22TrackedSubjectInternal_saliencyRank;
    v45 = v43 + OBJC_IVAR____TtC11DockKitCore22TrackedSubjectInternal_speakingConfidence;
    v46 = v43 + OBJC_IVAR____TtC11DockKitCore22TrackedSubjectInternal_lookingAtCameraConfidence;
    v47 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v72 + 32))(v43 + OBJC_IVAR____TtC11DockKitCore22TrackedSubjectInternal_identifier, v30, v73);
    *(_BYTE *)(v43 + OBJC_IVAR____TtC11DockKitCore22TrackedSubjectInternal_type) = v28 & 1;
    v48 = (_QWORD *)(v43 + OBJC_IVAR____TtC11DockKitCore22TrackedSubjectInternal_rect);
    *v48 = v32;
    v48[1] = v34;
    v48[2] = v36;
    v48[3] = v38;
    *(_QWORD *)v44 = v22;
    *(_BYTE *)(v44 + 8) = v23;
    *(_QWORD *)v45 = v40;
    *(_BYTE *)(v45 + 8) = 0;
    *(_QWORD *)v46 = v42;
    *(_BYTE *)(v46 + 8) = 0;
    MEMORY[0x23B852D78](v47);
    if (*(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23A690F3C();
    ++v20;
    sub_23A690F48();
    sub_23A690F30();
    swift_release();
    v18 = v66;
  }
  while (v65 != v20);
  swift_bridgeObjectRelease();
  v2 = v59;
  v3 = v58;
  v5 = v57;
  v6 = v56[0];
LABEL_20:
  v49 = (uint64_t)v62;
  sub_23A6907F8();
  v50 = sub_23A690CB4();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50))
  {
    sub_23A5C921C(v49, &qword_25699FEF0);
    v51 = 0;
  }
  else
  {
    v52 = v60;
    sub_23A690C78();
    sub_23A5C921C(v49, &qword_25699FEF0);
    v51 = sub_23A690B58();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v52, v6);
  }
  CameraOrientationInternal.init(rawValue:)(v51);
  if (v74 == 8)
    v53 = 0;
  else
    v53 = v74;
  sub_23A6907EC();
  v54 = v75;
  type metadata accessor for TrackingSummaryInternal(0);
  v55 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v55 + OBJC_IVAR____TtC11DockKitCore23TrackingSummaryInternal_time, v5, v2);
  *(_QWORD *)(v55 + OBJC_IVAR____TtC11DockKitCore23TrackingSummaryInternal_subjects) = v54;
  *(_BYTE *)(v55 + OBJC_IVAR____TtC11DockKitCore23TrackingSummaryInternal_orientation) = v53;
  return v55;
}

BOOL sub_23A62BD40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699F060);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v2 + OBJC_IVAR____TtC11DockKitCore13TrackingStand__intelligentTracking, v7);
  sub_23A6909CC();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v11 = v16;
  if (v16)
  {
    v12 = sub_23A690F9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = v11;
    sub_23A5D120C((uint64_t)v6, a2, (uint64_t)v13);
    swift_release();
  }
  return v11 != 0;
}

uint64_t sub_23A62BE94()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return v4(2);
}

uint64_t sub_23A62BF1C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v4 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x24BE5B510] + MEMORY[0x24BE5B510]);
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return v4(5);
}

uint64_t sub_23A62BFA0(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

id sub_23A62BFC4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  *a2 = v2;
  return v2;
}

void sub_23A62BFDC(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
}

id sub_23A62BFE8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_sensorController);
  *a2 = v2;
  return v2;
}

void sub_23A62C000(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore13TrackingStand_sensorController);
}

void keypath_setTm(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  id v6;
  id v7;

  v5 = *a1;
  v7 = *(id *)(*a2 + *a5);
  *(_QWORD *)(*a2 + *a5) = *a1;
  v6 = v5;

}

uint64_t sub_23A62C04C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummaryDebug);
  return swift_retain();
}

uint64_t sub_23A62C064(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummaryDebug);
}

uint64_t sub_23A62C070@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummary);
  return swift_retain();
}

uint64_t sub_23A62C088(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_50Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11DockKitCore13TrackingStand_lastTrackingSummary);
}

uint64_t keypath_set_50Tm(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  *(_QWORD *)(*a2 + *a5) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_23A62C0C8()
{
  return type metadata accessor for TrackingStand();
}

void sub_23A62C0D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23A6906D8();
  if (v0 <= 0x3F)
  {
    sub_23A62C8A0(319, &qword_25699FE98, &qword_25699FCD0);
    if (v1 <= 0x3F)
    {
      sub_23A62C8A0(319, &qword_25699FEA0, &qword_25699FD00);
      if (v2 <= 0x3F)
      {
        sub_23A62C8EC();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for TrackingStand()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TrackingStand.actuationController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x6C8))();
}

uint64_t dispatch thunk of TrackingStand.sensorController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x6E0))();
}

uint64_t dispatch thunk of TrackingStand.trackingButtonEnabled.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x728))();
}

uint64_t dispatch thunk of TrackingStand.trackingButtonEnabled.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x730))();
}

uint64_t dispatch thunk of TrackingStand.trackingButtonEnabled.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x738))();
}

uint64_t dispatch thunk of TrackingStand.lastTrackingSummaryDebug.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x9C8))();
}

uint64_t dispatch thunk of TrackingStand.lastTrackingSummaryDebug.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x9D0))();
}

uint64_t dispatch thunk of TrackingStand.lastTrackingSummaryDebug.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x9D8))();
}

uint64_t dispatch thunk of TrackingStand.lastTrackingSummary.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x9E0))();
}

uint64_t dispatch thunk of TrackingStand.lastTrackingSummary.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x9E8))();
}

uint64_t dispatch thunk of TrackingStand.lastTrackingSummary.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x9F0))();
}

uint64_t dispatch thunk of TrackingStand.setFramingMode(mode:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB00))();
}

uint64_t dispatch thunk of TrackingStand.setFramingROI(roi:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB08))();
}

uint64_t dispatch thunk of TrackingStand.startTracking()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0xB10);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23A5F2890;
  return v5();
}

uint64_t dispatch thunk of TrackingStand.stopTracking()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB18))();
}

uint64_t dispatch thunk of TrackingStand.trackObservations(data:image:camera:orientation:calibration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  int *v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *(int **)((*MEMORY[0x24BEE4EA0] & *v5) + 0xB20);
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23A5F2890;
  return v15(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of TrackingStand.executeTrajectoryName(trajectoryName:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0xB30);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A6082C4;
  return v7(a1);
}

uint64_t dispatch thunk of TrackingStand.selectSubject(at:)(double a1, double a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(double, double);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0xB38);
  v9 = (uint64_t (*)(double, double))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23A5D98B0;
  return v9(a1, a2);
}

uint64_t dispatch thunk of TrackingStand.selectSubjects(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0xB40);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A5F2890;
  return v7(a1);
}

uint64_t dispatch thunk of TrackingStand.trackObservations(metadata:image:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0xB48);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23A5F2890;
  return v9(a1, a2);
}

uint64_t dispatch thunk of TrackingStand.stopTrackingLoop()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xBA0))();
}

uint64_t dispatch thunk of TrackingStand.getDiagnostics()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xBD8))();
}

uint64_t dispatch thunk of TrackingStand.dumpState(directory:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xBE0))();
}

uint64_t dispatch thunk of TrackingStand.search(calibrate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xBE8))();
}

uint64_t dispatch thunk of TrackingStand.stopSearch(calibrate:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xBF0))();
}

uint64_t dispatch thunk of TrackingStand.returnToBase()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xBF8))();
}

uint64_t dispatch thunk of TrackingStand.stopReturnToBase()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC00))();
}

uint64_t dispatch thunk of TrackingStand.flip180(clockwise:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0xC08);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23A5F0E74;
  return v7(a1);
}

uint64_t dispatch thunk of TrackingStand.getDebugMessageNotifications(topic:callback:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC18))();
}

uint64_t dispatch thunk of TrackingStand.setAppID(appID:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC20))();
}

uint64_t dispatch thunk of TrackingStand.disableInference()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC28))();
}

void sub_23A62C8A0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_23A6909E4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23A62C8EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25699FEA8)
  {
    v0 = sub_23A6909E4();
    if (!v1)
      atomic_store(v0, &qword_25699FEA8);
  }
}

void sub_23A62C940(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_23A62C950()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23A62C98C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23A5D98B0;
  return sub_23A628598(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23A62CA0C()
{
  return objectdestroy_71Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE5B440]);
}

uint64_t sub_23A62CA18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23A6908C4() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23A5F2890;
  return sub_23A625170(a1, v5, v6, v7, v8);
}

uint64_t sub_23A62CAAC(uint64_t a1)
{
  uint64_t v1;

  return sub_23A625CE4(a1, *(void **)(v1 + 16));
}

uint64_t sub_23A62CAB4()
{
  return objectdestroyTm();
}

uint64_t sub_23A62CABC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A625DC4(a1, v4, v5, v6);
}

id sub_23A62CB28(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_23A62CB38()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_23A62CB64()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = *(_BYTE *)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23A5F2890;
  return ((uint64_t (*)(char, void *, void *))((char *)&dword_25699FEF8 + dword_25699FEF8))(v2, v4, v3);
}

uint64_t sub_23A62CBD8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23A62CC14()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23A5F2890;
  return ((uint64_t (*)(void *, void *, void *, void *))((char *)&dword_25699FF20 + dword_25699FF20))(v2, v3, v5, v4);
}

uint64_t sub_23A62CC94()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_23A62CCC0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25699FF40 + dword_25699FF40))(v2, v3);
}

uint64_t sub_23A62CD34(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23A62CD4C()
{
  return objectdestroy_71Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE5B460]);
}

uint64_t objectdestroy_71Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_23A62CDD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23A6908E8() - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23A5F2890;
  v5[2] = v3;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_23A62CE54()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23A62CE78()
{
  uint64_t v0;

  return sub_23A6234DC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23A62CE80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23A5F2890;
  return sub_23A6236E0(a1, v5, v4);
}

uint64_t sub_23A62CEE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_25699FFB8 + dword_25699FFB8))(a1, v4, v5, v6);
}

uint64_t sub_23A62CF6C()
{
  swift_release();
  return swift_deallocObject();
}

id sub_23A62CF90(id result, void *a2)
{
  id v2;

  if (a2)
  {
    v2 = result;
    return a2;
  }
  return result;
}

uint64_t sub_23A62CFBC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23A62CFE0()
{
  uint64_t v0;

  sub_23A628FB8(v0);
}

uint64_t sub_23A62CFE8()
{
  return objectdestroyTm();
}

uint64_t sub_23A62CFF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23A5F2890;
  return sub_23A6293D0(a1, v4, v5, v6);
}

BOOL LEDState.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

_QWORD *sub_23A62D090@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_23A62D0C8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_state);
}

double sub_23A62D0E8()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_brightness);
}

double sub_23A62D118()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_color);
}

uint64_t sub_23A62D144()
{
  sub_23A691290();
  sub_23A690E88();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  sub_23A690FCC();
  sub_23A690E88();
  sub_23A690FCC();
  sub_23A690E88();
  return 0;
}

id SensorLEDState.__allocating_init(state:brightness:color:)(uint64_t a1, double a2, double a3)
{
  objc_class *v3;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = OBJC_IVAR____TtC11DockKitCore14SensorLEDState_brightness;
  v9 = OBJC_IVAR____TtC11DockKitCore14SensorLEDState_color;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore14SensorLEDState_state] = a1;
  *(double *)&v7[v8] = a2;
  *(double *)&v7[v9] = a3;
  v11.receiver = v7;
  v11.super_class = v3;
  return objc_msgSendSuper2(&v11, sel_init);
}

id SensorLEDState.init(state:brightness:color:)(uint64_t a1, double a2, double a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  v4 = OBJC_IVAR____TtC11DockKitCore14SensorLEDState_brightness;
  v5 = OBJC_IVAR____TtC11DockKitCore14SensorLEDState_color;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore14SensorLEDState_state] = a1;
  *(double *)&v3[v4] = a2;
  *(double *)&v3[v5] = a3;
  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for SensorLEDState();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for SensorLEDState()
{
  return objc_opt_self();
}

void sub_23A62D3FC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  double v5;
  void *v6;
  double v7;
  id v8;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_state);
  v4 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v3, v4);

  v5 = *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_brightness);
  v6 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v6, v5);

  v7 = *(double *)(v1 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_color);
  v8 = (id)sub_23A690E04();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v8, v7);

}

id SensorLEDState.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23A62DC94(a1);

  return v4;
}

id SensorLEDState.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23A62DC94(a1);

  return v2;
}

id SensorLEDState.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SensorLEDState.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SensorLEDState.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for SensorLEDState);
}

void *sub_23A62D680()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore9SensorLED_state);
  v2 = v1;
  return v1;
}

unint64_t sub_23A62D6EC()
{
  sub_23A691290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  sub_23A6914F4();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  return 0xD000000000000011;
}

_BYTE *SensorLED.__allocating_init(id:name:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  _BYTE *v9;
  _QWORD *v10;
  _BYTE *v11;
  void *v12;
  objc_super v14;

  v9 = objc_allocWithZone(v4);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore9SensorLED_state] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  v9[OBJC_IVAR____TtC11DockKitCore9Component_type] = 2;
  v10 = &v9[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v10 = a2;
  v10[1] = a3;
  v14.receiver = v9;
  v14.super_class = (Class)type metadata accessor for Component();
  v11 = objc_msgSendSuper2(&v14, sel_init);
  v12 = *(void **)&v11[OBJC_IVAR____TtC11DockKitCore9SensorLED_state];
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore9SensorLED_state] = a4;

  v11[OBJC_IVAR____TtC11DockKitCore9Component_type] = 2;
  return v11;
}

_BYTE *SensorLED.init(id:name:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _QWORD *v6;
  _BYTE *v7;
  void *v8;
  objc_super v10;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore9SensorLED_state] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  v4[OBJC_IVAR____TtC11DockKitCore9Component_type] = 2;
  v6 = &v4[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v6 = a2;
  v6[1] = a3;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for Component();
  v7 = objc_msgSendSuper2(&v10, sel_init);
  v8 = *(void **)&v7[OBJC_IVAR____TtC11DockKitCore9SensorLED_state];
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore9SensorLED_state] = a4;

  v7[OBJC_IVAR____TtC11DockKitCore9Component_type] = 2;
  return v7;
}

void sub_23A62D978(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC11DockKitCore9SensorLED_state);
  v4 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  sub_23A62DFC8(a1);
}

void *SensorLED.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  char *v3;
  id v4;
  void *v5;
  char *v6;
  uint64_t v7;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore9SensorLED_state] = 0;
  v4 = sub_23A62EFC8();
  v5 = v4;
  if (v4)
  {
    *((_BYTE *)v4 + OBJC_IVAR____TtC11DockKitCore9Component_type) = 2;
    type metadata accessor for SensorLEDState();
    v6 = v5;
    v7 = sub_23A69114C();

    a1 = *(void **)&v6[OBJC_IVAR____TtC11DockKitCore9SensorLED_state];
    *(_QWORD *)&v6[OBJC_IVAR____TtC11DockKitCore9SensorLED_state] = v7;
  }

  return v5;
}

void *SensorLED.init(coder:)(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore9SensorLED_state) = 0;
  v3 = sub_23A62EFC8();
  v4 = v3;
  if (v3)
  {
    *((_BYTE *)v3 + OBJC_IVAR____TtC11DockKitCore9Component_type) = 2;
    type metadata accessor for SensorLEDState();
    v5 = v4;
    v6 = sub_23A69114C();

    a1 = *(void **)&v5[OBJC_IVAR____TtC11DockKitCore9SensorLED_state];
    *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore9SensorLED_state] = v6;
  }

  return v4;
}

void SensorLED.__allocating_init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SensorLED.init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23A62DC68()
{
  uint64_t v0;

}

id SensorLED.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for SensorLED);
}

id sub_23A62DC94(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  v3 = OBJC_IVAR____TtC11DockKitCore14SensorLEDState_brightness;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore14SensorLEDState_brightness] = 0;
  v4 = OBJC_IVAR____TtC11DockKitCore14SensorLEDState_color;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore14SensorLEDState_color] = 0;
  v5 = v1;
  v6 = (void *)sub_23A690E04();
  v7 = objc_msgSend(a1, sel_decodeIntegerForKey_, v6);

  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore14SensorLEDState_state] = v7 != 0;
  v8 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v8);
  v10 = v9;

  *(_QWORD *)&v1[v3] = v10;
  v11 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v11);
  v13 = v12;

  *(_QWORD *)&v1[v4] = v13;
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for SensorData();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for SensorLED()
{
  return objc_opt_self();
}

unint64_t sub_23A62DDF8()
{
  unint64_t result;

  result = qword_2569A0020;
  if (!qword_2569A0020)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for LEDState, &type metadata for LEDState);
    atomic_store(result, (unint64_t *)&qword_2569A0020);
  }
  return result;
}

_QWORD *sub_23A62DE3C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_state);
  return result;
}

_QWORD *sub_23A62DE54(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_state) = *result;
  return result;
}

double sub_23A62DE6C@<D0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*a1 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_brightness);
  *a2 = result;
  return result;
}

double sub_23A62DE84(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *(double *)(*a2 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_brightness) = *a1;
  return result;
}

double sub_23A62DE9C@<D0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*a1 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_color);
  *a2 = result;
  return result;
}

double sub_23A62DEB4(double *a1, _QWORD *a2)
{
  double result;

  result = *a1;
  *(double *)(*a2 + OBJC_IVAR____TtC11DockKitCore14SensorLEDState_color) = *a1;
  return result;
}

id sub_23A62DECC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore9SensorLED_state);
  *a2 = v2;
  return v2;
}

void sub_23A62DEE4(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC11DockKitCore9SensorLED_state);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore9SensorLED_state) = *a1;
  v3 = v2;

}

ValueMetadata *type metadata accessor for LEDState()
{
  return &type metadata for LEDState;
}

uint64_t method lookup function for SensorLEDState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SensorLEDState.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SensorLEDState.brightness.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SensorLEDState.color.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SensorLEDState.__allocating_init(state:brightness:color:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t method lookup function for SensorLED()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SensorLED.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SensorLED.__allocating_init(id:name:state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

void sub_23A62DFC8(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = (void *)sub_23A691008();
  v3 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_23A691008();
  v5 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  swift_bridgeObjectRetain();
  v6 = (void *)sub_23A690E04();
  swift_bridgeObjectRelease();
  v7 = (id)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

}

id Component.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23A62EFC8();

  return v2;
}

uint64_t sub_23A62E110()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_description);
  v2 = sub_23A690E1C();

  return v2;
}

uint64_t sub_23A62E164()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore9Component_id);
}

void sub_23A62E174(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore9Component_type);
}

uint64_t sub_23A62E188()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore9Component_name);
  swift_bridgeObjectRetain();
  return v1;
}

id System.init(id:type:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  objc_super v7;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore6System_components] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore6System_id] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore6System_type] = a2;
  v5 = &v4[OBJC_IVAR____TtC11DockKitCore6System_name];
  *(_QWORD *)v5 = a3;
  *((_QWORD *)v5 + 1) = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for System();
  return objc_msgSendSuper2(&v7, sel_init);
}

id System.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23A62F264();

  return v2;
}

uint64_t sub_23A62E258()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A62E268()
{
  char *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v1 = objc_msgSend(v0, sel_description);
  v2 = sub_23A690E1C();

  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore6System_components];
  v4 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v15 >= v8)
      goto LABEL_21;
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v8)
        goto LABEL_21;
      v16 = *(_QWORD *)(v4 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v8)
          goto LABEL_21;
        v16 = *(_QWORD *)(v4 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v7 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_5:
    v13 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    v14 = objc_msgSend(v13, sel_description);
    sub_23A690E1C();

    sub_23A690E88();
    swift_bridgeObjectRelease();
    sub_23A690E88();

    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v17 = v15 + 3;
  if (v17 >= v8)
  {
LABEL_21:
    swift_release();
    return v2;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v8)
      goto LABEL_21;
    v16 = *(_QWORD *)(v4 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_23A62E48C(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v2 = (void *)sub_23A691008();
  v3 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_23A691008();
  v5 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  v6 = (void *)sub_23A690E04();
  v7 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  type metadata accessor for Component();
  swift_bridgeObjectRetain();
  v8 = (void *)sub_23A690DB0();
  swift_bridgeObjectRelease();
  v9 = (id)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

}

BOOL SystemType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

DockKitCore::ComponentType_optional __swiftcall ComponentType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (DockKitCore::ComponentType_optional)rawValue;
}

uint64_t ComponentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

DockKitCore::ComponentType_optional sub_23A62E64C(Swift::Int *a1)
{
  return ComponentType.init(rawValue:)(*a1);
}

id Component.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23A62EFC8();

  return v4;
}

void Component.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Component.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for Component);
}

uint64_t System.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore6System_id);
}

uint64_t System.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore6System_type);
}

uint64_t System.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore6System_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23A62E8FC()
{
  sub_23A691290();
  swift_bridgeObjectRelease();
  sub_23A6914F4();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  swift_getObjectType();
  sub_23A691650();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  sub_23A6914F4();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  return 0x206D65747379533CLL;
}

id System.__allocating_init(id:type:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  objc_super v12;

  v9 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore6System_components] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore6System_id] = a1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore6System_type] = a2;
  v10 = &v9[OBJC_IVAR____TtC11DockKitCore6System_name];
  *(_QWORD *)v10 = a3;
  *((_QWORD *)v10 + 1) = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_23A62EC18(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_23A605D88(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_23A62F610((uint64_t)v6);
    goto LABEL_12;
  }
  type metadata accessor for System();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v3 = 0;
    return v3 & 1;
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore6System_id) != *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore6System_id]
    || *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore6System_type) != *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore6System_type])
  {

    goto LABEL_12;
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore6System_name) == *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore6System_name]
    && *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore6System_name + 8) == *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore6System_name
                                                                                       + 8])
  {

    v3 = 1;
  }
  else
  {
    v3 = sub_23A691518();

  }
  return v3 & 1;
}

id System.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23A62F264();

  return v4;
}

id System.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void System.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id System.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for System);
}

id sub_23A62EFC8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  _QWORD *v12;
  __int128 v14;
  id v15;
  unint64_t v16;
  objc_super v17;
  _BYTE v18[24];
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23A694020;
  v2 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  *(_QWORD *)(v1 + 32) = v2;
  v3 = v0;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v19)
  {
    if (swift_dynamicCast())
    {
      v4 = v15;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23A62F610((uint64_t)v18);
  }
  v4 = 0;
LABEL_6:
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore9Component_id] = v4;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23A694020;
  *(_QWORD *)(v5 + 32) = v2;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v19)
  {
    if (swift_dynamicCast())
    {
      v6 = v15;
      goto LABEL_11;
    }
  }
  else
  {
    sub_23A62F610((uint64_t)v18);
  }
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 2);
LABEL_11:
  v7 = objc_msgSend(v6, sel_integerValue, 1, 2);
  if ((unint64_t)v7 >= 5)
    v8 = 0;
  else
    v8 = (char)v7;
  v3[OBJC_IVAR____TtC11DockKitCore9Component_type] = v8;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = v14;
  *(_QWORD *)(v9 + 32) = sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (!v19)
  {
    sub_23A62F610((uint64_t)v18);
    goto LABEL_18;
  }
  if (!swift_dynamicCast())
  {
LABEL_18:

    v10 = 0;
    v11 = 0xE000000000000000;
    goto LABEL_19;
  }
  v10 = v15;
  v11 = v16;

LABEL_19:
  v12 = &v3[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v12 = v10;
  v12[1] = v11;

  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for Component();
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t type metadata accessor for System()
{
  return objc_opt_self();
}

id sub_23A62F264()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  _BOOL8 v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v18;
  id v19;
  unint64_t v20;
  objc_super v21;
  _BYTE v22[24];
  uint64_t v23;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11DockKitCore6System_components;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11DockKitCore6System_components] = MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23A694020;
  v4 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  *(_QWORD *)(v3 + 32) = v4;
  v5 = v0;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v23)
  {
    if (swift_dynamicCast())
    {
      v6 = v19;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23A62F610((uint64_t)v22);
  }
  v6 = 0;
LABEL_6:
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23A694020;
  *(_QWORD *)(v7 + 32) = v4;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v23)
  {
    if (swift_dynamicCast())
    {
      v8 = v19;
      goto LABEL_11;
    }
  }
  else
  {
    sub_23A62F610((uint64_t)v22);
  }
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
LABEL_11:
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore6System_id] = v6;
  v9 = objc_msgSend(v8, sel_integerValue, 1, 2) == (id)1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore6System_type] = v9;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v18;
  v11 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E120);
  *(_QWORD *)(v10 + 32) = v11;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v23)
  {
    if (swift_dynamicCast())
    {
      v12 = v19;
      v13 = v20;
      goto LABEL_16;
    }
  }
  else
  {
    sub_23A62F610((uint64_t)v22);
  }
  v12 = 0;
  v13 = 0xE000000000000000;
LABEL_16:
  v14 = &v5[OBJC_IVAR____TtC11DockKitCore6System_name];
  *(_QWORD *)v14 = v12;
  *((_QWORD *)v14 + 1) = v13;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23A694030;
  *(_QWORD *)(v15 + 32) = type metadata accessor for Component();
  *(_QWORD *)(v15 + 40) = sub_23A5D03A4(0, (unint64_t *)&unk_2569A04C0);
  *(_QWORD *)(v15 + 48) = v11;
  *(_QWORD *)(v15 + 56) = sub_23A5D03A4(0, &qword_2569A0120);
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (!v23)
  {
    sub_23A62F610((uint64_t)v22);
    goto LABEL_20;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569A0128);
  if (!swift_dynamicCast())
  {
LABEL_20:
    v16 = sub_23A5BD8E0(MEMORY[0x24BEE4AF8]);
    goto LABEL_21;
  }
  v16 = (unint64_t)v19;
LABEL_21:

  *(_QWORD *)&v1[v2] = v16;
  swift_bridgeObjectRelease();
  v21.receiver = v5;
  v21.super_class = (Class)type metadata accessor for System();
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t type metadata accessor for Component()
{
  return objc_opt_self();
}

uint64_t sub_23A62F610(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569A0330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23A62F654()
{
  unint64_t result;

  result = qword_2569A00C0;
  if (!qword_2569A00C0)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for SystemType, &type metadata for SystemType);
    atomic_store(result, (unint64_t *)&qword_2569A00C0);
  }
  return result;
}

unint64_t sub_23A62F69C()
{
  unint64_t result;

  result = qword_2569A00C8;
  if (!qword_2569A00C8)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for ComponentType, &type metadata for ComponentType);
    atomic_store(result, (unint64_t *)&qword_2569A00C8);
  }
  return result;
}

_QWORD *sub_23A62F6E0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC11DockKitCore9Component_id);
  return result;
}

_QWORD *sub_23A62F6F8(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore9Component_id) = *result;
  return result;
}

_QWORD *sub_23A62F710@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC11DockKitCore9Component_type);
  return result;
}

_BYTE *sub_23A62F728(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC11DockKitCore9Component_type) = *result;
  return result;
}

uint64_t sub_23A62F740@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*a1 + OBJC_IVAR____TtC11DockKitCore9Component_name);
  v3 = v2[1];
  *a2 = *v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A62F75C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore9Component_name);
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23A62F798@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC11DockKitCore6System_components);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23A62F7B0(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore6System_components) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for SystemType()
{
  return &type metadata for SystemType;
}

uint64_t storeEnumTagSinglePayload for ComponentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23A62F844 + 4 * byte_23A69804D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23A62F878 + 4 * byte_23A698048[v4]))();
}

uint64_t sub_23A62F878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A62F880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A62F888);
  return result;
}

uint64_t sub_23A62F894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A62F89CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23A62F8A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A62F8A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ComponentType()
{
  return &type metadata for ComponentType;
}

uint64_t method lookup function for Component()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static Component.supportsSecureCoding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of Component.summary.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of Component.type.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of Component.name.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of Component.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of Component.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t method lookup function for System()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static System.supportsSecureCoding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of System.components.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of System.summary.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of System.__allocating_init(id:type:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of System.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of System.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

char *DeviceNotification.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return DeviceNotification.init(name:)(a1, a2);
}

uint64_t DeviceNotification.state.getter()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v1 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
  v2 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  swift_release();
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state);
  notify_get_state(*(_DWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token), (uint64_t *)(v0 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state));
  v4 = *v3;
  v5 = *(os_unfair_lock_s **)(v0 + v1);
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  return v4;
}

unint64_t static DeviceNotification.connectedNotificationName.getter()
{
  return 0xD000000000000022;
}

unint64_t static DeviceNotification.configNotificationName.getter()
{
  return 0xD000000000000027;
}

unint64_t static DeviceNotification.trackingButtonNotificationName.getter()
{
  return 0xD000000000000027;
}

void DeviceNotification.state.setter(uint64_t a1)
{
  void *v1;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  BOOL v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691044();
  v6 = &unk_2542D2000;
  if (os_log_type_enabled(v4, v5))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v24 = v8;
    *(_DWORD *)v7 = 136315650;
    v9 = a1;
    v10 = *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_name];
    v11 = *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_name + 8];
    swift_bridgeObjectRetain();
    sub_23A5EEB40(v10, v11, &v24);
    sub_23A6911D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    sub_23A6911D0();
    *(_WORD *)(v7 + 22) = 2048;

    a1 = v9;
    v6 = (_QWORD *)&unk_2542D2000;
    sub_23A6911D0();

    _os_log_impl(&dword_23A5B0000, v4, v5, "Trying to set %s's state to %llu old value %llu", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);
  }
  else
  {

  }
  v12 = &v3[v6[218]];
  if (*(_QWORD *)v12)
    v13 = 0;
  else
    v13 = *((_QWORD *)v12 + 1) == 0xE000000000000000;
  if (v13 || (sub_23A691518() & 1) != 0)
  {
    v14 = sub_23A690CFC();
    v15 = sub_23A691038();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = "Name is empty!";
LABEL_11:
      _os_log_impl(&dword_23A5B0000, v14, v15, v17, v16, 2u);
      MEMORY[0x23B853BD0](v16, -1, -1);
    }
  }
  else
  {
    v18 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token;
    if (*(_DWORD *)&v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token] == -1)
    {
      v14 = sub_23A690CFC();
      v15 = sub_23A691038();
      if (!os_log_type_enabled(v14, v15))
        goto LABEL_12;
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = "token invalid";
      goto LABEL_11;
    }
    v19 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state;
    if (*(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state] != a1)
    {
      v20 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
      v21 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock];
      swift_retain();
      os_unfair_lock_lock(v21 + 4);
      swift_release();
      *(_QWORD *)&v3[v19] = a1;
      v22 = *(os_unfair_lock_s **)&v3[v20];
      swift_retain();
      os_unfair_lock_unlock(v22 + 4);
      swift_release();
      notify_set_state(*(_DWORD *)&v3[v18], a1);
      v23 = sub_23A690E70();
      notify_post((const char *)(v23 + 32));
      swift_release();
      return;
    }
    v14 = sub_23A690CFC();
    v15 = sub_23A691038();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = "new state matches old state";
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t sub_23A62FF90@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t result;

  v3 = *a1;
  v4 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
  v5 = *(os_unfair_lock_s **)(*a1 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state);
  notify_get_state(*(_DWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token), (uint64_t *)(v3 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state));
  v7 = *v6;
  v8 = *(os_unfair_lock_s **)(v3 + v4);
  swift_retain();
  os_unfair_lock_unlock(v8 + 4);
  result = swift_release();
  *a2 = v7;
  return result;
}

void (*DeviceNotification.state.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  a1[1] = v1;
  v3 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state);
  notify_get_state(*(_DWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token), (uint64_t *)(v1 + OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state));
  v6 = *v5;
  v7 = *(os_unfair_lock_s **)(v1 + v3);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  *a1 = v6;
  return sub_23A6300DC;
}

void sub_23A6300DC(uint64_t *a1)
{
  DeviceNotification.state.setter(*a1);
}

char *DeviceNotification.init(name:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  uint64_t v12;
  char *v13;
  int *v14;
  objc_super v16;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *(_QWORD *)&v3[v7] = v8;
  v9 = v3;
  sub_23A690D08();
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state] = 0;
  *(_DWORD *)&v9[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token] = -1;
  v10 = &v9[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_name];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  swift_bridgeObjectRetain();

  v16.receiver = v9;
  v16.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v16, sel_init);
  v12 = sub_23A690E70();
  v13 = (char *)v11;
  swift_bridgeObjectRelease();
  v14 = (int *)&v13[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token];
  notify_register_check((const char *)(v12 + 32), (int *)&v13[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token]);
  swift_release();
  notify_get_state(*v14, (uint64_t *)&v13[OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state]);

  return v13;
}

char *DeviceNotification.__allocating_init(name:queue:handler:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;
  char *v12;

  v11 = objc_allocWithZone(v5);
  v12 = sub_23A630880(a1, a2, a3, a4, a5);

  return v12;
}

char *DeviceNotification.init(name:queue:handler:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  char *v6;

  v6 = sub_23A630880(a1, a2, a3, a4, a5);

  return v6;
}

void sub_23A630320(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  void *v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = (void *)MEMORY[0x23B853C6C](a2 + 16);
  if (v4)
  {
    v5 = v4;
    v6 = sub_23A690CFC();
    v7 = sub_23A691044();
    v8 = &OBJC_IVAR____TtC11DockKitCore14SensorLEDState_state;
    v9 = &unk_2542D2000;
    v10 = &unk_2542D2000;
    if (os_log_type_enabled(v6, v7))
    {
      v11 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v24 = v23;
      *(_DWORD *)v11 = 136315650;
      v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_name];
      v12 = *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_name + 8];
      swift_bridgeObjectRetain();
      sub_23A5EEB40(v13, v12, &v24);
      sub_23A6911D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 1024;
      sub_23A6911D0();
      *(_WORD *)(v11 + 18) = 2048;
      v14 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
      v15 = *(os_unfair_lock_s **)&v5[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock];
      swift_retain();
      os_unfair_lock_lock(v15 + 4);
      swift_release();
      notify_get_state(*(_DWORD *)&v5[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token], (uint64_t *)&v5[OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state]);
      v16 = *(os_unfair_lock_s **)&v5[v14];
      swift_retain();
      v9 = (_QWORD *)&unk_2542D2000;
      os_unfair_lock_unlock(v16 + 4);

      swift_release();
      v8 = &OBJC_IVAR____TtC11DockKitCore14SensorLEDState_state;
      sub_23A6911D0();

      _os_log_impl(&dword_23A5B0000, v6, v7, "%s got a value %d %llu", (uint8_t *)v11, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v23, -1, -1);
      v17 = v11;
      v10 = (_QWORD *)&unk_2542D2000;
      MEMORY[0x23B853BD0](v17, -1, -1);
    }
    else
    {

    }
    v18 = v8[38];
    v19 = *(os_unfair_lock_s **)&v5[v18];
    swift_retain();
    os_unfair_lock_lock(v19 + 4);
    swift_release();
    v20 = (uint64_t *)&v5[v10[219]];
    notify_get_state(*(_DWORD *)&v5[v9[283]], v20);
    v21 = *v20;
    v22 = *(os_unfair_lock_s **)&v5[v18];
    swift_retain();
    os_unfair_lock_unlock(v22 + 4);
    swift_release();
    a3(v21);

  }
}

uint64_t sub_23A630604(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id DeviceNotification.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  int v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = *(_DWORD *)&v0[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token];
  if (v2 != -1)
    notify_cancel(v2);
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id DeviceNotification.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DeviceNotification.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

char *sub_23A630880(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  objc_class *ObjectType;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  char *v21;
  NSObject *v22;
  uint64_t v23;
  _QWORD v25[6];
  objc_super v26;

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  v13 = OBJC_IVAR____TtC11DockKitCore18DeviceNotification_allocatedLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  *(_QWORD *)&v6[v13] = v14;
  v15 = v6;
  sub_23A690D08();
  *(_QWORD *)&v15[OBJC_IVAR____TtC11DockKitCore18DeviceNotification__state] = 0;
  *(_DWORD *)&v15[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token] = -1;
  v16 = &v15[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_name];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = a2;
  swift_bridgeObjectRetain();

  v26.receiver = v15;
  v26.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v26, sel_init);
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v18;
  v19[3] = a4;
  v19[4] = a5;
  v25[4] = sub_23A630C54;
  v25[5] = v19;
  v25[0] = MEMORY[0x24BDAC760];
  v25[1] = 1107296256;
  v25[2] = sub_23A630604;
  v25[3] = &block_descriptor_3;
  v20 = _Block_copy(v25);
  v21 = (char *)v17;
  v22 = a3;
  swift_retain();
  swift_release();
  v23 = sub_23A690E70();
  swift_bridgeObjectRelease();
  notify_register_dispatch((const char *)(v23 + 32), (int *)&v21[OBJC_IVAR____TtC11DockKitCore18DeviceNotification_token], v22, v20);
  swift_release();

  swift_release();
  _Block_release(v20);
  return v21;
}

void sub_23A630AAC(uint64_t *a1)
{
  DeviceNotification.state.setter(*a1);
}

uint64_t sub_23A630AD0()
{
  return type metadata accessor for DeviceNotification();
}

uint64_t type metadata accessor for DeviceNotification()
{
  uint64_t result;

  result = qword_2542D26E0;
  if (!qword_2542D26E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A630B14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A690D14();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DeviceNotification()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceNotification.__allocating_init(name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DeviceNotification.__allocating_init(name:queue:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_23A630BD0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23A630BF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23A630C04()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23A630C28()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23A630C54(uint64_t a1)
{
  uint64_t v1;

  sub_23A630320(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

id RepeatingTimer.__allocating_init(interval:fireOnce:queue:_:)(int a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return RepeatingTimer.init(interval:fireOnce:queue:_:)(a1, a2, a3, a4, a5);
}

id RepeatingTimer.init(interval:fireOnce:queue:_:)(int a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t ObjectType;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, _QWORD, uint64_t);
  _QWORD *v38;
  void (*v39)(_QWORD *, uint64_t);
  uint64_t v40;
  void *v41;
  char *v42;
  char *v43;
  id v44;
  objc_class *v45;
  id v46;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  objc_super v63;
  _QWORD aBlock[7];

  v6 = v5;
  v61 = a4;
  v62 = a2;
  v54 = a3;
  v51 = a1;
  v8 = sub_23A690D2C();
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23A690D50();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v55 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23A690D20();
  v13 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  v53 = v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v49 = (uint64_t *)((char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v48 - v16);
  v18 = sub_23A690D68();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v48 - v23;
  v25 = sub_23A6910BC();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v30 = swift_allocObject();
  *(_DWORD *)(v30 + 16) = 0;
  *(_QWORD *)&v6[v29] = v30;
  v6[OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_state] = 0;
  sub_23A63113C();
  v31 = v6;
  sub_23A6910B0();
  v32 = sub_23A6910C8();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  *(_QWORD *)&v31[OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_timer] = v32;
  ObjectType = swift_getObjectType();
  sub_23A690D5C();
  MEMORY[0x23B852C28](v22, a5);
  v34 = *(void (**)(char *, uint64_t))(v19 + 8);
  v50 = v18;
  v34(v22, v18);
  if ((v51 & 1) != 0)
  {
    v36 = v52;
    v35 = v53;
    v37 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v53 + 104);
    v37(v17, *MEMORY[0x24BEE5418], v52);
    v38 = v49;
    *v49 = 0;
    v37(v38, *MEMORY[0x24BEE5400], v36);
    MEMORY[0x23B852FA0](v24, v17, v38, ObjectType);
    v39 = *(void (**)(_QWORD *, uint64_t))(v35 + 8);
    v39(v38, v36);
  }
  else
  {
    *v17 = 0;
    v36 = v52;
    v40 = v53;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v53 + 104))(v17, *MEMORY[0x24BEE5400], v52);
    MEMORY[0x23B852FAC](v24, v17, ObjectType, a5);
    v39 = *(void (**)(_QWORD *, uint64_t))(v40 + 8);
  }
  v39(v17, v36);
  v34(v24, v50);
  swift_getObjectType();
  aBlock[4] = v54;
  aBlock[5] = v61;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23A5E4D44;
  aBlock[3] = &block_descriptor_4;
  v41 = _Block_copy(aBlock);
  swift_retain();
  v42 = v55;
  sub_23A690D38();
  v43 = v58;
  sub_23A6311C8();
  sub_23A6910D4();
  _Block_release(v41);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v60);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v57);
  swift_release();
  v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_init);
  *(_QWORD *)&v31[OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_date] = v44;

  v45 = (objc_class *)type metadata accessor for RepeatingTimer();
  v63.receiver = v31;
  v63.super_class = v45;
  v46 = objc_msgSendSuper2(&v63, sel_init);
  sub_23A631394();

  swift_release();
  return v46;
}

unint64_t sub_23A63113C()
{
  unint64_t result;

  result = qword_2569A0158;
  if (!qword_2569A0158)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569A0158);
  }
  return result;
}

uint64_t sub_23A631178@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x24BEE5400];
  v3 = sub_23A690D20();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_23A6311C8()
{
  sub_23A690D2C();
  sub_23A631834();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25699F710);
  sub_23A63187C();
  return sub_23A691200();
}

uint64_t type metadata accessor for RepeatingTimer()
{
  return objc_opt_self();
}

id RepeatingTimer.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  objc_super v6;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock;
  v3 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock];
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_23A6910E0();
  swift_unknownObjectRelease();
  v4 = *(os_unfair_lock_s **)&v1[v2];
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  swift_release();
  sub_23A631394();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for RepeatingTimer();
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t sub_23A631394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock;
  v3 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_state))
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_state) = 1;
    swift_getObjectType();
    sub_23A6910EC();
  }
  v4 = *(os_unfair_lock_s **)(v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

uint64_t sub_23A63142C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock;
  v3 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_state) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_state) = 0;
    swift_getObjectType();
    sub_23A6910F8();
  }
  v4 = *(os_unfair_lock_s **)(v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

uint64_t sub_23A6314C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock;
  v3 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_state) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_state) = 2;
    swift_getObjectType();
    sub_23A6910E0();
  }
  v4 = *(os_unfair_lock_s **)(v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

BOOL sub_23A631560()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  int v3;
  os_unfair_lock_s *v4;

  v1 = OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock;
  v2 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  swift_release();
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_state);
  v4 = *(os_unfair_lock_s **)(v0 + v1);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  swift_release();
  return v3 == 1;
}

double sub_23A6315DC()
{
  uint64_t v0;
  double v1;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11DockKitCore14RepeatingTimer_date), sel_timeIntervalSinceNow);
  return fabs(v1);
}

id RepeatingTimer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RepeatingTimer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t method lookup function for RepeatingTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RepeatingTimer.__allocating_init(interval:fireOnce:queue:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of RepeatingTimer.resume()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of RepeatingTimer.suspend()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of RepeatingTimer.cancel()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of RepeatingTimer.isValid()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of RepeatingTimer.timeSinceInit()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t storeEnumTagSinglePayload for RepeatingTimer.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23A63176C + 4 * byte_23A69824D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23A6317A0 + 4 * byte_23A698248[v4]))();
}

uint64_t sub_23A6317A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A6317A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23A6317B0);
  return result;
}

uint64_t sub_23A6317BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23A6317C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23A6317C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23A6317D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RepeatingTimer.State()
{
  return &type metadata for RepeatingTimer.State;
}

unint64_t sub_23A6317F0()
{
  unint64_t result;

  result = qword_2569A0198;
  if (!qword_2569A0198)
  {
    result = MEMORY[0x23B853B34](&unk_23A6982C8, &type metadata for RepeatingTimer.State);
    atomic_store(result, (unint64_t *)&qword_2569A0198);
  }
  return result;
}

unint64_t sub_23A631834()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569A01A0;
  if (!qword_2569A01A0)
  {
    v1 = sub_23A690D2C();
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2569A01A0);
  }
  return result;
}

unint64_t sub_23A63187C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569A01B0;
  if (!qword_2569A01B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25699F710);
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2569A01B0);
  }
  return result;
}

uint64_t sub_23A6318C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = *(void **)(v0 + 16);
  if (v2)
  {
    v3 = v2;
    sub_23A6314C4();

    v2 = *(void **)(v1 + 16);
  }

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  sub_23A61BE00(*(_QWORD *)(v1 + 56));
  swift_release();
  v4 = v1 + OBJC_IVAR____TtC11DockKitCore20DKPanoramaController_logger;
  v5 = sub_23A690D14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v1;
}

uint64_t sub_23A631958()
{
  sub_23A6318C8();
  return swift_deallocClassInstance();
}

uint64_t sub_23A63197C()
{
  return type metadata accessor for DKPanoramaController();
}

uint64_t type metadata accessor for DKPanoramaController()
{
  uint64_t result;

  result = qword_2542D25C0;
  if (!qword_2542D25C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23A6319C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23A690D14();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23A631A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_23A631A8C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD *v4;

  v1 = MEMORY[0x23B853C6C](*(_QWORD *)(v0 + 24) + 32);
  if (v1
    && (v2 = (void *)v1,
        v3 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController),
        *(_QWORD *)(v0 + 32) = v3,
        v3,
        v2,
        v3))
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v4;
    *v4 = v0;
    v4[1] = sub_23A631B34;
    return sub_23A6344C0();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A631B34()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23A631B8C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A631B9C(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = v1;
  *(_BYTE *)(v2 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_23A631BB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = MEMORY[0x23B853C6C](*(_QWORD *)(v0 + 120) + 40);
  *(_QWORD *)(v0 + 128) = v1;
  if (v1)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A631C14()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(unsigned __int8 *)(v0 + 144);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23A631C78;
  v3 = swift_continuation_init();
  sub_23A6514C8(v2, v1, v3);
  return swift_continuation_await();
}

uint64_t sub_23A631C78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A631CE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A631D14()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 136);

  v2 = v1;
  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691044();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 136);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    v13 = v8;
    swift_getErrorValue();
    v9 = sub_23A691560();
    *(_QWORD *)(v0 + 112) = sub_23A5EEB40(v9, v10, &v13);
    sub_23A6911D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23A5B0000, v4, v5, "Unable to enable system tracking: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 136);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A631ED8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = a3;
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 56) = a2;
  *(_BYTE *)(v4 + 88) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  *(_QWORD *)(v4 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A631F3C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t result;
  double v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  __int128 v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;

  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "Starting panorama capture...", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 72);

  v5 = MEMORY[0x23B853C6C](v4 + 32);
  if (!v5
    || (v6 = (void *)v5,
        v7 = *(void **)(v5 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController),
        v8 = v7,
        v6,
        !v7))
  {
    v9 = sub_23A690CFC();
    v10 = sub_23A691038();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23A5B0000, v9, v10, "Actuation limits not available, not taking Panorama", v11, 2u);
      MEMORY[0x23B853BD0](v11, -1, -1);
    }

    goto LABEL_9;
  }
  v12 = ActuationController.getActuatorLimits()();
  v13 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 56);
  v16 = *(unsigned __int8 *)(v0 + 88);

  v17 = *(_QWORD *)(v14 + 56);
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = v13;
  sub_23A5D0340(v15);
  result = sub_23A61BE00(v17);
  *(_BYTE *)(v14 + 48) = v16;
  *(_BYTE *)(v14 + 49) = 0;
  if ((v16 - 2) < 2)
  {
    if (*(_QWORD *)&v12[4]._os_unfair_lock_opaque >= 2uLL)
    {
      v20 = *(_QWORD *)(v0 + 72);
      v21 = *(_QWORD *)(v0 + 80);
      v22 = *(unsigned __int8 *)(v0 + 88);
      v23 = *(_QWORD *)&v12[26]._os_unfair_lock_opaque;
      v24 = *(_OWORD *)&v12[22]._os_unfair_lock_opaque;
      *(_OWORD *)(v0 + 16) = *(_OWORD *)&v12[18]._os_unfair_lock_opaque;
      *(_OWORD *)(v0 + 32) = v24;
      *(_QWORD *)(v0 + 48) = v23;
      sub_23A633448(v0 + 16);
      swift_bridgeObjectRelease();
      v25 = *(double *)(v0 + 32);
      v26 = -0.1;
      if (*(_BYTE *)(v20 + 50) == 2)
        v27 = 0.1;
      else
        v27 = -0.1;
      if (*(_BYTE *)(v20 + 50) == 2)
      {
        v28 = *(double *)(v0 + 32);
      }
      else
      {
        v26 = 0.1;
        v28 = *(double *)(v0 + 40);
      }
      if (*(_BYTE *)(v20 + 50) == 2)
        v25 = *(double *)(v0 + 40);
      if (v22 == 2)
        v29 = v26;
      else
        v29 = v27;
      if (v22 != 2)
        v25 = v28;
      v30 = v25 + v29;
      v31 = sub_23A690F9C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v21, 1, 1, v31);
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = 0;
      *(_QWORD *)(v32 + 24) = 0;
      v33 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v32 + 32) = *(_OWORD *)(v0 + 16);
      *(_OWORD *)(v32 + 48) = v33;
      *(_QWORD *)(v32 + 64) = *(_QWORD *)(v0 + 48);
      *(_QWORD *)(v32 + 72) = v20;
      *(double *)(v32 + 80) = v30;
      swift_retain();
      v34 = &unk_2569A01F8;
      goto LABEL_37;
    }
    __break(1u);
  }
  else
  {
    if (v16)
    {
      if (v16 != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      v19 = -0.174532925;
    }
    else
    {
      v19 = 0.174532925;
    }
    if (*(_QWORD *)&v12[4]._os_unfair_lock_opaque)
    {
      v20 = *(_QWORD *)(v0 + 72);
      v21 = *(_QWORD *)(v0 + 80);
      if (*(_BYTE *)(v20 + 50) == 1)
        v35 = -v19;
      else
        v35 = v19;
      v36 = *(double *)&v12[12]._os_unfair_lock_opaque;
      v37 = *(double *)&v12[14]._os_unfair_lock_opaque;
      swift_bridgeObjectRelease();
      v38 = v37 - v36 + -0.1;
      if (v38 > 6.28318531)
        v38 = 6.28318531;
      v39 = -v38;
      v40 = sub_23A690F9C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v21, 1, 1, v40);
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = 0;
      *(_QWORD *)(v32 + 24) = 0;
      *(double *)(v32 + 32) = v39;
      *(_QWORD *)(v32 + 40) = v20;
      *(double *)(v32 + 48) = v35;
      swift_retain();
      v34 = &unk_2569A01E8;
LABEL_37:
      *(_QWORD *)(v20 + 72) = sub_23A5D120C(v21, (uint64_t)v34, v32);
      swift_release();
LABEL_9:
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23A6322F8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(double *)(v6 + 48) = a1;
  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = a6;
  return swift_task_switch();
}

uint64_t sub_23A632314()
{
  objc_super *v0;
  id receiver;
  double v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  uint64_t v10;

  receiver = v0[3].receiver;
  v2 = fabs((*((double *)v0[2].receiver + 3) - *((double *)v0[2].receiver + 2)) / 0.174532925);
  v3 = (objc_class *)type metadata accessor for Orientation();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(_QWORD *)&v4[v5] = v6;
  v7 = OBJC_IVAR____TtC11DockKitCore11Orientation__pitch;
  v8 = OBJC_IVAR____TtC11DockKitCore11Orientation__roll;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore11Orientation__yaw] = 0x7FF0000000000000;
  *(_QWORD *)&v4[v7] = receiver;
  *(_QWORD *)&v4[v8] = 0x7FF0000000000000;
  v0[1].receiver = v4;
  v0[1].super_class = v3;
  v9 = (objc_class *)objc_msgSendSuper2(v0 + 1, sel_init);
  v0[3].super_class = v9;
  v10 = swift_task_alloc();
  v0[4].receiver = (id)v10;
  *(_QWORD *)v10 = v0;
  *(_QWORD *)(v10 + 8) = sub_23A632434;
  *(_QWORD *)(v10 + 40) = v0[2].super_class;
  *(double *)(v10 + 32) = v2;
  *(_BYTE *)(v10 + 81) = 0;
  *(_QWORD *)(v10 + 24) = v9;
  return swift_task_switch();
}

uint64_t sub_23A632434()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23A63248C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void (**)(uint64_t))(v1 + 56);
  if (v2)
  {
    swift_retain();
    v2(1);
    sub_23A61BE00((uint64_t)v2);
    v3 = *(_QWORD *)(v1 + 56);
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  sub_23A61BE00(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A632504(uint64_t a1, char a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = v3;
  *(double *)(v4 + 32) = a3;
  *(_BYTE *)(v4 + 81) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_23A632528()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v8;

  *(_QWORD *)(v0 + 48) = OBJC_IVAR____TtC11DockKitCore20DKPanoramaController_logger;
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "Sending panorama rotation...", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 40);

  v5 = MEMORY[0x23B853C6C](v4 + 32);
  if (!v5)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v6 = (void *)v5;
  v7 = *(void **)(v5 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  *(_QWORD *)(v0 + 56) = v7;
  v7;

  if (!v7)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_BYTE *)(v0 + 80) = 0;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v8;
  *v8 = v0;
  v8[1] = sub_23A632670;
  return ActuationController.setOrientation(orientation:relative:duration:priority:progressCallback:)(*(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 81), (_BYTE *)(v0 + 80), (uint64_t)nullsub_1, 0, *(double *)(v0 + 32));
}

uint64_t sub_23A632670()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  swift_task_dealloc();

  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23A6326E0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 72);
  v2 = v1;
  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691038();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 72);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23A6911D0();
    *v8 = v10;

    _os_log_impl(&dword_23A5B0000, v4, v5, "Failed sending rotation command: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 72);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A632868(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(double *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 24) = a6;
  *(double *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23A632888()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;

  v1 = fabs(*(double *)(v0 + 16) / 0.174532925);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_23A63290C;
  v3 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v0 + 24);
  *(double *)(v2 + 40) = v1;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_23A63290C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A632960()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void (**)(uint64_t))(v1 + 56);
  if (v2)
  {
    swift_retain();
    v2(1);
    sub_23A61BE00((uint64_t)v2);
    v3 = *(_QWORD *)(v1 + 56);
  }
  else
  {
    v3 = 0;
  }
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  sub_23A61BE00(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A6329D8(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = v3;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  *(double *)(v4 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_23A6329F8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v8;

  *(_QWORD *)(v0 + 56) = OBJC_IVAR____TtC11DockKitCore20DKPanoramaController_logger;
  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "Sending panorama velocity...", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 48);

  v5 = MEMORY[0x23B853C6C](v4 + 32);
  if (!v5)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v6 = (void *)v5;
  v7 = *(void **)(v5 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  *(_QWORD *)(v0 + 64) = v7;
  v7;

  if (!v7)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v8;
  *v8 = v0;
  v8[1] = sub_23A632B38;
  return ActuationController.setRotationalVelocity(yaw:pitch:roll:duration:progressCallback:)((uint64_t)nullsub_1, 0, *(double *)(v0 + 24), *(double *)(v0 + 32), INFINITY, *(double *)(v0 + 40));
}

uint64_t sub_23A632B38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A632BAC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 80);

  v2 = v1;
  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691038();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 80);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23A6911D0();
    *v8 = v10;

    _os_log_impl(&dword_23A5B0000, v4, v5, "Failed sending velocity command: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 80);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A632D3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23A632D54()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = sub_23A690CFC();
  v2 = sub_23A691044();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23A5B0000, v1, v2, "Stopping panorama capture...", v3, 2u);
    MEMORY[0x23B853BD0](v3, -1, -1);
  }
  v4 = *(_QWORD **)(v0 + 16);

  v5 = v4[7];
  v4[7] = 0;
  v4[8] = 0;
  sub_23A61BE00(v5);
  if (v4[9])
  {
    swift_retain();
    sub_23A690FA8();
    swift_release();
  }
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v6;
  *v6 = v0;
  v6[1] = sub_23A632E80;
  v6[3] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_23A632E80()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A632ED4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v1 + 49) & 1) != 0 || (*(_BYTE *)(v1 + 48) & 0xFE) != 2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Orientation()), sel_init);
  *(_QWORD *)(v0 + 32) = v2;
  v3 = OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock;
  v4 = *(os_unfair_lock_s **)&v2[OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock];
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore11Orientation__pitch] = 0;
  v5 = *(os_unfair_lock_s **)&v2[v3];
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  v6 = *(os_unfair_lock_s **)&v2[v3];
  swift_retain();
  os_unfair_lock_lock(v6 + 4);
  swift_release();
  *(_QWORD *)&v2[OBJC_IVAR____TtC11DockKitCore11Orientation__yaw] = 0x7FF0000000000000;
  v7 = *(os_unfair_lock_s **)&v2[v3];
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  v8 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v8;
  *(_QWORD *)v8 = v0;
  *(_QWORD *)(v8 + 8) = sub_23A633040;
  v9 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v8 + 81) = 0;
  *(_QWORD *)(v8 + 32) = 0x3FF0000000000000;
  *(_QWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_23A633040()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A633094()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A6330C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_23A6330DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD *v4;

  v1 = MEMORY[0x23B853C6C](*(_QWORD *)(v0 + 24) + 32);
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = (void *)v1;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11DockKitCore13TrackingStand_actuationController);
  *(_QWORD *)(v0 + 32) = v3;
  v3;

  if (!v3)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_23A63318C;
  return ActuationController.setRotationalVelocity(yaw:pitch:roll:)(0.0, 0.0, INFINITY);
}

uint64_t sub_23A63318C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A633200()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 48);

  v2 = v1;
  v3 = v1;
  v4 = sub_23A690CFC();
  v5 = sub_23A691038();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 48);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23A6911D0();
    *v8 = v10;

    _os_log_impl(&dword_23A5B0000, v4, v5, "Failed stopping %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v8, -1, -1);
    MEMORY[0x23B853BD0](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 48);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A6333A4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A6333D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23A5D98B0;
  v5[4] = v4;
  v5[3] = v3;
  v5[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23A633448(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23A633470()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23A6334A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  v4[6] = v3;
  v4[4] = v0 + 32;
  v4[5] = v2;
  return swift_task_switch();
}

uint64_t sub_23A633518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v9[0] = a1;
  v2 = sub_23A691080();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23A69105C();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23A690D50();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v1 + 16) = 0;
  sub_23A633740();
  sub_23A690D38();
  v9[1] = MEMORY[0x24BEE4AF8];
  sub_23A63377C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27D0);
  sub_23A62A2E4();
  sub_23A691200();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5750], v2);
  *(_QWORD *)(v1 + 24) = sub_23A6910A4();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(_WORD *)(v1 + 48) = 256;
  *(_BYTE *)(v1 + 50) = 1;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  sub_23A690D08();
  swift_unknownObjectWeakAssign();
  return v1;
}

unint64_t sub_23A633740()
{
  unint64_t result;

  result = qword_2542D2820;
  if (!qword_2542D2820)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542D2820);
  }
  return result;
}

unint64_t sub_23A63377C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542D2810;
  if (!qword_2542D2810)
  {
    v1 = sub_23A69105C();
    result = MEMORY[0x23B853B34](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_2542D2810);
  }
  return result;
}

unint64_t ButtonPressEvent.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t sub_23A6337E0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore17SensorButtonState_state);
}

unint64_t sub_23A6337FC()
{
  sub_23A691290();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  return 0xD00000000000001ALL;
}

id SensorButtonState.__allocating_init(state:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore17SensorButtonState_state] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id SensorButtonState.init(state:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore17SensorButtonState_state] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for SensorButtonState();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for SensorButtonState()
{
  return objc_opt_self();
}

void sub_23A6339F8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore17SensorButtonState_state);
  v4 = (id)sub_23A690E04();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v3, v4);

}

id SensorButtonState.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23A63420C(a1);

  return v4;
}

id SensorButtonState.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23A63420C(a1);

  return v2;
}

id SensorButtonState.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SensorButtonState.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SensorButtonState.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for SensorButtonState);
}

void *sub_23A633C18()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11DockKitCore12SensorButton_state);
  v2 = v1;
  return v1;
}

unint64_t sub_23A633C84()
{
  sub_23A691290();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  sub_23A6914F4();
  sub_23A690E88();
  swift_bridgeObjectRelease();
  sub_23A690E88();
  return 0xD000000000000014;
}

char *SensorButton.__allocating_init(id:name:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  _BYTE *v9;
  _QWORD *v10;
  char *v11;
  void *v12;
  objc_super v14;

  v9 = objc_allocWithZone(v4);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore12SensorButton_state] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  v9[OBJC_IVAR____TtC11DockKitCore9Component_type] = 1;
  v10 = &v9[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v10 = a2;
  v10[1] = a3;
  v14.receiver = v9;
  v14.super_class = (Class)type metadata accessor for Component();
  v11 = (char *)objc_msgSendSuper2(&v14, sel_init);
  v12 = *(void **)&v11[OBJC_IVAR____TtC11DockKitCore12SensorButton_state];
  *(_QWORD *)&v11[OBJC_IVAR____TtC11DockKitCore12SensorButton_state] = a4;

  return v11;
}

char *SensorButton.init(id:name:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _QWORD *v6;
  char *v7;
  void *v8;
  objc_super v10;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore12SensorButton_state] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11DockKitCore9Component_id] = a1;
  v4[OBJC_IVAR____TtC11DockKitCore9Component_type] = 1;
  v6 = &v4[OBJC_IVAR____TtC11DockKitCore9Component_name];
  *v6 = a2;
  v6[1] = a3;
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for Component();
  v7 = (char *)objc_msgSendSuper2(&v10, sel_init);
  v8 = *(void **)&v7[OBJC_IVAR____TtC11DockKitCore12SensorButton_state];
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore12SensorButton_state] = a4;

  return v7;
}

void sub_23A633EF0(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC11DockKitCore12SensorButton_state);
  v4 = (void *)sub_23A690E04();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  sub_23A62DFC8(a1);
}

void *SensorButton.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  char *v3;
  id v4;
  void *v5;
  char *v6;
  uint64_t v7;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore12SensorButton_state] = 0;
  v4 = sub_23A62EFC8();
  v5 = v4;
  if (v4)
  {
    *((_BYTE *)v4 + OBJC_IVAR____TtC11DockKitCore9Component_type) = 1;
    type metadata accessor for SensorButtonState();
    v6 = v5;
    v7 = sub_23A69114C();

    a1 = *(void **)&v6[OBJC_IVAR____TtC11DockKitCore12SensorButton_state];
    *(_QWORD *)&v6[OBJC_IVAR____TtC11DockKitCore12SensorButton_state] = v7;
  }

  return v5;
}

void *SensorButton.init(coder:)(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore12SensorButton_state) = 0;
  v3 = sub_23A62EFC8();
  v4 = v3;
  if (v3)
  {
    *((_BYTE *)v3 + OBJC_IVAR____TtC11DockKitCore9Component_type) = 1;
    type metadata accessor for SensorButtonState();
    v5 = v4;
    v6 = sub_23A69114C();

    a1 = *(void **)&v5[OBJC_IVAR____TtC11DockKitCore12SensorButton_state];
    *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore12SensorButton_state] = v6;
  }

  return v4;
}

void SensorButton.__allocating_init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void SensorButton.init(id:type:name:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23A6341E0()
{
  uint64_t v0;

}

id SensorButton.__deallocating_deinit()
{
  return sub_23A5C5970(type metadata accessor for SensorButton);
}

id sub_23A63420C(void *a1)
{
  void *v1;
  char *v3;
  void *v4;
  id v5;
  uint64_t v6;
  objc_super v8;

  v3 = v1;
  v4 = (void *)sub_23A690E04();
  v5 = objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  v6 = v5 == (id)1;
  if (v5 == (id)2)
    v6 = 2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore17SensorButtonState_state] = v6;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for SensorData();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for SensorButton()
{
  return objc_opt_self();
}

unint64_t sub_23A6342D4()
{
  unint64_t result;

  result = qword_2569A0228;
  if (!qword_2569A0228)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for ButtonPressEvent, &type metadata for ButtonPressEvent);
    atomic_store(result, (unint64_t *)&qword_2569A0228);
  }
  return result;
}

_QWORD *sub_23A634318@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC11DockKitCore17SensorButtonState_state);
  return result;
}

_QWORD *sub_23A634330(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore17SensorButtonState_state) = *result;
  return result;
}

id sub_23A634348@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC11DockKitCore12SensorButton_state);
  *a2 = v2;
  return v2;
}

void sub_23A634360(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC11DockKitCore12SensorButton_state);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC11DockKitCore12SensorButton_state) = *a1;
  v3 = v2;

}

ValueMetadata *type metadata accessor for ButtonPressEvent()
{
  return &type metadata for ButtonPressEvent;
}

uint64_t method lookup function for SensorButtonState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SensorButtonState.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SensorButtonState.__allocating_init(state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for SensorButton()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SensorButton.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SensorButton.__allocating_init(id:name:state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t sub_23A63440C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  id v8;
  uint64_t result;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore6System_components);
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_23A5C6588(a1, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Actuator();
      result = swift_dynamicCastClass();
      if (result)
        return result;

    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_23A6344C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[3] = v0;
  v2 = sub_23A690D14();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FD48);
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 - 8);
  v1[11] = swift_task_alloc();
  v4 = sub_23A6906D8();
  v1[12] = v4;
  v1[13] = *(_QWORD *)(v4 - 8);
  v1[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23A634590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  double v5;
  double v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void (*v28)(_QWORD, uint64_t, uint64_t);
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v4(v1, *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastFeedbackTime, v3);
  sub_23A690690();
  v6 = v5;
  v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v1, v3);
  if (fabs(v6) <= 2.0)
  {
    v12 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 96);
    v4(v8, *(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastFeedbackRequest, v9);
    sub_23A690690();
    v11 = v10;
    v7(v8, v9);
    v12 = fabs(v11) > 2.0;
  }
  v14 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 24);
  v17 = OBJC_IVAR____TtC11DockKitCore19ActuationController__feedbackStarted;
  *(_QWORD *)(v0 + 120) = OBJC_IVAR____TtC11DockKitCore19ActuationController__feedbackStarted;
  v18 = v16 + v17;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v19(v13, v16 + v17, v15);
  sub_23A6909CC();
  v20 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v20(v13, v15);
  if (*(_BYTE *)(v0 + 168) != 1 || v12)
  {
    v22 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 72);
    v24 = *(_QWORD *)(v0 + 40);
    v25 = *(_QWORD *)(v0 + 24);
    v19(v22, v18, v23);
    sub_23A6909CC();
    v20(v22, v23);
    v26 = *(_BYTE *)(v0 + 169);
    v27 = v25 + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger;
    v28 = *(void (**)(_QWORD, uint64_t, uint64_t))(v24 + 16);
    *(_QWORD *)(v0 + 128) = v28;
    v29 = *(_QWORD *)(v0 + 32);
    if ((v26 & 1) != 0)
    {
      v28(*(_QWORD *)(v0 + 56), v27, v29);
      v30 = sub_23A690CFC();
      v31 = sub_23A691044();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_23A5B0000, v30, v31, "Requesting actuator feedback again", v32, 2u);
        MEMORY[0x23B853BD0](v32, -1, -1);
      }
      v33 = *(_QWORD *)(v0 + 56);
    }
    else
    {
      v28(*(_QWORD *)(v0 + 64), v27, v29);
      v30 = sub_23A690CFC();
      v34 = sub_23A691044();
      if (os_log_type_enabled(v30, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_23A5B0000, v30, v34, "Requesting actuator feedback first time", v35, 2u);
        MEMORY[0x23B853BD0](v35, -1, -1);
      }
      v33 = *(_QWORD *)(v0 + 64);
    }
    v36 = *(_QWORD *)(v0 + 32);
    v37 = *(_QWORD *)(v0 + 40);

    v38 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v38(v33, v36);
    *(_QWORD *)(v0 + 136) = v38;
    v39 = swift_bridgeObjectRetain();
    v40 = (unint64_t)sub_23A5C6D78(v39);
    swift_bridgeObjectRelease();
    if ((v40 & 0x8000000000000000) != 0 || (v40 & 0x4000000000000000) != 0)
    {
      type metadata accessor for Actuator();
      swift_bridgeObjectRetain();
      v45 = sub_23A691368();
      swift_release_n();
      v40 = v45;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_23A691524();
      type metadata accessor for Actuator();
      if (swift_dynamicCastMetatype() || (v43 = *(_QWORD *)(v40 + 16)) == 0)
      {
LABEL_17:
        swift_release();
      }
      else
      {
        v44 = 0;
        while (swift_dynamicCastClass())
        {
          if (v43 == ++v44)
            goto LABEL_17;
        }
        swift_release();
        v40 |= 1uLL;
      }
    }
    *(_QWORD *)(v0 + 144) = v40;
    v41 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v41;
    *v41 = v0;
    v41[1] = sub_23A6349BC;
    v42 = *(_QWORD *)(v0 + 24);
    v41[12] = 1;
    v41[13] = v42;
    v41[10] = v40;
    v41[11] = v42;
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A6349BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23A634A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 171) = 1;
  sub_23A6909D8();
  sub_23A6906CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v4 + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastFeedbackRequest, v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A634ADC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(void **)(v0 + 160);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 128);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRelease();
  v3(v4, v1 + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger, v5);
  v6 = v2;
  v7 = v2;
  v8 = sub_23A690CFC();
  v9 = sub_23A691038();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(void **)(v0 + 160);
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    v13 = v10;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v14;
    sub_23A6911D0();
    *v12 = v14;

    _os_log_impl(&dword_23A5B0000, v8, v9, "Failed getting actuator feedback: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699F1F0);
    swift_arrayDestroy();
    MEMORY[0x23B853BD0](v12, -1, -1);
    MEMORY[0x23B853BD0](v11, -1, -1);
  }
  else
  {
    v15 = *(void **)(v0 + 160);

  }
  v16 = *(void **)(v0 + 160);
  v17 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
  v18 = *(_QWORD *)(v0 + 48);
  v19 = *(_QWORD *)(v0 + 32);

  v17(v18, v19);
  *(_BYTE *)(v0 + 170) = 0;
  sub_23A6909D8();

  v20 = *(_QWORD *)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 96);
  v22 = *(_QWORD *)(v0 + 104);
  v23 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 171) = 1;
  sub_23A6909D8();
  sub_23A6906CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40))(v23 + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastFeedbackRequest, v20, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ActuationController.sendTrajectoryCommand(trajectoryCommand:progressCallback:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v4 + 176) = a3;
  *(_QWORD *)(v4 + 184) = v3;
  *(_QWORD *)(v4 + 168) = a2;
  v6 = sub_23A691338();
  *(_QWORD *)(v4 + 192) = v6;
  *(_QWORD *)(v4 + 200) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 208) = swift_task_alloc();
  v7 = sub_23A691320();
  *(_QWORD *)(v4 + 216) = v7;
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 232) = swift_task_alloc();
  *(_QWORD *)(v4 + 240) = swift_task_alloc();
  v8 = sub_23A690D14();
  *(_QWORD *)(v4 + 248) = v8;
  *(_QWORD *)(v4 + 256) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 264) = swift_task_alloc();
  *(_QWORD *)(v4 + 272) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569A0288);
  *(_QWORD *)(v4 + 280) = swift_task_alloc();
  *(_QWORD *)(v4 + 288) = swift_task_alloc();
  v9 = sub_23A6906D8();
  *(_QWORD *)(v4 + 296) = v9;
  *(_QWORD *)(v4 + 304) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 312) = swift_task_alloc();
  v10 = swift_task_alloc();
  *(_WORD *)(v4 + 165) = *(_WORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(v4 + 320) = v10;
  *(_QWORD *)(v4 + 328) = v11;
  return swift_task_switch();
}

uint64_t sub_23A634E88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[23];
  v2 = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[42] = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[43] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A634EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 352) = v5;
      *v5 = v0;
      v5[1] = sub_23A634FBC;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A634FBC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A635010()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A63504C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[23];
  v2 = OBJC_IVAR____TtC11DockKitCore16SystemController_accessory;
  v0[45] = OBJC_IVAR____TtC11DockKitCore16SystemController_accessory;
  v3 = MEMORY[0x23B853C6C](v1 + v2);
  v0[46] = v3;
  if (v3)
  {
    v4 = (_QWORD *)(v0[23] + OBJC_IVAR____TtC11DockKitCore6System_name);
    v0[47] = *v4;
    v0[48] = v4[1];
  }
  else
  {
    sub_23A5C9938();
    v5 = swift_allocError();
    *(_QWORD *)v6 = 0xD000000000000019;
    *(_QWORD *)(v6 + 8) = 0x800000023A69EC70;
    *(_BYTE *)(v6 + 16) = 7;
    swift_willThrow();
    v0[62] = v5;
    v0[63] = *(_QWORD *)(v0[23] + v0[42]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A635148()
{
  uint64_t v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 376);
  v1 = *(uint8_t **)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23A6351D0;
  v6 = *(unsigned __int16 *)(v0 + 165);
  v7 = swift_continuation_init();
  sub_23A605E0C(v2, v1, v5, v6, v4, v3, v7);
  return swift_continuation_await();
}

uint64_t sub_23A6351D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 392) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A63523C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 184);

  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v2 + v1);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A635290()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A6352D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  os_unfair_lock_s *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  unsigned __int8 v18;
  unsigned __int16 v19;
  int v20;
  unsigned __int8 v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  os_unfair_lock_s *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *);
  uint64_t result;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  os_unfair_lock_s *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  char v61;
  __int16 v62;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastTrajectoryProgress);
  v5 = OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_lock;
  *(_QWORD *)(v0 + 408) = v4;
  *(_QWORD *)(v0 + 416) = v5;
  v6 = *(os_unfair_lock_s **)(v4 + v5);
  swift_retain();
  os_unfair_lock_lock(v6 + 4);
  swift_release();
  *(_BYTE *)(v4 + 18) = 0;
  *(_WORD *)(v4 + 16) = 1536;
  sub_23A6906CC();
  v7 = OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_stamp;
  *(_QWORD *)(v0 + 424) = OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_stamp;
  v8 = v4 + v7;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40);
  *(_QWORD *)(v0 + 432) = v9;
  v9(v8, v1, v2);
  v10 = *(os_unfair_lock_s **)(v4 + v5);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  sub_23A6906CC();
  sub_23A690690();
  if (fabs(v11) >= 5.0)
  {
    v27 = *(_QWORD *)(v0 + 304);
    v26 = *(_QWORD *)(v0 + 312);
    v28 = *(_QWORD *)(v0 + 296);
    v29 = *(void (**)(char *))(v0 + 168);
    v61 = *(_BYTE *)(v0 + 165);
    v62 = 4;
    v29(&v61);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD *)(v0 + 296);
  v57 = *(_QWORD *)(v0 + 416);
  v59 = *(_QWORD *)(v0 + 304);
  v13 = *(_QWORD *)(v0 + 408);
  v14 = *(_QWORD *)(v0 + 280);
  v15 = *(_QWORD *)(v0 + 288);
  v60 = *(_QWORD *)(v0 + 272);
  v54 = v12;
  v56 = v13 + *(_QWORD *)(v0 + 424);
  v16 = v15 + *(int *)(v60 + 48);
  v17 = *(os_unfair_lock_s **)(v13 + v57);
  swift_retain();
  os_unfair_lock_lock(v17 + 4);
  swift_release();
  v18 = *(_BYTE *)(v13 + 18);
  v19 = *(_WORD *)(v13 + 16);
  v20 = v19 | (v18 << 16);
  *(_WORD *)v15 = v19;
  v21 = v18;
  *(_BYTE *)(v15 + 2) = v18;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
  v22(v16, v56, v12);
  v23 = *(os_unfair_lock_s **)(v13 + v57);
  swift_retain();
  os_unfair_lock_unlock(v23 + 4);
  swift_release();
  v24 = v14 + *(int *)(v60 + 48);
  *(_BYTE *)(v14 + 2) = v21;
  *(_WORD *)v14 = v19;
  v22(v24, v16, v54);
  if ((v20 & 0xFF00) == 0x600)
  {
    v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
    v25(v24, *(_QWORD *)(v0 + 296));
LABEL_10:
    *(_QWORD *)(v0 + 464) = v25;
    v48 = *(_QWORD *)(v0 + 232);
    v49 = *(_QWORD *)(v0 + 216);
    v50 = *(_QWORD *)(v0 + 224);
    sub_23A691308();
    MEMORY[0x23B853198](100000000000000000, 0);
    v51 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    *(_QWORD *)(v0 + 472) = v51;
    v51(v48, v49);
    *(_QWORD *)(v0 + 152) = 0;
    *(_QWORD *)(v0 + 144) = 0;
    *(_BYTE *)(v0 + 160) = 1;
    sub_23A69132C();
    v52 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v52;
    sub_23A5F0550(&qword_2569A02A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
    *v52 = v0;
    v52[1] = sub_23A635B0C;
    return sub_23A690FB4();
  }
  v31 = v20;
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
  v32 = *(_QWORD *)(v0 + 416);
  v33 = *(_QWORD *)(v0 + 408);
  v35 = *(_QWORD *)(v0 + 312);
  v34 = *(_QWORD *)(v0 + 320);
  v37 = *(_QWORD *)(v0 + 296);
  v36 = *(_QWORD *)(v0 + 304);
  v58 = *(void (**)(uint64_t))(v0 + 168);
  v53 = v33 + *(_QWORD *)(v0 + 424);
  v25 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  *(_QWORD *)(v0 + 440) = v25;
  v25(v24, v37);
  sub_23A6906CC();
  v25(v35, v37);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v35, v34, v37);
  v38 = *(os_unfair_lock_s **)(v33 + v32);
  swift_retain();
  os_unfair_lock_lock(v38 + 4);
  swift_release();
  *(_BYTE *)(v33 + 18) = 0;
  *(_WORD *)(v33 + 16) = 1536;
  sub_23A6906CC();
  v55(v53, v34, v37);
  v39 = *(os_unfair_lock_s **)(v33 + v32);
  swift_retain();
  os_unfair_lock_unlock(v39 + 4);
  swift_release();
  *(_WORD *)(v0 + 161) = v31;
  *(_BYTE *)(v0 + 163) = BYTE2(v31);
  v58(v0 + 161);
  if ((BYTE1(v31) - 3) >= 3u)
    goto LABEL_10;
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 16))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger, *(_QWORD *)(v0 + 248));
  v40 = sub_23A690CFC();
  v41 = sub_23A691044();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v42 = 16777472;
    *(_BYTE *)(v0 + 164) = BYTE1(v31);
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v40, v41, "Completed the trajectory execution status=%hhu stopping listening trajectory progress feedback", v42, 5u);
    MEMORY[0x23B853BD0](v42, -1, -1);
  }
  v43 = *(_QWORD *)(v0 + 360);
  v45 = *(_QWORD *)(v0 + 256);
  v44 = *(_QWORD *)(v0 + 264);
  v46 = *(_QWORD *)(v0 + 248);
  v47 = *(_QWORD *)(v0 + 184);

  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
  result = MEMORY[0x23B853C6C](v47 + v43);
  *(_QWORD *)(v0 + 448) = result;
  if (result)
    return swift_task_switch();
  __break(1u);
  return result;
}

uint64_t sub_23A635860()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 496) = *(_QWORD *)(v0 + 392);
  *(_QWORD *)(v0 + 504) = *(_QWORD *)(*(_QWORD *)(v0 + 184) + *(_QWORD *)(v0 + 336));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A6358BC()
{
  _QWORD *v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = (_BYTE *)v0[56];
  v2 = v0[23];
  v0[10] = v0;
  v0[11] = sub_23A635920;
  v3 = (_BYTE *)swift_continuation_init();
  sub_23A602B7C(v2, v1, v3);
  return swift_continuation_await();
}

uint64_t sub_23A635920()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 456) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A63598C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);

  sub_23A5C921C(v4, &qword_2569A0288);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A635A4C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);

  sub_23A5C921C(v4, &qword_2569A0288);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A635B0C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 488) = v0;
  swift_task_dealloc();
  v3 = (void (*)(uint64_t, uint64_t))v2[59];
  v4 = v2[30];
  v5 = v2[27];
  (*(void (**)(_QWORD, _QWORD))(v2[25] + 8))(v2[26], v2[24]);
  v3(v4, v5);
  return swift_task_switch();
}

uint64_t sub_23A635BC0()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  unsigned __int8 v8;
  unsigned __int16 v9;
  int v10;
  unsigned __int8 v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  os_unfair_lock_s *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *);
  uint64_t result;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  os_unfair_lock_s *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int16 v52;

  sub_23A5C921C(*(_QWORD *)(v0 + 288), &qword_2569A0288);
  sub_23A690690();
  if (fabs(v1) >= 5.0)
  {
    v17 = *(_QWORD *)(v0 + 304);
    v16 = *(_QWORD *)(v0 + 312);
    v18 = *(_QWORD *)(v0 + 296);
    v19 = *(void (**)(char *))(v0 + 168);
    v51 = *(_BYTE *)(v0 + 165);
    v52 = 4;
    v19(&v51);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 296);
  v47 = *(_QWORD *)(v0 + 416);
  v49 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v50 = *(_QWORD *)(v0 + 272);
  v44 = v3;
  v46 = v2 + *(_QWORD *)(v0 + 424);
  v6 = v4 + *(int *)(v50 + 48);
  v7 = *(os_unfair_lock_s **)(v2 + v47);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  v8 = *(_BYTE *)(v2 + 18);
  v9 = *(_WORD *)(v2 + 16);
  v10 = v9 | (v8 << 16);
  *(_WORD *)v4 = v9;
  v11 = v8;
  *(_BYTE *)(v4 + 2) = v8;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
  v12(v6, v46, v3);
  v13 = *(os_unfair_lock_s **)(v2 + v47);
  swift_retain();
  os_unfair_lock_unlock(v13 + 4);
  swift_release();
  v14 = v5 + *(int *)(v50 + 48);
  *(_BYTE *)(v5 + 2) = v11;
  *(_WORD *)v5 = v9;
  v12(v14, v6, v44);
  if ((v10 & 0xFF00) == 0x600)
  {
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
    v15(v14, *(_QWORD *)(v0 + 296));
LABEL_10:
    *(_QWORD *)(v0 + 464) = v15;
    v38 = *(_QWORD *)(v0 + 232);
    v39 = *(_QWORD *)(v0 + 216);
    v40 = *(_QWORD *)(v0 + 224);
    sub_23A691308();
    MEMORY[0x23B853198](100000000000000000, 0);
    v41 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    *(_QWORD *)(v0 + 472) = v41;
    v41(v38, v39);
    *(_QWORD *)(v0 + 152) = 0;
    *(_QWORD *)(v0 + 144) = 0;
    *(_BYTE *)(v0 + 160) = 1;
    sub_23A69132C();
    v42 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v42;
    sub_23A5F0550(&qword_2569A02A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
    *v42 = v0;
    v42[1] = sub_23A635B0C;
    return sub_23A690FB4();
  }
  v21 = v10;
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
  v22 = *(_QWORD *)(v0 + 416);
  v23 = *(_QWORD *)(v0 + 408);
  v25 = *(_QWORD *)(v0 + 312);
  v24 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 296);
  v26 = *(_QWORD *)(v0 + 304);
  v48 = *(void (**)(uint64_t))(v0 + 168);
  v43 = v23 + *(_QWORD *)(v0 + 424);
  v15 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  *(_QWORD *)(v0 + 440) = v15;
  v15(v14, v27);
  sub_23A6906CC();
  v15(v25, v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v25, v24, v27);
  v28 = *(os_unfair_lock_s **)(v23 + v22);
  swift_retain();
  os_unfair_lock_lock(v28 + 4);
  swift_release();
  *(_BYTE *)(v23 + 18) = 0;
  *(_WORD *)(v23 + 16) = 1536;
  sub_23A6906CC();
  v45(v43, v24, v27);
  v29 = *(os_unfair_lock_s **)(v23 + v22);
  swift_retain();
  os_unfair_lock_unlock(v29 + 4);
  swift_release();
  *(_WORD *)(v0 + 161) = v21;
  *(_BYTE *)(v0 + 163) = BYTE2(v21);
  v48(v0 + 161);
  if ((BYTE1(v21) - 3) >= 3u)
    goto LABEL_10;
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 16))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger, *(_QWORD *)(v0 + 248));
  v30 = sub_23A690CFC();
  v31 = sub_23A691044();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v32 = 16777472;
    *(_BYTE *)(v0 + 164) = BYTE1(v21);
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v30, v31, "Completed the trajectory execution status=%hhu stopping listening trajectory progress feedback", v32, 5u);
    MEMORY[0x23B853BD0](v32, -1, -1);
  }
  v33 = *(_QWORD *)(v0 + 360);
  v35 = *(_QWORD *)(v0 + 256);
  v34 = *(_QWORD *)(v0 + 264);
  v36 = *(_QWORD *)(v0 + 248);
  v37 = *(_QWORD *)(v0 + 184);

  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  result = MEMORY[0x23B853C6C](v37 + v33);
  *(_QWORD *)(v0 + 448) = result;
  if (result)
    return swift_task_switch();
  __break(1u);
  return result;
}

uint64_t sub_23A6360B4()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A6360F8()
{
  uint64_t v0;

  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A63619C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  sub_23A5C921C(*(_QWORD *)(v0 + 288), &qword_2569A0288);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *ActuationController.getOrientation()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  id v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  char *v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  os_unfair_lock_s *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  char *v46;
  os_unfair_lock_s *v47;
  os_unfair_lock_s *v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  os_unfair_lock_s *v51;
  char *v52;
  os_unfair_lock_s *v53;
  os_unfair_lock_s *v54;
  os_unfair_lock_s *v55;
  uint64_t v57;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542D27F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23A6906D8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v57 - v10;
  v12 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Orientation()), sel_init);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, &v1[OBJC_IVAR____TtC11DockKitCore19ActuationController_lastFeedbackTime], v5);
  sub_23A69066C();
  v13 = sub_23A69069C();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  v14(v11, v5);
  if ((v13 & 1) != 0)
  {
    v15 = sub_23A690F9C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v1;
    v17 = v1;
    sub_23A5D120C((uint64_t)v4, (uint64_t)&unk_2569A02B0, (uint64_t)v16);

    swift_release();
    return 0;
  }
  v18 = OBJC_IVAR____TtC11DockKitCore6System_components;
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC11DockKitCore6System_components];
  if (!*(_QWORD *)(v19 + 16))
    goto LABEL_9;
  swift_bridgeObjectRetain();
  v20 = sub_23A5C6588(7823737, 0xE300000000000000);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    v23 = 0;
    goto LABEL_10;
  }
  v22 = *(id *)(*(_QWORD *)(v19 + 56) + 8 * v20);
  swift_bridgeObjectRelease();
  type metadata accessor for Actuator();
  v23 = (char *)swift_dynamicCastClass();
  if (!v23)

LABEL_10:
  v24 = *(_QWORD *)&v1[v18];
  if (!*(_QWORD *)(v24 + 16))
  {
LABEL_15:
    v28 = 0;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v25 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v27 = *(id *)(*(_QWORD *)(v24 + 56) + 8 * v25);
  swift_bridgeObjectRelease();
  type metadata accessor for Actuator();
  v28 = swift_dynamicCastClass();
  if (!v28)

LABEL_16:
  v29 = *(_QWORD *)&v1[v18];
  if (!*(_QWORD *)(v29 + 16))
  {
LABEL_21:
    v33 = 0;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  v30 = sub_23A5C6588(1819045746, 0xE400000000000000);
  if ((v31 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v32 = *(id *)(*(_QWORD *)(v29 + 56) + 8 * v30);
  swift_bridgeObjectRelease();
  type metadata accessor for Actuator();
  v33 = swift_dynamicCastClass();
  if (!v33)

LABEL_22:
  if (v23)
  {
    v34 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
    v35 = *(os_unfair_lock_s **)&v23[OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock];
    v36 = v23;
    swift_retain();
    os_unfair_lock_lock(v35 + 4);
    swift_release();
    v37 = *(_QWORD *)&v36[OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition];
    v38 = *(os_unfair_lock_s **)&v23[v34];
    swift_retain();
    os_unfair_lock_unlock(v38 + 4);

    swift_release();
  }
  else
  {
    v37 = 0;
    if (!(v33 | v28))
    {

      return 0;
    }
  }
  v39 = OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock;
  v40 = *(os_unfair_lock_s **)&v12[OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock];
  swift_retain();
  os_unfair_lock_lock(v40 + 4);
  swift_release();
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore11Orientation__yaw] = v37;
  v41 = *(os_unfair_lock_s **)&v12[v39];
  swift_retain();
  os_unfair_lock_unlock(v41 + 4);
  swift_release();
  v42 = 0;
  v43 = 0;
  if (v28)
  {
    v44 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
    v45 = *(os_unfair_lock_s **)(v28 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
    v46 = (char *)(id)v28;
    swift_retain();
    os_unfair_lock_lock(v45 + 4);
    swift_release();
    v43 = *(_QWORD *)&v46[OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition];
    v47 = *(os_unfair_lock_s **)(v28 + v44);
    swift_retain();
    os_unfair_lock_unlock(v47 + 4);

    swift_release();
  }
  v48 = *(os_unfair_lock_s **)&v12[v39];
  swift_retain();
  os_unfair_lock_lock(v48 + 4);
  swift_release();
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore11Orientation__pitch] = v43;
  v49 = *(os_unfair_lock_s **)&v12[v39];
  swift_retain();
  os_unfair_lock_unlock(v49 + 4);
  swift_release();
  if (v33)
  {
    v50 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
    v51 = *(os_unfair_lock_s **)(v33 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
    v52 = (char *)(id)v33;
    swift_retain();
    os_unfair_lock_lock(v51 + 4);
    swift_release();
    v42 = *(_QWORD *)&v52[OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition];
    v53 = *(os_unfair_lock_s **)(v33 + v50);
    swift_retain();
    os_unfair_lock_unlock(v53 + 4);

    swift_release();
  }
  v54 = *(os_unfair_lock_s **)&v12[v39];
  swift_retain();
  os_unfair_lock_lock(v54 + 4);
  swift_release();
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore11Orientation__roll] = v42;
  v55 = *(os_unfair_lock_s **)&v12[v39];
  swift_retain();
  os_unfair_lock_unlock(v55 + 4);

  swift_release();
  return v12;
}

uint64_t ActuationController.setOrientation(orientation:relative:duration:priority:progressCallback:)(uint64_t a1, char a2, _BYTE *a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  *(_QWORD *)(v7 + 208) = a5;
  *(_QWORD *)(v7 + 216) = v6;
  *(_QWORD *)(v7 + 200) = a4;
  *(double *)(v7 + 192) = a6;
  *(_BYTE *)(v7 + 308) = a2;
  *(_QWORD *)(v7 + 184) = a1;
  v9 = sub_23A690D14();
  *(_QWORD *)(v7 + 224) = v9;
  *(_QWORD *)(v7 + 232) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v7 + 240) = swift_task_alloc();
  *(_QWORD *)(v7 + 248) = swift_task_alloc();
  *(_QWORD *)(v7 + 256) = swift_task_alloc();
  *(_QWORD *)(v7 + 264) = swift_task_alloc();
  *(_BYTE *)(v7 + 309) = *a3;
  return swift_task_switch();
}

uint64_t sub_23A636850()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  double v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  double v21;
  os_unfair_lock_s *v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  double v25;
  os_unfair_lock_s *v26;
  os_unfair_lock_s *v27;
  double v28;
  os_unfair_lock_s *v29;
  os_unfair_lock_s *v30;
  double v31;
  os_unfair_lock_s *v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  double v35;
  os_unfair_lock_s *v36;
  os_unfair_lock_s *v37;
  double v38;
  os_unfair_lock_s *v39;
  id v40;
  NSObject *v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  void *v46;
  os_unfair_lock_s *v47;
  os_unfair_lock_s *v48;
  void *v49;
  os_unfair_lock_s *v50;
  os_unfair_lock_s *v51;
  uint64_t v52;
  os_unfair_lock_s *v53;
  uint64_t v54;
  char *v55;
  os_unfair_lock_s *v56;
  uint64_t v57;
  os_unfair_lock_s *v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  os_unfair_lock_s *v65;
  double v66;
  os_unfair_lock_s *v67;
  uint64_t v68;
  os_unfair_lock_s *v69;
  uint64_t v70;
  double v71;
  os_unfair_lock_s *v72;
  os_unfair_lock_s *v73;
  uint64_t v74;
  double v75;
  os_unfair_lock_s *v76;
  os_unfair_lock_s *v77;
  double v78;
  os_unfair_lock_s *v79;
  os_unfair_lock_s *v80;
  double v81;
  os_unfair_lock_s *v82;
  os_unfair_lock_s *v83;
  uint64_t v84;
  double v85;
  os_unfair_lock_s *v86;
  os_unfair_lock_s *v87;
  double v88;
  os_unfair_lock_s *v89;
  NSObject *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint64_t v94;
  os_unfair_lock_s *v95;
  void *v96;
  os_unfair_lock_s *v97;
  os_unfair_lock_s *v98;
  uint64_t v99;
  os_unfair_lock_s *v100;
  os_unfair_lock_s *v101;
  void *v102;
  os_unfair_lock_s *v103;
  os_unfair_lock_s *v104;
  double v105;
  os_unfair_lock_s *v106;
  os_unfair_lock_s *v107;
  double v108;
  os_unfair_lock_s *v109;
  double v110;
  double v111;
  uint64_t v112;
  _QWORD *v113;
  unint64_t v114;
  unint64_t v115;
  double *v116;
  _QWORD *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char v121;
  _QWORD *v122;
  os_unfair_lock_s *v123;
  double v124;
  os_unfair_lock_s *v125;
  os_unfair_lock_s *v126;
  double v127;
  os_unfair_lock_s *v128;
  double v129;
  uint64_t v130;
  double v131;
  _QWORD *v132;
  unint64_t v133;
  unint64_t v134;
  double *v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  char v139;
  _QWORD *v140;
  char *v141;
  os_unfair_lock_s *v142;
  uint64_t v143;
  os_unfair_lock_s *v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  os_unfair_lock_s *v151;
  double v152;
  os_unfair_lock_s *v153;
  uint64_t v154;
  os_unfair_lock_s *v155;
  uint64_t v156;
  double v157;
  os_unfair_lock_s *v158;
  os_unfair_lock_s *v159;
  double v160;
  os_unfair_lock_s *v161;
  os_unfair_lock_s *v162;
  double v163;
  os_unfair_lock_s *v164;
  os_unfair_lock_s *v165;
  double v166;
  os_unfair_lock_s *v167;
  os_unfair_lock_s *v168;
  uint64_t v169;
  double v170;
  os_unfair_lock_s *v171;
  os_unfair_lock_s *v172;
  double v173;
  os_unfair_lock_s *v174;
  id v175;
  NSObject *v176;
  _BOOL4 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  os_unfair_lock_s *v181;
  void *v182;
  os_unfair_lock_s *v183;
  os_unfair_lock_s *v184;
  void *v185;
  os_unfair_lock_s *v186;
  os_unfair_lock_s *v187;
  void *v188;
  os_unfair_lock_s *v189;
  os_unfair_lock_s *v190;
  double v191;
  os_unfair_lock_s *v192;
  os_unfair_lock_s *v193;
  double v194;
  os_unfair_lock_s *v195;
  double v196;
  double v197;
  uint64_t v198;
  _QWORD *v199;
  unint64_t v200;
  unint64_t v201;
  double *v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  char v206;
  _QWORD *v207;
  void *v208;
  id v209;
  NSObject *v210;
  os_log_type_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  os_unfair_lock_s *v216;
  uint64_t v217;
  os_unfair_lock_s *v218;
  os_unfair_lock_s *v219;
  uint64_t v220;
  os_unfair_lock_s *v221;
  os_unfair_lock_s *v222;
  uint64_t v223;
  os_unfair_lock_s *v224;
  char v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  NSObject *v230;
  uint64_t v231;
  os_log_type_t v232[8];
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  os_log_t log;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  os_log_type_t type;
  id typea;
  os_log_type_t typeb;
  void *typec;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  os_log_type_t v247[8];
  os_log_type_t v248[8];
  os_log_type_t v249[8];
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t *v256;
  _QWORD *v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  __int128 v267;
  uint64_t v268;
  _QWORD *v269;
  uint64_t v270[2];

  v1 = (id *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 184);
  v254 = (_QWORD *)(v0 + 128);
  v256 = (uint64_t *)(v0 + 104);
  v257 = (_QWORD *)(v0 + 136);
  v261 = (uint64_t *)(v0 + 152);
  v3 = OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock;
  v4 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC11DockKitCore11Orientation_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = OBJC_IVAR____TtC11DockKitCore11Orientation__yaw;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11DockKitCore11Orientation__yaw);
  v7 = *(os_unfair_lock_s **)(v2 + v3);
  swift_retain();
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  v8 = (_QWORD *)&unk_2569AD000;
  if ((~v6 & 0x7FF0000000000000) == 0)
    goto LABEL_13;
  v9 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC11DockKitCore6System_components);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_13;
  swift_bridgeObjectRetain();
  v10 = sub_23A5C6588(7823737, 0xE300000000000000);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    v269 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_14;
  }
  v12 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  type metadata accessor for Actuator();
  v13 = swift_dynamicCastClass();
  if (!v13)
  {

    goto LABEL_13;
  }
  v14 = v13;
  v265 = v0;
  v15 = *(os_unfair_lock_s **)(v2 + v3);
  swift_retain();
  os_unfair_lock_lock(v15 + 4);
  swift_release();
  v244 = v5;
  *(_QWORD *)v247 = v3;
  v16 = *(double *)(v2 + v5);
  v250 = v2;
  v17 = *(os_unfair_lock_s **)(v2 + v3);
  swift_retain();
  os_unfair_lock_unlock(v17 + 4);
  swift_release();
  v18 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  v19 = *(os_unfair_lock_s **)(v14 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v19 + 4);
  swift_release();
  v20 = OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition;
  v21 = *(double *)(v14 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition);
  v22 = *(os_unfair_lock_s **)(v14 + v18);
  swift_retain();
  os_unfair_lock_unlock(v22 + 4);
  swift_release();
  v23 = *(os_unfair_lock_s **)(v14 + v18);
  swift_retain();
  os_unfair_lock_lock(v23 + 4);
  swift_release();
  v24 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition;
  v25 = *(double *)(v14 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
  v26 = *(os_unfair_lock_s **)(v14 + v18);
  swift_retain();
  os_unfair_lock_unlock(v26 + 4);
  swift_release();
  if (v21 < v25)
  {
    v27 = *(os_unfair_lock_s **)(v14 + v18);
    swift_retain();
    os_unfair_lock_lock(v27 + 4);
    swift_release();
    v28 = *(double *)(v14 + v20);
    v29 = *(os_unfair_lock_s **)(v14 + v18);
    swift_retain();
    os_unfair_lock_unlock(v29 + 4);
    swift_release();
    if (v16 < v28)
      goto LABEL_9;
  }
  v30 = *(os_unfair_lock_s **)(v14 + v18);
  swift_retain();
  os_unfair_lock_lock(v30 + 4);
  swift_release();
  v31 = *(double *)(v14 + v20);
  v32 = *(os_unfair_lock_s **)(v14 + v18);
  swift_retain();
  os_unfair_lock_unlock(v32 + 4);
  swift_release();
  v33 = *(os_unfair_lock_s **)(v14 + v18);
  swift_retain();
  os_unfair_lock_lock(v33 + 4);
  swift_release();
  v34 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition;
  v35 = *(double *)(v14 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
  v36 = *(os_unfair_lock_s **)(v14 + v18);
  swift_retain();
  os_unfair_lock_unlock(v36 + 4);
  swift_release();
  if (v35 >= v31)
    goto LABEL_26;
  v37 = *(os_unfair_lock_s **)(v14 + v18);
  swift_retain();
  os_unfair_lock_lock(v37 + 4);
  swift_release();
  v38 = *(double *)(v14 + v20);
  v39 = *(os_unfair_lock_s **)(v14 + v18);
  swift_retain();
  os_unfair_lock_unlock(v39 + 4);
  swift_release();
  if (v38 >= v16)
  {
LABEL_26:
    v104 = *(os_unfair_lock_s **)(v14 + v18);
    swift_retain();
    os_unfair_lock_lock(v104 + 4);
    swift_release();
    v105 = *(double *)(v14 + v24);
    v106 = *(os_unfair_lock_s **)(v14 + v18);
    swift_retain();
    os_unfair_lock_unlock(v106 + 4);
    swift_release();
    v107 = *(os_unfair_lock_s **)(v14 + v18);
    swift_retain();
    os_unfair_lock_lock(v107 + 4);
    swift_release();
    v108 = *(double *)(v14 + v34);
    v109 = *(os_unfair_lock_s **)(v14 + v18);
    swift_retain();
    os_unfair_lock_unlock(v109 + 4);
    swift_release();
    if (v105 > v16)
      v110 = v105;
    else
      v110 = v16;
    if (v108 >= v110)
      v111 = v110;
    else
      v111 = v108;
    v112 = *(_QWORD *)(v14 + OBJC_IVAR____TtC11DockKitCore9Component_id);
    v113 = sub_23A5C5ABC(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v115 = v113[2];
    v114 = v113[3];
    if (v115 >= v114 >> 1)
      v113 = sub_23A5C5ABC((_QWORD *)(v114 > 1), v115 + 1, 1, v113);
    v3 = *(_QWORD *)v247;
    v113[2] = v115 + 1;
    v116 = (double *)&v113[3 * v115];
    v116[4] = 1.0;
    v116[5] = v111;
    v116[6] = 0.0;
    v117 = sub_23A5C635C(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v119 = v117[2];
    v118 = v117[3];
    v269 = v117;
    v0 = v265;
    v5 = v244;
    if (v119 >= v118 >> 1)
      v269 = sub_23A5C635C((_QWORD *)(v118 > 1), v119 + 1, 1, v117);
    v120 = *(_QWORD *)(v265 + 192);
    v121 = *(_BYTE *)(v265 + 308);
    v269[2] = v119 + 1;
    v122 = &v269[4 * v119];
    v122[4] = v113;
    v122[5] = v120;
    v122[6] = v112;
    *((_BYTE *)v122 + 56) = v121;
    *(_WORD *)((char *)v122 + 57) = 257;

    v2 = v250;
    v8 = (_QWORD *)&unk_2569AD000;
  }
  else
  {
LABEL_9:
    v260 = v24;
    v0 = v265;
    v8 = &unk_2569AD000;
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v265 + 232) + 16))(*(_QWORD *)(v265 + 264), *(_QWORD *)(v265 + 216) + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger, *(_QWORD *)(v265 + 224));
    v40 = v12;
    v41 = sub_23A690CFC();
    type = sub_23A691044();
    v42 = os_log_type_enabled(v41, type);
    v43 = *(_QWORD *)(v265 + 264);
    v263 = *(_QWORD *)(v265 + 232);
    v268 = *(_QWORD *)(v265 + 224);
    if (v42)
    {
      v44 = swift_slowAlloc();
      v233 = swift_slowAlloc();
      v270[0] = v233;
      *(_DWORD *)v44 = 136316162;
      v237 = v43;
      *v261 = sub_23A5EEB40(0xD000000000000048, 0x800000023A69EC90, v270);
      sub_23A6911D0();
      *(_WORD *)(v44 + 12) = 2048;
      v45 = *(os_unfair_lock_s **)(v14 + v18);
      swift_retain();
      os_unfair_lock_lock(v45 + 4);
      swift_release();
      v46 = *(void **)(v14 + v20);
      v47 = *(os_unfair_lock_s **)(v14 + v18);
      swift_retain();
      os_unfair_lock_unlock(v47 + 4);
      swift_release();
      *(v1 - 3) = v46;
      sub_23A6911D0();
      *(_WORD *)(v44 + 22) = 2048;
      *((double *)v1 - 2) = v16;
      sub_23A6911D0();
      *(_WORD *)(v44 + 32) = 2048;
      v48 = *(os_unfair_lock_s **)(v14 + v18);
      swift_retain();
      os_unfair_lock_lock(v48 + 4);
      swift_release();
      v49 = *(void **)(v14 + v260);
      v50 = *(os_unfair_lock_s **)(v14 + v18);
      swift_retain();
      os_unfair_lock_unlock(v50 + 4);
      swift_release();
      *(v1 - 1) = v49;
      sub_23A6911D0();
      *(_WORD *)(v44 + 42) = 2048;
      v51 = *(os_unfair_lock_s **)(v14 + v18);
      swift_retain();
      v0 = v265;
      os_unfair_lock_lock(v51 + 4);
      swift_release();
      v52 = *(_QWORD *)(v14 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
      v53 = *(os_unfair_lock_s **)(v14 + v18);
      swift_retain();
      os_unfair_lock_unlock(v53 + 4);
      swift_release();
      *v254 = v52;
      sub_23A6911D0();

      _os_log_impl(&dword_23A5B0000, v41, type, "%s Current yaw %f and current yaw command %f is out of bounds %f,%f", (uint8_t *)v44, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x23B853BD0](v233, -1, -1);
      v54 = v44;
      v8 = (_QWORD *)&unk_2569AD000;
      MEMORY[0x23B853BD0](v54, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v263 + 8))(v237, v268);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v263 + 8))(v43, v268);
    }
    v269 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v3 = *(_QWORD *)v247;
    v2 = v250;
    v5 = v244;
  }
LABEL_14:
  v55 = (char *)*v1;
  v56 = *(os_unfair_lock_s **)(v2 + v3);
  swift_retain();
  os_unfair_lock_lock(v56 + 4);
  swift_release();
  v266 = v55;
  v264 = OBJC_IVAR____TtC11DockKitCore11Orientation__pitch;
  v57 = *(_QWORD *)&v55[OBJC_IVAR____TtC11DockKitCore11Orientation__pitch];
  v58 = *(os_unfair_lock_s **)(v2 + v3);
  swift_retain();
  os_unfair_lock_unlock(v58 + 4);
  swift_release();
  if ((~v57 & 0x7FF0000000000000) != 0)
  {
    v59 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v59 + 16))
    {
      swift_bridgeObjectRetain();
      v60 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
      if ((v61 & 1) != 0)
      {
        v245 = v5;
        v62 = *(id *)(*(_QWORD *)(v59 + 56) + 8 * v60);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v63 = swift_dynamicCastClass();
        if (!v63)
        {

LABEL_53:
          v5 = v245;
          goto LABEL_54;
        }
        v64 = v63;
        v65 = *(os_unfair_lock_s **)(v2 + v3);
        swift_retain();
        os_unfair_lock_lock(v65 + 4);
        swift_release();
        v66 = *(double *)&v266[v264];
        *(_QWORD *)v248 = v3;
        v251 = v2;
        v67 = *(os_unfair_lock_s **)(v2 + v3);
        swift_retain();
        os_unfair_lock_unlock(v67 + 4);
        swift_release();
        v68 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
        v69 = *(os_unfair_lock_s **)(v64 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
        swift_retain();
        os_unfair_lock_lock(v69 + 4);
        swift_release();
        v70 = OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition;
        v71 = *(double *)(v64 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition);
        v72 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_unlock(v72 + 4);
        swift_release();
        v73 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_lock(v73 + 4);
        swift_release();
        v74 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition;
        v75 = *(double *)(v64 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
        v76 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_unlock(v76 + 4);
        swift_release();
        if (v71 < v75)
        {
          v77 = *(os_unfair_lock_s **)(v64 + v68);
          swift_retain();
          os_unfair_lock_lock(v77 + 4);
          swift_release();
          v78 = *(double *)(v64 + v70);
          v79 = *(os_unfair_lock_s **)(v64 + v68);
          swift_retain();
          os_unfair_lock_unlock(v79 + 4);
          swift_release();
          if (v66 < v78)
            goto LABEL_22;
        }
        v80 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_lock(v80 + 4);
        swift_release();
        v81 = *(double *)(v64 + v70);
        v82 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_unlock(v82 + 4);
        swift_release();
        v83 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_lock(v83 + 4);
        swift_release();
        v84 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition;
        v85 = *(double *)(v64 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
        v86 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_unlock(v86 + 4);
        swift_release();
        if (v85 < v81)
        {
          v87 = *(os_unfair_lock_s **)(v64 + v68);
          swift_retain();
          os_unfair_lock_lock(v87 + 4);
          swift_release();
          v88 = *(double *)(v64 + v70);
          v89 = *(os_unfair_lock_s **)(v64 + v68);
          swift_retain();
          os_unfair_lock_unlock(v89 + 4);
          swift_release();
          if (v88 < v66)
          {
LABEL_22:
            v8 = &unk_2569AD000;
            (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger, *(_QWORD *)(v0 + 224));
            typea = v62;
            v90 = sub_23A690CFC();
            v91 = sub_23A691044();
            v92 = os_log_type_enabled(v90, v91);
            v93 = *(_QWORD *)(v0 + 224);
            log = *(os_log_t *)(v0 + 232);
            v238 = *(_QWORD *)(v0 + 256);
            if (v92)
            {
              v230 = v90;
              v94 = swift_slowAlloc();
              v231 = swift_slowAlloc();
              v270[0] = v231;
              *(_DWORD *)v94 = 136316162;
              v234 = v93;
              *v256 = sub_23A5EEB40(0xD000000000000048, 0x800000023A69EC90, v270);
              sub_23A6911D0();
              *(_WORD *)(v94 + 12) = 2048;
              v95 = *(os_unfair_lock_s **)(v64 + v68);
              swift_retain();
              os_unfair_lock_lock(v95 + 4);
              swift_release();
              v96 = *(void **)(v64 + v70);
              v97 = *(os_unfair_lock_s **)(v64 + v68);
              swift_retain();
              os_unfair_lock_unlock(v97 + 4);
              swift_release();
              *(v1 - 9) = v96;
              sub_23A6911D0();
              *(_WORD *)(v94 + 22) = 2048;
              *((double *)v1 - 8) = v66;
              sub_23A6911D0();
              *(_WORD *)(v94 + 32) = 2048;
              v98 = *(os_unfair_lock_s **)(v64 + v68);
              swift_retain();
              os_unfair_lock_lock(v98 + 4);
              swift_release();
              v99 = *(_QWORD *)(v64 + v74);
              v100 = *(os_unfair_lock_s **)(v64 + v68);
              swift_retain();
              os_unfair_lock_unlock(v100 + 4);
              swift_release();
              *v257 = v99;
              sub_23A6911D0();
              *(_WORD *)(v94 + 42) = 2048;
              v101 = *(os_unfair_lock_s **)(v64 + v68);
              swift_retain();
              os_unfair_lock_lock(v101 + 4);
              swift_release();
              v102 = *(void **)(v64 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
              v103 = *(os_unfair_lock_s **)(v64 + v68);
              swift_retain();
              v8 = (_QWORD *)&unk_2569AD000;
              os_unfair_lock_unlock(v103 + 4);
              swift_release();
              *(v1 - 5) = v102;
              sub_23A6911D0();

              _os_log_impl(&dword_23A5B0000, v230, v91, "%s Current pitch %f and current pitch command %f is out of bounds %f,%f", (uint8_t *)v94, 0x34u);
              swift_arrayDestroy();
              MEMORY[0x23B853BD0](v231, -1, -1);
              MEMORY[0x23B853BD0](v94, -1, -1);

              ((void (*)(uint64_t, uint64_t))log[1].isa)(v238, v234);
            }
            else
            {

              ((void (*)(uint64_t, uint64_t))log[1].isa)(v238, v93);
            }
            v3 = *(_QWORD *)v248;
            v2 = v251;
            goto LABEL_53;
          }
        }
        v123 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_lock(v123 + 4);
        swift_release();
        v124 = *(double *)(v64 + v74);
        v125 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_unlock(v125 + 4);
        swift_release();
        v126 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_lock(v126 + 4);
        swift_release();
        v127 = *(double *)(v64 + v84);
        v128 = *(os_unfair_lock_s **)(v64 + v68);
        swift_retain();
        os_unfair_lock_unlock(v128 + 4);
        swift_release();
        if (v124 > v66)
          v129 = v124;
        else
          v129 = v66;
        if (v127 < v129)
          v129 = v127;
        v130 = *(_QWORD *)(v64 + OBJC_IVAR____TtC11DockKitCore9Component_id);
        v131 = -v129;
        v132 = sub_23A5C5ABC(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v134 = v132[2];
        v133 = v132[3];
        if (v134 >= v133 >> 1)
          v132 = sub_23A5C5ABC((_QWORD *)(v133 > 1), v134 + 1, 1, v132);
        v3 = *(_QWORD *)v248;
        v2 = v251;
        v5 = v245;
        v132[2] = v134 + 1;
        v135 = (double *)&v132[3 * v134];
        v135[4] = 1.0;
        v135[5] = v131;
        v135[6] = 0.0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v269 = sub_23A5C635C(0, v269[2] + 1, 1, v269);
        v137 = v269[2];
        v136 = v269[3];
        if (v137 >= v136 >> 1)
          v269 = sub_23A5C635C((_QWORD *)(v136 > 1), v137 + 1, 1, v269);
        v138 = *(_QWORD *)(v0 + 192);
        v139 = *(_BYTE *)(v0 + 308);
        v269[2] = v137 + 1;
        v140 = &v269[4 * v137];
        v140[4] = v132;
        v140[5] = v138;
        v140[6] = v130;
        *((_BYTE *)v140 + 56) = v139;
        *(_WORD *)((char *)v140 + 57) = 257;

        v8 = (_QWORD *)&unk_2569AD000;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
LABEL_54:
  v141 = (char *)*v1;
  v142 = *(os_unfair_lock_s **)(v2 + v3);
  swift_retain();
  os_unfair_lock_lock(v142 + 4);
  swift_release();
  v262 = OBJC_IVAR____TtC11DockKitCore11Orientation__roll;
  v143 = *(_QWORD *)&v141[OBJC_IVAR____TtC11DockKitCore11Orientation__roll];
  v144 = *(os_unfair_lock_s **)(v2 + v3);
  swift_retain();
  os_unfair_lock_unlock(v144 + 4);
  swift_release();
  if ((~v143 & 0x7FF0000000000000) != 0)
  {
    v145 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v145 + 16))
    {
      swift_bridgeObjectRetain();
      v146 = sub_23A5C6588(1819045746, 0xE400000000000000);
      if ((v147 & 1) != 0)
      {
        v258 = v141;
        v148 = *(id *)(*(_QWORD *)(v145 + 56) + 8 * v146);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v149 = swift_dynamicCastClass();
        if (v149)
        {
          v150 = v149;
          v151 = *(os_unfair_lock_s **)(v2 + v3);
          swift_retain();
          os_unfair_lock_lock(v151 + 4);
          swift_release();
          v152 = *(double *)&v258[v262];
          *(_QWORD *)v249 = v3;
          v252 = v2;
          v153 = *(os_unfair_lock_s **)(v2 + v3);
          swift_retain();
          os_unfair_lock_unlock(v153 + 4);
          swift_release();
          v154 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
          v155 = *(os_unfair_lock_s **)(v150 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
          swift_retain();
          os_unfair_lock_lock(v155 + 4);
          swift_release();
          v156 = OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition;
          v157 = *(double *)(v150 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition);
          v158 = *(os_unfair_lock_s **)(v150 + v154);
          swift_retain();
          os_unfair_lock_unlock(v158 + 4);
          swift_release();
          v159 = *(os_unfair_lock_s **)(v150 + v154);
          swift_retain();
          os_unfair_lock_lock(v159 + 4);
          swift_release();
          v255 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition;
          v160 = *(double *)(v150 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
          v161 = *(os_unfair_lock_s **)(v150 + v154);
          swift_retain();
          os_unfair_lock_unlock(v161 + 4);
          swift_release();
          if (v157 < v160)
          {
            v162 = *(os_unfair_lock_s **)(v150 + v154);
            swift_retain();
            os_unfair_lock_lock(v162 + 4);
            swift_release();
            v163 = *(double *)(v150 + v156);
            v164 = *(os_unfair_lock_s **)(v150 + v154);
            swift_retain();
            os_unfair_lock_unlock(v164 + 4);
            swift_release();
            if (v152 < v163)
              goto LABEL_62;
          }
          v165 = *(os_unfair_lock_s **)(v150 + v154);
          swift_retain();
          os_unfair_lock_lock(v165 + 4);
          swift_release();
          v166 = *(double *)(v150 + v156);
          v167 = *(os_unfair_lock_s **)(v150 + v154);
          swift_retain();
          os_unfair_lock_unlock(v167 + 4);
          swift_release();
          v168 = *(os_unfair_lock_s **)(v150 + v154);
          swift_retain();
          os_unfair_lock_lock(v168 + 4);
          swift_release();
          v169 = OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition;
          v170 = *(double *)(v150 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
          v171 = *(os_unfair_lock_s **)(v150 + v154);
          swift_retain();
          os_unfair_lock_unlock(v171 + 4);
          swift_release();
          if (v170 >= v166)
            goto LABEL_66;
          v172 = *(os_unfair_lock_s **)(v150 + v154);
          swift_retain();
          os_unfair_lock_lock(v172 + 4);
          swift_release();
          v173 = *(double *)(v150 + v156);
          v174 = *(os_unfair_lock_s **)(v150 + v154);
          swift_retain();
          os_unfair_lock_unlock(v174 + 4);
          swift_release();
          if (v173 >= v152)
          {
LABEL_66:
            v190 = *(os_unfair_lock_s **)(v150 + v154);
            swift_retain();
            os_unfair_lock_lock(v190 + 4);
            swift_release();
            v191 = *(double *)(v150 + v255);
            v192 = *(os_unfair_lock_s **)(v150 + v154);
            swift_retain();
            os_unfair_lock_unlock(v192 + 4);
            swift_release();
            v193 = *(os_unfair_lock_s **)(v150 + v154);
            swift_retain();
            os_unfair_lock_lock(v193 + 4);
            swift_release();
            v194 = *(double *)(v150 + v169);
            v195 = *(os_unfair_lock_s **)(v150 + v154);
            swift_retain();
            os_unfair_lock_unlock(v195 + 4);
            swift_release();
            if (v191 > v152)
              v196 = v191;
            else
              v196 = v152;
            if (v194 >= v196)
              v197 = v196;
            else
              v197 = v194;
            v198 = *(_QWORD *)(v150 + OBJC_IVAR____TtC11DockKitCore9Component_id);
            v199 = sub_23A5C5ABC(0, 1, 1, MEMORY[0x24BEE4AF8]);
            v201 = v199[2];
            v200 = v199[3];
            if (v201 >= v200 >> 1)
              v199 = sub_23A5C5ABC((_QWORD *)(v200 > 1), v201 + 1, 1, v199);
            v2 = v252;
            v199[2] = v201 + 1;
            v202 = (double *)&v199[3 * v201];
            v202[4] = 1.0;
            v202[5] = v197;
            v202[6] = 0.0;
            v3 = *(_QWORD *)v249;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v269 = sub_23A5C635C(0, v269[2] + 1, 1, v269);
            v204 = v269[2];
            v203 = v269[3];
            if (v204 >= v203 >> 1)
              v269 = sub_23A5C635C((_QWORD *)(v203 > 1), v204 + 1, 1, v269);
            v205 = *(_QWORD *)(v0 + 192);
            v206 = *(_BYTE *)(v0 + 308);
            v269[2] = v204 + 1;
            v207 = &v269[4 * v204];
            v207[4] = v199;
            v207[5] = v205;
            v207[6] = v198;
            *((_BYTE *)v207 + 56) = v206;
            *(_WORD *)((char *)v207 + 57) = 257;

          }
          else
          {
LABEL_62:
            (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger, *(_QWORD *)(v0 + 224));
            v175 = v148;
            v176 = sub_23A690CFC();
            typeb = sub_23A691044();
            v177 = os_log_type_enabled(v176, typeb);
            v178 = *(_QWORD *)(v0 + 248);
            v179 = *(_QWORD *)(v0 + 224);
            v246 = *(_QWORD *)(v0 + 232);
            if (v177)
            {
              v239 = *(_QWORD *)(v0 + 248);
              v180 = swift_slowAlloc();
              v235 = swift_slowAlloc();
              v270[0] = v235;
              *(_DWORD *)v180 = 136316162;
              *(v1 - 15) = (id)sub_23A5EEB40(0xD000000000000048, 0x800000023A69EC90, v270);
              sub_23A6911D0();
              *(_WORD *)(v180 + 12) = 2048;
              *(_QWORD *)v232 = v179;
              v181 = *(os_unfair_lock_s **)(v150 + v154);
              swift_retain();
              os_unfair_lock_lock(v181 + 4);
              swift_release();
              v182 = *(void **)(v150 + v156);
              v183 = *(os_unfair_lock_s **)(v150 + v154);
              swift_retain();
              os_unfair_lock_unlock(v183 + 4);
              swift_release();
              *(v1 - 14) = v182;
              sub_23A6911D0();
              *(_WORD *)(v180 + 22) = 2048;
              *((double *)v1 - 13) = v152;
              sub_23A6911D0();
              *(_WORD *)(v180 + 32) = 2048;
              v184 = *(os_unfair_lock_s **)(v150 + v154);
              swift_retain();
              os_unfair_lock_lock(v184 + 4);
              swift_release();
              v185 = *(void **)(v150 + v255);
              v186 = *(os_unfair_lock_s **)(v150 + v154);
              swift_retain();
              os_unfair_lock_unlock(v186 + 4);
              swift_release();
              *(v1 - 12) = v185;
              sub_23A6911D0();
              *(_WORD *)(v180 + 42) = 2048;
              v187 = *(os_unfair_lock_s **)(v150 + v154);
              swift_retain();
              os_unfair_lock_lock(v187 + 4);
              swift_release();
              v188 = *(void **)(v150 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
              v189 = *(os_unfair_lock_s **)(v150 + v154);
              swift_retain();
              os_unfair_lock_unlock(v189 + 4);
              swift_release();
              *(v1 - 11) = v188;
              sub_23A6911D0();

              _os_log_impl(&dword_23A5B0000, v176, typeb, "%s Current roll %f and current roll command %f is out of bounds %f,%f", (uint8_t *)v180, 0x34u);
              swift_arrayDestroy();
              MEMORY[0x23B853BD0](v235, -1, -1);
              MEMORY[0x23B853BD0](v180, -1, -1);

              (*(void (**)(uint64_t, os_log_type_t *))(v246 + 8))(v239, *(os_log_type_t **)v232);
            }
            else
            {

              (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v178, v179);
            }
            v3 = *(_QWORD *)v249;
            v2 = v252;
          }
          v8 = &unk_2569AD000;
        }
        else
        {

        }
        v141 = v258;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  *(_QWORD *)(v0 + 272) = v269;
  v208 = *(void **)(v0 + 184);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216) + v8[271], *(_QWORD *)(v0 + 224));
  v209 = v208;
  v210 = sub_23A690CFC();
  v211 = sub_23A691044();
  if (os_log_type_enabled(v210, v211))
  {
    v212 = *(_QWORD *)(v0 + 192);
    v253 = *(unsigned __int8 *)(v0 + 308);
    typec = *(void **)(v0 + 184);
    v213 = swift_slowAlloc();
    *(_DWORD *)v213 = 134219008;
    v259 = v141;
    v214 = v5;
    v215 = v2;
    v216 = *(os_unfair_lock_s **)(v2 + v3);
    swift_retain();
    os_unfair_lock_lock(v216 + 4);
    swift_release();
    v217 = *(_QWORD *)(v215 + v214);
    v218 = *(os_unfair_lock_s **)(v215 + v3);
    swift_retain();
    os_unfair_lock_unlock(v218 + 4);
    swift_release();
    *(_QWORD *)(v0 + 32) = v217;
    sub_23A6911D0();
    *(_WORD *)(v213 + 12) = 2048;
    v219 = *(os_unfair_lock_s **)(v215 + v3);
    swift_retain();
    os_unfair_lock_lock(v219 + 4);
    swift_release();
    v220 = *(_QWORD *)&v266[v264];
    v221 = *(os_unfair_lock_s **)(v215 + v3);
    swift_retain();
    os_unfair_lock_unlock(v221 + 4);
    swift_release();
    *(_QWORD *)(v0 + 40) = v220;
    sub_23A6911D0();
    *(_WORD *)(v213 + 22) = 2048;
    v222 = *(os_unfair_lock_s **)(v215 + v3);
    swift_retain();
    os_unfair_lock_lock(v222 + 4);
    swift_release();
    v223 = *(_QWORD *)&v259[v262];
    v224 = *(os_unfair_lock_s **)(v215 + v3);
    swift_retain();
    os_unfair_lock_unlock(v224 + 4);
    swift_release();
    *(_QWORD *)(v0 + 48) = v223;
    sub_23A6911D0();

    *(_WORD *)(v213 + 32) = 2048;
    *(_QWORD *)(v0 + 56) = v212;
    sub_23A6911D0();
    *(_WORD *)(v213 + 42) = 1024;
    *(_DWORD *)(v0 + 304) = v253;
    sub_23A6911D0();
    _os_log_impl(&dword_23A5B0000, v210, v211, "setOrientation: yaw %f pitch %f roll %f duration %f relative %{BOOL}d", (uint8_t *)v213, 0x30u);
    MEMORY[0x23B853BD0](v213, -1, -1);
  }
  else
  {

  }
  v225 = *(_BYTE *)(v0 + 309);
  v226 = *(_QWORD *)(v0 + 216);
  v267 = *(_OWORD *)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  *(_BYTE *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 17) = v225;
  *(_QWORD *)(v0 + 24) = v269;
  v227 = swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v227;
  *(_QWORD *)(v227 + 16) = v226;
  *(_OWORD *)(v227 + 24) = v267;
  v228 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v228;
  *v228 = v0;
  v228[1] = sub_23A638350;
  return ActuationController.sendTrajectoryCommand(trajectoryCommand:progressCallback:)(v0 + 16, (uint64_t)sub_23A63EA1C, v227);
}

uint64_t sub_23A638350()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 296) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A638410()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ActuationController.setRotationalVelocity(yaw:pitch:roll:)(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = v3;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  *(double *)(v4 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_23A6384A4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  double v17;
  os_unfair_lock_s *v18;
  os_unfair_lock_s *v19;
  double v20;
  os_unfair_lock_s *v21;
  double v22;
  os_unfair_lock_s *v23;
  double v24;
  os_unfair_lock_s *v25;
  os_unfair_lock_s *v26;
  double v27;
  os_unfair_lock_s *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  uint64_t v40;
  double v41;
  os_unfair_lock_s *v42;
  os_unfair_lock_s *v43;
  double v44;
  os_unfair_lock_s *v45;
  double v46;
  os_unfair_lock_s *v47;
  double v48;
  os_unfair_lock_s *v49;
  os_unfair_lock_s *v50;
  double v51;
  os_unfair_lock_s *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  os_unfair_lock_s *v63;
  uint64_t v64;
  double v65;
  os_unfair_lock_s *v66;
  os_unfair_lock_s *v67;
  double v68;
  os_unfair_lock_s *v69;
  double v70;
  os_unfair_lock_s *v71;
  double v72;
  os_unfair_lock_s *v73;
  os_unfair_lock_s *v74;
  double v75;
  os_unfair_lock_s *v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;

  v1 = (_QWORD *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  v2 = (_QWORD *)(v0 + 16);
  if (*(double *)(v0 + 24) != INFINITY)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v7 + 16))
    {
      swift_bridgeObjectRetain();
      v8 = sub_23A5C6588(7823737, 0xE300000000000000);
      if ((v9 & 1) != 0)
      {
        v10 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v8);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v11 = swift_dynamicCastClass();
        if (v11)
        {
          v12 = v11;
          v10 = v10;
          MEMORY[0x23B852D78]();
          if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23A690F3C();
          v13 = *(double *)(v0 + 24);
          sub_23A690F48();
          sub_23A690F30();
          v14 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
          v15 = *(os_unfair_lock_s **)(v12 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
          swift_retain();
          os_unfair_lock_lock(v15 + 4);
          swift_release();
          v16 = OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition;
          v17 = *(double *)(v12 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition);
          v18 = *(os_unfair_lock_s **)(v12 + v14);
          swift_retain();
          os_unfair_lock_unlock(v18 + 4);
          swift_release();
          v19 = *(os_unfair_lock_s **)(v12 + v14);
          swift_retain();
          os_unfair_lock_lock(v19 + 4);
          swift_release();
          v20 = *(double *)(v12 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
          v21 = *(os_unfair_lock_s **)(v12 + v14);
          swift_retain();
          os_unfair_lock_unlock(v21 + 4);
          swift_release();
          if (v17 < v20 && v13 < 0.0)
            goto LABEL_14;
          v22 = *(double *)(v0 + 24);
          v23 = *(os_unfair_lock_s **)(v12 + v14);
          swift_retain();
          os_unfair_lock_lock(v23 + 4);
          swift_release();
          v24 = *(double *)(v12 + v16);
          v25 = *(os_unfair_lock_s **)(v12 + v14);
          swift_retain();
          os_unfair_lock_unlock(v25 + 4);
          swift_release();
          v26 = *(os_unfair_lock_s **)(v12 + v14);
          swift_retain();
          os_unfair_lock_lock(v26 + 4);
          swift_release();
          v27 = *(double *)(v12 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
          v28 = *(os_unfair_lock_s **)(v12 + v14);
          swift_retain();
          os_unfair_lock_unlock(v28 + 4);
          swift_release();
          if (v27 >= v24 || v22 <= 0.0)
          {
            v1 = sub_23A5C5EFC(0, 1, 1, MEMORY[0x24BEE4AF8]);
            v80 = v1[2];
            v79 = v1[3];
            if (v80 >= v79 >> 1)
              v1 = sub_23A5C5EFC((_QWORD *)(v79 > 1), v80 + 1, 1, v1);
            v81 = *(_QWORD *)(v0 + 24);
            v1[2] = v80 + 1;
            v1[v80 + 4] = v81;
          }
          else
          {
LABEL_14:
            v1 = sub_23A5C5EFC(0, 1, 1, MEMORY[0x24BEE4AF8]);
            v30 = v1[2];
            v29 = v1[3];
            if (v30 >= v29 >> 1)
              v1 = sub_23A5C5EFC((_QWORD *)(v29 > 1), v30 + 1, 1, v1);
            v1[2] = v30 + 1;
            v1[v30 + 4] = 0;
          }
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  if (*(double *)(v0 + 32) != INFINITY)
  {
    v31 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v31 + 16))
    {
      swift_bridgeObjectRetain();
      v32 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
      if ((v33 & 1) != 0)
      {
        v34 = *(id *)(*(_QWORD *)(v31 + 56) + 8 * v32);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v35 = swift_dynamicCastClass();
        if (v35)
        {
          v36 = v35;
          v34 = v34;
          MEMORY[0x23B852D78]();
          if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23A690F3C();
          v37 = *(double *)(v0 + 32);
          sub_23A690F48();
          sub_23A690F30();
          v38 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
          v39 = *(os_unfair_lock_s **)(v36 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
          swift_retain();
          os_unfair_lock_lock(v39 + 4);
          swift_release();
          v40 = OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition;
          v41 = *(double *)(v36 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition);
          v42 = *(os_unfair_lock_s **)(v36 + v38);
          swift_retain();
          os_unfair_lock_unlock(v42 + 4);
          swift_release();
          v43 = *(os_unfair_lock_s **)(v36 + v38);
          swift_retain();
          os_unfair_lock_lock(v43 + 4);
          swift_release();
          v44 = *(double *)(v36 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
          v45 = *(os_unfair_lock_s **)(v36 + v38);
          swift_retain();
          os_unfair_lock_unlock(v45 + 4);
          swift_release();
          if (v41 < v44 && v37 < 0.0)
            goto LABEL_26;
          v46 = *(double *)(v0 + 32);
          v47 = *(os_unfair_lock_s **)(v36 + v38);
          swift_retain();
          os_unfair_lock_lock(v47 + 4);
          swift_release();
          v48 = *(double *)(v36 + v40);
          v49 = *(os_unfair_lock_s **)(v36 + v38);
          swift_retain();
          os_unfair_lock_unlock(v49 + 4);
          swift_release();
          v50 = *(os_unfair_lock_s **)(v36 + v38);
          swift_retain();
          os_unfair_lock_lock(v50 + 4);
          swift_release();
          v51 = *(double *)(v36 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
          v52 = *(os_unfair_lock_s **)(v36 + v38);
          swift_retain();
          os_unfair_lock_unlock(v52 + 4);
          swift_release();
          if (v51 >= v48 || v46 <= 0.0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v1 = sub_23A5C5EFC(0, v1[2] + 1, 1, v1);
            v83 = v1[2];
            v82 = v1[3];
            if (v83 >= v82 >> 1)
              v1 = sub_23A5C5EFC((_QWORD *)(v82 > 1), v83 + 1, 1, v1);
            v84 = *(_QWORD *)(v0 + 32);
            v1[2] = v83 + 1;
            v1[v83 + 4] = v84;
          }
          else
          {
LABEL_26:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v1 = sub_23A5C5EFC(0, v1[2] + 1, 1, v1);
            v54 = v1[2];
            v53 = v1[3];
            if (v54 >= v53 >> 1)
              v1 = sub_23A5C5EFC((_QWORD *)(v53 > 1), v54 + 1, 1, v1);
            v1[2] = v54 + 1;
            v1[v54 + 4] = 0;
          }
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  if (*(double *)(v0 + 40) != INFINITY)
  {
    v55 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v55 + 16))
    {
      swift_bridgeObjectRetain();
      v56 = sub_23A5C6588(1819045746, 0xE400000000000000);
      if ((v57 & 1) != 0)
      {
        v58 = *(id *)(*(_QWORD *)(v55 + 56) + 8 * v56);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v59 = swift_dynamicCastClass();
        if (v59)
        {
          v60 = v59;
          v58 = v58;
          MEMORY[0x23B852D78]();
          if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23A690F3C();
          v61 = *(double *)(v0 + 40);
          sub_23A690F48();
          sub_23A690F30();
          v62 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
          v63 = *(os_unfair_lock_s **)(v60 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
          swift_retain();
          os_unfair_lock_lock(v63 + 4);
          swift_release();
          v64 = OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition;
          v65 = *(double *)(v60 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition);
          v66 = *(os_unfair_lock_s **)(v60 + v62);
          swift_retain();
          os_unfair_lock_unlock(v66 + 4);
          swift_release();
          v67 = *(os_unfair_lock_s **)(v60 + v62);
          swift_retain();
          os_unfair_lock_lock(v67 + 4);
          swift_release();
          v68 = *(double *)(v60 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
          v69 = *(os_unfair_lock_s **)(v60 + v62);
          swift_retain();
          os_unfair_lock_unlock(v69 + 4);
          swift_release();
          if (v65 < v68 && v61 < 0.0)
            goto LABEL_40;
          v70 = *(double *)(v0 + 40);
          v71 = *(os_unfair_lock_s **)(v60 + v62);
          swift_retain();
          os_unfair_lock_lock(v71 + 4);
          swift_release();
          v72 = *(double *)(v60 + v64);
          v73 = *(os_unfair_lock_s **)(v60 + v62);
          swift_retain();
          os_unfair_lock_unlock(v73 + 4);
          swift_release();
          v74 = *(os_unfair_lock_s **)(v60 + v62);
          swift_retain();
          os_unfair_lock_lock(v74 + 4);
          swift_release();
          v75 = *(double *)(v60 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
          v76 = *(os_unfair_lock_s **)(v60 + v62);
          swift_retain();
          os_unfair_lock_unlock(v76 + 4);
          swift_release();
          if (v75 >= v72 || v70 <= 0.0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v1 = sub_23A5C5EFC(0, v1[2] + 1, 1, v1);
            v86 = v1[2];
            v85 = v1[3];
            if (v86 >= v85 >> 1)
              v1 = sub_23A5C5EFC((_QWORD *)(v85 > 1), v86 + 1, 1, v1);
            v87 = *(_QWORD *)(v0 + 40);
            v1[2] = v86 + 1;
            v1[v86 + 4] = v87;
          }
          else
          {
LABEL_40:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v1 = sub_23A5C5EFC(0, v1[2] + 1, 1, v1);
            v78 = v1[2];
            v77 = v1[3];
            if (v78 >= v77 >> 1)
              v1 = sub_23A5C5EFC((_QWORD *)(v77 > 1), v78 + 1, 1, v1);
            v1[2] = v78 + 1;
            v1[v78 + 4] = 0;
          }
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  v3 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_23A638E84;
  v5 = *(_QWORD *)(v0 + 48);
  v4[11] = v1;
  v4[12] = v5;
  v4[10] = v3;
  return swift_task_switch();
}

uint64_t sub_23A638E84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23A638EF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A638F04()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

os_unfair_lock_s *ActuationController.getActuatorLimits()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  os_unfair_lock_s *v16;
  double v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  os_unfair_lock_s *v33;
  double v34;
  os_unfair_lock_s *v35;
  unint64_t v36;
  unint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  uint64_t v46;
  os_unfair_lock_s *v47;
  os_unfair_lock_s *v48;
  uint64_t v49;
  os_unfair_lock_s *v50;
  os_unfair_lock_s *v51;
  double v52;
  os_unfair_lock_s *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  os_unfair_lock_s *v57;
  unint64_t v58;
  unint64_t v59;
  os_unfair_lock_s *v60;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11DockKitCore6System_components;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore6System_components);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_8;
  swift_bridgeObjectRetain();
  v4 = sub_23A5C6588(7823737, 0xE300000000000000);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    v18 = (os_unfair_lock_s *)MEMORY[0x24BEE4AF8];
    goto LABEL_9;
  }
  v6 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRelease();
  type metadata accessor for Actuator();
  v7 = swift_dynamicCastClass();
  if (!v7)
  {

    goto LABEL_8;
  }
  v8 = v7;
  v9 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  v10 = *(os_unfair_lock_s **)(v7 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v10 + 4);
  swift_release();
  v11 = *(_QWORD *)(v8 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
  v12 = *(os_unfair_lock_s **)(v8 + v9);
  swift_retain();
  os_unfair_lock_unlock(v12 + 4);
  swift_release();
  v13 = *(os_unfair_lock_s **)(v8 + v9);
  swift_retain();
  os_unfair_lock_lock(v13 + 4);
  swift_release();
  v14 = *(_QWORD *)(v8 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
  v15 = *(os_unfair_lock_s **)(v8 + v9);
  swift_retain();
  os_unfair_lock_unlock(v15 + 4);
  swift_release();
  v16 = *(os_unfair_lock_s **)(v8 + v9);
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  swift_release();
  v17 = *(double *)(v8 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed);
  v18 = *(os_unfair_lock_s **)(v8 + v9);
  swift_retain();
  os_unfair_lock_unlock(v18 + 4);
  swift_release();
  if (v17 >= 0.0)
  {
    v18 = (os_unfair_lock_s *)sub_23A5C6468(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v56 = *(_QWORD *)&v18[4]._os_unfair_lock_opaque;
    v55 = *(_QWORD *)&v18[6]._os_unfair_lock_opaque;
    if (v56 >= v55 >> 1)
      v18 = (os_unfair_lock_s *)sub_23A5C6468((_QWORD *)(v55 > 1), v56 + 1, 1, v18);
    *(_QWORD *)&v18[4]._os_unfair_lock_opaque = v56 + 1;
    v57 = &v18[10 * v56];
    *(_QWORD *)&v57[8]._os_unfair_lock_opaque = 7823737;
    *(_QWORD *)&v57[10]._os_unfair_lock_opaque = 0xE300000000000000;
    *(_QWORD *)&v57[12]._os_unfair_lock_opaque = v11;
    *(_QWORD *)&v57[14]._os_unfair_lock_opaque = v14;
    *(double *)&v57[16]._os_unfair_lock_opaque = v17;

LABEL_9:
    v20 = *(_QWORD *)(v1 + v2);
    if (*(_QWORD *)(v20 + 16))
    {
      swift_bridgeObjectRetain();
      v21 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
      if ((v22 & 1) != 0)
      {
        v23 = *(id *)(*(_QWORD *)(v20 + 56) + 8 * v21);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v24 = swift_dynamicCastClass();
        if (v24)
        {
          v25 = v24;
          v26 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
          v27 = *(os_unfair_lock_s **)(v24 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
          swift_retain();
          os_unfair_lock_lock(v27 + 4);
          swift_release();
          v28 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
          v29 = *(os_unfair_lock_s **)(v25 + v26);
          swift_retain();
          os_unfair_lock_unlock(v29 + 4);
          swift_release();
          v30 = *(os_unfair_lock_s **)(v25 + v26);
          swift_retain();
          os_unfair_lock_lock(v30 + 4);
          swift_release();
          v31 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
          v32 = *(os_unfair_lock_s **)(v25 + v26);
          swift_retain();
          os_unfair_lock_unlock(v32 + 4);
          swift_release();
          v33 = *(os_unfair_lock_s **)(v25 + v26);
          swift_retain();
          os_unfair_lock_lock(v33 + 4);
          swift_release();
          v34 = *(double *)(v25 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed);
          v35 = *(os_unfair_lock_s **)(v25 + v26);
          swift_retain();
          os_unfair_lock_unlock(v35 + 4);
          swift_release();
          if (v34 < 0.0)
          {
LABEL_24:
            sub_23A5C9938();
            swift_allocError();
            *(_QWORD *)v54 = 0xD00000000000001CLL;
            *(_QWORD *)(v54 + 8) = 0x800000023A69C080;
            *(_BYTE *)(v54 + 16) = 22;
            swift_willThrow();

            swift_bridgeObjectRelease();
            return v18;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v18 = (os_unfair_lock_s *)sub_23A5C6468(0, *(_QWORD *)&v18[4]._os_unfair_lock_opaque + 1, 1, v18);
          v37 = *(_QWORD *)&v18[4]._os_unfair_lock_opaque;
          v36 = *(_QWORD *)&v18[6]._os_unfair_lock_opaque;
          if (v37 >= v36 >> 1)
            v18 = (os_unfair_lock_s *)sub_23A5C6468((_QWORD *)(v36 > 1), v37 + 1, 1, v18);
          *(_QWORD *)&v18[4]._os_unfair_lock_opaque = v37 + 1;
          v38 = &v18[10 * v37];
          *(_QWORD *)&v38[8]._os_unfair_lock_opaque = 0x6863746970;
          *(_QWORD *)&v38[10]._os_unfair_lock_opaque = 0xE500000000000000;
          *(_QWORD *)&v38[12]._os_unfair_lock_opaque = v28;
          *(_QWORD *)&v38[14]._os_unfair_lock_opaque = v31;
          *(double *)&v38[16]._os_unfair_lock_opaque = v34;
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v39 = *(_QWORD *)(v1 + v2);
    if (!*(_QWORD *)(v39 + 16))
      return v18;
    swift_bridgeObjectRetain();
    v40 = sub_23A5C6588(1819045746, 0xE400000000000000);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return v18;
    }
    v23 = *(id *)(*(_QWORD *)(v39 + 56) + 8 * v40);
    swift_bridgeObjectRelease();
    type metadata accessor for Actuator();
    v42 = swift_dynamicCastClass();
    if (v42)
    {
      v43 = v42;
      v44 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
      v45 = *(os_unfair_lock_s **)(v42 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
      swift_retain();
      os_unfair_lock_lock(v45 + 4);
      swift_release();
      v46 = *(_QWORD *)(v43 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
      v47 = *(os_unfair_lock_s **)(v43 + v44);
      swift_retain();
      os_unfair_lock_unlock(v47 + 4);
      swift_release();
      v48 = *(os_unfair_lock_s **)(v43 + v44);
      swift_retain();
      os_unfair_lock_lock(v48 + 4);
      swift_release();
      v49 = *(_QWORD *)(v43 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
      v50 = *(os_unfair_lock_s **)(v43 + v44);
      swift_retain();
      os_unfair_lock_unlock(v50 + 4);
      swift_release();
      v51 = *(os_unfair_lock_s **)(v43 + v44);
      swift_retain();
      os_unfair_lock_lock(v51 + 4);
      swift_release();
      v52 = *(double *)(v43 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed);
      v53 = *(os_unfair_lock_s **)(v43 + v44);
      swift_retain();
      os_unfair_lock_unlock(v53 + 4);
      swift_release();
      if (v52 < 0.0)
        goto LABEL_24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = (os_unfair_lock_s *)sub_23A5C6468(0, *(_QWORD *)&v18[4]._os_unfair_lock_opaque + 1, 1, v18);
      v59 = *(_QWORD *)&v18[4]._os_unfair_lock_opaque;
      v58 = *(_QWORD *)&v18[6]._os_unfair_lock_opaque;
      if (v59 >= v58 >> 1)
        v18 = (os_unfair_lock_s *)sub_23A5C6468((_QWORD *)(v58 > 1), v59 + 1, 1, v18);
      *(_QWORD *)&v18[4]._os_unfair_lock_opaque = v59 + 1;
      v60 = &v18[10 * v59];
      *(_QWORD *)&v60[8]._os_unfair_lock_opaque = 1819045746;
      *(_QWORD *)&v60[10]._os_unfair_lock_opaque = 0xE400000000000000;
      *(_QWORD *)&v60[12]._os_unfair_lock_opaque = v46;
      *(_QWORD *)&v60[14]._os_unfair_lock_opaque = v49;
      *(double *)&v60[16]._os_unfair_lock_opaque = v52;
    }

    return v18;
  }
  sub_23A5C9938();
  swift_allocError();
  *(_QWORD *)v19 = 0xD00000000000001CLL;
  *(_QWORD *)(v19 + 8) = 0x800000023A69C080;
  *(_BYTE *)(v19 + 16) = 22;
  swift_willThrow();

  return v18;
}

uint64_t ActuationController.setRotationalVelocity(yaw:pitch:roll:duration:progressCallback:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 72) = a2;
  *(_QWORD *)(v7 + 80) = v6;
  *(_QWORD *)(v7 + 64) = a1;
  *(double *)(v7 + 48) = a5;
  *(double *)(v7 + 56) = a6;
  *(double *)(v7 + 32) = a3;
  *(double *)(v7 + 40) = a4;
  return swift_task_switch();
}

uint64_t sub_23A63962C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  unint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;

  if (*(double *)(v0 + 32) == INFINITY)
    goto LABEL_2;
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC11DockKitCore6System_components);
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_2;
  swift_bridgeObjectRetain();
  v8 = sub_23A5C6588(7823737, 0xE300000000000000);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_2:
    v1 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_3;
  }
  v10 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  swift_bridgeObjectRelease();
  type metadata accessor for Actuator();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {

    goto LABEL_2;
  }
  sub_23A63C7F0(*(_QWORD *)(v11 + OBJC_IVAR____TtC11DockKitCore9Component_id), (uint64_t)&v61, *(double *)(v0 + 32), *(double *)(v0 + 56));
  v12 = v61;
  v13 = v62;
  v14 = v63;
  v15 = v64;
  v16 = v65;
  v17 = v66;
  v1 = sub_23A5C635C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v18 = v1[2];
  v19 = v1[3];
  v20 = v18 + 1;
  if (v18 >= v19 >> 1)
  {
    v52 = v1;
    v53 = v1[2];
    v54 = sub_23A5C635C((_QWORD *)(v19 > 1), v18 + 1, 1, v52);
    v18 = v53;
    v1 = v54;
  }
  v1[2] = v20;
  v21 = &v1[4 * v18];
  v21[4] = v12;
  v21[5] = v13;
  v21[6] = v14;
  *((_BYTE *)v21 + 56) = v15;
  *((_BYTE *)v21 + 57) = v16;
  *((_BYTE *)v21 + 58) = v17;

LABEL_3:
  if (*(double *)(v0 + 40) != INFINITY)
  {
    v22 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      v23 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
      if ((v24 & 1) != 0)
      {
        v25 = *(id *)(*(_QWORD *)(v22 + 56) + 8 * v23);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v26 = swift_dynamicCastClass();
        if (v26)
        {
          sub_23A63C7F0(*(_QWORD *)(v26 + OBJC_IVAR____TtC11DockKitCore9Component_id), (uint64_t)&v61, *(double *)(v0 + 40), *(double *)(v0 + 56));
          v27 = v61;
          v28 = v62;
          v29 = v63;
          v30 = v64;
          v31 = v65;
          v32 = v66;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v1 = sub_23A5C635C(0, v1[2] + 1, 1, v1);
          v33 = v1[2];
          v34 = v1[3];
          v35 = v33 + 1;
          if (v33 >= v34 >> 1)
          {
            v55 = v1;
            v56 = v1[2];
            v57 = sub_23A5C635C((_QWORD *)(v34 > 1), v33 + 1, 1, v55);
            v33 = v56;
            v1 = v57;
          }
          v1[2] = v35;
          v36 = &v1[4 * v33];
          v36[4] = v27;
          v36[5] = v28;
          v36[6] = v29;
          *((_BYTE *)v36 + 56) = v30;
          *((_BYTE *)v36 + 57) = v31;
          *((_BYTE *)v36 + 58) = v32;
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  if (*(double *)(v0 + 48) != INFINITY)
  {
    v37 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v37 + 16))
    {
      swift_bridgeObjectRetain();
      v38 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
      if ((v39 & 1) != 0)
      {
        v40 = *(id *)(*(_QWORD *)(v37 + 56) + 8 * v38);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v41 = swift_dynamicCastClass();
        if (v41)
        {
          sub_23A63C7F0(*(_QWORD *)(v41 + OBJC_IVAR____TtC11DockKitCore9Component_id), (uint64_t)&v61, *(double *)(v0 + 48), *(double *)(v0 + 56));
          v42 = v61;
          v43 = v62;
          v44 = v63;
          v45 = v64;
          v46 = v65;
          v47 = v66;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v1 = sub_23A5C635C(0, v1[2] + 1, 1, v1);
          v48 = v1[2];
          v49 = v1[3];
          v50 = v48 + 1;
          if (v48 >= v49 >> 1)
          {
            v58 = v1;
            v59 = v1[2];
            v60 = sub_23A5C635C((_QWORD *)(v49 > 1), v48 + 1, 1, v58);
            v48 = v59;
            v1 = v60;
          }
          v1[2] = v50;
          v51 = &v1[4 * v48];
          v51[4] = v42;
          v51[5] = v43;
          v51[6] = v44;
          *((_BYTE *)v51 + 56) = v45;
          *((_BYTE *)v51 + 57) = v46;
          *((_BYTE *)v51 + 58) = v47;
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  *(_QWORD *)(v0 + 88) = v1;
  v2 = *(_QWORD *)(v0 + 80);
  *(_WORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v1;
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  v4 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_23A639AD0;
  return ActuationController.sendTrajectoryCommand(trajectoryCommand:progressCallback:)(v0 + 16, (uint64_t)sub_23A640434, v3);
}

uint64_t sub_23A639AD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 112) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A639B50()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static ActuatorFeedback.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t ActuatorFeedback.positions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ActuatorFeedback.velocities.getter()
{
  return swift_bridgeObjectRetain();
}

double ActuatorFeedback.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_timestamp);
}

id ActuatorFeedback.__allocating_init(velocities:positions:timestamp:)(uint64_t a1, uint64_t a2, double a3)
{
  objc_class *v3;
  char *v7;
  objc_super v9;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_velocities] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_positions] = a2;
  *(double *)&v7[OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_timestamp] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id ActuatorFeedback.init(velocities:positions:timestamp:)(uint64_t a1, uint64_t a2, double a3)
{
  char *v3;
  objc_class *ObjectType;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_velocities] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_positions] = a2;
  *(double *)&v3[OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_timestamp] = a3;
  v9.receiver = v3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

Swift::Void __swiftcall ActuatorFeedback.encode(with:)(NSCoder with)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = (void *)sub_23A690F00();
  v3 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_23A690F00();
  v5 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v4, v5);

  v6 = (void *)sub_23A690FC0();
  v7 = (id)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v6, v7);

}

id ActuatorFeedback.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_23A63EA38();

  return v4;
}

id ActuatorFeedback.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_23A63EA38();

  return v2;
}

id ActuatorFeedback.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ActuatorFeedback.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

BOOL ActuatorOccurrence.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t MotionModel.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t static ActuationController.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t ActuationController.motionModel.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11DockKitCore19ActuationController_motionModel);
}

uint64_t ActuationController.__allocating_init(accessory:id:motionModel:name:actuators:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t a6)
{
  objc_class *v6;
  id v13;
  uint64_t v14;

  v13 = objc_allocWithZone(v6);
  v14 = sub_23A63ECE8(a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t ActuationController.init(accessory:id:motionModel:name:actuators:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t a6)
{
  uint64_t v7;

  v7 = sub_23A63ECE8(a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease();

  return v7;
}

id ActuationController.__allocating_init(accessory:id:type:name:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;
  id v12;

  v11 = objc_allocWithZone(v5);
  v12 = sub_23A63F228((uint64_t)a1, a2, a3, a4, a5);

  return v12;
}

id ActuationController.init(accessory:id:type:name:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6;

  v6 = sub_23A63F228((uint64_t)a1, a2, a3, a4, a5);

  return v6;
}

uint64_t ActuationController.getActuatorFeedback(actuators:delegate:occurrence:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  return swift_task_switch();
}

uint64_t sub_23A63A29C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[13];
  v2 = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[14] = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[15] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A63A2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 128) = v5;
      *v5 = v0;
      v5[1] = sub_23A63A3D0;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A63A3D0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A63A424()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A63A460()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = MEMORY[0x23B853C6C](v0[13] + OBJC_IVAR____TtC11DockKitCore16SystemController_accessory);
  v0[17] = v1;
  if (!v1)
  {
    sub_23A5C9938();
    v2 = swift_allocError();
    *(_QWORD *)v3 = 0xD000000000000019;
    *(_QWORD *)(v3 + 8) = 0x800000023A69EC70;
    *(_BYTE *)(v3 + 16) = 7;
    swift_willThrow();
    v0[20] = v2;
    v0[21] = *(_QWORD *)(v0[13] + v0[14]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A63A530()
{
  _QWORD *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = (_BYTE *)v0[17];
  v3 = v0[12];
  v2 = v0[13];
  v5 = v0[10];
  v4 = v0[11];
  v0[2] = v0;
  v0[3] = sub_23A63A5AC;
  v6 = swift_continuation_init();
  sub_23A6019C0(v2, v5, v4, v3, v1, v6);
  return swift_continuation_await();
}

uint64_t sub_23A63A5AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 144) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A63A618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A63A668()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A63A6A4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(*(_QWORD *)(v0 + 104) + *(_QWORD *)(v0 + 112));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A63A6FC()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A63A740()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ActuationController.stopActuatorFeedback()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_23A63A794()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[10];
  v2 = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[11] = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[12] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A63A7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v5;
      *v5 = v0;
      v5[1] = sub_23A63A8C8;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A63A8C8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A63A91C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A63A958()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = MEMORY[0x23B853C6C](v0[10] + OBJC_IVAR____TtC11DockKitCore16SystemController_accessory);
  v0[14] = v1;
  if (!v1)
  {
    sub_23A5C9938();
    v2 = swift_allocError();
    *(_QWORD *)v3 = 0xD000000000000019;
    *(_QWORD *)(v3 + 8) = 0x800000023A69EC70;
    *(_BYTE *)(v3 + 16) = 7;
    swift_willThrow();
    v0[17] = v2;
    v0[18] = *(_QWORD *)(v0[10] + v0[11]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A63AA28()
{
  _QWORD *v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = (_BYTE *)v0[14];
  v2 = v0[10];
  v0[2] = v0;
  v0[3] = sub_23A63AA8C;
  v3 = (_BYTE *)swift_continuation_init();
  sub_23A60249C(v2, v1, v3);
  return swift_continuation_await();
}

uint64_t sub_23A63AA8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 120) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A63AAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A63AB48()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23A63AB84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + *(_QWORD *)(v0 + 88));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A63ABDC()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A63AC20()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ActuationController.actuatorFeedback(info:system:actuators:positions:velocities:timestamp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_23A63F514(a4, a5, a6);
}

uint64_t ActuationController.trajectoryProgressFeedback(info:system:progress:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_23A63FA98(a4);
}

uint64_t sub_23A63ADD4(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = v3;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  *(double *)(v4 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_23A63ADF4()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v1 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v0[2] = MEMORY[0x24BEE4AF8];
  v2 = v0 + 2;
  if (*((double *)v0 + 3) != INFINITY)
  {
    v7 = *(_QWORD *)(v0[6] + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v7 + 16))
    {
      swift_bridgeObjectRetain();
      v8 = sub_23A5C6588(7823737, 0xE300000000000000);
      if ((v9 & 1) != 0)
      {
        v10 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v8);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        if (swift_dynamicCastClass())
        {
          v10 = v10;
          MEMORY[0x23B852D78]();
          if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23A690F3C();
          sub_23A690F48();
          sub_23A690F30();
          v1 = sub_23A5C5EFC(0, 1, 1, MEMORY[0x24BEE4AF8]);
          v12 = v1[2];
          v11 = v1[3];
          if (v12 >= v11 >> 1)
            v1 = sub_23A5C5EFC((_QWORD *)(v11 > 1), v12 + 1, 1, v1);
          v13 = v0[3];
          v1[2] = v12 + 1;
          v1[v12 + 4] = v13;
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  if (*((double *)v0 + 4) != INFINITY)
  {
    v14 = *(_QWORD *)(v0[6] + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v14 + 16))
    {
      swift_bridgeObjectRetain();
      v15 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
      if ((v16 & 1) != 0)
      {
        v17 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v15);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        if (swift_dynamicCastClass())
        {
          v17 = v17;
          MEMORY[0x23B852D78]();
          if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23A690F3C();
          sub_23A690F48();
          sub_23A690F30();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v1 = sub_23A5C5EFC(0, v1[2] + 1, 1, v1);
          v19 = v1[2];
          v18 = v1[3];
          if (v19 >= v18 >> 1)
            v1 = sub_23A5C5EFC((_QWORD *)(v18 > 1), v19 + 1, 1, v1);
          v20 = v0[4];
          v1[2] = v19 + 1;
          v1[v19 + 4] = v20;
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  if (*((double *)v0 + 5) != INFINITY)
  {
    v21 = *(_QWORD *)(v0[6] + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v21 + 16))
    {
      swift_bridgeObjectRetain();
      v22 = sub_23A5C6588(1819045746, 0xE400000000000000);
      if ((v23 & 1) != 0)
      {
        v24 = *(id *)(*(_QWORD *)(v21 + 56) + 8 * v22);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        if (swift_dynamicCastClass())
        {
          v24 = v24;
          MEMORY[0x23B852D78]();
          if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23A690F3C();
          sub_23A690F48();
          sub_23A690F30();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v1 = sub_23A5C5EFC(0, v1[2] + 1, 1, v1);
          v26 = v1[2];
          v25 = v1[3];
          if (v26 >= v25 >> 1)
            v1 = sub_23A5C5EFC((_QWORD *)(v25 > 1), v26 + 1, 1, v1);
          v27 = v0[5];
          v1[2] = v26 + 1;
          v1[v26 + 4] = v27;
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  v3 = v0[2];
  v0[7] = v1;
  v0[8] = v3;
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_23A638E84;
  v5 = v0[6];
  v4[11] = v1;
  v4[12] = v5;
  v4[10] = v3;
  return swift_task_switch();
}

uint64_t ActuationController.setActuatorPositions(actuators:positions:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  return swift_task_switch();
}

uint64_t sub_23A63B29C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[12];
  v2 = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[13] = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[14] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A63B2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v5;
      *v5 = v0;
      v5[1] = sub_23A63B3D0;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A63B3D0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A63B424()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A63B460()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = MEMORY[0x23B853C6C](v0[12] + OBJC_IVAR____TtC11DockKitCore16SystemController_accessory);
  v0[16] = v1;
  if (!v1)
  {
    sub_23A5C9938();
    v2 = swift_allocError();
    *(_QWORD *)v3 = 0xD000000000000019;
    *(_QWORD *)(v3 + 8) = 0x800000023A69EC70;
    *(_BYTE *)(v3 + 16) = 7;
    swift_willThrow();
    v0[20] = v2;
    v0[21] = *(_QWORD *)(v0[12] + v0[13]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A63B530()
{
  _QWORD *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = (char *)v0[16];
  v3 = v0[11];
  v2 = (void *)v0[12];
  v4 = v0[10];
  v0[2] = v0;
  v0[3] = sub_23A63B5A8;
  v5 = swift_continuation_init();
  sub_23A5FB63C(v2, v4, v3, v1, v5);
  return swift_continuation_await();
}

uint64_t sub_23A63B5A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A63B614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A63B664()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23A6763E8();
  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_23A63B6BC;
  return sub_23A6344C0();
}

uint64_t sub_23A63B6BC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23A63B708()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(*(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 104));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A63B8A0(const void *a1, void *a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  id v10;
  uint64_t v11;

  v5[2] = a2;
  v5[3] = _Block_copy(a1);
  v10 = a2;
  v11 = swift_task_alloc();
  v5[4] = v11;
  *(_QWORD *)v11 = v5;
  *(_QWORD *)(v11 + 8) = sub_23A5D8B00;
  *(_QWORD *)(v11 + 48) = v10;
  *(double *)(v11 + 32) = a4;
  *(double *)(v11 + 40) = a5;
  *(double *)(v11 + 24) = a3;
  return swift_task_switch();
}

uint64_t ActuationController.setActuatorVelocities(actuatorNames:velocities:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_23A63B958()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *p_os_unfair_lock_opaque;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  double v21;
  os_unfair_lock_s *v22;
  os_unfair_lock_s *v23;
  double v24;
  os_unfair_lock_s *v25;
  double v26;
  os_unfair_lock_s *v27;
  os_unfair_lock_s *v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;

  v1 = (os_unfair_lock_s *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  v2 = (_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = 0;
    v6 = *(_QWORD *)(v0 + 40);
    v42 = *(_QWORD *)(v0 + 32);
    v43 = v42 + 32;
    p_os_unfair_lock_opaque = (_QWORD *)MEMORY[0x24BEE4AF8];
    v0 = v3 + 40;
    v8 = OBJC_IVAR____TtC11DockKitCore6System_components;
    v41 = v2;
    v44 = OBJC_IVAR____TtC11DockKitCore6System_components;
    while (1)
    {
      v9 = *(_QWORD *)(v6 + v8);
      if (*(_QWORD *)(v9 + 16))
      {
        v11 = *(_QWORD *)(v0 - 8);
        v10 = *(_QWORD *)v0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12 = sub_23A5C6588(v11, v10);
        if ((v13 & 1) != 0)
        {
          v14 = v6;
          v15 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v12);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          type metadata accessor for Actuator();
          v16 = swift_dynamicCastClass();
          if (v16)
          {
            v17 = v16;
            v45 = v15;
            MEMORY[0x23B852D78]();
            if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_23A690F3C();
            sub_23A690F48();
            sub_23A690F30();
            v18 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
            v19 = *(os_unfair_lock_s **)(v17 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
            swift_retain();
            os_unfair_lock_lock(v19 + 4);
            swift_release();
            v20 = OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition;
            v21 = *(double *)(v17 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition);
            v22 = *(os_unfair_lock_s **)(v17 + v18);
            swift_retain();
            os_unfair_lock_unlock(v22 + 4);
            swift_release();
            v23 = *(os_unfair_lock_s **)(v17 + v18);
            swift_retain();
            os_unfair_lock_lock(v23 + 4);
            swift_release();
            v24 = *(double *)(v17 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition);
            v1 = *(os_unfair_lock_s **)(v17 + v18);
            swift_retain();
            os_unfair_lock_unlock(v1 + 4);
            swift_release();
            if (v21 < v24)
            {
              if (v5 >= *(_QWORD *)(v42 + 16))
                goto LABEL_36;
              v6 = v14;
              if (*(double *)(v43 + 8 * v5) < 0.0)
                goto LABEL_16;
            }
            v25 = *(os_unfair_lock_s **)(v17 + v18);
            swift_retain();
            os_unfair_lock_lock(v25 + 4);
            swift_release();
            v26 = *(double *)(v17 + v20);
            v27 = *(os_unfair_lock_s **)(v17 + v18);
            swift_retain();
            os_unfair_lock_unlock(v27 + 4);
            swift_release();
            v28 = *(os_unfair_lock_s **)(v17 + v18);
            swift_retain();
            v6 = v14;
            os_unfair_lock_lock(v28 + 4);
            swift_release();
            v29 = *(double *)(v17 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition);
            v1 = *(os_unfair_lock_s **)(v17 + v18);
            swift_retain();
            os_unfair_lock_unlock(v1 + 4);
            swift_release();
            v30 = *(_QWORD *)(v42 + 16);
            if (v29 >= v26)
              goto LABEL_22;
            if (v5 >= v30)
              goto LABEL_37;
            if (*(double *)(v43 + 8 * v5) <= 0.0)
            {
LABEL_22:
              if (v5 >= v30)
              {
                __break(1u);
LABEL_36:
                __break(1u);
LABEL_37:
                __break(1u);
LABEL_38:
                swift_bridgeObjectRetain();
                v36 = sub_23A691374();
                swift_bridgeObjectRelease();
                goto LABEL_32;
              }
              v33 = *(_QWORD *)(v43 + 8 * v5);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                p_os_unfair_lock_opaque = sub_23A5C5EFC(0, p_os_unfair_lock_opaque[2] + 1, 1, p_os_unfair_lock_opaque);
              v2 = v41;
              v8 = v44;
              v35 = p_os_unfair_lock_opaque[2];
              v34 = p_os_unfair_lock_opaque[3];
              if (v35 >= v34 >> 1)
                p_os_unfair_lock_opaque = sub_23A5C5EFC((_QWORD *)(v34 > 1), v35 + 1, 1, p_os_unfair_lock_opaque);
              p_os_unfair_lock_opaque[2] = v35 + 1;
              p_os_unfair_lock_opaque[v35 + 4] = v33;

            }
            else
            {
LABEL_16:
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                p_os_unfair_lock_opaque = sub_23A5C5EFC(0, p_os_unfair_lock_opaque[2] + 1, 1, p_os_unfair_lock_opaque);
              v2 = v41;
              v8 = v44;
              v32 = p_os_unfair_lock_opaque[2];
              v31 = p_os_unfair_lock_opaque[3];
              if (v32 >= v31 >> 1)
                p_os_unfair_lock_opaque = sub_23A5C5EFC((_QWORD *)(v31 > 1), v32 + 1, 1, p_os_unfair_lock_opaque);
              p_os_unfair_lock_opaque[2] = v32 + 1;
              p_os_unfair_lock_opaque[v32 + 4] = 0;

            }
          }
          else
          {

            v6 = v14;
            v8 = v44;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      ++v5;
      v0 += 16;
      if (v4 == v5)
      {
        v1 = (os_unfair_lock_s *)*v2;
        v0 = v40;
        goto LABEL_30;
      }
    }
  }
  p_os_unfair_lock_opaque = &v1->_os_unfair_lock_opaque;
LABEL_30:
  *(_QWORD *)(v0 + 48) = v1;
  if ((unint64_t)v1 >> 62)
    goto LABEL_38;
  v36 = *(_QWORD *)(((unint64_t)v1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_32:
  v37 = p_os_unfair_lock_opaque[2];
  swift_bridgeObjectRelease();
  if (v36 == v37)
  {
    v38 = swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v38;
    *(_QWORD *)v38 = v0;
    *(_QWORD *)(v38 + 8) = sub_23A63BE5C;
    *(_OWORD *)(v38 + 88) = *(_OWORD *)(v0 + 32);
    *(_QWORD *)(v38 + 80) = v1;
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23A63BE5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23A63BEC8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ActuationController.setActuatorVelocities(actuators:velocities:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  return swift_task_switch();
}

uint64_t sub_23A63BF18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[12];
  v2 = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[13] = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[14] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A63BF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v5;
      *v5 = v0;
      v5[1] = sub_23A63C04C;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A63C04C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A63C0A0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A63C0DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = MEMORY[0x23B853C6C](v0[12] + OBJC_IVAR____TtC11DockKitCore16SystemController_accessory);
  v0[16] = v1;
  if (!v1)
  {
    sub_23A5C9938();
    v2 = swift_allocError();
    *(_QWORD *)v3 = 0xD000000000000019;
    *(_QWORD *)(v3 + 8) = 0x800000023A69EC70;
    *(_BYTE *)(v3 + 16) = 7;
    swift_willThrow();
    v0[20] = v2;
    v0[21] = *(_QWORD *)(v0[12] + v0[13]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A63C1AC()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;

  v1 = (char *)v0[16];
  v3 = (_QWORD *)v0[11];
  v2 = v0[12];
  v4 = v0[10];
  v0[2] = v0;
  v0[3] = sub_23A63C224;
  v5 = swift_continuation_init();
  sub_23A5F9F74(v2, v4, v3, v1, v5);
  return swift_continuation_await();
}

uint64_t sub_23A63C224()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23A63C290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A63C2E0()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23A6763E8();
  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_23A640430;
  return sub_23A6344C0();
}

uint64_t sub_23A63C338()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(*(_QWORD *)(v0 + 96) + *(_QWORD *)(v0 + 104));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A63C390()
{
  sub_23A6763E8();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A63C50C(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_23A690F18();
  v4[4] = v6;
  v7 = sub_23A690F18();
  v4[5] = v7;
  v8 = a4;
  v9 = (_QWORD *)swift_task_alloc();
  v4[6] = v9;
  *v9 = v4;
  v9[1] = sub_23A64043C;
  v9[4] = v7;
  v9[5] = v8;
  v9[3] = v6;
  return swift_task_switch();
}

uint64_t sub_23A63C70C(const void *a1, void *a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  id v10;
  uint64_t v11;

  v5[2] = a2;
  v5[3] = _Block_copy(a1);
  v10 = a2;
  v11 = swift_task_alloc();
  v5[4] = v11;
  *(_QWORD *)v11 = v5;
  *(_QWORD *)(v11 + 8) = sub_23A5F28D0;
  *(_QWORD *)(v11 + 48) = v10;
  *(double *)(v11 + 32) = a4;
  *(double *)(v11 + 40) = a5;
  *(double *)(v11 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_23A63C7A8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  return sub_23A6344C0();
}

double sub_23A63C7F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  double *v11;
  int64_t v12;
  double result;
  _QWORD *v14;

  *(_WORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 26) = 1;
  *(_QWORD *)(a2 + 16) = a1;
  *(double *)(a2 + 8) = a4;
  v6 = sub_23A5C5ABC(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v8 = v6[2];
  v7 = v6[3];
  v9 = v7 >> 1;
  v10 = v8 + 1;
  if (v7 >> 1 <= v8)
  {
    v6 = sub_23A5C5ABC((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
    v7 = v6[3];
    v9 = v7 >> 1;
  }
  v6[2] = v10;
  v11 = (double *)&v6[3 * v8];
  v11[4] = 0.0;
  v11[5] = 0.0;
  v11[6] = a3;
  v12 = v8 + 2;
  if (v9 < v12)
    v6 = sub_23A5C5ABC((_QWORD *)(v7 > 1), v12, 1, v6);
  v6[2] = v12;
  result = 1.0;
  v14 = &v6[3 * v10];
  *((_OWORD *)v14 + 2) = xmmword_23A6984F0;
  *((double *)v14 + 6) = a3;
  *(_QWORD *)a2 = v6;
  return result;
}

void sub_23A63C8E4(char *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  int v13;
  char v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  char v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  id v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  uint64_t v33;

  v8 = sub_23A690D14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2 + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger, v8);
  v15 = sub_23A690CFC();
  v16 = sub_23A691044();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v29 = v8;
    v18 = v14;
    v19 = (uint8_t *)v17;
    v20 = swift_slowAlloc();
    v31 = a3;
    v21 = v20;
    v30 = a4;
    *(_DWORD *)v19 = 136315138;
    v33 = v20;
    v28 = v19 + 4;
    LOBYTE(v32) = v12;
    BYTE1(v32) = v13;
    BYTE2(v32) = v18;
    v22 = sub_23A690E58();
    v32 = sub_23A5EEB40(v22, v23, &v33);
    sub_23A6911D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23A5B0000, v15, v16, "Trajectory progress: %s", v19, 0xCu);
    swift_arrayDestroy();
    v24 = v21;
    a3 = v31;
    MEMORY[0x23B853BD0](v24, -1, -1);
    MEMORY[0x23B853BD0](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  switch(v13)
  {
    case 3:
      v25 = 1;
      goto LABEL_9;
    case 4:
      v25 = 2;
      goto LABEL_9;
    case 5:
      v25 = 3;
LABEL_9:
      LOBYTE(v33) = v25;
      break;
    default:
      LOBYTE(v33) = 0;
      break;
  }
  v26 = objc_allocWithZone((Class)type metadata accessor for TrajectoryProgress());
  v27 = TrajectoryProgress.init(status:statusMessage:)((char *)&v33, 0, 0);
  a3();

}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ActuationController.setActuatorLimits(yaw:pitch:roll:)(DockKitCore::ActuatorLimit_optional *yaw, DockKitCore::ActuatorLimit_optional *pitch, DockKitCore::ActuatorLimit_optional *roll)
{
  uint64_t v3;
  uint64_t v4;
  void *object;
  double maxPosition;
  double minPosition;
  double maxSpeed;
  void *v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  Swift::Double v14;
  Swift::Double v15;
  double v16;
  double v17;
  double v18;
  unint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  BOOL v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  BOOL v38;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  BOOL v47;
  uint64_t v49;
  unint64_t v50;
  const char *v51;
  char v52;
  uint64_t v53;
  os_unfair_lock_s *v54;
  os_unfair_lock_s *v55;
  os_unfair_lock_s *v56;
  os_unfair_lock_s *v57;
  os_unfair_lock_s *v58;
  os_unfair_lock_s *v59;
  uint64_t v60;
  os_unfair_lock_s *v61;
  os_unfair_lock_s *v62;
  os_unfair_lock_s *v63;
  os_unfair_lock_s *v64;
  os_unfair_lock_s *v65;
  os_unfair_lock_s *v66;
  uint64_t v67;
  os_unfair_lock_s *v68;
  os_unfair_lock_s *v69;
  os_unfair_lock_s *v70;
  os_unfair_lock_s *v71;
  os_unfair_lock_s *v72;
  os_unfair_lock_s *v73;
  Swift::Double v74;

  v4 = v3;
  object = pitch->value.name._object;
  minPosition = pitch->value.minPosition;
  maxPosition = pitch->value.maxPosition;
  maxSpeed = pitch->value.maxSpeed;
  v9 = roll->value.name._object;
  v11 = roll->value.minPosition;
  v10 = roll->value.maxPosition;
  v12 = roll->value.maxSpeed;
  if (!yaw->value.name._object)
  {
    if (!object)
    {
      if (!v9)
      {
        sub_23A5C9938();
        swift_allocError();
        *(_QWORD *)v49 = 0xD00000000000001FLL;
        *(_QWORD *)(v49 + 8) = 0x800000023A69EDA0;
        v52 = 7;
LABEL_60:
        *(_BYTE *)(v49 + 16) = v52;
        swift_willThrow();
        return;
      }
      goto LABEL_33;
    }
LABEL_17:
    v31 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v31 + 16))
    {
      swift_bridgeObjectRetain();
      v32 = sub_23A5C6588(0x6863746970, 0xE500000000000000);
      if ((v33 & 1) != 0)
      {
        v21 = *(id *)(*(_QWORD *)(v31 + 56) + 8 * v32);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v34 = swift_dynamicCastClass();
        if (v34)
        {
          v35 = v34;
          v36 = *(double *)(v34 + OBJC_IVAR____TtC11DockKitCore8Actuator_minPosition);
          if (minPosition >= v36)
          {
            v37 = *(double *)(v34 + OBJC_IVAR____TtC11DockKitCore8Actuator_maxPosition);
            if (v37 >= maxPosition)
            {
              v38 = *(double *)(v34 + OBJC_IVAR____TtC11DockKitCore8Actuator_maxSpeed) < maxSpeed || v37 < minPosition;
              if (!v38 && maxPosition >= v36)
              {
                v60 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
                v61 = *(os_unfair_lock_s **)(v34 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
                swift_retain();
                os_unfair_lock_lock(v61 + 4);
                swift_release();
                *(double *)(v35 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition) = minPosition;
                v62 = *(os_unfair_lock_s **)(v35 + v60);
                swift_retain();
                os_unfair_lock_unlock(v62 + 4);
                swift_release();
                v63 = *(os_unfair_lock_s **)(v35 + v60);
                swift_retain();
                os_unfair_lock_lock(v63 + 4);
                swift_release();
                *(double *)(v35 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition) = maxPosition;
                v64 = *(os_unfair_lock_s **)(v35 + v60);
                swift_retain();
                os_unfair_lock_unlock(v64 + 4);
                swift_release();
                v65 = *(os_unfair_lock_s **)(v35 + v60);
                swift_retain();
                os_unfair_lock_lock(v65 + 4);
                swift_release();
                *(double *)(v35 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed) = maxSpeed;
                v66 = *(os_unfair_lock_s **)(v35 + v60);
                swift_retain();
                os_unfair_lock_unlock(v66 + 4);

                swift_release();
                goto LABEL_61;
              }
            }
          }
          sub_23A5C9938();
          swift_allocError();
          v29 = 0xD000000000000021;
          v30 = "pitch limit specification invalid";
LABEL_47:
          *(_QWORD *)v28 = v29;
          *(_QWORD *)(v28 + 8) = (unint64_t)(v30 - 32) | 0x8000000000000000;
          *(_BYTE *)(v28 + 16) = 22;
          swift_willThrow();

          return;
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_23A5C9938();
    swift_allocError();
    v50 = 0xD000000000000012;
    v51 = "No pitch component";
LABEL_59:
    *(_QWORD *)v49 = v50;
    *(_QWORD *)(v49 + 8) = (unint64_t)(v51 - 32) | 0x8000000000000000;
    v52 = 9;
    goto LABEL_60;
  }
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11DockKitCore6System_components);
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_50:
    sub_23A5C9938();
    swift_allocError();
    v50 = 0xD000000000000010;
    v51 = "No yaw component";
    goto LABEL_59;
  }
  v74 = roll->value.minPosition;
  v14 = roll->value.maxPosition;
  v15 = roll->value.maxSpeed;
  v17 = yaw->value.maxPosition;
  v16 = yaw->value.maxSpeed;
  v18 = yaw->value.minPosition;
  swift_bridgeObjectRetain();
  v19 = sub_23A5C6588(7823737, 0xE300000000000000);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  v21 = *(id *)(*(_QWORD *)(v13 + 56) + 8 * v19);
  swift_bridgeObjectRelease();
  type metadata accessor for Actuator();
  v22 = swift_dynamicCastClass();
  if (!v22)
  {

    goto LABEL_50;
  }
  v23 = v22;
  v24 = *(double *)(v22 + OBJC_IVAR____TtC11DockKitCore8Actuator_minPosition);
  if (v18 < v24
    || (v25 = *(double *)(v22 + OBJC_IVAR____TtC11DockKitCore8Actuator_maxPosition), v25 < v17)
    || (*(double *)(v22 + OBJC_IVAR____TtC11DockKitCore8Actuator_maxSpeed) >= v16 ? (v26 = v25 < v18) : (v26 = 1),
        !v26 ? (v27 = v17 < v24) : (v27 = 1),
        v27))
  {
    sub_23A5C9938();
    swift_allocError();
    v29 = 0xD00000000000001FLL;
    v30 = "yaw limit specification invalid";
    goto LABEL_47;
  }
  v53 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
  v54 = *(os_unfair_lock_s **)(v22 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
  swift_retain();
  os_unfair_lock_lock(v54 + 4);
  swift_release();
  *(double *)(v23 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition) = v18;
  v55 = *(os_unfair_lock_s **)(v23 + v53);
  swift_retain();
  os_unfair_lock_unlock(v55 + 4);
  swift_release();
  v56 = *(os_unfair_lock_s **)(v23 + v53);
  swift_retain();
  os_unfair_lock_lock(v56 + 4);
  swift_release();
  *(double *)(v23 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition) = v17;
  v57 = *(os_unfair_lock_s **)(v23 + v53);
  swift_retain();
  os_unfair_lock_unlock(v57 + 4);
  swift_release();
  v58 = *(os_unfair_lock_s **)(v23 + v53);
  swift_retain();
  os_unfair_lock_lock(v58 + 4);
  swift_release();
  *(double *)(v23 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed) = v16;
  v59 = *(os_unfair_lock_s **)(v23 + v53);
  swift_retain();
  os_unfair_lock_unlock(v59 + 4);

  swift_release();
  v12 = v15;
  v10 = v14;
  v11 = v74;
  if (object)
    goto LABEL_17;
LABEL_61:
  if (v9)
  {
LABEL_33:
    v40 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11DockKitCore6System_components);
    if (*(_QWORD *)(v40 + 16))
    {
      swift_bridgeObjectRetain();
      v41 = sub_23A5C6588(1819045746, 0xE400000000000000);
      if ((v42 & 1) != 0)
      {
        v21 = *(id *)(*(_QWORD *)(v40 + 56) + 8 * v41);
        swift_bridgeObjectRelease();
        type metadata accessor for Actuator();
        v43 = swift_dynamicCastClass();
        if (v43)
        {
          v44 = v43;
          v45 = *(double *)(v43 + OBJC_IVAR____TtC11DockKitCore8Actuator_minPosition);
          if (v11 >= v45)
          {
            v46 = *(double *)(v43 + OBJC_IVAR____TtC11DockKitCore8Actuator_maxPosition);
            if (v46 >= v10)
            {
              v47 = *(double *)(v43 + OBJC_IVAR____TtC11DockKitCore8Actuator_maxSpeed) < v12 || v46 < v11;
              if (!v47 && v10 >= v45)
              {
                v67 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
                v68 = *(os_unfair_lock_s **)(v43 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
                swift_retain();
                os_unfair_lock_lock(v68 + 4);
                swift_release();
                *(double *)(v44 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMinPosition) = v11;
                v69 = *(os_unfair_lock_s **)(v44 + v67);
                swift_retain();
                os_unfair_lock_unlock(v69 + 4);
                swift_release();
                v70 = *(os_unfair_lock_s **)(v44 + v67);
                swift_retain();
                os_unfair_lock_lock(v70 + 4);
                swift_release();
                *(double *)(v44 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxPosition) = v10;
                v71 = *(os_unfair_lock_s **)(v44 + v67);
                swift_retain();
                os_unfair_lock_unlock(v71 + 4);
                swift_release();
                v72 = *(os_unfair_lock_s **)(v44 + v67);
                swift_retain();
                os_unfair_lock_lock(v72 + 4);
                swift_release();
                *(double *)(v44 + OBJC_IVAR____TtC11DockKitCore8Actuator__softMaxSpeed) = v12;
                v73 = *(os_unfair_lock_s **)(v44 + v67);
                swift_retain();
                os_unfair_lock_unlock(v73 + 4);

                swift_release();
                return;
              }
            }
          }
          sub_23A5C9938();
          swift_allocError();
          v29 = 0xD000000000000020;
          v30 = "roll limit specification invalid";
          goto LABEL_47;
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_23A5C9938();
    swift_allocError();
    v50 = 0xD000000000000011;
    v51 = "No roll component";
    goto LABEL_59;
  }
}

uint64_t sub_23A63D448(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  type metadata accessor for Actuator();
  v6 = sub_23A690F18();
  v4[4] = v6;
  v7 = sub_23A690F18();
  v4[5] = v7;
  v8 = a4;
  v9 = (_QWORD *)swift_task_alloc();
  v4[6] = v9;
  *v9 = v4;
  v9[1] = sub_23A63D50C;
  v9[11] = v7;
  v9[12] = v8;
  v9[10] = v6;
  return swift_task_switch();
}

uint64_t sub_23A63D50C()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 16);
  v3 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 24);
  if (v0)
  {
    v5 = (void *)sub_23A6905C4();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 24), 0);
  }
  _Block_release(*(const void **)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23A63D700(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  type metadata accessor for Actuator();
  v6 = sub_23A690F18();
  v4[4] = v6;
  v7 = sub_23A690F18();
  v4[5] = v7;
  v8 = a4;
  v9 = (_QWORD *)swift_task_alloc();
  v4[6] = v9;
  *v9 = v4;
  v9[1] = sub_23A64043C;
  v9[11] = v7;
  v9[12] = v8;
  v9[10] = v6;
  return swift_task_switch();
}

uint64_t sub_23A63D910(int a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  _QWORD *v5;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v5[2] = a2;
  v5[3] = a5;
  v5[4] = _Block_copy(aBlock);
  type metadata accessor for Actuator();
  v9 = sub_23A690F18();
  v5[5] = v9;
  swift_unknownObjectRetain();
  v10 = a5;
  v11 = (_QWORD *)swift_task_alloc();
  v5[6] = v11;
  *v11 = v5;
  v11[1] = sub_23A63D9D0;
  v11[12] = a3;
  v11[13] = v10;
  v11[10] = v9;
  v11[11] = a2;
  return swift_task_switch();
}

uint64_t sub_23A63D9D0()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*v1 + 24);
  v3 = *v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v3 + 32);
  if (v0)
  {
    v5 = (void *)sub_23A6905C4();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v3 + 32), 0);
  }
  _Block_release(*(const void **)(v3 + 32));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t ActuationController.getCurrentFeedback(actuators:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = v1;
  return swift_task_switch();
}

uint64_t sub_23A63DAA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[12];
  v2 = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[13] = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  v0[14] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

void sub_23A63DAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_23A5F0550(&qword_25699FD70, (uint64_t (*)(uint64_t))type metadata accessor for LockActor, (uint64_t)&protocol conformance descriptor for LockActor);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v5;
      *v5 = v0;
      v5[1] = sub_23A63DBD4;
      sub_23A691500();
    }
    else
    {
      swift_release();
      swift_task_switch();
    }
  }
}

uint64_t sub_23A63DBD4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23A63DC28()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23A63DC64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = MEMORY[0x23B853C6C](v0[12] + OBJC_IVAR____TtC11DockKitCore16SystemController_accessory);
  v0[16] = v1;
  if (!v1)
  {
    sub_23A5C9938();
    v2 = swift_allocError();
    *(_QWORD *)v3 = 0xD000000000000019;
    *(_QWORD *)(v3 + 8) = 0x800000023A69EC70;
    *(_BYTE *)(v3 + 16) = 7;
    swift_willThrow();
    v0[20] = v2;
    v0[21] = *(_QWORD *)(v0[12] + v0[13]);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_23A63DD34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = v0[16];
  v3 = v0[11];
  v2 = v0[12];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_23A63DDA4;
  v4 = swift_continuation_init();
  sub_23A5FC0C4(v2, v3, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_23A63DDA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 136) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 144) = *(_QWORD *)(v1 + 80);
  return swift_task_switch();
}

uint64_t sub_23A63DE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23A63DE68()
{
  uint64_t v0;

  sub_23A6763E8();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
}

uint64_t sub_23A63DFD8(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  type metadata accessor for Actuator();
  v5 = sub_23A690F18();
  v3[4] = v5;
  v6 = a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_23A63E07C;
  v7[11] = v5;
  v7[12] = v6;
  return swift_task_switch();
}

uint64_t sub_23A63E07C(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 24);
  if (v3)
  {
    v8 = (void *)sub_23A6905C4();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](*(_QWORD *)(v6 + 24), a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_23A63E264(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_23A5F28D0;
  v5[10] = v4;
  return swift_task_switch();
}

Swift::Void __swiftcall ActuationController.encode(with:)(NSCoder with)
{
  void *v2;
  void *v3;

  v2 = (void *)sub_23A691008();
  v3 = (void *)sub_23A690E04();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v2, v3);

  sub_23A62E48C(with.super.isa);
}

id ActuationController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ActuationController.init(coder:)(a1);
}

id ActuationController.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _BOOL8 v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  char v25[24];
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FD48);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1;
  sub_23A690D08();
  sub_23A69066C();
  sub_23A69066C();
  v8 = OBJC_IVAR____TtC11DockKitCore19ActuationController_feedbackLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  *(_QWORD *)&v7[v8] = v9;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore19ActuationController_yawOffset] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore19ActuationController_rotateCameraAngle] = 0;
  v10 = OBJC_IVAR____TtC11DockKitCore19ActuationController_lastTrajectoryProgress;
  type metadata accessor for TrajectoryCommand.StampedProgress(0);
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 18) = 0;
  *(_WORD *)(v11 + 16) = 1536;
  sub_23A69066C();
  v12 = OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_lock;
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v11 + v12) = v13;
  *(_QWORD *)&v7[v10] = v11;
  v14 = OBJC_IVAR____TtC11DockKitCore19ActuationController_imu;
  type metadata accessor for StandOrientationMonitor();
  swift_allocObject();
  *(_QWORD *)&v7[v14] = sub_23A674E1C();
  v15 = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  type metadata accessor for LockActor();
  v16 = swift_allocObject();
  swift_defaultActor_initialize();
  v17 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v16 + 112) = 1;
  *(_QWORD *)(v16 + 120) = v17;
  *(_QWORD *)&v7[v15] = v16;
  v18 = &v7[OBJC_IVAR____TtC11DockKitCore19ActuationController__feedbackStarted];
  v25[0] = 0;
  sub_23A6909C0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v18, v6, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_23A694020;
  *(_QWORD *)(v19 + 32) = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (!v26)
  {
    sub_23A5C921C((uint64_t)v25, &qword_2569A0330);
    goto LABEL_7;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v20 = 0;
    goto LABEL_8;
  }
  v20 = v24;
  if (v24 != 2)
    v20 = v24 == 1;
LABEL_8:
  *(_QWORD *)&v7[OBJC_IVAR____TtC11DockKitCore19ActuationController_motionModel] = v20;

  swift_unknownObjectWeakInit();
  v21 = sub_23A62F264();

  return v21;
}

uint64_t sub_23A63E7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger;
  v2 = sub_23A690D14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastFeedbackTime;
  v4 = sub_23A6906D8();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastFeedbackRequest, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v6 = v0 + OBJC_IVAR____TtC11DockKitCore19ActuationController__feedbackStarted;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FD48);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_23A63E988()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23A63E9B4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23A5F2890;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23A5F2890;
  return sub_23A6344C0();
}

void sub_23A63EA1C(char *a1)
{
  uint64_t v1;

  sub_23A63C8E4(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32));
}

id sub_23A63EA38()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  objc_super v13;
  _BYTE v14[24];
  uint64_t v15;

  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25699F220);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23A696770;
  v3 = sub_23A5D03A4(0, (unint64_t *)&unk_2569A04C0);
  *(_QWORD *)(v2 + 32) = v3;
  v4 = sub_23A5D03A4(0, (unint64_t *)&unk_25699E110);
  *(_QWORD *)(v2 + 40) = v4;
  v5 = v0;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E1D0);
    if (swift_dynamicCast())
    {
      v6 = v12;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v14, &qword_2569A0330);
  }
  v6 = MEMORY[0x24BEE4AF8];
LABEL_6:
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_positions] = v6;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23A696770;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v4;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25699E1D0);
    if (swift_dynamicCast())
    {
      v8 = v12;
      goto LABEL_11;
    }
  }
  else
  {
    sub_23A5C921C((uint64_t)v14, &qword_2569A0330);
  }
  v8 = MEMORY[0x24BEE4AF8];
LABEL_11:
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_velocities] = v8;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23A694020;
  *(_QWORD *)(v9 + 32) = v4;
  sub_23A691158();
  swift_bridgeObjectRelease();
  if (!v15)
  {
    sub_23A5C921C((uint64_t)v14, &qword_2569A0330);
    goto LABEL_15;
  }
  if (!swift_dynamicCast())
  {
LABEL_15:
    v10 = 0;
    goto LABEL_16;
  }
  v10 = v12;
LABEL_16:
  *(_QWORD *)&v5[OBJC_IVAR____TtC11DockKitCore16ActuatorFeedback_timestamp] = v10;

  v13.receiver = v5;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t sub_23A63ECE8(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t a6)
{
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  objc_class *v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  uint64_t v40;
  id v41;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  id v58;
  uint64_t result;
  id v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  id v64;
  _QWORD *v65;
  objc_super v66;

  v62 = a6;
  v63 = a5;
  v61 = a4;
  v64 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FD48);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v6;
  sub_23A690D08();
  sub_23A69066C();
  sub_23A69066C();
  v14 = OBJC_IVAR____TtC11DockKitCore19ActuationController_feedbackLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 16) = 0;
  *(_QWORD *)&v13[v14] = v15;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore19ActuationController_yawOffset] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore19ActuationController_rotateCameraAngle] = 0;
  v16 = OBJC_IVAR____TtC11DockKitCore19ActuationController_lastTrajectoryProgress;
  type metadata accessor for TrajectoryCommand.StampedProgress(0);
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 18) = 0;
  *(_WORD *)(v17 + 16) = 1536;
  sub_23A69066C();
  v18 = OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_lock;
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v17 + v18) = v19;
  *(_QWORD *)&v13[v16] = v17;
  v20 = OBJC_IVAR____TtC11DockKitCore19ActuationController_imu;
  type metadata accessor for StandOrientationMonitor();
  swift_allocObject();
  *(_QWORD *)&v13[v20] = sub_23A674E1C();
  v21 = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  type metadata accessor for LockActor();
  v22 = swift_allocObject();
  swift_defaultActor_initialize();
  v23 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v22 + 112) = 1;
  *(_QWORD *)(v22 + 120) = v23;
  *(_QWORD *)&v13[v21] = v22;
  v24 = &v13[OBJC_IVAR____TtC11DockKitCore19ActuationController__feedbackStarted];
  LOBYTE(v65) = 0;
  sub_23A6909C0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v24, v12, v9);
  *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore19ActuationController_motionModel] = a3;

  swift_unknownObjectWeakInit();
  v25 = (uint64_t)&OBJC_IVAR____TtC11DockKitCore6System_components;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore6System_components] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore6System_id] = a2;
  v26 = v61;
  v27 = v62;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11DockKitCore6System_type] = 0;
  v28 = (unint64_t *)&v13[OBJC_IVAR____TtC11DockKitCore6System_name];
  v29 = (unint64_t)v63;
  *v28 = v26;
  v28[1] = v29;
  v30 = (objc_class *)type metadata accessor for System();
  v66.receiver = v13;
  v66.super_class = v30;
  v31 = v64;
  v32 = (unint64_t)objc_msgSendSuper2(&v66, sel_init);
  swift_unknownObjectWeakAssign();

  if (v27 >> 62)
  {
LABEL_24:
    v58 = (id)v32;
    swift_bridgeObjectRetain();
    v33 = sub_23A691374();
    swift_bridgeObjectRelease();
    v35 = (id)v32;
    if (v33)
      goto LABEL_3;
LABEL_25:

    return v32;
  }
  v33 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  v34 = (id)v32;
  v35 = (id)v32;
  if (!v33)
    goto LABEL_25;
LABEL_3:
  v36 = *(_QWORD *)v25;
  v60 = (id)v33;
  v61 = v27 & 0xC000000000000001;
  v25 = 4;
  while (1)
  {
    if (v61)
      v38 = (char *)MEMORY[0x23B85312C](v25 - 4, v27);
    else
      v38 = (char *)*(id *)(v27 + 8 * v25);
    v39 = v38;
    if (__OFADD__(v25 - 4, 1))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v64 = (id)(v25 - 3);
    v40 = *(_QWORD *)&v38[OBJC_IVAR____TtC11DockKitCore9Component_name];
    v27 = *(_QWORD *)&v38[OBJC_IVAR____TtC11DockKitCore9Component_name + 8];
    v63 = (id)v32;
    swift_bridgeObjectRetain();
    v41 = v39;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v65 = *(_QWORD **)(v32 + v36);
    v43 = v65;
    v44 = v32;
    v45 = v36;
    *(_QWORD *)(v32 + v36) = 0x8000000000000000;
    v32 = sub_23A5C6588(v40, v27);
    v47 = v43[2];
    v48 = (v46 & 1) == 0;
    v49 = v47 + v48;
    if (__OFADD__(v47, v48))
      goto LABEL_22;
    v50 = v46;
    if (v43[3] < v49)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v53 = v65;
      if ((v46 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_23A61745C();
      v53 = v65;
      if ((v50 & 1) != 0)
      {
LABEL_4:
        v37 = v53[7];

        *(_QWORD *)(v37 + 8 * v32) = v41;
        goto LABEL_5;
      }
    }
LABEL_17:
    v53[(v32 >> 6) + 8] |= 1 << v32;
    v54 = (uint64_t *)(v53[6] + 16 * v32);
    *v54 = v40;
    v54[1] = v27;
    *(_QWORD *)(v53[7] + 8 * v32) = v41;
    v55 = v53[2];
    v56 = __OFADD__(v55, 1);
    v57 = v55 + 1;
    if (v56)
      goto LABEL_23;
    v53[2] = v57;
    swift_bridgeObjectRetain();
LABEL_5:
    v32 = v44;
    v36 = v45;
    *(_QWORD *)(v44 + v45) = v53;
    v35 = v63;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v25;
    v27 = v62;
    if (v64 == v60)
      goto LABEL_25;
  }
  sub_23A6154DC(v49, isUniquelyReferenced_nonNull_native);
  v51 = sub_23A5C6588(v40, v27);
  if ((v50 & 1) == (v52 & 1))
  {
    v32 = v51;
    v53 = v65;
    if ((v50 & 1) != 0)
      goto LABEL_4;
    goto LABEL_17;
  }
  result = sub_23A691554();
  __break(1u);
  return result;
}

id sub_23A63F228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  objc_class *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;
  char v33;

  v29 = a4;
  v30 = a5;
  v31 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25699FD48);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v5;
  sub_23A690D08();
  sub_23A69066C();
  sub_23A69066C();
  v13 = OBJC_IVAR____TtC11DockKitCore19ActuationController_feedbackLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542D2830);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  *(_QWORD *)&v12[v13] = v14;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore19ActuationController_yawOffset] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore19ActuationController_rotateCameraAngle] = 0;
  v15 = OBJC_IVAR____TtC11DockKitCore19ActuationController_lastTrajectoryProgress;
  type metadata accessor for TrajectoryCommand.StampedProgress(0);
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 18) = 0;
  *(_WORD *)(v16 + 16) = 1536;
  sub_23A69066C();
  v17 = OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_lock;
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v16 + v17) = v18;
  *(_QWORD *)&v12[v15] = v16;
  v19 = OBJC_IVAR____TtC11DockKitCore19ActuationController_imu;
  type metadata accessor for StandOrientationMonitor();
  swift_allocObject();
  *(_QWORD *)&v12[v19] = sub_23A674E1C();
  v20 = OBJC_IVAR____TtC11DockKitCore19ActuationController__actuationLock;
  type metadata accessor for LockActor();
  v21 = swift_allocObject();
  swift_defaultActor_initialize();
  v22 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v21 + 112) = 1;
  *(_QWORD *)(v21 + 120) = v22;
  *(_QWORD *)&v12[v20] = v21;
  v23 = &v12[OBJC_IVAR____TtC11DockKitCore19ActuationController__feedbackStarted];
  v33 = 0;
  sub_23A6909C0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v23, v11, v8);
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore19ActuationController_motionModel] = 0;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore6System_components] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore6System_id] = a2;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11DockKitCore6System_type] = a3;
  v24 = &v12[OBJC_IVAR____TtC11DockKitCore6System_name];
  v25 = v30;
  *(_QWORD *)v24 = v29;
  *((_QWORD *)v24 + 1) = v25;
  v26 = (objc_class *)type metadata accessor for System();
  v32.receiver = v12;
  v32.super_class = v26;
  v27 = objc_msgSendSuper2(&v32, sel_init);
  swift_unknownObjectWeakAssign();
  return v27;
}

uint64_t sub_23A63F514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  os_unfair_lock_s *v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  os_unfair_lock_s *v48;
  os_unfair_lock_s *v49;
  char *v50;
  uint64_t v52;
  unint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v4 = v3;
  v70 = a2;
  v7 = sub_23A690D14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23A6906D8();
  v67 = *(_QWORD *)(v11 - 8);
  v68 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v66 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v60 = v10;
    v61 = v8;
    v59 = v7;
    v14 = OBJC_IVAR____TtC11DockKitCore6System_components;
    v62 = v4 + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastFeedbackTime;
    v63 = OBJC_IVAR____TtC11DockKitCore19ActuationController_imu;
    v56 = v4 + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger;
    v57 = OBJC_IVAR____TtC11DockKitCore19ActuationController_rotateCameraAngle;
    v58 = OBJC_IVAR____TtC11DockKitCore19ActuationController_yawOffset;
    v69 = a3;
    v64 = a3 + 32;
    swift_bridgeObjectRetain();
    v15 = 0;
    v55 = a1;
    v16 = (uint64_t *)(a1 + 40);
    v17 = 32;
    *(_QWORD *)&v18 = 136315394;
    v54 = v18;
    v53 = 0x800000023A69F0A0;
    v52 = MEMORY[0x24BEE4AD8] + 8;
    v19 = v70;
    v65 = v4;
    v71 = v14;
    v72 = v13;
    while (1)
    {
      v20 = *(_QWORD *)(v4 + v14);
      if (*(_QWORD *)(v20 + 16))
      {
        v22 = *(v16 - 1);
        v21 = *v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = sub_23A5C6588(v22, v21);
        if ((v24 & 1) != 0)
        {
          v25 = *(id *)(*(_QWORD *)(v20 + 56) + 8 * v23);
          swift_bridgeObjectRelease();
          type metadata accessor for Actuator();
          v26 = swift_dynamicCastClass();
          if (v26)
          {
            v27 = v26;
            if (v15 >= *(_QWORD *)(v19 + 16))
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              v28 = *(_QWORD *)(v19 + v17);
              v29 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
              v30 = *(os_unfair_lock_s **)(v26 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
              swift_retain();
              os_unfair_lock_lock(v30 + 4);
              swift_release();
              *(_QWORD *)(v27 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentPosition) = v28;
              v31 = *(os_unfair_lock_s **)(v27 + v29);
              swift_retain();
              os_unfair_lock_unlock(v31 + 4);
              swift_release();
              if (v22 == 7823737 && v21 == 0xE300000000000000)
              {
                swift_bridgeObjectRelease();
                v4 = v65;
                v19 = v70;
LABEL_15:
                sub_23A67529C(*(_QWORD *)(v19 + v17), 0, 0, 1, 0, 1);
                v33 = v66;
                v34 = v67;
                v35 = v68;
                (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v62, v68);
                sub_23A690690();
                v37 = v36;
                (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v35);
                if (fabs(v37) > 1.0)
                {
                  v38 = v59;
                  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v56, v59);
                  swift_bridgeObjectRetain();
                  v39 = sub_23A690CFC();
                  v40 = sub_23A691044();
                  if (os_log_type_enabled(v39, v40))
                  {
                    v41 = swift_slowAlloc();
                    v42 = swift_slowAlloc();
                    v73 = v42;
                    *(_DWORD *)v41 = v54;
                    *(_QWORD *)(v41 + 4) = sub_23A5EEB40(0xD000000000000047, v53, &v73);
                    *(_WORD *)(v41 + 12) = 2048;
                    *(_QWORD *)(v41 + 14) = *(_QWORD *)(v19 + v17);
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_23A5B0000, v39, v40, "%s Setting actuator start position to %f", (uint8_t *)v41, 0x16u);
                    swift_arrayDestroy();
                    MEMORY[0x23B853BD0](v42, -1, -1);
                    v43 = v41;
                    v4 = v65;
                    MEMORY[0x23B853BD0](v43, -1, -1);

                    (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v59);
                  }
                  else
                  {

                    swift_bridgeObjectRelease();
                    (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v38);
                  }
                  v44 = *(double *)(v19 + v17);
                  *(double *)(v4 + v58) = v44;
                  v45 = *(double *)(v4 + v57);
                  if (v45 != 0.0)
                  {
                    *(double *)(v4 + v58) = v44 + v45;
                    *(_QWORD *)(v4 + v57) = 0;
                  }
                }
              }
              else
              {
                v32 = sub_23A691518();
                swift_bridgeObjectRelease();
                v4 = v65;
                v19 = v70;
                if ((v32 & 1) != 0)
                  goto LABEL_15;
              }
            }
            if (v15 >= *(_QWORD *)(v69 + 16))
            {

            }
            else
            {
              v46 = *(_QWORD *)(v64 + 8 * v15);
              v47 = OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock;
              v48 = *(os_unfair_lock_s **)(v27 + OBJC_IVAR____TtC11DockKitCore8Actuator_allocatedLock);
              swift_retain();
              os_unfair_lock_lock(v48 + 4);
              swift_release();
              *(_QWORD *)(v27 + OBJC_IVAR____TtC11DockKitCore8Actuator__currentVelocity) = v46;
              v49 = *(os_unfair_lock_s **)(v27 + v47);
              v19 = v70;
              swift_retain();
              os_unfair_lock_unlock(v49 + 4);

              swift_release();
            }
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          v14 = v71;
          v13 = v72;
          goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_4:
      ++v15;
      v16 += 2;
      v17 += 8;
      if (v13 == v15)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v50 = v66;
  sub_23A6906CC();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v67 + 40))(v4 + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastFeedbackTime, v50, v68);
}

uint64_t sub_23A63FA98(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  int v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  unsigned __int16 v14;
  unsigned __int8 v15;

  v3 = sub_23A6906D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = TrajectoryCommand.Progress.init(nsdata:)(a1, (uint64_t)&v14);
  v8 = v14 | (v15 << 16);
  if ((v14 & 0xFF00) != 0x600)
  {
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11DockKitCore19ActuationController_lastTrajectoryProgress);
    v10 = OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_lock;
    v11 = *(os_unfair_lock_s **)(v9 + OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_lock);
    swift_retain();
    os_unfair_lock_lock(v11 + 4);
    swift_release();
    *(_BYTE *)(v9 + 18) = BYTE2(v8);
    *(_WORD *)(v9 + 16) = v8;
    sub_23A6906CC();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v9 + OBJC_IVAR____TtCV11DockKitCore17TrajectoryCommand15StampedProgress_stamp, v6, v3);
    v12 = *(os_unfair_lock_s **)(v9 + v10);
    swift_retain();
    os_unfair_lock_unlock(v12 + 4);
    return swift_release();
  }
  return result;
}

uint64_t _s11DockKitCore19ActuationControllerC12disconnected3errys5Error_pSg_tF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  v1 = sub_23A690D14();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC11DockKitCore19ActuationController_logger, v1);
  v5 = sub_23A690CFC();
  v6 = sub_23A691044();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_23A5B0000, v5, v6, "Actuation controller: got notification of disconnect", v7, 2u);
    MEMORY[0x23B853BD0](v7, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

unint64_t sub_23A63FCC0()
{
  unint64_t result;

  result = qword_2569A0338;
  if (!qword_2569A0338)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for ActuatorOccurrence, &type metadata for ActuatorOccurrence);
    atomic_store(result, (unint64_t *)&qword_2569A0338);
  }
  return result;
}

unint64_t sub_23A63FD08()
{
  unint64_t result;

  result = qword_2569A0340;
  if (!qword_2569A0340)
  {
    result = MEMORY[0x23B853B34](&protocol conformance descriptor for MotionModel, &type metadata for MotionModel);
    atomic_store(result, (unint64_t *)&qword_2569A0340);
  }
  return result;
}

uint64_t type metadata accessor for ActuatorFeedback()
{
  return objc_opt_self();
}

uint64_t method lookup function for ActuatorFeedback()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActuatorFeedback.__allocating_init(velocities:positions:timestamp:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ActuatorFeedback.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for ActuatorOccurrence()
{
  return &type metadata for ActuatorOccurrence;
}

ValueMetadata *type metadata accessor for MotionModel()
{
  return &type metadata for MotionModel;
}

uint64_t sub_23A63FDA8()
{
  return type metadata accessor for ActuationController();
}

uint64_t type metadata accessor for ActuationController()
{
  uint64_t result;

  result = qword_2569A0398;
  if (!qword_2569A0398)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23A63FDEC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23A690D14();
  if (v0 <= 0x3F)
  {
    sub_23A6906D8();
    if (v1 <= 0x3F)
    {
      sub_23A63FECC();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for ActuationController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActuationController.__allocating_init(accessory:id:motionModel:name:actuators:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

void sub_23A63FECC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2569A03A8)
  {
    v0 = sub_23A6909E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2569A03A8);
  }
}

uint64_t sub_23A63FF20()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_23A63FF4C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23A5F2890;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2569A03B0 + dword_2569A03B0))(v2, v3);
}

uint64_t sub_23A63FFB8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_23A63FFEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23A5F2890;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_2569A03D0 + dword_2569A03D0))(v2, v3, v4);
}

uint64_t sub_23A640060()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  _Block_release(*(const void **)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_23A64009C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (void *)v0[5];
  v6 = (void *)v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23A5F2890;
  return ((uint64_t (*)(int, uint64_t, uint64_t, void *, void *))((char *)&dword_2569A03F0 + dword_2569A03F0))(v2, v3, v4, v5, v6);
}

