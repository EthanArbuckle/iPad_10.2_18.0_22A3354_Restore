__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_0_0(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_0_1(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_7()
{
  return objc_opt_class();
}

uint64_t OUTLINED_FUNCTION_1_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)(a2 + 4) = a3;
  *(_WORD *)(a2 + 12) = 2114;
  *(_QWORD *)(a2 + 14) = result;
  return result;
}

void OUTLINED_FUNCTION_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x20u);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1BCCB94C8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1BCCB94D4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

__n128 __swift_memcpy153_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

void sub_1B8C6D0A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  (*(void (**)(void))(a14 + 16))();
  _Unwind_Resume(a1);
}

void sub_1B8C6D30C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1B8C6DD7C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1B8C6F4A0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id WKLogicalScreenClassString()
{
  void *v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_referenceBounds");
  v2 = v1;
  v4 = v3;

  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "sf_deviceSupportsDisplayZoom");

  if (v6)
  {
    v2 = WKStandardDisplayModeScreenSize();
    v4 = v7;
  }
  v8 = (void *)MGCopyAnswer();
  v9 = (void *)MEMORY[0x1E0CB3940];
  v10 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "scale");
  objc_msgSend(v10, "numberWithDouble:");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "lowercaseString");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "stringWithFormat:", CFSTR("%.0fw-%.0fh@%@x~%@"), *(_QWORD *)&v2, v4, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

double WKStandardDisplayModeScreenSize()
{
  if (WKStandardDisplayModeScreenSize_onceToken != -1)
    dispatch_once(&WKStandardDisplayModeScreenSize_onceToken, &__block_literal_global_2);
  return *(double *)&WKStandardDisplayModeScreenSize_standardDisplayModeScreenSize_0;
}

uint64_t WKSupportsLiveWallpapers()
{
  void *v1;
  char v2;

  if ((MGGetBoolAnswer() & 1) != 0)
    return 1;
  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "sf_isiPad");

  if ((v2 & 1) != 0)
    return 0;
  else
    return MGGetBoolAnswer();
}

id WKWallpapersBaseURL()
{
  if (WKWallpapersBaseURL_onceToken != -1)
    dispatch_once(&WKWallpapersBaseURL_onceToken, &__block_literal_global_21);
  return (id)WKWallpapersBaseURL_baseURL;
}

id WKAppleInternalWallpapersBaseURL()
{
  void *v0;
  int v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "sf_isInternalInstall");

  if (v1)
  {
    if (WKAppleInternalWallpapersBaseURL_onceToken != -1)
      dispatch_once(&WKAppleInternalWallpapersBaseURL_onceToken, &__block_literal_global_25);
    v2 = (id)WKAppleInternalWallpapersBaseURL_baseURL;
  }
  else
  {
    v2 = 0;
  }
  return v2;
}

double WKRotationDegreesForInterfaceOrientation(uint64_t a1)
{
  double result;

  switch(a1)
  {
    case 1:
      return 0.0;
    case 3:
      return 90.0;
    case 4:
      return -90.0;
  }
  result = 180.0;
  if (a1 != 2)
    return 0.0;
  return result;
}

double WKRotationRadiansForInterfaceOrientation(uint64_t a1)
{
  double result;

  switch(a1)
  {
    case 1:
      return 0.0;
    case 3:
      return 1.57079633;
    case 4:
      return -1.57079633;
  }
  result = 3.14159265;
  if (a1 != 2)
    return 0.0;
  return result;
}

__CFString *WKStringForInterfaceOrientation(uint64_t a1)
{
  __CFString *v1;
  const __CFString *v2;
  const __CFString *v3;
  const __CFString *v4;

  v1 = CFSTR("UIInterfaceOrientationPortrait");
  v2 = CFSTR("UIInterfaceOrientationLandscapeRight");
  v3 = CFSTR("UIInterfaceOrientationLandscapeLeft");
  v4 = CFSTR("UIInterfaceOrientationPortraitUpsideDown");
  if (a1 != 2)
    v4 = 0;
  if (a1 != 4)
    v3 = v4;
  if (a1 != 3)
    v2 = v3;
  if (a1 != 1)
    v1 = (__CFString *)v2;
  return v1;
}

void WKSetApplicationSpecificInformation(void *a1)
{
  char *v1;
  void *v2;
  id v3;

  v3 = objc_retainAutorelease(a1);
  v1 = strdup((const char *)objc_msgSend(v3, "UTF8String"));
  v2 = (void *)qword_1ED567768;
  qword_1ED567768 = (uint64_t)v1;
  if (v2)
    free(v2);

}

double WKPosterCanvasSize()
{
  void *v0;
  double v1;
  void *v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  CGFloat Height;
  CGFloat v13;
  CGFloat Width;
  CGRect v16;
  CGRect v17;

  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v0, "userInterfaceIdiom"))
    v1 = 119.0;
  else
    v1 = 64.0;

  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "fixedCoordinateSpace");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v16.origin.x = v5;
  v16.origin.y = v7;
  v16.size.width = v9;
  v16.size.height = v11;
  Height = CGRectGetHeight(v16);
  v13 = Height * Height;
  v17.origin.x = v5;
  v17.origin.y = v7;
  v17.size.width = v9;
  v17.size.height = v11;
  Width = CGRectGetWidth(v17);
  return round(sqrt(v13 + Width * Width)) + v1 * 2.0;
}

const __CFString *WKCurrentScreenScaleMode()
{
  double v0;
  double v1;
  double v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;

  v0 = WKStandardDisplayModeScreenSize();
  v2 = v1;
  objc_msgSend(MEMORY[0x1E0DC3BF8], "mainScreen");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fixedCoordinateSpace");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "bounds");
  v6 = v5;
  v8 = v7;

  objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v9, "sf_deviceSupportsDisplayZoom"))
  {

    return CFSTR("screenScaleModeStandard");
  }

  if (v0 == v6 && v2 == v8)
    return CFSTR("screenScaleModeStandard");
  if (v8 < v2 && v6 < v0)
    return CFSTR("screenScaleModeZoomed");
  else
    return CFSTR("screenScaleModeMoreSpace");
}

void sub_1B8C72F0C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t WKWallpaperTypeFromString(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Still")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Live")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Thumbnail")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("LayeredThumbnail")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("LayeredStill")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("LayeredStripe")) & 1) != 0)
  {
    v2 = 5;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Bokeh")) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("LayeredAnimation")) & 1) != 0)
  {
    v2 = 7;
  }
  else
  {
    v3 = (void *)MEMORY[0x1E0C99DA0];
    v4 = *MEMORY[0x1E0C99778];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s: Unable to resolve wallpaper type from string: '%@'"), "WKWallpaperType WKWallpaperTypeFromString(NSString *__strong _Nonnull)", v1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "exceptionWithName:reason:userInfo:", v4, v5, 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v6, "raise");
    v2 = -1;
  }

  return v2;
}

__CFString *WKStringFromWallpaperType(unint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  if (a1 < 8)
    return off_1E6EF9888[a1];
  v2 = (void *)MEMORY[0x1E0C99DA0];
  v3 = *MEMORY[0x1E0C99778];
  v4 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringWithFormat:", CFSTR("%s: Unknown wallpaper type value: '%@'"), "NSString * _Nonnull WKStringFromWallpaperType(WKWallpaperType)", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "exceptionWithName:reason:userInfo:", v3, v6, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "raise");
  return 0;
}

const __CFString *WKStringFromWallpaperBackingType(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  if (!a1)
    return CFSTR("File");
  if (a1 == 1)
    return CFSTR("Value");
  v2 = (void *)MEMORY[0x1E0C99DA0];
  v3 = *MEMORY[0x1E0C99778];
  v4 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringWithFormat:", CFSTR("%s: Invalid backing type value: '%@'"), "NSString * _Nonnull WKStringFromWallpaperBackingType(WKWallpaperBackingType)", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "exceptionWithName:reason:userInfo:", v3, v6, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "raise");
  return 0;
}

id WK_LocalizedString(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  WKBundleForWallpaperKitFramework();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "localizedStringForKey:value:table:", v1, 0, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id WKBundleForWallpaperKitFramework()
{
  if (WKBundleForWallpaperKitFramework_onceToken[0] != -1)
    dispatch_once(WKBundleForWallpaperKitFramework_onceToken, &__block_literal_global_6);
  return (id)WKBundleForWallpaperKitFramework__wallpaperKitFrameworkBundle;
}

void sub_1B8C74AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B8C75628(_Unwind_Exception *a1)
{
  __72__WKWallpaperRepresentingCollection_shouldLoadWallpaperCollectionAtURL___block_invoke();
  _Unwind_Resume(a1);
}

void sub_1B8C75988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B8C75FC8(_Unwind_Exception *a1)
{
  __68__WKWallpaperRepresentingCollection__loadCollectionMetadataWithURL___block_invoke();
  _Unwind_Resume(a1);
}

void WKRectApplyScale(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGAffineTransform v9;
  CGAffineTransform v10;
  CGRect v11;

  memset(&v10, 0, sizeof(v10));
  CGAffineTransformMakeScale(&v10, a5, a5);
  v9 = v10;
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  CGRectApplyAffineTransform(v11, &v9);
}

double WKSizeApplyScale(CGFloat a1, CGFloat a2, CGFloat a3)
{
  double v3;

  WKRectApplyScale(0.0, 0.0, a1, a2, a3);
  return v3;
}

double WKPointApplyScale(double a1, double a2, double a3)
{
  return a1 * a3;
}

BOOL WKFloatIsZero(double a1)
{
  return fabs(a1) < 2.22044605e-16;
}

BOOL WKFloatIsOne(double a1)
{
  return fabs(a1 + -1.0) < 2.22044605e-16;
}

BOOL WKFloatEqualToFloat(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 2.22044605e-16;
}

uint64_t WKSizeGreaterThanOrEqualToSize(double a1, double a2, double a3, double a4)
{
  double v4;
  _BOOL4 v6;

  v4 = vabdd_f64(a1, a3);
  if (a1 <= a3 && v4 >= 2.22044605e-16)
    return 0;
  v6 = vabdd_f64(a2, a4) < 2.22044605e-16;
  return a2 > a4 || v6;
}

double WKRectNormalize(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  return (a1 - a5) / a7;
}

void sub_1B8C76D64(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1B8C7810C(_Unwind_Exception *a1)
{
  __61__WKDefaultWallpaperManager__loadDefaultWallpaperInformation__block_invoke();
  _Unwind_Resume(a1);
}

void sub_1B8C78A18(_Unwind_Exception *a1)
{
  __32__WKBokehView__disableAnimation__block_invoke();
  _Unwind_Resume(a1);
}

void sub_1B8C78DE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1B8C79094(_Unwind_Exception *a1)
{
  __31__WKBokehView__enableAnimation__block_invoke();
  _Unwind_Resume(a1);
}

void sub_1B8C7992C(_Unwind_Exception *a1)
{
  __44__WKBokehView_thumbnailImageWithBokehInput___block_invoke();
  _Unwind_Resume(a1);
}

void sub_1B8C7A2B8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1B8C7AD6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1B8C7BB78(_Unwind_Exception *a1)
{
  __76__WKWallpaperRepresentingCollectionsManager__loadSystemWallpaperCollections__block_invoke();
  _Unwind_Resume(a1);
}

void sub_1B8C7D0FC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1B8C7E594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B8C7EB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B8C7EEC8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1B8C7F8A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, char a18)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a18, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_1B8C7FA5C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1B8C7FBF4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1B8C80458(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1B8C80CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B8C80FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id WKLogForCategory(unint64_t a1)
{
  if (a1 >= 0xA)
    WKLogForCategory_cold_1();
  if (WKLogForCategory_loggingToken != -1)
    dispatch_once(&WKLogForCategory_loggingToken, &__block_literal_global_12);
  return (id)WKLogForCategory_logObjects[a1];
}

void sub_1B8C8215C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t WKBokehWallpaper.wallpaperValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKBokehWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 3;
  return result;
}

id WKBokehWallpaper.identifier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

uint64_t WKBokehWallpaper.name.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_name);
}

id WKBokehWallpaper.type.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_type);
}

id WKBokehWallpaper.representedType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_representedType);
}

id WKBokehWallpaper.backingType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backingType);
}

uint64_t WKBokehWallpaper.thumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_thumbnailImageURL);
  if (v3)
  {
    v4 = v3;
    sub_1B8CE0E04();

    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id WKBokehWallpaper.thumbnailImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

id WKBokehWallpaper.supportsSerialization.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsSerialization);
}

id WKBokehWallpaper.supportsCopying.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

uint64_t WKBokehWallpaper.init(identifier:name:backgroundColors:bubbleColors:bubbleCount:bubbleScale:parallaxMultiplier:thumbnailSeed:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t result;

  v12 = objc_allocWithZone((Class)WKBokehWallpaper);
  v13 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  sub_1B8C82740();
  v14 = (void *)sub_1B8CE1524();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1B8CE1524();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v12, sel_initWithIdentifier_name_backgroundColors_bubbleColors_bubbleCount_bubbleScale_parallaxMultiplier_thumbnailSeed_, a1, v13, v14, v15, a2, a3, a5, a6);

  type metadata accessor for WKBokehWallpaper.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v16;
  *a4 = result;
  return result;
}

unint64_t sub_1B8C82740()
{
  unint64_t result;

  result = qword_1EF1D3AE0;
  if (!qword_1EF1D3AE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF1D3AE0);
  }
  return result;
}

uint64_t type metadata accessor for WKBokehWallpaper.ImplementationWrapper()
{
  return objc_opt_self();
}

Swift::OpaquePointer_optional __swiftcall WKBokehWallpaper.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id WKBokehWallpaper.copyWallpaperContents(to:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE0DEC();
  v6[0] = 0;
  v3 = objc_msgSend(v1, sel_copyWallpaperContentsToDestinationDirectoryURL_error_, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B8CE0DBC();

  return (id)swift_willThrow();
}

uint64_t sub_1B8C828E0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1B8C82904@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKBokehWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 3;
  return result;
}

id sub_1B8C82964()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

uint64_t sub_1B8C82978(uint64_t a1, uint64_t a2)
{
  return sub_1B8C82E58(a1, a2, (SEL *)&selRef_name);
}

id sub_1B8C82984()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_type);
}

id sub_1B8C82998()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_representedType);
}

id sub_1B8C829AC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backingType);
}

id sub_1B8C829C0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsSerialization);
}

id sub_1B8C829E4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

uint64_t sub_1B8C82A08()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B8CE144C();

  return v3;
}

id sub_1B8C82A78()
{
  return WKBokehWallpaper.copyWallpaperContents(to:)();
}

uint64_t sub_1B8C82A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_thumbnailImageURL);
  if (v3)
  {
    v4 = v3;
    sub_1B8CE0E04();

    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id sub_1B8C82B14()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

id sub_1B8C82B3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_identifier);
  *a1 = result;
  return result;
}

id static WKBokehWallpaper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

id sub_1B8C82B9C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKBokehWallpaper.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKBokehWallpaper.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t sub_1B8C82C70()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t sub_1B8C82CCC()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t sub_1B8C82D18()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKBokehWallpaper.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

uint64_t sub_1B8C82D7C(SEL *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), *a1);
  v3 = sub_1B8CE14B8();

  return v3;
}

unint64_t sub_1B8C82DD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1B8C82DF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B8C82DF8()
{
  unint64_t result;

  result = qword_1ED565618;
  if (!qword_1ED565618)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKBokehWallpaper, &type metadata for WKBokehWallpaper);
    atomic_store(result, (unint64_t *)&qword_1ED565618);
  }
  return result;
}

uint64_t sub_1B8C82E3C()
{
  return MEMORY[0x1E0DEB428];
}

uint64_t sub_1B8C82E4C(uint64_t a1, uint64_t a2)
{
  return sub_1B8C82E58(a1, a2, (SEL *)&selRef_description);
}

uint64_t sub_1B8C82E58(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*(id *)(*(_QWORD *)v3 + 16), *a3);
  v5 = sub_1B8CE14B8();

  return v5;
}

ValueMetadata *type metadata accessor for WKBokehWallpaper()
{
  return &type metadata for WKBokehWallpaper;
}

uint64_t initializeBufferWithCopyOfBuffer for WKLayeredAnimationWallpaperPosterForeground(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1B8C82EEC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1B8C82F0C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1B8C83BE0(a1, &qword_1ED566C90);
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
  sub_1B8C83BE0(a1, (unint64_t *)&unk_1EF1D3CD8);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_1B8C83BE0(a1, (unint64_t *)&unk_1ED566C80);
}

void type metadata accessor for WKWallpaperLocation(uint64_t a1)
{
  sub_1B8C83BE0(a1, &qword_1EF1D3CE8);
}

void type metadata accessor for WKWallpaperAppearance(uint64_t a1)
{
  sub_1B8C83BE0(a1, &qword_1EF1D3CF0);
}

void type metadata accessor for WKWallpaperKitError(uint64_t a1)
{
  sub_1B8C83BE0(a1, (unint64_t *)&unk_1EF1D3CF8);
}

uint64_t sub_1B8C82FB0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1B8C82FD0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1B8C83BE0(a1, &qword_1ED5674B0);
}

uint64_t sub_1B8C8300C(uint64_t a1, uint64_t a2)
{
  return sub_1B8C83C7C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1B8C83024()
{
  sub_1B8C83740(&qword_1EF1D3D50, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE3F68);
  return sub_1B8CE18B4();
}

uint64_t sub_1B8C83064()
{
  sub_1B8C83740(&qword_1EF1D3D50, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE3F68);
  return sub_1B8CE18A8();
}

uint64_t sub_1B8C830A8()
{
  sub_1B8C83740((unint64_t *)&qword_1EF1D41B0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE437C);
  return sub_1B8CE0D68();
}

id sub_1B8C830E8()
{
  id *v0;

  return *v0;
}

uint64_t sub_1B8C830F0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1B8C83100(uint64_t a1, uint64_t a2)
{
  return sub_1B8C83C7C(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1B8C8310C(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1B8CE14A0();
  *a2 = 0;
  return result;
}

uint64_t sub_1B8C83180(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1B8CE14AC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1B8C831FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1B8CE14B8();
  v2 = sub_1B8CE1494();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1B8C83240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B8CE14B8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B8C83268(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_1B8C83270(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_1B8C8327C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1B8C83290(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1B8C832C0(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1B8C832D4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_1B8C832E8()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t sub_1B8C8332C()
{
  return sub_1B8CE18E4();
}

uint64_t sub_1B8C83354()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t sub_1B8C83394()
{
  return sub_1B8CE14B8();
}

uint64_t sub_1B8C833A4()
{
  sub_1B8C83740((unint64_t *)&qword_1EF1D41B0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE437C);
  return sub_1B8CE0DA4();
}

uint64_t sub_1B8C833E4()
{
  sub_1B8C83740((unint64_t *)&qword_1EF1D41B0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE437C);
  return sub_1B8CE0D80();
}

uint64_t sub_1B8C83424(void *a1)
{
  id v2;

  sub_1B8C83740((unint64_t *)&qword_1EF1D41B0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE437C);
  v2 = a1;
  return sub_1B8CE0D74();
}

uint64_t sub_1B8C83488()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1B8CE1650();

  return v2;
}

uint64_t sub_1B8C834BC()
{
  sub_1B8C83740((unint64_t *)&qword_1EF1D41B0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE437C);
  return sub_1B8CE0D98();
}

uint64_t sub_1B8C8350C()
{
  sub_1B8CE18D8();
  sub_1B8CE1470();
  return sub_1B8CE1908();
}

_QWORD *sub_1B8C83568@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

_QWORD *sub_1B8C8357C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1B8C83588()
{
  sub_1B8C83740(&qword_1EF1D3D90, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperLocation, (uint64_t)&unk_1B8CE42F4);
  sub_1B8C83740(&qword_1EF1D3D98, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperLocation, (uint64_t)&unk_1B8CE4128);
  return sub_1B8CE1824();
}

uint64_t sub_1B8C8360C()
{
  sub_1B8C83740(&qword_1EF1D3DA0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperAppearance, (uint64_t)&unk_1B8CE4338);
  sub_1B8C83740(&qword_1EF1D3DA8, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperAppearance, (uint64_t)&unk_1B8CE4014);
  return sub_1B8CE1824();
}

uint64_t sub_1B8C83690()
{
  sub_1B8C83740((unint64_t *)&qword_1EF1D41B0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE437C);
  return sub_1B8CE0D8C();
}

uint64_t sub_1B8C836E8()
{
  return sub_1B8C83740(&qword_1EF1D3D08, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE3E80);
}

uint64_t sub_1B8C83714()
{
  return sub_1B8C83740(&qword_1EF1D3D10, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE3EAC);
}

uint64_t sub_1B8C83740(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCB94E0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8C83780()
{
  return sub_1B8C83740(&qword_1EF1D3D18, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperAppearance, (uint64_t)&unk_1B8CE3FD8);
}

uint64_t sub_1B8C837AC()
{
  return sub_1B8C83740(&qword_1EF1D3D20, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperAppearance, (uint64_t)&unk_1B8CE3FAC);
}

uint64_t sub_1B8C837D8()
{
  return sub_1B8C83740(&qword_1EF1D3D28, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperLocation, (uint64_t)&unk_1B8CE40EC);
}

uint64_t sub_1B8C83804()
{
  return sub_1B8C83740(&qword_1EF1D3D30, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperLocation, (uint64_t)&unk_1B8CE40C0);
}

uint64_t sub_1B8C83830()
{
  return sub_1B8C83740(&qword_1EF1D3D38, (uint64_t (*)(uint64_t))type metadata accessor for UIInterfaceOrientation, (uint64_t)&unk_1B8CE4224);
}

uint64_t sub_1B8C8385C()
{
  return sub_1B8C83740(&qword_1EF1D3D40, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperLocation, (uint64_t)&unk_1B8CE415C);
}

uint64_t sub_1B8C83888()
{
  return sub_1B8C83740(&qword_1EF1D3D48, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperAppearance, (uint64_t)&unk_1B8CE4048);
}

uint64_t sub_1B8C838B4()
{
  return sub_1B8C83740(&qword_1EF1D3D50, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE3F68);
}

uint64_t sub_1B8C838E0()
{
  return sub_1B8C83740(&qword_1EF1D3D58, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE3F34);
}

uint64_t sub_1B8C8390C()
{
  return sub_1B8C83740(&qword_1EF1D3D60, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE3EF0);
}

uint64_t sub_1B8C83938()
{
  return sub_1B8C83740(&qword_1EF1D3D68, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1B8CE4424);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1B8C83BE0(a1, (unint64_t *)&unk_1EF1D3E20);
}

uint64_t sub_1B8C83978()
{
  return sub_1B8C83740(&qword_1EF1D3D70, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1B8CE43E8);
}

unint64_t sub_1B8C839A8()
{
  unint64_t result;

  result = qword_1EF1D3D78;
  if (!qword_1EF1D3D78)
  {
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EF1D3D78);
  }
  return result;
}

uint64_t sub_1B8C839EC()
{
  return sub_1B8C83740((unint64_t *)&unk_1EF1D3D80, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1B8CE4460);
}

uint64_t sub_1B8C83A18()
{
  return sub_1B8C83740((unint64_t *)&qword_1EF1D41B0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitError, (uint64_t)&unk_1B8CE437C);
}

BOOL sub_1B8C83A44(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1B8C83A58()
{
  sub_1B8C83740(&qword_1EF1D3E70, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperRepresentingLogicalScreenClass, (uint64_t)&unk_1B8CE45CC);
  sub_1B8C83740(&qword_1EF1D3E78, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperRepresentingLogicalScreenClass, (uint64_t)&unk_1B8CE456C);
  return sub_1B8CE1824();
}

uint64_t sub_1B8C83ADC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B8CE1494();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1B8C83B20()
{
  sub_1B8C83740((unint64_t *)&qword_1EF1D3E60, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitDataKey, (uint64_t)&unk_1B8CE4770);
  sub_1B8C83740(&qword_1EF1D3E68, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitDataKey, (uint64_t)&unk_1B8CE46C4);
  return sub_1B8CE1824();
}

void type metadata accessor for WKWallpaperKitDataKey(uint64_t a1)
{
  sub_1B8C83BE0(a1, (unint64_t *)&unk_1EF1D3E10);
}

void type metadata accessor for WKWallpaperRepresentingLogicalScreenClass(uint64_t a1)
{
  sub_1B8C83BE0(a1, &qword_1ED565568);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1B8C83BE0(a1, (unint64_t *)&unk_1ED566CA8);
}

void sub_1B8C83BE0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1B8C83C24()
{
  return sub_1B8C83740(&qword_1EF1D3E30, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperRepresentingLogicalScreenClass, (uint64_t)&unk_1B8CE4530);
}

uint64_t sub_1B8C83C50()
{
  return sub_1B8C83740(&qword_1EF1D3E38, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperRepresentingLogicalScreenClass, (uint64_t)&unk_1B8CE4504);
}

uint64_t sub_1B8C83C7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1B8CE14B8();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B8C83CB8()
{
  sub_1B8CE14B8();
  sub_1B8CE14D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8C83CF8()
{
  uint64_t v0;

  sub_1B8CE14B8();
  sub_1B8CE18D8();
  sub_1B8CE14D0();
  v0 = sub_1B8CE1908();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B8C83D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1B8CE14B8();
  v2 = v1;
  if (v0 == sub_1B8CE14B8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1B8CE1890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1B8C83DF0()
{
  return sub_1B8C83740(&qword_1EF1D3E40, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperRepresentingLogicalScreenClass, (uint64_t)&unk_1B8CE45A0);
}

uint64_t sub_1B8C83E1C()
{
  return sub_1B8C83740(&qword_1EF1D3E48, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitDataKey, (uint64_t)&unk_1B8CE4688);
}

uint64_t sub_1B8C83E48()
{
  return sub_1B8C83740(&qword_1EF1D3E50, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitDataKey, (uint64_t)&unk_1B8CE465C);
}

uint64_t sub_1B8C83E74()
{
  return sub_1B8C83740(&qword_1EF1D3E58, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperKitDataKey, (uint64_t)&unk_1B8CE46F8);
}

uint64_t sub_1B8C83ED4()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *@<X8>);
  uint64_t v6;
  _QWORD *v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  id v12;
  void *v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  id v28;
  uint64_t result;
  id v30;
  _QWORD *v31;

  v1 = objc_msgSend(v0, sel_elements);
  if (!v1)
    goto LABEL_29;
  v2 = v1;
  v3 = sub_1B8CE1530();

  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    v5 = 0;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_25:
    sub_1B8C84210((uint64_t)v5);
    return (uint64_t)v7;
  }
  v5 = 0;
  v6 = v3 + 32;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v8 = (unint64_t *)&unk_1ED565548;
  while (1)
  {
    sub_1B8C841D4(v6, (uint64_t)&v31);
    sub_1B8C84230(0, v8);
    if (!swift_dynamicCast())
      goto LABEL_8;
    v11 = v8;
    v12 = objc_msgSend(v30, sel_target);
    if (!v12)
      goto LABEL_28;
    v13 = v12;
    v14 = v30;
    sub_1B8C84210((uint64_t)v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = v7;
    v17 = sub_1B8C9C5F8((uint64_t)v13);
    v18 = v7[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      break;
    v21 = v16;
    if (v7[3] >= v20)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1B8C9F65C();
    }
    else
    {
      sub_1B8C9C864(v20, isUniquelyReferenced_nonNull_native);
      sub_1B8C84230(0, (unint64_t *)&unk_1ED565570);
      v22 = sub_1B8C9C5F8((uint64_t)v13);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_30;
      v17 = v22;
    }
    v7 = v31;
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v7[(v17 >> 6) + 8] |= 1 << v17;
      v24 = 8 * v17;
      *(_QWORD *)(v7[6] + v24) = v13;
      *(_QWORD *)(v7[7] + v24) = MEMORY[0x1E0DEE9D8];
      v25 = v7[2];
      v26 = v25 + 1;
      v27 = __OFADD__(v25, 1);
      swift_bridgeObjectRetain();
      if (v27)
        goto LABEL_27;
      v7[2] = v26;
      v28 = v13;
    }
    v9 = v7[7];
    v10 = swift_bridgeObjectRelease();
    MEMORY[0x1BCCB8868](v10);
    if (*(_QWORD *)((*(_QWORD *)(v9 + 8 * v17) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v9 + 8 * v17) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      sub_1B8CE1548();
    sub_1B8CE1554();
    sub_1B8CE153C();

    v5 = sub_1B8C84220;
    v8 = v11;
LABEL_8:
    v6 += 32;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  result = sub_1B8CE189C();
  __break(1u);
  return result;
}

uint64_t sub_1B8C841D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B8C84210(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_1B8C84220(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1B8C84230(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t dispatch thunk of WKWallpaperPosterRendererDelegate.renderer(_:didInitialize:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of WKWallpaperPosterRendererDelegate.renderer(_:didUpdate:with:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of WKWallpaperPosterRendererDelegate.rendererDidInvalidate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t WKLayeredStillWallpaperInput.backgroundThumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_backgroundThumbnailImageURL, a1);
}

uint64_t WKLayeredStillWallpaperInput.foregroundThumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_foregroundThumbnailImageURL, a1);
}

uint64_t WKLayeredStillWallpaperInput.floatingThumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_floatingThumbnailImageURL, a1);
}

uint64_t WKLayeredStillWallpaperInput.backgroundFullSizeImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_backgroundFullSizeImageURL, a1);
}

uint64_t WKLayeredStillWallpaperInput.foregroundFullSizeImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_foregroundFullSizeImageURL, a1);
}

uint64_t WKLayeredStillWallpaperInput.floatingFullSizeImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_floatingFullSizeImageURL, a1);
}

uint64_t sub_1B8C842C8@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*(id *)(*(_QWORD *)v2 + 16), *a1);
  if (v4)
  {
    v5 = v4;
    sub_1B8CE0E04();

    v6 = sub_1B8CE0E1C();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
  }
  else
  {
    v6 = sub_1B8CE0E1C();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

uint64_t WKLayeredStillWallpaperInput.init(backgroundThumbnailImageURL:foregroundThumbnailImageURL:floatingThumbnailImageURL:backgroundFullSizeImageURL:foregroundFullSizeImageURL:floatingFullSizeImageURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v32 = a3;
  v33 = a1;
  v34 = a7;
  v35 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v11 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v32 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v32 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v32 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v32 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v32 - v26;
  sub_1B8C84538(a1, (uint64_t)&v32 - v26);
  sub_1B8C84538(v35, (uint64_t)v25);
  v28 = v32;
  sub_1B8C84538(v32, (uint64_t)v22);
  sub_1B8C84538(a4, (uint64_t)v19);
  sub_1B8C84538(a5, (uint64_t)v16);
  sub_1B8C84538(a6, (uint64_t)v13);
  v29 = objc_allocWithZone((Class)WKLayeredStillWallpaperInput);
  v30 = sub_1B8C84704((uint64_t)v27, (uint64_t)v25, (uint64_t)v22, (uint64_t)v19, (uint64_t)v16, (uint64_t)v13);
  sub_1B8C8491C(a6);
  sub_1B8C8491C(a5);
  sub_1B8C8491C(a4);
  sub_1B8C8491C(v28);
  sub_1B8C8491C(v35);
  sub_1B8C8491C(v33);
  type metadata accessor for WKLayeredStillWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v30;
  *v34 = result;
  return result;
}

uint64_t sub_1B8C84538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id static WKLayeredStillWallpaperInput.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKLayeredStillWallpaperInput.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKLayeredStillWallpaperInput.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKLayeredStillWallpaperInput.description.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_description);
  v2 = sub_1B8CE14B8();

  return v2;
}

uint64_t sub_1B8C846AC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_description);
  v2 = sub_1B8CE14B8();

  return v2;
}

id sub_1B8C84704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v23;

  v11 = sub_1B8CE0E1C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v14 = 0;
  if (v13(a1, 1, v11) != 1)
  {
    v14 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  }
  if (v13(a2, 1, v11) == 1)
  {
    v15 = 0;
  }
  else
  {
    v15 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
  }
  if (v13(a3, 1, v11) == 1)
  {
    v16 = 0;
  }
  else
  {
    v16 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v11);
  }
  if (v13(a4, 1, v11) == 1)
  {
    v17 = 0;
  }
  else
  {
    v17 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a4, v11);
  }
  if (v13(a5, 1, v11) == 1)
  {
    v18 = 0;
  }
  else
  {
    v18 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a5, v11);
  }
  if (v13(a6, 1, v11) == 1)
  {
    v19 = 0;
  }
  else
  {
    v19 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a6, v11);
  }
  v20 = objc_msgSend(v23, sel_initWithBackgroundThumbnailImageURL_foregroundThumbnailImageURL_floatingThumbnailImageURL_backgroundFullSizeImageURL_foregroundFullSizeImageURL_floatingFullSizeImageURL_, v14, v15, v16, v17, v18, v19, a6);

  return v20;
}

uint64_t sub_1B8C8491C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for WKLayeredStillWallpaperInput.ImplementationWrapper()
{
  return objc_opt_self();
}

unint64_t sub_1B8C84980()
{
  unint64_t result;

  result = qword_1EF1D4000;
  if (!qword_1EF1D4000)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredStillWallpaperInput, &type metadata for WKLayeredStillWallpaperInput);
    atomic_store(result, (unint64_t *)&qword_1EF1D4000);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredStillWallpaperInput()
{
  return &type metadata for WKLayeredStillWallpaperInput;
}

uint64_t *sub_1B8C849D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B8CE0E58();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = a3[8];
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    v12 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    v13 = v11;
  }
  return a1;
}

void sub_1B8C84A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_1B8C84AD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;

  v6 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v11 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = v10;
  return a1;
}

uint64_t sub_1B8C84B64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1B8C84C08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  return a1;
}

uint64_t sub_1B8C84C94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v6 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  v10 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1B8C84D2C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8C84D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1B8CE0E58();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B8C84DB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8C84DC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1B8CE0E58();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WKPosterDynamicRotationAnimationState()
{
  uint64_t result;

  result = qword_1ED565008;
  if (!qword_1ED565008)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8C84E74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8CE0E58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_BYTE *WKPosterUnlockState.init(screenState:progress:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(_BYTE *)a2 = *result;
  *(double *)(a2 + 8) = a3;
  return result;
}

void static WKPosterUnlockState.deviceLocked.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
}

void static WKPosterUnlockState.deviceUnlocked.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 0x3FF0000000000000;
}

void WKPosterUnlockState.screenState.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

double WKPosterUnlockState.progress.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

BOOL static WKPosterUnlockState.ScreenState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL sub_1B8C84F58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL static WKPosterUnlockState.== infix(_:_:)(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
}

BOOL sub_1B8C84F98(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
}

uint64_t WKPosterUnlockState.ScreenState.description.getter()
{
  char *v0;

  return *(_QWORD *)&aLocked_1[8 * *v0];
}

unint64_t WKPosterUnlockState.description.getter()
{
  sub_1B8CE1704();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  sub_1B8CE1560();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  return 0xD000000000000023;
}

uint64_t WKPosterUnlockState.ScreenState.hash(into:)()
{
  return sub_1B8CE18E4();
}

uint64_t WKPosterUnlockState.ScreenState.hashValue.getter()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t sub_1B8C85148()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t sub_1B8C8518C()
{
  return sub_1B8CE18E4();
}

uint64_t sub_1B8C851B4()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKPosterUnlockState.hash(into:)()
{
  sub_1B8CE18E4();
  return sub_1B8CE18FC();
}

uint64_t WKPosterUnlockState.hashValue.getter()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  sub_1B8CE18FC();
  return sub_1B8CE1908();
}

uint64_t sub_1B8C85298()
{
  sub_1B8CE18E4();
  return sub_1B8CE18FC();
}

uint64_t sub_1B8C852D8()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  sub_1B8CE18FC();
  return sub_1B8CE1908();
}

unint64_t sub_1B8C85338()
{
  unint64_t result;

  result = qword_1EF1D4008;
  if (!qword_1EF1D4008)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKPosterUnlockState.ScreenState, &type metadata for WKPosterUnlockState.ScreenState);
    atomic_store(result, (unint64_t *)&qword_1EF1D4008);
  }
  return result;
}

unint64_t sub_1B8C85380()
{
  unint64_t result;

  result = qword_1EF1D4010;
  if (!qword_1EF1D4010)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKPosterUnlockState, &type metadata for WKPosterUnlockState);
    atomic_store(result, (unint64_t *)&qword_1EF1D4010);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WKPosterUnlockState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[16])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WKPosterUnlockState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKPosterUnlockState()
{
  return &type metadata for WKPosterUnlockState;
}

uint64_t getEnumTagSinglePayload for WKPosterUnlockState.ScreenState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WKPosterUnlockState.ScreenState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8C85534 + 4 * byte_1B8CE4945[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8C85568 + 4 * asc_1B8CE4940[v4]))();
}

uint64_t sub_1B8C85568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8C85570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8C85578);
  return result;
}

uint64_t sub_1B8C85584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8C8558CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8C85590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8C85598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8C855A4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1B8C855B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for WKPosterUnlockState.ScreenState()
{
  return &type metadata for WKPosterUnlockState.ScreenState;
}

_QWORD *sub_1B8C855C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v30 = a2;
    v31 = a3;
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    v14 = *((_QWORD *)v11 + 2);
    v15 = *((_QWORD *)v11 + 3);
    v16 = *((_QWORD *)v11 + 4);
    v17 = *((_QWORD *)v11 + 5);
    v19 = *((_QWORD *)v11 + 6);
    v18 = (void *)*((_QWORD *)v11 + 7);
    v23 = *((_QWORD *)v11 + 8);
    v24 = *((_QWORD *)v11 + 9);
    v25 = *((_QWORD *)v11 + 10);
    v26 = *((_QWORD *)v11 + 11);
    v27 = *((_QWORD *)v11 + 12);
    v28 = *((_QWORD *)v11 + 13);
    v29 = v11[112];
    sub_1B8C85798(*(_QWORD *)v11, v13, v14, v15, v16, v17, v19, v18, v23, v24, v25, v26, v27, v28, v29);
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    *((_QWORD *)v10 + 2) = v14;
    *((_QWORD *)v10 + 3) = v15;
    *((_QWORD *)v10 + 4) = v16;
    *((_QWORD *)v10 + 5) = v17;
    *((_QWORD *)v10 + 6) = v19;
    *((_QWORD *)v10 + 7) = v18;
    *((_QWORD *)v10 + 8) = v23;
    *((_QWORD *)v10 + 9) = v24;
    *((_QWORD *)v10 + 10) = v25;
    *((_QWORD *)v10 + 11) = v26;
    *((_QWORD *)v10 + 12) = v27;
    *((_QWORD *)v10 + 13) = v28;
    v10[112] = v29;
    v20 = *(int *)(v31 + 24);
    v21 = *(_OWORD *)((char *)v30 + v20 + 24);
    *(_OWORD *)((char *)a1 + v20 + 24) = v21;
    (**(void (***)(void))(v21 - 8))();
  }
  return a1;
}

id sub_1B8C85798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if ((a15 & 1) == 0)
    return (id)swift_retain();
  swift_retain();
  return a8;
}

uint64_t sub_1B8C857D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1B8CE0F84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_1B8C85880(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(void **)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_BYTE *)(v5 + 112));
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
}

uint64_t sub_1B8C85880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if ((a15 & 1) != 0)

  return swift_release();
}

_QWORD *sub_1B8C858B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B8CE0F84();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v29 = a2;
  v30 = a3;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v14 = *((_QWORD *)v9 + 4);
  v15 = *((_QWORD *)v9 + 5);
  v17 = *((_QWORD *)v9 + 6);
  v16 = (void *)*((_QWORD *)v9 + 7);
  v28 = a1;
  v18 = *((_QWORD *)v9 + 8);
  v22 = *((_QWORD *)v9 + 9);
  v23 = *((_QWORD *)v9 + 10);
  v24 = *((_QWORD *)v9 + 11);
  v25 = *((_QWORD *)v9 + 12);
  v26 = *((_QWORD *)v9 + 13);
  v27 = v9[112];
  sub_1B8C85798(*(_QWORD *)v9, v11, v12, v13, v14, v15, v17, v16, v18, v22, v23, v24, v25, v26, v27);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  *((_QWORD *)v8 + 3) = v13;
  *((_QWORD *)v8 + 4) = v14;
  *((_QWORD *)v8 + 5) = v15;
  *((_QWORD *)v8 + 6) = v17;
  *((_QWORD *)v8 + 7) = v16;
  *((_QWORD *)v8 + 8) = v18;
  *((_QWORD *)v8 + 9) = v22;
  *((_QWORD *)v8 + 10) = v23;
  *((_QWORD *)v8 + 11) = v24;
  *((_QWORD *)v8 + 12) = v25;
  *((_QWORD *)v8 + 13) = v26;
  v8[112] = v27;
  v19 = *(int *)(v30 + 24);
  v20 = *(_OWORD *)((char *)v29 + v19 + 24);
  *(_OWORD *)((char *)v28 + v19 + 24) = v20;
  (**(void (***)(void))(v20 - 8))();
  return v28;
}

_QWORD *sub_1B8C85A54(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;

  if (a1 != a2)
  {
    sub_1B8C85C20((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v40 = a2;
  v41 = a3;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v14 = *((_QWORD *)v9 + 4);
  v15 = *((_QWORD *)v9 + 5);
  v17 = *((_QWORD *)v9 + 6);
  v16 = (void *)*((_QWORD *)v9 + 7);
  v39 = a1;
  v18 = *((_QWORD *)v9 + 8);
  v33 = *((_QWORD *)v9 + 9);
  v34 = *((_QWORD *)v9 + 10);
  v35 = *((_QWORD *)v9 + 11);
  v36 = *((_QWORD *)v9 + 12);
  v37 = *((_QWORD *)v9 + 13);
  v38 = v9[112];
  sub_1B8C85798(*(_QWORD *)v9, v11, v12, v13, v14, v15, v17, v16, v18, v33, v34, v35, v36, v37, v38);
  v19 = *(_QWORD *)v8;
  v20 = *((_QWORD *)v8 + 1);
  v21 = *((_QWORD *)v8 + 2);
  v22 = *((_QWORD *)v8 + 3);
  v23 = *((_QWORD *)v8 + 4);
  v24 = *((_QWORD *)v8 + 5);
  v25 = *((_QWORD *)v8 + 6);
  v26 = (void *)*((_QWORD *)v8 + 7);
  v27 = *((_OWORD *)v8 + 4);
  v28 = *((_OWORD *)v8 + 5);
  v29 = *((_QWORD *)v8 + 12);
  v30 = *((_QWORD *)v8 + 13);
  v31 = v8[112];
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  *((_QWORD *)v8 + 3) = v13;
  *((_QWORD *)v8 + 4) = v14;
  *((_QWORD *)v8 + 5) = v15;
  *((_QWORD *)v8 + 6) = v17;
  *((_QWORD *)v8 + 7) = v16;
  *((_QWORD *)v8 + 8) = v18;
  *((_QWORD *)v8 + 9) = v33;
  *((_QWORD *)v8 + 10) = v34;
  *((_QWORD *)v8 + 11) = v35;
  *((_QWORD *)v8 + 12) = v36;
  *((_QWORD *)v8 + 13) = v37;
  v8[112] = v38;
  sub_1B8C85880(v19, v20, v21, v22, v23, v24, v25, v26, v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, v30, v31);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)v39 + *(int *)(v41 + 24)), (_QWORD *)((char *)v40 + *(int *)(v41 + 24)));
  return v39;
}

uint64_t sub_1B8C85C20(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1B8C85C60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  char *v17;
  __int128 v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B8CE0F84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  v10[112] = v11[112];
  v12 = *((_OWORD *)v11 + 6);
  v13 = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 6) = v12;
  v14 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v14;
  v15 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v15;
  *((_OWORD *)v10 + 4) = v13;
  v16 = &a1[v9];
  v17 = &a2[v9];
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  return a1;
}

char *sub_1B8C85D48(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;

  if (a1 != a2)
  {
    sub_1B8C85C20((uint64_t)a1);
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[112];
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  v14 = *((_QWORD *)v9 + 2);
  v15 = *((_QWORD *)v9 + 3);
  v16 = *((_QWORD *)v9 + 4);
  v17 = *((_QWORD *)v9 + 5);
  v18 = *((_QWORD *)v9 + 6);
  v19 = (void *)*((_QWORD *)v9 + 7);
  v20 = *((_OWORD *)v9 + 4);
  v21 = *((_OWORD *)v9 + 5);
  v22 = *((_QWORD *)v9 + 12);
  v23 = *((_QWORD *)v9 + 13);
  v24 = v9[112];
  v25 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v25;
  v26 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v26;
  v27 = *((_OWORD *)v10 + 5);
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  *((_OWORD *)v9 + 5) = v27;
  *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
  v9[112] = v11;
  sub_1B8C85880(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  v28 = *(int *)(a3 + 24);
  v29 = &a1[v28];
  v30 = &a2[v28];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v28]);
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
  return a1;
}

uint64_t sub_1B8C85E80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8C85E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B8C85F10()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8C85F1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WKStripesWallpaperPosterOverlay()
{
  uint64_t result;

  result = qword_1ED566F98;
  if (!qword_1ED566F98)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8C85FD8()
{
  unint64_t v0;

  sub_1B8C86054();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B8C86054()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED567180)
  {
    sub_1B8CE0F84();
    v0 = sub_1B8CE0F90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED567180);
  }
}

uint64_t sub_1B8C860A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8C860B8()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5657D0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE4AF0;
  if (qword_1ED5656B8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = MEMORY[0x1BCCB85E0]((id)qword_1ED56B9B0);
  if (qword_1ED5656E0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = MEMORY[0x1BCCB85E0]((id)qword_1ED56B9C8);
  if (qword_1ED5656C8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 48) = MEMORY[0x1BCCB85E0]((id)qword_1ED56B9B8);
  if (qword_1ED5656A0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1BCCB85E0]((id)qword_1ED56B9A0);
  if (qword_1ED5656D8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 64) = MEMORY[0x1BCCB85E0]((id)qword_1ED56B9C0);
  if (qword_1ED5656B0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 72) = MEMORY[0x1BCCB85E0]((id)qword_1ED56B9A8);
  result = sub_1B8CE153C();
  off_1ED565648 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_1B8C86280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  void *v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  void *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _OWORD v49[7];
  char v50;

  v2 = v1;
  v25 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565770);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1B8CE0F84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WKStripesWallpaperPosterOverlay();
  v11 = (_QWORD *)(v2 + *(int *)(v10 + 24));
  v12 = v11[3];
  v22 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v13 = v2 + *(int *)(v10 + 20);
  v14 = *(_OWORD *)(v13 + 80);
  v49[4] = *(_OWORD *)(v13 + 64);
  v49[5] = v14;
  v49[6] = *(_OWORD *)(v13 + 96);
  v50 = *(_BYTE *)(v13 + 112);
  v15 = *(_OWORD *)(v13 + 16);
  v49[0] = *(_OWORD *)v13;
  v49[1] = v15;
  v16 = *(_OWORD *)(v13 + 48);
  v49[2] = *(_OWORD *)(v13 + 32);
  v49[3] = v16;
  sub_1B8C86848((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85798);
  sub_1B8CDF63C((uint64_t)&v37);
  sub_1B8C86848((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85880);
  LOBYTE(v26) = (_BYTE)v37;
  v27 = v38;
  v28 = v39;
  v29 = v40;
  v30 = v41;
  v31 = v42;
  v32 = v43;
  v33 = v44;
  v34 = v45;
  v35 = v46;
  v36 = v47;
  sub_1B8CDF87C((uint64_t)v9);
  sub_1B8CBD728(&v26, (uint64_t)v9, v12, v22, &v48);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  swift_release();
  if (v48)
  {
    *v5 = sub_1B8CE1374();
    v5[1] = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565708);
    if (qword_1ED565650 != -1)
      swift_once();
    v37 = off_1ED565648;
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565788);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565728);
    sub_1B8C86A88(&qword_1ED565790, &qword_1ED565788, MEMORY[0x1E0DEAF48]);
    sub_1B8C868AC();
    sub_1B8C868F0();
    sub_1B8CE1350();
    v18 = v25;
    sub_1B8C869B8((uint64_t)v5, v25);
    v19 = 0;
  }
  else
  {
    v19 = 1;
    v18 = v25;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v18, v19, 1, v24);
}

uint64_t sub_1B8C8658C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t result;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;

  v5 = *a1;
  if (qword_1ED565650 != -1)
    swift_once();
  v6 = off_1ED565648;
  swift_bridgeObjectRetain();
  v7 = sub_1B8C866F8(v5, (uint64_t)v6);
  v9 = v8;
  result = swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (*((_QWORD *)off_1ED565648 + 2))
    {
      swift_retain();
      swift_retain();
      v11 = sub_1B8CE129C();
      swift_release();
      swift_release();
    }
    else
    {
      v11 = 0;
    }
    v12 = *(void **)(a2 + 16);
    swift_retain();
    objc_msgSend(v12, sel_stripeAngleDegrees);
    v14 = v13;
    objc_msgSend(v12, sel_firstStripeOffsetScaleFactor);
    v16 = v15;
    objc_msgSend(v12, sel_stripeHeightFactor);
    v18 = v17;
    swift_release();
    KeyPath = swift_getKeyPath();
    *(_QWORD *)a3 = v7;
    *(_BYTE *)(a3 + 8) = v11 & 1;
    *(_QWORD *)(a3 + 16) = v14;
    *(_QWORD *)(a3 + 24) = v16;
    *(_QWORD *)(a3 + 32) = v18;
    *(_QWORD *)(a3 + 40) = KeyPath;
    *(_QWORD *)(a3 + 48) = v5;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B8C866F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  swift_retain();
  v3 = sub_1B8CE129C();
  swift_release();
  v4 = 0;
  if ((v3 & 1) == 0)
  {
    v5 = v2 - 1;
    while (v5 != v4)
    {
      swift_retain();
      v6 = sub_1B8CE129C();
      swift_release();
      ++v4;
      if ((v6 & 1) != 0)
        return v4;
    }
    return 0;
  }
  return v4;
}

uint64_t sub_1B8C867C0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = a1;
  if (*(unsigned __int8 *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(unsigned __int8 *)(a2 + 33 + result++);
    if (v6 == v3)
      return result;
  }
  return 0;
}

uint64_t sub_1B8C8682C()
{
  return sub_1B8CE1254();
}

uint64_t sub_1B8C86848(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 112);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), v4);
  return a1;
}

uint64_t sub_1B8C868A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8C8658C(a1, v2, a2);
}

unint64_t sub_1B8C868AC()
{
  unint64_t result;

  result = qword_1ED565760;
  if (!qword_1ED565760)
  {
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDF5D8], MEMORY[0x1E0CDF5D0]);
    atomic_store(result, (unint64_t *)&qword_1ED565760);
  }
  return result;
}

unint64_t sub_1B8C868F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565720;
  if (!qword_1ED565720)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565728);
    v2[0] = sub_1B8C86974();
    v2[1] = sub_1B8C86A88(&qword_1ED567498, &qword_1ED5674A0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565720);
  }
  return result;
}

unint64_t sub_1B8C86974()
{
  unint64_t result;

  result = qword_1ED565668;
  if (!qword_1ED565668)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE5D78, &type metadata for WKStripeParallelogram);
    atomic_store(result, (unint64_t *)&qword_1ED565668);
  }
  return result;
}

uint64_t sub_1B8C869B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8C86A0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED565780;
  if (!qword_1ED565780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565778);
    v2 = sub_1B8C86A88(&qword_1ED565768, &qword_1ED565770, MEMORY[0x1E0CDFCF8]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED565780);
  }
  return result;
}

uint64_t sub_1B8C86A88(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1BCCB94E0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1B8C86AC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v34 = a3;
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    v14 = *((_QWORD *)v11 + 2);
    v15 = *((_QWORD *)v11 + 3);
    v16 = *((_QWORD *)v11 + 4);
    v17 = *((_QWORD *)v11 + 5);
    v18 = (void *)*((_QWORD *)v11 + 7);
    v26 = *((_QWORD *)v11 + 8);
    v27 = *((_QWORD *)v11 + 9);
    v28 = *((_QWORD *)v11 + 10);
    v29 = *((_QWORD *)v11 + 11);
    v31 = *((_QWORD *)v11 + 12);
    v32 = *((_QWORD *)v11 + 13);
    v33 = v11[112];
    v30 = a2;
    v19 = *((_QWORD *)v11 + 6);
    sub_1B8C85798(*(_QWORD *)v11, v13, v14, v15, v16, v17, v19, v18, v26, v27, v28, v29, v31, v32, v33);
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    *((_QWORD *)v10 + 2) = v14;
    *((_QWORD *)v10 + 3) = v15;
    *((_QWORD *)v10 + 4) = v16;
    *((_QWORD *)v10 + 5) = v17;
    *((_QWORD *)v10 + 6) = v19;
    *((_QWORD *)v10 + 7) = v18;
    *((_QWORD *)v10 + 8) = v26;
    *((_QWORD *)v10 + 9) = v27;
    *((_QWORD *)v10 + 10) = v28;
    *((_QWORD *)v10 + 11) = v29;
    *((_QWORD *)v10 + 12) = v31;
    *((_QWORD *)v10 + 13) = v32;
    v10[112] = v33;
    v20 = *(int *)(v34 + 24);
    v21 = *(int *)(v34 + 28);
    v22 = (char *)v4 + v20;
    v23 = (char *)v30 + v20;
    v24 = *(_QWORD *)v23;
    LOBYTE(v23) = v23[8];
    *(_QWORD *)v22 = v24;
    v22[8] = (char)v23;
    *(_QWORD *)((char *)v4 + v21) = *(_QWORD *)((char *)v30 + v21);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1B8C86CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1B8CE0F84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_1B8C85880(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(void **)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_BYTE *)(v5 + 112));
  swift_release();
  return swift_release();
}

_QWORD *sub_1B8C86D5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B8CE0F84();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v32 = a2;
  v33 = a3;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v14 = *((_QWORD *)v9 + 4);
  v15 = *((_QWORD *)v9 + 5);
  v17 = *((_QWORD *)v9 + 6);
  v16 = (void *)*((_QWORD *)v9 + 7);
  v31 = a1;
  v18 = *((_QWORD *)v9 + 8);
  v25 = *((_QWORD *)v9 + 9);
  v26 = *((_QWORD *)v9 + 10);
  v27 = *((_QWORD *)v9 + 11);
  v28 = *((_QWORD *)v9 + 12);
  v29 = *((_QWORD *)v9 + 13);
  v30 = v9[112];
  sub_1B8C85798(*(_QWORD *)v9, v11, v12, v13, v14, v15, v17, v16, v18, v25, v26, v27, v28, v29, v30);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  *((_QWORD *)v8 + 3) = v13;
  *((_QWORD *)v8 + 4) = v14;
  *((_QWORD *)v8 + 5) = v15;
  *((_QWORD *)v8 + 6) = v17;
  *((_QWORD *)v8 + 7) = v16;
  *((_QWORD *)v8 + 8) = v18;
  *((_QWORD *)v8 + 9) = v25;
  *((_QWORD *)v8 + 10) = v26;
  *((_QWORD *)v8 + 11) = v27;
  *((_QWORD *)v8 + 12) = v28;
  *((_QWORD *)v8 + 13) = v29;
  v8[112] = v30;
  v19 = *(int *)(v33 + 24);
  v20 = *(int *)(v33 + 28);
  v21 = (char *)v31 + v19;
  v22 = (char *)v32 + v19;
  v23 = *(_QWORD *)v22;
  LOBYTE(v22) = v22[8];
  *(_QWORD *)v21 = v23;
  v21[8] = (char)v22;
  *(_QWORD *)((char *)v31 + v20) = *(_QWORD *)((char *)v32 + v20);
  swift_retain();
  swift_retain();
  return v31;
}

_QWORD *sub_1B8C86F0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t v44;

  if (a1 != a2)
  {
    sub_1B8C85C20((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v43 = a2;
  v44 = a3;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v14 = *((_QWORD *)v9 + 4);
  v15 = *((_QWORD *)v9 + 5);
  v17 = *((_QWORD *)v9 + 6);
  v16 = (void *)*((_QWORD *)v9 + 7);
  v36 = *((_QWORD *)v9 + 8);
  v37 = *((_QWORD *)v9 + 9);
  v38 = *((_QWORD *)v9 + 10);
  v39 = *((_QWORD *)v9 + 11);
  v40 = *((_QWORD *)v9 + 12);
  v41 = *((_QWORD *)v9 + 13);
  v42 = v9[112];
  sub_1B8C85798(*(_QWORD *)v9, v11, v12, v13, v14, v15, v17, v16, v36, v37, v38, v39, v40, v41, v42);
  v18 = *(_QWORD *)v8;
  v19 = *((_QWORD *)v8 + 1);
  v20 = *((_QWORD *)v8 + 2);
  v21 = *((_QWORD *)v8 + 3);
  v22 = *((_QWORD *)v8 + 4);
  v23 = *((_QWORD *)v8 + 5);
  v24 = *((_QWORD *)v8 + 6);
  v25 = (void *)*((_QWORD *)v8 + 7);
  v26 = *((_OWORD *)v8 + 4);
  v27 = *((_OWORD *)v8 + 5);
  v28 = *((_QWORD *)v8 + 12);
  v29 = *((_QWORD *)v8 + 13);
  v30 = v8[112];
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  *((_QWORD *)v8 + 3) = v13;
  *((_QWORD *)v8 + 4) = v14;
  *((_QWORD *)v8 + 5) = v15;
  *((_QWORD *)v8 + 6) = v17;
  *((_QWORD *)v8 + 7) = v16;
  *((_QWORD *)v8 + 8) = v36;
  *((_QWORD *)v8 + 9) = v37;
  *((_QWORD *)v8 + 10) = v38;
  *((_QWORD *)v8 + 11) = v39;
  *((_QWORD *)v8 + 12) = v40;
  *((_QWORD *)v8 + 13) = v41;
  v8[112] = v42;
  sub_1B8C85880(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, v29, v30);
  v31 = *(int *)(v44 + 24);
  v32 = (char *)a1 + v31;
  v33 = (char *)v43 + v31;
  v34 = *(_QWORD *)v33;
  LOBYTE(v33) = v33[8];
  *(_QWORD *)v32 = v34;
  v32[8] = (char)v33;
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(v44 + 28)) = *(_QWORD *)((char *)v43 + *(int *)(v44 + 28));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1B8C87110(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  char *v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B8CE0F84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v10[112] = v11[112];
  v12 = *((_OWORD *)v11 + 6);
  v13 = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 6) = v12;
  v14 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v14;
  v15 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v15;
  *((_OWORD *)v10 + 4) = v13;
  v16 = &a1[v9];
  v17 = &a2[v9];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *sub_1B8C87204(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  if (a1 != a2)
  {
    sub_1B8C85C20((uint64_t)a1);
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[112];
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  v14 = *((_QWORD *)v9 + 2);
  v15 = *((_QWORD *)v9 + 3);
  v16 = *((_QWORD *)v9 + 4);
  v17 = *((_QWORD *)v9 + 5);
  v18 = *((_QWORD *)v9 + 6);
  v19 = (void *)*((_QWORD *)v9 + 7);
  v20 = *((_OWORD *)v9 + 4);
  v21 = *((_OWORD *)v9 + 5);
  v22 = *((_QWORD *)v9 + 12);
  v23 = *((_QWORD *)v9 + 13);
  v24 = v9[112];
  v25 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v25;
  v26 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v26;
  v27 = *((_OWORD *)v10 + 5);
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  *((_OWORD *)v9 + 5) = v27;
  *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
  v9[112] = v11;
  sub_1B8C85880(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  v28 = a3[6];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = *(_QWORD *)v30;
  LOBYTE(v30) = v30[8];
  *(_QWORD *)v29 = v31;
  v29[8] = (char)v30;
  swift_release();
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_release();
  return a1;
}

uint64_t sub_1B8C87350()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8C8735C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B8C873DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8C873E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WKAdaptiveStripeWallpaperFloatingLayer()
{
  uint64_t result;

  result = qword_1ED565168;
  if (!qword_1ED565168)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8C874A0()
{
  unint64_t v0;

  sub_1B8C86054();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B8C87528()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8C87538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[7];
  _OWORD v65[7];
  char v66;
  _OWORD v67[13];

  v2 = v1;
  v4 = sub_1B8CE0F84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for WKAdaptiveStripeWallpaperFloatingLayer();
  v9 = *(_BYTE *)(v1 + v8[6] + 8);
  v10 = swift_retain();
  sub_1B8CDFAB4(v10, v9);
  swift_release();
  v11 = sub_1B8CB5434();
  v32 = v13;
  v33 = v12;
  v15 = v14;
  swift_release();
  if ((v15 & 1) != 0)
    goto LABEL_4;
  v16 = *(_QWORD *)(v2 + v8[7]);
  v17 = v2 + v8[5];
  v18 = *(_OWORD *)(v17 + 80);
  v65[4] = *(_OWORD *)(v17 + 64);
  v65[5] = v18;
  v65[6] = *(_OWORD *)(v17 + 96);
  v66 = *(_BYTE *)(v17 + 112);
  v19 = *(_OWORD *)(v17 + 16);
  v65[0] = *(_OWORD *)v17;
  v65[1] = v19;
  v20 = *(_OWORD *)(v17 + 48);
  v65[2] = *(_OWORD *)(v17 + 32);
  v65[3] = v20;
  swift_retain();
  sub_1B8C86848((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85798);
  sub_1B8CDF63C((uint64_t)v67);
  sub_1B8C86848((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85880);
  v64[4] = v67[4];
  v64[5] = v67[5];
  v64[6] = v67[6];
  v64[0] = v67[0];
  v64[1] = v67[1];
  v64[2] = v67[2];
  v64[3] = v67[3];
  sub_1B8CDF87C((uint64_t)v7);
  sub_1B8CD1B44((double *)v64, (uint64_t)v7, v16, &v37);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1B8C87884((uint64_t)v64);
  swift_release();
  v21 = v37;
  if (!v37)
  {
LABEL_4:
    sub_1B8C87818(&v38);
  }
  else
  {
    KeyPath = swift_getKeyPath();
    v34 = 0;
    swift_retain();
    WKPosterCanvasSize();
    WKPosterCanvasSize();
    sub_1B8CE1374();
    sub_1B8CE0FD8();
    v22 = v58;
    v23 = v59;
    v24 = v60;
    v25 = v61;
    v26 = a1;
    v28 = v62;
    v27 = v63;
    swift_release();
    v36 = v23;
    v35 = v25;
    v38 = KeyPath;
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v45 = 0;
    v46 = v34;
    v47 = v11;
    v48 = v33;
    v49 = v32;
    v50 = v21;
    v51 = 1;
    v52 = v22;
    v53 = v23;
    v54 = v24;
    v55 = v25;
    v56 = v28;
    v57 = v27;
    a1 = v26;
    nullsub_1(&v38);
  }
  sub_1B8C8783C((uint64_t)&v38, (uint64_t)v67);
  return sub_1B8C8783C((uint64_t)v67, a1);
}

double sub_1B8C87818(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1B8C8783C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8C87884(uint64_t a1)
{

  swift_release();
  return a1;
}

unint64_t sub_1B8C878C0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF1D4020;
  if (!qword_1EF1D4020)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4018);
    v2 = sub_1B8C87924();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4020);
  }
  return result;
}

unint64_t sub_1B8C87924()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1D4028;
  if (!qword_1EF1D4028)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4030);
    v2[0] = sub_1B8C87990();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4028);
  }
  return result;
}

unint64_t sub_1B8C87990()
{
  unint64_t result;

  result = qword_1EF1D4038;
  if (!qword_1EF1D4038)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE76A8, &type metadata for WKAdaptiveStripesStack);
    atomic_store(result, (unint64_t *)&qword_1EF1D4038);
  }
  return result;
}

uint64_t destroy for WKLayeredAnimationWallpaperPosterForeground(uint64_t a1)
{
  swift_release();
  sub_1B8C85880(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  return swift_release();
}

uint64_t initializeWithCopy for WKLayeredAnimationWallpaperPosterForeground(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v19 = *(_QWORD *)(a2 + 24);
  v20 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a2 + 40);
  v18 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 112);
  v14 = *(void **)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 120);
  v12 = *(_BYTE *)(a2 + 128);
  swift_retain();
  sub_1B8C85798(v20, v19, v18, v17, v16, v15, v5, v14, v6, v7, v8, v9, v10, v11, v12);
  *(_QWORD *)(a1 + 16) = v20;
  *(_QWORD *)(a1 + 24) = v19;
  *(_QWORD *)(a1 + 32) = v18;
  *(_QWORD *)(a1 + 40) = v17;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  *(_QWORD *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  *(_QWORD *)(a1 + 120) = v11;
  *(_BYTE *)(a1 + 128) = v12;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WKLayeredAnimationWallpaperPosterForeground(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(void **)(a2 + 72);
  v27 = *(_QWORD *)(a2 + 80);
  v28 = *(_QWORD *)(a2 + 88);
  v29 = *(_QWORD *)(a2 + 96);
  v30 = *(_QWORD *)(a2 + 104);
  v31 = *(_QWORD *)(a2 + 112);
  v32 = *(_QWORD *)(a2 + 120);
  v33 = *(_BYTE *)(a2 + 128);
  sub_1B8C85798(v5, v6, v7, v8, v9, v10, v11, v12, v27, v28, v29, v30, v31, v32, v33);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(void **)(a1 + 72);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 120);
  v25 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v27;
  *(_QWORD *)(a1 + 88) = v28;
  *(_QWORD *)(a1 + 96) = v29;
  *(_QWORD *)(a1 + 104) = v30;
  *(_QWORD *)(a1 + 112) = v31;
  *(_QWORD *)(a1 + 120) = v32;
  *(_BYTE *)(a1 + 128) = v33;
  sub_1B8C85880(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24, v25);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for WKLayeredAnimationWallpaperPosterForeground(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 128);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(void **)(a1 + 72);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 112);
  v17 = *(_QWORD *)(a1 + 120);
  v18 = *(_BYTE *)(a1 + 128);
  v19 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v19;
  v20 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v20;
  v21 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = v5;
  sub_1B8C85880(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, v17, v18);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WKLayeredAnimationWallpaperPosterForeground(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 136);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WKLayeredAnimationWallpaperPosterForeground(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 136) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredAnimationWallpaperPosterForeground()
{
  return &type metadata for WKLayeredAnimationWallpaperPosterForeground;
}

uint64_t sub_1B8C87E54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8C87E64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[23];
  uint64_t v46;
  char v47;

  v3 = (int *)type metadata accessor for WKAnimationPackageLayer(0);
  v35 = *((_QWORD *)v3 - 1);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v31 - v10;
  v12 = sub_1B8CE0E1C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v33 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v31 - v16;
  v18 = *(_QWORD *)v1;
  v47 = *(_BYTE *)(v1 + 8);
  v36 = v18;
  v37 = v47;
  v43 = *(_OWORD *)(v1 + 89);
  v44 = *(_OWORD *)(v1 + 105);
  *(_OWORD *)v45 = *(_OWORD *)(v1 + 121);
  *(_QWORD *)&v45[15] = *(_QWORD *)(v1 + 136);
  v39 = *(_OWORD *)(v1 + 25);
  v40 = *(_OWORD *)(v1 + 41);
  v41 = *(_OWORD *)(v1 + 57);
  v42 = *(_OWORD *)(v1 + 73);
  v38 = *(_OWORD *)(v1 + 9);
  sub_1B8C88268(&v46);
  if (v46)
  {
    v34 = a1;
    v19 = objc_msgSend(*(id *)(v46 + 16), sel_foregroundAnimationFileURL);
    if (v19)
    {
      v20 = v19;
      sub_1B8CE0E04();

      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, v21, 1, v12);
    sub_1B8C8838C((uint64_t)v9, (uint64_t)v11);
    swift_release();
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    a1 = v34;
    if (v22 != 1)
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v32(v17, v11, v12);
      v24 = v33;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v33, v17, v12);
      v25 = v47;
      v26 = swift_retain();
      v27 = sub_1B8CDFAB4(v26, v25);
      swift_release();
      swift_getKeyPath();
      v36 = v27;
      sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
      sub_1B8CE0E7C();
      swift_release();
      v28 = *(_QWORD *)(v27 + 136);
      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
      *(_QWORD *)v5 = swift_getKeyPath();
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 40) = 0u;
      *(_OWORD *)(v5 + 56) = 0u;
      *(_OWORD *)(v5 + 72) = 0u;
      *(_OWORD *)(v5 + 88) = 0u;
      *(_OWORD *)(v5 + 97) = 0u;
      v29 = (uint64_t *)&v5[v3[5]];
      *v29 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
      a1 = v34;
      swift_storeEnumTagMultiPayload();
      v5[v3[6]] = 1;
      v32(&v5[v3[7]], v24, v12);
      *(_QWORD *)&v5[v3[8]] = v28;
      sub_1B8C883EC((uint64_t)v5, a1);
      v23 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v35 + 56))(a1, v23, 1, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1B8C88430((uint64_t)v11, (uint64_t *)&unk_1ED565130);
  v23 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v35 + 56))(a1, v23, 1, v3);
}

void sub_1B8C88268(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int v7;
  void *v8;
  unsigned __int8 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v3 = *(void **)(*(_QWORD *)(v1 + 136) + 16);
  swift_retain();
  if (!objc_msgSend(v3, sel_valueBasedWallpaperForLocation_andAppearance_, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("default")))
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    swift_release();
    goto LABEL_6;
  }
  sub_1B8C8FB7C((uint64_t *)&v10);
  swift_release();
  swift_unknownObjectRelease();
  v4 = *((_QWORD *)&v11 + 1);
  if (!*((_QWORD *)&v11 + 1))
  {
LABEL_6:
    sub_1B8C88430((uint64_t)&v10, &qword_1EF1D4040);
    goto LABEL_7;
  }
  v5 = v12;
  __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v5 + 24))(&v8, v4, v5);
  v6 = v8;
  v7 = v9;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  if (v7 != 5)
  {
    sub_1B8C8846C(v6, v7);
LABEL_7:
    v6 = 0;
  }
  *a1 = v6;
}

uint64_t sub_1B8C8838C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8C883EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKAnimationPackageLayer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8C88430(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1B8C8846C(void *a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      swift_release();
      break;
    case 4:

      break;
    default:
      return;
  }
}

unint64_t sub_1B8C884A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED565288;
  if (!qword_1ED565288)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565280);
    v2 = sub_1B8C83740((unint64_t *)&unk_1ED565260, type metadata accessor for WKAnimationPackageLayer, (uint64_t)&unk_1B8CE6CF0);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED565288);
  }
  return result;
}

void WKLiveWallpaper.fullsizeImageURL.getter()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_fullsizeImageURL);
  sub_1B8CE0E04();

}

uint64_t WKLiveWallpaper.videoAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_videoAssetURL, a1);
}

id WKLiveWallpaper.stillTimeInVideo.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_stillTimeInVideo);
}

id WKLiveWallpaper.identifier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

uint64_t WKLiveWallpaper.name.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_name);
}

id WKLiveWallpaper.type.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_type);
}

id WKLiveWallpaper.representedType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_representedType);
}

id WKLiveWallpaper.backingType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backingType);
}

uint64_t WKLiveWallpaper.thumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_thumbnailImageURL, a1);
}

id WKLiveWallpaper.thumbnailImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

id WKLiveWallpaper.supportsSerialization.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsSerialization);
}

id WKLiveWallpaper.supportsCopying.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

uint64_t WKLiveWallpaper.init(identifier:name:thumbnailImageURL:fullsizeImageURL:videoAssetURL:stillTimeInVideo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>, double a6@<D0>)
{
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t result;

  v12 = objc_allocWithZone((Class)WKLiveWallpaper);
  v13 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1B8CE0DEC();
  v15 = (void *)sub_1B8CE0DEC();
  v16 = (void *)sub_1B8CE0DEC();
  v17 = objc_msgSend(v12, sel_initWithIdentifier_name_type_thumbnailImageURL_fullsizeImageURL_videoAssetURL_stillTimeInVideo_, a1, v13, 0, v14, v15, v16, a6);

  v18 = sub_1B8CE0E1C();
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
  v19(a4, v18);
  v19(a3, v18);
  v19(a2, v18);
  type metadata accessor for WKLiveWallpaper.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v17;
  *a5 = result;
  return result;
}

uint64_t type metadata accessor for WKLiveWallpaper.ImplementationWrapper()
{
  return objc_opt_self();
}

Swift::OpaquePointer_optional __swiftcall WKLiveWallpaper.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id WKLiveWallpaper.copyWallpaperContents(to:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE0DEC();
  v6[0] = 0;
  v3 = objc_msgSend(v1, sel_copyWallpaperContentsToDestinationDirectoryURL_error_, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B8CE0DBC();

  return (id)swift_willThrow();
}

id static WKLiveWallpaper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKLiveWallpaper.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKLiveWallpaper.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

uint64_t WKLiveWallpaper.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

void sub_1B8C889E8()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_fullsizeImageURL);
  sub_1B8CE0E04();

}

uint64_t sub_1B8C88A38@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C88AC0((SEL *)&selRef_videoAssetURL, a1);
}

id sub_1B8C88A44()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_stillTimeInVideo);
}

unint64_t sub_1B8C88A5C()
{
  unint64_t result;

  result = qword_1EF1D4048;
  if (!qword_1EF1D4048)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLiveWallpaper, &type metadata for WKLiveWallpaper);
    atomic_store(result, (unint64_t *)&qword_1EF1D4048);
  }
  return result;
}

id sub_1B8C88AA0()
{
  return WKLiveWallpaper.copyWallpaperContents(to:)();
}

uint64_t sub_1B8C88AB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C88AC0((SEL *)&selRef_thumbnailImageURL, a1);
}

uint64_t sub_1B8C88AC0@<X0>(SEL *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*(id *)(*(_QWORD *)v2 + 16), *a1);
  if (v4)
  {
    v5 = v4;
    sub_1B8CE0E04();

    v6 = sub_1B8CE0E1C();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
  }
  else
  {
    v6 = sub_1B8CE0E1C();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

ValueMetadata *type metadata accessor for WKLiveWallpaper()
{
  return &type metadata for WKLiveWallpaper;
}

_QWORD *sub_1B8C88B58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v28 = a2;
    v29 = a3;
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    v14 = *((_QWORD *)v11 + 2);
    v15 = *((_QWORD *)v11 + 3);
    v16 = *((_QWORD *)v11 + 4);
    v17 = *((_QWORD *)v11 + 5);
    v19 = *((_QWORD *)v11 + 6);
    v18 = (void *)*((_QWORD *)v11 + 7);
    v21 = *((_QWORD *)v11 + 8);
    v22 = *((_QWORD *)v11 + 9);
    v23 = *((_QWORD *)v11 + 10);
    v24 = *((_QWORD *)v11 + 11);
    v25 = *((_QWORD *)v11 + 12);
    v26 = *((_QWORD *)v11 + 13);
    v27 = v11[112];
    sub_1B8C85798(*(_QWORD *)v11, v13, v14, v15, v16, v17, v19, v18, v21, v22, v23, v24, v25, v26, v27);
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    *((_QWORD *)v10 + 2) = v14;
    *((_QWORD *)v10 + 3) = v15;
    *((_QWORD *)v10 + 4) = v16;
    *((_QWORD *)v10 + 5) = v17;
    *((_QWORD *)v10 + 6) = v19;
    *((_QWORD *)v10 + 7) = v18;
    *((_QWORD *)v10 + 8) = v21;
    *((_QWORD *)v10 + 9) = v22;
    *((_QWORD *)v10 + 10) = v23;
    *((_QWORD *)v10 + 11) = v24;
    *((_QWORD *)v10 + 12) = v25;
    *((_QWORD *)v10 + 13) = v26;
    v10[112] = v27;
    *(_QWORD *)((char *)a1 + *(int *)(v29 + 24)) = *(_QWORD *)((char *)v28 + *(int *)(v29 + 24));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1B8C88D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1B8CE0F84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_1B8C85880(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(void **)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_BYTE *)(v5 + 112));
  return swift_release();
}

_QWORD *sub_1B8C88DBC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B8CE0F84();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v27 = a2;
  v28 = a3;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v14 = *((_QWORD *)v9 + 4);
  v15 = *((_QWORD *)v9 + 5);
  v17 = *((_QWORD *)v9 + 6);
  v16 = (void *)*((_QWORD *)v9 + 7);
  v26 = a1;
  v18 = *((_QWORD *)v9 + 8);
  v20 = *((_QWORD *)v9 + 9);
  v21 = *((_QWORD *)v9 + 10);
  v22 = *((_QWORD *)v9 + 11);
  v23 = *((_QWORD *)v9 + 12);
  v24 = *((_QWORD *)v9 + 13);
  v25 = v9[112];
  sub_1B8C85798(*(_QWORD *)v9, v11, v12, v13, v14, v15, v17, v16, v18, v20, v21, v22, v23, v24, v25);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  *((_QWORD *)v8 + 3) = v13;
  *((_QWORD *)v8 + 4) = v14;
  *((_QWORD *)v8 + 5) = v15;
  *((_QWORD *)v8 + 6) = v17;
  *((_QWORD *)v8 + 7) = v16;
  *((_QWORD *)v8 + 8) = v18;
  *((_QWORD *)v8 + 9) = v20;
  *((_QWORD *)v8 + 10) = v21;
  *((_QWORD *)v8 + 11) = v22;
  *((_QWORD *)v8 + 12) = v23;
  *((_QWORD *)v8 + 13) = v24;
  v8[112] = v25;
  *(_QWORD *)((char *)v26 + *(int *)(v28 + 24)) = *(_QWORD *)((char *)v27 + *(int *)(v28 + 24));
  swift_retain();
  return v26;
}

_QWORD *sub_1B8C88F4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;

  if (a1 != a2)
  {
    sub_1B8C88430((uint64_t)a1, (uint64_t *)&unk_1ED567170);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v39 = a2;
  v40 = a3;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v14 = *((_QWORD *)v9 + 4);
  v15 = *((_QWORD *)v9 + 5);
  v17 = *((_QWORD *)v9 + 6);
  v16 = (void *)*((_QWORD *)v9 + 7);
  v32 = *((_QWORD *)v9 + 8);
  v33 = *((_QWORD *)v9 + 9);
  v34 = *((_QWORD *)v9 + 10);
  v35 = *((_QWORD *)v9 + 11);
  v36 = *((_QWORD *)v9 + 12);
  v37 = *((_QWORD *)v9 + 13);
  v38 = v9[112];
  sub_1B8C85798(*(_QWORD *)v9, v11, v12, v13, v14, v15, v17, v16, v32, v33, v34, v35, v36, v37, v38);
  v18 = *(_QWORD *)v8;
  v19 = *((_QWORD *)v8 + 1);
  v20 = *((_QWORD *)v8 + 2);
  v21 = *((_QWORD *)v8 + 3);
  v22 = *((_QWORD *)v8 + 4);
  v23 = *((_QWORD *)v8 + 5);
  v24 = *((_QWORD *)v8 + 6);
  v25 = (void *)*((_QWORD *)v8 + 7);
  v26 = *((_OWORD *)v8 + 4);
  v27 = *((_OWORD *)v8 + 5);
  v28 = *((_QWORD *)v8 + 12);
  v29 = *((_QWORD *)v8 + 13);
  v30 = v8[112];
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  *((_QWORD *)v8 + 3) = v13;
  *((_QWORD *)v8 + 4) = v14;
  *((_QWORD *)v8 + 5) = v15;
  *((_QWORD *)v8 + 6) = v17;
  *((_QWORD *)v8 + 7) = v16;
  *((_QWORD *)v8 + 8) = v32;
  *((_QWORD *)v8 + 9) = v33;
  *((_QWORD *)v8 + 10) = v34;
  *((_QWORD *)v8 + 11) = v35;
  *((_QWORD *)v8 + 12) = v36;
  *((_QWORD *)v8 + 13) = v37;
  v8[112] = v38;
  sub_1B8C85880(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, v29, v30);
  *(_QWORD *)((char *)a1 + *(int *)(v40 + 24)) = *(_QWORD *)((char *)v39 + *(int *)(v40 + 24));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1B8C8912C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B8CE0F84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  v10[112] = v11[112];
  v12 = *((_OWORD *)v11 + 6);
  v13 = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 6) = v12;
  v14 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v14;
  v15 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v15;
  *((_OWORD *)v10 + 4) = v13;
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  return a1;
}

char *sub_1B8C89204(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  if (a1 != a2)
  {
    sub_1B8C88430((uint64_t)a1, (uint64_t *)&unk_1ED567170);
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[112];
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  v14 = *((_QWORD *)v9 + 2);
  v15 = *((_QWORD *)v9 + 3);
  v16 = *((_QWORD *)v9 + 4);
  v17 = *((_QWORD *)v9 + 5);
  v18 = *((_QWORD *)v9 + 6);
  v19 = (void *)*((_QWORD *)v9 + 7);
  v20 = *((_OWORD *)v9 + 4);
  v21 = *((_OWORD *)v9 + 5);
  v22 = *((_QWORD *)v9 + 12);
  v23 = *((_QWORD *)v9 + 13);
  v24 = v9[112];
  v25 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v25;
  v26 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v26;
  v27 = *((_OWORD *)v10 + 5);
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  *((_OWORD *)v9 + 5) = v27;
  *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
  v9[112] = v11;
  sub_1B8C85880(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_1B8C89334()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8C89340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B8C893C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8C893CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WKFlatWallpaperPoster()
{
  uint64_t result;

  result = qword_1ED5651E0;
  if (!qword_1ED5651E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8C89484()
{
  unint64_t v0;

  sub_1B8C86054();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B8C89504()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8C89514@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t v23;
  __int128 v24;
  ValueMetadata *v25;
  unint64_t v26;

  v4 = (int *)type metadata accessor for WKWallpaperPreviewImage();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  v10 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for WKFlatWallpaperPoster() + 24));
  v25 = &type metadata for WKWallpaperBundle;
  v26 = sub_1B8C8A2F0();
  *(_QWORD *)&v24 = v10;
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  swift_storeEnumTagMultiPayload();
  v11 = (char *)v7 + v4[5];
  *(_QWORD *)v11 = swift_getKeyPath();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  sub_1B8C8A344(&v24, (uint64_t)v7 + v4[6]);
  *((_BYTE *)v7 + v4[7]) = 2;
  sub_1B8C8A35C((uint64_t)v7, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WKWallpaperPreviewImage);
  swift_retain();
  sub_1B8CE0FF0();
  v14 = sub_1B8C896C4(v12, v13);
  v16 = v15;
  sub_1B8CE13B0();
  v18 = v17;
  v20 = v19;
  sub_1B8C8A3A0((uint64_t)v9, a2, (uint64_t (*)(_QWORD))type metadata accessor for WKWallpaperPreviewImage);
  v21 = (double *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED565730) + 36));
  *v21 = v14;
  *((_QWORD *)v21 + 1) = v16;
  *((_QWORD *)v21 + 2) = v18;
  *((_QWORD *)v21 + 3) = v20;
  return sub_1B8C8A3E4((uint64_t)v9);
}

double sub_1B8C896C4(double a1, double a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v19;
  double v21;

  sub_1B8C89980();
  v5 = v4;
  v7 = v6;
  if (a2 >= a1)
    v8 = a1;
  else
    v8 = a2;
  v9 = WKStandardDisplayModeScreenSize();
  type metadata accessor for WKFlatWallpaperPoster();
  v10 = swift_retain();
  v11 = (void *)sub_1B8C89A2C(v10);
  swift_release();
  v12 = 1.0;
  if (v11)
  {
    v21 = v9;
    v13 = v8;
    objc_msgSend(v11, sel_size);
    v15 = v14;
    v17 = v16;

    if (v5 != v15 || v7 != v17)
    {
      if (v15 == v17)
      {
        return v13 / v21 * (v5 / v15);
      }
      else if (v15 / v17 != v5 / v7)
      {
        if (a1 / v15 >= a2 / v17)
          v19 = a1;
        else
          v19 = v15 * (a2 / v17);
        return v19 / v15;
      }
    }
  }
  return v12;
}

uint64_t sub_1B8C897D4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  void *v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v18 = a16;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1B8CE15C0();
    v27 = (void *)sub_1B8CE11DC();
    sub_1B8CE0EB8();

    v18 = a16;
  }
  sub_1B8CE1038();
  *(_QWORD *)a9 = v18;
  *(_QWORD *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  *(_OWORD *)(a9 + 48) = v31;
  *(_OWORD *)(a9 + 64) = v32;
  return swift_retain();
}

void sub_1B8C89980()
{
  id v0;

  WKStandardDisplayModeScreenSize();
  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  objc_msgSend(v0, sel_userInterfaceIdiom);

}

uint64_t sub_1B8C89A2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t result;
  id v32;
  void *v33;
  char **v34;
  id v35;
  char isUniquelyReferenced_nonNull_native;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  char v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62[3];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v2 = sub_1B8CE0E1C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v56 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v56 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v56 - v16;
  v18 = *(void **)(a1 + 16);
  v19 = 0;
  if (objc_msgSend(v18, sel_wallpaperBackingTypeForLocation_, CFSTR("WKWallpaperLocationCoverSheet")))
    return (uint64_t)v19;
  v60 = v12;
  v65 = MEMORY[0x1E0DEE9E0];
  v20 = objc_msgSend(v18, sel_fileBasedWallpaperForLocation_andAppearance_, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("default"));
  v61 = v17;
  if (v20)
  {
    sub_1B8C8F90C(v62);
    swift_unknownObjectRelease();
    v22 = v63;
    v21 = v64;
    __swift_project_boxed_opaque_existential_1(v62, v63);
    v23 = v22;
    v17 = v61;
    (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v23, v21);
    v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v58(v17, 0, 1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  }
  else
  {
    v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v58(v17, 1, 1, v2);
  }
  sub_1B8C84538((uint64_t)v17, (uint64_t)v15);
  v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v59(v15, 1, v2) == 1)
  {
    v24 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v15, v2);
    v25 = (void *)objc_opt_self();
    v26 = (void *)sub_1B8CE0DEC();
    v24 = objc_msgSend(v25, sel_wk_imageWithContentsOfURL_, v26);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (qword_1ED5657A0 != -1)
    swift_once();
  v27 = (void *)qword_1ED56B9D8;
  v57 = v24;
  if (v24)
  {
    v28 = v65;
    if ((v65 & 0xC000000000000001) != 0)
    {
      if (v65 >= 0)
        v28 = v65 & 0xFFFFFFFFFFFFFF8;
      v29 = v24;
      v30 = v27;
      result = sub_1B8CE17A0();
      if (__OFADD__(result, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      v28 = sub_1B8CD1414(v28, result + 1);
    }
    else
    {
      v29 = v24;
      v35 = v27;
    }
    v34 = &_OBJC___PROTOCOL_METHOD_TYPES_NSCopying_17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v62[0] = v28;
    sub_1B8CA09A0((uint64_t)v29, v27, isUniquelyReferenced_nonNull_native);
    v65 = v62[0];

    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = (id)qword_1ED56B9D8;
    v33 = (void *)sub_1B8CD6BAC((unint64_t)v32);

    v34 = &_OBJC___PROTOCOL_METHOD_TYPES_NSCopying_17;
  }
  v37 = objc_msgSend(v18, v34[432], CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("dark"));
  v38 = (uint64_t)v60;
  v39 = (uint64_t)v61;
  if (v37)
  {
    sub_1B8C8F90C(v62);
    swift_unknownObjectRelease();
    v40 = v63;
    v41 = v64;
    __swift_project_boxed_opaque_existential_1(v62, v63);
    (*(void (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
    v58((char *)v38, 0, 1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  }
  else
  {
    v58(v60, 1, 1, v2);
  }
  sub_1B8C84538(v38, (uint64_t)v9);
  if (v59(v9, 1, v2) == 1)
  {
    v42 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v43 = (void *)objc_opt_self();
    v44 = (void *)sub_1B8CE0DEC();
    v42 = objc_msgSend(v43, sel_wk_imageWithContentsOfURL_, v44);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (qword_1ED565798 != -1)
    swift_once();
  v45 = (void *)qword_1ED56B9D0;
  if (!v42)
  {
    v49 = (id)qword_1ED56B9D0;
    v50 = (void *)sub_1B8CD6BAC((unint64_t)v49);

    v47 = 0;
LABEL_36:
    v53 = (void *)objc_opt_self();
    sub_1B8C84230(0, &qword_1ED5657B0);
    sub_1B8C84230(0, (unint64_t *)&unk_1ED5674C0);
    sub_1B8C8A420();
    v54 = (void *)sub_1B8CE1440();
    swift_bridgeObjectRelease();
    v55 = v57;
    v19 = objc_msgSend(v53, sel_wk_dynamicImageWithTraitCollectionToImageMap_baseImage_, v54, v57);

    sub_1B8C88430(v38, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v39, (uint64_t *)&unk_1ED565130);
    return (uint64_t)v19;
  }
  v46 = v65;
  if ((v65 & 0xC000000000000001) == 0)
  {
    v47 = v42;
    v51 = v45;
    goto LABEL_35;
  }
  if (v65 >= 0)
    v46 = v65 & 0xFFFFFFFFFFFFFF8;
  v47 = v42;
  v48 = v45;
  result = sub_1B8CE17A0();
  if (!__OFADD__(result, 1))
  {
    v46 = sub_1B8CD1414(v46, result + 1);
LABEL_35:
    v52 = swift_isUniquelyReferenced_nonNull_native();
    v62[0] = v46;
    sub_1B8CA09A0((uint64_t)v47, v45, v52);
    v65 = v62[0];

    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
LABEL_39:
  __break(1u);
  return result;
}

double sub_1B8C8A084@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  double result;
  __int128 v14;
  _OWORD v15[2];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](a1);
  sub_1B8C8A3A0(v2, (uint64_t)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for WKFlatWallpaperPoster);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  sub_1B8C8A35C((uint64_t)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(_QWORD))type metadata accessor for WKFlatWallpaperPoster);
  v8 = sub_1B8CE1374();
  sub_1B8C897D4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0, v8, v9, (uint64_t)sub_1B8C8A2A4, v7);
  swift_release();
  v10 = v19;
  a2[4] = v18;
  a2[5] = v10;
  v11 = v21;
  a2[6] = v20;
  a2[7] = v11;
  v12 = v15[1];
  *a2 = v15[0];
  a2[1] = v12;
  result = *(double *)&v16;
  v14 = v17;
  a2[2] = v16;
  a2[3] = v14;
  return result;
}

uint64_t sub_1B8C8A1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for WKFlatWallpaperPoster();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1B8CE0F84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v3, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v0 + v3 + *(int *)(v1 + 20);
  sub_1B8C85880(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(void **)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), *(_QWORD *)(v5 + 96), *(_QWORD *)(v5 + 104), *(_BYTE *)(v5 + 112));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8C8A2A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WKFlatWallpaperPoster() - 8) + 80);
  return sub_1B8C89514(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_1B8C8A2F0()
{
  unint64_t result;

  result = qword_1ED566FD0;
  if (!qword_1ED566FD0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperBundle, &type metadata for WKWallpaperBundle);
    atomic_store(result, (unint64_t *)&qword_1ED566FD0);
  }
  return result;
}

uint64_t sub_1B8C8A344(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1B8C8A35C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B8C8A3A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B8C8A3E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WKWallpaperPreviewImage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B8C8A420()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5657B8;
  if (!qword_1ED5657B8)
  {
    v1 = sub_1B8C84230(255, &qword_1ED5657B0);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5657B8);
  }
  return result;
}

unint64_t sub_1B8C8A47C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1D4050;
  if (!qword_1EF1D4050)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4058);
    v2[0] = sub_1B8C8A4E8();
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4050);
  }
  return result;
}

unint64_t sub_1B8C8A4E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1D4060;
  if (!qword_1EF1D4060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4068);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9318], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1D4060);
  }
  return result;
}

__n128 sub_1B8C8A534@<Q0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char v43;
  __n128 result;
  __n128 v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;
  char v67;

  v6 = a2 & 1;
  v7 = swift_retain();
  v8 = sub_1B8CDFAB4(v7, v6);
  swift_release();
  swift_getKeyPath();
  v65 = v8;
  sub_1B8C8B57C();
  sub_1B8CE0E7C();
  swift_release();
  v9 = *(_QWORD *)(v8 + 16);
  swift_retain();
  swift_release();
  v62 = v9;
  if (v9)
  {
    sub_1B8C8A980(a2 & 0xFF00 | (v6 != 0), v9, (uint64_t)&v65);
    v10 = 256;
    if (!v67)
      v10 = 0;
    v63 = v10 | v66;
    v64 = v65;
  }
  else
  {
    v63 = 0;
    v64 = 0;
  }
  v11 = swift_retain();
  v12 = sub_1B8CDFAB4(v11, v6);
  swift_release();
  swift_getKeyPath();
  v65 = v12;
  sub_1B8CE0E7C();
  swift_release();
  v61 = *(_QWORD *)(v12 + 136);
  swift_release();
  sub_1B8CE13B0();
  v59 = v14;
  v60 = v13;
  sub_1B8C8AB34(a1, v6 != 0);
  v57 = v16;
  v58 = v15;
  KeyPath = swift_getKeyPath();
  v17 = swift_retain();
  v18 = sub_1B8CDFAB4(v17, v6);
  swift_release();
  swift_getKeyPath();
  v65 = v18;
  sub_1B8CE0E7C();
  swift_release();
  v54 = *(_BYTE *)(v18 + 32);
  v55 = *(_BYTE *)(v18 + 24);
  v19 = *(_QWORD *)(v18 + 40);
  v20 = *(_QWORD *)(v18 + 56);
  v52 = *(_BYTE *)(v18 + 64);
  v53 = *(_BYTE *)(v18 + 48);
  v21 = *(_QWORD *)(v18 + 72);
  v22 = *(void **)(v18 + 80);
  v47 = *(_QWORD *)(v18 + 88);
  v51 = *(_QWORD *)(v18 + 96);
  v50 = *(_OWORD *)(v18 + 104);
  v48 = *(_QWORD *)(v18 + 128);
  v49 = *(_QWORD *)(v18 + 120);
  swift_retain();
  v46 = v22;
  swift_release();
  v23 = swift_retain();
  v24 = sub_1B8CDFAB4(v23, v6);
  swift_release();
  swift_getKeyPath();
  v65 = v24;
  sub_1B8CE0E7C();
  swift_release();
  v25 = *(void **)(v24 + 80);
  v26 = *(_QWORD *)(v24 + 88);
  swift_retain();
  v27 = v25;
  swift_release();

  v28 = swift_retain();
  v29 = sub_1B8CDFAB4(v28, v6);
  swift_release();
  swift_getKeyPath();
  v65 = v29;
  sub_1B8CE0E7C();
  swift_release();
  v30 = *(_BYTE *)(v29 + 24);
  LOBYTE(v24) = *(_BYTE *)(v29 + 32);
  v31 = *(_QWORD *)(v29 + 40);
  v32 = *(_BYTE *)(v29 + 48);
  v33 = *(_QWORD *)(v29 + 56);
  v34 = *(_BYTE *)(v29 + 64);
  v35 = *(_QWORD *)(v29 + 72);
  v37 = *(void **)(v29 + 80);
  v36 = *(_QWORD *)(v29 + 88);
  v38 = *(_QWORD *)(v29 + 96);
  v45 = *(__n128 *)(v29 + 104);
  v39 = *(_QWORD *)(v29 + 120);
  v40 = *(_QWORD *)(v29 + 128);
  swift_retain();
  v41 = v37;
  swift_release();
  v42 = sub_1B8CE1020();
  v43 = sub_1B8CE11E8();
  *(_QWORD *)a3 = v64;
  *(_QWORD *)(a3 + 8) = v63;
  *(_QWORD *)(a3 + 16) = v62;
  *(_QWORD *)(a3 + 24) = v61;
  *(_QWORD *)(a3 + 32) = v60;
  *(_QWORD *)(a3 + 40) = v59;
  *(_QWORD *)(a3 + 48) = v58;
  *(_QWORD *)(a3 + 56) = v57;
  *(_QWORD *)(a3 + 64) = KeyPath;
  *(_BYTE *)(a3 + 72) = v55;
  *(_BYTE *)(a3 + 80) = v54;
  *(_QWORD *)(a3 + 88) = v19;
  *(_BYTE *)(a3 + 96) = v53;
  *(_QWORD *)(a3 + 104) = v20;
  *(_BYTE *)(a3 + 112) = v52;
  *(_QWORD *)(a3 + 120) = v21;
  *(_QWORD *)(a3 + 128) = v46;
  *(_QWORD *)(a3 + 136) = v47;
  *(_QWORD *)(a3 + 144) = v51;
  *(_OWORD *)(a3 + 152) = v50;
  *(_QWORD *)(a3 + 168) = v49;
  *(_QWORD *)(a3 + 176) = v48;
  *(_QWORD *)(a3 + 184) = v26;
  *(_BYTE *)(a3 + 192) = v30;
  *(_BYTE *)(a3 + 200) = v24;
  *(_QWORD *)(a3 + 208) = v31;
  *(_BYTE *)(a3 + 216) = v32;
  *(_QWORD *)(a3 + 224) = v33;
  *(_BYTE *)(a3 + 232) = v34;
  *(_QWORD *)(a3 + 240) = v35;
  *(_QWORD *)(a3 + 248) = v41;
  *(_QWORD *)(a3 + 256) = v36;
  *(_QWORD *)(a3 + 264) = v38;
  result = v45;
  *(__n128 *)(a3 + 272) = v45;
  *(_QWORD *)(a3 + 288) = v39;
  *(_QWORD *)(a3 + 296) = v40;
  *(_QWORD *)(a3 + 304) = v42;
  *(_BYTE *)(a3 + 312) = v43;
  return result;
}

uint64_t sub_1B8C8A980@<X0>(__int16 a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  char v9;

  if (HIBYTE(a1))
  {
    if (HIBYTE(a1) != 1)
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565460);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565360);
      sub_1B8C8B7C8();
      v5 = MEMORY[0x1E0CD8ED0];
      goto LABEL_7;
    }
    v7 = a2;
    v8 = 1;
  }
  else
  {
    v7 = a2;
    v8 = 0;
  }
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565370);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565380);
  v4 = MEMORY[0x1E0CD8ED0];
  sub_1B8C86A88(&qword_1ED565368, &qword_1ED565370, MEMORY[0x1E0CD8ED0]);
  sub_1B8C86A88(&qword_1ED565378, &qword_1ED565380, v4);
  sub_1B8CE1158();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565360);
  sub_1B8C8B7C8();
  v5 = v4;
LABEL_7:
  sub_1B8C86A88(&qword_1ED565358, &qword_1ED565360, v5);
  result = sub_1B8CE1158();
  *(_QWORD *)a3 = v7;
  *(_BYTE *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 9) = v9;
  return result;
}

uint64_t sub_1B8C8AB34(uint64_t a1, char a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = a2 & 1;
  v3 = swift_retain();
  v4 = sub_1B8CDFAB4(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_1B8C8B57C();
  sub_1B8CE0E7C();
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  swift_retain();
  result = swift_release();
  if (v5)
  {
    v7 = objc_msgSend(*(id *)(v5 + 16), sel_adjustmentTraits);
    v8 = objc_msgSend(v7, sel_offset);

    v9 = swift_retain();
    v10 = sub_1B8CDFAB4(v9, v2);
    swift_release();
    swift_getKeyPath();
    sub_1B8CE0E7C();
    swift_release();
    v11 = *(_QWORD *)(v10 + 96);
    swift_release();
    objc_msgSend(v8, sel_offsetForCurrentScreenScaleModeWithInterfaceOrientation_, v11);

    v12 = swift_retain();
    sub_1B8CDFAB4(v12, v2);
    swift_release();
    swift_getKeyPath();
    sub_1B8CE0E7C();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

double sub_1B8C8AD5C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1B8C8A534(*(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 9) << 8), a1).n128_u64[0];
  return result;
}

void sub_1B8C8AD78()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *oslog;
  uint64_t v5;

  if (qword_1ED565310 != -1)
    swift_once();
  v0 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED56B960);
  oslog = sub_1B8CE0EC4();
  v1 = sub_1B8CE15CC();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = swift_slowAlloc();
    v3 = swift_slowAlloc();
    v5 = v3;
    *(_DWORD *)v2 = 136446466;
    sub_1B8CC4700(0xD00000000000001BLL, 0x80000001B8CECEF0, &v5);
    sub_1B8CE1674();
    *(_WORD *)(v2 + 12) = 2082;
    sub_1B8CC4700(0xD000000000000049, 0x80000001B8CECF10, &v5);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, oslog, v1, "…Complete (%{public}s.%{public}s)", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v3, -1, -1);
    MEMORY[0x1BCCB9588](v2, -1, -1);

  }
  else
  {

  }
}

void sub_1B8C8AF44(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  void *v30;
  char v31;
  char *v32;
  void *v33;
  id v34;
  char v35;
  void *v36;
  void (*v37)(char *, uint64_t);
  id v38;
  unint64_t v39;
  id v40;
  id v41;
  char *v42;
  char *v43;
  id v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;

  v44 = a4;
  v41 = a3;
  v49 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654E0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v39 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v39 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v48 = (char *)&v39 - v15;
  MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v39 - v16;
  if (qword_1ED565310 != -1)
    swift_once();
  v17 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED56B960);
  v18 = sub_1B8CE0EC4();
  v19 = sub_1B8CE15CC();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v46 = (uint64_t)a2;
    v22 = v21;
    v51 = v21;
    *(_DWORD *)v20 = 136446466;
    v50 = sub_1B8CC4700(0xD00000000000001BLL, 0x80000001B8CECEF0, &v51);
    sub_1B8CE1674();
    *(_WORD *)(v20 + 12) = 2082;
    v50 = sub_1B8CC4700(0xD000000000000049, 0x80000001B8CECF10, &v51);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v18, v19, "Start (%{public}s.%{public}s)…", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    v23 = v22;
    a2 = (void *)v46;
    MEMORY[0x1BCCB9588](v23, -1, -1);
    MEMORY[0x1BCCB9588](v20, -1, -1);
  }

  v24 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  objc_msgSend(a2, sel_setBackgroundColor_, v24);

  type metadata accessor for WKWallpaperPosterLayerViewModel();
  sub_1B8C8B57C();
  v51 = sub_1B8CE0F9C();
  v52 = v25 & 1;
  v53 = 0;
  v39 = sub_1B8C8B5C4();
  v26 = v47;
  sub_1B8CE123C();
  swift_release();
  v27 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v28 = v48;
  v27(v48, v26, v5);
  v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED564FA0);
  v27(v13, v28, v5);
  v29 = v6;
  v30 = (void *)sub_1B8CE1008();
  objc_msgSend(v30, sel__setSafeAreaInsetsFrozen_, 1);
  v45 = *(void (**)(char *, uint64_t))(v29 + 8);
  v45(v28, v5);
  v40 = v30;
  objc_msgSend(a2, sel_addSubview_, v30);
  objc_msgSend(a2, sel_bounds);
  objc_msgSend(v30, sel_setFrame_, 0.0, 0.0);
  objc_msgSend(v30, sel_setAutoresizingMask_, 18);
  v51 = sub_1B8CE0F9C();
  v52 = v31 & 1;
  v53 = 1;
  sub_1B8CE123C();
  swift_release();
  v27(v13, v28, v5);
  v32 = v43;
  v27(v43, v13, v5);
  v33 = (void *)sub_1B8CE1008();
  objc_msgSend(v33, sel__setSafeAreaInsetsFrozen_, 1);
  v45(v13, v5);
  v34 = v41;
  objc_msgSend(v41, sel_addSubview_, v33);
  objc_msgSend(v34, sel_bounds);
  objc_msgSend(v33, sel_setFrame_, 0.0, 0.0);
  objc_msgSend(v33, sel_setAutoresizingMask_, 18);
  v51 = sub_1B8CE0F9C();
  v52 = v35 & 1;
  v53 = 2;
  sub_1B8CE123C();
  swift_release();
  v27(v32, v13, v5);
  v27(v42, v32, v5);
  v36 = (void *)sub_1B8CE1008();
  objc_msgSend(v36, sel__setSafeAreaInsetsFrozen_, 1);
  v37 = v45;
  v45(v32, v5);
  v38 = v44;
  objc_msgSend(v44, sel_addSubview_, v36);
  objc_msgSend(v38, sel_bounds);
  objc_msgSend(v36, sel_setFrame_, 0.0, 0.0);
  objc_msgSend(v36, sel_setAutoresizingMask_, 18);

  v37(v13, v5);
  v37(v48, v5);
  v37(v47, v5);
  sub_1B8C8AD78();
}

unint64_t sub_1B8C8B57C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5652E0;
  if (!qword_1ED5652E0)
  {
    v1 = type metadata accessor for WKWallpaperPosterLayerViewModel();
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE7958, v1);
    atomic_store(result, (unint64_t *)&qword_1ED5652E0);
  }
  return result;
}

unint64_t sub_1B8C8B5C4()
{
  unint64_t result;

  result = qword_1ED565218;
  if (!qword_1ED565218)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE5088, &type metadata for WKWallpaperPosterLayer);
    atomic_store(result, (unint64_t *)&qword_1ED565218);
  }
  return result;
}

uint64_t destroy for WKWallpaperPosterLayer()
{
  return swift_release();
}

uint64_t _s12WallpaperKit22WKWallpaperPosterLayerVwCP_0(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WKWallpaperPosterLayer(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for WKWallpaperPosterLayer(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for WKWallpaperPosterLayer(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WKWallpaperPosterLayer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKWallpaperPosterLayer()
{
  return &type metadata for WKWallpaperPosterLayer;
}

uint64_t sub_1B8C8B798()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8C8B7C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED565458;
  if (!qword_1ED565458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565460);
    v2 = MEMORY[0x1E0CD8ED0];
    v3[0] = sub_1B8C86A88(&qword_1ED565368, &qword_1ED565370, MEMORY[0x1E0CD8ED0]);
    v3[1] = sub_1B8C86A88(&qword_1ED565378, &qword_1ED565380, v2);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDB8A0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED565458);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WKWallpaperPosterLayer.Layer(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8C8B8B8 + 4 * byte_1B8CE5055[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8C8B8EC + 4 * byte_1B8CE5050[v4]))();
}

uint64_t sub_1B8C8B8EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8C8B8F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8C8B8FCLL);
  return result;
}

uint64_t sub_1B8C8B908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8C8B910);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8C8B914(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8C8B91C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WKWallpaperPosterLayer.Layer()
{
  return &type metadata for WKWallpaperPosterLayer.Layer;
}

uint64_t sub_1B8C8B938()
{
  return sub_1B8C8BA94(&qword_1ED565088, &qword_1ED565090, (uint64_t (*)(void))sub_1B8C8B96C, MEMORY[0x1E0CDCF90]);
}

unint64_t sub_1B8C8B96C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565078;
  if (!qword_1ED565078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565080);
    v2[0] = sub_1B8C8B9F0();
    v2[1] = sub_1B8C86A88(&qword_1ED5653B8, &qword_1ED5653C0, MEMORY[0x1E0CDB148]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565078);
  }
  return result;
}

unint64_t sub_1B8C8B9F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565068;
  if (!qword_1ED565068)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565070);
    v2[0] = sub_1B8C8BA94(&qword_1ED565058, &qword_1ED565060, sub_1B8C8BAFC, MEMORY[0x1E0CD90E0]);
    v2[1] = sub_1B8C86A88(&qword_1ED5654D0, &qword_1ED5654D8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565068);
  }
  return result;
}

uint64_t sub_1B8C8BA94(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8C8BAFC()
{
  return sub_1B8C8BA94(&qword_1ED565048, &qword_1ED565050, (uint64_t (*)(void))sub_1B8C8BB20, MEMORY[0x1E0CD9DC0]);
}

unint64_t sub_1B8C8BB20()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED5654E8;
  if (!qword_1ED5654E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5654F0);
    v2 = sub_1B8C8BB84();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDF690], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED5654E8);
  }
  return result;
}

unint64_t sub_1B8C8BB84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED565510;
  if (!qword_1ED565510)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565508);
    v2 = sub_1B8C86A88(&qword_1ED5654F8, &qword_1ED565500, MEMORY[0x1E0CDFB30]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED565510);
  }
  return result;
}

unint64_t sub_1B8C8BC04()
{
  unint64_t result;

  result = qword_1EF1D4070;
  if (!qword_1EF1D4070)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE51C0, &type metadata for WKWallpaperPosterLayer.Layer);
    atomic_store(result, (unint64_t *)&qword_1EF1D4070);
  }
  return result;
}

uint64_t sub_1B8C8BC48()
{
  sub_1B8C8BC7C();
  return sub_1B8CE1098();
}

unint64_t sub_1B8C8BC7C()
{
  unint64_t result;

  result = qword_1ED5651D0;
  if (!qword_1ED5651D0)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE522C, &type metadata for WKPosterEnvironmentSnapshotEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_1ED5651D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKPosterEnvironmentSnapshotEnvironmentKey()
{
  return &type metadata for WKPosterEnvironmentSnapshotEnvironmentKey;
}

__n128 sub_1B8C8BCD0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  __n128 result;

  v0 = (void *)*MEMORY[0x1E0CD3048];
  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_functionWithName_, v2);

  v4 = sub_1B8CE1398();
  byte_1ED56B8B0 = 0;
  byte_1ED56B8B8 = 0;
  qword_1ED56B8C0 = 0x3FF0000000000000;
  byte_1ED56B8C8 = 0;
  qword_1ED56B8D0 = 0;
  byte_1ED56B8D8 = 1;
  qword_1ED56B8E0 = 0;
  qword_1ED56B8E8 = (uint64_t)v3;
  *(_QWORD *)&xmmword_1ED56B8F0 = v4;
  *((_QWORD *)&xmmword_1ED56B8F0 + 1) = 1;
  qword_1ED56B900 = 0;
  unk_1ED56B908 = 0;
  __asm { FMOV            V0.2D, #1.0 }
  xmmword_1ED56B910 = (__int128)result;
  return result;
}

id sub_1B8C8BD74@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  id v11;

  if (qword_1ED5651C8 != -1)
    swift_once();
  v2 = byte_1ED56B8B8;
  v3 = qword_1ED56B8C0;
  v4 = byte_1ED56B8C8;
  v5 = qword_1ED56B8D0;
  v6 = byte_1ED56B8D8;
  v7 = qword_1ED56B8E0;
  v8 = qword_1ED56B8E8;
  v11 = (id)qword_1ED56B8E8;
  *(_BYTE *)a1 = byte_1ED56B8B0;
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_OWORD *)&qword_1ED56B900;
  *(_OWORD *)(a1 + 64) = xmmword_1ED56B8F0;
  *(_OWORD *)(a1 + 80) = v9;
  *(_OWORD *)(a1 + 96) = xmmword_1ED56B910;
  swift_retain();
  return v11;
}

uint64_t sub_1B8C8BE28()
{
  sub_1B8C8BE78();
  return sub_1B8CE0FFC();
}

unint64_t sub_1B8C8BE78()
{
  unint64_t result;

  result = qword_1ED565290;
  if (!qword_1ED565290)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKPosterEnvironmentSnapshot, &type metadata for WKPosterEnvironmentSnapshot);
    atomic_store(result, (unint64_t *)&qword_1ED565290);
  }
  return result;
}

uint64_t WKBokehWallpaperInput.backgroundColors.getter()
{
  return sub_1B8C8BED4((SEL *)&selRef_backgroundColors);
}

uint64_t WKBokehWallpaperInput.bubbleColors.getter()
{
  return sub_1B8C8BED4((SEL *)&selRef_bubbleColors);
}

uint64_t sub_1B8C8BED4(SEL *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), *a1);
  sub_1B8C82740();
  v3 = sub_1B8CE1530();

  return v3;
}

id WKBokehWallpaperInput.bubbleCount.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_bubbleCount);
}

id WKBokehWallpaperInput.bubbleScale.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_bubbleScale);
}

id WKBokehWallpaperInput.parallaxMultiplier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_parallaxMultiplier);
}

id WKBokehWallpaperInput.thumbnailSeed.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailSeed);
}

uint64_t WKBokehWallpaperInput.init(backgroundColors:bubbleColors:bubbleCount:bubbleScale:parallaxMultiplier:thumbnailSeed:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t result;

  v10 = objc_allocWithZone((Class)WKBokehWallpaperInput);
  sub_1B8C82740();
  v11 = (void *)sub_1B8CE1524();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_1B8CE1524();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v10, sel_initWithBackgroundColors_bubbleColors_bubbleCount_bubbleScale_parallaxMultiplier_thumbnailSeed_, v11, v12, a1, a2, a4, a5);

  type metadata accessor for WKBokehWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v13;
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for WKBokehWallpaperInput.ImplementationWrapper()
{
  return objc_opt_self();
}

id static WKBokehWallpaperInput.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKBokehWallpaperInput.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKBokehWallpaperInput.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKBokehWallpaperInput.description.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_description);
  v2 = sub_1B8CE14B8();

  return v2;
}

unint64_t sub_1B8C8C1B8()
{
  unint64_t result;

  result = qword_1EF1D4078;
  if (!qword_1EF1D4078)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKBokehWallpaperInput, &type metadata for WKBokehWallpaperInput);
    atomic_store(result, (unint64_t *)&qword_1EF1D4078);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKBokehWallpaperInput()
{
  return &type metadata for WKBokehWallpaperInput;
}

void sub_1B8C8C20C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B8C8C248()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE5380;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
  sub_1B8CE153C();
  return v0;
}

void sub_1B8C8C2F0()
{
  uint64_t v0;
  id v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE5380;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.403921569, 0.780392157, 0.941176471, 1.0);
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  JUMPOUT(0x1B8C8C2B4);
}

void sub_1B8C8C37C()
{
  uint64_t v0;
  id v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE5380;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.62745098, 0.839215686, 0.309803922, 1.0);
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  JUMPOUT(0x1B8C8C2B4);
}

void sub_1B8C8C404()
{
  uint64_t v0;
  id v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE5380;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.839215686, 0.309803922, 1.0);
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  JUMPOUT(0x1B8C8C2B4);
}

void sub_1B8C8C488()
{
  uint64_t v0;
  id v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE5380;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 0.360784314, 0.380392157, 1.0);
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  JUMPOUT(0x1B8C8C2B4);
}

void sub_1B8C8C514()
{
  uint64_t v0;
  id v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE5380;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.658823529, 0.654901961, 0.635294118, 1.0);
  v1 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  JUMPOUT(0x1B8C8C2B4);
}

void sub_1B8C8C59C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE5370;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.243137255, 0.501960784, 0.698039216, 1.0);
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.305882353, 0.576470588, 0.760784314, 1.0);
  *(_QWORD *)(v0 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.384313725, 0.647058824, 0.8, 1.0);
  *(_QWORD *)(v0 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.435294118, 0.705882353, 0.839215686, 1.0);
  *(_QWORD *)(v0 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.482352941, 0.745098039, 0.858823529, 1.0);
  *(_QWORD *)(v0 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.521568627, 0.752941176, 0.870588235, 1.0);
  *(_QWORD *)(v0 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.541176471, 0.749019608, 0.870588235, 1.0);
  *(_QWORD *)(v0 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.560784314, 0.717647059, 0.858823529, 1.0);
  *(_QWORD *)(v0 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.576470588, 0.670588235, 0.850980392, 1.0);
  *(_QWORD *)(v0 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.541176471, 0.607843137, 0.831372549, 1.0);
  *(_QWORD *)(v0 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.478431373, 0.525490196, 0.768627451, 1.0);
  *(_QWORD *)(v0 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.37254902, 0.415686275, 0.678431373, 1.0);
  *(_QWORD *)(v0 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.258823529, 0.305882353, 0.549019608, 1.0);
  *(_QWORD *)(v0 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.121568627, 0.180392157, 0.380392157, 1.0);
  JUMPOUT(0x1B8C8C2C0);
}

void sub_1B8C8C880()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE5360;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.415686275, 0.501960784, 0.560784314, 1.0);
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.51372549, 0.584313725, 0.619607843, 1.0);
  *(_QWORD *)(v0 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.552941176, 0.631372549, 0.658823529, 1.0);
  *(_QWORD *)(v0 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.552941176, 0.62745098, 0.650980392, 1.0);
  *(_QWORD *)(v0 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.478431373, 0.568627451, 0.6, 1.0);
  *(_QWORD *)(v0 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.321568627, 0.447058824, 0.501960784, 1.0);
  JUMPOUT(0x1B8C8C2C0);
}

void sub_1B8C8C9E0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B8C8CA1C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B8CE5390;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 0.498039216);
  sub_1B8CE153C();
  return v0;
}

uint64_t sub_1B8C8DAD8()
{
  char v1;
  char v2;

  sub_1B8C8DFDC();
  if ((sub_1B8CE168C() & 1) != 0)
  {
    if ((sub_1B8CE168C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    if ((sub_1B8CE168C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    if ((sub_1B8CE168C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    if ((sub_1B8CE168C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    if ((sub_1B8CE168C() & 1) == 0)
    {
      if ((sub_1B8CE168C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v2 = sub_1B8CE168C();
        swift_bridgeObjectRelease();
        if ((v2 & 1) != 0)
          return 7;
        else
          return 0;
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return 2;
  }
  if ((sub_1B8CE168C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  if ((sub_1B8CE168C() & 1) != 0 && (sub_1B8CE168C() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  if ((sub_1B8CE168C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  if ((sub_1B8CE168C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  if ((sub_1B8CE168C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  if ((sub_1B8CE168C() & 1) != 0)
    goto LABEL_25;
  if ((sub_1B8CE168C() & 1) != 0)
  {
    v1 = sub_1B8CE168C();
    swift_bridgeObjectRelease();
    if ((v1 & 1) != 0)
      return 0;
    else
      return 12;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

unint64_t sub_1B8C8DFDC()
{
  unint64_t result;

  result = qword_1ED565528;
  if (!qword_1ED565528)
  {
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED565528);
  }
  return result;
}

uint64_t sub_1B8C8E020()
{
  return 0;
}

uint64_t WKWallpaper.supportsSerialization.getter()
{
  return 0;
}

uint64_t WKWallpaper.supportsCopying.getter()
{
  return 0;
}

uint64_t sub_1B8C8E038()
{
  return 0;
}

Swift::OpaquePointer_optional __swiftcall WKWallpaper.propertyListRepresentation()()
{
  void *v0;
  Swift::OpaquePointer_optional result;

  v0 = 0;
  result.value._rawValue = v0;
  return result;
}

uint64_t sub_1B8C8E048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return WKWallpaper.copyWallpaperContents(to:)(a1, a2, a3);
}

uint64_t WKWallpaper.copyWallpaperContents(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 64))(a2, a3);
  if ((result & 1) == 0)
  {
    type metadata accessor for WKWallpaperKitError(0);
    sub_1B8C8E33C(MEMORY[0x1E0DEE9D8]);
    sub_1B8C8E464();
    sub_1B8CE0DB0();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B8C8E0E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  id v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v13 - v8, v2, a1);
  if (swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    v11 = *(id *)(v13 + 16);
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, a1);
    return (uint64_t)v11;
  }
  else
  {
    v10(v7, v2, a1);
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_1B8CE1704();
    swift_bridgeObjectRelease();
    v13 = 0xD000000000000018;
    v14 = 0x80000001B8CECFE0;
    swift_getDynamicType();
    sub_1B8CE1944();
    sub_1B8CE14DC();
    swift_bridgeObjectRelease();
    result = sub_1B8CE17D0();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B8C8E33C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4080);
  v2 = sub_1B8CE180C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B8C8EC5C(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_1B8C8E4AC(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1B8C8ECA4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8C8E464()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1D41B0;
  if (!qword_1EF1D41B0)
  {
    type metadata accessor for WKWallpaperKitError(255);
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE437C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF1D41B0);
  }
  return result;
}

unint64_t sub_1B8C8E4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B8CE18D8();
  sub_1B8CE14D0();
  v4 = sub_1B8CE1908();
  return sub_1B8C8E510(a1, a2, v4);
}

unint64_t sub_1B8C8E510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1B8CE1890() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1B8CE1890() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1B8CE1890() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void _s12WallpaperKit16WKWallpaperValueO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

id sub_1B8C8E68C()
{
  _QWORD *v0;
  char v1;
  _QWORD *v2;
  int v3;
  void *v4;
  uint64_t v5;
  id v6;

  if (v3)
  {
    sub_1B8C8EA9C(v0, v1);
    sub_1B8C8EA9C(v2, v3);
    sub_1B8C8846C(v0, v1);
    sub_1B8C8846C(v2, v3);
    return 0;
  }
  else
  {
    v4 = (void *)v0[2];
    v5 = v2[2];
    sub_1B8C8EA9C(v2, 0);
    sub_1B8C8EA9C(v0, 0);
    sub_1B8C8EA9C(v0, 0);
    sub_1B8C8EA9C(v2, 0);
    v6 = objc_msgSend(v4, sel_isEqual_, v5);
    sub_1B8C8846C(v0, 0);
    sub_1B8C8846C(v2, 0);
    sub_1B8C8846C(v2, 0);
    sub_1B8C8846C(v0, 0);
  }
  return v6;
}

uint64_t dispatch thunk of WKWallpaper.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WKWallpaper.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of WKWallpaper.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of WKWallpaper.representedType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of WKWallpaper.backingType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of WKWallpaper.supportsSerialization.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of WKWallpaper.supportsCopying.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of WKWallpaper.propertyListRepresentation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of WKWallpaper.copyWallpaperContents(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of WKFileBasedWallpaper.fullsizeImageURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WKFileBasedWallpaper.videoAssetURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of WKFileBasedWallpaper.stillTimeInVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t initializeBufferWithCopyOfBuffer for WKWallpaperValue(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1B8C8EA9C(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1B8C8EA9C(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      result = (id)swift_retain();
      break;
    case 4:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for WKWallpaperValue(uint64_t a1)
{
  sub_1B8C8846C(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for WKWallpaperValue(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1B8C8EA9C(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1B8C8846C(v5, v6);
  return a1;
}

uint64_t assignWithTake for WKWallpaperValue(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1B8C8846C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for WKWallpaperValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WKWallpaperValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B8C8EBF8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1B8C8EC00(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WKWallpaperValue()
{
  return &type metadata for WKWallpaperValue;
}

uint64_t dispatch thunk of WKValueBasedWallpaper.wallpaperValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

unint64_t sub_1B8C8EC20()
{
  unint64_t result;

  result = qword_1ED565588;
  if (!qword_1ED565588)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED565588);
  }
  return result;
}

uint64_t sub_1B8C8EC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1D4088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1B8C8ECA4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

ValueMetadata *type metadata accessor for WKLayeredAnimationWallpaperPosterOverlay()
{
  return &type metadata for WKLayeredAnimationWallpaperPosterOverlay;
}

uint64_t sub_1B8C8ECC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8C8ECD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE v37[4];
  int v38;
  void (*v39)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _BYTE v54[23];
  uint64_t v55;
  unsigned __int8 v56;

  v3 = (int *)type metadata accessor for WKAnimationPackageLayer(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5650A8);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v40 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v37[-v11];
  v13 = sub_1B8CE0E1C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = &v37[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v42 = &v37[-v18];
  v19 = *(_QWORD *)v1;
  v56 = *(_BYTE *)(v1 + 8);
  v45 = v19;
  v46 = v56;
  v52 = *(_OWORD *)(v1 + 89);
  v53 = *(_OWORD *)(v1 + 105);
  *(_OWORD *)v54 = *(_OWORD *)(v1 + 121);
  *(_QWORD *)&v54[15] = *(_QWORD *)(v1 + 136);
  v48 = *(_OWORD *)(v1 + 25);
  v49 = *(_OWORD *)(v1 + 41);
  v50 = *(_OWORD *)(v1 + 57);
  v51 = *(_OWORD *)(v1 + 73);
  v47 = *(_OWORD *)(v1 + 9);
  sub_1B8C88268(&v55);
  if (v55)
  {
    v41 = a1;
    v20 = objc_msgSend(*(id *)(v55 + 16), sel_floatingAnimationFileURL);
    if (v20)
    {
      v21 = v20;
      sub_1B8CE0E04();

      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, v22, 1, v13);
    sub_1B8C8F26C((uint64_t)v10, (uint64_t)v12, (uint64_t *)&unk_1ED565130);
    swift_release();
    v23 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    a1 = v41;
    if (v23 != 1)
    {
      v39 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32);
      v26 = v42;
      v39(v42, v12, v13);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v17, v26, v13);
      v27 = v56;
      v38 = v56;
      v28 = swift_retain();
      v29 = sub_1B8CDFAB4(v28, v27);
      swift_release();
      swift_getKeyPath();
      v45 = v29;
      sub_1B8C8B57C();
      sub_1B8CE0E7C();
      swift_release();
      v30 = *(_QWORD *)(v29 + 136);
      swift_release();
      *(_QWORD *)v5 = swift_getKeyPath();
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 40) = 0u;
      *(_OWORD *)(v5 + 56) = 0u;
      *(_OWORD *)(v5 + 72) = 0u;
      *(_OWORD *)(v5 + 88) = 0u;
      *(_OWORD *)(v5 + 97) = 0u;
      v31 = (uint64_t *)&v5[v3[5]];
      *v31 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
      swift_storeEnumTagMultiPayload();
      v5[v3[6]] = 2;
      v39(&v5[v3[7]], v17, v13);
      *(_QWORD *)&v5[v3[8]] = v30;
      v32 = swift_retain();
      v33 = sub_1B8CDFAB4(v32, v38);
      swift_release();
      swift_getKeyPath();
      v45 = v33;
      sub_1B8CE0E7C();
      a1 = v41;
      swift_release();
      v34 = *(_QWORD *)(v33 + 152);
      swift_release();
      v35 = v40;
      sub_1B8C8F1EC((uint64_t)v5, (uint64_t)v40);
      v25 = v44;
      *(_QWORD *)&v35[*(int *)(v44 + 52)] = v34;
      sub_1B8C8F230((uint64_t)v5);
      (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v42, v13);
      sub_1B8C8F26C((uint64_t)v35, a1, &qword_1ED5650A8);
      v24 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(a1, v24, 1, v25);
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  sub_1B8C88430((uint64_t)v12, (uint64_t *)&unk_1ED565130);
  v24 = 1;
  v25 = v44;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(a1, v24, 1, v25);
}

uint64_t sub_1B8C8F1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKAnimationPackageLayer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8C8F230(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WKAnimationPackageLayer(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B8C8F26C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1B8C8F2B4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED5650B8;
  if (!qword_1ED5650B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5650B0);
    v2 = sub_1B8C8F318();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED5650B8);
  }
  return result;
}

unint64_t sub_1B8C8F318()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5650A0;
  if (!qword_1ED5650A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5650A8);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDFB30], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5650A0);
  }
  return result;
}

double WKWallpaperBundle.valueBasedWallpaper(for:appearance:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B8C8FA78(a1, a2, (SEL *)&selRef_valueBasedWallpaperForLocation_andAppearance_, (void (*)(void))sub_1B8C8FB7C, a3);
}

uint64_t WKWallpaperBundle.adjustmentTraits.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_adjustmentTraits);
  type metadata accessor for WKWallpaperAdjustmentTraits.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *a1 = result;
  return result;
}

id WKWallpaperBundle.version.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_version);
}

float WKWallpaperBundle.contentVersion.getter()
{
  uint64_t v0;
  id v1;
  float v2;
  float v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_contentVersion);
  objc_msgSend(v1, sel_floatValue);
  v3 = v2;

  return v3;
}

uint64_t WKWallpaperBundle.family.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_family);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B8CE14B8();

  return v3;
}

uint64_t WKWallpaperBundle.preferredProminentColors.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_preferredProminentColors);
  if (!v1)
    return 0;
  v2 = v1;
  type metadata accessor for WKWallpaperAppearance(0);
  sub_1B8C82740();
  sub_1B8C83740(&qword_1EF1D3DA0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperAppearance, (uint64_t)&unk_1B8CE4338);
  v3 = sub_1B8CE144C();

  return v3;
}

id WKWallpaperBundle.isAppearanceAware.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_isAppearanceAware);
}

id WKWallpaperBundle.hasDistinctWallpapersForLocations.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_hasDistinctWallpapersForLocations);
}

uint64_t WKWallpaperBundle.identifierString.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_identifierString);
}

uint64_t WKWallpaperBundle.name.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_name);
}

id WKWallpaperBundle.logicalScreenClass.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_logicalScreenClass);
}

id WKWallpaperBundle.disableParallax.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_disableParallax);
}

id WKWallpaperBundle.isOffloaded.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_isOffloaded);
}

id WKWallpaperBundle.supportsCopying.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

id WKWallpaperBundle.disableModifyingLegibilityBlur.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_disableModifyingLegibilityBlur);
}

id WKWallpaperBundle.wallpaperBackingType(for:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperBackingTypeForLocation_, a1);
}

double WKWallpaperBundle.thumbnailRepresentable(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8C8FB08(a1, (SEL *)&selRef_thumbnailRepresentableForLocation_, (void (*)(void))sub_1B8C8F68C, a2);
}

uint64_t sub_1B8C8F68C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = v2;
    a1[3] = (uint64_t)&type metadata for WKLayeredStripeWallpaper;
    a1[4] = (uint64_t)&protocol witness table for WKLayeredStripeWallpaper;
    type metadata accessor for WKLayeredStripeWallpaper.ImplementationWrapper();
LABEL_13:
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v3;
    *a1 = v9;
    return swift_unknownObjectRetain();
  }
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v3 = v4;
    a1[3] = (uint64_t)&type metadata for WKLayeredStillWallpaper;
    a1[4] = (uint64_t)&protocol witness table for WKLayeredStillWallpaper;
    type metadata accessor for WKLayeredStillWallpaper.ImplementationWrapper();
    goto LABEL_13;
  }
  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    v3 = v5;
    a1[3] = (uint64_t)&type metadata for WKLayeredAnimationWallpaper;
    a1[4] = (uint64_t)&protocol witness table for WKLayeredAnimationWallpaper;
    type metadata accessor for WKLayeredAnimationWallpaper.ImplementationWrapper();
    goto LABEL_13;
  }
  objc_opt_self();
  v6 = swift_dynamicCastObjCClass();
  if (v6)
  {
    v3 = v6;
    a1[3] = (uint64_t)&type metadata for WKLayeredThumbnailWallpaper;
    a1[4] = (uint64_t)&protocol witness table for WKLayeredThumbnailWallpaper;
    type metadata accessor for WKLayeredThumbnailWallpaper.ImplementationWrapper();
    goto LABEL_13;
  }
  objc_opt_self();
  v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    v3 = v7;
    a1[3] = (uint64_t)&type metadata for WKBokehWallpaper;
    a1[4] = (uint64_t)&protocol witness table for WKBokehWallpaper;
    type metadata accessor for WKBokehWallpaper.ImplementationWrapper();
    goto LABEL_13;
  }
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    v3 = v8;
    a1[3] = (uint64_t)&type metadata for WKThumbnailWallpaper;
    a1[4] = (uint64_t)&protocol witness table for WKThumbnailWallpaper;
    type metadata accessor for WKThumbnailWallpaper.ImplementationWrapper();
    goto LABEL_13;
  }
  sub_1B8CE1704();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  sub_1B8CE1944();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  result = sub_1B8CE17D0();
  __break(1u);
  return result;
}

double WKWallpaperBundle.thumbnailRepresentable(for:appearance:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B8C8FA78(a1, a2, (SEL *)&selRef_thumbnailRepresentableForLocation_andAppearance_, (void (*)(void))sub_1B8C8F68C, a3);
}

double WKWallpaperBundle.fileBasedWallpaper(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8C8FB08(a1, (SEL *)&selRef_fileBasedWallpaperForLocation_, (void (*)(void))sub_1B8C8F90C, a2);
}

uint64_t sub_1B8C8F90C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = v2;
    a1[3] = (uint64_t)&type metadata for WKLiveWallpaper;
    a1[4] = (uint64_t)&protocol witness table for WKLiveWallpaper;
    type metadata accessor for WKLiveWallpaper.ImplementationWrapper();
LABEL_5:
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *a1 = v5;
    return swift_unknownObjectRetain();
  }
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v3 = v4;
    a1[3] = (uint64_t)&type metadata for WKStillWallpaper;
    a1[4] = (uint64_t)&protocol witness table for WKStillWallpaper;
    type metadata accessor for WKStillWallpaper.ImplementationWrapper();
    goto LABEL_5;
  }
  sub_1B8CE1704();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  sub_1B8CE1944();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  result = sub_1B8CE17D0();
  __break(1u);
  return result;
}

double WKWallpaperBundle.fileBasedWallpaper(for:appearance:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B8C8FA78(a1, a2, (SEL *)&selRef_fileBasedWallpaperForLocation_andAppearance_, (void (*)(void))sub_1B8C8F90C, a3);
}

double sub_1B8C8FA78@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, SEL *a3@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  double result;

  if (objc_msgSend(*(id *)(*(_QWORD *)v5 + 16), *a3, a1, a2))
  {
    a4();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_QWORD *)(a5 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

double WKWallpaperBundle.valueBasedWallpaper(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8C8FB08(a1, (SEL *)&selRef_valueBasedWallpaperForLocation_, (void (*)(void))sub_1B8C8FB7C, a2);
}

double sub_1B8C8FB08@<D0>(uint64_t a1@<X0>, SEL *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double result;

  if (objc_msgSend(*(id *)(*(_QWORD *)v4 + 16), *a2, a1))
  {
    a3();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1B8C8FB7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = v2;
    a1[3] = (uint64_t)&type metadata for WKLayeredStripeWallpaper;
    a1[4] = sub_1B8C90E20();
    type metadata accessor for WKLayeredStripeWallpaper.ImplementationWrapper();
LABEL_11:
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v3;
    *a1 = v8;
    return swift_unknownObjectRetain();
  }
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v3 = v4;
    a1[3] = (uint64_t)&type metadata for WKLayeredStillWallpaper;
    a1[4] = sub_1B8C90DDC();
    type metadata accessor for WKLayeredStillWallpaper.ImplementationWrapper();
    goto LABEL_11;
  }
  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    v3 = v5;
    a1[3] = (uint64_t)&type metadata for WKBokehWallpaper;
    a1[4] = sub_1B8C90D98();
    type metadata accessor for WKBokehWallpaper.ImplementationWrapper();
    goto LABEL_11;
  }
  objc_opt_self();
  v6 = swift_dynamicCastObjCClass();
  if (v6)
  {
    v3 = v6;
    a1[3] = (uint64_t)&type metadata for WKLayeredThumbnailWallpaper;
    a1[4] = sub_1B8C90D54();
    type metadata accessor for WKLayeredThumbnailWallpaper.ImplementationWrapper();
    goto LABEL_11;
  }
  objc_opt_self();
  v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    v3 = v7;
    a1[3] = (uint64_t)&type metadata for WKLayeredAnimationWallpaper;
    a1[4] = sub_1B8C90D10();
    type metadata accessor for WKLayeredAnimationWallpaper.ImplementationWrapper();
    goto LABEL_11;
  }
  sub_1B8CE1704();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  sub_1B8CE1944();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  result = sub_1B8CE17D0();
  __break(1u);
  return result;
}

void WKWallpaperBundle.copyWallpaperRepresenting(to:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE0DEC();
  v7[0] = 0;
  v3 = objc_msgSend(v1, sel_copyWallpaperRepresentingToDestinationDirectoryURL_error_, v2, v7);

  v4 = v7[0];
  if (v3)
  {
    sub_1B8CE0E04();
    v5 = v4;

  }
  else
  {
    v6 = v7[0];
    sub_1B8CE0DBC();

    swift_willThrow();
  }
}

uint64_t WKWallpaperBundle.thumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_thumbnailImageURL);
  if (v3)
  {
    v4 = v3;
    sub_1B8CE0E04();

    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id WKWallpaperBundle.thumbnailImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

void WKWallpaperBundle.bundleURL.getter()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_bundleURL);
  sub_1B8CE0E04();

}

uint64_t WKWallpaperBundle.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t result;

  v4 = objc_allocWithZone((Class)WKWallpaperBundle);
  v5 = (void *)sub_1B8CE0DEC();
  v6 = objc_msgSend(v4, sel_initWithURL_, v5);

  v7 = sub_1B8CE0E1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  if (v6)
  {
    type metadata accessor for WKWallpaperBundle.ImplementationWrapper();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v6;
  }
  else
  {
    result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for WKWallpaperBundle.ImplementationWrapper()
{
  return objc_opt_self();
}

id WKWallpaperBundle.id.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

id static WKWallpaperBundle.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKWallpaperBundle.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKWallpaperBundle.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

uint64_t WKWallpaperBundle.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

float sub_1B8C90140()
{
  uint64_t v0;
  id v1;
  float v2;
  float v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_contentVersion);
  objc_msgSend(v1, sel_floatValue);
  v3 = v2;

  return v3;
}

id sub_1B8C90198()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_isAppearanceAware);
}

id sub_1B8C901BC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_hasDistinctWallpapersForLocations);
}

uint64_t sub_1B8C901E0(uint64_t a1, uint64_t a2)
{
  return sub_1B8C82E58(a1, a2, (SEL *)&selRef_identifierString);
}

id sub_1B8C901EC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_logicalScreenClass);
}

id sub_1B8C90214()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_disableParallax);
}

id sub_1B8C90238()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_isOffloaded);
}

id sub_1B8C9025C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_disableModifyingLegibilityBlur);
}

uint64_t sub_1B8C90280@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_adjustmentTraits);
  type metadata accessor for WKWallpaperAdjustmentTraits.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *a1 = result;
  return result;
}

id sub_1B8C902D8(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperBackingTypeForLocation_, a1);
}

double sub_1B8C902F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8C90354(a1, (SEL *)&selRef_thumbnailRepresentableForLocation_, (void (*)(void))sub_1B8C8F68C, a2);
}

double sub_1B8C90304@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B8C903DC(a1, a2, (SEL *)&selRef_thumbnailRepresentableForLocation_andAppearance_, (void (*)(void))sub_1B8C8F68C, a3);
}

double sub_1B8C90318@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8C90354(a1, (SEL *)&selRef_fileBasedWallpaperForLocation_, (void (*)(void))sub_1B8C8F90C, a2);
}

double sub_1B8C9032C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B8C903DC(a1, a2, (SEL *)&selRef_fileBasedWallpaperForLocation_andAppearance_, (void (*)(void))sub_1B8C8F90C, a3);
}

double sub_1B8C90340@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B8C90354(a1, (SEL *)&selRef_valueBasedWallpaperForLocation_, (void (*)(void))sub_1B8C8FB7C, a2);
}

double sub_1B8C90354@<D0>(uint64_t a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double result;

  if (objc_msgSend(*(id *)(*(_QWORD *)v4 + 16), *a2, a1))
  {
    a3();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

double sub_1B8C903C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B8C903DC(a1, a2, (SEL *)&selRef_valueBasedWallpaperForLocation_andAppearance_, (void (*)(void))sub_1B8C8FB7C, a3);
}

double sub_1B8C903DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, SEL *a3@<X4>, void (*a4)(void)@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  double result;

  if (objc_msgSend(*(id *)(*(_QWORD *)v5 + 16), *a3, a1, a2))
  {
    a4();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_QWORD *)(a5 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

void sub_1B8C90454()
{
  WKWallpaperBundle.copyWallpaperRepresenting(to:)();
}

uint64_t static WKWallpaperBundle.createWallpaperBundle(in:version:identifier:name:family:disableParallax:isOffloaded:logicalScreenClass:thumbnailImageURL:adjustmentTraits:preferredProminentColors:assetMapping:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X6>, int a4@<W7>, uint64_t *a5@<X8>, char a6, uint64_t a7, uint64_t a8, uint64_t *a9, void *a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;

  v33 = a4;
  v34 = a2;
  v35 = a5;
  v32 = a1;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a9;
  sub_1B8C907D4(a11);
  v31 = sub_1B8CE0DEC();
  v30 = sub_1B8CE1494();
  if (a3)
    v29 = sub_1B8CE1494();
  else
    v29 = 0;
  sub_1B8C84538(a8, (uint64_t)v14);
  v16 = sub_1B8CE0E1C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) != 1)
  {
    v18 = (void *)sub_1B8CE0DEC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  v19 = a10;
  if (v15)
    v20 = *(id *)(v15 + 16);
  else
    v20 = 0;
  if (a10)
    v19 = (void *)sub_1B8CE1440();
  v21 = (void *)objc_opt_self();
  type metadata accessor for WKWallpaperLocation(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4098);
  sub_1B8C83740(&qword_1EF1D3D90, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperLocation, (uint64_t)&unk_1B8CE42F4);
  v22 = (void *)sub_1B8CE1440();
  swift_release();
  LOBYTE(v28) = a6 & 1;
  v23 = (void *)v31;
  v25 = (void *)v29;
  v24 = (void *)v30;
  v26 = objc_msgSend(v21, sel__createWallpaperBundleInDirectory_version_identifier_name_family_disableParallax_isOffloaded_logicalScreenClass_thumbnailImageURL_adjustmentTraits_preferredProminentColors_assetMapping_, v31, v32, v34, v30, v29, v33 & 1, v28, a7, v18, v20, v19, v22);

  if (v26)
  {
    type metadata accessor for WKWallpaperBundle.ImplementationWrapper();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v26;
  }
  else
  {
    result = 0;
  }
  *v35 = result;
  return result;
}

id WKWallpaperBundle._referenceType.getter()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

id sub_1B8C90704()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

id WKWallpaperBundle._valueType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  id v4;

  type metadata accessor for WKWallpaperBundle.ImplementationWrapper();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v4;
  a1[3] = (uint64_t)&type metadata for WKWallpaperBundle;
  a1[4] = sub_1B8C8A2F0();
  *a1 = v2;
  return v4;
}

id sub_1B8C90770@<X0>(uint64_t *a1@<X8>)
{
  id *v1;
  uint64_t v3;
  id v5;

  v5 = *v1;
  type metadata accessor for WKWallpaperBundle.ImplementationWrapper();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v5;
  a1[3] = (uint64_t)&type metadata for WKWallpaperBundle;
  a1[4] = sub_1B8C8A2F0();
  *a1 = v3;
  return v5;
}

uint64_t sub_1B8C907D4(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D40A0);
  result = sub_1B8CE17E8();
  v3 = (_QWORD *)result;
  v4 = 0;
  v24 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v21 = v6;
  v22 = (unint64_t)(v8 + 63) >> 6;
  v23 = result + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = *(id *)(*(_QWORD *)(v24 + 48) + 8 * i);
    v17 = swift_bridgeObjectRetain();
    v18 = sub_1B8C90AA0(v17);
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v23 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v3[6] + 8 * i) = v16;
    *(_QWORD *)(v3[7] + 8 * i) = v18;
    v19 = v3[2];
    v13 = __OFADD__(v19, 1);
    v20 = v19 + 1;
    if (v13)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v3[2] = v20;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = __OFADD__(v4++, 1);
    if (v13)
      goto LABEL_25;
    if (v4 >= v22)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v21 + 8 * v4);
    if (!v14)
      break;
LABEL_15:
    v10 = (v14 - 1) & v14;
  }
  v15 = v4 + 1;
  if (v4 + 1 >= v22)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v4 + 2;
  if (v4 + 2 >= v22)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v4 + 3;
  if (v4 + 3 >= v22)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
  {
LABEL_14:
    v4 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v22)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v21 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1B8C909E0(uint64_t a1)
{
  unint64_t result;

  result = sub_1B8C90A04();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B8C90A04()
{
  unint64_t result;

  result = qword_1ED566FC0;
  if (!qword_1ED566FC0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperBundle, &type metadata for WKWallpaperBundle);
    atomic_store(result, (unint64_t *)&qword_1ED566FC0);
  }
  return result;
}

unint64_t sub_1B8C90A4C()
{
  unint64_t result;

  result = qword_1ED565208;
  if (!qword_1ED565208)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperBundle, &type metadata for WKWallpaperBundle);
    atomic_store(result, (unint64_t *)&qword_1ED565208);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKWallpaperBundle()
{
  return &type metadata for WKWallpaperBundle;
}

uint64_t sub_1B8C90AA0(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1D40A8);
  result = sub_1B8CE17E8();
  v3 = (_QWORD *)result;
  v4 = 0;
  v26 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v21 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v22 = (unint64_t)(v6 + 63) >> 6;
  v23 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = *(void **)(*(_QWORD *)(v26 + 48) + 8 * i);
    sub_1B8C90CCC(*(_QWORD *)(v26 + 56) + 40 * i, (uint64_t)v24);
    v15 = v25;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    v16 = v14;
    v17 = sub_1B8C8E0E4(v15);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    *(_QWORD *)(v23 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v3[6] + 8 * i) = v16;
    *(_QWORD *)(v3[7] + 8 * i) = v17;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v20;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v11 >= v22)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v21 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v22)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v21 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v22)
          return (uint64_t)v3;
        v12 = *(_QWORD *)(v21 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_18:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 3;
  if (v13 >= v22)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v22)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v21 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B8C90CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1B8C90D10()
{
  unint64_t result;

  result = qword_1ED5651A0;
  if (!qword_1ED5651A0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredAnimationWallpaper, &type metadata for WKLayeredAnimationWallpaper);
    atomic_store(result, (unint64_t *)&qword_1ED5651A0);
  }
  return result;
}

unint64_t sub_1B8C90D54()
{
  unint64_t result;

  result = qword_1EF1D40B8;
  if (!qword_1EF1D40B8)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredThumbnailWallpaper, &type metadata for WKLayeredThumbnailWallpaper);
    atomic_store(result, (unint64_t *)&qword_1EF1D40B8);
  }
  return result;
}

unint64_t sub_1B8C90D98()
{
  unint64_t result;

  result = qword_1ED565640;
  if (!qword_1ED565640)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKBokehWallpaper, &type metadata for WKBokehWallpaper);
    atomic_store(result, (unint64_t *)&qword_1ED565640);
  }
  return result;
}

unint64_t sub_1B8C90DDC()
{
  unint64_t result;

  result = qword_1ED565628;
  if (!qword_1ED565628)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredStillWallpaper, &type metadata for WKLayeredStillWallpaper);
    atomic_store(result, (unint64_t *)&qword_1ED565628);
  }
  return result;
}

unint64_t sub_1B8C90E20()
{
  unint64_t result;

  result = qword_1ED565630;
  if (!qword_1ED565630)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredStripeWallpaper, &type metadata for WKLayeredStripeWallpaper);
    atomic_store(result, (unint64_t *)&qword_1ED565630);
  }
  return result;
}

uint64_t destroy for WKLayeredStillWallpaperPosterForeground(uint64_t a1)
{
  sub_1B8C85880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  return swift_release();
}

uint64_t initializeWithCopy for WKLayeredStillWallpaperPosterForeground(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 96);
  v18 = *(_QWORD *)(a2 + 104);
  v19 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 104) = v18;
  *(_BYTE *)(a1 + 112) = v19;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WKLayeredStillWallpaperPosterForeground(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v26 = *(_QWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v30 = *(_QWORD *)(a2 + 96);
  v31 = *(_QWORD *)(a2 + 104);
  v32 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30, v31, v32);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(void **)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v26;
  *(_QWORD *)(a1 + 72) = v27;
  *(_QWORD *)(a1 + 80) = v28;
  *(_QWORD *)(a1 + 88) = v29;
  *(_QWORD *)(a1 + 96) = v30;
  *(_QWORD *)(a1 + 104) = v31;
  *(_BYTE *)(a1 + 112) = v32;
  sub_1B8C85880(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for WKLayeredStillWallpaperPosterForeground(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v4 = *(_BYTE *)(a2 + 112);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(void **)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_BYTE *)(a1 + 112);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = v4;
  sub_1B8C85880(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, v17);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WKLayeredStillWallpaperPosterForeground(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 120);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WKLayeredStillWallpaperPosterForeground(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 120) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredStillWallpaperPosterForeground()
{
  return &type metadata for WKLayeredStillWallpaperPosterForeground;
}

uint64_t sub_1B8C9126C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1B8C9127C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  double result;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25[2];
  unsigned __int8 v26;
  id v27;
  _QWORD v28[19];
  char v29;

  v3 = *(_QWORD *)v1;
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v18 = *(_QWORD *)v1;
  v6 = *(_QWORD *)(v1 + 40);
  v23 = *(_QWORD *)(v1 + 8);
  v24 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v17 = *(void **)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 80);
  v21 = *(_QWORD *)(v1 + 72);
  v22 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 104);
  v19 = *(_BYTE *)(v1 + 112);
  v11 = *(_QWORD *)(v1 + 120);
  v28[3] = &type metadata for WKWallpaperBundle;
  v28[4] = sub_1B8C8A2F0();
  v28[5] = v3;
  v28[0] = v11;
  v28[6] = v23;
  v28[7] = v5;
  v28[8] = v4;
  v28[9] = v24;
  v28[10] = v6;
  v28[11] = v7;
  v28[12] = v17;
  v28[13] = v22;
  v28[14] = v21;
  v28[15] = v8;
  v28[16] = v9;
  v28[17] = v10;
  v28[18] = v20;
  v29 = v19;
  swift_retain();
  sub_1B8C85798(v18, v23, v5, v4, v24, v6, v7, v17, v22, v21, v8, v9, v10, v20, v19);
  sub_1B8CDF63C((uint64_t)v25);
  sub_1B8C85880(v18, v23, v5, v4, v24, v6, v7, v17, v22, v21, v8, v9, v10, v20, v19);
  LODWORD(v4) = v26;

  swift_release();
  if ((_DWORD)v4)
    v12 = 3;
  else
    v12 = 7;
  KeyPath = swift_getKeyPath();
  v14 = swift_getKeyPath();
  sub_1B8C90CCC((uint64_t)v28, (uint64_t)v25);
  v15 = swift_allocObject();
  sub_1B8C8A344(v25, v15 + 16);
  *(_BYTE *)(v15 + 56) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  *(_QWORD *)a1 = KeyPath;
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v14;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_QWORD *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = sub_1B8C914EC;
  *(_QWORD *)(a1 + 144) = v15;
  *(_BYTE *)(a1 + 152) = 0;
  return result;
}

uint64_t sub_1B8C914C8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1B8C914EC()
{
  uint64_t v0;

  return sub_1B8CDDAF8(v0 + 16, *(_BYTE *)(v0 + 56));
}

unint64_t sub_1B8C914FC()
{
  unint64_t result;

  result = qword_1ED567310;
  if (!qword_1ED567310)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperImage, &type metadata for WKWallpaperImage);
    atomic_store(result, (unint64_t *)&qword_1ED567310);
  }
  return result;
}

void sub_1B8C91540(uint64_t a1)
{
  sub_1B8C91570(a1, (uint64_t)sub_1B8C91554, &qword_1ED56B9D8);
}

uint64_t sub_1B8C91554(uint64_t a1)
{
  return sub_1B8C915E0(a1);
}

void sub_1B8C9155C(uint64_t a1)
{
  sub_1B8C91570(a1, (uint64_t)sub_1B8C915D8, &qword_1ED56B9D0);
}

void sub_1B8C91570(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  id v4;
  uint64_t v5;

  v4 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v5 = sub_1B8CE15FC();

  *a3 = v5;
}

uint64_t sub_1B8C915D8(uint64_t a1)
{
  return sub_1B8C915E0(a1);
}

uint64_t sub_1B8C915E0(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  return sub_1B8CE0EE8();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1B8C91650@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t KeyPath;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)();
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  char *v68;
  char *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE v80[152];
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  char v90;
  _OWORD v91[9];
  _BYTE v92[128];
  __int128 v93;

  v78 = a1;
  v79 = type metadata accessor for WKFlatWallpaperPoster();
  v2 = MEMORY[0x1E0C80A78](v79);
  v70 = (_QWORD *)((char *)v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v2);
  v71 = (uint64_t)v67 - v4;
  v73 = type metadata accessor for WKStripesWallpaperPosterBackground();
  v5 = MEMORY[0x1E0C80A78](v73);
  v7 = (_QWORD *)((char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v72 = (uint64_t)v67 - v8;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565400);
  MEMORY[0x1E0C80A78](v76);
  v75 = (uint64_t)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5653F0);
  MEMORY[0x1E0C80A78](v74);
  v11 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5653D0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (_OWORD *)((char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565420);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565490);
  MEMORY[0x1E0C80A78](v77);
  v19 = (char *)v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  v21 = swift_retain();
  v22 = sub_1B8C9223C(v21);
  swift_release();
  if ((v22 & 1) != 0)
  {
    KeyPath = swift_getKeyPath();
    memset(&v92[8], 0, 105);
    *(_QWORD *)v92 = KeyPath;
    *(_QWORD *)&v92[120] = v20;
    v24 = *(_OWORD *)&v92[80];
    v14[4] = *(_OWORD *)&v92[64];
    v14[5] = v24;
    v25 = *(_OWORD *)&v92[112];
    v14[6] = *(_OWORD *)&v92[96];
    v14[7] = v25;
    v26 = *(_OWORD *)&v92[16];
    *v14 = *(_OWORD *)v92;
    v14[1] = v26;
    v27 = *(_OWORD *)&v92[48];
    v14[2] = *(_OWORD *)&v92[32];
    v14[3] = v27;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1B8C92C30((uint64_t)v92);
    sub_1B8C92784();
    sub_1B8C83740(&qword_1ED565200, (uint64_t (*)(uint64_t))type metadata accessor for WKStripesWallpaperPosterBackground, (uint64_t)&unk_1B8CE8CA0);
    sub_1B8CE1158();
    sub_1B8C92BB0((uint64_t)v17, (uint64_t)v11, &qword_1ED565420);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565450);
    sub_1B8C92700();
    sub_1B8C927C8();
    sub_1B8CE1158();
    sub_1B8C88430((uint64_t)v17, &qword_1ED565420);
    sub_1B8C92BB0((uint64_t)v19, v75, &qword_1ED565490);
    swift_storeEnumTagMultiPayload();
    sub_1B8C927EC(&qword_1ED565488, &qword_1ED565490, (uint64_t (*)(void))sub_1B8C92700, sub_1B8C927C8);
    sub_1B8C83740(&qword_1ED5651D8, (uint64_t (*)(uint64_t))type metadata accessor for WKFlatWallpaperPoster, (uint64_t)&unk_1B8CE4FA0);
    sub_1B8CE1158();
    sub_1B8C88430((uint64_t)v19, &qword_1ED565490);
    return sub_1B8C92C94((uint64_t)v92);
  }
  v67[0] = v17;
  v67[1] = v15;
  v68 = v11;
  v69 = v19;
  v29 = swift_retain();
  v30 = sub_1B8C92334(v29);
  swift_release();
  if ((v30 & 1) != 0)
  {
    *v7 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    swift_storeEnumTagMultiPayload();
    v31 = v73;
    v32 = (char *)v7 + *(int *)(v73 + 20);
    *(_QWORD *)v32 = swift_getKeyPath();
    *(_OWORD *)(v32 + 8) = 0u;
    *(_OWORD *)(v32 + 24) = 0u;
    *(_OWORD *)(v32 + 40) = 0u;
    *(_OWORD *)(v32 + 56) = 0u;
    *(_OWORD *)(v32 + 72) = 0u;
    *(_OWORD *)(v32 + 88) = 0u;
    *(_OWORD *)(v32 + 97) = 0u;
    *(uint64_t *)((char *)v7 + *(int *)(v31 + 24)) = v20;
    v33 = v72;
    sub_1B8C8A35C((uint64_t)v7, v72, (uint64_t (*)(_QWORD))type metadata accessor for WKStripesWallpaperPosterBackground);
    sub_1B8C8A3A0(v33, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WKStripesWallpaperPosterBackground);
    swift_storeEnumTagMultiPayload();
    sub_1B8C92784();
    sub_1B8C83740(&qword_1ED565200, (uint64_t (*)(uint64_t))type metadata accessor for WKStripesWallpaperPosterBackground, (uint64_t)&unk_1B8CE8CA0);
    swift_retain();
    v34 = v67[0];
    sub_1B8CE1158();
    sub_1B8C92BB0(v34, (uint64_t)v68, &qword_1ED565420);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565450);
    sub_1B8C92700();
    sub_1B8C927C8();
    v35 = (uint64_t)v69;
    sub_1B8CE1158();
    sub_1B8C88430(v34, &qword_1ED565420);
    sub_1B8C92BB0(v35, v75, &qword_1ED565490);
    swift_storeEnumTagMultiPayload();
    sub_1B8C927EC(&qword_1ED565488, &qword_1ED565490, (uint64_t (*)(void))sub_1B8C92700, sub_1B8C927C8);
    sub_1B8C83740(&qword_1ED5651D8, (uint64_t (*)(uint64_t))type metadata accessor for WKFlatWallpaperPoster, (uint64_t)&unk_1B8CE4FA0);
    sub_1B8CE1158();
    sub_1B8C88430(v35, &qword_1ED565490);
    v36 = v33;
    v37 = type metadata accessor for WKStripesWallpaperPosterBackground;
  }
  else
  {
    v38 = swift_retain();
    v39 = sub_1B8C92424(v38);
    swift_release();
    v40 = v75;
    if ((v39 & 1) != 0)
    {
      v41 = swift_getKeyPath();
      type metadata accessor for WKWallpaperPosterLayerViewModel();
      sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
      swift_retain();
      v42 = sub_1B8CE0F9C();
      *(_OWORD *)((char *)&v91[6] + 1) = 0u;
      *(_OWORD *)((char *)&v91[4] + 8) = 0u;
      *(_OWORD *)((char *)&v91[5] + 8) = 0u;
      *(_OWORD *)((char *)&v91[2] + 8) = 0u;
      *(_OWORD *)((char *)&v91[3] + 8) = 0u;
      *(_OWORD *)((char *)v91 + 8) = 0u;
      *(_OWORD *)((char *)&v91[1] + 8) = 0u;
      *(_QWORD *)&v91[0] = v41;
      *((_QWORD *)&v91[7] + 1) = v42;
      LOBYTE(v91[8]) = v43 & 1;
      *((_QWORD *)&v91[8] + 1) = v20;
      *(_OWORD *)&v92[32] = v91[2];
      *(_OWORD *)&v92[48] = v91[3];
      *(_OWORD *)v92 = v91[0];
      *(_OWORD *)&v92[16] = v91[1];
      *(_OWORD *)&v92[112] = v91[7];
      v93 = v91[8];
      *(_OWORD *)&v92[80] = v91[5];
      *(_OWORD *)&v92[96] = v91[6];
      *(_OWORD *)&v92[64] = v91[4];
      sub_1B8C92AB8((uint64_t)v92);
      sub_1B8C928F0((uint64_t)v92, (uint64_t)v80);
      sub_1B8C92AC0((uint64_t)v91);
      sub_1B8C9285C();
      sub_1B8C928A0();
      sub_1B8CE1158();
      v44 = v88;
      v45 = (uint64_t)v68;
      *((_OWORD *)v68 + 6) = v87;
      *(_OWORD *)(v45 + 112) = v44;
      *(_OWORD *)(v45 + 128) = v89;
      *(_BYTE *)(v45 + 144) = v90;
      v46 = v84;
      *(_OWORD *)(v45 + 32) = v83;
      *(_OWORD *)(v45 + 48) = v46;
      v47 = v86;
      *(_OWORD *)(v45 + 64) = v85;
      *(_OWORD *)(v45 + 80) = v47;
      v48 = v82;
      *(_OWORD *)v45 = v81;
      *(_OWORD *)(v45 + 16) = v48;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565450);
      sub_1B8C92700();
      sub_1B8C927C8();
      v49 = (uint64_t)v69;
      sub_1B8CE1158();
      sub_1B8C92BB0(v49, v40, &qword_1ED565490);
      swift_storeEnumTagMultiPayload();
      sub_1B8C927EC(&qword_1ED565488, &qword_1ED565490, (uint64_t (*)(void))sub_1B8C92700, sub_1B8C927C8);
      sub_1B8C83740(&qword_1ED5651D8, (uint64_t (*)(uint64_t))type metadata accessor for WKFlatWallpaperPoster, (uint64_t)&unk_1B8CE4FA0);
      sub_1B8CE1158();
      sub_1B8C88430(v49, &qword_1ED565490);
      return sub_1B8C92B38((uint64_t)v91);
    }
    v50 = swift_retain();
    v51 = sub_1B8C92514(v50);
    swift_release();
    v52 = v79;
    if ((v51 & 1) != 0)
    {
      type metadata accessor for WKWallpaperPosterLayerViewModel();
      sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
      swift_retain();
      v53 = sub_1B8CE0F9C();
      v55 = v54;
      v56 = swift_getKeyPath();
      *(_QWORD *)&v91[0] = v53;
      BYTE8(v91[0]) = v55 & 1;
      *(_OWORD *)((char *)&v91[1] + 8) = 0u;
      *(_OWORD *)((char *)&v91[7] + 1) = 0u;
      *(_OWORD *)((char *)&v91[6] + 8) = 0u;
      *(_OWORD *)((char *)&v91[5] + 8) = 0u;
      *(_OWORD *)((char *)&v91[4] + 8) = 0u;
      *(_OWORD *)((char *)&v91[3] + 8) = 0u;
      *(_OWORD *)((char *)&v91[2] + 8) = 0u;
      *(_QWORD *)&v91[1] = v56;
      *((_QWORD *)&v91[8] + 1) = v20;
      *(_OWORD *)&v92[32] = v91[2];
      *(_OWORD *)&v92[48] = v91[3];
      *(_OWORD *)v92 = v91[0];
      *(_OWORD *)&v92[16] = v91[1];
      *(_OWORD *)&v92[112] = v91[7];
      v93 = v91[8];
      *(_OWORD *)&v92[80] = v91[5];
      *(_OWORD *)&v92[96] = v91[6];
      *(_OWORD *)&v92[64] = v91[4];
      sub_1B8C928E4((uint64_t)v92);
      sub_1B8C928F0((uint64_t)v92, (uint64_t)v80);
      sub_1B8C92938((uint64_t)v91);
      sub_1B8C9285C();
      sub_1B8C928A0();
      sub_1B8CE1158();
      v57 = v88;
      v58 = (uint64_t)v68;
      *((_OWORD *)v68 + 6) = v87;
      *(_OWORD *)(v58 + 112) = v57;
      *(_OWORD *)(v58 + 128) = v89;
      *(_BYTE *)(v58 + 144) = v90;
      v59 = v84;
      *(_OWORD *)(v58 + 32) = v83;
      *(_OWORD *)(v58 + 48) = v59;
      v60 = v86;
      *(_OWORD *)(v58 + 64) = v85;
      *(_OWORD *)(v58 + 80) = v60;
      v61 = v82;
      *(_OWORD *)v58 = v81;
      *(_OWORD *)(v58 + 16) = v61;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565450);
      sub_1B8C92700();
      sub_1B8C927C8();
      v62 = (uint64_t)v69;
      sub_1B8CE1158();
      sub_1B8C92BB0(v62, v40, &qword_1ED565490);
      swift_storeEnumTagMultiPayload();
      sub_1B8C927EC(&qword_1ED565488, &qword_1ED565490, (uint64_t (*)(void))sub_1B8C92700, sub_1B8C927C8);
      sub_1B8C83740(&qword_1ED5651D8, (uint64_t (*)(uint64_t))type metadata accessor for WKFlatWallpaperPoster, (uint64_t)&unk_1B8CE4FA0);
      sub_1B8CE1158();
      sub_1B8C88430(v62, &qword_1ED565490);
      return sub_1B8C929F8((uint64_t)v91);
    }
    v63 = swift_getKeyPath();
    v64 = (uint64_t)v70;
    *v70 = v63;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    swift_storeEnumTagMultiPayload();
    v65 = v64 + *(int *)(v52 + 20);
    *(_QWORD *)v65 = swift_getKeyPath();
    *(_OWORD *)(v65 + 8) = 0u;
    *(_OWORD *)(v65 + 24) = 0u;
    *(_OWORD *)(v65 + 40) = 0u;
    *(_OWORD *)(v65 + 56) = 0u;
    *(_OWORD *)(v65 + 72) = 0u;
    *(_OWORD *)(v65 + 88) = 0u;
    *(_OWORD *)(v65 + 97) = 0u;
    *(_QWORD *)(v64 + *(int *)(v52 + 24)) = v20;
    v66 = v71;
    sub_1B8C8A35C(v64, v71, (uint64_t (*)(_QWORD))type metadata accessor for WKFlatWallpaperPoster);
    sub_1B8C8A3A0(v66, v40, (uint64_t (*)(_QWORD))type metadata accessor for WKFlatWallpaperPoster);
    swift_storeEnumTagMultiPayload();
    sub_1B8C927EC(&qword_1ED565488, &qword_1ED565490, (uint64_t (*)(void))sub_1B8C92700, sub_1B8C927C8);
    sub_1B8C83740(&qword_1ED5651D8, (uint64_t (*)(uint64_t))type metadata accessor for WKFlatWallpaperPoster, (uint64_t)&unk_1B8CE4FA0);
    swift_retain();
    sub_1B8CE1158();
    v36 = v66;
    v37 = type metadata accessor for WKFlatWallpaperPoster;
  }
  return sub_1B8C92BF4(v36, (uint64_t (*)(_QWORD))v37);
}

uint64_t sub_1B8C9223C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6[2];
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(a1 + 16);
  if (objc_msgSend(v1, sel_wallpaperBackingTypeForLocation_, CFSTR("WKWallpaperLocationCoverSheet")) != (id)1)
    return 0;
  v2 = (uint64_t)objc_msgSend(v1, sel_valueBasedWallpaperForLocation_, CFSTR("WKWallpaperLocationCoverSheet"));
  if (v2)
  {
    sub_1B8C8FB7C((uint64_t *)v6);
    swift_unknownObjectRelease();
    sub_1B8C8A344(v6, (uint64_t)v7);
    v3 = v8;
    v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v6, v3, v4);
    if (BYTE8(v6[0]) == 1)
    {
      v2 = 1;
      sub_1B8C8846C(*(void **)&v6[0], SBYTE8(v6[0]));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      return v2;
    }
    sub_1B8C8846C(*(void **)&v6[0], SBYTE8(v6[0]));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return 0;
  }
  return v2;
}

uint64_t sub_1B8C92334(uint64_t a1)
{
  void *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5[2];
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(a1 + 16);
  if (objc_msgSend(v1, sel_wallpaperBackingTypeForLocation_, CFSTR("WKWallpaperLocationCoverSheet")) == (id)1)
  {
    result = (uint64_t)objc_msgSend(v1, sel_valueBasedWallpaperForLocation_, CFSTR("WKWallpaperLocationCoverSheet"));
    if (!result)
      return result;
    sub_1B8C8FB7C((uint64_t *)v5);
    swift_unknownObjectRelease();
    sub_1B8C8A344(v5, (uint64_t)v6);
    v3 = v7;
    v4 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v5, v3, v4);
    if (BYTE8(v5[0]) == 2)
    {
      sub_1B8C8846C(*(void **)&v5[0], SBYTE8(v5[0]));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
      return 1;
    }
    sub_1B8C8846C(*(void **)&v5[0], SBYTE8(v5[0]));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  return 0;
}

uint64_t sub_1B8C92424(uint64_t a1)
{
  void *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5[2];
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(a1 + 16);
  if (objc_msgSend(v1, sel_wallpaperBackingTypeForLocation_, CFSTR("WKWallpaperLocationCoverSheet")) == (id)1)
  {
    result = (uint64_t)objc_msgSend(v1, sel_valueBasedWallpaperForLocation_, CFSTR("WKWallpaperLocationCoverSheet"));
    if (!result)
      return result;
    sub_1B8C8FB7C((uint64_t *)v5);
    swift_unknownObjectRelease();
    sub_1B8C8A344(v5, (uint64_t)v6);
    v3 = v7;
    v4 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v5, v3, v4);
    if (BYTE8(v5[0]) == 3)
    {
      sub_1B8C8846C(*(void **)&v5[0], SBYTE8(v5[0]));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
      return 1;
    }
    sub_1B8C8846C(*(void **)&v5[0], SBYTE8(v5[0]));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  return 0;
}

uint64_t sub_1B8C92514(uint64_t a1)
{
  void *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5[2];
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(a1 + 16);
  if (objc_msgSend(v1, sel_wallpaperBackingTypeForLocation_, CFSTR("WKWallpaperLocationCoverSheet")) == (id)1)
  {
    result = (uint64_t)objc_msgSend(v1, sel_valueBasedWallpaperForLocation_, CFSTR("WKWallpaperLocationCoverSheet"));
    if (!result)
      return result;
    sub_1B8C8FB7C((uint64_t *)v5);
    swift_unknownObjectRelease();
    sub_1B8C8A344(v5, (uint64_t)v6);
    v3 = v7;
    v4 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v5, v3, v4);
    if (BYTE8(v5[0]) == 5)
    {
      sub_1B8C8846C(*(void **)&v5[0], SBYTE8(v5[0]));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
      return 1;
    }
    sub_1B8C8846C(*(void **)&v5[0], SBYTE8(v5[0]));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  return 0;
}

uint64_t sub_1B8C92604@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654C0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *v1;
  sub_1B8C91650((uint64_t)v5);
  v6 = sub_1B8CE1020();
  v7 = sub_1B8CE11E8();
  sub_1B8C92BB0((uint64_t)v5, a1, &qword_1ED5654C0);
  v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED5653B0) + 36);
  *(_QWORD *)v8 = v6;
  *(_BYTE *)(v8 + 8) = v7;
  return sub_1B8C88430((uint64_t)v5, &qword_1ED5654C0);
}

ValueMetadata *type metadata accessor for WKWallpaperPosterBackground()
{
  return &type metadata for WKWallpaperPosterBackground;
}

uint64_t sub_1B8C926E0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8C92700()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565418;
  if (!qword_1ED565418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565420);
    v2[0] = sub_1B8C92784();
    v2[1] = sub_1B8C83740(&qword_1ED565200, (uint64_t (*)(uint64_t))type metadata accessor for WKStripesWallpaperPosterBackground, (uint64_t)&unk_1B8CE8CA0);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565418);
  }
  return result;
}

unint64_t sub_1B8C92784()
{
  unint64_t result;

  result = qword_1ED565150;
  if (!qword_1ED565150)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE5E08, &type metadata for WKLayeredStillWallpaperPosterBackground);
    atomic_store(result, (unint64_t *)&qword_1ED565150);
  }
  return result;
}

uint64_t sub_1B8C927C8()
{
  return sub_1B8C927EC(&qword_1ED565448, &qword_1ED565450, (uint64_t (*)(void))sub_1B8C9285C, (uint64_t (*)(void))sub_1B8C928A0);
}

uint64_t sub_1B8C927EC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDB8A0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B8C9285C()
{
  unint64_t result;

  result = qword_1ED5651F0;
  if (!qword_1ED5651F0)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE8378, &type metadata for WKBokehWallpaperPoster);
    atomic_store(result, (unint64_t *)&qword_1ED5651F0);
  }
  return result;
}

unint64_t sub_1B8C928A0()
{
  unint64_t result;

  result = qword_1ED5651B0;
  if (!qword_1ED5651B0)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE916C, &type metadata for WKLayeredAnimationWallpaperPosterBackground);
    atomic_store(result, (unint64_t *)&qword_1ED5651B0);
  }
  return result;
}

uint64_t sub_1B8C928E4(uint64_t result)
{
  *(_BYTE *)(result + 144) = 1;
  return result;
}

uint64_t sub_1B8C928F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8C92938(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(void **)(a1 + 72);
  v11 = *(_OWORD *)(a1 + 96);
  v12 = *(_OWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_BYTE *)(a1 + 128);
  swift_retain();
  sub_1B8C85798(v15, v14, v13, v2, v3, v4, v5, v6, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v7, v8, v9);
  swift_retain();
  return a1;
}

uint64_t sub_1B8C929F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(void **)(a1 + 72);
  v11 = *(_OWORD *)(a1 + 96);
  v12 = *(_OWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_BYTE *)(a1 + 128);
  swift_release();
  sub_1B8C85880(v15, v14, v13, v2, v3, v4, v5, v6, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v7, v8, v9);
  swift_release();
  return a1;
}

uint64_t sub_1B8C92AB8(uint64_t result)
{
  *(_BYTE *)(result + 144) = 0;
  return result;
}

uint64_t sub_1B8C92AC0(uint64_t a1)
{
  sub_1B8C85798(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1B8C92B38(uint64_t a1)
{
  sub_1B8C85880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1B8C92BB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B8C92BF4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B8C92C30(uint64_t a1)
{
  sub_1B8C85798(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  swift_retain();
  return a1;
}

uint64_t sub_1B8C92C94(uint64_t a1)
{
  sub_1B8C85880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  swift_release();
  return a1;
}

unint64_t sub_1B8C92CFC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED5653A8;
  if (!qword_1ED5653A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5653B0);
    v2[0] = sub_1B8C92D68();
    v2[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED5653A8);
  }
  return result;
}

unint64_t sub_1B8C92D68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED5654B8;
  if (!qword_1ED5654B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5654C0);
    v2[0] = sub_1B8C927EC(&qword_1ED565488, &qword_1ED565490, (uint64_t (*)(void))sub_1B8C92700, sub_1B8C927C8);
    v2[1] = sub_1B8C83740(&qword_1ED5651D8, (uint64_t (*)(uint64_t))type metadata accessor for WKFlatWallpaperPoster, (uint64_t)&unk_1B8CE4FA0);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED5654B8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WKStripeParallelogram(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WKStripeParallelogram(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKStripeParallelogram()
{
  return &type metadata for WKStripeParallelogram;
}

uint64_t sub_1B8C92EBC()
{
  return sub_1B8C86A88(&qword_1ED565710, &qword_1ED565718, MEMORY[0x1E0CD9220]);
}

double sub_1B8C92EE8@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v5;
  long double v11;
  double result;
  __int128 v13;
  __int128 v14;
  char v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  v11 = *(double *)(v5 + 16) * 3.14159265 / 180.0;
  sub_1B8CE1218();
  tan(v11);
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetWidth(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetHeight(v17);
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetHeight(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetMinX(v19);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGRectGetMinX(v20);
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGRectGetMaxX(v21);
  v22.origin.x = a2;
  v22.origin.y = a3;
  v22.size.width = a4;
  v22.size.height = a5;
  CGRectGetMaxX(v22);
  sub_1B8CE1200();
  sub_1B8CE120C();
  sub_1B8CE120C();
  sub_1B8CE120C();
  sub_1B8CE120C();
  sub_1B8CE11F4();
  result = *(double *)&v13;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v14;
  *(_BYTE *)(a1 + 32) = v15;
  return result;
}

double sub_1B8C930C8@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v7;
  _OWORD v8[2];
  char v9;

  sub_1B8C92EE8((uint64_t)v8, a2, a3, a4, a5);
  result = *(double *)v8;
  v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_1B8C93110()
{
  return sub_1B8CE1308();
}

__n128 sub_1B8C93128@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 + 24);
  *a1 = result;
  return result;
}

__n128 sub_1B8C93134(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  return result;
}

__n128 (*sub_1B8C93140(uint64_t a1))(__n128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  return sub_1B8C9315C;
}

__n128 sub_1B8C9315C(__n128 *a1)
{
  __n128 result;

  result = *a1;
  *(__n128 *)(a1[1].n128_u64[0] + 24) = *a1;
  return result;
}

unint64_t sub_1B8C93174()
{
  unint64_t result;

  result = qword_1ED565660;
  if (!qword_1ED565660)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE5CD8, &type metadata for WKStripeParallelogram);
    atomic_store(result, (unint64_t *)&qword_1ED565660);
  }
  return result;
}

uint64_t sub_1B8C931BC()
{
  return sub_1B8C86A88(&qword_1ED5656E8, &qword_1ED5656F0, MEMORY[0x1E0CD8668]);
}

uint64_t sub_1B8C931E8()
{
  sub_1B8C932C0();
  return sub_1B8CE1344();
}

uint64_t sub_1B8C93238()
{
  sub_1B8C932C0();
  return sub_1B8CE1314();
}

uint64_t sub_1B8C93288()
{
  sub_1B8C932C0();
  return sub_1B8CE132C();
}

unint64_t sub_1B8C932C0()
{
  unint64_t result;

  result = qword_1ED565670;
  if (!qword_1ED565670)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE5D28, &type metadata for WKStripeParallelogram);
    atomic_store(result, (unint64_t *)&qword_1ED565670);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredStillWallpaperPosterBackground()
{
  return &type metadata for WKLayeredStillWallpaperPosterBackground;
}

uint64_t sub_1B8C93314()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1B8C93324@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  double result;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25[2];
  unsigned __int8 v26;
  id v27;
  _QWORD v28[19];
  char v29;

  v3 = *(_QWORD *)v1;
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v18 = *(_QWORD *)v1;
  v6 = *(_QWORD *)(v1 + 40);
  v23 = *(_QWORD *)(v1 + 8);
  v24 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v17 = *(void **)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 80);
  v21 = *(_QWORD *)(v1 + 72);
  v22 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 104);
  v19 = *(_BYTE *)(v1 + 112);
  v11 = *(_QWORD *)(v1 + 120);
  v28[3] = &type metadata for WKWallpaperBundle;
  v28[4] = sub_1B8C8A2F0();
  v28[5] = v3;
  v28[0] = v11;
  v28[6] = v23;
  v28[7] = v5;
  v28[8] = v4;
  v28[9] = v24;
  v28[10] = v6;
  v28[11] = v7;
  v28[12] = v17;
  v28[13] = v22;
  v28[14] = v21;
  v28[15] = v8;
  v28[16] = v9;
  v28[17] = v10;
  v28[18] = v20;
  v29 = v19;
  swift_retain();
  sub_1B8C85798(v18, v23, v5, v4, v24, v6, v7, v17, v22, v21, v8, v9, v10, v20, v19);
  sub_1B8CDF63C((uint64_t)v25);
  sub_1B8C85880(v18, v23, v5, v4, v24, v6, v7, v17, v22, v21, v8, v9, v10, v20, v19);
  LODWORD(v4) = v26;

  swift_release();
  if ((_DWORD)v4)
    v12 = 2;
  else
    v12 = 6;
  KeyPath = swift_getKeyPath();
  v14 = swift_getKeyPath();
  sub_1B8C90CCC((uint64_t)v28, (uint64_t)v25);
  v15 = swift_allocObject();
  sub_1B8C8A344(v25, v15 + 16);
  *(_BYTE *)(v15 + 56) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  *(_QWORD *)a1 = KeyPath;
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v14;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_QWORD *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = sub_1B8C914EC;
  *(_QWORD *)(a1 + 144) = v15;
  *(_BYTE *)(a1 + 152) = 0;
  return result;
}

uint64_t sub_1B8C93570()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1B8C93598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v2 = OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_views;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_views);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_views) = a1;
  swift_unknownObjectRetain();
  if (v3)
  {
    swift_unknownObjectRelease();
LABEL_3:
    swift_unknownObjectRelease();
    return;
  }
  v4 = *(void **)(v1 + v2);
  if (!v4)
    goto LABEL_3;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_wallpaperPosterLayerViewModel);
  v6 = objc_msgSend(v4, sel_backgroundView);
  v7 = *(void **)(v1 + v2);
  if (v7)
  {
    v8 = objc_msgSend(v7, sel_foregroundView);
    v9 = *(void **)(v1 + v2);
    if (v9)
    {
      v10 = objc_msgSend(v9, sel_floatingView);
      sub_1B8C8AF44(v5, v6, v8, v10);
      swift_unknownObjectRelease();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1B8C936D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for WKWallpaperPosterEditorLookItem()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for WKPosterEnvironmentOverrides(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  if (*a1 <= 2u)
    v6 = 2;
  else
    v6 = *a1;
  v7 = v6 - 3;
  if (*a1 < 2u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WKPosterEnvironmentOverrides(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8C93848 + 4 * byte_1B8CE5EF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8C9387C + 4 * byte_1B8CE5EF0[v4]))();
}

uint64_t sub_1B8C9387C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8C93884(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8C9388CLL);
  return result;
}

uint64_t sub_1B8C93898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8C938A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8C938A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8C938AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WKPosterEnvironmentOverrides()
{
  return &type metadata for WKPosterEnvironmentOverrides;
}

uint64_t sub_1B8C938C8(char a1)
{
  if ((a1 & 1) != 0)
    return 1802658148;
  else
    return 0x746867696CLL;
}

BOOL sub_1B8C938F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1B8C93914()
{
  char *v0;

  return sub_1B8C938C8(*v0);
}

uint64_t sub_1B8C9391C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8C93F14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8C93940()
{
  return 0;
}

void sub_1B8C9394C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1B8C93958()
{
  sub_1B8C947A4();
  return sub_1B8CE192C();
}

uint64_t sub_1B8C93980()
{
  sub_1B8C947A4();
  return sub_1B8CE1938();
}

uint64_t sub_1B8C939A8(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4150);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4158);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4160);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8C947A4();
  sub_1B8CE1920();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_1B8C947E8();
    sub_1B8CE186C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_1B8C9482C();
    sub_1B8CE186C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1B8C93B78()
{
  return 0;
}

uint64_t sub_1B8C93B84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_1B8C93BB0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1B8C93BBC()
{
  sub_1B8C947E8();
  return sub_1B8CE192C();
}

uint64_t sub_1B8C93BE4()
{
  sub_1B8C947E8();
  return sub_1B8CE1938();
}

uint64_t sub_1B8C93C0C()
{
  sub_1B8C9482C();
  return sub_1B8CE192C();
}

uint64_t sub_1B8C93C34()
{
  sub_1B8C9482C();
  return sub_1B8CE1938();
}

uint64_t sub_1B8C93C5C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1B8C93FE4(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_1B8C93C88(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_1B8C939A8(a1, *v1);
}

uint64_t sub_1B8C93CA0(_QWORD *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D40E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8C944B4();
  sub_1B8CE1920();
  v9[15] = a2;
  sub_1B8C9453C();
  sub_1B8CE1878();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1B8C93D98()
{
  return 1;
}

uint64_t sub_1B8C93DA0()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t sub_1B8C93DE0()
{
  return sub_1B8CE18E4();
}

uint64_t sub_1B8C93E04()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

unint64_t sub_1B8C93E40()
{
  return 0xD000000000000017;
}

uint64_t sub_1B8C93E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8C94310(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B8C93E84()
{
  sub_1B8C944B4();
  return sub_1B8CE192C();
}

uint64_t sub_1B8C93EAC()
{
  sub_1B8C944B4();
  return sub_1B8CE1938();
}

_QWORD *sub_1B8C93ED4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1B8C94394(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1B8C93EFC(_QWORD *a1)
{
  char *v1;

  return sub_1B8C93CA0(a1, *v1);
}

uint64_t sub_1B8C93F14(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v3 || (sub_1B8CE1890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1B8CE1890();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1B8C93FE4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4118);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4120);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4128);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8C947A4();
  v10 = v26;
  sub_1B8CE1914();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_1B8CE1860();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_1B8CE1734();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4138);
    *v19 = &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle;
    sub_1B8CE1848();
    sub_1B8CE1728();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x1E0DEC450], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_1B8C947E8();
    sub_1B8CE183C();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_1B8C9482C();
    sub_1B8CE183C();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v6;
}

uint64_t sub_1B8C94310(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001B8CED150)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1B8CE1890();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

_QWORD *sub_1B8C94394(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _QWORD *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D40D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8C944B4();
  sub_1B8CE1914();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1B8C944F8();
    sub_1B8CE1854();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[15];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1B8C944B4()
{
  unint64_t result;

  result = qword_1EF1D40D8;
  if (!qword_1EF1D40D8)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6128, &type metadata for WKPosterEnvironmentOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D40D8);
  }
  return result;
}

unint64_t sub_1B8C944F8()
{
  unint64_t result;

  result = qword_1EF1D40E0;
  if (!qword_1EF1D40E0)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6100, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle);
    atomic_store(result, (unint64_t *)&qword_1EF1D40E0);
  }
  return result;
}

unint64_t sub_1B8C9453C()
{
  unint64_t result;

  result = qword_1EF1D40F0;
  if (!qword_1EF1D40F0)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE60D8, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle);
    atomic_store(result, (unint64_t *)&qword_1EF1D40F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WKPosterEnvironmentOverrides.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for WKPosterEnvironmentOverrides.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B8C94610 + 4 * byte_1B8CE5EFA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B8C94630 + 4 * byte_1B8CE5EFF[v4]))();
}

_BYTE *sub_1B8C94610(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B8C94630(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8C94638(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8C94640(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B8C94648(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B8C94650(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WKPosterEnvironmentOverrides.CodingKeys()
{
  return &type metadata for WKPosterEnvironmentOverrides.CodingKeys;
}

ValueMetadata *type metadata accessor for WKPosterEnvironmentOverrides.DeviceAppearanceStyle()
{
  return &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle;
}

unint64_t sub_1B8C94688()
{
  unint64_t result;

  result = qword_1EF1D40F8;
  if (!qword_1EF1D40F8)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE5FF8, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle);
    atomic_store(result, (unint64_t *)&qword_1EF1D40F8);
  }
  return result;
}

unint64_t sub_1B8C946D0()
{
  unint64_t result;

  result = qword_1EF1D4100;
  if (!qword_1EF1D4100)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE60B0, &type metadata for WKPosterEnvironmentOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4100);
  }
  return result;
}

unint64_t sub_1B8C94718()
{
  unint64_t result;

  result = qword_1EF1D4108;
  if (!qword_1EF1D4108)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6020, &type metadata for WKPosterEnvironmentOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4108);
  }
  return result;
}

unint64_t sub_1B8C94760()
{
  unint64_t result;

  result = qword_1EF1D4110;
  if (!qword_1EF1D4110)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6048, &type metadata for WKPosterEnvironmentOverrides.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4110);
  }
  return result;
}

unint64_t sub_1B8C947A4()
{
  unint64_t result;

  result = qword_1EF1D4130;
  if (!qword_1EF1D4130)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6390, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4130);
  }
  return result;
}

unint64_t sub_1B8C947E8()
{
  unint64_t result;

  result = qword_1EF1D4140;
  if (!qword_1EF1D4140)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6340, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.DarkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4140);
  }
  return result;
}

unint64_t sub_1B8C9482C()
{
  unint64_t result;

  result = qword_1EF1D4148;
  if (!qword_1EF1D4148)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE62F0, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.LightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4148);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WKPosterEnvironmentSnapshot.PosterEnvironmentMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12WallpaperKit28WKPosterEnvironmentOverridesV21DeviceAppearanceStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8C9494C + 4 * byte_1B8CE5F09[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8C94980 + 4 * byte_1B8CE5F04[v4]))();
}

uint64_t sub_1B8C94980(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8C94988(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8C94990);
  return result;
}

uint64_t sub_1B8C9499C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8C949A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8C949A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8C949B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1B8C949BC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.CodingKeys()
{
  return &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.LightCodingKeys()
{
  return &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.LightCodingKeys;
}

ValueMetadata *type metadata accessor for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.DarkCodingKeys()
{
  return &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.DarkCodingKeys;
}

unint64_t sub_1B8C949FC()
{
  unint64_t result;

  result = qword_1EF1D4168;
  if (!qword_1EF1D4168)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE62C8, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4168);
  }
  return result;
}

unint64_t sub_1B8C94A44()
{
  unint64_t result;

  result = qword_1EF1D4170;
  if (!qword_1EF1D4170)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE61E8, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.LightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4170);
  }
  return result;
}

unint64_t sub_1B8C94A8C()
{
  unint64_t result;

  result = qword_1EF1D4178;
  if (!qword_1EF1D4178)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6210, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.LightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4178);
  }
  return result;
}

unint64_t sub_1B8C94AD4()
{
  unint64_t result;

  result = qword_1EF1D4180;
  if (!qword_1EF1D4180)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6198, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.DarkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4180);
  }
  return result;
}

unint64_t sub_1B8C94B1C()
{
  unint64_t result;

  result = qword_1EF1D4188;
  if (!qword_1EF1D4188)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE61C0, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.DarkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4188);
  }
  return result;
}

unint64_t sub_1B8C94B64()
{
  unint64_t result;

  result = qword_1EF1D4190;
  if (!qword_1EF1D4190)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6238, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4190);
  }
  return result;
}

unint64_t sub_1B8C94BAC()
{
  unint64_t result;

  result = qword_1EF1D4198;
  if (!qword_1EF1D4198)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE6260, &type metadata for WKPosterEnvironmentOverrides.DeviceAppearanceStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1D4198);
  }
  return result;
}

uint64_t sub_1B8C94C04()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  type metadata accessor for WKWallpaperBundleDownloadManager();
  v1 = swift_allocObject();
  type metadata accessor for WKWallpaperBundleDownloadManager.ImplementationWrapper();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v1 + 16) = v2;
  return v1;
}

uint64_t type metadata accessor for WKWallpaperBundleDownloadManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WKWallpaperBundleDownloadManager.ImplementationWrapper()
{
  return objc_opt_self();
}

id sub_1B8C94CB0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 16), sel_assetDownloadIdentifier);
}

id sub_1B8C94CD8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 16), sel_delegate);
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

id sub_1B8C94D20()
{
  uint64_t v0;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 16), sel_delegate);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_1B8C94D54(uint64_t a1)
{
  uint64_t v1;
  id v3;

  v3 = *(id *)(*(_QWORD *)(v1 + 16) + 16);
  objc_msgSend(v3, sel_setDelegate_, a1);

  return swift_unknownObjectRelease();
}

void (*sub_1B8C94D98(void (**a1)(uint64_t *a1, char a2)))(uint64_t *a1, char a2)
{
  uint64_t v1;
  void (*result)(uint64_t *, char);

  a1[1] = (void (*)(uint64_t *, char))v1;
  result = (void (*)(uint64_t *, char))objc_msgSend(*(id *)(*(_QWORD *)(v1 + 16) + 16), sel_delegate);
  if (result)
  {
    *a1 = result;
    return sub_1B8C94DEC;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B8C94DEC(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *(void **)(*(_QWORD *)(a1[1] + 16) + 16);
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v3, sel_setDelegate_, v2);
    swift_unknownObjectRelease();
  }
  else
  {
    v4 = v3;
    objc_msgSend(v4, sel_setDelegate_, v2);
    swift_unknownObjectRelease();

  }
}

uint64_t WKWallpaperBundleDownloadManager.__allocating_init(assetDownloadIdentifier:)(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = objc_msgSend(objc_allocWithZone((Class)WKWallpaperBundleDownloadManager), sel_initWithAssetDownloadIdentifier_, a1);

  type metadata accessor for WKWallpaperBundleDownloadManager.ImplementationWrapper();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v2 + 16) = v4;
  return v2;
}

uint64_t WKWallpaperBundleDownloadManager.init(assetDownloadIdentifier:)(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(objc_allocWithZone((Class)WKWallpaperBundleDownloadManager), sel_initWithAssetDownloadIdentifier_, a1);

  type metadata accessor for WKWallpaperBundleDownloadManager.ImplementationWrapper();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  return v1;
}

uint64_t sub_1B8C94F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[29] = a3;
  v4[30] = v3;
  v4[27] = a1;
  v4[28] = a2;
  return swift_task_switch();
}

uint64_t sub_1B8C94F5C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  id v6;
  uint64_t v7;
  uint64_t v9;

  sub_1B8C90CCC(*(_QWORD *)(v0 + 224), v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED567068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5657E0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 232);
    sub_1B8C8A344((__int128 *)(v0 + 120), v0 + 160);
    v2 = *(void **)(*(_QWORD *)(v1 + 16) + 16);
    *(_QWORD *)(v0 + 248) = v2;
    v3 = *(_QWORD *)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 192);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 160), v3);
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    v6 = v2;
    v7 = v5(v3, v4);
    *(_QWORD *)(v0 + 256) = v7;
    *(_QWORD *)(v0 + 56) = v0 + 208;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1B8C95148;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_1B8C95380;
    *(_QWORD *)(v0 + 104) = &block_descriptor;
    objc_msgSend(v6, sel_downloadWallpaperRepresentingIfNeeded_progress_withCompletion_, v7, v9, v0 + 80);
    return swift_continuation_await();
  }
  else
  {
    *(_QWORD *)(v0 + 152) = 0;
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    sub_1B8C88430(v0 + 120, &qword_1EF1D41A8);
    type metadata accessor for WKWallpaperKitError(0);
    *(_QWORD *)(v0 + 80) = -10005;
    sub_1B8C8E33C(MEMORY[0x1E0DEE9D8]);
    sub_1B8C8E464();
    sub_1B8CE0DB0();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1B8C95148()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 264) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1B8C951A8()
{
  uint64_t v0;
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5670D0);
  v1 = swift_dynamicCast();
  v2 = *(void **)(v0 + 248);
  if ((v1 & 1) != 0)
  {
    sub_1B8C8A344((__int128 *)(v0 + 80), v0 + 120);

    swift_unknownObjectRelease();
    v3 = *(_QWORD *)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 152);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 120), v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    __swift_destroy_boxed_opaque_existential_1(v0 + 120);
    __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  }
  else
  {
    *(_QWORD *)(v0 + 112) = 0;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_1B8C88430(v0 + 80, (uint64_t *)&unk_1EF1D4270);

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 160);
    type metadata accessor for WKWallpaperKitError(0);
    *(_QWORD *)(v0 + 80) = -10005;
    sub_1B8C8E33C(MEMORY[0x1E0DEE9D8]);
    sub_1B8C8E464();
    sub_1B8CE0DB0();
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8C95320()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 248);
  swift_willThrow();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8C95380(uint64_t result, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5674D0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    swift_unknownObjectRetain();
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B8C95410(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];
  uint64_t v10;
  id v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v3 = *(id *)(*(_QWORD *)(v1 + 16) + 16);
  v4 = (void *)sub_1B8CE1494();
  v5 = (void *)sub_1B8CE1494();
  v6 = objc_msgSend(v3, sel_localWallpaperRepresentingWithIdentifier_wallpaperName_, v4, v5);

  if (v6)
  {
    v11 = v6;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5670D0);
    if (swift_dynamicCast())
    {
      sub_1B8C8A344(v9, (uint64_t)v12);
      v7 = v13;
      v8 = v14;
      __swift_project_boxed_opaque_existential_1(v12, v13);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }
    else
    {
      v10 = 0;
      memset(v9, 0, sizeof(v9));
      sub_1B8C88430((uint64_t)v9, (uint64_t *)&unk_1EF1D4270);
      sub_1B8CE17D0();
      __break(1u);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

uint64_t sub_1B8C955A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 200) = a1;
  *(_QWORD *)(v2 + 208) = v1;
  return swift_task_switch();
}

uint64_t sub_1B8C955C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  id v6;
  uint64_t v7;
  uint64_t v9;

  sub_1B8C90CCC(*(_QWORD *)(v0 + 200), v0 + 120);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED567068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5657E0);
  if (swift_dynamicCast())
  {
    v1 = *(_QWORD *)(v0 + 208);
    sub_1B8C8A344((__int128 *)(v0 + 160), v0 + 80);
    v2 = *(void **)(*(_QWORD *)(v1 + 16) + 16);
    *(_QWORD *)(v0 + 216) = v2;
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 112);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), v3);
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    v6 = v2;
    v7 = v5(v3, v4);
    *(_QWORD *)(v0 + 224) = v7;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1B8C9580C;
    *(_QWORD *)(v0 + 152) = swift_continuation_init();
    *(_QWORD *)(v0 + 120) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 128) = 0x40000000;
    *(_QWORD *)(v0 + 136) = sub_1B8C95914;
    *(_QWORD *)(v0 + 144) = &block_descriptor_2;
    objc_msgSend(v6, sel_cancelDownloadForWallpaperRepresenting_withCompletion_, v7, v0 + 120);
    return swift_continuation_await();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 200);
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(_QWORD *)(v0 + 192) = 0;
    sub_1B8C88430(v0 + 160, &qword_1EF1D41A8);
    sub_1B8C90CCC(v9, v0 + 80);
    sub_1B8CE1704();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104));
    swift_getDynamicType();
    sub_1B8CE1944();
    sub_1B8CE14DC();
    swift_bridgeObjectRelease();
    sub_1B8CE14DC();
    return sub_1B8CE17D0();
  }
}

uint64_t sub_1B8C9580C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1B8C9586C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8C958B4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 216);
  swift_willThrow();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8C95914(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5674D0);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t WKWallpaperBundleDownloadManager.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t WKWallpaperBundleDownloadManager.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

id sub_1B8C959CC(_QWORD *a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)a2 + 16) + 16), sel_setDelegate_, *a1);
}

uint64_t method lookup function for WKWallpaperBundleDownloadManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static WKWallpaperBundleDownloadManager.default.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of WKWallpaperBundleDownloadManager.assetDownloadIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of WKWallpaperBundleDownloadManager.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of WKWallpaperBundleDownloadManager.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of WKWallpaperBundleDownloadManager.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of WKWallpaperBundleDownloadManager.__allocating_init(assetDownloadIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of WKWallpaperBundleDownloadManager.downloadWallpaperRepresentingIfNeeded(_:progress:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 144)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 144));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_1B8C95B6C;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of WKWallpaperBundleDownloadManager.localWallpaperRepresenting(with:wallpaperName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of WKWallpaperBundleDownloadManager.cancelDownload(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 160) + *(_QWORD *)(*(_QWORD *)v1 + 160));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B8C95B24;
  return v6(a1);
}

uint64_t sub_1B8C95B24()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t WKLayeredStripeWallpaper.wallpaperValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKLayeredStripeWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 2;
  return result;
}

id WKLayeredStripeWallpaper.identifier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

uint64_t WKLayeredStripeWallpaper.name.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_name);
}

id WKLayeredStripeWallpaper.type.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_type);
}

id WKLayeredStripeWallpaper.representedType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_representedType);
}

id WKLayeredStripeWallpaper.backingType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backingType);
}

uint64_t WKLayeredStripeWallpaper.thumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_thumbnailImageURL);
  if (v3)
  {
    v4 = v3;
    sub_1B8CE0E04();

    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id WKLayeredStripeWallpaper.thumbnailImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

id WKLayeredStripeWallpaper.supportsSerialization.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsSerialization);
}

id WKLayeredStripeWallpaper.supportsCopying.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

uint64_t WKLayeredStripeWallpaper.init(identifier:name:backgroundColor:stripeAngleDegrees:stripeHeightFactor:firstStripeOffsetScaleFactor:)@<X0>(uint64_t a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  id v12;
  void *v13;
  id v14;
  uint64_t result;

  v12 = objc_allocWithZone((Class)WKLayeredStripeWallpaper);
  v13 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithIdentifier_name_backgroundColor_stripeAngleDegrees_stripeHeightFactor_firstStripeOffsetScaleFactor_, a1, v13, a2, a4, a5, a6);

  type metadata accessor for WKLayeredStripeWallpaper.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v14;
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for WKLayeredStripeWallpaper.ImplementationWrapper()
{
  return objc_opt_self();
}

Swift::OpaquePointer_optional __swiftcall WKLayeredStripeWallpaper.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id WKLayeredStripeWallpaper.copyWallpaperContents(to:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE0DEC();
  v6[0] = 0;
  v3 = objc_msgSend(v1, sel_copyWallpaperContentsToDestinationDirectoryURL_error_, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B8CE0DBC();

  return (id)swift_willThrow();
}

uint64_t sub_1B8C95F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKLayeredStripeWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 2;
  return result;
}

id sub_1B8C95FB4()
{
  return WKLayeredStripeWallpaper.copyWallpaperContents(to:)();
}

id static WKLayeredStripeWallpaper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKLayeredStripeWallpaper.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKLayeredStripeWallpaper.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKLayeredStripeWallpaper.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

unint64_t sub_1B8C960A8(uint64_t a1)
{
  unint64_t result;

  result = sub_1B8C960CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B8C960CC()
{
  unint64_t result;

  result = qword_1ED565608;
  if (!qword_1ED565608)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredStripeWallpaper, &type metadata for WKLayeredStripeWallpaper);
    atomic_store(result, (unint64_t *)&qword_1ED565608);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredStripeWallpaper()
{
  return &type metadata for WKLayeredStripeWallpaper;
}

uint64_t type metadata accessor for FindClass()
{
  return objc_opt_self();
}

uint64_t WKLayeredThumbnailWallpaper.wallpaperValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKLayeredThumbnailWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

id WKLayeredThumbnailWallpaper.identifier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

uint64_t WKLayeredThumbnailWallpaper.name.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_name);
}

id WKLayeredThumbnailWallpaper.type.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_type);
}

id WKLayeredThumbnailWallpaper.representedType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_representedType);
}

id WKLayeredThumbnailWallpaper.backingType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backingType);
}

uint64_t WKLayeredThumbnailWallpaper.thumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_thumbnailImageURL);
  if (v3)
  {
    v4 = v3;
    sub_1B8CE0E04();

    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id WKLayeredThumbnailWallpaper.thumbnailImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

id WKLayeredThumbnailWallpaper.supportsSerialization.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsSerialization);
}

id WKLayeredThumbnailWallpaper.supportsCopying.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

uint64_t WKLayeredThumbnailWallpaper.init(identifier:name:type:representedType:backgroundThumbnailImageURL:foregroundThumbnailImageURL:floatingThumbnailImageURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  uint64_t *v29;

  v28 = a5;
  v29 = a9;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v28 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v28 - v23;
  sub_1B8C84538(a6, (uint64_t)&v28 - v23);
  sub_1B8C84538(a7, (uint64_t)v22);
  sub_1B8C84538(a8, (uint64_t)v19);
  v25 = objc_allocWithZone((Class)WKLayeredThumbnailWallpaper);
  v26 = sub_1B8C9672C(a1, a2, a3, a4, v28, (uint64_t)v24, (uint64_t)v22, (uint64_t)v19);
  sub_1B8C8491C(a8);
  sub_1B8C8491C(a7);
  sub_1B8C8491C(a6);
  type metadata accessor for WKLayeredThumbnailWallpaper.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v26;
  *v29 = result;
  return result;
}

Swift::OpaquePointer_optional __swiftcall WKLayeredThumbnailWallpaper.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id WKLayeredThumbnailWallpaper.copyWallpaperContents(to:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE0DEC();
  v6[0] = 0;
  v3 = objc_msgSend(v1, sel_copyWallpaperContentsToDestinationDirectoryURL_error_, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B8CE0DBC();

  return (id)swift_willThrow();
}

uint64_t sub_1B8C965DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKLayeredThumbnailWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

id sub_1B8C96638()
{
  return WKLayeredThumbnailWallpaper.copyWallpaperContents(to:)();
}

id static WKLayeredThumbnailWallpaper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKLayeredThumbnailWallpaper.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKLayeredThumbnailWallpaper.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKLayeredThumbnailWallpaper.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

id sub_1B8C9672C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v22;

  v12 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  v13 = sub_1B8CE0E1C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = 0;
  if (v15(a6, 1, v13) != 1)
  {
    v16 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a6, v13);
  }
  if (v15(a7, 1, v13) == 1)
  {
    v17 = 0;
  }
  else
  {
    v17 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a7, v13);
  }
  if (v15(a8, 1, v13) == 1)
  {
    v18 = 0;
  }
  else
  {
    v18 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a8, v13);
  }
  v19 = objc_msgSend(v22, sel_initWithIdentifier_name_type_representedType_backgroundThumbnailImageURL_foregroundThumbnailImageURL_floatingThumbnailImageURL_, a1, v12, a4, a5, v16, v17, v18);

  return v19;
}

uint64_t type metadata accessor for WKLayeredThumbnailWallpaper.ImplementationWrapper()
{
  return objc_opt_self();
}

unint64_t sub_1B8C968C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1B8C968E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B8C968E4()
{
  unint64_t result;

  result = qword_1EF1D41E0;
  if (!qword_1EF1D41E0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredThumbnailWallpaper, &type metadata for WKLayeredThumbnailWallpaper);
    atomic_store(result, (unint64_t *)&qword_1EF1D41E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredThumbnailWallpaper()
{
  return &type metadata for WKLayeredThumbnailWallpaper;
}

uint64_t dispatch thunk of WKPosterEnvironmentContext.isPreview.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WKPosterEnvironmentContext.isSnapshot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WKPosterEnvironment.deviceOrientation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WKPosterEnvironment.userInterfaceStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WKPosterEnvironment.floatingObscurableBounds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of WKPosterEnvironment.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of WKPosterEnvironment.sourceAssetDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of WKPosterEnvironment.sourceUserInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of WKPosterRenderingEnvironment.wakeState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WKPosterRenderingEnvironment.unlockState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of WKPosterEditingEnvironment.targetAssetDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WKPosterEditingEnvironment.store(userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1B8C969C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  int v28;
  uint8_t *v29;
  unint64_t v30;
  char v31;
  int v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  char v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t inited;
  id v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  unsigned __int8 v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  void *v76;
  char *v77;
  id v78;
  uint64_t v79;
  id v80;
  void *v81;
  unsigned __int8 v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint8_t *v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  void *v97;
  id v98;
  float v99;
  float v100;
  void *v101;
  id v102;
  float v103;
  float v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  void *v109;
  id v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  uint8_t *v120;
  uint64_t v121;
  char *v122;
  int v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  void *v129;
  _QWORD *v130;
  uint64_t *v131;
  uint8_t *v132;
  unint64_t v133;
  unint64_t v134;
  __int128 v135;
  __int128 v136;
  unint64_t v137;
  __int128 v138;
  __int128 v139;
  uint8_t *v140;

  v131 = a3;
  v140 = (uint8_t *)sub_1B8CE0DC8();
  v132 = (uint8_t *)*((_QWORD *)v140 - 1);
  MEMORY[0x1E0C80A78](v140);
  v8 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B8CE0E1C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v121 - v14;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  if (v4)
    return result;
  v124 = a1;
  v125 = v3;
  v126 = a2;
  v127 = v13;
  v122 = v8;
  v17 = (uint64_t)v140;
  v129 = 0;
  v18 = result;
  sub_1B8CE0D38();
  swift_allocObject();
  v128 = sub_1B8CE0D2C();
  v133 = 0xD00000000000001ALL;
  v134 = 0x80000001B8CED410;
  sub_1B8CE16EC();
  v19 = (_QWORD *)v18;
  if (*(_QWORD *)(v18 + 16))
  {
    v20 = sub_1B8C9C6E8((uint64_t)&v135);
    v21 = v9;
    v22 = v17;
    if ((v23 & 1) != 0)
    {
      sub_1B8C841D4(v19[7] + 32 * v20, (uint64_t)&v138);
    }
    else
    {
      v138 = 0u;
      v139 = 0u;
    }
  }
  else
  {
    v138 = 0u;
    v139 = 0u;
    v21 = v9;
    v22 = v17;
  }
  v24 = v15;
  sub_1B8C97ADC((uint64_t)&v135);
  v130 = v19;
  if (*((_QWORD *)&v139 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v25 = v133;
      v26 = v134;
      sub_1B8C97B10();
      v27 = v129;
      sub_1B8CE0D20();
      if (v27)
      {

        sub_1B8C97B54(v25, v26);
        v129 = 0;
        v28 = 3;
      }
      else
      {
        v129 = 0;
        sub_1B8C97B54(v25, v26);
        v28 = v135;
      }
      v123 = v28;
      v19 = v130;
      v21 = v9;
      goto LABEL_15;
    }
  }
  else
  {
    sub_1B8C88430((uint64_t)&v138, &qword_1ED565600);
  }
  v123 = 3;
LABEL_15:
  *(_QWORD *)&v138 = 0xD00000000000001DLL;
  *((_QWORD *)&v138 + 1) = 0x80000001B8CED430;
  sub_1B8CE16EC();
  v29 = v132;
  if (v19[2] && (v30 = sub_1B8C9C6E8((uint64_t)&v135), (v31 & 1) != 0))
  {
    sub_1B8C841D4(v19[7] + 32 * v30, (uint64_t)&v138);
  }
  else
  {
    v138 = 0u;
    v139 = 0u;
  }
  sub_1B8C97ADC((uint64_t)&v135);
  if (*((_QWORD *)&v139 + 1))
  {
    v32 = swift_dynamicCast();
    if (v32)
      v33 = v133;
    else
      v33 = 0;
    if (v32)
      v34 = v134;
    else
      v34 = 0;
  }
  else
  {
    sub_1B8C88430((uint64_t)&v138, &qword_1ED565600);
    v33 = 0;
    v34 = 0;
  }
  *(_QWORD *)&v138 = 0xD00000000000001FLL;
  *((_QWORD *)&v138 + 1) = 0x80000001B8CED450;
  sub_1B8CE16EC();
  v35 = v130;
  if (v130[2] && (v36 = sub_1B8C9C6E8((uint64_t)&v135), (v37 & 1) != 0))
  {
    sub_1B8C841D4(v35[7] + 32 * v36, (uint64_t)&v138);
  }
  else
  {
    v138 = 0u;
    v139 = 0u;
  }
  sub_1B8C97ADC((uint64_t)&v135);
  if (*((_QWORD *)&v139 + 1))
  {
    v38 = swift_dynamicCast();
    v39 = v133;
    if (!v38)
      v39 = 0;
    v140 = (uint8_t *)v39;
    if (v38)
      v40 = v134;
    else
      v40 = 0;
  }
  else
  {
    sub_1B8C88430((uint64_t)&v138, &qword_1ED565600);
    v140 = 0;
    v40 = 0;
  }
  if (v34)
  {
    v41 = *(void (**)(uint64_t))(v126 + 40);
    v125 = v40;
    v42 = v127;
    v41(v124);
    *(_QWORD *)&v135 = v33;
    *((_QWORD *)&v135 + 1) = v34;
    v43 = v21;
    v44 = v10;
    v45 = v122;
    (*((void (**)(char *, _QWORD, uint64_t))v29 + 13))(v122, *MEMORY[0x1E0CAFD60], v22);
    sub_1B8C8DFDC();
    sub_1B8CE0E10();
    (*((void (**)(char *, uint64_t))v29 + 1))(v45, v22);
    v46 = *(void (**)(char *, uint64_t))(v44 + 8);
    v47 = v42;
    v40 = v125;
    v46(v47, v43);
    swift_bridgeObjectRelease();
    v48 = objc_allocWithZone((Class)WKWallpaperBundle);
    v49 = (void *)sub_1B8CE0DEC();
    v50 = objc_msgSend(v48, sel_initWithURL_, v49);

    v46(v24, v43);
    if (v50)
    {
      type metadata accessor for WKWallpaperBundle.ImplementationWrapper();
      v51 = swift_allocObject();
      *(_QWORD *)(v51 + 16) = v50;
      swift_bridgeObjectRelease();
      type metadata accessor for WKWallpaperRepresentingCollectionsManager();
      inited = swift_initStackObject();
      v53 = objc_msgSend(objc_allocWithZone((Class)WKWallpaperRepresentingCollectionsManager), sel_initWithDownloadManager_, 0);
      type metadata accessor for WKWallpaperRepresentingCollectionsManager.ImplementationWrapper();
      v54 = swift_initStackObject();
      *(_QWORD *)(v54 + 16) = v53;
      *(_QWORD *)(inited + 16) = v54;
      v140 = (uint8_t *)inited;
      swift_retain();
      v55 = *(void **)(v54 + 16);
      if (objc_msgSend(v55, sel_numberOfWallpaperCollections))
      {
        v56 = 0;
        while (1)
        {
          v57 = objc_msgSend(v55, sel_wallpaperCollectionAtIndex_, v56);
          type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
          v58 = swift_initStackObject();
          *(_QWORD *)(v58 + 16) = v57;
          if ((uint64_t)v56 >= (uint64_t)objc_msgSend(v55, sel_numberOfWallpaperCollections))
          {
            __break(1u);
            goto LABEL_94;
          }
          v59 = *(void **)(v51 + 16);
          swift_retain();
          v60 = objc_msgSend(v59, sel_identifierString);
          sub_1B8CE14B8();
          swift_release();

          v61 = v57;
          v62 = (void *)sub_1B8CE1494();
          v63 = objc_msgSend(v61, sel_containsWallpaperRepresentingWithIdentifier_, v62);
          swift_bridgeObjectRelease();

          if ((v63 & 1) != 0)
            break;

          v56 = (_QWORD *)((char *)v56 + 1);
          v55 = *(void **)(v54 + 16);
          if (v56 == objc_msgSend(v55, sel_numberOfWallpaperCollections))
            goto LABEL_45;
        }
        swift_release_n();
        v95 = *(void **)(v51 + 16);
        swift_retain();
        v96 = objc_msgSend(v95, sel_identifierString);
        sub_1B8CE14B8();
        swift_release();

        *(_QWORD *)&v138 = v58;
        WKWallpaperRepresentingCollection.subscript.getter();

        swift_bridgeObjectRelease();
        if (!*((_QWORD *)&v136 + 1))
          goto LABEL_46;
        __swift_instantiateConcreteTypeFromMangledName(qword_1ED567068);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v91 = v138;
          v97 = *(void **)(v138 + 16);
          swift_retain();
          v98 = objc_msgSend(v97, sel_contentVersion);
          objc_msgSend(v98, sel_floatValue);
          v100 = v99;
          swift_release();

          v101 = *(void **)(v51 + 16);
          swift_retain();
          v102 = objc_msgSend(v101, sel_contentVersion);
          objc_msgSend(v102, sel_floatValue);
          v104 = v103;
          swift_release();

          if (v104 >= v100)
          {
            swift_release();
            goto LABEL_47;
          }
          if (qword_1ED5652F8 != -1)
            swift_once();
          v105 = sub_1B8CE0EDC();
          __swift_project_value_buffer(v105, (uint64_t)qword_1ED56B930);
          swift_retain_n();
          v106 = sub_1B8CE0EC4();
          v107 = sub_1B8CE15CC();
          if (os_log_type_enabled(v106, v107))
          {
            v108 = (uint8_t *)swift_slowAlloc();
            v140 = (uint8_t *)swift_slowAlloc();
            *(_QWORD *)&v135 = v140;
            *(_DWORD *)v108 = 136446210;
            v132 = v108 + 4;
            v109 = *(void **)(v51 + 16);
            swift_retain();
            v110 = objc_msgSend(v109, sel_identifierString);
            v111 = sub_1B8CE14B8();
            v113 = v112;
            swift_release();

            *(_QWORD *)&v138 = sub_1B8CC4700(v111, v113, (uint64_t *)&v135);
            sub_1B8CE1674();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1B8C64000, v106, v107, "Wallpaper '%{public}s' has a more recent version available in system volume, using it instead.", v108, 0xCu);
            v114 = (uint64_t)v140;
            swift_arrayDestroy();
            MEMORY[0x1BCCB9588](v114, -1, -1);
            MEMORY[0x1BCCB9588](v108, -1, -1);
            swift_release();

            result = swift_release();
          }
          else
          {

            swift_release();
            result = swift_release_n();
          }
          goto LABEL_66;
        }
      }
      else
      {
LABEL_45:
        swift_release_n();
        v137 = 0;
        v135 = 0u;
        v136 = 0u;
LABEL_46:
        sub_1B8C88430((uint64_t)&v135, &qword_1ED567340);
      }
LABEL_47:
      if (qword_1ED5652F8 != -1)
        swift_once();
      v64 = sub_1B8CE0EDC();
      __swift_project_value_buffer(v64, (uint64_t)qword_1ED56B930);
      swift_retain_n();
      v65 = sub_1B8CE0EC4();
      v66 = sub_1B8CE15CC();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = (uint8_t *)swift_slowAlloc();
        v68 = swift_slowAlloc();
        *(_QWORD *)&v135 = v68;
        *(_DWORD *)v67 = 136446210;
        v140 = v67 + 4;
        v69 = *(void **)(v51 + 16);
        swift_retain();
        v70 = objc_msgSend(v69, sel_identifierString);
        v71 = sub_1B8CE14B8();
        v73 = v72;
        swift_release();

        *(_QWORD *)&v138 = sub_1B8CC4700(v71, v73, (uint64_t *)&v135);
        sub_1B8CE1674();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B8C64000, v65, v66, "Using wallpaper '%{public}s' from configuration as is.", v67, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v68, -1, -1);
        MEMORY[0x1BCCB9588](v67, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      result = swift_release();
      v91 = v51;
LABEL_66:
      v92 = v131;
      v56 = v130;
      goto LABEL_67;
    }
  }
  if (!v40)
    goto LABEL_58;
  v74 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  type metadata accessor for WKWallpaperRepresentingCollectionsManager();
  v75 = swift_initStackObject();
  type metadata accessor for WKWallpaperRepresentingCollectionsManager.ImplementationWrapper();
  v56 = (_QWORD *)swift_initStackObject();
  v56[2] = v74;
  *(_QWORD *)(v75 + 16) = v56;
  v132 = (uint8_t *)v75;
  swift_retain();
  v76 = (void *)v56[2];
  if (!objc_msgSend(v76, sel_numberOfWallpaperCollections))
  {
LABEL_57:
    swift_release_n();
    swift_bridgeObjectRelease();
LABEL_58:
    v56 = v130;
LABEL_59:
    if (qword_1ED5652F8 != -1)
LABEL_95:
      swift_once();
    v83 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v83, (uint64_t)qword_1ED56B930);
    v84 = sub_1B8CE0EC4();
    v85 = sub_1B8CE15CC();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v86 = 0;
      _os_log_impl(&dword_1B8C64000, v84, v85, "Loading default wallpaper.", v86, 2u);
      v87 = v86;
      v56 = v130;
      MEMORY[0x1BCCB9588](v87, -1, -1);
    }

    v88 = objc_msgSend((id)objc_opt_self(), sel_defaultWallpaperManager);
    v89 = objc_msgSend(v88, sel_defaultWallpaperBundle);

    type metadata accessor for WKWallpaperBundle.ImplementationWrapper();
    v90 = swift_allocObject();
    *(_QWORD *)(v90 + 16) = v89;
    *((_QWORD *)&v136 + 1) = &type metadata for WKWallpaperBundle;
    v137 = sub_1B8C8A2F0();
    *(_QWORD *)&v135 = v90;
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED567068);
    result = swift_dynamicCast();
    v91 = v138;
    goto LABEL_63;
  }
  v77 = 0;
  while (1)
  {
    v78 = objc_msgSend(v76, sel_wallpaperCollectionAtIndex_, v77);
    type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
    v79 = swift_initStackObject();
    *(_QWORD *)(v79 + 16) = v78;
    if ((uint64_t)v77 >= (uint64_t)objc_msgSend(v76, sel_numberOfWallpaperCollections))
    {
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    v80 = v78;
    v81 = (void *)sub_1B8CE1494();
    v82 = objc_msgSend(v80, sel_containsWallpaperRepresentingWithIdentifier_, v81);

    if ((v82 & 1) != 0)
      break;

    ++v77;
    v76 = (void *)v56[2];
    if (v77 == objc_msgSend(v76, sel_numberOfWallpaperCollections))
      goto LABEL_57;
  }
  swift_release_n();
  *(_QWORD *)&v138 = v79;
  WKWallpaperRepresentingCollection.subscript.getter();
  v56 = v130;
  if (!*((_QWORD *)&v136 + 1))
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B8C88430((uint64_t)&v135, &qword_1ED567340);
    goto LABEL_59;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED567068);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();

    goto LABEL_59;
  }
  v91 = v138;
  if (qword_1ED5652F8 != -1)
    swift_once();
  v115 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v115, (uint64_t)qword_1ED56B930);
  swift_bridgeObjectRetain();
  v116 = sub_1B8CE0EC4();
  v117 = sub_1B8CE15CC();
  if (os_log_type_enabled(v116, v117))
  {
    v118 = (uint8_t *)swift_slowAlloc();
    v119 = swift_slowAlloc();
    *(_QWORD *)&v135 = v119;
    *(_DWORD *)v118 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v138 = sub_1B8CC4700((uint64_t)v140, v40, (uint64_t *)&v135);
    sub_1B8CE1674();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B8C64000, v116, v117, "Loaded wallpaper bundle via identifier '%{public}s'.", v118, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v119, -1, -1);
    v120 = v118;
    v56 = v130;
    MEMORY[0x1BCCB9588](v120, -1, -1);
    swift_release();

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release();
  }
  result = swift_release();
LABEL_63:
  v92 = v131;
LABEL_67:
  v93 = 1;
  if ((v123 & 1) != 0)
    v93 = 2;
  if ((v123 & 0xFE) == 2)
    v94 = 0;
  else
    v94 = v93;
  *v92 = v91;
  v92[1] = v94;
  v92[2] = (uint64_t)v56;
  return result;
}

uint64_t sub_1B8C97ADC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

unint64_t sub_1B8C97B10()
{
  unint64_t result;

  result = qword_1EF1D41E8;
  if (!qword_1EF1D41E8)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE5F68, &type metadata for WKPosterEnvironmentOverrides);
    atomic_store(result, (unint64_t *)&qword_1EF1D41E8);
  }
  return result;
}

uint64_t sub_1B8C97B54(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t WKLayeredAnimationWallpaper.wallpaperValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKLayeredAnimationWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 5;
  return result;
}

id WKLayeredAnimationWallpaper.identifier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

uint64_t WKLayeredAnimationWallpaper.name.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_name);
}

id WKLayeredAnimationWallpaper.type.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_type);
}

id WKLayeredAnimationWallpaper.representedType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_representedType);
}

id WKLayeredAnimationWallpaper.backingType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backingType);
}

uint64_t WKLayeredAnimationWallpaper.thumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_thumbnailImageURL);
  if (v3)
  {
    v4 = v3;
    sub_1B8CE0E04();

    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id WKLayeredAnimationWallpaper.thumbnailImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

id WKLayeredAnimationWallpaper.supportsSerialization.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsSerialization);
}

id WKLayeredAnimationWallpaper.supportsCopying.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

uint64_t WKLayeredAnimationWallpaper.init(identifier:name:backgroundAnimationFileURL:foregroundAnimationFileURL:floatingAnimationFileURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  uint64_t result;
  uint64_t v26;

  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v26 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v26 - v21;
  sub_1B8C84538(a4, (uint64_t)&v26 - v21);
  sub_1B8C84538(a5, (uint64_t)v20);
  sub_1B8C84538(a6, (uint64_t)v17);
  v23 = objc_allocWithZone((Class)WKLayeredAnimationWallpaper);
  v24 = sub_1B8C98134(a1, a2, a3, (uint64_t)v22, (uint64_t)v20, (uint64_t)v17);
  sub_1B8C8491C(a6);
  sub_1B8C8491C(a5);
  sub_1B8C8491C(a4);
  type metadata accessor for WKLayeredAnimationWallpaper.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v24;
  *a7 = result;
  return result;
}

Swift::OpaquePointer_optional __swiftcall WKLayeredAnimationWallpaper.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id WKLayeredAnimationWallpaper.copyWallpaperContents(to:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE0DEC();
  v6[0] = 0;
  v3 = objc_msgSend(v1, sel_copyWallpaperContentsToDestinationDirectoryURL_error_, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B8CE0DBC();

  return (id)swift_willThrow();
}

uint64_t sub_1B8C97FE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKLayeredAnimationWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 5;
  return result;
}

id sub_1B8C98040()
{
  return WKLayeredAnimationWallpaper.copyWallpaperContents(to:)();
}

id static WKLayeredAnimationWallpaper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKLayeredAnimationWallpaper.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKLayeredAnimationWallpaper.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKLayeredAnimationWallpaper.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

id sub_1B8C98134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v19;

  v10 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  v11 = sub_1B8CE0E1C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  v14 = 0;
  if (v13(a4, 1, v11) != 1)
  {
    v14 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a4, v11);
  }
  if (v13(a5, 1, v11) == 1)
  {
    v15 = 0;
  }
  else
  {
    v15 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a5, v11);
  }
  if (v13(a6, 1, v11) == 1)
  {
    v16 = 0;
  }
  else
  {
    v16 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a6, v11);
  }
  v17 = objc_msgSend(v19, sel_initWithIdentifier_name_backgroundAnimationFileURL_foregroundAnimationFileURL_floatingAnimationFileURL_, a1, v10, v14, v15, v16);

  return v17;
}

uint64_t type metadata accessor for WKLayeredAnimationWallpaper.ImplementationWrapper()
{
  return objc_opt_self();
}

unint64_t sub_1B8C982C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1B8C982E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B8C982E4()
{
  unint64_t result;

  result = qword_1ED565190;
  if (!qword_1ED565190)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredAnimationWallpaper, &type metadata for WKLayeredAnimationWallpaper);
    atomic_store(result, (unint64_t *)&qword_1ED565190);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredAnimationWallpaper()
{
  return &type metadata for WKLayeredAnimationWallpaper;
}

uint64_t WKWallpaperAdjustmentTraits.offset.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_offset);
  type metadata accessor for WKWallpaperAdjustmentTraitOffset.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *a1 = result;
  return result;
}

uint64_t WKWallpaperAdjustmentTraits.init(dictionary:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t result;

  if (a1)
  {
    v3 = (void *)sub_1B8CE1440();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(objc_allocWithZone((Class)WKWallpaperAdjustmentTraits), sel_initWithDictionary_, v3);

  type metadata accessor for WKWallpaperAdjustmentTraits.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v4;
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for WKWallpaperAdjustmentTraits.ImplementationWrapper()
{
  return objc_opt_self();
}

Swift::OpaquePointer_optional __swiftcall WKWallpaperAdjustmentTraits.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id static WKWallpaperAdjustmentTraits.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKWallpaperAdjustmentTraits.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKWallpaperAdjustmentTraits.description.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_description);
  v2 = sub_1B8CE14B8();

  return v2;
}

uint64_t WKWallpaperAdjustmentTraits.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

unint64_t sub_1B8C985F4()
{
  unint64_t result;

  result = qword_1EF1D41F0;
  if (!qword_1EF1D41F0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperAdjustmentTraits, &type metadata for WKWallpaperAdjustmentTraits);
    atomic_store(result, (unint64_t *)&qword_1EF1D41F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKWallpaperAdjustmentTraits()
{
  return &type metadata for WKWallpaperAdjustmentTraits;
}

id WKThumbnailWallpaper.identifier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

uint64_t WKThumbnailWallpaper.name.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_name);
}

id WKThumbnailWallpaper.type.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_type);
}

id WKThumbnailWallpaper.representedType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_representedType);
}

id WKThumbnailWallpaper.backingType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backingType);
}

uint64_t WKThumbnailWallpaper.thumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_thumbnailImageURL);
  if (v3)
  {
    v4 = v3;
    sub_1B8CE0E04();

    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id WKThumbnailWallpaper.thumbnailImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

id WKThumbnailWallpaper.supportsSerialization.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsSerialization);
}

id WKThumbnailWallpaper.supportsCopying.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

uint64_t WKThumbnailWallpaper.init(identifier:name:type:representedType:backingType:thumbnailImageURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t result;

  v12 = objc_allocWithZone((Class)WKThumbnailWallpaper);
  v13 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1B8CE0DEC();
  v15 = objc_msgSend(v12, sel_initWithIdentifier_name_type_representedType_backingType_thumbnailImageURL_, a1, v13, a2, a3, a4, v14);

  v16 = sub_1B8CE0E1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a5, v16);
  type metadata accessor for WKThumbnailWallpaper.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v15;
  *a6 = result;
  return result;
}

uint64_t type metadata accessor for WKThumbnailWallpaper.ImplementationWrapper()
{
  return objc_opt_self();
}

Swift::OpaquePointer_optional __swiftcall WKThumbnailWallpaper.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id WKThumbnailWallpaper.copyWallpaperContents(to:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE0DEC();
  v6[0] = 0;
  v3 = objc_msgSend(v1, sel_copyWallpaperContentsToDestinationDirectoryURL_error_, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B8CE0DBC();

  return (id)swift_willThrow();
}

id static WKThumbnailWallpaper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKThumbnailWallpaper.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKThumbnailWallpaper.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

uint64_t WKThumbnailWallpaper.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

id sub_1B8C98AD0()
{
  return WKThumbnailWallpaper.copyWallpaperContents(to:)();
}

unint64_t sub_1B8C98AE8()
{
  unint64_t result;

  result = qword_1EF1D41F8;
  if (!qword_1EF1D41F8)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKThumbnailWallpaper, &type metadata for WKThumbnailWallpaper);
    atomic_store(result, (unint64_t *)&qword_1EF1D41F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKThumbnailWallpaper()
{
  return &type metadata for WKThumbnailWallpaper;
}

uint64_t sub_1B8C98B40(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1B8C9C5F8(a1), (v2 & 1) != 0))
    return swift_bridgeObjectRetain();
  else
    return 0;
}

uint64_t sub_1B8C98B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16) && (sub_1B8C9C770(a1, a2), (v3 & 1) != 0))
    return swift_unknownObjectRetain();
  else
    return 0;
}

uint64_t sub_1B8C98BC0(unsigned __int8 *a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1B8C9C718(a1), (v2 & 1) != 0))
    return swift_bridgeObjectRetain();
  else
    return 0;
}

uint64_t sub_1B8C98C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  __int128 v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[7];
  char v42;

  v28 = sub_1B8CE0F84();
  v1 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WKAnimationPackageLayer(0) + 24));
  sub_1B8CDF87C((uint64_t)v3);
  v4 = *(_OWORD *)(v0 + 80);
  v41[4] = *(_OWORD *)(v0 + 64);
  v41[5] = v4;
  v41[6] = *(_OWORD *)(v0 + 96);
  v42 = *(_BYTE *)(v0 + 112);
  v5 = *(_OWORD *)(v0 + 16);
  v41[0] = *(_OWORD *)v0;
  v41[1] = v5;
  v6 = *(_OWORD *)(v0 + 48);
  v41[2] = *(_OWORD *)(v0 + 32);
  v41[3] = v6;
  sub_1B8C86848((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85798);
  sub_1B8CDF63C((uint64_t)v29);
  sub_1B8C86848((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85880);
  v7 = v29[0];
  v8 = v29[8];
  v9 = v30;
  v10 = v31;
  v11 = v32;
  v12 = v33;
  v13 = v34;
  v14 = v35;
  v26 = v36;
  v15 = v37;
  v25 = v38;
  v16 = v39;
  v17 = v40;
  type metadata accessor for WKAnimationPackageLayer.Coordinator(0);
  v18 = swift_allocObject();
  v19 = OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_animationMapping;
  *(_QWORD *)(v18 + v19) = sub_1B8CC634C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v18 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_package) = 0;
  *(_BYTE *)(v18 + 16) = v27;
  v20 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v18 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_colorScheme, v3, v28);
  v21 = v18 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot;
  *(_BYTE *)v21 = v7;
  *(_BYTE *)(v21 + 8) = v8;
  *(_QWORD *)(v21 + 16) = v9;
  *(_BYTE *)(v21 + 24) = v10;
  *(_QWORD *)(v21 + 32) = v11;
  *(_BYTE *)(v21 + 40) = v12;
  *(_QWORD *)(v21 + 48) = v13;
  v22 = v26;
  *(_QWORD *)(v21 + 56) = v14;
  *(_QWORD *)(v21 + 64) = v22;
  *(_QWORD *)(v21 + 72) = v15;
  *(_OWORD *)(v21 + 80) = v25;
  *(_QWORD *)(v21 + 96) = v16;
  *(_QWORD *)(v21 + 104) = v17;
  *(_QWORD *)(v18 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_lastOrientation) = v15;
  v23 = sub_1B8CCF6C0(v15) * 0.0174532925;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v20);
  *(double *)(v18 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_rotationAngle) = v23;
  return v18;
}

char *sub_1B8C98E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v14;

  v4 = sub_1B8CE0E1C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2 + *(int *)(a2 + 28);
  LOBYTE(a2) = *(_BYTE *)(v2 + *(int *)(a2 + 24));
  (*(void (**)(char *, uint64_t))(v8 + 16))(v6, v7);
  v9 = objc_allocWithZone((Class)type metadata accessor for WKPlatformPackageView());
  v10 = (char *)sub_1B8CBAA04(a2, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654C8);
  sub_1B8CE1194();
  v11 = *(void **)&v10[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_package];
  v12 = v11;
  sub_1B8C991C0(v11);
  swift_release();
  return v10;
}

uint64_t sub_1B8C98F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = sub_1B8CE108C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654C8);
  sub_1B8CE1194();
  sub_1B8CE11A0();
  sub_1B8CE11AC();
  sub_1B8CACD50(*(double *)(v3 + *(int *)(a3 + 32)));
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1B8C9904C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8C98C00();
  *a1 = result;
  return result;
}

uint64_t sub_1B8C99074()
{
  return sub_1B8CE10E0();
}

uint64_t sub_1B8C990B4()
{
  sub_1B8C83740(&qword_1ED565258, type metadata accessor for WKAnimationPackageLayer, (uint64_t)&unk_1B8CE6D40);
  return sub_1B8CE1140();
}

uint64_t sub_1B8C9911C()
{
  sub_1B8C83740(&qword_1ED565258, type metadata accessor for WKAnimationPackageLayer, (uint64_t)&unk_1B8CE6D40);
  return sub_1B8CE10EC();
}

void sub_1B8C99184()
{
  sub_1B8C83740(&qword_1ED565258, type metadata accessor for WKAnimationPackageLayer, (uint64_t)&unk_1B8CE6D40);
  sub_1B8CE1134();
  __break(1u);
}

void sub_1B8C991C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  _QWORD *v6;
  double v7;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_package);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_package) = a1;
  v5 = a1;
  if (a1)
  {
    sub_1B8C992F0();
    if (v4)
    {
LABEL_3:

      return;
    }
  }
  else
  {
    v6 = (_QWORD *)(v2 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_animationMapping);
    swift_beginAccess();
    *v6 = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
  }
  sub_1B8CE0FC0();
  v7 = *(double *)(v2 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_rotationAngle);
  swift_retain();
  sub_1B8CA2020(0, 0, v7);

  swift_release_n();
}

id sub_1B8C992B0()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_package);
  if (!result)
  {
    __break(1u);
    goto LABEL_5;
  }
  result = objc_msgSend(result, sel_rootLayer);
  if (!result)
LABEL_5:
    __break(1u);
  return result;
}

void sub_1B8C992F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  id v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  int64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  int64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  char v66[32];

  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565298);
  v1 = MEMORY[0x1E0C80A78](v59);
  v3 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v56 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5652C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for WKAnimationPackageLayerState();
  v64 = *(_QWORD *)(v61 - 8);
  v9 = MEMORY[0x1E0C80A78](v61);
  v58 = (unsigned __int8 *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v57 = (uint64_t)&v56 - v11;
  v12 = (_QWORD *)sub_1B8CC64D8(MEMORY[0x1E0DEE9D8]);
  v63 = v0;
  v13 = *(void **)(v0 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_package);
  if (!v13)
    goto LABEL_48;
  v14 = objc_msgSend(v13, sel_rootLayer);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, sel_states);

    v17 = v59;
    if (v16)
    {
      v18 = MEMORY[0x1E0DEE9B8] + 8;
      v19 = sub_1B8CE1530();

      v20 = v19;
      v21 = *(_QWORD *)(v19 + 16);
      if (!v21)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        v42 = v12[8];
        v62 = (char *)(v12 + 8);
        v43 = 1 << *((_BYTE *)v12 + 32);
        v44 = -1;
        if (v43 < 64)
          v44 = ~(-1 << v43);
        v45 = v44 & v42;
        v46 = (unint64_t)(v43 + 63) >> 6;
        swift_bridgeObjectRetain_n();
        swift_retain();
        v47 = 0;
        while (1)
        {
          if (v45)
          {
            v48 = __clz(__rbit64(v45));
            v45 &= v45 - 1;
            v49 = v48 | (v47 << 6);
          }
          else
          {
            v53 = v47 + 1;
            if (__OFADD__(v47, 1))
            {
              __break(1u);
              goto LABEL_47;
            }
            if (v53 >= v46)
              goto LABEL_45;
            v54 = *(_QWORD *)&v62[8 * v53];
            ++v47;
            if (!v54)
            {
              v47 = v53 + 1;
              if (v53 + 1 >= v46)
                goto LABEL_45;
              v54 = *(_QWORD *)&v62[8 * v47];
              if (!v54)
              {
                v47 = v53 + 2;
                if (v53 + 2 >= v46)
                  goto LABEL_45;
                v54 = *(_QWORD *)&v62[8 * v47];
                if (!v54)
                {
                  v47 = v53 + 3;
                  if (v53 + 3 >= v46)
                    goto LABEL_45;
                  v54 = *(_QWORD *)&v62[8 * v47];
                  if (!v54)
                  {
                    v55 = v53 + 4;
                    if (v55 >= v46)
                    {
LABEL_45:
                      swift_release();
                      swift_release();
                      swift_bridgeObjectRelease_n();
                      return;
                    }
                    v54 = *(_QWORD *)&v62[8 * v55];
                    if (!v54)
                    {
                      while (1)
                      {
                        v47 = v55 + 1;
                        if (__OFADD__(v55, 1))
                          break;
                        if (v47 >= v46)
                          goto LABEL_45;
                        v54 = *(_QWORD *)&v62[8 * v47];
                        ++v55;
                        if (v54)
                          goto LABEL_44;
                      }
LABEL_47:
                      __break(1u);
LABEL_48:
                      __break(1u);
                      goto LABEL_49;
                    }
                    v47 = v55;
                  }
                }
              }
            }
LABEL_44:
            v45 = (v54 - 1) & v54;
            v49 = __clz(__rbit64(v54)) + (v47 << 6);
          }
          sub_1B8CA11B0(v12[6] + *(_QWORD *)(v64 + 72) * v49, (uint64_t)v5);
          v50 = *(void **)(v12[7] + 8 * v49);
          *(_QWORD *)&v5[*(int *)(v17 + 48)] = v50;
          sub_1B8C8F26C((uint64_t)v5, (uint64_t)v3, &qword_1ED565298);
          v51 = *(_QWORD *)&v3[*(int *)(v17 + 48)];
          v52 = v50;
          sub_1B8C99870((uint64_t)v3, v51, v63);
          sub_1B8C88430((uint64_t)v3, &qword_1ED565298);
        }
      }
      v56 = v20;
      v22 = v20 + 32;
      v60 = v8;
      v62 = (char *)v18;
      while (1)
      {
        sub_1B8C841D4(v22, (uint64_t)v66);
        sub_1B8C84230(0, &qword_1ED565580);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v23 = v65;
          v24 = objc_msgSend(v65, sel_name, v56);
          if (!v24 || (v25 = v24, v26 = sub_1B8CE14B8(), v28 = v27, v25, !v28))
          {
LABEL_17:
            v31 = objc_msgSend(v23, sel_name);
            if (v31)
            {
              v32 = v31;
              v33 = sub_1B8CE14B8();
              v35 = v34;

            }
            else
            {
              v33 = 0;
              v35 = 0;
            }
            v36 = (uint64_t)v60;
            sub_1B8CB1570(v33, v35, (uint64_t)v60);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v36, 1, v61) == 1)
            {

              sub_1B8C88430(v36, &qword_1ED5652C0);
            }
            else
            {
              v37 = v36;
              v38 = v57;
              sub_1B8CA127C(v37, v57);
              v39 = v58;
              sub_1B8CA11B0(v38, (uint64_t)v58);
              v40 = v23;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v65 = v12;
              sub_1B8CA0B00((uint64_t)v40, v39, isUniquelyReferenced_nonNull_native);
              v17 = v59;
              v12 = v65;
              swift_bridgeObjectRelease();
              sub_1B8CA11F4((uint64_t)v39);

              sub_1B8CA11F4(v38);
            }
            goto LABEL_7;
          }
          if (v26 == 42 && v28 == 0xE100000000000000)
          {

            swift_bridgeObjectRelease();
          }
          else
          {
            v30 = sub_1B8CE1890();
            swift_bridgeObjectRelease();
            if ((v30 & 1) == 0)
              goto LABEL_17;

          }
        }
LABEL_7:
        v22 += 32;
        if (!--v21)
          goto LABEL_23;
      }
    }
  }
  else
  {
LABEL_49:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1B8C99870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unint64_t (*v7)@<X0>(unint64_t *@<X8>);
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char **v13;
  char **v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  _BOOL8 v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  uint64_t v78;
  _BOOL8 v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  char v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  uint64_t result;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  int64_t v99;
  unsigned __int8 *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  unint64_t (*v105)@<X0>(unint64_t *@<X8>);
  unint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  _OWORD v112[2];
  _BYTE v113[24];
  uint64_t v114;

  v101 = a1;
  v92 = type metadata accessor for WKAnimationPackageLayerState();
  v96 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v5 = (unsigned __int8 *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8C83ED4();
  v7 = 0;
  v105 = 0;
  v8 = 0;
  v9 = *(_QWORD *)(v6 + 64);
  v93 = v6 + 64;
  v95 = v6;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v103 = (_QWORD *)(a3 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_animationMapping);
  v94 = (unint64_t)(v10 + 63) >> 6;
  v13 = &selRef_lowercaseString;
  v14 = &selRef_lowercaseString;
  v104 = MEMORY[0x1E0DEE9B8] + 8;
  v100 = v5;
  while (1)
  {
    if (v12)
    {
      v98 = (v12 - 1) & v12;
      v15 = __clz(__rbit64(v12)) | (v8 << 6);
    }
    else
    {
      v16 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_82;
      if (v16 >= v94)
        goto LABEL_74;
      v17 = *(_QWORD *)(v93 + 8 * v16);
      ++v8;
      if (!v17)
      {
        v8 = v16 + 1;
        if (v16 + 1 >= v94)
          goto LABEL_74;
        v17 = *(_QWORD *)(v93 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 2;
          if (v16 + 2 >= v94)
            goto LABEL_74;
          v17 = *(_QWORD *)(v93 + 8 * v8);
          if (!v17)
          {
            v18 = v16 + 3;
            if (v18 >= v94)
              goto LABEL_74;
            v17 = *(_QWORD *)(v93 + 8 * v18);
            if (!v17)
            {
              while (1)
              {
                v8 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_83;
                if (v8 >= v94)
                  break;
                v17 = *(_QWORD *)(v93 + 8 * v8);
                ++v18;
                if (v17)
                  goto LABEL_20;
              }
LABEL_74:
              swift_release();
              sub_1B8C84210((uint64_t)v7);
              return sub_1B8C84210((uint64_t)v105);
            }
            v8 = v18;
          }
        }
      }
LABEL_20:
      v98 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (v8 << 6);
    }
    v99 = v8;
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v95 + 48) + v19);
    v21 = *(_QWORD *)(*(_QWORD *)(v95 + 56) + v19);
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v90 = v20;
      v22 = sub_1B8CE17DC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      v23 = v20;
    }
    v97 = v20;
    if (v22)
      break;
LABEL_4:

    swift_bridgeObjectRelease_n();
    v8 = v99;
    v12 = v98;
  }
  v110 = v21 & 0xC000000000000001;
  v24 = 4;
  v106 = v21;
  v108 = v22;
  while (1)
  {
    v25 = v110 ? (id)MEMORY[0x1BCCB8A6C](v24 - 4, v21) : *(id *)(v21 + 8 * v24);
    v26 = v25;
    v27 = v24 - 3;
    if (__OFADD__(v24 - 4, 1))
      break;
    v28 = objc_msgSend(v25, v13[246], v92);
    if (v28)
    {
      v29 = v28;
      v109 = sub_1B8CE14B8();
      v31 = v30;

      v32 = objc_msgSend(v26, v14[220]);
      if (v32)
      {
        v33 = v32;
        if (objc_msgSend(v26, sel_value))
        {
          sub_1B8CE16A4();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v112, 0, sizeof(v112));
        }
        sub_1B8C8F26C((uint64_t)v112, (uint64_t)v113, &qword_1ED565600);
        if (!v114)
        {

          swift_bridgeObjectRelease();
          sub_1B8C88430((uint64_t)v113, &qword_1ED565600);
          goto LABEL_71;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565558);
        if ((swift_dynamicCast() & 1) == 0)
        {

          swift_bridgeObjectRelease();
          goto LABEL_71;
        }
        v34 = v111;
        sub_1B8CA11B0(v101, (uint64_t)v5);
        v35 = v103;
        swift_beginAccess();
        v36 = v33;
        v102 = v34;
        swift_unknownObjectRetain();
        sub_1B8C84210((uint64_t)v7);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v112[0] = *v35;
        v38 = *(_QWORD *)&v112[0];
        *v35 = 0x8000000000000000;
        v40 = sub_1B8C9C718(v5);
        v41 = *(_QWORD *)(v38 + 16);
        v42 = (v39 & 1) == 0;
        v43 = v41 + v42;
        if (__OFADD__(v41, v42))
          goto LABEL_76;
        v44 = v39;
        v45 = *(_QWORD *)(v38 + 24);
        v107 = v36;
        if (v45 >= v43)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1B8C9FD98();
            v38 = *(_QWORD *)&v112[0];
          }
        }
        else
        {
          sub_1B8C9D62C(v43, isUniquelyReferenced_nonNull_native);
          v38 = *(_QWORD *)&v112[0];
          v46 = sub_1B8C9C718(v5);
          if ((v44 & 1) != (v47 & 1))
            goto LABEL_84;
          v40 = v46;
        }
        v48 = v103;
        *v103 = v38;
        swift_bridgeObjectRelease();
        v49 = (_QWORD *)*v48;
        swift_bridgeObjectRetain();
        if ((v44 & 1) == 0)
        {
          v50 = sub_1B8CC6664(MEMORY[0x1E0DEE9D8]);
          v49[(v40 >> 6) + 8] |= 1 << v40;
          sub_1B8CA11B0((uint64_t)v5, v49[6] + *(_QWORD *)(v96 + 72) * v40);
          *(_QWORD *)(v49[7] + 8 * v40) = v50;
          v51 = v49[2];
          v52 = __OFADD__(v51, 1);
          v53 = v51 + 1;
          if (v52)
            goto LABEL_79;
          v49[2] = v53;
        }
        v54 = v49[7];
        swift_bridgeObjectRelease();
        v55 = 8 * v40;
        sub_1B8C84210((uint64_t)v105);
        v56 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v112[0] = *(_QWORD *)(v54 + 8 * v40);
        v57 = *(_QWORD *)&v112[0];
        *(_QWORD *)(v54 + 8 * v40) = 0x8000000000000000;
        v59 = sub_1B8C9C5F8((uint64_t)v107);
        v60 = *(_QWORD *)(v57 + 16);
        v61 = (v58 & 1) == 0;
        v62 = v60 + v61;
        if (__OFADD__(v60, v61))
          goto LABEL_77;
        v63 = v58;
        if (*(_QWORD *)(v57 + 24) >= v62)
        {
          if ((v56 & 1) == 0)
          {
            sub_1B8C9FBF8(&qword_1ED5655C8);
            v57 = *(_QWORD *)&v112[0];
          }
        }
        else
        {
          sub_1B8C9D35C(v62, v56, &qword_1ED5655C8);
          sub_1B8C84230(0, (unint64_t *)&unk_1ED565570);
          v57 = *(_QWORD *)&v112[0];
          v64 = sub_1B8C9C5F8((uint64_t)v107);
          if ((v63 & 1) != (v65 & 1))
            goto LABEL_85;
          v59 = v64;
        }
        *(_QWORD *)(v54 + v55) = v57;
        swift_bridgeObjectRelease();
        v66 = *(_QWORD **)(v54 + v55);
        swift_bridgeObjectRetain();
        v67 = 8 * v59;
        if ((v63 & 1) == 0)
        {
          v68 = sub_1B8CC676C(MEMORY[0x1E0DEE9D8]);
          v66[(v59 >> 6) + 8] |= 1 << v59;
          v69 = v107;
          *(_QWORD *)(v66[6] + 8 * v59) = v107;
          *(_QWORD *)(v66[7] + 8 * v59) = v68;
          v70 = v66[2];
          v52 = __OFADD__(v70, 1);
          v71 = v70 + 1;
          if (v52)
            goto LABEL_80;
          v66[2] = v71;
          v72 = v69;
        }
        v73 = v66[7];
        swift_bridgeObjectRelease();
        v74 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v112[0] = *(_QWORD *)(v73 + 8 * v59);
        v75 = *(_QWORD *)&v112[0];
        *(_QWORD *)(v73 + 8 * v59) = 0x8000000000000000;
        v77 = sub_1B8C9C770(v109, v31);
        v78 = *(_QWORD *)(v75 + 16);
        v79 = (v76 & 1) == 0;
        v80 = v78 + v79;
        if (__OFADD__(v78, v79))
          goto LABEL_78;
        v81 = v76;
        if (*(_QWORD *)(v75 + 24) >= v80)
        {
          if ((v74 & 1) != 0)
          {
            v84 = *(_QWORD **)&v112[0];
            if ((v76 & 1) == 0)
              goto LABEL_68;
          }
          else
          {
            sub_1B8C9FFC4(&qword_1ED5655C0);
            v84 = *(_QWORD **)&v112[0];
            if ((v81 & 1) == 0)
              goto LABEL_68;
          }
        }
        else
        {
          sub_1B8C9DB8C(v80, v74, &qword_1ED5655C0);
          v82 = sub_1B8C9C770(v109, v31);
          if ((v81 & 1) != (v83 & 1))
            goto LABEL_86;
          v77 = v82;
          v84 = *(_QWORD **)&v112[0];
          if ((v81 & 1) == 0)
          {
LABEL_68:
            v84[(v77 >> 6) + 8] |= 1 << v77;
            v86 = (_QWORD *)(v84[6] + 16 * v77);
            *v86 = v109;
            v86[1] = v31;
            *(_QWORD *)(v84[7] + 8 * v77) = v102;
            v87 = v84[2];
            v52 = __OFADD__(v87, 1);
            v88 = v87 + 1;
            if (v52)
              goto LABEL_81;
            v84[2] = v88;
            swift_bridgeObjectRetain();
LABEL_70:
            *(_QWORD *)(v73 + v67) = v84;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v5 = v100;
            sub_1B8CA11F4((uint64_t)v100);
            swift_endAccess();
            swift_unknownObjectRelease();

            v89 = v107;
            v7 = sub_1B8C9A160;
            v105 = sub_1B8C9A18C;
            v13 = &selRef_lowercaseString;
            v14 = &selRef_lowercaseString;
LABEL_71:
            v21 = v106;
LABEL_72:
            v22 = v108;
            goto LABEL_26;
          }
        }
        v85 = v84[7];
        swift_unknownObjectRelease();
        *(_QWORD *)(v85 + 8 * v77) = v102;
        goto LABEL_70;
      }
      swift_bridgeObjectRelease();

      goto LABEL_72;
    }

LABEL_26:
    ++v24;
    if (v27 == v22)
      goto LABEL_4;
  }
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  sub_1B8CE189C();
  __break(1u);
LABEL_85:
  sub_1B8CE189C();
  __break(1u);
LABEL_86:
  result = sub_1B8CE189C();
  __break(1u);
  return result;
}

unint64_t sub_1B8C9A160@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_1B8CC6664(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  return result;
}

unint64_t sub_1B8C9A18C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_1B8CC676C(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  return result;
}

uint64_t sub_1B8C9A1B8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float v17;
  int64_t v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t *v41;
  unint64_t v42;
  void *v43;
  unint64_t v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  char v50;
  uint64_t v51;
  char *v52;
  NSObject *v53;
  uint64_t v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *v70;
  uint64_t v71;
  double v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  NSObject *v76;
  uint64_t v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  int64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  id v93;
  void *v94;
  uint64_t v95;
  void *v96;
  id v97;
  void *v98;
  id v99;
  void *v100;
  unint64_t (*v101)@<X0>(unint64_t *@<X8>);
  char isUniquelyReferenced_nonNull_native;
  char v103;
  unint64_t v104;
  uint64_t v105;
  _BOOL8 v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  unint64_t v110;
  char v111;
  _QWORD *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t (*v115)@<X0>(unint64_t *@<X8>);
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  unint64_t (*v119)@<X0>(unint64_t *@<X8>);
  uint64_t v120;
  char v121;
  uint64_t v122;
  char v123;
  unint64_t v124;
  uint64_t v125;
  _BOOL8 v126;
  uint64_t v127;
  char v128;
  unint64_t v129;
  char v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t result;
  unint64_t v138;
  id v139;
  void *v140;
  unint64_t (*v141)@<X0>(unint64_t *@<X8>);
  unint64_t v142;
  uint64_t v143;
  int64_t v144;
  uint64_t v145;
  int64_t v146;
  unint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  int64_t v151;
  __int128 v152;
  char *v153;
  uint64_t v154;
  int64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  uint64_t v164;
  char *v165;
  void *v166;
  __int128 v167;
  uint64_t ObjectType;
  __int128 v169;

  v4 = v3;
  v8 = sub_1B8CE0EDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v149 = (char *)&v138 - v13;
  v142 = sub_1B8CC6664(MEMORY[0x1E0DEE9D8]);
  v14 = *(_QWORD *)(a1 + 64);
  v143 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  if (v15 < 64)
    v16 = ~(-1 << v15);
  else
    v16 = -1;
  v147 = v16 & v14;
  v157 = OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_package;
  v144 = (unint64_t)(v15 + 63) >> 6;
  v17 = a3;
  v145 = a1;
  swift_bridgeObjectRetain();
  v141 = 0;
  v18 = 0;
  v153 = "overlapping range";
  v156 = 0x80000001B8CED690;
  *(_QWORD *)&v19 = 136446466;
  v152 = v19;
  v148 = MEMORY[0x1E0DEE9B8] + 8;
  v150 = v4;
  v160 = v8;
  v161 = a2;
  v158 = v9;
  v165 = v12;
  while (2)
  {
    if (!v147)
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_104;
      if (v22 >= v144)
        goto LABEL_101;
      v23 = *(_QWORD *)(v143 + 8 * v22);
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v144)
          goto LABEL_101;
        v23 = *(_QWORD *)(v143 + 8 * v24);
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v144)
            goto LABEL_101;
          v23 = *(_QWORD *)(v143 + 8 * v24);
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 < v144)
            {
              v23 = *(_QWORD *)(v143 + 8 * v25);
              if (v23)
              {
                v24 = v18 + 4;
                goto LABEL_21;
              }
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_105;
                if (v24 >= v144)
                  break;
                v23 = *(_QWORD *)(v143 + 8 * v24);
                ++v25;
                if (v23)
                  goto LABEL_21;
              }
            }
LABEL_101:
            swift_release();
            sub_1B8C84210((uint64_t)v141);
            return v142;
          }
        }
      }
LABEL_21:
      v147 = (v23 - 1) & v23;
      v146 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
      goto LABEL_22;
    }
    v20 = __clz(__rbit64(v147));
    v147 &= v147 - 1;
    v146 = v18;
    v21 = v20 | (v18 << 6);
LABEL_22:
    v26 = 8 * v21;
    v27 = *(void **)(*(_QWORD *)(v145 + 48) + v26);
    v28 = *(_QWORD *)(*(_QWORD *)(v145 + 56) + v26);
    v29 = *(_QWORD *)(v28 + 64);
    v154 = v28 + 64;
    v30 = 1 << *(_BYTE *)(v28 + 32);
    if (v30 < 64)
      v31 = ~(-1 << v30);
    else
      v31 = -1;
    v32 = v31 & v29;
    v155 = (unint64_t)(v30 + 63) >> 6;
    v33 = v27;
    v162 = v28;
    v163 = v33;
    swift_bridgeObjectRetain();
    v34 = 0;
    while (v32)
    {
      v35 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      v36 = v35 | (v34 << 6);
      v37 = v161;
LABEL_43:
      v41 = (uint64_t *)(*(_QWORD *)(v162 + 48) + 16 * v36);
      v42 = v41[1];
      v43 = *(void **)(*(_QWORD *)(v162 + 56) + 8 * v36);
      v164 = *v41;
      if (v164 == 0xD000000000000014 && v42 == v156 || (sub_1B8CE1890() & 1) != 0)
      {
        v44 = v42;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v45 = objc_msgSend(v163, sel_superlayer);
        v46 = *(void **)(v4 + v157);
        if (!v46)
          goto LABEL_106;
        v47 = objc_msgSend(v46, sel_rootLayer);
        if (!v47)
          goto LABEL_107;
        v48 = v47;
        if (v45)
        {
          sub_1B8C84230(0, (unint64_t *)&unk_1ED565570);
          v49 = v45;
          v8 = v160;
          v50 = sub_1B8CE1644();

          v9 = v158;
          v12 = v165;
          if ((v50 & 1) != 0)
          {
            v151 = v34;
            if (qword_1ED565318 != -1)
              swift_once();
            v51 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED56B978);
            v52 = v149;
            (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v149, v51, v8);
            swift_retain_n();
            swift_bridgeObjectRetain();
            v53 = sub_1B8CE0EC4();
            v54 = v9;
            v55 = sub_1B8CE15A8();
            if (os_log_type_enabled(v53, v55))
            {
              v56 = swift_slowAlloc();
              v57 = swift_slowAlloc();
              *(_QWORD *)&v169 = v57;
              *(_DWORD *)v56 = v152;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v56 + 4) = sub_1B8CC4700(v164, v44, (uint64_t *)&v169);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v56 + 12) = 2082;
              v58 = sub_1B8CE14C4();
              v159 = v43;
              v59 = v58;
              v61 = v60;
              swift_bridgeObjectRelease();
              *(_QWORD *)(v56 + 14) = sub_1B8CC4700(v59, v61, (uint64_t *)&v169);
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1B8C64000, v53, v55, "Skipping backlight interpolation for '%{public}s' keyPath animation on the root most layer for '%{public}s' level.", (uint8_t *)v56, 0x16u);
              swift_arrayDestroy();
              v62 = v57;
              v8 = v160;
              MEMORY[0x1BCCB9588](v62, -1, -1);
              v63 = v56;
              v12 = v165;
              MEMORY[0x1BCCB9588](v63, -1, -1);

              swift_unknownObjectRelease();
              v9 = v158;
              (*(void (**)(char *, uint64_t))(v158 + 8))(v52, v8);
            }
            else
            {

              swift_unknownObjectRelease();
              swift_release_n();
              swift_bridgeObjectRelease_n();
              (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v8);
              v9 = v54;
            }
            goto LABEL_66;
          }
        }
        else
        {

          v12 = v165;
        }
        if (*(_QWORD *)(v37 + 16))
          goto LABEL_58;
LABEL_70:
        if (qword_1ED565318 != -1)
          swift_once();
        v74 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED56B978);
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v74, v8);
        swift_retain_n();
        v75 = v44;
        swift_bridgeObjectRetain();
        v76 = sub_1B8CE0EC4();
        v77 = v9;
        v78 = sub_1B8CE15B4();
        if (os_log_type_enabled(v76, v78))
        {
          v79 = swift_slowAlloc();
          v80 = swift_slowAlloc();
          *(_QWORD *)&v169 = v80;
          *(_DWORD *)v79 = v152;
          v81 = sub_1B8CE14C4();
          v159 = v43;
          v82 = v32;
          v83 = v34;
          v85 = v84;
          swift_bridgeObjectRelease();
          v86 = v81;
          v4 = v150;
          *(_QWORD *)(v79 + 4) = sub_1B8CC4700(v86, v85, (uint64_t *)&v169);
          swift_release_n();
          v34 = v83;
          v32 = v82;
          swift_bridgeObjectRelease();
          *(_WORD *)(v79 + 12) = 2082;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v79 + 14) = sub_1B8CC4700(v164, v75, (uint64_t *)&v169);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1B8C64000, v76, v78, "%{public}s is missing a value for the '%{public}s' lock state, cannot interpolate between states.", (uint8_t *)v79, 0x16u);
          swift_arrayDestroy();
          v87 = v80;
          v8 = v160;
          MEMORY[0x1BCCB9588](v87, -1, -1);
          v88 = v79;
          v12 = v165;
          MEMORY[0x1BCCB9588](v88, -1, -1);
          swift_unknownObjectRelease();

          v9 = v158;
          (*(void (**)(char *, uint64_t))(v158 + 8))(v12, v8);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v77 + 8))(v12, v8);
          v9 = v77;
        }
      }
      else
      {
        v44 = v42;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        if (!*(_QWORD *)(v37 + 16))
          goto LABEL_70;
LABEL_58:
        v64 = v163;
        v65 = sub_1B8C9C5F8((uint64_t)v64);
        if ((v66 & 1) == 0)
        {

          goto LABEL_69;
        }
        v67 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v65);
        swift_bridgeObjectRetain();

        if (!*(_QWORD *)(v67 + 16))
          goto LABEL_68;
        swift_bridgeObjectRetain();
        v68 = sub_1B8C9C770(v164, v44);
        if ((v69 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_68:
          swift_bridgeObjectRelease();
LABEL_69:
          v12 = v165;
          goto LABEL_70;
        }
        v159 = *(void **)(*(_QWORD *)(v67 + 56) + 8 * v68);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((objc_msgSend(v43, sel_respondsToSelector_, sel_CA_interpolateValue_byFraction_) & 1) == 0)
        {
          swift_unknownObjectRelease();
          goto LABEL_69;
        }
        v70 = v159;
        ObjectType = swift_getObjectType();
        *(_QWORD *)&v167 = v70;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        v71 = sub_1B8CE1884();
        *(float *)&v72 = v17;
        v73 = objc_msgSend(v43, sel_CA_interpolateValue_byFraction_, v71, v72);
        swift_unknownObjectRelease();
        sub_1B8CE16A4();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v167);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565558);
        if ((swift_dynamicCast() & 1) == 0)
        {
          swift_unknownObjectRelease();
          v8 = v160;
          goto LABEL_69;
        }
        v89 = (void *)v167;
        objc_opt_self();
        v90 = swift_dynamicCastObjCClass();
        v91 = v142;
        v140 = v89;
        if (v90)
        {
          v92 = v90;
          swift_unknownObjectRetain();
          v93 = objc_msgSend(v64, sel_presentationLayer);
          if (v93)
          {
            v94 = v93;
            swift_unknownObjectRetain();
            v138 = v44;
            v95 = sub_1B8CE1494();
            v139 = v94;
            v96 = (void *)v95;
            objc_msgSend(v139, sel_setValue_forKeyPath_, v92, v95);
            swift_unknownObjectRelease();

            v97 = v139;
            v98 = (void *)sub_1B8CE1494();
            v99 = objc_msgSend(v97, sel_valueForKeyPath_, v98);

            if (!v99)
              goto LABEL_112;
            sub_1B8CE16A4();
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
            sub_1B8C8ECA4(&v167, &v169);
            swift_dynamicCast();
            v100 = v166;
            goto LABEL_81;
          }
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRetain();
        v100 = v89;
LABEL_81:
        v101 = (unint64_t (*)@<X0>(unint64_t *@<X8>))v64;
        v139 = v100;
        swift_unknownObjectRetain();
        sub_1B8C84210((uint64_t)v141);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v169 = v91;
        v141 = v101;
        v104 = sub_1B8C9C5F8((uint64_t)v101);
        v105 = *(_QWORD *)(v91 + 16);
        v106 = (v103 & 1) == 0;
        v107 = v105 + v106;
        if (__OFADD__(v105, v106))
          goto LABEL_108;
        v108 = v103;
        v109 = *(_QWORD *)(v91 + 24);
        v151 = v34;
        if (v109 >= v107)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1B8C9FBF8(&qword_1ED5655C8);
        }
        else
        {
          sub_1B8C9D35C(v107, isUniquelyReferenced_nonNull_native, &qword_1ED5655C8);
          sub_1B8C84230(0, (unint64_t *)&unk_1ED565570);
          v110 = sub_1B8C9C5F8((uint64_t)v141);
          if ((v108 & 1) != (v111 & 1))
            goto LABEL_113;
          v104 = v110;
        }
        v112 = (_QWORD *)v169;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v113 = 8 * v104;
        if ((v108 & 1) == 0)
        {
          v114 = sub_1B8CC676C(MEMORY[0x1E0DEE9D8]);
          v112[(v104 >> 6) + 8] |= 1 << v104;
          v115 = v141;
          *(_QWORD *)(v112[6] + 8 * v104) = v141;
          *(_QWORD *)(v112[7] + 8 * v104) = v114;
          v116 = v112[2];
          v117 = __OFADD__(v116, 1);
          v118 = v116 + 1;
          if (v117)
            goto LABEL_110;
          v112[2] = v118;
          v119 = v115;
        }
        v120 = v112[7];
        v142 = (unint64_t)v112;
        swift_bridgeObjectRelease();
        v121 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v169 = *(_QWORD *)(v120 + 8 * v104);
        v122 = v169;
        *(_QWORD *)(v120 + 8 * v104) = 0x8000000000000000;
        v124 = sub_1B8C9C770(v164, v44);
        v125 = *(_QWORD *)(v122 + 16);
        v126 = (v123 & 1) == 0;
        v127 = v125 + v126;
        if (__OFADD__(v125, v126))
          goto LABEL_109;
        v128 = v123;
        if (*(_QWORD *)(v122 + 24) >= v127)
        {
          if ((v121 & 1) == 0)
            sub_1B8C9FFC4(&qword_1ED5655C0);
        }
        else
        {
          sub_1B8C9DB8C(v127, v121, &qword_1ED5655C0);
          v129 = sub_1B8C9C770(v164, v44);
          if ((v128 & 1) != (v130 & 1))
            goto LABEL_114;
          v124 = v129;
        }
        v131 = (_QWORD *)v169;
        v132 = v164;
        if ((v128 & 1) != 0)
        {
          v133 = *(_QWORD *)(v169 + 56);
          swift_unknownObjectRelease();
          *(_QWORD *)(v133 + 8 * v124) = v139;
        }
        else
        {
          *(_QWORD *)(v169 + 8 * (v124 >> 6) + 64) |= 1 << v124;
          v134 = (uint64_t *)(v131[6] + 16 * v124);
          *v134 = v132;
          v134[1] = v44;
          *(_QWORD *)(v131[7] + 8 * v124) = v139;
          v135 = v131[2];
          v117 = __OFADD__(v135, 1);
          v136 = v135 + 1;
          if (v117)
            goto LABEL_111;
          v131[2] = v136;
          swift_bridgeObjectRetain();
        }
        *(_QWORD *)(v120 + v113) = v131;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v141 = sub_1B8CAD1B0;
        v4 = v150;
        v8 = v160;
        v9 = v158;
        v12 = v165;
LABEL_66:
        v34 = v151;
      }
    }
    v38 = v34 + 1;
    v37 = v161;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
      goto LABEL_103;
    }
    if (v38 >= v155)
      goto LABEL_5;
    v39 = *(_QWORD *)(v154 + 8 * v38);
    ++v34;
    if (v39)
      goto LABEL_42;
    v34 = v38 + 1;
    if (v38 + 1 >= v155)
      goto LABEL_5;
    v39 = *(_QWORD *)(v154 + 8 * v34);
    if (v39)
      goto LABEL_42;
    v34 = v38 + 2;
    if (v38 + 2 >= v155)
      goto LABEL_5;
    v39 = *(_QWORD *)(v154 + 8 * v34);
    if (v39)
    {
LABEL_42:
      v32 = (v39 - 1) & v39;
      v36 = __clz(__rbit64(v39)) + (v34 << 6);
      goto LABEL_43;
    }
    v40 = v38 + 3;
    if (v40 >= v155)
    {
LABEL_5:

      swift_release();
      v18 = v146;
      continue;
    }
    break;
  }
  v39 = *(_QWORD *)(v154 + 8 * v40);
  if (v39)
  {
    v34 = v40;
    goto LABEL_42;
  }
  while (1)
  {
    v34 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v34 >= v155)
      goto LABEL_5;
    v39 = *(_QWORD *)(v154 + 8 * v34);
    ++v40;
    if (v39)
      goto LABEL_42;
  }
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  sub_1B8CE189C();
  __break(1u);
LABEL_114:
  result = sub_1B8CE189C();
  __break(1u);
  return result;
}

uint64_t sub_1B8C9B1EC()
{
  return WKPosterEnvironmentSnapshot.description.getter();
}

id sub_1B8C9B270(char a1)
{
  void *v2;

  v2 = (void *)objc_opt_self();
  objc_msgSend(v2, sel_commit);
  return objc_msgSend(v2, sel_setDisableActions_, a1 & 1);
}

uint64_t sub_1B8C9B2B8(uint64_t a1, uint64_t a2)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565118);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B8CE6BD0;
  *(_QWORD *)(inited + 32) = 0x7366664F656D6974;
  *(_QWORD *)(inited + 40) = 0xEA00000000007465;
  LOBYTE(a2) = sub_1B8C9C414(a1, a2, (_QWORD *)inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return a2 & 1;
}

uint64_t sub_1B8C9B364(uint64_t a1)
{
  __CFString *v1;
  uint64_t v2;

  v1 = objc_retainAutoreleasedReturnValue(WKStringForInterfaceOrientation(*(_QWORD *)(a1
                                                                                    + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_lastOrientation)));
  v2 = sub_1B8CE14B8();

  return v2;
}

uint64_t sub_1B8C9B3B8(uint64_t a1)
{
  __CFString *v1;
  uint64_t v2;

  v1 = WKStringForInterfaceOrientation(a1);
  v2 = sub_1B8CE14B8();

  return v2;
}

id sub_1B8C9B400(double a1)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithDouble_, a1);
}

id sub_1B8C9B434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  id v11;

  v2 = (_OWORD *)(a1 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot);
  v3 = *(_BYTE *)(a1
                + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                + 8);
  v4 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                 + 16);
  v5 = *(_BYTE *)(a1
                + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                + 24);
  v6 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                 + 32);
  v7 = *(_BYTE *)(a1
                + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                + 40);
  v8 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                 + 48);
  v11 = *(id *)(a1 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot + 56);
  *(_BYTE *)a2 = *(_BYTE *)(a1
                          + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot);
  *(_BYTE *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_BYTE *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v11;
  v9 = v2[5];
  *(_OWORD *)(a2 + 64) = v2[4];
  *(_OWORD *)(a2 + 80) = v9;
  *(_OWORD *)(a2 + 96) = v2[6];
  swift_retain();
  return v11;
}

uint64_t sub_1B8C9B4B8(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_description);
  v2 = sub_1B8CE14B8();

  return v2;
}

uint64_t sub_1B8C9B508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  BOOL v51;
  uint64_t v52;
  unint64_t v53;
  __CFString *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  NSObject *v59;
  int64_t isa;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_t v73;
  uint64_t v74;
  NSObject *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char v87;
  BOOL v88;
  uint64_t v89;
  unint64_t v90;
  __CFString *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  NSObject *v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  char *v107;
  uint8_t *v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  os_log_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  os_log_t v123;
  uint64_t v124;
  uint64_t v126;
  int v127;
  os_log_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t);
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  os_log_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  NSObject *v147;
  uint64_t v148;
  char *v149;

  v5 = v4;
  v147 = a3;
  v144 = (uint8_t *)a2;
  v141 = a4;
  v7 = sub_1B8CE0EDC();
  v145 = *(_QWORD *)(v7 - 8);
  v146 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v138 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v139 = (os_log_t)((char *)&v126 - v10);
  v11 = sub_1B8CE0F84();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v130 = (char *)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v129 = (char *)&v126 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v126 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5652C0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for WKAnimationPackageLayerState();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v24);
  v137 = (uint64_t)&v126 - v28;
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v126 - v29;
  v142 = v5;
  v31 = (char *)(v5 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_colorScheme);
  swift_beginAccess();
  v133 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v133(v18, v31, v11);
  v134 = a1;
  sub_1B8CB1D3C(a1, (uint64_t)v18, (uint64_t)v144, v147, (uint64_t)v21);
  v135 = v12;
  v136 = v18;
  v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  v131 = v11;
  v132 = v32;
  v32(v18, v11);
  v143 = v23;
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v140 = v22;
  if (v33(v21, 1, v22) == 1)
  {
    sub_1B8C88430((uint64_t)v21, &qword_1ED5652C0);
    if (qword_1ED565318 != -1)
      swift_once();
    v34 = v146;
    v35 = __swift_project_value_buffer(v146, (uint64_t)qword_1ED56B978);
    v36 = v145;
    v37 = v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v145 + 16))(v138, v35, v34);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v38 = sub_1B8CE0EC4();
    v39 = sub_1B8CE15A8();
    if (os_log_type_enabled(v38, (os_log_type_t)v39))
    {
      LODWORD(v137) = v39;
      v139 = v38;
      v40 = swift_slowAlloc();
      v129 = (char *)swift_slowAlloc();
      v149 = v129;
      *(_DWORD *)v40 = 136447234;
      v41 = sub_1B8CE14C4();
      v42 = v132;
      v43 = v41;
      v45 = v44;
      swift_bridgeObjectRelease();
      v148 = sub_1B8CC4700(v43, v45, (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_release_n();
      swift_bridgeObjectRelease();
      v46 = 8 * (char)v134;
      v47 = *(_QWORD *)&aSleep_0[v46];
      *(_WORD *)(v40 + 12) = 2082;
      v148 = sub_1B8CC4700(v47, *(_QWORD *)&aUnlocked_0[v46 + 8], (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 22) = 2082;
      v48 = v130;
      v49 = v131;
      v133(v130, v31, v131);
      v50 = v136;
      (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v136, *MEMORY[0x1E0CD86E0], v49);
      LOBYTE(v45) = sub_1B8CE0F78();
      v42(v50, v49);
      v51 = (v45 & 1) == 0;
      if ((v45 & 1) != 0)
        v52 = 0x746867696CLL;
      else
        v52 = 1802658148;
      if (v51)
        v53 = 0xE400000000000000;
      else
        v53 = 0xE500000000000000;
      v42(v48, v49);
      v148 = sub_1B8CC4700(v52, v53, (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 32) = 2082;
      v54 = WKStringForInterfaceOrientation((uint64_t)v144);
      v55 = sub_1B8CE14B8();
      v57 = v56;

      v58 = v55;
      v59 = v147;
      v148 = sub_1B8CC4700(v58, v57, (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      v144 = (uint8_t *)v40;
      *(_WORD *)(v40 + 42) = 2082;
      isa = (int64_t)v59[2].isa;
      v61 = MEMORY[0x1E0DEE9D8];
      if (isa)
      {
        v148 = MEMORY[0x1E0DEE9D8];
        sub_1B8CA1194(0, isa, 0);
        v62 = (uint64_t)v59
            + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
        v63 = *(_QWORD *)(v143 + 72);
        do
        {
          sub_1B8CA11B0(v62, (uint64_t)v26);
          sub_1B8CB28B0();
          v64 = sub_1B8CE14C4();
          v66 = v65;
          swift_bridgeObjectRelease();
          sub_1B8CA11F4((uint64_t)v26);
          v61 = v148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B8CA1194(0, *(_QWORD *)(v61 + 16) + 1, 1);
            v61 = v148;
          }
          v68 = *(_QWORD *)(v61 + 16);
          v67 = *(_QWORD *)(v61 + 24);
          if (v68 >= v67 >> 1)
          {
            sub_1B8CA1194(v67 > 1, v68 + 1, 1);
            v61 = v148;
          }
          *(_QWORD *)(v61 + 16) = v68 + 1;
          v69 = v61 + 16 * v68;
          *(_QWORD *)(v69 + 32) = v64;
          *(_QWORD *)(v69 + 40) = v66;
          v62 += v63;
          --isa;
        }
        while (isa);
      }
      v107 = v138;
      v148 = v61;
      v108 = v144;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5650C8);
      sub_1B8CA1230();
      v109 = sub_1B8CE147C();
      v111 = v110;
      swift_bridgeObjectRelease();
      v148 = sub_1B8CC4700(v109, v111, (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v112 = v139;
      _os_log_impl(&dword_1B8C64000, v139, (os_log_type_t)v137, "%{public}s could not resolve %{public}s animation state for '%{public}s' colorScheme, '%{public}s' interfaceOrientation out of possible states '%{public}s'", v108, 0x34u);
      v113 = v129;
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v113, -1, -1);
      MEMORY[0x1BCCB9588](v108, -1, -1);

      (*(void (**)(char *, uint64_t))(v145 + 8))(v107, v146);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v34);
    }
    v114 = 1;
    v106 = v141;
  }
  else
  {
    v138 = v31;
    sub_1B8CA127C((uint64_t)v21, (uint64_t)v30);
    if (qword_1ED565318 != -1)
      swift_once();
    v70 = v146;
    v71 = __swift_project_value_buffer(v146, (uint64_t)qword_1ED56B978);
    v72 = v145;
    v73 = v139;
    (*(void (**)(os_log_t, uint64_t, uint64_t))(v145 + 16))(v139, v71, v70);
    v74 = v137;
    sub_1B8CA11B0((uint64_t)v30, v137);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v75 = sub_1B8CE0EC4();
    v76 = sub_1B8CE15A8();
    if (os_log_type_enabled(v75, (os_log_type_t)v76))
    {
      v127 = v76;
      v128 = v75;
      v130 = v30;
      v77 = swift_slowAlloc();
      v126 = swift_slowAlloc();
      v149 = (char *)v126;
      *(_DWORD *)v77 = 136447490;
      v78 = sub_1B8CE14C4();
      v79 = v132;
      v81 = v80;
      swift_bridgeObjectRelease();
      v148 = sub_1B8CC4700(v78, v81, (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_release_n();
      swift_bridgeObjectRelease();
      v82 = 8 * (char)v134;
      v83 = *(_QWORD *)&aSleep_0[v82];
      *(_WORD *)(v77 + 12) = 2082;
      v148 = sub_1B8CC4700(v83, *(_QWORD *)&aUnlocked_0[v82 + 8], (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 22) = 2082;
      v84 = v129;
      v85 = v131;
      v133(v129, v138, v131);
      v86 = v136;
      (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v136, *MEMORY[0x1E0CD86E0], v85);
      v87 = sub_1B8CE0F78();
      v79(v86, v85);
      v88 = (v87 & 1) == 0;
      if ((v87 & 1) != 0)
        v89 = 0x746867696CLL;
      else
        v89 = 1802658148;
      if (v88)
        v90 = 0xE400000000000000;
      else
        v90 = 0xE500000000000000;
      v79(v84, v85);
      v148 = sub_1B8CC4700(v89, v90, (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 32) = 2082;
      v91 = WKStringForInterfaceOrientation((uint64_t)v144);
      v92 = sub_1B8CE14B8();
      v94 = v93;

      v148 = sub_1B8CC4700(v92, v94, (uint64_t *)&v149);
      sub_1B8CE1674();
      v95 = v147;
      swift_bridgeObjectRelease();
      v144 = (uint8_t *)v77;
      *(_WORD *)(v77 + 42) = 2082;
      v96 = (int64_t)v95[2].isa;
      v97 = MEMORY[0x1E0DEE9D8];
      if (v96)
      {
        v148 = MEMORY[0x1E0DEE9D8];
        sub_1B8CA1194(0, v96, 0);
        v98 = (uint64_t)v95
            + ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80));
        v99 = *(_QWORD *)(v143 + 72);
        do
        {
          sub_1B8CA11B0(v98, (uint64_t)v26);
          sub_1B8CB28B0();
          v100 = sub_1B8CE14C4();
          v102 = v101;
          swift_bridgeObjectRelease();
          sub_1B8CA11F4((uint64_t)v26);
          v97 = v148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B8CA1194(0, *(_QWORD *)(v97 + 16) + 1, 1);
            v97 = v148;
          }
          v104 = *(_QWORD *)(v97 + 16);
          v103 = *(_QWORD *)(v97 + 24);
          if (v104 >= v103 >> 1)
          {
            sub_1B8CA1194(v103 > 1, v104 + 1, 1);
            v97 = v148;
          }
          *(_QWORD *)(v97 + 16) = v104 + 1;
          v105 = v97 + 16 * v104;
          *(_QWORD *)(v105 + 32) = v100;
          *(_QWORD *)(v105 + 40) = v102;
          v98 += v99;
          --v96;
        }
        while (v96);
        v115 = v137;
      }
      else
      {
        v115 = v137;
      }
      v148 = v97;
      v116 = (uint64_t)v144;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5650C8);
      sub_1B8CA1230();
      v117 = sub_1B8CE147C();
      v119 = v118;
      swift_bridgeObjectRelease();
      v148 = sub_1B8CC4700(v117, v119, (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v116 + 52) = 2082;
      sub_1B8CB28B0();
      v120 = sub_1B8CE14C4();
      v122 = v121;
      swift_bridgeObjectRelease();
      v148 = sub_1B8CC4700(v120, v122, (uint64_t *)&v149);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      sub_1B8CA11F4(v115);
      v123 = v128;
      _os_log_impl(&dword_1B8C64000, v128, (os_log_type_t)v127, "%{public}s successfully resolved %{public}s animation state for '%{public}s' colorScheme, '%{public}s' interfaceOrientation out of possible states '%{public}s. Resolved: %{public}s'", (uint8_t *)v116, 0x3Eu);
      v124 = v126;
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v124, -1, -1);
      MEMORY[0x1BCCB9588](v116, -1, -1);

      (*(void (**)(os_log_t, uint64_t))(v145 + 8))(v139, v146);
      v106 = v141;
      v30 = v130;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
      sub_1B8CA11F4(v74);

      (*(void (**)(os_log_t, uint64_t))(v72 + 8))(v73, v70);
      v106 = v141;
    }
    sub_1B8CA127C((uint64_t)v30, v106);
    v114 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56))(v106, v114, 1, v140);
}

uint64_t sub_1B8C9C2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_colorScheme;
  v2 = sub_1B8CE0F84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                     + 56));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1B8C9C350()
{
  return type metadata accessor for WKAnimationPackageLayer.Coordinator(0);
}

uint64_t type metadata accessor for WKAnimationPackageLayer.Coordinator(uint64_t a1)
{
  return sub_1B8CACC40(a1, qword_1ED565240);
}

uint64_t sub_1B8C9C36C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8CE0F84();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1B8C9C414(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1B8CE1890();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1B8CE1890() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

id sub_1B8C9C4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(v2 + 16) + 16), sel_numberOfWallpaperCollections);
  if (a1 < 0 || (uint64_t)result < a1)
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(*(id *)(*(_QWORD *)(v2 + 16) + 16), sel_numberOfWallpaperCollections);
    if ((a2 & 0x8000000000000000) == 0 && (uint64_t)result >= a2)
      return (id)(a2 - a1);
  }
  __break(1u);
  return result;
}

void sub_1B8C9C548(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1B8CE1674();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

unint64_t sub_1B8C9C5F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B8CE1638();
  return sub_1B8C9EE24(a1, v2, (unint64_t *)&unk_1ED565570);
}

unint64_t sub_1B8C9C644(uint64_t *a1)
{
  uint64_t v2;

  sub_1B8CE18D8();
  sub_1B8CB671C();
  v2 = sub_1B8CE1908();
  return sub_1B8C9ED24(a1, v2);
}

unint64_t sub_1B8C9C69C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B8CE1638();
  return sub_1B8C9EE24(a1, v2, &qword_1ED5657B0);
}

unint64_t sub_1B8C9C6E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B8CE16D4();
  return sub_1B8C9EF34(a1, v2);
}

unint64_t sub_1B8C9C718(unsigned __int8 *a1)
{
  uint64_t v2;

  sub_1B8CE18D8();
  sub_1B8CB355C();
  v2 = sub_1B8CE1908();
  return sub_1B8C9EFF8(a1, v2);
}

unint64_t sub_1B8C9C770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1B8CE18D8();
  sub_1B8CE14D0();
  v4 = sub_1B8CE1908();
  return sub_1B8C9F408(a1, a2, v4);
}

unint64_t sub_1B8C9C7D8(uint64_t a1)
{
  uint64_t v2;

  sub_1B8CE14B8();
  sub_1B8CE18D8();
  sub_1B8CE14D0();
  v2 = sub_1B8CE1908();
  swift_bridgeObjectRelease();
  return sub_1B8C9F4E8(a1, v2);
}

uint64_t sub_1B8C9C864(uint64_t a1, char a2)
{
  return sub_1B8C9D35C(a1, a2, (uint64_t *)&unk_1ED5655D0);
}

unint64_t sub_1B8C9C870(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _BYTE v25[72];

  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4290);
  v5 = (_QWORD *)sub_1B8CE17F4();
  if (*(_QWORD *)(v4 + 16))
  {
    v6 = 1 << *(_BYTE *)(v4 + 32);
    v7 = (_QWORD *)(v4 + 64);
    if (v6 < 64)
      v8 = ~(-1 << v6);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v4 + 64);
    v10 = (unint64_t)(v6 + 63) >> 6;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v20 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v20 >= v10)
          goto LABEL_21;
        v21 = v7[v20];
        ++v12;
        if (!v21)
        {
          v12 = v20 + 1;
          if (v20 + 1 >= v10)
            goto LABEL_21;
          v21 = v7[v12];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v10)
            {
LABEL_21:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v23 = 1 << *(_BYTE *)(v4 + 32);
                if (v23 > 63)
                  bzero((void *)(v4 + 64), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v7 = -1 << v23;
                *(_QWORD *)(v4 + 16) = 0;
              }
              break;
            }
            v21 = v7[v22];
            if (!v21)
            {
              while (1)
              {
                v12 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_28;
                if (v12 >= v10)
                  goto LABEL_21;
                v21 = v7[v12];
                ++v22;
                if (v21)
                  goto LABEL_20;
              }
            }
            v12 = v22;
          }
        }
LABEL_20:
        v9 = (v21 - 1) & v21;
        v14 = __clz(__rbit64(v21)) + (v12 << 6);
      }
      v15 = *(_QWORD *)(v4 + 48) + 72 * v14;
      v16 = *(_QWORD *)(v4 + 56) + 24 * v14;
      v17 = *(_QWORD *)(v16 + 16);
      v24 = *(_OWORD *)v16;
      *(_QWORD *)v25 = *(_QWORD *)v15;
      *(_OWORD *)&v25[8] = *(_OWORD *)(v15 + 8);
      *(_OWORD *)&v25[24] = *(_OWORD *)(v15 + 24);
      *(_OWORD *)&v25[40] = *(_OWORD *)(v15 + 40);
      *(_OWORD *)&v25[56] = *(_OWORD *)(v15 + 56);
      sub_1B8CE18D8();
      sub_1B8CB671C();
      sub_1B8CE1908();
      result = sub_1B8CE16C8();
      *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v18 = v5[6] + 72 * result;
      *(_OWORD *)(v18 + 32) = *(_OWORD *)&v25[32];
      *(_OWORD *)(v18 + 48) = *(_OWORD *)&v25[48];
      *(_QWORD *)(v18 + 64) = *(_QWORD *)&v25[64];
      *(_OWORD *)v18 = *(_OWORD *)v25;
      *(_OWORD *)(v18 + 16) = *(_OWORD *)&v25[16];
      v19 = v5[7] + 24 * result;
      *(_OWORD *)v19 = v24;
      *(_QWORD *)(v19 + 16) = v17;
      ++v5[2];
    }
  }
  result = swift_release();
  *v2 = (uint64_t)v5;
  return result;
}

uint64_t sub_1B8C9CB28(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5657C8);
  v6 = sub_1B8CE17F4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_1B8CE1638();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B8C9CDF8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  id v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;

  v3 = v2;
  v5 = sub_1B8CE0F84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for WKAnimationPackageLayerState();
  v54 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655B0);
  v55 = a2;
  v14 = sub_1B8CE17F4();
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_51;
  v53 = v6;
  v47 = v2;
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 64);
  v49 = (_QWORD *)(v13 + 64);
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v48 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 64;
  result = swift_retain();
  v22 = 0;
  v23 = v13;
  v51 = v13;
  v52 = v5;
  while (1)
  {
    if (v19)
    {
      v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v26 = v25 | (v22 << 6);
      goto LABEL_22;
    }
    v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      return result;
    }
    if (v27 >= v48)
      break;
    v28 = v49;
    v29 = v49[v27];
    ++v22;
    if (!v29)
    {
      v22 = v27 + 1;
      if (v27 + 1 >= v48)
        goto LABEL_44;
      v29 = v49[v22];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v48)
        {
LABEL_44:
          swift_release();
          v3 = v47;
          if ((v55 & 1) == 0)
            goto LABEL_51;
          goto LABEL_45;
        }
        v29 = v49[v30];
        if (!v29)
        {
          while (1)
          {
            v22 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_53;
            if (v22 >= v48)
              goto LABEL_44;
            v29 = v49[v22];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v22 = v30;
      }
    }
LABEL_21:
    v19 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v23 + 48) + *(_QWORD *)(v54 + 72) * v26;
    v57 = *(_QWORD *)(v54 + 72);
    v58 = v22;
    if ((v55 & 1) != 0)
    {
      sub_1B8CA127C(v31, (uint64_t)v12);
      v32 = v23;
      v56 = *(id *)(*(_QWORD *)(v23 + 56) + 8 * v26);
    }
    else
    {
      sub_1B8CA11B0(v31, (uint64_t)v12);
      v32 = v23;
      v56 = *(id *)(*(_QWORD *)(v23 + 56) + 8 * v26);
    }
    sub_1B8CE18D8();
    sub_1B8CE14D0();
    swift_bridgeObjectRelease();
    sub_1B8CA1624((uint64_t)&v12[*(int *)(v59 + 20)], (uint64_t)v10);
    v33 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v10, 1, v5) == 1)
    {
      sub_1B8CE18F0();
    }
    else
    {
      v34 = v10;
      v35 = v50;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v50, v34, v5);
      sub_1B8CE18F0();
      sub_1B8C83740((unint64_t *)&unk_1ED567158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD86F8], MEMORY[0x1E0CD8710]);
      sub_1B8CE1470();
      v36 = v35;
      v10 = v34;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v5);
    }
    v23 = v32;
    v37 = v12[*(int *)(v59 + 24) + 8];
    if (v37 == 255)
    {
      sub_1B8CE18F0();
    }
    else
    {
      sub_1B8CE18F0();
      sub_1B8CE18E4();
      if ((v37 & 1) != 0)
        sub_1B8CE18E4();
      else
        sub_1B8CE18F0();
      v23 = v51;
    }
    v5 = v52;
    result = sub_1B8CE1908();
    v38 = -1 << *(_BYTE *)(v15 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v20 + 8 * (v39 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v20 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_52;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v20 + 8 * v40);
      }
      while (v44 == -1);
      v24 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    result = sub_1B8CA127C((uint64_t)v12, *(_QWORD *)(v15 + 48) + v57 * v24);
    *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v24) = v56;
    ++*(_QWORD *)(v15 + 16);
    v22 = v58;
  }
  swift_release();
  v3 = v47;
  v28 = v49;
  if ((v55 & 1) == 0)
    goto LABEL_51;
LABEL_45:
  v45 = 1 << *(_BYTE *)(v51 + 32);
  if (v45 >= 64)
    bzero(v28, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v45;
  *(_QWORD *)(v51 + 16) = 0;
LABEL_51:
  result = swift_release();
  *v3 = v15;
  return result;
}

uint64_t sub_1B8C9D35C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_1B8CE17F4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v3;
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_bridgeObjectRetain();
    }
    result = sub_1B8CE1638();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1B8C9D62C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;

  v3 = v2;
  v5 = sub_1B8CE0F84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
  MEMORY[0x1E0C80A78](v8);
  v55 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for WKAnimationPackageLayerState();
  v54 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655A0);
  v56 = a2;
  v13 = sub_1B8CE17F4();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_51;
  v53 = v6;
  v47 = v2;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v49 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v48 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  v22 = v12;
  v51 = v12;
  v52 = v5;
  while (1)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      return result;
    }
    if (v26 >= v48)
      break;
    v27 = v49;
    v28 = v49[v26];
    ++v21;
    if (!v28)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v48)
        goto LABEL_44;
      v28 = v49[v21];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v48)
        {
LABEL_44:
          swift_release();
          v3 = v47;
          if ((v56 & 1) == 0)
            goto LABEL_51;
          goto LABEL_45;
        }
        v28 = v49[v29];
        if (!v28)
        {
          while (1)
          {
            v21 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_53;
            if (v21 >= v48)
              goto LABEL_44;
            v28 = v49[v21];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v21 = v29;
      }
    }
LABEL_21:
    v18 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v54 + 72);
    v31 = *(_QWORD *)(v22 + 48) + v30 * v25;
    v58 = v21;
    if ((v56 & 1) != 0)
    {
      sub_1B8CA127C(v31, (uint64_t)v11);
      v32 = v22;
      v57 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v25);
    }
    else
    {
      sub_1B8CA11B0(v31, (uint64_t)v11);
      v32 = v22;
      v57 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v25);
      swift_bridgeObjectRetain();
    }
    sub_1B8CE18D8();
    sub_1B8CE14D0();
    swift_bridgeObjectRelease();
    v33 = v55;
    sub_1B8CA1624((uint64_t)&v11[*(int *)(v59 + 20)], v55);
    v34 = v53;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v33, 1, v5) == 1)
    {
      sub_1B8CE18F0();
    }
    else
    {
      v35 = v5;
      v36 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v50, v33, v35);
      sub_1B8CE18F0();
      sub_1B8C83740((unint64_t *)&unk_1ED567158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD86F8], MEMORY[0x1E0CD8710]);
      sub_1B8CE1470();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
    }
    v22 = v32;
    v37 = v11[*(int *)(v59 + 24) + 8];
    if (v37 == 255)
    {
      sub_1B8CE18F0();
    }
    else
    {
      sub_1B8CE18F0();
      sub_1B8CE18E4();
      if ((v37 & 1) != 0)
        sub_1B8CE18E4();
      else
        sub_1B8CE18F0();
      v22 = v51;
    }
    v5 = v52;
    result = sub_1B8CE1908();
    v38 = -1 << *(_BYTE *)(v14 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_52;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v19 + 8 * v40);
      }
      while (v44 == -1);
      v23 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    result = sub_1B8CA127C((uint64_t)v11, *(_QWORD *)(v14 + 48) + v30 * v23);
    v21 = v58;
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v23) = v57;
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v3 = v47;
  v27 = v49;
  if ((v56 & 1) == 0)
    goto LABEL_51;
LABEL_45:
  v45 = 1 << *(_BYTE *)(v51 + 32);
  if (v45 >= 64)
    bzero(v27, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v45;
  *(_QWORD *)(v51 + 16) = 0;
LABEL_51:
  result = swift_release();
  *v3 = v14;
  return result;
}

uint64_t sub_1B8C9DB8C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_1B8CE17F4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1B8CE18D8();
    sub_1B8CE14D0();
    result = sub_1B8CE1908();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1B8C9DE9C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  __int128 *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  char v35;
  __int128 v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4288);
  v35 = a2;
  v6 = sub_1B8CE17F4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v17 >= v33)
          goto LABEL_34;
        v18 = v34[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v33)
            goto LABEL_34;
          v18 = v34[v13];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v32;
              if ((v35 & 1) != 0)
              {
                v31 = 1 << *(_BYTE *)(v5 + 32);
                if (v31 >= 64)
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                v13 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v18 = v34[v13];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v13 = v19;
          }
        }
LABEL_21:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v21 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v16);
      if ((v35 & 1) != 0)
      {
        sub_1B8C8A344(v21, (uint64_t)v36);
      }
      else
      {
        sub_1B8C90CCC((uint64_t)v21, (uint64_t)v36);
        v22 = v20;
      }
      sub_1B8CE14B8();
      sub_1B8CE18D8();
      sub_1B8CE14D0();
      v23 = sub_1B8CE1908();
      result = swift_bridgeObjectRelease();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v20;
      result = sub_1B8C8A344(v36, *(_QWORD *)(v7 + 56) + 40 * v14);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B8C9E1C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4280);
  v37 = a2;
  v6 = sub_1B8CE17F4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35)
          goto LABEL_33;
        v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_33;
          v23 = v36[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v34;
              if ((v37 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v23 = v36[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = 8 * v21;
      v30 = *(void **)(*(_QWORD *)(v5 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        v32 = v30;
        swift_bridgeObjectRetain();
      }
      sub_1B8CE14B8();
      sub_1B8CE18D8();
      sub_1B8CE14D0();
      v14 = sub_1B8CE1908();
      result = swift_bridgeObjectRelease();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B8C9E4E0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565100);
  v38 = a2;
  v6 = sub_1B8CE17F4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_1B8CE18D8();
    sub_1B8CE14D0();
    result = sub_1B8CE1908();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1B8C9E7EC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4520);
  v6 = sub_1B8CE17F4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1B8C8ECA4((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1B8CAC1C0(v25, (uint64_t)&v38);
      sub_1B8C841D4(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1B8CE16D4();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1B8C8ECA4(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_1B8C9EB00(unint64_t result, uint64_t a2, _QWORD *a3, double a4, double a5, double a6)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  double *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a3[(result >> 6) + 8] |= 1 << result;
  v6 = a3[6] + 72 * result;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v6 + 48) = v7;
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v8;
  v9 = (double *)(a3[7] + 24 * result);
  *v9 = a4;
  v9[1] = a5;
  v9[2] = a6;
  v10 = a3[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a3[2] = v12;
  return result;
}

uint64_t sub_1B8C9EB6C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for WKAnimationPackageLayerState();
  result = sub_1B8CA127C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1B8C9EBFC(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1B8C8A344(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1B8C9EC64(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

_OWORD *sub_1B8C9ECAC(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1B8C8ECA4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_1B8C9ED24(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGRect v15;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    v7 = *a1;
    do
    {
      v8 = *(_QWORD *)(v2 + 48);
      v9 = (double *)(v8 + 72 * v4);
      if (*(_QWORD *)v9 == v7)
      {
        v10 = v9[5];
        v11 = v9[6];
        v12 = v9[7];
        v13 = v9[8];
        if (CGRectEqualToRect(*(CGRect *)(v8 + 72 * v4 + 8), *(CGRect *)(a1 + 1)))
        {
          v15.origin.x = v10;
          v15.origin.y = v11;
          v15.size.width = v12;
          v15.size.height = v13;
          if (CGRectEqualToRect(v15, *(CGRect *)(a1 + 5)))
            break;
        }
      }
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1B8C9EE24(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1B8C84230(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1B8CE1644();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1B8CE1644();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1B8C9EF34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1B8CAC1C0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCB8A30](v9, a1);
      sub_1B8C97ADC((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1B8C9EFF8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  unsigned __int8 *v37;
  int v38;
  unsigned __int8 *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  unsigned __int8 *v45;
  char *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v3 = v2;
  v52 = sub_1B8CE0F84();
  v55 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565340);
  MEMORY[0x1E0C80A78](v53);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
  v10 = MEMORY[0x1E0C80A78](v9);
  v48 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - v12;
  v54 = type metadata accessor for WKAnimationPackageLayerState();
  MEMORY[0x1E0C80A78](v54);
  v16 = (unsigned __int8 *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v2 + 64;
  v18 = -1 << *(_BYTE *)(v2 + 32);
  v19 = a2 & ~v18;
  if (((*(_QWORD *)(v2 + 64 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    v20 = ~v18;
    v21 = *(_QWORD *)(v14 + 72);
    v45 = a1;
    v50 = ~v18;
    v51 = v2 + 64;
    v49 = v21;
    v22 = v52;
    do
    {
      sub_1B8CA11B0(*(_QWORD *)(v3 + 48) + v21 * v19, (uint64_t)v16);
      if (*v16 != *a1)
        goto LABEL_5;
      v24 = *(int *)(v54 + 20);
      v25 = (uint64_t)&v16[v24];
      sub_1B8CA1624((uint64_t)&a1[v24], (uint64_t)v13);
      v26 = (uint64_t)&v8[*(int *)(v53 + 48)];
      sub_1B8CA1624(v25, (uint64_t)v8);
      sub_1B8CA1624((uint64_t)v13, v26);
      v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
      if (v27((uint64_t)v8, 1, v22) == 1)
      {
        sub_1B8C88430((uint64_t)v13, &qword_1ED565328);
        v28 = v27(v26, 1, v22);
        v21 = v49;
        if (v28 != 1)
          goto LABEL_4;
        sub_1B8C88430((uint64_t)v8, &qword_1ED565328);
        v20 = v50;
        v17 = v51;
      }
      else
      {
        v29 = (uint64_t)v13;
        v30 = v48;
        sub_1B8CA1624((uint64_t)v8, v48);
        if (v27(v26, 1, v22) == 1)
        {
          sub_1B8C88430(v29, &qword_1ED565328);
          v23 = v30;
          v13 = (char *)v29;
          (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v23, v22);
          v21 = v49;
LABEL_4:
          sub_1B8C88430((uint64_t)v8, (uint64_t *)&unk_1ED565340);
          v20 = v50;
          v17 = v51;
          goto LABEL_5;
        }
        v31 = v55;
        v32 = v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v46, v26, v22);
        sub_1B8C83740(&qword_1ED567168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD86F8], MEMORY[0x1E0CD8718]);
        v33 = v30;
        v47 = sub_1B8CE1488();
        v34 = *(void (**)(char *, uint64_t))(v31 + 8);
        v35 = v32;
        a1 = v45;
        v34(v35, v22);
        v13 = (char *)v29;
        sub_1B8C88430(v29, &qword_1ED565328);
        v34((char *)v33, v22);
        sub_1B8C88430((uint64_t)v8, &qword_1ED565328);
        v20 = v50;
        v17 = v51;
        v21 = v49;
        if ((v47 & 1) == 0)
          goto LABEL_5;
      }
      v36 = *(int *)(v54 + 24);
      v37 = &v16[v36];
      v38 = v16[v36 + 8];
      v39 = &a1[v36];
      v40 = a1[v36 + 8];
      if (v38 == 255)
      {
        if (v40 == 255)
          goto LABEL_22;
      }
      else if (v40 != 255)
      {
        v41 = *(_QWORD *)v37;
        v42 = *(_QWORD *)v39;
        if ((v38 & 1) != 0)
        {
          if ((v40 & 1) != 0 && v41 == v42)
          {
LABEL_22:
            sub_1B8CA11F4((uint64_t)v16);
            return v19;
          }
        }
        else if ((v40 & 1) == 0 && ((((v41 & 1) == 0) ^ v42) & 1) != 0)
        {
          goto LABEL_22;
        }
      }
LABEL_5:
      sub_1B8CA11F4((uint64_t)v16);
      v19 = (v19 + 1) & v20;
    }
    while (((*(_QWORD *)(v17 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
  }
  return v19;
}

unint64_t sub_1B8C9F408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B8CE1890() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B8CE1890() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1B8C9F4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1B8CE14B8();
    v8 = v7;
    if (v6 == sub_1B8CE14B8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1B8CE1890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1B8CE14B8();
          v15 = v14;
          if (v13 == sub_1B8CE14B8() && v15 == v16)
            break;
          v18 = sub_1B8CE1890();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

void *sub_1B8C9F65C()
{
  return sub_1B8C9FBF8((uint64_t *)&unk_1ED5655D0);
}

void *sub_1B8C9F668()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4290);
  v2 = *v0;
  v3 = sub_1B8CE17E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v31 = __clz(__rbit64(v29));
    v12 = (v29 - 1) & v29;
    v15 = v31 + (v9 << 6);
LABEL_12:
    v16 = 72 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 72 * v15;
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    v22 = *(_OWORD *)(v17 + 8);
    v23 = *(_OWORD *)(v17 + 24);
    v24 = *(_OWORD *)(v17 + 40);
    v25 = *(_OWORD *)(v17 + 56);
    v26 = *(_OWORD *)v19;
    *(_QWORD *)v21 = *(_QWORD *)v17;
    *(_OWORD *)(v21 + 8) = v22;
    *(_OWORD *)(v21 + 24) = v23;
    *(_OWORD *)(v21 + 40) = v24;
    *(_OWORD *)(v21 + 56) = v25;
    v27 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v27 = v26;
    *(_QWORD *)(v27 + 16) = v20;
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1B8C9F838()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5657C8);
  v2 = *v0;
  v3 = sub_1B8CE17E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1B8C9F9DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for WKAnimationPackageLayerState();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655B0);
  v5 = *v0;
  v6 = sub_1B8CE17E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (id)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (id)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_1B8CA11B0(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4);
    v20 = 8 * v18;
    v21 = *(void **)(*(_QWORD *)(v5 + 56) + v20);
    sub_1B8CA127C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (id)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B8C9FBF8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1B8CE17E8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B8C9FD98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for WKAnimationPackageLayerState();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655A0);
  v5 = *v0;
  v6 = sub_1B8CE17E8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_1B8CA11B0(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
    sub_1B8CA127C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B8C9FFB8()
{
  return sub_1B8C9FFC4(&qword_1ED564FB0);
}

void *sub_1B8C9FFC4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1B8CE17E8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1B8CA0170()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4288);
  v2 = *v0;
  v3 = sub_1B8CE17E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    sub_1B8C90CCC(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1B8C8A344(v22, *(_QWORD *)(v4 + 56) + v18);
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B8CA0338()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4280);
  v2 = *v0;
  v3 = sub_1B8CE17E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1B8CA04E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565100);
  v2 = *v0;
  v3 = sub_1B8CE17E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1B8CA0690()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4520);
  v2 = *v0;
  v3 = sub_1B8CE17E8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1B8CAC1C0(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1B8C841D4(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1B8C8ECA4(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B8CA0874(uint64_t *a1, char a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  double *v21;
  char v22;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1B8C9C644(a1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (double *)(v20[7] + 24 * v14);
        *v21 = a3;
        v21[1] = a4;
        v21[2] = a5;
        return result;
      }
      return sub_1B8C9EB00(v14, (uint64_t)a1, v20, a3, a4, a5);
    }
    if (v19 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_1B8C9F668();
      goto LABEL_7;
    }
    sub_1B8C9C870(result, a2 & 1);
    result = sub_1B8C9C644(a1);
    if ((v18 & 1) == (v22 & 1))
    {
      v14 = result;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
      return sub_1B8C9EB00(v14, (uint64_t)a1, v20, a3, a4, a5);
    }
  }
  result = sub_1B8CE189C();
  __break(1u);
  return result;
}

void sub_1B8CA09A0(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1B8C9C69C((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1B8C9F838();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1B8C9CB28(v12, a3 & 1);
  v17 = sub_1B8C9C69C((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1B8C84230(0, &qword_1ED5657B0);
  sub_1B8CE189C();
  __break(1u);
}

void sub_1B8CA0B00(uint64_t a1, unsigned __int8 *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for WKAnimationPackageLayerState();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1B8C9C718(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];

      *(_QWORD *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1B8C9F9DC();
    goto LABEL_7;
  }
  sub_1B8C9CDF8(v16, a3 & 1);
  v21 = sub_1B8C9C718(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_14:
    sub_1B8CE189C();
    __break(1u);
    return;
  }
  v13 = v21;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_1B8CA11B0((uint64_t)a2, (uint64_t)v10);
  sub_1B8C9EB6C(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_1B8CA0C54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1B8C9C770(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1B8C9FFC4(&qword_1ED564FB0);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1B8C9DB8C(v15, a4 & 1, &qword_1ED564FB0);
  v21 = sub_1B8C9C770(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1B8CE189C();
  __break(1u);
  return result;
}

id sub_1B8CA0DC0(__int128 *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1B8C9C7D8((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7] + 40 * v9;
        __swift_destroy_boxed_opaque_existential_1(v16);
        return (id)sub_1B8C8A344(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1B8CA0170();
      goto LABEL_7;
    }
    sub_1B8C9DE9C(v12, a3 & 1);
    v18 = sub_1B8C9C7D8((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1B8C9EBFC(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for WKWallpaperAppearance(0);
  result = (id)sub_1B8CE189C();
  __break(1u);
  return result;
}

void sub_1B8CA0EE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1B8C9C770(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1B8CA04E0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1B8C9E4E0(v15, a4 & 1);
  v20 = sub_1B8C9C770(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1B8CE189C();
  __break(1u);
}

_OWORD *sub_1B8CA1040(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1B8C9C6E8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_1B8C8ECA4(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1B8CA0690();
      goto LABEL_7;
    }
    sub_1B8C9E7EC(v13, a3 & 1);
    v19 = sub_1B8C9C6E8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1B8CAC1C0(a2, (uint64_t)v21);
      return sub_1B8C9ECAC(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1B8CE189C();
  __break(1u);
  return result;
}

uint64_t sub_1B8CA1178(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B8CA12DC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1B8CA1194(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1B8CA14BC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1B8CA11B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKAnimationPackageLayerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CA11F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WKAnimationPackageLayerState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B8CA1230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5650D0;
  if (!qword_1ED5650D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5650C8);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5650D0);
  }
  return result;
}

uint64_t sub_1B8CA127C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKAnimationPackageLayerState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CA12C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B8CA166C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1B8CA12DC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5655E0);
  v10 = *(_QWORD *)(type metadata accessor for WKAnimationPackageLayerState() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for WKAnimationPackageLayerState() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1B8CE1818();
  __break(1u);
  return result;
}

uint64_t sub_1B8CA14BC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565118);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B8CE1818();
  __break(1u);
  return result;
}

uint64_t sub_1B8CA1624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CA166C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565108);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED564FF0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B8CE1818();
  __break(1u);
  return result;
}

uint64_t sub_1B8CA17F4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)(a1 + 16);
  v3 = (uint64_t)objc_msgSend(v2, sel_numberOfWallpapers);
  result = (uint64_t)objc_msgSend(v2, sel_numberOfWallpapers);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    result = (uint64_t)objc_msgSend(v2, sel_numberOfWallpapers);
    if ((v3 & 0x8000000000000000) == 0 && result >= v3)
    {
      if (v3)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565838);
        v5 = (_QWORD *)swift_allocObject();
        v6 = _swift_stdlib_malloc_size(v5);
        v5[2] = v3;
        v5[3] = 2 * ((uint64_t)(v6 - 32) / 40);
        swift_retain();
        v7 = sub_1B8CA1BA4(&v8, (uint64_t)(v5 + 4), v3, a1);
        swift_release();
        if (v7 == v3)
          return (uint64_t)v5;
        __break(1u);
      }
      return MEMORY[0x1E0DEE9D8];
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8CA18F8(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;

  v2 = (int64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), sel_numberOfWallpaperCollections);
  result = (uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), sel_numberOfWallpaperCollections);
  if ((result & 0x8000000000000000) == 0)
  {
    result = (uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), sel_numberOfWallpaperCollections);
    if (v2 < 0 || result < v2)
      goto LABEL_18;
    if (!v2)
      return MEMORY[0x1E0DEE9D8];
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED565848);
    v4 = (_QWORD *)swift_allocObject();
    v5 = _swift_stdlib_malloc_size(v4);
    v6 = v5 - 32;
    if (v5 < 32)
      v6 = v5 - 25;
    v4[2] = v2;
    v4[3] = 2 * (v6 >> 3);
    swift_retain();
    if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), sel_numberOfWallpaperCollections))
    {
      v7 = 0;
      v8 = (char *)(v2 - 1);
      while (1)
      {
        v9 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), sel_wallpaperCollectionAtIndex_, v7);
        type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
        v10 = swift_allocObject();
        *(_QWORD *)(v10 + 16) = v9;
        result = (uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), sel_numberOfWallpaperCollections);
        if (v7 >= result)
          break;
        v4[v7 + 4] = v10;
        if (v8 == (char *)v7)
          goto LABEL_13;
        if ((id)++v7 == objc_msgSend(*(id *)(*(_QWORD *)(a1 + 16) + 16), sel_numberOfWallpaperCollections))
          goto LABEL_12;
      }
      __break(1u);
      goto LABEL_17;
    }
LABEL_12:
    swift_release();
    __break(1u);
LABEL_13:
    swift_release();
    return (uint64_t)v4;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

size_t sub_1B8CA1A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5655E0);
  v3 = *(_QWORD *)(type metadata accessor for WKAnimationPackageLayerState() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_1B8CA1D98(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1B8CAC1B8();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8CA1BA4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  __int128 v16[2];
  uint64_t v17;
  __int128 v18[2];
  __int128 v19[3];

  if (!a2)
  {
    v6 = 0;
    goto LABEL_11;
  }
  v6 = a3;
  if (!a3)
  {
LABEL_11:
    *a1 = a4;
    a1[1] = v6;
    return v6;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v7 = a2;
    v8 = *(void **)(a4 + 16);
    v9 = 0;
    if (objc_msgSend(v8, sel_numberOfWallpapers))
    {
      do
      {
        objc_msgSend(v8, sel_wallpaperBundleAtIndex_, v9);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5670D0);
        if (!swift_dynamicCast())
          goto LABEL_14;
        sub_1B8C8A344(v16, (uint64_t)v13);
        v10 = v14;
        v11 = v15;
        __swift_project_boxed_opaque_existential_1(v13, v14);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v16, v10, v11);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
        sub_1B8C8A344(v16, (uint64_t)v18);
        if (v9 >= (uint64_t)objc_msgSend(*(id *)(a4 + 16), sel_numberOfWallpapers))
        {
          __break(1u);
          goto LABEL_13;
        }
        sub_1B8C8A344(v18, (uint64_t)v19);
        sub_1B8C8A344(v19, v7);
        if (v6 - 1 == v9)
          goto LABEL_11;
        v7 += 40;
        v8 = *(void **)(a4 + 16);
      }
      while ((id)++v9 != objc_msgSend(v8, sel_numberOfWallpapers));
    }
    v6 = v9;
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
LABEL_14:
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_1B8C88430((uint64_t)v16, (uint64_t *)&unk_1EF1D4270);
  result = sub_1B8CE17D0();
  __break(1u);
  return result;
}

uint64_t sub_1B8CA1D98(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for WKAnimationPackageLayerState();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v30 - v14;
  v35 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    *a1 = v35;
    a1[1] = v17;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 32);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_1B8CA11B0(*(_QWORD *)(v35 + 48) + v29 * v25, (uint64_t)v12);
    sub_1B8CA127C((uint64_t)v12, (uint64_t)v15);
    result = sub_1B8CA127C((uint64_t)v15, a2);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v17 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v17 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v17 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v17 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v17 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v17 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1B8CA2020(int a1, int a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  unsigned __int8 *v76;
  uint64_t v77;
  unsigned __int8 *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  NSObject *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  double v134;
  double v135;
  double v136;
  uint64_t v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  void *v143;
  char v144;
  NSObject *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  float v151;
  unint64_t v152;
  BOOL v153;
  int64_t v154;
  unint64_t v155;
  int64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  char v174;
  id v175;
  id v176;
  void *v177;
  id v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  NSObject *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint8_t *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint8_t *v205;
  uint64_t v206;
  id v207;
  uint64_t v208;
  char *v209;
  uint64_t ObjectType;
  unsigned __int8 v211;
  NSObject *v212;
  uint64_t v213;
  uint64_t v214;
  double v215;
  id v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  id v220;
  void *v221;
  void *v222;
  void *v223;
  id v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t inited;
  NSObject *v238;
  NSObject *v239;
  uint8_t *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  NSObject *v253;
  uint8_t *v254;
  uint64_t v255;
  uint64_t v256;
  _BYTE *v257;
  uint64_t v258;
  void *v259;
  unsigned __int8 v260;
  char *v261;
  uint64_t v262;
  double v263;
  id v264;
  void *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  NSObject *v277;
  uint8_t *v278;
  uint64_t v279;
  char v280;
  double v281;
  _BYTE *v282;
  uint64_t v283;
  uint64_t v284;
  _BYTE *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint8_t *v296;
  uint64_t v297;
  os_log_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  void (*v304)(char *, uint64_t);
  NSObject *v305;
  uint64_t v306;
  uint8_t *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint8_t *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint8_t *v327;
  uint8_t *v328;
  os_log_t v329;
  uint64_t v330;
  os_log_t v331;
  void (*v332)(char *, uint64_t);
  uint64_t v333;
  uint64_t v334;
  char v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  NSObject *v340;
  NSObject *v341;
  uint64_t v342;
  uint64_t v343;
  uint8_t *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  os_log_t v348;
  os_log_t v349;
  _BYTE *v350;
  uint8_t *v351;
  uint8_t *v352;
  uint64_t v353;
  _BYTE *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  _BYTE *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  NSObject *v368;
  uint8_t *v369;
  uint64_t v370;
  void *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  NSObject *v380;
  uint8_t *v381;
  uint64_t v382;
  uint64_t v383;
  NSObject *v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  NSObject *v388;
  NSObject *v389;
  uint64_t v390;
  uint64_t v391;
  _BYTE *v392;
  uint8_t *v393;
  uint64_t v394;
  NSObject *v395;
  uint64_t v396;
  void (*v397)(char *, uint64_t);
  char *v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  _QWORD *v407;
  uint64_t v408;
  uint64_t v409;
  uint8_t *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  NSObject *v418;
  uint64_t v419;
  os_log_t v420;
  uint8_t *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  NSObject *v439;
  uint64_t v440;
  uint64_t v441;
  uint8_t *v442;
  uint8_t *v443;
  uint64_t v444;
  os_log_t v445;
  uint8_t *v446;
  uint8_t *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  void *v459;
  id v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  NSObject *v464;
  uint64_t v465;
  uint64_t v466;
  NSObject *v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint8_t *v478;
  uint64_t v479;
  uint8_t *v480;
  uint64_t v481;
  uint64_t v482;
  uint8_t *v483;
  void (*v484)(char *, uint64_t);
  uint64_t *v485;
  char *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  void *v492;
  id v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint8_t *v500;
  uint64_t v501;
  os_log_t v502;
  uint64_t v503;
  uint8_t *v504;
  uint64_t v505;
  uint64_t v506;
  _QWORD *v507;
  uint64_t v508;
  void (*v509)(char *, uint64_t);
  NSObject *v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  NSObject *v523;
  uint64_t v524;
  uint8_t *v525;
  uint64_t v526;
  uint8_t *v527;
  uint8_t *v528;
  uint64_t v529;
  uint64_t v530;
  uint8_t *v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint8_t *v536;
  uint8_t *v537;
  uint64_t v538;
  uint64_t v539;
  _BYTE *v540;
  int v541;
  os_log_t v542;
  uint64_t v543;
  uint64_t v544;
  __int128 v545;
  unsigned int v546;
  uint64_t v547;
  uint64_t v548;
  uint8_t *v549;
  NSObject *v550;
  _BYTE *v551;
  uint64_t v552;
  uint64_t v553;
  __int128 v554;
  uint64_t v555;
  uint8_t *v556;
  uint64_t v557;
  uint8_t *v558;
  __int128 v559;
  uint64_t v560;
  __int128 v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  unsigned __int8 *v567;
  uint8_t *v568;
  uint64_t v569;
  int64_t v570;
  uint64_t v571;
  uint64_t v572;
  _BYTE *v573;
  os_log_t v574;
  os_log_t v575;
  uint64_t v576;
  uint64_t v577;
  unint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  char *v583;
  char *v584;
  unsigned __int8 *v585;
  char *v586;
  char *v587;
  unsigned __int8 *v588;
  char *v589;
  char *v590;
  char *v591;
  char *v592;
  uint64_t v593;
  NSObject *v594;
  uint64_t v595;
  char *v596;
  unsigned __int8 *v597;
  unsigned __int8 *v598;
  unint64_t v599;
  uint64_t v600;
  NSObject *v601;
  _BYTE *v602;
  int v603;
  int v604;
  uint64_t v605;
  uint8_t *v606;
  id v607;
  __int128 v608;
  int v609;
  uint64_t v610;
  void (*v611)(char *, uint64_t);
  uint64_t v612;
  void (*v613)(char *, uint64_t, uint64_t);
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  char *v618;
  char *v619;
  char *v620;
  char *v621;
  uint64_t v622;
  char *v623;
  char *v624;
  uint64_t v625;
  void *v626;
  __int128 v627;
  uint64_t v628;
  __int128 v629;
  uint64_t v630;
  NSObject *v631;

  v4 = v3;
  v604 = a2;
  v609 = a1;
  v622 = sub_1B8CE0EDC();
  v593 = *(_QWORD *)(v622 - 8);
  v6 = MEMORY[0x1E0C80A78](v622);
  v618 = (char *)&v533 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v601 = ((char *)&v533 - v9);
  v10 = MEMORY[0x1E0C80A78](v8);
  v596 = (char *)&v533 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v590 = (char *)&v533 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v591 = (char *)&v533 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v587 = (char *)&v533 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v586 = (char *)&v533 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v584 = (char *)&v533 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v583 = (char *)&v533 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v594 = ((char *)&v533 - v25);
  v26 = MEMORY[0x1E0C80A78](v24);
  v592 = (char *)&v533 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v620 = (char *)&v533 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v619 = (char *)&v533 - v31;
  MEMORY[0x1E0C80A78](v30);
  v621 = (char *)&v533 - v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5652C0);
  v34 = MEMORY[0x1E0C80A78](v33);
  v623 = (char *)&v533 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x1E0C80A78](v34);
  v624 = (char *)&v533 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v533 - v39;
  v41 = MEMORY[0x1E0C80A78](v38);
  v43 = (char *)&v533 - v42;
  MEMORY[0x1E0C80A78](v41);
  v45 = (char *)&v533 - v44;
  v46 = type metadata accessor for WKAnimationPackageLayerState();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = MEMORY[0x1E0C80A78](v46);
  v585 = (unsigned __int8 *)&v533 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x1E0C80A78](v48);
  v588 = (unsigned __int8 *)&v533 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v598 = (unsigned __int8 *)&v533 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v597 = (unsigned __int8 *)&v533 - v55;
  MEMORY[0x1E0C80A78](v54);
  v57 = (unsigned __int8 *)&v533 - v56;
  v617 = v3 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot;
  v58 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                  + 72);
  v59 = v3 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_animationMapping;
  swift_beginAccess();
  v625 = v59;
  v60 = swift_bridgeObjectRetain();
  v61 = sub_1B8CA1A8C(v60);
  swift_bridgeObjectRelease();
  sub_1B8C9B508(1, v58, v61, (uint64_t)v45);
  v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  if (v62(v45, 1, v46) == 1)
  {
    swift_release();
    v63 = (uint64_t)v45;
LABEL_8:
    sub_1B8C88430(v63, &qword_1ED5652C0);
    return;
  }
  sub_1B8CA127C((uint64_t)v45, (uint64_t)v57);
  v64 = v4;
  sub_1B8C9B508(2, v58, v61, (uint64_t)v43);
  if (v62(v43, 1, v46) == 1)
  {
    sub_1B8CA11F4((uint64_t)v57);
    swift_release();
    v63 = (uint64_t)v43;
    goto LABEL_8;
  }
  v65 = v58;
  v66 = v597;
  sub_1B8CA127C((uint64_t)v43, (uint64_t)v597);
  sub_1B8C9B508(0, v58, v61, (uint64_t)v40);
  if (v62(v40, 1, v46) == 1)
  {
    swift_release();
    sub_1B8CA11F4((uint64_t)v66);
    v67 = (uint64_t)v57;
LABEL_7:
    sub_1B8CA11F4(v67);
    v63 = (uint64_t)v40;
    goto LABEL_8;
  }
  sub_1B8CA127C((uint64_t)v40, (uint64_t)v598);
  v68 = (uint64_t *)v625;
  v69 = *(_QWORD *)v625;
  swift_bridgeObjectRetain();
  v70 = sub_1B8C98BC0(v57, v69);
  swift_bridgeObjectRelease();
  v580 = v70;
  if (!v70)
    goto LABEL_16;
  v71 = *v68;
  swift_bridgeObjectRetain();
  v72 = sub_1B8C98BC0(v66, v71);
  swift_bridgeObjectRelease();
  v581 = v72;
  if (!v72)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    swift_release();
    sub_1B8CA11F4((uint64_t)v598);
    sub_1B8CA11F4((uint64_t)v66);
    sub_1B8CA11F4((uint64_t)v57);
    return;
  }
  v73 = *v68;
  swift_bridgeObjectRetain();
  v74 = sub_1B8C98BC0(v598, v73);
  swift_bridgeObjectRelease();
  v572 = v74;
  if (!v74)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v566 = v65;
  v567 = v57;
  v75 = OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_lastOrientation;
  v40 = v624;
  sub_1B8C9B508(1, *(_QWORD *)(v64 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_lastOrientation), v61, (uint64_t)v624);
  if (v62(v40, 1, v46) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_19:
    sub_1B8CA11F4((uint64_t)v598);
    sub_1B8CA11F4((uint64_t)v66);
    v67 = (uint64_t)v567;
    goto LABEL_7;
  }
  v76 = v588;
  sub_1B8CA127C((uint64_t)v40, (uint64_t)v588);
  v77 = *(uint64_t *)((char *)&v75->isa + v64);
  v40 = v623;
  v610 = v64;
  sub_1B8C9B508(0, v77, v61, (uint64_t)v623);
  swift_release();
  if (v62(v40, 1, v46) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B8CA11F4((uint64_t)v76);
    goto LABEL_19;
  }
  v78 = v585;
  sub_1B8CA127C((uint64_t)v40, (uint64_t)v585);
  v79 = (uint64_t *)v625;
  v80 = *(_QWORD *)v625;
  swift_bridgeObjectRetain();
  v81 = sub_1B8C98BC0(v76, v80);
  swift_bridgeObjectRelease();
  if (!v81)
    goto LABEL_25;
  v82 = *v79;
  swift_bridgeObjectRetain();
  v83 = sub_1B8C98BC0(v78, v82);
  swift_bridgeObjectRelease();
  if (!v83)
  {
    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B8CA11F4((uint64_t)v78);
    sub_1B8CA11F4((uint64_t)v76);
    sub_1B8CA11F4((uint64_t)v598);
    v128 = (uint64_t)v66;
LABEL_184:
    sub_1B8CA11F4(v128);
    sub_1B8CA11F4((uint64_t)v567);
    return;
  }
  v574 = v75;
  v577 = v83;
  v578 = v81;
  v84 = sub_1B8CC0B70();
  v85 = *(void (**)(char *, uint64_t, uint64_t))(v593 + 16);
  v614 = v84;
  v613 = v85;
  ((void (*)(char *))v85)(v621);
  v86 = swift_allocObject();
  *(double *)(v86 + 16) = a3;
  v87 = swift_allocObject();
  v603 = v609 & 1;
  *(_BYTE *)(v87 + 16) = v609 & 1;
  v88 = swift_allocObject();
  *(_BYTE *)(v88 + 16) = v604 & 1;
  v89 = swift_allocObject();
  *(_QWORD *)(v89 + 16) = v566;
  v90 = v610;
  swift_retain_n();
  v579 = sub_1B8CE0EC4();
  LODWORD(v600) = sub_1B8CE15A8();
  v606 = (uint8_t *)swift_allocObject();
  v606[16] = 0;
  v605 = swift_allocObject();
  *(_BYTE *)(v605 + 16) = 8;
  v91 = swift_allocObject();
  *(_QWORD *)(v91 + 16) = sub_1B8CAB7F8;
  *(_QWORD *)(v91 + 24) = v86;
  v92 = (_QWORD *)swift_allocObject();
  v607 = v92;
  v92[2] = sub_1B8CAB88C;
  v92[3] = v91;
  *(_QWORD *)&v608 = swift_allocObject();
  *(_BYTE *)(v608 + 16) = 0;
  v623 = (char *)swift_allocObject();
  v623[16] = 4;
  v93 = swift_allocObject();
  *(_QWORD *)(v93 + 16) = sub_1B8CAB81C;
  *(_QWORD *)(v93 + 24) = v87;
  v94 = swift_allocObject();
  *(_QWORD *)(v94 + 16) = sub_1B8CAB8BC;
  *(_QWORD *)(v94 + 24) = v93;
  v95 = swift_allocObject();
  *(_QWORD *)(v95 + 16) = sub_1B8CAB88C;
  *(_QWORD *)(v95 + 24) = v94;
  v96 = swift_allocObject();
  v624 = (char *)v96;
  *(_QWORD *)(v96 + 16) = sub_1B8CAB8C4;
  *(_QWORD *)(v96 + 24) = v95;
  v625 = swift_allocObject();
  *(_BYTE *)(v625 + 16) = 0;
  v616 = swift_allocObject();
  *(_BYTE *)(v616 + 16) = 4;
  v97 = swift_allocObject();
  *(_QWORD *)(v97 + 16) = sub_1B8CAD1CC;
  *(_QWORD *)(v97 + 24) = v88;
  v98 = swift_allocObject();
  *(_QWORD *)(v98 + 16) = sub_1B8CAD1A0;
  *(_QWORD *)(v98 + 24) = v97;
  v99 = swift_allocObject();
  *(_QWORD *)(v99 + 16) = sub_1B8CAD1A4;
  *(_QWORD *)(v99 + 24) = v98;
  v100 = swift_allocObject();
  v100[2].isa = (Class)sub_1B8CAD41C;
  v100[3].isa = (Class)v99;
  v101 = swift_allocObject();
  *(_BYTE *)(v101 + 16) = 32;
  v102 = v101;
  v103 = swift_allocObject();
  *(_BYTE *)(v103 + 16) = 8;
  v104 = v103;
  v595 = v103;
  v105 = swift_allocObject();
  *(_QWORD *)(v105 + 16) = sub_1B8CAB834;
  *(_QWORD *)(v105 + 24) = v90;
  v106 = swift_allocObject();
  v589 = (char *)v106;
  *(_QWORD *)(v106 + 16) = sub_1B8CAB88C;
  *(_QWORD *)(v106 + 24) = v105;
  v582 = swift_allocObject();
  *(_BYTE *)(v582 + 16) = 32;
  v573 = (_BYTE *)swift_allocObject();
  v573[16] = 8;
  v107 = swift_allocObject();
  *(_QWORD *)(v107 + 16) = sub_1B8CAD408;
  *(_QWORD *)(v107 + 24) = v89;
  v108 = (void (*)(char *, uint64_t))swift_allocObject();
  v611 = v108;
  *((_QWORD *)v108 + 2) = sub_1B8CAD1A4;
  *((_QWORD *)v108 + 3) = v107;
  v602 = (_BYTE *)swift_allocObject();
  v602[16] = 32;
  v615 = swift_allocObject();
  *(_BYTE *)(v615 + 16) = 8;
  v109 = swift_allocObject();
  *(_QWORD *)(v109 + 16) = sub_1B8CAB85C;
  *(_QWORD *)(v109 + 24) = v90;
  v110 = swift_allocObject();
  v599 = v110;
  *(_QWORD *)(v110 + 16) = sub_1B8CAD1A4;
  *(_QWORD *)(v110 + 24) = v109;
  v612 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED564F98);
  v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_1B8CE6BE0;
  *(_QWORD *)(v111 + 32) = sub_1B8CAB874;
  *(_QWORD *)(v111 + 40) = v606;
  *(_QWORD *)(v111 + 48) = sub_1B8CAD1C8;
  *(_QWORD *)(v111 + 56) = v605;
  *(_QWORD *)(v111 + 64) = sub_1B8CAB894;
  *(_QWORD *)(v111 + 72) = v607;
  *(_QWORD *)(v111 + 80) = sub_1B8CAD1C8;
  *(_QWORD *)(v111 + 88) = v608;
  *(_QWORD *)(v111 + 96) = sub_1B8CAD1C8;
  *(_QWORD *)(v111 + 104) = v623;
  *(_QWORD *)(v111 + 112) = sub_1B8CAB8CC;
  *(_QWORD *)(v111 + 120) = v624;
  *(_QWORD *)(v111 + 128) = sub_1B8CAD1C8;
  *(_QWORD *)(v111 + 136) = v625;
  *(_QWORD *)(v111 + 144) = sub_1B8CAD1C8;
  *(_QWORD *)(v111 + 152) = v616;
  *(_QWORD *)(v111 + 160) = sub_1B8CAD1B8;
  *(_QWORD *)(v111 + 168) = v100;
  *(_QWORD *)(v111 + 176) = sub_1B8CAD1C8;
  v112 = v102;
  *(_QWORD *)(v111 + 184) = v102;
  *(_QWORD *)(v111 + 192) = sub_1B8CAD1C8;
  *(_QWORD *)(v111 + 200) = v104;
  *(_QWORD *)(v111 + 208) = sub_1B8CAB914;
  *(_QWORD *)(v111 + 216) = v589;
  *(_QWORD *)(v111 + 224) = sub_1B8CAD1C8;
  *(_QWORD *)(v111 + 232) = v582;
  *(_QWORD *)(v111 + 240) = sub_1B8CAD1C8;
  v113 = v573;
  *(_QWORD *)(v111 + 248) = v573;
  *(_QWORD *)(v111 + 256) = sub_1B8CAD1BC;
  *(_QWORD *)(v111 + 264) = v611;
  *(_QWORD *)(v111 + 272) = sub_1B8CAD1C8;
  *(_QWORD *)(v111 + 280) = v602;
  *(_QWORD *)(v111 + 288) = sub_1B8CAD1C8;
  *(_QWORD *)(v111 + 296) = v615;
  *(_QWORD *)(v111 + 304) = sub_1B8CAD1BC;
  *(_QWORD *)(v111 + 312) = v599;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v575 = v100;
  swift_retain();
  v576 = v112;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v114 = v602;
  swift_retain();
  swift_retain();
  swift_retain();
  v115 = v579;
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v115, (os_log_type_t)v600))
  {
    v116 = v605;
    v117 = v616;
    v118 = (uint64_t)v623;
    v119 = (uint8_t *)sub_1B8CC4638();
    v120 = swift_slowAlloc();
    v631 = 0;
    v571 = v120;
    v630 = v120;
    *(_WORD *)v119 = 1538;
    *(_QWORD *)&v627 = v119 + 2;
    *(_QWORD *)&v629 = sub_1B8CAB874;
    *((_QWORD *)&v629 + 1) = v606;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v116;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    v606 = v119;
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAB894;
    *((_QWORD *)&v629 + 1) = v607;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v608;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v118;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAB8CC;
    *((_QWORD *)&v629 + 1) = v624;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    v121 = v625;
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v121;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v117;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1B8;
    *((_QWORD *)&v629 + 1) = v575;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    v122 = v576;
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v122;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    v123 = v595;
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v123;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAB914;
    *((_QWORD *)&v629 + 1) = v589;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    v124 = v582;
    v125 = v579;
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v124;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v113;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    v126 = v615;
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1BC;
    *((_QWORD *)&v629 + 1) = v611;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v114;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1C8;
    *((_QWORD *)&v629 + 1) = v126;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    swift_release();
    *(_QWORD *)&v629 = sub_1B8CAD1BC;
    *((_QWORD *)&v629 + 1) = v599;
    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
    v615 = 0;
    swift_release();
    _os_log_impl(&dword_1B8C64000, v125, (os_log_type_t)v600, "Ticking animation. Rotation angle: %f. Display Link Driven Tick: %{BOOL}d. Orientation Has Changed: %{BOOL}d. Last Orientation: %s. Current Orientation: %s. Poster Environment Snapshot: %s", v606, 0x36u);
    v127 = v571;
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v127, -1, -1);
    sub_1B8CC4684();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v129 = v622;
  v611 = *(void (**)(char *, uint64_t))(v593 + 8);
  v611(v621, v622);
  v615 = 0;
  v130 = v618;
  v131 = v620;
  v132 = v619;
  v133 = v610;
  v134 = sub_1B8CCF6C0(*(uint64_t *)((char *)&v574->isa + v610));
  v135 = sub_1B8CCF6C0(v566);
  sub_1B8CE1284();
  v137 = v617;
  if (vabdd_f64(v134, v136) > 180.0)
  {
    if (v134 == 0.0)
    {
      v134 = 360.0;
    }
    else if (v134 == 360.0)
    {
      v134 = 0.0;
    }
  }
  sub_1B8CE1284();
  if (vabdd_f64(v135, v138) > 180.0)
  {
    if (v135 == 0.0)
    {
      v135 = 360.0;
    }
    else if (v135 == 360.0)
    {
      v135 = 0.0;
    }
  }
  v139 = 0.0;
  if (v135 != v134)
  {
    sub_1B8CE1284();
    v139 = (v140 - v134) / (v135 - v134);
  }
  v141 = *(double *)(v137 + 16);
  v142 = *(double *)(v137 + 32);
  v143 = (void *)objc_opt_self();
  objc_msgSend(v143, sel_begin);
  v546 = objc_msgSend(v143, sel_disableActions);
  LODWORD(v616) = v609 ^ 1 | v604;
  if ((v616 & 1) != 0)
  {
    objc_msgSend(v143, sel_setAnimationTimingFunction_, *(_QWORD *)(v137 + 56));
    objc_msgSend(v143, sel_setAnimationDuration_, *(double *)(v137 + 48));
  }
  if ((*(_BYTE *)(v137 + 40) & 1) != 0)
    v144 = 1;
  else
    v144 = ((*(_QWORD *)(v137 + 48) & 0x7FFFFFFFFFFFFFFFLL) == 0) | v616 ^ 1;
  objc_msgSend(v143, sel_setDisableActions_, v144 & 1);
  v600 = sub_1B8C9A1B8(v572, v580, v141);
  v145 = v577;
  v571 = sub_1B8C9A1B8(v577, v578, v141);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v146 = *(_QWORD *)(v581 + 64);
  v147 = 0;
  v569 = v581 + 64;
  v148 = 1 << *(_BYTE *)(v581 + 32);
  if (v148 < 64)
    v149 = ~(-1 << v148);
  else
    v149 = -1;
  v150 = v149 & v146;
  v570 = (unint64_t)(v148 + 63) >> 6;
  v151 = v139;
  v589 = "overlapping range";
  v599 = 0x80000001B8CED690;
  v608 = xmmword_1B8CE4AF0;
  v554 = xmmword_1B8CE6C10;
  v545 = xmmword_1B8CE6C00;
  v561 = xmmword_1B8CE6C20;
  v559 = xmmword_1B8CE6BF0;
  v582 = MEMORY[0x1E0DEE9B8] + 8;
LABEL_48:
  if (v150)
  {
    v578 = (v150 - 1) & v150;
    v579 = v147;
    v152 = __clz(__rbit64(v150)) | (v147 << 6);
    goto LABEL_61;
  }
  v153 = __OFADD__(v147, 1);
  v154 = v147 + 1;
  if (!v153)
  {
    if (v154 < v570)
    {
      v155 = *(_QWORD *)(v569 + 8 * v154);
      if (v155)
      {
LABEL_60:
        v578 = (v155 - 1) & v155;
        v579 = v154;
        v152 = __clz(__rbit64(v155)) + (v154 << 6);
LABEL_61:
        v157 = 8 * v152;
        v158 = *(void **)(*(_QWORD *)(v581 + 48) + v157);
        v159 = *(_QWORD *)(*(_QWORD *)(v581 + 56) + v157);
        v160 = *(_QWORD *)(v159 + 64);
        v605 = v159 + 64;
        v161 = 1 << *(_BYTE *)(v159 + 32);
        if (v161 < 64)
          v162 = ~(-1 << v161);
        else
          v162 = -1;
        v163 = v162 & v160;
        v606 = (uint8_t *)((unint64_t)(v161 + 63) >> 6);
        v607 = v158;
        v617 = v159;
        swift_bridgeObjectRetain();
        v164 = 0;
        if (v163)
        {
LABEL_65:
          v623 = (char *)((v163 - 1) & v163);
          v624 = (char *)v164;
          v165 = __clz(__rbit64(v163)) | (v164 << 6);
          goto LABEL_77;
        }
        while (1)
        {
          v153 = __OFADD__(v164, 1);
          v166 = v164 + 1;
          if (v153)
          {
            __break(1u);
LABEL_186:
            __break(1u);
            goto LABEL_187;
          }
          if (v166 >= (uint64_t)v606)
            goto LABEL_47;
          v167 = *(_QWORD *)(v605 + 8 * v166);
          if (!v167)
          {
            v168 = v166 + 1;
            if (v166 + 1 >= (uint64_t)v606)
              goto LABEL_47;
            v167 = *(_QWORD *)(v605 + 8 * v168);
            if (!v167)
            {
              v168 = v166 + 2;
              if (v166 + 2 >= (uint64_t)v606)
                goto LABEL_47;
              v167 = *(_QWORD *)(v605 + 8 * v168);
              if (!v167)
              {
                v168 = v166 + 3;
                if (v166 + 3 >= (uint64_t)v606)
                {
LABEL_47:

                  swift_release();
                  v147 = v579;
                  v150 = v578;
                  goto LABEL_48;
                }
                v167 = *(_QWORD *)(v605 + 8 * v168);
                if (!v167)
                {
                  while (1)
                  {
                    v166 = v168 + 1;
                    if (__OFADD__(v168, 1))
                      goto LABEL_186;
                    if (v166 >= (uint64_t)v606)
                      goto LABEL_47;
                    v167 = *(_QWORD *)(v605 + 8 * v166);
                    ++v168;
                    if (v167)
                      goto LABEL_76;
                  }
                }
              }
            }
            v166 = v168;
          }
LABEL_76:
          v623 = (char *)((v167 - 1) & v167);
          v624 = (char *)v166;
          v165 = __clz(__rbit64(v167)) + (v166 << 6);
LABEL_77:
          v169 = (uint64_t *)(*(_QWORD *)(v617 + 48) + 16 * v165);
          v170 = *v169;
          v171 = v169[1];
          v172 = *(_QWORD *)(*(_QWORD *)(v617 + 56) + 8 * v165);
          swift_bridgeObjectRetain();
          v625 = v172;
          swift_unknownObjectRetain();
          v173 = sub_1B8C9B2B8(v170, v171);
          v174 = v616 | v173;
          if ((sub_1B8C9B2B8(v170, v171) & 1) == 0 || (v609 & 1) != 0)
          {
            if ((v174 & 1) == 0)
              goto LABEL_90;
          }
          else if ((v174 & 1) == 0 || (v604 & 1) != 0)
          {
LABEL_90:
            v613(v132, v614, v129);
            v194 = swift_allocObject();
            *(_BYTE *)(v194 + 16) = v603;
            v195 = swift_allocObject();
            *(_QWORD *)(v195 + 16) = v170;
            *(_QWORD *)(v195 + 24) = v171;
            v145 = sub_1B8CE0EC4();
            LODWORD(v621) = sub_1B8CE15CC();
            v196 = swift_allocObject();
            *(_BYTE *)(v196 + 16) = 32;
            v197 = swift_allocObject();
            *(_BYTE *)(v197 + 16) = 8;
            v198 = swift_allocObject();
            *(_QWORD *)(v198 + 16) = sub_1B8CAC104;
            *(_QWORD *)(v198 + 24) = v194;
            v199 = swift_allocObject();
            *(_QWORD *)(v199 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v199 + 24) = v198;
            v200 = swift_allocObject();
            *(_BYTE *)(v200 + 16) = 32;
            v201 = swift_allocObject();
            *(_BYTE *)(v201 + 16) = 8;
            v202 = swift_allocObject();
            *(_QWORD *)(v202 + 16) = sub_1B8CAC128;
            *(_QWORD *)(v202 + 24) = v195;
            v203 = swift_allocObject();
            *(_QWORD *)(v203 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v203 + 24) = v202;
            v204 = swift_allocObject();
            *(_OWORD *)(v204 + 16) = v608;
            *(_QWORD *)(v204 + 32) = sub_1B8CAD1C8;
            *(_QWORD *)(v204 + 40) = v196;
            *(_QWORD *)(v204 + 48) = sub_1B8CAD1C8;
            *(_QWORD *)(v204 + 56) = v197;
            *(_QWORD *)(v204 + 64) = sub_1B8CAD1BC;
            *(_QWORD *)(v204 + 72) = v199;
            *(_QWORD *)(v204 + 80) = sub_1B8CAD1C8;
            *(_QWORD *)(v204 + 88) = v200;
            *(_QWORD *)(v204 + 96) = sub_1B8CAD1C8;
            *(_QWORD *)(v204 + 104) = v201;
            *(_QWORD *)(v204 + 112) = sub_1B8CAD1BC;
            *(_QWORD *)(v204 + 120) = v203;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v145, (os_log_type_t)v621))
            {
              v602 = v145;
              v205 = (uint8_t *)sub_1B8CC4638();
              v206 = swift_slowAlloc();
              v631 = 0;
              v630 = v206;
              *(_WORD *)v205 = 514;
              *(_QWORD *)&v627 = v205 + 2;
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v196;
              v145 = v615;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              if (!v145)
              {
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v197;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v199;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v200;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v201;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v203;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                v615 = 0;
                swift_release();
                _os_log_impl(&dword_1B8C64000, (os_log_t)v602, (os_log_type_t)v621, "Skipping %sdisplay link driven animation tick for keyPath %s", v205, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x1BCCB9588](v206, -1, -1);
                sub_1B8CC4684();
              }
              goto LABEL_190;
            }

            swift_unknownObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v132 = v619;
            v129 = v622;
            v611(v619, v622);
            v133 = v610;
            v130 = v618;
            goto LABEL_108;
          }
          if (v170 == 0xD000000000000014 && v171 == v599 || (sub_1B8CE1890() & 1) != 0)
          {
            v175 = objc_msgSend(v607, sel_superlayer);
            v176 = sub_1B8C992B0();
            v177 = v176;
            if (v175)
            {
              sub_1B8C84230(0, (unint64_t *)&unk_1ED565570);
              v178 = v175;
              v179 = sub_1B8CE1644();

              if ((v179 & 1) != 0)
              {
                v613(v131, v614, v129);
                v180 = swift_allocObject();
                *(_QWORD *)(v180 + 16) = v170;
                *(_QWORD *)(v180 + 24) = v171;
                v181 = swift_allocObject();
                *(_QWORD *)(v181 + 16) = sub_1B8CAC0A8;
                *(_QWORD *)(v181 + 24) = v133;
                swift_retain();
                v182 = sub_1B8CE0EC4();
                LODWORD(v621) = sub_1B8CE15CC();
                v183 = swift_allocObject();
                *(_BYTE *)(v183 + 16) = 34;
                v184 = swift_allocObject();
                *(_BYTE *)(v184 + 16) = 8;
                v185 = swift_allocObject();
                *(_QWORD *)(v185 + 16) = sub_1B8CAD418;
                *(_QWORD *)(v185 + 24) = v180;
                v186 = swift_allocObject();
                *(_QWORD *)(v186 + 16) = sub_1B8CAD1A4;
                *(_QWORD *)(v186 + 24) = v185;
                v187 = swift_allocObject();
                *(_BYTE *)(v187 + 16) = 34;
                v188 = swift_allocObject();
                *(_BYTE *)(v188 + 16) = 8;
                v189 = swift_allocObject();
                *(_QWORD *)(v189 + 16) = sub_1B8CAD1A8;
                *(_QWORD *)(v189 + 24) = v181;
                v190 = swift_allocObject();
                *(_QWORD *)(v190 + 16) = sub_1B8CAD1A4;
                *(_QWORD *)(v190 + 24) = v189;
                v191 = swift_allocObject();
                *(_OWORD *)(v191 + 16) = v608;
                v145 = sub_1B8CAD1C8;
                *(_QWORD *)(v191 + 32) = sub_1B8CAD1C8;
                *(_QWORD *)(v191 + 40) = v183;
                *(_QWORD *)(v191 + 48) = sub_1B8CAD1C8;
                *(_QWORD *)(v191 + 56) = v184;
                *(_QWORD *)(v191 + 64) = sub_1B8CAD1BC;
                *(_QWORD *)(v191 + 72) = v186;
                *(_QWORD *)(v191 + 80) = sub_1B8CAD1C8;
                *(_QWORD *)(v191 + 88) = v187;
                *(_QWORD *)(v191 + 96) = sub_1B8CAD1C8;
                *(_QWORD *)(v191 + 104) = v188;
                *(_QWORD *)(v191 + 112) = sub_1B8CAD1BC;
                *(_QWORD *)(v191 + 120) = v190;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRelease();
                if (os_log_type_enabled(v182, (os_log_type_t)v621))
                {
                  v192 = (uint8_t *)sub_1B8CC4638();
                  v193 = swift_slowAlloc();
                  v631 = 0;
                  v630 = v193;
                  *(_WORD *)v192 = 514;
                  *(_QWORD *)&v627 = v192 + 2;
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v183;
                  v145 = v615;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  if (!v145)
                  {
                    swift_release();
                    *(_QWORD *)&v629 = sub_1B8CAD1C8;
                    *((_QWORD *)&v629 + 1) = v184;
                    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                    swift_release();
                    *(_QWORD *)&v629 = sub_1B8CAD1BC;
                    *((_QWORD *)&v629 + 1) = v186;
                    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                    swift_release();
                    *(_QWORD *)&v629 = sub_1B8CAD1C8;
                    *((_QWORD *)&v629 + 1) = v187;
                    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                    swift_release();
                    *(_QWORD *)&v629 = sub_1B8CAD1C8;
                    *((_QWORD *)&v629 + 1) = v188;
                    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                    swift_release();
                    *(_QWORD *)&v629 = sub_1B8CAD1BC;
                    *((_QWORD *)&v629 + 1) = v190;
                    sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                    v615 = 0;
                    swift_release();
                    _os_log_impl(&dword_1B8C64000, v182, (os_log_type_t)v621, "Skipping unlock interpolation for'%{public}s' keyPath animation on the root most layer for '%{public}s' level.", v192, 0x16u);
                    swift_arrayDestroy();
                    MEMORY[0x1BCCB9588](v193, -1, -1);
                    sub_1B8CC4684();
                  }
                  goto LABEL_190;
                }

                swift_unknownObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                v131 = v620;
                v129 = v622;
                v611(v620, v622);
                v133 = v610;
                v130 = v618;
                goto LABEL_122;
              }
            }
            else
            {

            }
          }
          v207 = v607;
          v208 = sub_1B8C98B40((uint64_t)v207, v600);

          if (!v208
            || (swift_bridgeObjectRetain(),
                v209 = (char *)sub_1B8C98B80(v170, v171, v208),
                swift_bridgeObjectRelease(),
                swift_bridgeObjectRelease(),
                !v209))
          {
            v613(v130, v614, v129);
            v226 = swift_allocObject();
            *(_QWORD *)(v226 + 16) = sub_1B8CAD414;
            *(_QWORD *)(v226 + 24) = v133;
            v227 = swift_allocObject();
            *(_QWORD *)(v227 + 16) = v170;
            *(_QWORD *)(v227 + 24) = v171;
            swift_retain();
            v602 = (_BYTE *)sub_1B8CE0EC4();
            LODWORD(v621) = sub_1B8CE15B4();
            v228 = swift_allocObject();
            *(_BYTE *)(v228 + 16) = 34;
            v229 = swift_allocObject();
            *(_BYTE *)(v229 + 16) = 8;
            v230 = swift_allocObject();
            *(_QWORD *)(v230 + 16) = sub_1B8CAB95C;
            *(_QWORD *)(v230 + 24) = v226;
            v231 = swift_allocObject();
            *(_QWORD *)(v231 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v231 + 24) = v230;
            v232 = swift_allocObject();
            *(_BYTE *)(v232 + 16) = 34;
            v233 = swift_allocObject();
            *(_BYTE *)(v233 + 16) = 8;
            v234 = swift_allocObject();
            *(_QWORD *)(v234 + 16) = sub_1B8CAD418;
            *(_QWORD *)(v234 + 24) = v227;
            v235 = v130;
            v236 = swift_allocObject();
            *(_QWORD *)(v236 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v236 + 24) = v234;
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v608;
            v145 = sub_1B8CAD1C8;
            *(_QWORD *)(inited + 32) = sub_1B8CAD1C8;
            *(_QWORD *)(inited + 40) = v228;
            *(_QWORD *)(inited + 48) = sub_1B8CAD1C8;
            *(_QWORD *)(inited + 56) = v229;
            *(_QWORD *)(inited + 64) = sub_1B8CAD1BC;
            *(_QWORD *)(inited + 72) = v231;
            *(_QWORD *)(inited + 80) = sub_1B8CAD1C8;
            *(_QWORD *)(inited + 88) = v232;
            *(_QWORD *)(inited + 96) = sub_1B8CAD1C8;
            *(_QWORD *)(inited + 104) = v233;
            *(_QWORD *)(inited + 112) = sub_1B8CAD1BC;
            *(_QWORD *)(inited + 120) = v236;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v238 = v602;
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v238, (os_log_type_t)v621))
            {
              v239 = v238;
              v240 = (uint8_t *)sub_1B8CC4638();
              v241 = swift_slowAlloc();
              v631 = 0;
              v630 = v241;
              *(_WORD *)v240 = 514;
              *(_QWORD *)&v627 = v240 + 2;
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v228;
              v145 = v615;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              if (!v145)
              {
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v229;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v231;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v232;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v233;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v236;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                v615 = 0;
                swift_release();
                _os_log_impl(&dword_1B8C64000, v239, (os_log_type_t)v621, "%{public}s is missing an interpolated state for the %{public}s, skipping animation.", v240, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x1BCCB9588](v241, -1, -1);
                sub_1B8CC4684();
              }
              goto LABEL_190;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            v129 = v622;
            v611(v235, v622);
            v133 = v610;
            v130 = v235;
            goto LABEL_121;
          }
          ObjectType = swift_getObjectType();
          v211 = objc_msgSend(v209, sel_respondsToSelector_, sel_CA_interpolateValue_byFraction_);
          v212 = v601;
          v621 = v209;
          if ((v211 & 1) == 0)
            goto LABEL_110;
          v602 = v207;
          v213 = v625;
          v628 = swift_getObjectType();
          *(_QWORD *)&v627 = v213;
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          v214 = sub_1B8CE1884();
          *(float *)&v215 = v142;
          v216 = objc_msgSend(v209, sel_CA_interpolateValue_byFraction_, v214, v215);
          swift_unknownObjectRelease();
          sub_1B8CE16A4();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v627);
          v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565558);
          if ((swift_dynamicCast() & 1) == 0)
          {
LABEL_110:
            v613((char *)v212, v614, v129);
            v242 = swift_allocObject();
            *(_QWORD *)(v242 + 16) = sub_1B8CAD414;
            *(_QWORD *)(v242 + 24) = v133;
            v243 = swift_allocObject();
            *(_QWORD *)(v243 + 16) = v170;
            *(_QWORD *)(v243 + 24) = v171;
            swift_retain();
            v602 = (_BYTE *)sub_1B8CE0EC4();
            LODWORD(v595) = sub_1B8CE15B4();
            v244 = swift_allocObject();
            *(_BYTE *)(v244 + 16) = 34;
            v245 = swift_allocObject();
            *(_BYTE *)(v245 + 16) = 8;
            v246 = swift_allocObject();
            *(_QWORD *)(v246 + 16) = sub_1B8CAD1A8;
            *(_QWORD *)(v246 + 24) = v242;
            v247 = swift_allocObject();
            *(_QWORD *)(v247 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v247 + 24) = v246;
            v248 = swift_allocObject();
            *(_BYTE *)(v248 + 16) = 34;
            v249 = swift_allocObject();
            *(_BYTE *)(v249 + 16) = 8;
            v250 = swift_allocObject();
            *(_QWORD *)(v250 + 16) = sub_1B8CAD418;
            *(_QWORD *)(v250 + 24) = v243;
            v145 = v212;
            v251 = swift_allocObject();
            *(_QWORD *)(v251 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v251 + 24) = v250;
            v252 = swift_allocObject();
            *(_OWORD *)(v252 + 16) = v608;
            *(_QWORD *)(v252 + 32) = sub_1B8CAD1C8;
            *(_QWORD *)(v252 + 40) = v244;
            *(_QWORD *)(v252 + 48) = sub_1B8CAD1C8;
            *(_QWORD *)(v252 + 56) = v245;
            *(_QWORD *)(v252 + 64) = sub_1B8CAD1BC;
            *(_QWORD *)(v252 + 72) = v247;
            *(_QWORD *)(v252 + 80) = sub_1B8CAD1C8;
            *(_QWORD *)(v252 + 88) = v248;
            *(_QWORD *)(v252 + 96) = sub_1B8CAD1C8;
            *(_QWORD *)(v252 + 104) = v249;
            *(_QWORD *)(v252 + 112) = sub_1B8CAD1BC;
            *(_QWORD *)(v252 + 120) = v251;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v253 = v602;
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v253, (os_log_type_t)v595))
            {
              v254 = (uint8_t *)sub_1B8CC4638();
              v255 = swift_slowAlloc();
              v631 = 0;
              v630 = v255;
              *(_WORD *)v254 = 514;
              *(_QWORD *)&v627 = v254 + 2;
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v244;
              v145 = v615;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              if (!v145)
              {
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v245;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v247;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v248;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v249;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v251;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                v615 = 0;
                swift_release();
                _os_log_impl(&dword_1B8C64000, (os_log_t)v602, (os_log_type_t)v595, "%{public}s is missing an interpolated state using unlockProgress for the %{public}s, skipping animation.", v254, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x1BCCB9588](v255, -1, -1);
                sub_1B8CC4684();
              }
              goto LABEL_190;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            goto LABEL_119;
          }
          v145 = v627;
          v595 = v627;
          if ((v616 & 1) != 0)
          {
            swift_unknownObjectRetain();
          }
          else
          {
            v256 = v217;
            v257 = v602;
            v258 = sub_1B8C98B40((uint64_t)v257, v571);

            v145 = v594;
            if (!v258
              || (swift_bridgeObjectRetain(),
                  v259 = (void *)sub_1B8C98B80(v170, v171, v258),
                  swift_bridgeObjectRelease(),
                  swift_bridgeObjectRelease(),
                  !v259))
            {
              v613((char *)v145, v614, v129);
              v266 = swift_allocObject();
              *(_QWORD *)(v266 + 16) = sub_1B8CAD414;
              *(_QWORD *)(v266 + 24) = v133;
              v267 = swift_allocObject();
              *(_QWORD *)(v267 + 16) = v170;
              *(_QWORD *)(v267 + 24) = v171;
              swift_retain();
              v602 = (_BYTE *)sub_1B8CE0EC4();
              LODWORD(v577) = sub_1B8CE15B4();
              v268 = swift_allocObject();
              *(_BYTE *)(v268 + 16) = 34;
              v269 = swift_allocObject();
              *(_BYTE *)(v269 + 16) = 8;
              v270 = swift_allocObject();
              *(_QWORD *)(v270 + 16) = sub_1B8CAD1A8;
              *(_QWORD *)(v270 + 24) = v266;
              v271 = swift_allocObject();
              *(_QWORD *)(v271 + 16) = sub_1B8CAD1A4;
              *(_QWORD *)(v271 + 24) = v270;
              v272 = swift_allocObject();
              *(_BYTE *)(v272 + 16) = 34;
              v273 = swift_allocObject();
              *(_BYTE *)(v273 + 16) = 8;
              v274 = swift_allocObject();
              *(_QWORD *)(v274 + 16) = sub_1B8CAD418;
              *(_QWORD *)(v274 + 24) = v267;
              v275 = swift_allocObject();
              *(_QWORD *)(v275 + 16) = sub_1B8CAD1A4;
              *(_QWORD *)(v275 + 24) = v274;
              v276 = swift_allocObject();
              *(_OWORD *)(v276 + 16) = v608;
              *(_QWORD *)(v276 + 32) = sub_1B8CAD1C8;
              *(_QWORD *)(v276 + 40) = v268;
              *(_QWORD *)(v276 + 48) = sub_1B8CAD1C8;
              *(_QWORD *)(v276 + 56) = v269;
              *(_QWORD *)(v276 + 64) = sub_1B8CAD1BC;
              *(_QWORD *)(v276 + 72) = v271;
              *(_QWORD *)(v276 + 80) = sub_1B8CAD1C8;
              *(_QWORD *)(v276 + 88) = v272;
              *(_QWORD *)(v276 + 96) = sub_1B8CAD1C8;
              *(_QWORD *)(v276 + 104) = v273;
              *(_QWORD *)(v276 + 112) = sub_1B8CAD1BC;
              *(_QWORD *)(v276 + 120) = v275;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v277 = v602;
              swift_bridgeObjectRelease();
              if (os_log_type_enabled(v277, (os_log_type_t)v577))
              {
                v278 = (uint8_t *)sub_1B8CC4638();
                v279 = swift_slowAlloc();
                v631 = 0;
                v630 = v279;
                *(_WORD *)v278 = 514;
                *(_QWORD *)&v627 = v278 + 2;
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v268;
                v145 = v615;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                if (!v145)
                {
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v269;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1BC;
                  *((_QWORD *)&v629 + 1) = v271;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v272;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v273;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1BC;
                  *((_QWORD *)&v629 + 1) = v275;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  v615 = 0;
                  swift_release();
                  _os_log_impl(&dword_1B8C64000, (os_log_t)v602, (os_log_type_t)v577, "%{public}s previous orientation is missing an interpolated state for the %{public}s, skipping animation.", v278, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x1BCCB9588](v279, -1, -1);
                  sub_1B8CC4684();
                }
                goto LABEL_190;
              }

              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_unknownObjectRelease();
LABEL_119:
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              v129 = v622;
              v611((char *)v145, v622);
              v133 = v610;
              goto LABEL_120;
            }
            v260 = objc_msgSend(v259, sel_respondsToSelector_, sel_CA_interpolateValue_byFraction_);
            v261 = v592;
            if ((v260 & 1) == 0)
              goto LABEL_161;
            v628 = ObjectType;
            *(_QWORD *)&v627 = v621;
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            v262 = sub_1B8CE1884();
            *(float *)&v263 = v151;
            v264 = objc_msgSend(v259, sel_CA_interpolateValue_byFraction_, v262, v263);
            swift_unknownObjectRelease();
            sub_1B8CE16A4();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v627);
            v265 = v259;
            v217 = v256;
            if ((swift_dynamicCast() & 1) == 0)
            {
              v259 = v265;
LABEL_161:
              v563 = (uint64_t)v259;
              v613(v261, v614, v129);
              v399 = swift_allocObject();
              *(_QWORD *)(v399 + 16) = sub_1B8CAD414;
              *(_QWORD *)(v399 + 24) = v133;
              v400 = swift_allocObject();
              *(_QWORD *)(v400 + 16) = v170;
              *(_QWORD *)(v400 + 24) = v171;
              v562 = swift_allocObject();
              *(_QWORD *)(v562 + 16) = v566;
              swift_retain_n();
              v574 = (os_log_t)sub_1B8CE0EC4();
              LODWORD(v573) = sub_1B8CE15B4();
              v577 = swift_allocObject();
              *(_BYTE *)(v577 + 16) = 34;
              v401 = swift_allocObject();
              *(_BYTE *)(v401 + 16) = 8;
              v402 = v401;
              v403 = swift_allocObject();
              *(_QWORD *)(v403 + 16) = sub_1B8CAD1A8;
              *(_QWORD *)(v403 + 24) = v399;
              v404 = swift_allocObject();
              *(_QWORD *)(v404 + 16) = sub_1B8CAD1A4;
              *(_QWORD *)(v404 + 24) = v403;
              v405 = v404;
              v565 = swift_allocObject();
              *(_BYTE *)(v565 + 16) = 34;
              v576 = swift_allocObject();
              *(_BYTE *)(v576 + 16) = 8;
              v406 = swift_allocObject();
              *(_QWORD *)(v406 + 16) = sub_1B8CAD418;
              *(_QWORD *)(v406 + 24) = v400;
              v407 = (_QWORD *)swift_allocObject();
              v407[2] = sub_1B8CAD1A4;
              v407[3] = v406;
              v602 = v407;
              v575 = (os_log_t)swift_allocObject();
              LOBYTE(v575[2].isa) = 32;
              v611 = (void (*)(char *, uint64_t))swift_allocObject();
              *((_BYTE *)v611 + 16) = 8;
              v408 = swift_allocObject();
              *(_QWORD *)(v408 + 16) = sub_1B8CAB834;
              *(_QWORD *)(v408 + 24) = v133;
              v409 = swift_allocObject();
              *(_QWORD *)(v409 + 16) = sub_1B8CAD1A4;
              *(_QWORD *)(v409 + 24) = v408;
              v564 = v409;
              v568 = (uint8_t *)swift_allocObject();
              v568[16] = 32;
              v410 = (uint8_t *)swift_allocObject();
              v410[16] = 8;
              v411 = swift_allocObject();
              v412 = v562;
              *(_QWORD *)(v411 + 16) = sub_1B8CABA58;
              *(_QWORD *)(v411 + 24) = v412;
              v413 = swift_allocObject();
              *(_QWORD *)(v413 + 16) = sub_1B8CAD1A4;
              *(_QWORD *)(v413 + 24) = v411;
              v414 = swift_allocObject();
              *(_OWORD *)(v414 + 16) = v559;
              *(_QWORD *)(v414 + 32) = sub_1B8CAD1C8;
              *(_QWORD *)(v414 + 40) = v577;
              *(_QWORD *)(v414 + 48) = sub_1B8CAD1C8;
              v415 = v402;
              *(_QWORD *)(v414 + 56) = v402;
              *(_QWORD *)(v414 + 64) = sub_1B8CAD1BC;
              v416 = v405;
              *(_QWORD *)(v414 + 72) = v405;
              *(_QWORD *)(v414 + 80) = sub_1B8CAD1C8;
              v145 = v565;
              *(_QWORD *)(v414 + 88) = v565;
              *(_QWORD *)(v414 + 96) = sub_1B8CAD1C8;
              *(_QWORD *)(v414 + 104) = v576;
              *(_QWORD *)(v414 + 112) = sub_1B8CAD1BC;
              *(_QWORD *)(v414 + 120) = v407;
              *(_QWORD *)(v414 + 128) = sub_1B8CAD1C8;
              *(_QWORD *)(v414 + 136) = v575;
              *(_QWORD *)(v414 + 144) = sub_1B8CAD1C8;
              *(_QWORD *)(v414 + 152) = v611;
              *(_QWORD *)(v414 + 160) = sub_1B8CAD1BC;
              *(_QWORD *)(v414 + 168) = v409;
              *(_QWORD *)(v414 + 176) = sub_1B8CAD1C8;
              *(_QWORD *)(v414 + 184) = v568;
              *(_QWORD *)(v414 + 192) = sub_1B8CAD1C8;
              *(_QWORD *)(v414 + 200) = v410;
              *(_QWORD *)(v414 + 208) = sub_1B8CAD1BC;
              *(_QWORD *)(v414 + 216) = v413;
              swift_retain();
              v560 = v415;
              swift_retain();
              v562 = v416;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v417 = v413;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v418 = v574;
              swift_bridgeObjectRelease();
              if (os_log_type_enabled(v418, (os_log_type_t)v573))
              {
                v419 = v560;
                v557 = v417;
                v420 = v575;
                v558 = v410;
                v421 = (uint8_t *)sub_1B8CC4638();
                v422 = swift_slowAlloc();
                v631 = 0;
                v555 = v422;
                v630 = v422;
                v556 = v421;
                *(_WORD *)v421 = 1026;
                *(_QWORD *)&v627 = v421 + 2;
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v577;
                v145 = v615;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                if (!v145)
                {
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v419;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1BC;
                  *((_QWORD *)&v629 + 1) = v562;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v565;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v576;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1BC;
                  *((_QWORD *)&v629 + 1) = v602;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v420;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v611;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1BC;
                  *((_QWORD *)&v629 + 1) = v564;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v568;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1C8;
                  *((_QWORD *)&v629 + 1) = v558;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  swift_release();
                  *(_QWORD *)&v629 = sub_1B8CAD1BC;
                  *((_QWORD *)&v629 + 1) = v557;
                  sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                  v615 = 0;
                  swift_release();
                  _os_log_impl(&dword_1B8C64000, v574, (os_log_type_t)v573, "%{public}s cannot interpolate %{public}s between orientation change from %s to %s, skipping animation.", v556, 0x2Au);
                  v423 = v555;
                  swift_arrayDestroy();
                  MEMORY[0x1BCCB9588](v423, -1, -1);
                  sub_1B8CC4684();
                }
                goto LABEL_190;
              }

              swift_unknownObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              v397 = *(void (**)(char *, uint64_t))(v593 + 8);
              v398 = v592;
              v129 = v622;
LABEL_165:
              v611 = v397;
              v397(v398, v129);
LABEL_120:
              v130 = v618;
LABEL_121:
              v131 = v620;
LABEL_122:
              v132 = v619;
              goto LABEL_123;
            }
            swift_unknownObjectRelease();
            v145 = v627;
          }
          objc_opt_self();
          v218 = swift_dynamicCastObjCClass();
          v577 = (uint64_t)v145;
          if (v218)
          {
            v219 = v218;
            swift_unknownObjectRetain();
            v220 = objc_msgSend(v602, sel_presentationLayer);
            if (v220)
            {
              v221 = v220;
              swift_unknownObjectRetain();
              v222 = (void *)sub_1B8CE1494();
              objc_msgSend(v221, sel_setValue_forKeyPath_, v219, v222);
              swift_unknownObjectRelease();

              v223 = (void *)sub_1B8CE1494();
              v224 = objc_msgSend(v221, sel_valueForKeyPath_, v223);

              if (!v224)
                goto LABEL_189;
              sub_1B8CE16A4();
              swift_unknownObjectRelease();

              swift_unknownObjectRelease();
              sub_1B8C8ECA4(&v627, &v629);
              swift_dynamicCast();
              v145 = v631;
              v225 = v596;
              goto LABEL_146;
            }
            swift_unknownObjectRelease();
          }
          v280 = sub_1B8CE14F4();
          v225 = v596;
          if ((v280 & 1) == 0
            || (*(_QWORD *)&v629 = v145, swift_unknownObjectRetain(), (swift_dynamicCast() & 1) == 0)
            || (v281 = *(double *)&v627, *(double *)&v627 >= 0.0))
          {
            swift_unknownObjectRetain();
            goto LABEL_146;
          }
          v282 = v602;
          v283 = sub_1B8C98B40((uint64_t)v282, v572);

          v552 = v217;
          if (!v283)
            goto LABEL_167;
          swift_bridgeObjectRetain();
          v284 = sub_1B8C98B80(v170, v171, v283);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v284)
            goto LABEL_167;
          v285 = v282;
          v286 = sub_1B8C98B40((uint64_t)v285, v580);

          if (!v286)
            break;
          swift_bridgeObjectRetain();
          v287 = sub_1B8C98B80(v170, v171, v286);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v287)
            break;
          v613(v583, v614, v129);
          v288 = swift_allocObject();
          *(_QWORD *)(v288 + 16) = sub_1B8CAD414;
          *(_QWORD *)(v288 + 24) = v133;
          v289 = swift_allocObject();
          *(double *)(v289 + 16) = v141;
          v575 = (os_log_t)swift_allocObject();
          *(double *)&v575[2].isa = v142;
          v576 = swift_allocObject();
          *(double *)(v576 + 16) = v281;
          v611 = (void (*)(char *, uint64_t))swift_allocObject();
          *((_QWORD *)v611 + 2) = v285;
          v558 = (uint8_t *)swift_allocObject();
          *((_QWORD *)v558 + 2) = v284;
          v560 = swift_allocObject();
          *(_QWORD *)(v560 + 16) = v287;
          v557 = swift_allocObject();
          *(_QWORD *)(v557 + 16) = v625;
          swift_retain();
          v540 = v285;
          swift_unknownObjectRetain();
          v553 = v284;
          swift_unknownObjectRetain();
          v551 = (_BYTE *)v287;
          swift_unknownObjectRetain();
          v550 = sub_1B8CE0EC4();
          v541 = sub_1B8CE15B4();
          v544 = swift_allocObject();
          *(_BYTE *)(v544 + 16) = 34;
          v290 = swift_allocObject();
          *(_BYTE *)(v290 + 16) = 8;
          v291 = swift_allocObject();
          *(_QWORD *)(v291 + 16) = sub_1B8CAD1A8;
          *(_QWORD *)(v291 + 24) = v288;
          v292 = swift_allocObject();
          v547 = v292;
          *(_QWORD *)(v292 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v292 + 24) = v291;
          v548 = swift_allocObject();
          *(_BYTE *)(v548 + 16) = 2;
          v293 = swift_allocObject();
          *(_BYTE *)(v293 + 16) = 8;
          v294 = swift_allocObject();
          *(_QWORD *)(v294 + 16) = sub_1B8CABE30;
          *(_QWORD *)(v294 + 24) = v289;
          v295 = swift_allocObject();
          v549 = (uint8_t *)v295;
          *(_QWORD *)(v295 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v295 + 24) = v294;
          v296 = (uint8_t *)v293;
          v543 = v290;
          v564 = swift_allocObject();
          *(_BYTE *)(v564 + 16) = 2;
          v568 = (uint8_t *)swift_allocObject();
          v568[16] = 8;
          v297 = swift_allocObject();
          v298 = v575;
          *(_QWORD *)(v297 + 16) = sub_1B8CAD1D0;
          *(_QWORD *)(v297 + 24) = v298;
          v299 = swift_allocObject();
          v565 = v299;
          *(_QWORD *)(v299 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v299 + 24) = v297;
          v563 = swift_allocObject();
          *(_BYTE *)(v563 + 16) = 2;
          v573 = (_BYTE *)swift_allocObject();
          v573[16] = 8;
          v300 = swift_allocObject();
          v301 = v576;
          *(_QWORD *)(v300 + 16) = sub_1B8CAD1D0;
          *(_QWORD *)(v300 + 24) = v301;
          v302 = swift_allocObject();
          v556 = (uint8_t *)v302;
          *(_QWORD *)(v302 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v302 + 24) = v300;
          v562 = swift_allocObject();
          *(_BYTE *)(v562 + 16) = 66;
          v576 = swift_allocObject();
          *(_BYTE *)(v576 + 16) = 8;
          v303 = swift_allocObject();
          v304 = v611;
          *(_QWORD *)(v303 + 16) = sub_1B8CABE58;
          *(_QWORD *)(v303 + 24) = v304;
          v305 = swift_allocObject();
          v575 = v305;
          v305[2].isa = (Class)sub_1B8CAD1B4;
          v305[3].isa = (Class)v303;
          v611 = (void (*)(char *, uint64_t))swift_allocObject();
          *((_BYTE *)v611 + 16) = 34;
          v574 = (os_log_t)swift_allocObject();
          LOBYTE(v574[2].isa) = 8;
          v306 = swift_allocObject();
          v307 = v558;
          *(_QWORD *)(v306 + 16) = sub_1B8CABE60;
          *(_QWORD *)(v306 + 24) = v307;
          v308 = swift_allocObject();
          *(_QWORD *)(v308 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v308 + 24) = v306;
          v309 = v308;
          v310 = swift_allocObject();
          *(_BYTE *)(v310 + 16) = 34;
          v311 = v310;
          v542 = (os_log_t)swift_allocObject();
          LOBYTE(v542[2].isa) = 8;
          v312 = swift_allocObject();
          v313 = v560;
          *(_QWORD *)(v312 + 16) = sub_1B8CAD410;
          *(_QWORD *)(v312 + 24) = v313;
          v314 = swift_allocObject();
          v558 = (uint8_t *)v314;
          *(_QWORD *)(v314 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v314 + 24) = v312;
          v560 = swift_allocObject();
          *(_BYTE *)(v560 + 16) = 34;
          v555 = swift_allocObject();
          *(_BYTE *)(v555 + 16) = 8;
          v315 = swift_allocObject();
          v316 = v557;
          *(_QWORD *)(v315 + 16) = sub_1B8CAD410;
          *(_QWORD *)(v315 + 24) = v316;
          v317 = swift_allocObject();
          v557 = v317;
          *(_QWORD *)(v317 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v317 + 24) = v315;
          v318 = swift_allocObject();
          *(_OWORD *)(v318 + 16) = v545;
          *(_QWORD *)(v318 + 32) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 40) = v544;
          *(_QWORD *)(v318 + 48) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 56) = v290;
          *(_QWORD *)(v318 + 64) = sub_1B8CAD1BC;
          *(_QWORD *)(v318 + 72) = v547;
          *(_QWORD *)(v318 + 80) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 88) = v548;
          *(_QWORD *)(v318 + 96) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 104) = v296;
          *(_QWORD *)(v318 + 112) = sub_1B8CAD1C0;
          *(_QWORD *)(v318 + 120) = v549;
          *(_QWORD *)(v318 + 128) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 136) = v564;
          *(_QWORD *)(v318 + 144) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 152) = v568;
          *(_QWORD *)(v318 + 160) = sub_1B8CAD1C0;
          *(_QWORD *)(v318 + 168) = v565;
          *(_QWORD *)(v318 + 176) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 184) = v563;
          *(_QWORD *)(v318 + 192) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 200) = v573;
          *(_QWORD *)(v318 + 208) = sub_1B8CAD1C0;
          *(_QWORD *)(v318 + 216) = v556;
          *(_QWORD *)(v318 + 224) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 232) = v562;
          *(_QWORD *)(v318 + 240) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 248) = v576;
          *(_QWORD *)(v318 + 256) = sub_1B8CAD1C4;
          *(_QWORD *)(v318 + 264) = v575;
          *(_QWORD *)(v318 + 272) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 280) = v611;
          *(_QWORD *)(v318 + 288) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 296) = v574;
          *(_QWORD *)(v318 + 304) = sub_1B8CAD1BC;
          *(_QWORD *)(v318 + 312) = v309;
          *(_QWORD *)(v318 + 320) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 328) = v311;
          *(_QWORD *)(v318 + 336) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 344) = v542;
          *(_QWORD *)(v318 + 352) = sub_1B8CAD1BC;
          *(_QWORD *)(v318 + 360) = v558;
          *(_QWORD *)(v318 + 368) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 376) = v560;
          *(_QWORD *)(v318 + 384) = sub_1B8CAD1C8;
          *(_QWORD *)(v318 + 392) = v555;
          *(_QWORD *)(v318 + 400) = sub_1B8CAD1BC;
          *(_QWORD *)(v318 + 408) = v557;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v537 = v296;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v539 = v309;
          swift_retain();
          v538 = v311;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v550, (os_log_type_t)v541))
          {
            v319 = v543;
            v320 = v564;
            v321 = v563;
            v322 = (uint8_t *)sub_1B8CC4638();
            v323 = swift_slowAlloc();
            v324 = swift_slowAlloc();
            v534 = v323;
            v631 = v323;
            v535 = v324;
            v630 = v324;
            v536 = v322;
            *(_WORD *)v322 = 2050;
            *(_QWORD *)&v627 = v322 + 2;
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v544;
            v145 = v615;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            if (!v145)
            {
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v319;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v325 = v548;
              v326 = v321;
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v547;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v327 = v568;
              v328 = v537;
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v325;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v328;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v329 = v542;
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C0;
              *((_QWORD *)&v629 + 1) = v549;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v330 = v538;
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v320;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v331 = v574;
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v327;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v332 = v611;
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C0;
              *((_QWORD *)&v629 + 1) = v565;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v326;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v573;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C0;
              *((_QWORD *)&v629 + 1) = v556;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v562;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v576;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C4;
              *((_QWORD *)&v629 + 1) = v575;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v332;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v331;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v539;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v330;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v329;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v558;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v560;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v555;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v557;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v615 = 0;
              swift_release();
              _os_log_impl(&dword_1B8C64000, v550, (os_log_type_t)v541, "%{public}s has an interpolated (backlightProgress: %{public}f, unlockProgress: %{public}f) scale value '%{public}f' that is negative for layer '%{public}@' which is not expected! SleepValue: %{public}s, LockValue: %{public}s), HomeValue: %{public}s.", v536, 0x52u);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED566CB8);
              v333 = v534;
              swift_arrayDestroy();
              MEMORY[0x1BCCB9588](v333, -1, -1);
              v334 = v535;
              swift_arrayDestroy();
              MEMORY[0x1BCCB9588](v334, -1, -1);
              sub_1B8CC4684();
            }
            goto LABEL_190;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v487 = v622;
          (*(void (**)(char *, uint64_t))(v593 + 8))(v583, v622);
          v488 = v610;
          v489 = v553;
          v613(v584, v614, v487);
          v490 = swift_allocObject();
          *(_QWORD *)(v490 + 16) = sub_1B8CAD414;
          *(_QWORD *)(v490 + 24) = v488;
          v491 = swift_allocObject();
          *(double *)(v491 + 16) = v141;
          v575 = (os_log_t)swift_allocObject();
          *(double *)&v575[2].isa = v142;
          v576 = swift_allocObject();
          *(double *)(v576 + 16) = v281;
          v611 = (void (*)(char *, uint64_t))swift_allocObject();
          v492 = v540;
          *((_QWORD *)v611 + 2) = v540;
          v560 = swift_allocObject();
          *(_QWORD *)(v560 + 16) = v489;
          v562 = swift_allocObject();
          *(_QWORD *)(v562 + 16) = v551;
          v563 = swift_allocObject();
          *(_QWORD *)(v563 + 16) = v625;
          swift_retain();
          v493 = v492;
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          v542 = (os_log_t)sub_1B8CE0EC4();
          v541 = sub_1B8CE15C0();
          v543 = swift_allocObject();
          *(_BYTE *)(v543 + 16) = 34;
          v494 = swift_allocObject();
          *(_BYTE *)(v494 + 16) = 8;
          v495 = v494;
          v496 = swift_allocObject();
          *(_QWORD *)(v496 + 16) = sub_1B8CAD1A8;
          *(_QWORD *)(v496 + 24) = v490;
          v497 = swift_allocObject();
          v544 = v497;
          *(_QWORD *)(v497 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v497 + 24) = v496;
          v547 = swift_allocObject();
          *(_BYTE *)(v547 + 16) = 2;
          v548 = swift_allocObject();
          *(_BYTE *)(v548 + 16) = 8;
          v498 = swift_allocObject();
          *(_QWORD *)(v498 + 16) = sub_1B8CAD1D0;
          *(_QWORD *)(v498 + 24) = v491;
          v499 = swift_allocObject();
          v565 = v499;
          *(_QWORD *)(v499 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v499 + 24) = v498;
          v568 = (uint8_t *)swift_allocObject();
          v568[16] = 2;
          v500 = (uint8_t *)swift_allocObject();
          v500[16] = 8;
          v501 = swift_allocObject();
          v502 = v575;
          *(_QWORD *)(v501 + 16) = sub_1B8CAD1D0;
          *(_QWORD *)(v501 + 24) = v502;
          v503 = swift_allocObject();
          v555 = v503;
          *(_QWORD *)(v503 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v503 + 24) = v501;
          v504 = v500;
          v549 = v500;
          v564 = swift_allocObject();
          *(_BYTE *)(v564 + 16) = 2;
          v574 = (os_log_t)swift_allocObject();
          LOBYTE(v574[2].isa) = 8;
          v505 = swift_allocObject();
          v506 = v576;
          *(_QWORD *)(v505 + 16) = sub_1B8CAD1D0;
          *(_QWORD *)(v505 + 24) = v506;
          v507 = (_QWORD *)swift_allocObject();
          v573 = v507;
          v507[2] = sub_1B8CAD1A4;
          v507[3] = v505;
          v556 = (uint8_t *)swift_allocObject();
          v556[16] = 66;
          v576 = swift_allocObject();
          *(_BYTE *)(v576 + 16) = 8;
          v508 = swift_allocObject();
          v509 = v611;
          *(_QWORD *)(v508 + 16) = sub_1B8CAD40C;
          *(_QWORD *)(v508 + 24) = v509;
          v510 = swift_allocObject();
          v575 = v510;
          v510[2].isa = (Class)sub_1B8CAD1B4;
          v510[3].isa = (Class)v508;
          v511 = swift_allocObject();
          *(_BYTE *)(v511 + 16) = 34;
          v512 = v511;
          v611 = (void (*)(char *, uint64_t))swift_allocObject();
          *((_BYTE *)v611 + 16) = 8;
          v513 = swift_allocObject();
          v514 = v560;
          *(_QWORD *)(v513 + 16) = sub_1B8CAD410;
          *(_QWORD *)(v513 + 24) = v514;
          v515 = swift_allocObject();
          *(_QWORD *)(v515 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v515 + 24) = v513;
          v550 = swift_allocObject();
          LOBYTE(v550[2].isa) = 34;
          v558 = (uint8_t *)swift_allocObject();
          v558[16] = 8;
          v516 = swift_allocObject();
          v517 = v562;
          *(_QWORD *)(v516 + 16) = sub_1B8CAD410;
          *(_QWORD *)(v516 + 24) = v517;
          v518 = swift_allocObject();
          v560 = v518;
          *(_QWORD *)(v518 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v518 + 24) = v516;
          v562 = swift_allocObject();
          *(_BYTE *)(v562 + 16) = 34;
          v557 = swift_allocObject();
          *(_BYTE *)(v557 + 16) = 8;
          v519 = swift_allocObject();
          v520 = v563;
          *(_QWORD *)(v519 + 16) = sub_1B8CAD410;
          *(_QWORD *)(v519 + 24) = v520;
          v521 = swift_allocObject();
          v563 = v521;
          *(_QWORD *)(v521 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v521 + 24) = v519;
          v522 = swift_allocObject();
          *(_OWORD *)(v522 + 16) = v545;
          *(_QWORD *)(v522 + 32) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 40) = v543;
          *(_QWORD *)(v522 + 48) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 56) = v495;
          *(_QWORD *)(v522 + 64) = sub_1B8CAD1BC;
          *(_QWORD *)(v522 + 72) = v544;
          *(_QWORD *)(v522 + 80) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 88) = v547;
          *(_QWORD *)(v522 + 96) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 104) = v548;
          *(_QWORD *)(v522 + 112) = sub_1B8CAD1C0;
          *(_QWORD *)(v522 + 120) = v565;
          *(_QWORD *)(v522 + 128) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 136) = v568;
          *(_QWORD *)(v522 + 144) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 152) = v504;
          *(_QWORD *)(v522 + 160) = sub_1B8CAD1C0;
          *(_QWORD *)(v522 + 168) = v555;
          *(_QWORD *)(v522 + 176) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 184) = v564;
          *(_QWORD *)(v522 + 192) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 200) = v574;
          *(_QWORD *)(v522 + 208) = sub_1B8CAD1C0;
          *(_QWORD *)(v522 + 216) = v573;
          *(_QWORD *)(v522 + 224) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 232) = v556;
          *(_QWORD *)(v522 + 240) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 248) = v576;
          *(_QWORD *)(v522 + 256) = sub_1B8CAD1C4;
          *(_QWORD *)(v522 + 264) = v575;
          *(_QWORD *)(v522 + 272) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 280) = v512;
          *(_QWORD *)(v522 + 288) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 296) = v611;
          *(_QWORD *)(v522 + 304) = sub_1B8CAD1BC;
          *(_QWORD *)(v522 + 312) = v515;
          *(_QWORD *)(v522 + 320) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 328) = v550;
          *(_QWORD *)(v522 + 336) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 344) = v558;
          *(_QWORD *)(v522 + 352) = sub_1B8CAD1BC;
          *(_QWORD *)(v522 + 360) = v560;
          *(_QWORD *)(v522 + 368) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 376) = v562;
          *(_QWORD *)(v522 + 384) = sub_1B8CAD1C8;
          *(_QWORD *)(v522 + 392) = v557;
          *(_QWORD *)(v522 + 400) = sub_1B8CAD1BC;
          *(_QWORD *)(v522 + 408) = v563;
          swift_retain();
          v539 = v495;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v538 = v512;
          swift_retain();
          swift_retain();
          v540 = (_BYTE *)v515;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v523 = v542;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v523, (os_log_type_t)v541))
          {
            v524 = v539;
            v525 = (uint8_t *)sub_1B8CC4638();
            v526 = swift_slowAlloc();
            v527 = (uint8_t *)swift_slowAlloc();
            v535 = v526;
            v631 = v526;
            v536 = v527;
            v630 = (uint64_t)v527;
            v537 = v525;
            *(_WORD *)v525 = 2050;
            *(_QWORD *)&v627 = v525 + 2;
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v543;
            v145 = v615;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            if (!v145)
            {
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v524;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v528 = v568;
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v544;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v529 = v547;
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v529;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v548;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C0;
              *((_QWORD *)&v629 + 1) = v565;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v528;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v549;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C0;
              *((_QWORD *)&v629 + 1) = v555;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v564;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v574;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C0;
              *((_QWORD *)&v629 + 1) = v573;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v556;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v576;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C4;
              *((_QWORD *)&v629 + 1) = v575;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v538;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v611;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v540;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v550;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v558;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v560;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v562;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v557;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v563;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v615 = 0;
              swift_release();
              _os_log_impl(&dword_1B8C64000, v542, (os_log_type_t)v541, "%{public}s has an interpolated (backlightProgress: %{public}f, unlockProgress: %{public}f) scale value '%{public}f' that is negative for layer '%{public}@' which is not expected! SleepValue: %{public}s, LockValue: %{public}s), HomeValue: %{public}s.", v537, 0x52u);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED566CB8);
              v530 = v535;
              swift_arrayDestroy();
              MEMORY[0x1BCCB9588](v530, -1, -1);
              v531 = v536;
              swift_arrayDestroy();
              MEMORY[0x1BCCB9588](v531, -1, -1);
              sub_1B8CC4684();
            }
            goto LABEL_190;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v484 = *(void (**)(char *, uint64_t))(v593 + 8);
          v485 = &v615;
LABEL_174:
          v486 = (char *)*(v485 - 32);
          v129 = v622;
          v611 = v484;
          v484(v486, v622);
          v133 = v610;
          v225 = v596;
          sub_1B8C84230(0, (unint64_t *)&unk_1EF1D4200);
          sub_1B8C9B400(fabs(v281));
          v626 = &unk_1EF1EC238;
          v145 = swift_dynamicCastObjCProtocolUnconditional();
LABEL_146:
          *(_QWORD *)&v629 = v145;
          swift_unknownObjectRetain();
          v335 = swift_dynamicCast();
          v576 = (uint64_t)v145;
          if ((v335 & 1) != 0 && (~(_QWORD)v627 & 0x7FF0000000000000) == 0 && (v627 & 0xFFFFFFFFFFFFFLL) != 0)
          {
            v613(v591, v614, v129);
            v336 = swift_allocObject();
            *(_QWORD *)(v336 + 16) = sub_1B8CABB54;
            *(_QWORD *)(v336 + 24) = v133;
            v337 = swift_allocObject();
            *(_QWORD *)(v337 + 16) = v170;
            *(_QWORD *)(v337 + 24) = v171;
            v338 = swift_allocObject();
            *(_QWORD *)(v338 + 16) = sub_1B8CAD414;
            *(_QWORD *)(v338 + 24) = v133;
            swift_retain_n();
            swift_bridgeObjectRetain();
            v611 = (void (*)(char *, uint64_t))sub_1B8CE0EC4();
            LODWORD(v565) = sub_1B8CE15C0();
            v602 = (_BYTE *)swift_allocObject();
            v602[16] = 34;
            v575 = (os_log_t)swift_allocObject();
            LOBYTE(v575[2].isa) = 8;
            v339 = swift_allocObject();
            *(_QWORD *)(v339 + 16) = sub_1B8CABB6C;
            *(_QWORD *)(v339 + 24) = v336;
            v340 = swift_allocObject();
            v340[2].isa = (Class)sub_1B8CAD1A4;
            v340[3].isa = (Class)v339;
            v341 = v340;
            v574 = v340;
            v562 = swift_allocObject();
            *(_BYTE *)(v562 + 16) = 34;
            v573 = (_BYTE *)swift_allocObject();
            v573[16] = 8;
            v342 = swift_allocObject();
            *(_QWORD *)(v342 + 16) = sub_1B8CAD418;
            *(_QWORD *)(v342 + 24) = v337;
            v343 = swift_allocObject();
            v563 = v343;
            *(_QWORD *)(v343 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v343 + 24) = v342;
            v344 = (uint8_t *)swift_allocObject();
            v344[16] = 34;
            v568 = v344;
            v564 = swift_allocObject();
            *(_BYTE *)(v564 + 16) = 8;
            v345 = swift_allocObject();
            *(_QWORD *)(v345 + 16) = sub_1B8CAD1A8;
            *(_QWORD *)(v345 + 24) = v338;
            v346 = swift_allocObject();
            *(_QWORD *)(v346 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v346 + 24) = v345;
            v347 = swift_allocObject();
            *(_OWORD *)(v347 + 16) = v561;
            *(_QWORD *)(v347 + 32) = sub_1B8CAD1C8;
            *(_QWORD *)(v347 + 40) = v602;
            *(_QWORD *)(v347 + 48) = sub_1B8CAD1C8;
            *(_QWORD *)(v347 + 56) = v575;
            *(_QWORD *)(v347 + 64) = sub_1B8CAD1BC;
            *(_QWORD *)(v347 + 72) = v341;
            *(_QWORD *)(v347 + 80) = sub_1B8CAD1C8;
            *(_QWORD *)(v347 + 88) = v562;
            *(_QWORD *)(v347 + 96) = sub_1B8CAD1C8;
            *(_QWORD *)(v347 + 104) = v573;
            *(_QWORD *)(v347 + 112) = sub_1B8CAD1BC;
            *(_QWORD *)(v347 + 120) = v563;
            *(_QWORD *)(v347 + 128) = sub_1B8CAD1C8;
            *(_QWORD *)(v347 + 136) = v344;
            *(_QWORD *)(v347 + 144) = sub_1B8CAD1C8;
            *(_QWORD *)(v347 + 152) = v564;
            *(_QWORD *)(v347 + 160) = sub_1B8CAD1BC;
            *(_QWORD *)(v347 + 168) = v346;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled((os_log_t)v611, (os_log_type_t)v565))
            {
              v348 = v574;
              v349 = v575;
              v350 = v573;
              v351 = v568;
              v560 = v346;
              v352 = (uint8_t *)sub_1B8CC4638();
              v353 = swift_slowAlloc();
              v631 = 0;
              v557 = v353;
              v630 = v353;
              v558 = v352;
              *(_WORD *)v352 = 770;
              *(_QWORD *)&v627 = v352 + 2;
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v602;
              v145 = v615;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              if (!v145)
              {
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v349;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                v354 = v350;
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v348;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                v355 = v562;
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v355;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v354;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v563;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v351;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v564;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v560;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                v615 = 0;
                swift_release();
                _os_log_impl(&dword_1B8C64000, (os_log_t)v611, (os_log_type_t)v565, "Invalid value during animation (snapshot: %{public}s, keyPath: %{public}s, level: %{public}s)", v558, 0x20u);
                v356 = v557;
                swift_arrayDestroy();
                MEMORY[0x1BCCB9588](v356, -1, -1);
                sub_1B8CC4684();
              }
              goto LABEL_190;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v129 = v622;
            (*(void (**)(char *, uint64_t))(v593 + 8))(v591, v622);
            v613(v590, v614, v129);
            v372 = swift_allocObject();
            *(_QWORD *)(v372 + 16) = sub_1B8CABB54;
            *(_QWORD *)(v372 + 24) = v133;
            v373 = swift_allocObject();
            *(_QWORD *)(v373 + 16) = v170;
            *(_QWORD *)(v373 + 24) = v171;
            v374 = swift_allocObject();
            *(_QWORD *)(v374 + 16) = sub_1B8CAD414;
            *(_QWORD *)(v374 + 24) = v133;
            swift_retain_n();
            v573 = (_BYTE *)sub_1B8CE0EC4();
            LODWORD(v575) = sub_1B8CE15B4();
            v611 = (void (*)(char *, uint64_t))swift_allocObject();
            *((_BYTE *)v611 + 16) = 34;
            v564 = swift_allocObject();
            *(_BYTE *)(v564 + 16) = 8;
            v375 = swift_allocObject();
            *(_QWORD *)(v375 + 16) = sub_1B8CAD1AC;
            *(_QWORD *)(v375 + 24) = v372;
            v376 = swift_allocObject();
            *(_QWORD *)(v376 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v376 + 24) = v375;
            v377 = swift_allocObject();
            *(_BYTE *)(v377 + 16) = 34;
            v378 = v377;
            v563 = swift_allocObject();
            *(_BYTE *)(v563 + 16) = 8;
            v379 = swift_allocObject();
            *(_QWORD *)(v379 + 16) = sub_1B8CAD418;
            *(_QWORD *)(v379 + 24) = v373;
            v380 = swift_allocObject();
            v380[2].isa = (Class)sub_1B8CAD1A4;
            v380[3].isa = (Class)v379;
            v602 = (_BYTE *)swift_allocObject();
            v602[16] = 34;
            v381 = (uint8_t *)swift_allocObject();
            v381[16] = 8;
            v382 = swift_allocObject();
            *(_QWORD *)(v382 + 16) = sub_1B8CAD1A8;
            *(_QWORD *)(v382 + 24) = v374;
            v383 = swift_allocObject();
            *(_QWORD *)(v383 + 16) = sub_1B8CAD1A4;
            *(_QWORD *)(v383 + 24) = v382;
            v384 = v380;
            v574 = v380;
            v385 = swift_allocObject();
            *(_OWORD *)(v385 + 16) = v561;
            *(_QWORD *)(v385 + 32) = sub_1B8CAD1C8;
            *(_QWORD *)(v385 + 40) = v611;
            *(_QWORD *)(v385 + 48) = sub_1B8CAD1C8;
            v145 = v564;
            *(_QWORD *)(v385 + 56) = v564;
            *(_QWORD *)(v385 + 64) = sub_1B8CAD1BC;
            *(_QWORD *)(v385 + 72) = v376;
            *(_QWORD *)(v385 + 80) = sub_1B8CAD1C8;
            v386 = v378;
            *(_QWORD *)(v385 + 88) = v378;
            *(_QWORD *)(v385 + 96) = sub_1B8CAD1C8;
            v387 = v563;
            *(_QWORD *)(v385 + 104) = v563;
            *(_QWORD *)(v385 + 112) = sub_1B8CAD1BC;
            *(_QWORD *)(v385 + 120) = v384;
            *(_QWORD *)(v385 + 128) = sub_1B8CAD1C8;
            *(_QWORD *)(v385 + 136) = v602;
            *(_QWORD *)(v385 + 144) = sub_1B8CAD1C8;
            *(_QWORD *)(v385 + 152) = v381;
            *(_QWORD *)(v385 + 160) = sub_1B8CAD1BC;
            *(_QWORD *)(v385 + 168) = v383;
            swift_retain();
            swift_retain();
            v565 = v376;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            v568 = v381;
            swift_retain();
            swift_retain();
            v388 = v573;
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v388, (os_log_type_t)v575))
            {
              v389 = v145;
              v390 = v565;
              v560 = v386;
              v391 = v387;
              v392 = v602;
              v562 = v383;
              v393 = (uint8_t *)sub_1B8CC4638();
              v394 = swift_slowAlloc();
              v631 = 0;
              v557 = v394;
              v630 = v394;
              v558 = v393;
              *(_WORD *)v393 = 770;
              *(_QWORD *)&v627 = v393 + 2;
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v611;
              v145 = v615;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              if (!v145)
              {
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v389;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v390;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v560;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v391;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v574;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                v395 = v573;
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v392;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1C8;
                *((_QWORD *)&v629 + 1) = v568;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                swift_release();
                *(_QWORD *)&v629 = sub_1B8CAD1BC;
                *((_QWORD *)&v629 + 1) = v562;
                sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
                v615 = 0;
                swift_release();
                _os_log_impl(&dword_1B8C64000, v395, (os_log_type_t)v575, "Invalid value during animation (snapshot: %{public}s, keyPath: %{public}s, level: %{public}s)", v558, 0x20u);
                v396 = v557;
                swift_arrayDestroy();
                MEMORY[0x1BCCB9588](v396, -1, -1);
                sub_1B8CC4684();
              }
              goto LABEL_190;
            }
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            v397 = *(void (**)(char *, uint64_t))(v593 + 8);
            v398 = v590;
            goto LABEL_165;
          }
          v613(v225, v614, v129);
          v357 = swift_allocObject();
          *(_QWORD *)(v357 + 16) = v145;
          v358 = swift_allocObject();
          *(_QWORD *)(v358 + 16) = v170;
          *(_QWORD *)(v358 + 24) = v171;
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v575 = (os_log_t)sub_1B8CE0EC4();
          LODWORD(v574) = sub_1B8CE15A8();
          v359 = (_BYTE *)swift_allocObject();
          v359[16] = 32;
          v360 = swift_allocObject();
          *(_BYTE *)(v360 + 16) = 8;
          v361 = swift_allocObject();
          *(_QWORD *)(v361 + 16) = sub_1B8CAD410;
          *(_QWORD *)(v361 + 24) = v357;
          v362 = swift_allocObject();
          *(_QWORD *)(v362 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v362 + 24) = v361;
          v363 = swift_allocObject();
          *(_BYTE *)(v363 + 16) = 32;
          v364 = swift_allocObject();
          *(_BYTE *)(v364 + 16) = 8;
          v365 = swift_allocObject();
          *(_QWORD *)(v365 + 16) = sub_1B8CAD418;
          *(_QWORD *)(v365 + 24) = v358;
          v366 = swift_allocObject();
          *(_QWORD *)(v366 + 16) = sub_1B8CAD1A4;
          *(_QWORD *)(v366 + 24) = v365;
          v367 = swift_allocObject();
          *(_OWORD *)(v367 + 16) = v608;
          *(_QWORD *)(v367 + 32) = sub_1B8CAD1C8;
          *(_QWORD *)(v367 + 40) = v359;
          *(_QWORD *)(v367 + 48) = sub_1B8CAD1C8;
          *(_QWORD *)(v367 + 56) = v360;
          *(_QWORD *)(v367 + 64) = sub_1B8CAD1BC;
          *(_QWORD *)(v367 + 72) = v362;
          *(_QWORD *)(v367 + 80) = sub_1B8CAD1C8;
          *(_QWORD *)(v367 + 88) = v363;
          *(_QWORD *)(v367 + 96) = sub_1B8CAD1C8;
          *(_QWORD *)(v367 + 104) = v364;
          *(_QWORD *)(v367 + 112) = sub_1B8CAD1BC;
          *(_QWORD *)(v367 + 120) = v366;
          v573 = v359;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v368 = v575;
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v368, (os_log_type_t)v574))
          {
            v369 = (uint8_t *)sub_1B8CC4638();
            v370 = swift_slowAlloc();
            v631 = 0;
            v630 = v370;
            v568 = v369;
            *(_WORD *)v369 = 514;
            *(_QWORD *)&v627 = v369 + 2;
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v573;
            v145 = v615;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            if (!v145)
            {
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v360;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v362;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v363;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1C8;
              *((_QWORD *)&v629 + 1) = v364;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              swift_release();
              *(_QWORD *)&v629 = sub_1B8CAD1BC;
              *((_QWORD *)&v629 + 1) = v366;
              sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
              v615 = 0;
              swift_release();
              _os_log_impl(&dword_1B8C64000, v575, (os_log_type_t)v574, "Setting value %s for key path \"%s\"", v568, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1BCCB9588](v370, -1, -1);
              sub_1B8CC4684();
            }
            goto LABEL_190;
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          v129 = v622;
          v611(v596, v622);
          v130 = v618;
          v132 = v619;
          v145 = v576;
          swift_unknownObjectRetain();
          v371 = (void *)sub_1B8CE1494();
          swift_bridgeObjectRelease();
          objc_msgSend(v602, sel_setValue_forKeyPath_, v145, v371);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          swift_unknownObjectRelease_n();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v133 = v610;
LABEL_108:
          v131 = v620;
LABEL_123:
          v164 = (uint64_t)v624;
          v163 = (unint64_t)v623;
          if (v623)
            goto LABEL_65;
        }
        swift_unknownObjectRelease();
LABEL_167:
        v613(v586, v614, v129);
        v424 = swift_allocObject();
        *(_QWORD *)(v424 + 16) = sub_1B8CAD414;
        *(_QWORD *)(v424 + 24) = v133;
        v425 = swift_allocObject();
        *(double *)(v425 + 16) = v141;
        v426 = swift_allocObject();
        *(double *)(v426 + 16) = v142;
        v427 = swift_allocObject();
        *(double *)(v427 + 16) = v281;
        v550 = swift_allocObject();
        v550[2].isa = (Class)v282;
        swift_retain();
        v551 = v282;
        v573 = (_BYTE *)sub_1B8CE0EC4();
        LODWORD(v557) = sub_1B8CE15B4();
        v562 = swift_allocObject();
        *(_BYTE *)(v562 + 16) = 34;
        v428 = swift_allocObject();
        *(_BYTE *)(v428 + 16) = 8;
        v429 = swift_allocObject();
        *(_QWORD *)(v429 + 16) = sub_1B8CAD1A8;
        *(_QWORD *)(v429 + 24) = v424;
        v430 = swift_allocObject();
        v563 = v430;
        *(_QWORD *)(v430 + 16) = sub_1B8CAD1A4;
        *(_QWORD *)(v430 + 24) = v429;
        v565 = swift_allocObject();
        *(_BYTE *)(v565 + 16) = 2;
        v564 = swift_allocObject();
        *(_BYTE *)(v564 + 16) = 8;
        v431 = swift_allocObject();
        *(_QWORD *)(v431 + 16) = sub_1B8CAD1D0;
        *(_QWORD *)(v431 + 24) = v425;
        v432 = swift_allocObject();
        v568 = (uint8_t *)v432;
        *(_QWORD *)(v432 + 16) = sub_1B8CAD1A4;
        *(_QWORD *)(v432 + 24) = v431;
        v574 = (os_log_t)swift_allocObject();
        LOBYTE(v574[2].isa) = 2;
        v611 = (void (*)(char *, uint64_t))swift_allocObject();
        *((_BYTE *)v611 + 16) = 8;
        v433 = swift_allocObject();
        *(_QWORD *)(v433 + 16) = sub_1B8CAD1D0;
        *(_QWORD *)(v433 + 24) = v426;
        v434 = swift_allocObject();
        v558 = (uint8_t *)v434;
        *(_QWORD *)(v434 + 16) = sub_1B8CAD1A4;
        *(_QWORD *)(v434 + 24) = v433;
        v560 = v428;
        v576 = swift_allocObject();
        *(_BYTE *)(v576 + 16) = 2;
        v575 = (os_log_t)swift_allocObject();
        LOBYTE(v575[2].isa) = 8;
        v435 = swift_allocObject();
        *(_QWORD *)(v435 + 16) = sub_1B8CAD1D0;
        *(_QWORD *)(v435 + 24) = v427;
        v436 = swift_allocObject();
        v556 = (uint8_t *)v436;
        *(_QWORD *)(v436 + 16) = sub_1B8CAD1A4;
        *(_QWORD *)(v436 + 24) = v435;
        v437 = swift_allocObject();
        *(_BYTE *)(v437 + 16) = 66;
        v555 = swift_allocObject();
        *(_BYTE *)(v555 + 16) = 8;
        v438 = swift_allocObject();
        v439 = v550;
        *(_QWORD *)(v438 + 16) = sub_1B8CAD40C;
        *(_QWORD *)(v438 + 24) = v439;
        v440 = swift_allocObject();
        *(_QWORD *)(v440 + 16) = sub_1B8CABD28;
        *(_QWORD *)(v440 + 24) = v438;
        v553 = v437;
        v441 = swift_allocObject();
        *(_OWORD *)(v441 + 16) = v554;
        *(_QWORD *)(v441 + 32) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 40) = v562;
        *(_QWORD *)(v441 + 48) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 56) = v428;
        *(_QWORD *)(v441 + 64) = sub_1B8CAD1BC;
        *(_QWORD *)(v441 + 72) = v563;
        *(_QWORD *)(v441 + 80) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 88) = v565;
        *(_QWORD *)(v441 + 96) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 104) = v564;
        *(_QWORD *)(v441 + 112) = sub_1B8CAD1C0;
        *(_QWORD *)(v441 + 120) = v568;
        *(_QWORD *)(v441 + 128) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 136) = v574;
        *(_QWORD *)(v441 + 144) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 152) = v611;
        *(_QWORD *)(v441 + 160) = sub_1B8CAD1C0;
        *(_QWORD *)(v441 + 168) = v558;
        *(_QWORD *)(v441 + 176) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 184) = v576;
        *(_QWORD *)(v441 + 192) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 200) = v575;
        *(_QWORD *)(v441 + 208) = sub_1B8CAD1C0;
        *(_QWORD *)(v441 + 216) = v556;
        *(_QWORD *)(v441 + 224) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 232) = v437;
        *(_QWORD *)(v441 + 240) = sub_1B8CAD1C8;
        *(_QWORD *)(v441 + 248) = v555;
        *(_QWORD *)(v441 + 256) = sub_1B8CABD48;
        *(_QWORD *)(v441 + 264) = v440;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v442 = v558;
        v443 = (uint8_t *)v440;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled((os_log_t)v573, (os_log_type_t)v557))
        {
          v444 = v560;
          v445 = v574;
          v446 = v442;
          v550 = v443;
          v447 = (uint8_t *)sub_1B8CC4638();
          v448 = swift_slowAlloc();
          v449 = swift_slowAlloc();
          v547 = v448;
          v631 = v448;
          v548 = v449;
          v630 = v449;
          v549 = v447;
          *(_WORD *)v447 = 1282;
          *(_QWORD *)&v627 = v447 + 2;
          *(_QWORD *)&v629 = sub_1B8CAD1C8;
          *((_QWORD *)&v629 + 1) = v562;
          v145 = v615;
          sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
          if (!v145)
          {
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v444;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            v450 = v564;
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1BC;
            *((_QWORD *)&v629 + 1) = v563;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            v451 = v565;
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v451;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v450;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C0;
            *((_QWORD *)&v629 + 1) = v568;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v445;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v611;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C0;
            *((_QWORD *)&v629 + 1) = v446;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v576;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v575;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C0;
            *((_QWORD *)&v629 + 1) = v556;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v553;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v555;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CABD48;
            *((_QWORD *)&v629 + 1) = v550;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            v615 = 0;
            swift_release();
            _os_log_impl(&dword_1B8C64000, (os_log_t)v573, (os_log_type_t)v557, "%{public}s has an interpolated (backlightProgress: %{public}f, unlockProgress: %{public}f) scale value '%{public}f' that is negative for layer '%{public}@' which is not expected! Correcting value.", v549, 0x34u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED566CB8);
            v452 = v547;
            swift_arrayDestroy();
            MEMORY[0x1BCCB9588](v452, -1, -1);
            v453 = v548;
            swift_arrayDestroy();
            MEMORY[0x1BCCB9588](v453, -1, -1);
            sub_1B8CC4684();
          }
          goto LABEL_190;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v454 = v622;
        (*(void (**)(char *, uint64_t))(v593 + 8))(v586, v622);
        v455 = v610;
        v613(v587, v614, v454);
        v456 = swift_allocObject();
        *(_QWORD *)(v456 + 16) = sub_1B8CAD414;
        *(_QWORD *)(v456 + 24) = v455;
        v457 = swift_allocObject();
        *(double *)(v457 + 16) = v141;
        v458 = swift_allocObject();
        *(double *)(v458 + 16) = v142;
        v557 = swift_allocObject();
        *(double *)(v557 + 16) = v281;
        v553 = swift_allocObject();
        v459 = v551;
        *(_QWORD *)(v553 + 16) = v551;
        swift_retain();
        v460 = v459;
        v568 = (uint8_t *)sub_1B8CE0EC4();
        LODWORD(v558) = sub_1B8CE15C0();
        v562 = swift_allocObject();
        *(_BYTE *)(v562 + 16) = 34;
        v560 = swift_allocObject();
        *(_BYTE *)(v560 + 16) = 8;
        v461 = swift_allocObject();
        *(_QWORD *)(v461 + 16) = sub_1B8CAD1A8;
        *(_QWORD *)(v461 + 24) = v456;
        v462 = swift_allocObject();
        *(_QWORD *)(v462 + 16) = sub_1B8CAD1A4;
        *(_QWORD *)(v462 + 24) = v461;
        v564 = swift_allocObject();
        *(_BYTE *)(v564 + 16) = 2;
        v565 = swift_allocObject();
        *(_BYTE *)(v565 + 16) = 8;
        v463 = swift_allocObject();
        *(_QWORD *)(v463 + 16) = sub_1B8CAD1D0;
        *(_QWORD *)(v463 + 24) = v457;
        v464 = swift_allocObject();
        v574 = v464;
        v464[2].isa = (Class)sub_1B8CAD1A4;
        v464[3].isa = (Class)v463;
        v465 = v462;
        v563 = v462;
        v576 = swift_allocObject();
        *(_BYTE *)(v576 + 16) = 2;
        v611 = (void (*)(char *, uint64_t))swift_allocObject();
        *((_BYTE *)v611 + 16) = 8;
        v466 = swift_allocObject();
        *(_QWORD *)(v466 + 16) = sub_1B8CAD1D0;
        *(_QWORD *)(v466 + 24) = v458;
        v467 = swift_allocObject();
        v575 = v467;
        v467[2].isa = (Class)sub_1B8CAD1A4;
        v467[3].isa = (Class)v466;
        v573 = (_BYTE *)swift_allocObject();
        v573[16] = 2;
        v468 = swift_allocObject();
        *(_BYTE *)(v468 + 16) = 8;
        v469 = swift_allocObject();
        v470 = v557;
        *(_QWORD *)(v469 + 16) = sub_1B8CAD1D0;
        *(_QWORD *)(v469 + 24) = v470;
        v471 = swift_allocObject();
        v556 = (uint8_t *)v471;
        *(_QWORD *)(v471 + 16) = sub_1B8CAD1A4;
        *(_QWORD *)(v471 + 24) = v469;
        v557 = swift_allocObject();
        *(_BYTE *)(v557 + 16) = 66;
        v472 = swift_allocObject();
        *(_BYTE *)(v472 + 16) = 8;
        v473 = swift_allocObject();
        v474 = v553;
        *(_QWORD *)(v473 + 16) = sub_1B8CAD40C;
        *(_QWORD *)(v473 + 24) = v474;
        v475 = swift_allocObject();
        *(_QWORD *)(v475 + 16) = sub_1B8CAD1B4;
        *(_QWORD *)(v475 + 24) = v473;
        v555 = v468;
        v476 = swift_allocObject();
        *(_OWORD *)(v476 + 16) = v554;
        *(_QWORD *)(v476 + 32) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 40) = v562;
        *(_QWORD *)(v476 + 48) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 56) = v560;
        *(_QWORD *)(v476 + 64) = sub_1B8CAD1BC;
        *(_QWORD *)(v476 + 72) = v465;
        *(_QWORD *)(v476 + 80) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 88) = v564;
        *(_QWORD *)(v476 + 96) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 104) = v565;
        *(_QWORD *)(v476 + 112) = sub_1B8CAD1C0;
        *(_QWORD *)(v476 + 120) = v574;
        *(_QWORD *)(v476 + 128) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 136) = v576;
        *(_QWORD *)(v476 + 144) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 152) = v611;
        *(_QWORD *)(v476 + 160) = sub_1B8CAD1C0;
        *(_QWORD *)(v476 + 168) = v575;
        *(_QWORD *)(v476 + 176) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 184) = v573;
        *(_QWORD *)(v476 + 192) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 200) = v468;
        *(_QWORD *)(v476 + 208) = sub_1B8CAD1C0;
        *(_QWORD *)(v476 + 216) = v556;
        *(_QWORD *)(v476 + 224) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 232) = v557;
        *(_QWORD *)(v476 + 240) = sub_1B8CAD1C8;
        *(_QWORD *)(v476 + 248) = v472;
        *(_QWORD *)(v476 + 256) = sub_1B8CAD1C4;
        *(_QWORD *)(v476 + 264) = v475;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled((os_log_t)v568, (os_log_type_t)v558))
        {
          v477 = v560;
          v553 = v475;
          v551 = (_BYTE *)v472;
          v478 = (uint8_t *)sub_1B8CC4638();
          v479 = swift_slowAlloc();
          v480 = (uint8_t *)swift_slowAlloc();
          v548 = v479;
          v631 = v479;
          v549 = v480;
          v630 = (uint64_t)v480;
          v550 = v478;
          *(_WORD *)v478 = 1282;
          *(_QWORD *)&v627 = v478 + 2;
          *(_QWORD *)&v629 = sub_1B8CAD1C8;
          *((_QWORD *)&v629 + 1) = v562;
          v145 = v615;
          sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
          if (!v145)
          {
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v477;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            v481 = v564;
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1BC;
            *((_QWORD *)&v629 + 1) = v563;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v481;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v565;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C0;
            *((_QWORD *)&v629 + 1) = v574;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v576;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v611;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C0;
            *((_QWORD *)&v629 + 1) = v575;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v573;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v555;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C0;
            *((_QWORD *)&v629 + 1) = v556;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v557;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C8;
            *((_QWORD *)&v629 + 1) = v551;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            swift_release();
            *(_QWORD *)&v629 = sub_1B8CAD1C4;
            *((_QWORD *)&v629 + 1) = v553;
            sub_1B8CC4650((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v629, (uint64_t)&v627, (uint64_t)&v631, (uint64_t)&v630);
            v615 = 0;
            swift_release();
            _os_log_impl(&dword_1B8C64000, (os_log_t)v568, (os_log_type_t)v558, "%{public}s has an interpolated (backlightProgress: %{public}f, unlockProgress: %{public}f) scale value '%{public}f' that is negative for layer '%{public}@' which is not expected! Correcting value.", (uint8_t *)v550, 0x34u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED566CB8);
            v482 = v548;
            swift_arrayDestroy();
            MEMORY[0x1BCCB9588](v482, -1, -1);
            v483 = v549;
            swift_arrayDestroy();
            MEMORY[0x1BCCB9588](v483, -1, -1);
            sub_1B8CC4684();
          }
          goto LABEL_190;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v484 = *(void (**)(char *, uint64_t))(v593 + 8);
        v485 = (uint64_t *)&v618;
        goto LABEL_174;
      }
      v156 = v154 + 1;
      if (v154 + 1 < v570)
      {
        v155 = *(_QWORD *)(v569 + 8 * v156);
        if (v155)
          goto LABEL_59;
        v156 = v154 + 2;
        if (v154 + 2 < v570)
        {
          v155 = *(_QWORD *)(v569 + 8 * v156);
          if (!v155)
          {
            v156 = v154 + 3;
            if (v154 + 3 < v570)
            {
              v155 = *(_QWORD *)(v569 + 8 * v156);
              if (v155)
                goto LABEL_59;
              while (1)
              {
                v154 = v156 + 1;
                if (__OFADD__(v156, 1))
                  goto LABEL_188;
                if (v154 >= v570)
                  goto LABEL_183;
                v155 = *(_QWORD *)(v569 + 8 * v154);
                ++v156;
                if (v155)
                  goto LABEL_60;
              }
            }
            goto LABEL_183;
          }
LABEL_59:
          v154 = v156;
          goto LABEL_60;
        }
      }
    }
LABEL_183:
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B8C9B270(v546);
    sub_1B8CA11F4((uint64_t)v585);
    sub_1B8CA11F4((uint64_t)v588);
    sub_1B8CA11F4((uint64_t)v598);
    v128 = (uint64_t)v597;
    goto LABEL_184;
  }
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:

  __break(1u);
  __break(1u);
}

uint64_t sub_1B8CAB7E8()
{
  return swift_deallocObject();
}

double sub_1B8CAB7F8()
{
  uint64_t v0;

  return *(double *)(v0 + 16) * 57.2957795;
}

uint64_t sub_1B8CAB80C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB81C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1B8CAB824()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB834()
{
  uint64_t v0;

  return sub_1B8C9B364(v0);
}

uint64_t sub_1B8CAB84C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB85C()
{
  return sub_1B8C9B1EC();
}

uint64_t sub_1B8CAB864()
{
  return swift_deallocObject();
}

_BYTE **sub_1B8CAB874(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B8CC4D40(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1B8CAB87C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB88C()
{
  uint64_t v0;

  return sub_1B8CAFB60(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1B8CAB894(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B8CAFB80(a1, a2, a3, *(void (**)(void))(v3 + 16));
}

uint64_t sub_1B8CAB89C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB8AC()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB8BC()
{
  uint64_t v0;

  return sub_1B8CD5E20(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1B8CAB8C4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1B8CD5E44(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1B8CAB8CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1B8CD5D34(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_1B8CAB8D4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB8E4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB8F4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB904()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB914(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1B8CC4690(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1B8CAB91C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB92C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB93C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB94C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB95C()
{
  uint64_t v0;

  return sub_1B8CBC1D8(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1B8CAB964()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B8CAB988()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB998()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB9A8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB9B8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB9C8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB9D8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB9E8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAB9F8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABA08()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABA18()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABA28()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABA38()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABA48()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABA58()
{
  uint64_t v0;

  return sub_1B8C9B3B8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B8CABA70()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABA80()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABA90()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABAA0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABAB0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABAC0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABAD0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABAE0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABAF0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B8CABB14()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABB24()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABB34()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABB44()
{
  return swift_deallocObject();
}

id sub_1B8CABB54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8C9B434(v1, a1);
}

uint64_t sub_1B8CABB6C()
{
  uint64_t v0;

  return sub_1B8CBC17C(*(void (**)(_QWORD *__return_ptr))(v0 + 16));
}

uint64_t sub_1B8CABB74()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABB84()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABB94()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABBA4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABBB4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABBC4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABBD4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABBE4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABBF4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABC04()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABC14()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABC24()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABC34()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABC44()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABC54()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABC64()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1B8CABC88()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABC98()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABCA8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABCB8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABCC8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABCD8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABCE8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABCF8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABD08()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABD18()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABD28()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1B8CABD48(uint64_t *a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v3;

  sub_1B8C9C548(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1B8CABD50()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABD60()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABD70()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABD80()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABD90()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABDA0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABDB0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABDC0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABDD0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABDE0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABDF0()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABE00()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABE10()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABE20()
{
  return swift_deallocObject();
}

double sub_1B8CABE30()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t sub_1B8CABE38()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABE48()
{
  return swift_deallocObject();
}

id sub_1B8CABE58()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_1B8CABE60()
{
  uint64_t v0;

  return sub_1B8C9B4B8(*(void **)(v0 + 16));
}

uint64_t sub_1B8CABE78()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABE88()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABE98()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABEA8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABEB8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABEC8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABED8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABEE8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABEF8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF08()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF18()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF28()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF38()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF48()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF58()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF68()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF78()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF88()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABF98()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABFA8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABFB8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABFC8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABFD8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABFE8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CABFF8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC008()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC018()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC028()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC038()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC048()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC058()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC068()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC078()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC088()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC098()
{
  return swift_deallocObject();
}

void sub_1B8CAC0A8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t sub_1B8CAC0B4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC0C4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC0D4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC0E4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC0F4()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC104()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16))
    return 0;
  else
    return 762212206;
}

uint64_t sub_1B8CAC128()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1B8CAC154()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC164()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC174()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8CAC198()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC1A8()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CAC1B8()
{
  return swift_release();
}

uint64_t sub_1B8CAC1C0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

unint64_t sub_1B8CAC1FC(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    v12 = *(void **)(a2 + 56);
    v24 = *(_QWORD *)(a2 + 64);
    v25 = *(_QWORD *)(a2 + 72);
    v26 = *(_QWORD *)(a2 + 80);
    v27 = *(_QWORD *)(a2 + 88);
    v28 = *(_QWORD *)(a2 + 96);
    v29 = *(_QWORD *)(a2 + 104);
    v30 = *(_BYTE *)(a2 + 112);
    sub_1B8C85798(*(_QWORD *)a2, v7, v8, v9, v10, v11, v13, v12, v24, v25, v26, v27, v28, v29, v30);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v24;
    *(_QWORD *)(a1 + 72) = v25;
    *(_QWORD *)(a1 + 80) = v26;
    *(_QWORD *)(a1 + 88) = v27;
    *(_QWORD *)(a1 + 96) = v28;
    *(_QWORD *)(a1 + 104) = v29;
    v14 = a3[5];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    *(_BYTE *)(a1 + 112) = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = a3[7];
    *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
    v20 = a1 + v19;
    v21 = a2 + v19;
    v22 = sub_1B8CE0E1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_1B8CAC3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1B8C85880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_1B8CE0F84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_1B8CE0E1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_1B8CAC4AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v22 = *(_QWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  v24 = *(_QWORD *)(a2 + 80);
  v25 = *(_QWORD *)(a2 + 88);
  v26 = *(_QWORD *)(a2 + 96);
  v27 = *(_QWORD *)(a2 + 104);
  v28 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v22, v23, v24, v25, v26, v27, v28);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v22;
  *(_QWORD *)(a1 + 72) = v23;
  *(_QWORD *)(a1 + 80) = v24;
  *(_QWORD *)(a1 + 88) = v25;
  *(_QWORD *)(a1 + 96) = v26;
  *(_QWORD *)(a1 + 104) = v27;
  v13 = a3[5];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *(_BYTE *)(a1 + 112) = v28;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_1B8CE0F84();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1B8CE0E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1B8CAC660(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v35 = *(_QWORD *)(a2 + 64);
  v36 = *(_QWORD *)(a2 + 72);
  v37 = *(_QWORD *)(a2 + 80);
  v38 = *(_QWORD *)(a2 + 88);
  v39 = *(_QWORD *)(a2 + 96);
  v40 = *(_QWORD *)(a2 + 104);
  v41 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v6, v7, v8, v9, v10, v12, v11, v35, v36, v37, v38, v39, v40, v41);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v20 = *(void **)(a1 + 56);
  v21 = *(_OWORD *)(a1 + 64);
  v22 = *(_OWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 96);
  v24 = *(_QWORD *)(a1 + 104);
  v25 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v35;
  *(_QWORD *)(a1 + 72) = v36;
  *(_QWORD *)(a1 + 80) = v37;
  *(_QWORD *)(a1 + 88) = v38;
  *(_QWORD *)(a1 + 96) = v39;
  *(_QWORD *)(a1 + 104) = v40;
  *(_BYTE *)(a1 + 112) = v41;
  sub_1B8C85880(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24, v25);
  if (a1 != a2)
  {
    v26 = a3[5];
    v27 = (_QWORD *)(a1 + v26);
    v28 = (_QWORD *)(a2 + v26);
    sub_1B8C88430(a1 + v26, (uint64_t *)&unk_1ED567170);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v30 = a3[7];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_1B8CE0E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1B8CAC85C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_1B8CE0F84();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1B8CE0E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1B8CAC974(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_BYTE *)(a2 + 112);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(void **)(a1 + 56);
  v15 = *(_OWORD *)(a1 + 64);
  v16 = *(_OWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a1 + 96);
  v18 = *(_QWORD *)(a1 + 104);
  v19 = *(_BYTE *)(a1 + 112);
  v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v20;
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  v22 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v22;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = v6;
  sub_1B8C85880(v7, v8, v9, v10, v11, v12, v13, v14, v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, v18, v19);
  if (a1 != a2)
  {
    v23 = a3[5];
    v24 = (void *)(a1 + v23);
    v25 = (const void *)(a2 + v23);
    sub_1B8C88430(a1 + v23, (uint64_t *)&unk_1ED567170);
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_1B8CE0F84();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
  }
  v28 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1B8CE0E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1B8CACADC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CACAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 112);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1B8CE0E1C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1B8CACB84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CACB90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 112) = -(char)a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1B8CE0E1C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for WKAnimationPackageLayer(uint64_t a1)
{
  return sub_1B8CACC40(a1, (uint64_t *)&unk_1ED565270);
}

uint64_t sub_1B8CACC40(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8CACC74()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B8C86054();
  if (v0 <= 0x3F)
  {
    sub_1B8CE0E1C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1B8CACD18()
{
  return MEMORY[0x1E0CE0788];
}

uint64_t sub_1B8CACD24()
{
  return sub_1B8C83740((unint64_t *)&unk_1ED565260, type metadata accessor for WKAnimationPackageLayer, (uint64_t)&unk_1B8CE6CF0);
}

void sub_1B8CACD50(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  char v13;
  void (*v14)(unsigned __int8 *, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  __int128 v23;
  id v24;
  void *v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  _BOOL4 v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  void *v38;
  __int128 v39;
  int v40;
  id v41;
  __int128 v42;
  unsigned __int8 v43[16];
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  void *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  unsigned __int8 v53;
  unsigned __int8 v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  void *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  unsigned __int8 v64[8];
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  id v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;

  v2 = v1;
  v4 = sub_1B8CE0F84();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD86F8];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v43[-v10 - 16];
  v12 = v1 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_colorScheme;
  swift_beginAccess();
  (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 16))(v11, v12, v4);
  sub_1B8CE1044();
  sub_1B8C83740(&qword_1ED567168, v5, MEMORY[0x1E0CD8718]);
  v13 = sub_1B8CE1488();
  v14 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
  v14(v9, v4);
  v14(v11, v4);
  if ((v13 & 1) == 0)
  {
    sub_1B8CE1044();
    swift_beginAccess();
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 40))(v12, v11, v4);
    swift_endAccess();
  }
  v15 = v2 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot;
  v16 = *(_BYTE *)(v2
                 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                 + 8);
  v17 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                  + 16);
  v18 = *(_BYTE *)(v2
                 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                 + 24);
  v19 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                  + 32);
  v20 = *(_BYTE *)(v2
                 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                 + 40);
  v21 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                  + 48);
  v22 = *(void **)(v2
                 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                 + 56);
  v64[0] = *(_BYTE *)(v2
                    + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot);
  v65 = v16;
  v66 = v17;
  v67 = v18;
  v68 = v19;
  v69 = v20;
  v70 = v21;
  v71 = v22;
  v23 = *(_OWORD *)(v2
                  + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                  + 80);
  v72 = *(_OWORD *)(v2
                  + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                  + 64);
  v73 = v23;
  v74 = *(_OWORD *)(v2
                  + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_posterEnvironmentSnapshot
                  + 96);
  sub_1B8C8BC7C();
  v24 = v22;
  swift_retain();
  sub_1B8CE1098();
  v25 = v60;
  v43[0] = v53;
  v43[8] = v54;
  v44 = v55;
  v45 = v56;
  v46 = v57;
  v47 = v58;
  v48 = v59;
  v49 = v60;
  v42 = v61;
  v50 = v61;
  v51 = v62;
  v52 = v63;
  LOBYTE(v22) = _s12WallpaperKit27WKPosterEnvironmentSnapshotV2eeoiySbAC_ACtFZ_0(v64, v43);
  swift_release();

  swift_release();
  if ((v22 & 1) == 0)
  {
    v27 = *(_QWORD *)(v15 + 72);
    sub_1B8CE1098();
    v28 = *((_QWORD *)&v72 + 1);

    swift_release();
    v29 = v27 == v28;
    v30 = v27 != v28;
    if (!v29)
      *(_QWORD *)(v2 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_lastOrientation) = *(_QWORD *)(v15 + 72);
    sub_1B8CE1098();
    v31 = v65;
    v32 = v66;
    v33 = v67;
    v34 = v68;
    v35 = v69;
    v36 = v70;
    v37 = v71;
    v38 = *(void **)(v15 + 56);
    *(_BYTE *)v15 = v64[0];
    *(_BYTE *)(v15 + 8) = v31;
    *(_QWORD *)(v15 + 16) = v32;
    *(_BYTE *)(v15 + 24) = v33;
    *(_QWORD *)(v15 + 32) = v34;
    *(_BYTE *)(v15 + 40) = v35;
    *(_QWORD *)(v15 + 48) = v36;
    *(_QWORD *)(v15 + 56) = v37;
    v39 = v73;
    *(_OWORD *)(v15 + 64) = v72;
    *(_OWORD *)(v15 + 80) = v39;
    *(_OWORD *)(v15 + 96) = v74;

    swift_release();
    v26 = (double *)(v2 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_rotationAngle);
    if ((sub_1B8CE1278() & 1) != 0)
    {
      v40 = 0;
      goto LABEL_13;
    }
LABEL_12:
    *v26 = a1;
    v40 = 1;
LABEL_13:
    sub_1B8CA2020(v40, v30, a1);
    if ((v13 & 1) != 0)
      return;
    goto LABEL_14;
  }
  v26 = (double *)(v2 + OBJC_IVAR____TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator_rotationAngle);
  if ((sub_1B8CE1278() & 1) == 0)
  {
    v30 = 0;
    goto LABEL_12;
  }
  if ((v13 & 1) != 0)
    return;
  sub_1B8CA2020(0, 0, a1);
LABEL_14:
  v41 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED5650D8 != -1)
    swift_once();
  objc_msgSend(v41, sel_postNotificationName_object_, qword_1ED56B8A8, 0);

}

uint64_t sub_1B8CAD420(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1B8CAD428(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1B8CAD430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1B8CAD438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1B8CAD440(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  __CFString *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t KeyPath;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  double v63;
  uint64_t v64[4];

  v2 = v1;
  v4 = sub_1B8CE0E58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v61 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for WKPosterDynamicRotationState();
  v7 = MEMORY[0x1E0C80A78](v59);
  v9 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v62 = (uint64_t)v51 - v10;
  if (qword_1ED565030 != -1)
    swift_once();
  v11 = sub_1B8CE0EDC();
  v60 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED56B890);
  v12 = sub_1B8CE0EC4();
  v13 = sub_1B8CE15CC();
  v14 = os_log_type_enabled(v12, v13);
  v15 = MEMORY[0x1E0DEE9B8];
  v58 = v4;
  if (v14)
  {
    v16 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v64[0] = v56;
    *(_DWORD *)v16 = 136446466;
    v55 = v16 + 4;
    v17 = WKStringForInterfaceOrientation(a1);
    v18 = sub_1B8CE14B8();
    v57 = v2;
    v20 = v19;

    v63 = COERCE_DOUBLE(sub_1B8CC4700(v18, v20, v64));
    sub_1B8CE1674();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2050;
    v63 = sub_1B8CCF6C0(a1);
    v2 = v57;
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v12, v13, "Initial orientation of poster is %{public}s (%{public}f degrees)", (uint8_t *)v16, 0x16u);
    v21 = v56;
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v21, -1, -1);
    MEMORY[0x1BCCB9588](v16, -1, -1);
  }

  v22 = v62;
  sub_1B8CBCCD8(a1, v62);
  v23 = (uint64_t)&v2[OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_rotationState];
  swift_beginAccess();
  sub_1B8CAF8B4(v22, v23);
  swift_endAccess();
  v24 = *(_QWORD *)(*((_QWORD *)v2 + 2) + 16);
  if (v24)
  {
    v55 = *(int *)(v59 + 20);
    v25 = swift_bridgeObjectRetain();
    v26 = 0;
    v27 = 32;
    *(_QWORD *)&v28 = 136446210;
    v54 = v28;
    v51[1] = v15 + 8;
    v53 = MEMORY[0x1E0DEE9C0] + 8;
    v56 = v25;
    v57 = v9;
    do
    {
      v59 = v24;
      v29 = *(_QWORD *)(v25 + v27);
      sub_1B8CAF84C(v62, (uint64_t)v9);
      swift_unknownObjectRetain();
      v30 = sub_1B8CE0EC4();
      v31 = sub_1B8CE15CC();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v64[0] = v33;
        *(_DWORD *)v32 = v54;
        v34 = sub_1B8CE0E28();
        *(_QWORD *)(v32 + 4) = sub_1B8CC4700(v34, v35, v64);
        swift_bridgeObjectRelease();
        sub_1B8C92BF4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
        _os_log_impl(&dword_1B8C64000, v30, v31, "Handling rotation animation %{public}s.", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v33, -1, -1);
        MEMORY[0x1BCCB9588](v32, -1, -1);
      }
      else
      {
        sub_1B8C92BF4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
      }

      v36 = v58;
      v37 = v62;
      v38 = *(double *)(v62 + v55) * 0.0174532925;
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      v51[-2] = v29;
      *(double *)&v51[-1] = v38;
      v64[0] = v29;
      sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
      sub_1B8CE0E70();
      swift_release();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v61, v37, v36);
      v40 = sub_1B8CE0EC4();
      v41 = sub_1B8CE15CC();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = swift_slowAlloc();
        v43 = v61;
        v52 = v26;
        v44 = v36;
        v45 = v42;
        v46 = swift_slowAlloc();
        v64[0] = v46;
        *(_DWORD *)v45 = v54;
        v47 = sub_1B8CE0E28();
        *(_QWORD *)(v45 + 4) = sub_1B8CC4700(v47, v48, v64);
        swift_bridgeObjectRelease();
        v49 = v44;
        v26 = v52;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v43, v49);
        _os_log_impl(&dword_1B8C64000, v40, v41, "Completed rotation animation %{public}s.", (uint8_t *)v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v46, -1, -1);
        MEMORY[0x1BCCB9588](v45, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v61, v36);
      }
      swift_unknownObjectRelease();

      v25 = v56;
      v9 = v57;
      v27 += 16;
      v24 = v59 - 1;
    }
    while (v59 != 1);
    swift_bridgeObjectRelease();
  }
  return sub_1B8C92BF4(v62, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
}

void sub_1B8CADA48(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  __CFString *v28;
  __CFString *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __CFString *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  __CFString *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  __CFString *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  __CFString *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  os_log_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  int *v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  void *v74;
  _QWORD v75[2];
  os_log_t v76;
  os_log_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  uint64_t v82;
  char v83;

  v3 = v2;
  v6 = (int *)type metadata accessor for WKPosterDynamicRotationState();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565018);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v75 - v13;
  v15 = v3 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_rotationState;
  swift_beginAccess();
  v16 = *(_QWORD *)(v15 + v6[8]);
  if (v16 != a1)
  {
    v80 = a1;
    v17 = v3 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_delegate;
    if (MEMORY[0x1BCCB9624](v3 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_delegate)
      && (v18 = *(_QWORD *)(v17 + 8),
          ObjectType = swift_getObjectType(),
          LOBYTE(v18) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(ObjectType, v18),
          swift_unknownObjectRelease(),
          (v18 & 1) != 0))
    {
      if (a2)
      {
        v20 = qword_1ED565030;
        v21 = a2;
        if (v20 != -1)
          swift_once();
        v22 = sub_1B8CE0EDC();
        __swift_project_value_buffer(v22, (uint64_t)qword_1ED56B890);
        v23 = sub_1B8CE0EC4();
        v24 = sub_1B8CE15CC();
        v25 = v24;
        if (os_log_type_enabled(v23, v24))
        {
          v26 = swift_slowAlloc();
          v79 = (uint64_t)v21;
          v27 = v26;
          v78 = swift_slowAlloc();
          v81[0] = v78;
          *(_DWORD *)v27 = 136446466;
          v75[0] = v27 + 4;
          v28 = WKStringForInterfaceOrientation(v16);
          LODWORD(v77) = v25;
          v29 = v28;
          v30 = sub_1B8CE14B8();
          v76 = v23;
          v32 = v31;

          v82 = sub_1B8CC4700(v30, v32, v81);
          v75[1] = &v83;
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          *(_WORD *)(v27 + 12) = 2082;
          v75[0] = v27 + 14;
          v33 = WKStringForInterfaceOrientation(v80);
          v34 = sub_1B8CE14B8();
          v36 = v35;

          v82 = sub_1B8CC4700(v34, v36, v81);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          v37 = v76;
          _os_log_impl(&dword_1B8C64000, v76, (os_log_type_t)v77, "Starting animation of device orientation; currentOrientation=%{public}s, toOrientation=%{public}s",
            (uint8_t *)v27,
            0x16u);
          v38 = v78;
          swift_arrayDestroy();
          MEMORY[0x1BCCB9588](v38, -1, -1);
          v39 = v27;
          v21 = (id)v79;
          MEMORY[0x1BCCB9588](v39, -1, -1);

        }
        else
        {

        }
        v65 = OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_displayLink;
        objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_displayLink), sel_invalidate);
        v66 = *(double *)(v15 + v6[5]);
        v67 = (int *)type metadata accessor for WKPosterDynamicRotationAnimationState();
        *(_QWORD *)&v14[v67[7]] = v21;
        *(_QWORD *)&v14[v67[5]] = v16;
        v68 = v80;
        *(_QWORD *)&v14[v67[6]] = v80;
        v69 = v21;
        sub_1B8CE0E4C();
        *(CFAbsoluteTime *)&v14[v67[8]] = CFAbsoluteTimeGetCurrent();
        *(double *)&v14[v67[9]] = sub_1B8CCF7B4(v16, v68, v66);
        *(_QWORD *)&v14[v67[10]] = v70;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v67 - 1) + 56))(v14, 0, 1, v67);
        sub_1B8CAFBF4((uint64_t)v14, (uint64_t)v12);
        v71 = v3 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_animationState;
        swift_beginAccess();
        sub_1B8CAF8F8((uint64_t)v12, v71);
        swift_endAccess();
        v72 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, v3, sel_displayLinkFired_);
        objc_msgSend(v69, sel_preferredFrameRateRange);
        objc_msgSend(v72, sel_setPreferredFrameRateRange_);
        v73 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop);
        objc_msgSend(v72, sel_addToRunLoop_forMode_, v73, *MEMORY[0x1E0C99860]);

        v74 = *(void **)(v3 + v65);
        *(_QWORD *)(v3 + v65) = v72;

      }
      else
      {
        if (qword_1ED565030 != -1)
          swift_once();
        v49 = sub_1B8CE0EDC();
        __swift_project_value_buffer(v49, (uint64_t)qword_1ED56B890);
        v50 = sub_1B8CE0EC4();
        v51 = sub_1B8CE15CC();
        v52 = v51;
        if (os_log_type_enabled(v50, v51))
        {
          v53 = swift_slowAlloc();
          v79 = swift_slowAlloc();
          v81[0] = v79;
          *(_DWORD *)v53 = 136446466;
          v54 = WKStringForInterfaceOrientation(v16);
          v55 = sub_1B8CE14B8();
          LODWORD(v78) = v52;
          v57 = v56;

          v82 = sub_1B8CC4700(v55, v57, v81);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          *(_WORD *)(v53 + 12) = 2082;
          v76 = (os_log_t)(v53 + 14);
          v77 = v50;
          v58 = v80;
          v59 = WKStringForInterfaceOrientation(v80);
          v60 = sub_1B8CE14B8();
          v62 = v61;

          v82 = sub_1B8CC4700(v60, v62, v81);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          v63 = v77;
          _os_log_impl(&dword_1B8C64000, v77, (os_log_type_t)v78, "Updating orientation change without animating because animation settings were missing; orientation=%{public}"
            "s, newOrientation=%{public}s",
            (uint8_t *)v53,
            0x16u);
          v64 = v79;
          swift_arrayDestroy();
          MEMORY[0x1BCCB9588](v64, -1, -1);
          MEMORY[0x1BCCB9588](v53, -1, -1);

        }
        else
        {

          v58 = v80;
        }
        sub_1B8CE0E4C();
        *(double *)&v8[v6[5]] = sub_1B8CCF6C0(v58);
        *(_QWORD *)&v8[v6[6]] = 0x3FF0000000000000;
        *(_QWORD *)&v8[v6[7]] = v16;
        *(_QWORD *)&v8[v6[8]] = v58;
        sub_1B8CAE7F8((uint64_t)v8);
        sub_1B8C92BF4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
      }
    }
    else
    {
      if (qword_1ED565030 != -1)
        swift_once();
      v40 = sub_1B8CE0EDC();
      __swift_project_value_buffer(v40, (uint64_t)qword_1ED56B890);
      v41 = sub_1B8CE0EC4();
      v42 = sub_1B8CE15CC();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        v44 = swift_slowAlloc();
        v81[0] = v44;
        *(_DWORD *)v43 = 136446210;
        v45 = WKStringForInterfaceOrientation(v80);
        v46 = sub_1B8CE14B8();
        v48 = v47;

        v82 = sub_1B8CC4700(v46, v48, v81);
        sub_1B8CE1674();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B8C64000, v41, v42, "Rotation manager was not granted a rendering session; Skipping rotation to %{public}s",
          v43,
          0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v44, -1, -1);
        MEMORY[0x1BCCB9588](v43, -1, -1);
      }

    }
  }
}

uint64_t sub_1B8CAE280()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = (int *)type metadata accessor for WKPosterDynamicRotationState();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565018);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED565030 != -1)
    swift_once();
  v8 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED56B890);
  v9 = sub_1B8CE0EC4();
  v10 = sub_1B8CE15CC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_1B8C64000, v9, v10, "Rotation manager was invalidated", v11, 2u);
    MEMORY[0x1BCCB9588](v11, -1, -1);
  }

  v12 = OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_displayLink;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_displayLink), sel_invalidate);
  v13 = *(void **)(v1 + v12);
  *(_QWORD *)(v1 + v12) = 0;

  v14 = type metadata accessor for WKPosterDynamicRotationAnimationState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  v15 = v1 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_animationState;
  swift_beginAccess();
  sub_1B8CAF8F8((uint64_t)v7, v15);
  swift_endAccess();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_delegate + 8) = 0;
  swift_unknownObjectWeakAssign();
  sub_1B8CE0E4C();
  *(_QWORD *)&v4[v2[5]] = 0;
  *(_QWORD *)&v4[v2[6]] = 0x3FF0000000000000;
  *(_QWORD *)&v4[v2[7]] = 0;
  *(_QWORD *)&v4[v2[8]] = 0;
  v16 = v1 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_rotationState;
  swift_beginAccess();
  sub_1B8CAFB1C((uint64_t)v4, v16);
  return swift_endAccess();
}

id sub_1B8CAE4E0(void *a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  double v19;
  double v20;
  double v21;
  long double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = (int *)type metadata accessor for WKPosterDynamicRotationState();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565018);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for WKPosterDynamicRotationAnimationState();
  v10 = *((_QWORD *)v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_animationState;
  swift_beginAccess();
  sub_1B8CAFA94(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1B8CAFADC((uint64_t)v8);
    if (qword_1ED565030 != -1)
      swift_once();
    v14 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED56B890);
    v15 = sub_1B8CE0EC4();
    v16 = sub_1B8CE15B4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1B8C64000, v15, v16, "Display link fired with no animation state", v17, 2u);
      MEMORY[0x1BCCB9588](v17, -1, -1);
    }

    return objc_msgSend(a1, sel_invalidate);
  }
  else
  {
    sub_1B8C8A35C((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationAnimationState);
    objc_msgSend(*(id *)&v12[v9[7]], sel_progressAtTime_, CFAbsoluteTimeGetCurrent() - *(double *)&v12[v9[8]]);
    v20 = v19;
    v21 = *(double *)&v12[v9[9]];
    v22 = fmod(v21 + v20 * (*(double *)&v12[v9[10]] - v21), 360.0);
    v23 = sub_1B8CE0E58();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v5, v12, v23);
    v24 = *(_QWORD *)&v12[v9[5]];
    v25 = *(_QWORD *)&v12[v9[6]];
    *(long double *)&v5[v3[5]] = v22;
    *(double *)&v5[v3[6]] = v20;
    *(_QWORD *)&v5[v3[7]] = v24;
    *(_QWORD *)&v5[v3[8]] = v25;
    sub_1B8CAE7F8((uint64_t)v5);
    sub_1B8C92BF4((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
    return (id)sub_1B8C92BF4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationAnimationState);
  }
}

uint64_t sub_1B8CAE7F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  double v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t aBlock[8];

  v2 = v1;
  v4 = sub_1B8CE13C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v69 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8CE13E0();
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  MEMORY[0x1E0C80A78](v7);
  v66 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1B8CE13F8();
  v9 = *(_QWORD *)(v65 - 8);
  v10 = MEMORY[0x1E0C80A78](v65);
  v62 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v64 = (char *)&v55 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565018);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WKPosterDynamicRotationState();
  v60 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v63 = (uint64_t)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v55 - v19;
  v21 = *(char **)(v2 + 16);
  v22 = *((_QWORD *)v21 + 2);
  if (v22)
  {
    v55 = v15;
    v56 = v9;
    v57 = v2;
    v58 = v5;
    v59 = v4;
    v75 = *(int *)(v16 + 20);
    v77 = (void (*)(char *, uint64_t))v21;
    swift_bridgeObjectRetain();
    v23 = 32;
    *(_QWORD *)&v24 = 136446210;
    v71 = v24;
    v70 = MEMORY[0x1E0DEE9B8] + 8;
    v73 = v16;
    v74 = MEMORY[0x1E0DEE9C0] + 8;
    v76 = v20;
    v72 = a1;
    do
    {
      v27 = *(_QWORD *)((char *)v77 + v23);
      v28 = qword_1ED565030;
      swift_unknownObjectRetain();
      if (v28 != -1)
        swift_once();
      v29 = sub_1B8CE0EDC();
      __swift_project_value_buffer(v29, (uint64_t)qword_1ED56B890);
      sub_1B8CAF84C(a1, (uint64_t)v20);
      v30 = sub_1B8CE0EC4();
      v31 = sub_1B8CE15CC();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        aBlock[0] = v33;
        *(_DWORD *)v32 = v71;
        v34 = sub_1B8CE0E28();
        *(_QWORD *)(v32 + 4) = sub_1B8CC4700(v34, v35, aBlock);
        swift_bridgeObjectRelease();
        sub_1B8C92BF4((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
        _os_log_impl(&dword_1B8C64000, v30, v31, "Handling rotation animation %{public}s.", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v33, -1, -1);
        v36 = v32;
        a1 = v72;
        v16 = v73;
        MEMORY[0x1BCCB9588](v36, -1, -1);
      }
      else
      {
        sub_1B8C92BF4((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
      }

      v25 = *(double *)(a1 + v75) * 0.0174532925;
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      *(&v55 - 2) = (char *)v27;
      *((double *)&v55 - 1) = v25;
      aBlock[0] = v27;
      sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
      sub_1B8CE0E70();
      swift_unknownObjectRelease();
      swift_release();
      v23 += 16;
      --v22;
      v20 = v76;
    }
    while (v22);
    swift_bridgeObjectRelease();
    v4 = v59;
    v5 = v58;
    v2 = v57;
    v9 = v56;
    v15 = v55;
  }
  v37 = v2 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_rotationState;
  swift_beginAccess();
  sub_1B8CAF8B4(a1, v37);
  result = swift_endAccess();
  if (*(double *)(a1 + *(int *)(v16 + 24)) >= 1.0)
  {
    v39 = OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_displayLink;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_displayLink), sel_invalidate);
    v40 = *(void **)(v2 + v39);
    *(_QWORD *)(v2 + v39) = 0;

    v41 = type metadata accessor for WKPosterDynamicRotationAnimationState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v15, 1, 1, v41);
    v42 = v2 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_animationState;
    swift_beginAccess();
    sub_1B8CAF8F8((uint64_t)v15, v42);
    swift_endAccess();
    sub_1B8CAF940();
    v43 = (void *)sub_1B8CE15F0();
    v44 = v62;
    sub_1B8CE13EC();
    v45 = v64;
    MEMORY[0x1BCCB8778](v44, 0.15);
    v77 = *(void (**)(char *, uint64_t))(v9 + 8);
    v46 = a1;
    v47 = v65;
    v77(v44, v65);
    v48 = swift_allocObject();
    swift_weakInit();
    v49 = v63;
    sub_1B8CAF84C(v46, v63);
    v50 = (*(unsigned __int8 *)(v60 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = v48;
    sub_1B8C8A35C(v49, v51 + v50, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
    aBlock[4] = (uint64_t)sub_1B8CAFA18;
    aBlock[5] = v51;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1B8CAF418;
    aBlock[3] = (uint64_t)&block_descriptor_0;
    v52 = _Block_copy(aBlock);
    swift_release();
    v53 = v66;
    sub_1B8CE13D4();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1B8C83740(&qword_1ED565520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565530);
    sub_1B8CAFA48();
    v54 = v69;
    sub_1B8CE16B0();
    MEMORY[0x1BCCB8934](v45, v53, v54, v52);
    _Block_release(v52);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v54, v4);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v68);
    return ((uint64_t (*)(char *, uint64_t))v77)(v45, v47);
  }
  return result;
}

uint64_t sub_1B8CAEF48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  __CFString *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  __int128 v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint8_t *v44;
  uint8_t *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v3 = sub_1B8CE0E58();
  v49 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for WKPosterDynamicRotationState();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565018);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = (uint8_t *)result;
    v14 = result + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_animationState;
    swift_beginAccess();
    sub_1B8CAFA94(v14, (uint64_t)v11);
    v15 = type metadata accessor for WKPosterDynamicRotationAnimationState();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v11, 1, v15) == 1)
    {
      sub_1B8CAFADC((uint64_t)v11);
      if (qword_1ED565030 != -1)
        swift_once();
      v16 = sub_1B8CE0EDC();
      v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED56B890);
      sub_1B8CAF84C(a2, (uint64_t)v8);
      v48 = v17;
      v18 = sub_1B8CE0EC4();
      v19 = sub_1B8CE15CC();
      v20 = v19;
      v21 = os_log_type_enabled(v18, v19);
      v47 = a2;
      if (v21)
      {
        LODWORD(v46) = v20;
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        v45 = v22;
        *(_DWORD *)v22 = 136446210;
        v51 = v23;
        v24 = v23;
        v44 = v22 + 4;
        v25 = WKStringForInterfaceOrientation(*(_QWORD *)&v8[*(int *)(v6 + 32)]);
        v26 = sub_1B8CE14B8();
        v28 = v27;

        v29 = v26;
        a2 = v47;
        v50 = sub_1B8CC4700(v29, v28, &v51);
        sub_1B8CE1674();
        swift_bridgeObjectRelease();
        sub_1B8C92BF4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
        v30 = v45;
        _os_log_impl(&dword_1B8C64000, v18, (os_log_type_t)v46, "Completed animation of device orientation to %{public}s", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v24, -1, -1);
        MEMORY[0x1BCCB9588](v30, -1, -1);
      }
      else
      {
        sub_1B8C92BF4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);
      }

      v31 = *(_QWORD *)(*((_QWORD *)v13 + 2) + 16);
      if (v31)
      {
        v44 = (uint8_t *)*((_QWORD *)v13 + 2);
        v45 = v13;
        v32 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
        swift_bridgeObjectRetain();
        *(_QWORD *)&v33 = 136446210;
        v46 = v33;
        do
        {
          v32(v5, a2, v3);
          v34 = sub_1B8CE0EC4();
          v35 = sub_1B8CE15CC();
          if (os_log_type_enabled(v34, v35))
          {
            v36 = swift_slowAlloc();
            v37 = swift_slowAlloc();
            v51 = v37;
            *(_DWORD *)v36 = v46;
            v38 = sub_1B8CE0E28();
            *(_QWORD *)(v36 + 4) = sub_1B8CC4700(v38, v39, &v51);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v3);
            _os_log_impl(&dword_1B8C64000, v34, v35, "Completed rotation animation %{public}s.", (uint8_t *)v36, 0xCu);
            swift_arrayDestroy();
            v40 = v37;
            a2 = v47;
            MEMORY[0x1BCCB9588](v40, -1, -1);
            MEMORY[0x1BCCB9588](v36, -1, -1);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v3);
          }

          --v31;
        }
        while (v31);
        swift_bridgeObjectRelease();
        v13 = v45;
      }
      v41 = &v13[OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_delegate];
      if (MEMORY[0x1BCCB9624](&v13[OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_delegate]))
      {
        v42 = *((_QWORD *)v41 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v42 + 16))(ObjectType, v42);
        swift_release();
        return swift_unknownObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
    else
    {
      swift_release();
      return sub_1B8CAFADC((uint64_t)v11);
    }
  }
  return result;
}

uint64_t sub_1B8CAF418(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1B8CAF444()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1B8C92BF4(v0 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_rotationState, (uint64_t (*)(_QWORD))type metadata accessor for WKPosterDynamicRotationState);

  sub_1B8CAFADC(v0 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_animationState);
  sub_1B8CAFBD0(v0 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1B8CAF4B4()
{
  return type metadata accessor for WKDynamicRotationManager();
}

uint64_t type metadata accessor for WKDynamicRotationManager()
{
  uint64_t result;

  result = qword_1ED564FE0;
  if (!qword_1ED564FE0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8CAF4F8()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for WKPosterDynamicRotationState();
  if (v0 <= 0x3F)
  {
    sub_1B8CAF5A0();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1B8CAF5A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED565020)
  {
    type metadata accessor for WKPosterDynamicRotationAnimationState();
    v0 = sub_1B8CE1668();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED565020);
  }
}

uint64_t sub_1B8CAF5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1B8CE0E58();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  v5 = v0 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_rotationState;
  sub_1B8CE0E4C();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  v6 = (int *)type metadata accessor for WKPosterDynamicRotationState();
  *(_QWORD *)(v5 + v6[5]) = 0;
  *(_QWORD *)(v5 + v6[6]) = 0x3FF0000000000000;
  *(_QWORD *)(v5 + v6[7]) = 0;
  *(_QWORD *)(v5 + v6[8]) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_displayLink) = 0;
  v7 = v0 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_animationState;
  v8 = type metadata accessor for WKPosterDynamicRotationAnimationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

double sub_1B8CAF710@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  result = *(double *)(v3 + 136);
  *a2 = result;
  return result;
}

uint64_t sub_1B8CAF79C()
{
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E70();
  return swift_release();
}

uint64_t sub_1B8CAF84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKPosterDynamicRotationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CAF898()
{
  uint64_t v0;

  return sub_1B8CB5C10(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1B8CAF8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKPosterDynamicRotationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CAF8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8CAF940()
{
  unint64_t result;

  result = qword_1ED565560;
  if (!qword_1ED565560)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED565560);
  }
  return result;
}

uint64_t sub_1B8CAF97C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8CAF9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WKPosterDynamicRotationState() - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1B8CAFA18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WKPosterDynamicRotationState() - 8) + 80);
  return sub_1B8CAEF48(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

unint64_t sub_1B8CAFA48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED565540;
  if (!qword_1ED565540)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED565530);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED565540);
  }
  return result;
}

uint64_t sub_1B8CAFA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CAFADC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565018);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B8CAFB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKPosterDynamicRotationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CAFB60(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B8CAFB80(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_1B8CE1674();
  *a1 = v5;
  return result;
}

uint64_t sub_1B8CAFBD0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1B8CAFBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CAFC3C()
{
  return sub_1B8CAF898();
}

uint64_t WKLayeredStillWallpaper.wallpaperValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKLayeredStillWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 1;
  return result;
}

id WKLayeredStillWallpaper.identifier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

uint64_t WKLayeredStillWallpaper.name.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_name);
}

id WKLayeredStillWallpaper.type.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_type);
}

id WKLayeredStillWallpaper.representedType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_representedType);
}

id WKLayeredStillWallpaper.backingType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backingType);
}

uint64_t WKLayeredStillWallpaper.thumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_thumbnailImageURL);
  if (v3)
  {
    v4 = v3;
    sub_1B8CE0E04();

    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1B8CE0E1C();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id WKLayeredStillWallpaper.thumbnailImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

id WKLayeredStillWallpaper.supportsSerialization.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsSerialization);
}

id WKLayeredStillWallpaper.supportsCopying.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

uint64_t WKLayeredStillWallpaper.init(identifier:name:backgroundThumbnailImageURL:foregroundThumbnailImageURL:floatingThumbnailImageURL:backgroundFullSizeImageURL:foregroundFullSizeImageURL:floatingFullSizeImageURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;

  v36 = a4;
  v37 = a7;
  v41 = a9;
  v42 = a5;
  v39 = a2;
  v40 = a3;
  v38 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v35 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v35 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v35 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v35 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v35 - v29;
  sub_1B8C84538(a4, (uint64_t)&v35 - v29);
  sub_1B8C84538(v42, (uint64_t)v28);
  sub_1B8C84538(a6, (uint64_t)v25);
  v31 = v37;
  sub_1B8C84538(v37, (uint64_t)v22);
  sub_1B8C84538(a8, (uint64_t)v19);
  sub_1B8C84538(a10, (uint64_t)v16);
  v32 = objc_allocWithZone((Class)WKLayeredStillWallpaper);
  v33 = sub_1B8CB0298(v38, v39, v40, (uint64_t)v30, (uint64_t)v28, (uint64_t)v25, (uint64_t)v22, (uint64_t)v19, (uint64_t)v16);
  sub_1B8C8491C(a10);
  sub_1B8C8491C(a8);
  sub_1B8C8491C(v31);
  sub_1B8C8491C(a6);
  sub_1B8C8491C(v42);
  sub_1B8C8491C(v36);
  type metadata accessor for WKLayeredStillWallpaper.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v33;
  *v41 = result;
  return result;
}

Swift::OpaquePointer_optional __swiftcall WKLayeredStillWallpaper.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id WKLayeredStillWallpaper.copyWallpaperContents(to:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE0DEC();
  v6[0] = 0;
  v3 = objc_msgSend(v1, sel_copyWallpaperContentsToDestinationDirectoryURL_error_, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B8CE0DBC();

  return (id)swift_willThrow();
}

uint64_t sub_1B8CB0144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperValue);
  type metadata accessor for WKLayeredStillWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 1;
  return result;
}

id sub_1B8CB01A4()
{
  return WKLayeredStillWallpaper.copyWallpaperContents(to:)();
}

id static WKLayeredStillWallpaper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKLayeredStillWallpaper.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKLayeredStillWallpaper.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKLayeredStillWallpaper.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

id sub_1B8CB0298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v26;
  void *v27;

  v26 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  v13 = sub_1B8CE0E1C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = 0;
  if (v15(a4, 1, v13) != 1)
  {
    v16 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  }
  if (v15(a5, 1, v13) == 1)
  {
    v17 = 0;
  }
  else
  {
    v17 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a5, v13);
  }
  if (v15(a6, 1, v13) == 1)
  {
    v18 = 0;
  }
  else
  {
    v18 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a6, v13);
  }
  if (v15(a7, 1, v13) == 1)
  {
    v19 = 0;
  }
  else
  {
    v19 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a7, v13);
  }
  if (v15(a8, 1, v13) == 1)
  {
    v20 = 0;
  }
  else
  {
    v20 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a8, v13);
  }
  if (v15(a9, 1, v13) == 1)
  {
    v21 = 0;
  }
  else
  {
    v21 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a9, v13);
  }
  v22 = objc_msgSend(v27, sel_initWithIdentifier_name_backgroundThumbnailImageURL_foregroundThumbnailImageURL_floatingThumbnailImageURL_backgroundFullSizeImageURL_foregroundFullSizeImageURL_floatingFullSizeImageURL_, a1, v26, v16, v17, v18, v19, v20, v21);

  return v22;
}

uint64_t type metadata accessor for WKLayeredStillWallpaper.ImplementationWrapper()
{
  return objc_opt_self();
}

unint64_t sub_1B8CB04F4(uint64_t a1)
{
  unint64_t result;

  result = sub_1B8CB0518();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B8CB0518()
{
  unint64_t result;

  result = qword_1ED565620;
  if (!qword_1ED565620)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredStillWallpaper, &type metadata for WKLayeredStillWallpaper);
    atomic_store(result, (unint64_t *)&qword_1ED565620);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredStillWallpaper()
{
  return &type metadata for WKLayeredStillWallpaper;
}

double sub_1B8CB0574()
{
  double v1;

  sub_1B8CB05AC();
  sub_1B8CE1098();
  return v1;
}

unint64_t sub_1B8CB05AC()
{
  unint64_t result;

  result = qword_1ED567328;
  if (!qword_1ED567328)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE70D8, &type metadata for WKCalculatedItemSize);
    atomic_store(result, (unint64_t *)&qword_1ED567328);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKCalculatedItemSize()
{
  return &type metadata for WKCalculatedItemSize;
}

void sub_1B8CB0600()
{
  xmmword_1ED56B990 = 0uLL;
}

double sub_1B8CB0610@<D0>(_OWORD *a1@<X8>)
{
  double result;

  if (qword_1ED567320 != -1)
    swift_once();
  result = *(double *)&xmmword_1ED56B990;
  *a1 = xmmword_1ED56B990;
  return result;
}

uint64_t sub_1B8CB0660()
{
  sub_1B8CB06B0();
  return sub_1B8CE0FFC();
}

unint64_t sub_1B8CB06B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1D4298;
  if (!qword_1EF1D4298)
  {
    type metadata accessor for CGSize(255);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0C9BA00], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1D4298);
  }
  return result;
}

uint64_t WKLayeredAnimationWallpaperInput.foregroundAnimationFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_foregroundAnimationFileURL, a1);
}

id static WKLayeredAnimationWallpaperInput.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKLayeredAnimationWallpaperInput.floatingAnimationFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_floatingAnimationFileURL, a1);
}

uint64_t WKLayeredAnimationWallpaperInput.backgroundAnimationFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_backgroundAnimationFileURL, a1);
}

uint64_t WKLayeredAnimationWallpaperInput.init(backgroundAnimationFileURL:foregroundAnimationFileURL:floatingAnimationFileURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t result;
  uint64_t v20;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v20 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - v15;
  sub_1B8C84538(a1, (uint64_t)&v20 - v15);
  sub_1B8C84538(a2, (uint64_t)v14);
  sub_1B8C84538(a3, (uint64_t)v11);
  v17 = objc_allocWithZone((Class)WKLayeredAnimationWallpaperInput);
  v18 = sub_1B8CB0978((uint64_t)v16, (uint64_t)v14, (uint64_t)v11);
  sub_1B8C8491C(a3);
  sub_1B8C8491C(a2);
  sub_1B8C8491C(a1);
  type metadata accessor for WKLayeredAnimationWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v18;
  *a4 = result;
  return result;
}

uint64_t WKLayeredAnimationWallpaperInput.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKLayeredAnimationWallpaperInput.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKLayeredAnimationWallpaperInput.description.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_description);
  v2 = sub_1B8CE14B8();

  return v2;
}

id sub_1B8CB0978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v4 = v3;
  v8 = sub_1B8CE0E1C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = 0;
  if (v10(a1, 1, v8) != 1)
  {
    v11 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  }
  if (v10(a2, 1, v8) == 1)
  {
    v12 = 0;
  }
  else
  {
    v12 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  }
  if (v10(a3, 1, v8) == 1)
  {
    v13 = 0;
  }
  else
  {
    v13 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  }
  v14 = objc_msgSend(v4, sel_initWithBackgroundAnimationFileURL_foregroundAnimationFileURL_floatingAnimationFileURL_, v11, v12, v13);

  return v14;
}

uint64_t type metadata accessor for WKLayeredAnimationWallpaperInput.ImplementationWrapper()
{
  return objc_opt_self();
}

unint64_t sub_1B8CB0AD4()
{
  unint64_t result;

  result = qword_1EF1D42A0;
  if (!qword_1EF1D42A0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredAnimationWallpaperInput, &type metadata for WKLayeredAnimationWallpaperInput);
    atomic_store(result, (unint64_t *)&qword_1EF1D42A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredAnimationWallpaperInput()
{
  return &type metadata for WKLayeredAnimationWallpaperInput;
}

uint64_t sub_1B8CB0B28()
{
  char v1;

  sub_1B8C8DFDC();
  if ((sub_1B8CE168C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v1 = sub_1B8CE168C();
    swift_bridgeObjectRelease();
    if ((v1 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.editor(_:didInitialize:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.editor(_:didUpdate:with:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.looks(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.initialLookIdentifier(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.leadingMenuElements(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.trailingMenuElements(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.activeAppearanceMenuSelection(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.editor(_:appearanceMenuDidChangeSelectedStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.editor(_:populateViews:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.editor(_:didFinishTransitionTo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.timeScrollsWithLook(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.editorFinalize(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 96) + *(_QWORD *)(a5 + 96));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1B8C95B24;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of WKWallpaperPosterEditingDelegate.editorDidInvalidate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t WKWallpaperRepresenting.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of _WKWallpaperRepresentingReference._referenceType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _WKWallpaperRepresentingValue._valueType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.contentVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.isAppearanceAware.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.hasDistinctWallpapersForLocations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.identifierString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.logicalScreenClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.disableParallax.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.isOffloaded.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.supportsCopying.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.disableModifyingLegibilityBlur.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.adjustmentTraits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.wallpaperBackingType(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.thumbnailRepresentable(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.thumbnailRepresentable(for:appearance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.fileBasedWallpaper(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.fileBasedWallpaper(for:appearance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 144))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.valueBasedWallpaper(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.valueBasedWallpaper(for:appearance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of WKWallpaperRepresenting.copyWallpaperRepresenting(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t *sub_1B8CB0DA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1B8CE0F84();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
  }
  return v4;
}

uint64_t sub_1B8CB0EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1B8CE0F84();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_BYTE *sub_1B8CB0F28(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B8CE0F84();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  return a1;
}

_BYTE *sub_1B8CB1010(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B8CE0F84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)v16 = v18;
  return a1;
}

_BYTE *sub_1B8CB1144(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B8CE0F84();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  return a1;
}

_BYTE *sub_1B8CB122C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1B8CE0F84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  return a1;
}

uint64_t sub_1B8CB1360()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CB136C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 253)
  {
    v4 = *a1;
    if (v4 >= 3)
      return v4 - 2;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1B8CB13E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1B8CB13F0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for WKAnimationPackageLayerState()
{
  uint64_t result;

  result = qword_1ED5652A8;
  if (!qword_1ED5652A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8CB14A0()
{
  unint64_t v0;

  sub_1B8CB151C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B8CB151C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED565330)
  {
    sub_1B8CE0F84();
    v0 = sub_1B8CE1668();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED565330);
  }
}

uint64_t sub_1B8CB1570@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v14;
  unsigned int *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  char v41;
  uint8_t *v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  unint64_t v48;

  v6 = type metadata accessor for WKAnimationPackageLayerState();
  v45 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)&v9[*(int *)(v7 + 20)];
  v11 = sub_1B8CE0F84();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13(v10, 1, 1, v11);
  v14 = &v9[*(int *)(v6 + 24)];
  *(_QWORD *)v14 = 0;
  v14[8] = -1;
  if (!a2)
  {
    if (qword_1ED565318 != -1)
      swift_once();
    v16 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED56B978);
    v17 = sub_1B8CE0EC4();
    v18 = sub_1B8CE15B4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1B8C64000, v17, v18, "Unknown State encountered with no name.", v19, 2u);
      MEMORY[0x1BCCB9588](v19, -1, -1);
    }

    v20 = sub_1B8CE0EC4();
    v21 = sub_1B8CE15C0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1B8C64000, v20, v21, "Unknown State encountered with no name.", v22, 2u);
      MEMORY[0x1BCCB9588](v22, -1, -1);
    }

    goto LABEL_11;
  }
  v44 = a3;
  if ((sub_1B8CE1500() & 1) != 0)
  {
    sub_1B8C88430(v10, &qword_1ED565328);
    v15 = (unsigned int *)MEMORY[0x1E0CD86E0];
LABEL_14:
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v10, *v15, v11);
    v25 = 0;
    goto LABEL_16;
  }
  v24 = sub_1B8CE1500();
  sub_1B8C88430(v10, &qword_1ED565328);
  if ((v24 & 1) != 0)
  {
    v15 = (unsigned int *)MEMORY[0x1E0CD86D0];
    goto LABEL_14;
  }
  v25 = 1;
LABEL_16:
  v13(v10, v25, 1, v11);
  v47 = a1;
  v48 = a2;
  strcpy((char *)v46, "LandscapeLeft");
  HIWORD(v46[1]) = -4864;
  sub_1B8C8DFDC();
  if ((sub_1B8CE1698() & 1) != 0)
  {
    v26 = 4;
LABEL_22:
    *(_QWORD *)v14 = v26;
    v27 = 1;
    goto LABEL_23;
  }
  v47 = a1;
  v48 = a2;
  strcpy((char *)v46, "LandscapeRight");
  HIBYTE(v46[1]) = -18;
  if ((sub_1B8CE1698() & 1) != 0)
  {
    v26 = 3;
    goto LABEL_22;
  }
  v47 = a1;
  v48 = a2;
  strcpy((char *)v46, "PortraitDown");
  BYTE5(v46[1]) = 0;
  HIWORD(v46[1]) = -5120;
  if ((sub_1B8CE1698() & 1) != 0)
  {
    v26 = 2;
    goto LABEL_22;
  }
  v47 = a1;
  v48 = a2;
  strcpy((char *)v46, "PortraitUp");
  BYTE3(v46[1]) = 0;
  HIDWORD(v46[1]) = -369098752;
  if ((sub_1B8CE1698() & 1) != 0)
  {
    v27 = 1;
    *(_QWORD *)v14 = 1;
  }
  else
  {
    v47 = a1;
    v48 = a2;
    strcpy((char *)v46, "Landscape");
    WORD1(v46[1]) = 0;
    HIDWORD(v46[1]) = -385875968;
    if ((sub_1B8CE1698() & 1) != 0)
    {
      v27 = 0;
      *(_QWORD *)v14 = 1;
    }
    else
    {
      v47 = a1;
      v48 = a2;
      strcpy((char *)v46, "Portrait");
      BYTE1(v46[1]) = 0;
      WORD1(v46[1]) = 0;
      HIDWORD(v46[1]) = -402653184;
      v41 = sub_1B8CE1698();
      *(_QWORD *)v14 = 0;
      v27 = (v41 & 1) - 1;
    }
  }
LABEL_23:
  v14[8] = v27;
  v28 = sub_1B8CE14F4();
  v29 = v44;
  if ((v28 & 1) == 0)
  {
    if ((sub_1B8CE14F4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v30 = 1;
LABEL_30:
      *v9 = v30;
      goto LABEL_31;
    }
    if ((sub_1B8CE14F4() & 1) != 0 || (sub_1B8CE14F4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v30 = 2;
      goto LABEL_30;
    }
    if (qword_1ED565318 != -1)
      swift_once();
    v31 = sub_1B8CE0EDC();
    v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED56B978);
    swift_bridgeObjectRetain_n();
    v43 = (uint8_t *)v32;
    v33 = sub_1B8CE0EC4();
    v34 = sub_1B8CE15B4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v47 = v36;
      *(_DWORD *)v35 = 136446210;
      v42 = v35 + 4;
      swift_bridgeObjectRetain();
      v46[0] = sub_1B8CC4700(a1, a2, &v47);
      sub_1B8CE1674();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B8C64000, v33, v34, "Unknown State encountered '%{public}s'.", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v36, -1, -1);
      MEMORY[0x1BCCB9588](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    v37 = sub_1B8CE0EC4();
    v38 = sub_1B8CE15C0();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v47 = v40;
      *(_DWORD *)v39 = 136446210;
      v43 = v39 + 4;
      swift_bridgeObjectRetain();
      v46[0] = sub_1B8CC4700(a1, a2, &v47);
      sub_1B8CE1674();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B8C64000, v37, v38, "Unknown State encountered '%{public}s'.", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v40, -1, -1);
      MEMORY[0x1BCCB9588](v39, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a3 = v44;
LABEL_11:
    sub_1B8C88430(v10, &qword_1ED565328);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(a3, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  *v9 = 0;
LABEL_31:
  sub_1B8CA11B0((uint64_t)v9, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v29, 0, 1, v6);
  return sub_1B8CA11F4((uint64_t)v9);
}

uint64_t sub_1B8CB1D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (**v22)(uint64_t, uint64_t, unint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unsigned __int8 *v30;
  _BOOL4 IsLandscape;
  uint64_t v32;
  uint64_t v33;
  int64_t isa;
  int64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  char *v50;
  int v51;
  _BOOL4 v52;
  char *v53;
  uint64_t v54;
  int v55;
  NSObject *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  char *v63;
  char v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  unint64_t v67;
  __CFString *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  int64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  os_log_t v89;
  uint64_t v90;
  uint64_t v92;
  char *v93;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void (**v99)(uint64_t, uint64_t, unint64_t);
  unint64_t v100;
  char *v101;
  NSObject *v102;
  uint64_t v103;
  uint64_t v104;
  os_log_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113[2];

  v103 = a2;
  v107 = a1;
  v96 = a5;
  v95 = sub_1B8CE0F84();
  v97 = *(_QWORD *)(v95 - 8);
  v8 = MEMORY[0x1E0C80A78](v95);
  v93 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v98 = (char *)&v92 - v10;
  v11 = sub_1B8CE0EDC();
  v99 = *(void (***)(uint64_t, uint64_t, unint64_t))(v11 - 8);
  v100 = v11;
  MEMORY[0x1E0C80A78](v11);
  v101 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for WKAnimationPackageLayerState();
  v13 = *(_QWORD *)(v111 - 8);
  v14 = MEMORY[0x1E0C80A78](v111);
  v104 = (uint64_t)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v110 = (uint64_t)&v92 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v108 = ((char *)&v92 - v19);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (void (**)(uint64_t, uint64_t, unint64_t))((char *)&v92 - v21);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v92 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v92 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (unsigned __int8 *)&v92 - v29;
  IsLandscape = UIInterfaceOrientationIsLandscape(a3);
  v32 = 4;
  if (!IsLandscape)
    v32 = 1;
  v106 = v32;
  v33 = MEMORY[0x1E0DEE9D8];
  v113[0] = MEMORY[0x1E0DEE9D8];
  isa = (int64_t)a4[2].isa;
  swift_bridgeObjectRetain();
  v109 = v13;
  v102 = a4;
  v94 = isa;
  if (isa)
  {
    v35 = isa;
    v36 = *(_QWORD *)(v13 + 72);
    v105 = (os_log_t)((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v37 = (char *)v105 + (_QWORD)a4;
    v38 = MEMORY[0x1E0DEE9D8];
    v39 = v35;
    do
    {
      sub_1B8CA11B0((uint64_t)v37, (uint64_t)v30);
      if (*v30 == v107)
      {
        sub_1B8CA127C((uint64_t)v30, (uint64_t)v28);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1B8CA1178(0, *(_QWORD *)(v38 + 16) + 1, 1);
        v38 = v113[0];
        v5 = *(_QWORD *)(v113[0] + 16);
        v40 = *(_QWORD *)(v113[0] + 24);
        if (v5 >= v40 >> 1)
        {
          sub_1B8CA1178(v40 > 1, v5 + 1, 1);
          v38 = v113[0];
        }
        *(_QWORD *)(v38 + 16) = v5 + 1;
        sub_1B8CA127C((uint64_t)v28, (uint64_t)v105 + v38 + v5 * v36);
      }
      else
      {
        sub_1B8CA11F4((uint64_t)v30);
      }
      v37 += v36;
      --v39;
    }
    while (v39);
    v41 = v113[0];
    a4 = v102;
    v33 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v41 = v33;
  }
  v42 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v42);
  *(&v92 - 2) = v103;
  v43 = sub_1B8CB2F98((uint64_t (*)(char *))sub_1B8CB3DE0, (uint64_t)(&v92 - 4), v41);
  v113[0] = v33;
  v44 = *(_QWORD *)(v43 + 16);
  if (v44)
  {
    v45 = 0;
    v46 = v109;
    v105 = v108 + 1;
    v47 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if (v45 >= *(_QWORD *)(v43 + 16))
      {
        __break(1u);
LABEL_59:
        swift_once();
LABEL_39:
        v59 = __swift_project_value_buffer(v45, (uint64_t)qword_1ED56B978);
        v22[2](v47, v59, v45);
        v60 = v95;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v44 + 16))(v5, v103, v95);
        swift_bridgeObjectRetain_n();
        v61 = sub_1B8CE0EC4();
        LODWORD(v110) = sub_1B8CE15B4();
        if (os_log_type_enabled(v61, (os_log_type_t)v110))
        {
          v105 = v61;
          v108 = a4;
          v62 = swift_slowAlloc();
          v103 = swift_slowAlloc();
          v113[0] = v103;
          *(_DWORD *)v62 = 136446978;
          v63 = v93;
          (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v93, *MEMORY[0x1E0CD86E0], v60);
          v64 = sub_1B8CE0F78();
          v65 = *(void (**)(char *, uint64_t))(v44 + 8);
          v65(v63, v60);
          if ((v64 & 1) != 0)
            v66 = 0x746867696CLL;
          else
            v66 = 1802658148;
          if ((v64 & 1) != 0)
            v67 = 0xE500000000000000;
          else
            v67 = 0xE400000000000000;
          v112 = sub_1B8CC4700(v66, v67, v113);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          v65((char *)v5, v60);
          *(_WORD *)(v62 + 12) = 2082;
          v68 = WKStringForInterfaceOrientation(v106);
          v69 = sub_1B8CE14B8();
          v71 = v70;

          v112 = sub_1B8CC4700(v69, v71, v113);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          v72 = 8 * (char)v107;
          v73 = *(_QWORD *)&aSleep_2[v72];
          *(_WORD *)(v62 + 22) = 2082;
          v112 = sub_1B8CC4700(v73, *(_QWORD *)&aUnlocked_1[v72 + 8], v113);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          *(_WORD *)(v62 + 32) = 2082;
          v74 = MEMORY[0x1E0DEE9D8];
          if (v94)
          {
            v112 = MEMORY[0x1E0DEE9D8];
            v75 = v94;
            sub_1B8CA1194(0, v94, 0);
            v76 = (uint64_t)v102
                + ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80));
            v77 = *(_QWORD *)(v109 + 72);
            do
            {
              v78 = v104;
              sub_1B8CA11B0(v76, v104);
              sub_1B8CB28B0();
              v79 = sub_1B8CE14C4();
              v81 = v80;
              swift_bridgeObjectRelease();
              sub_1B8CA11F4(v78);
              v74 = v112;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1B8CA1194(0, *(_QWORD *)(v74 + 16) + 1, 1);
                v74 = v112;
              }
              v83 = *(_QWORD *)(v74 + 16);
              v82 = *(_QWORD *)(v74 + 24);
              v84 = v75;
              if (v83 >= v82 >> 1)
              {
                sub_1B8CA1194(v82 > 1, v83 + 1, 1);
                v84 = v75;
                v74 = v112;
              }
              *(_QWORD *)(v74 + 16) = v83 + 1;
              v85 = v74 + 16 * v83;
              *(_QWORD *)(v85 + 32) = v79;
              *(_QWORD *)(v85 + 40) = v81;
              v76 += v77;
              v75 = v84 - 1;
            }
            while (v84 != 1);
            v22 = v99;
            v45 = v100;
          }
          v112 = v74;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5650C8);
          sub_1B8CA1230();
          v86 = sub_1B8CE147C();
          v88 = v87;
          swift_bridgeObjectRelease();
          v112 = sub_1B8CC4700(v86, v88, v113);
          sub_1B8CE1674();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v89 = v105;
          _os_log_impl(&dword_1B8C64000, v105, (os_log_type_t)v110, "Failed to resolve the animation state for 'colorScheme: %{public}s' 'deviceOrientation: %{public}s' 'deviceState: %{public}s' out of the possible '%{public}s'.", (uint8_t *)v62, 0x2Au);
          v90 = v103;
          swift_arrayDestroy();
          MEMORY[0x1BCCB9588](v90, -1, -1);
          MEMORY[0x1BCCB9588](v62, -1, -1);

          ((void (*)(char *, unint64_t))v22[1])(v101, v45);
          v46 = v109;
        }
        else
        {
          (*(void (**)(unint64_t, uint64_t))(v44 + 8))(v5, v60);

          swift_bridgeObjectRelease_n();
          ((void (*)(uint64_t, unint64_t))v22[1])(v47, v45);
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v96, 1, 1, v111);
        return swift_release();
      }
      a4 = ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
      v49 = *(_QWORD *)(v46 + 72);
      sub_1B8CA11B0((uint64_t)a4 + v43 + v49 * v45, (uint64_t)v25);
      v50 = &v25[*(int *)(v111 + 24)];
      v51 = v50[8];
      if (v51 != 255)
      {
        v52 = UIInterfaceOrientationIsLandscape(v106);
        if ((v51 & 1) == 0 && v52 != ((*v50 & 1) == 0))
          break;
      }
      sub_1B8CA11B0((uint64_t)v25, (uint64_t)v22);
      v53 = (char *)v22 + *(int *)(v111 + 24);
      v54 = *(_QWORD *)v53;
      v55 = v53[8];
      sub_1B8CA11F4((uint64_t)v22);
      if (v55 != 255 && (v55 & 1) != 0 && v54 == v106)
        goto LABEL_28;
      v5 = (unint64_t)v108;
      sub_1B8CA11B0((uint64_t)v25, (uint64_t)v108);
      v48 = *((unsigned __int8 *)&v105->isa + *(int *)(v111 + 24));
      sub_1B8CA11F4(v5);
      if (v48 == 255)
        goto LABEL_29;
      sub_1B8CA11F4((uint64_t)v25);
LABEL_19:
      ++v45;
      v46 = v109;
      if (v44 == v45)
      {
        a4 = v113[0];
        goto LABEL_36;
      }
    }
    sub_1B8CA11B0((uint64_t)v25, (uint64_t)v22);
    sub_1B8CA11F4((uint64_t)v22);
LABEL_28:
    v56 = v108;
    sub_1B8CA11B0((uint64_t)v25, (uint64_t)v108);
    sub_1B8CA11F4((uint64_t)v56);
LABEL_29:
    sub_1B8CA127C((uint64_t)v25, v110);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1B8CA1178(0, *(_QWORD *)(v47 + 16) + 1, 1);
    v47 = v113[0];
    v5 = *(_QWORD *)(v113[0] + 16);
    v57 = *(_QWORD *)(v113[0] + 24);
    if (v5 >= v57 >> 1)
    {
      sub_1B8CA1178(v57 > 1, v5 + 1, 1);
      v47 = v113[0];
    }
    *(_QWORD *)(v47 + 16) = v5 + 1;
    sub_1B8CA127C(v110, (uint64_t)a4 + v47 + v5 * v49);
    goto LABEL_19;
  }
  a4 = v33;
  v46 = v109;
LABEL_36:
  swift_bridgeObjectRelease();
  v22 = v99;
  v45 = v100;
  v47 = (uint64_t)v101;
  v44 = v97;
  v5 = (unint64_t)v98;
  if (!a4[2].isa)
  {
    if (qword_1ED565318 != -1)
      goto LABEL_59;
    goto LABEL_39;
  }
  v58 = v96;
  sub_1B8CA11B0((uint64_t)a4 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80)), v96);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v58, 0, 1, v111);
  return swift_release();
}

uint64_t sub_1B8CB2740()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  if ((v1 & 1) != 0)
    sub_1B8CE18E4();
  else
    sub_1B8CE18F0();
  return sub_1B8CE1908();
}

uint64_t sub_1B8CB27B4()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    sub_1B8CE18E4();
    return sub_1B8CE18E4();
  }
  else
  {
    sub_1B8CE18E4();
    return sub_1B8CE18F0();
  }
}

uint64_t sub_1B8CB2804()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  if ((v1 & 1) != 0)
    sub_1B8CE18E4();
  else
    sub_1B8CE18F0();
  return sub_1B8CE1908();
}

uint64_t sub_1B8CB2874(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (*(_QWORD *)a1 == *(_QWORD *)a2)
    v2 = *(_BYTE *)(a2 + 8);
  else
    v2 = 0;
  v3 = ((*(_QWORD *)a1 & 1) == 0) ^ *(_QWORD *)a2;
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    v3 = 0;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
    v3 = v2;
  return v3 & 1;
}

uint64_t sub_1B8CB28B0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  _QWORD *v49;
  char *v50;
  char *v51;
  int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  void (*v59)(char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  _QWORD *v64;

  v1 = v0;
  v2 = sub_1B8CE0F84();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v62 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v61 = (char *)&v61 - v6;
  v7 = type metadata accessor for WKAnimationPackageLayerState();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v61 - v14;
  v16 = (uint64_t)&v1[*(int *)(v7 + 20)];
  sub_1B8CA1624(v16, (uint64_t)&v61 - v14);
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v17 = v63(v15, 1, v2);
  sub_1B8C88430((uint64_t)v15, &qword_1ED565328);
  sub_1B8CA11B0((uint64_t)v1, (uint64_t)v9);
  if (v17 == 1)
  {
    v18 = v9[*(int *)(v7 + 24) + 8];
    sub_1B8CA11F4((uint64_t)v9);
    if (v18 == 255)
    {
      if (!*v1)
        return 0x7065656C53;
      if (*v1 == 1)
        return 0x64656B636F4CLL;
      return 0x6B636F6C6E55;
    }
    v19 = *v1;
    if (*v1)
      goto LABEL_4;
LABEL_9:
    v20 = sub_1B8CB3868(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v27 = v20[2];
    v26 = v20[3];
    v23 = v27 + 1;
    if (v27 >= v26 >> 1)
      v20 = sub_1B8CB3868((_QWORD *)(v26 > 1), v27 + 1, 1, v20);
    v20[2] = v23;
    v28 = &v20[2 * v27];
    v28[4] = 0x7065656C53;
    v29 = v28 + 4;
    v30 = 0xE500000000000000;
    goto LABEL_16;
  }
  sub_1B8CA11F4((uint64_t)v9);
  v19 = *v1;
  if (!*v1)
    goto LABEL_9;
LABEL_4:
  if (v19 == 1)
  {
    v20 = sub_1B8CB3868(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v22 = v20[2];
    v21 = v20[3];
    v23 = v22 + 1;
    if (v22 >= v21 >> 1)
      v20 = sub_1B8CB3868((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
    v20[2] = v23;
    v24 = &v20[2 * v22];
    v25 = 1801678668;
  }
  else
  {
    v20 = sub_1B8CB3868(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v32 = v20[2];
    v31 = v20[3];
    v23 = v32 + 1;
    if (v32 >= v31 >> 1)
      v20 = sub_1B8CB3868((_QWORD *)(v31 > 1), v32 + 1, 1, v20);
    v20[2] = v23;
    v24 = &v20[2 * v32];
    v25 = 1701670728;
  }
  v24[4] = v25;
  v29 = v24 + 4;
  v30 = 0xE400000000000000;
LABEL_16:
  v29[1] = v30;
  v33 = &v1[*(int *)(v7 + 24)];
  v34 = v33[8];
  if (v34 != 255)
  {
    v35 = *(_QWORD *)v33;
    if ((v34 & 1) != 0)
    {
      switch(v35)
      {
        case 2:
          v44 = v20[3];
          if (v23 >= v44 >> 1)
            v20 = sub_1B8CB3868((_QWORD *)(v44 > 1), v23 + 1, 1, v20);
          v20[2] = v23 + 1;
          v45 = &v20[2 * v23];
          v45[4] = 0x7469617274726F50;
          v40 = v45 + 4;
          v37 = 0xEC0000006E776F44;
          break;
        case 3:
          v46 = v20[3];
          if (v23 >= v46 >> 1)
            v20 = sub_1B8CB3868((_QWORD *)(v46 > 1), v23 + 1, 1, v20);
          v20[2] = v23 + 1;
          v47 = &v20[2 * v23];
          v47[4] = 0x70616373646E614CLL;
          v40 = v47 + 4;
          v37 = 0xEE00746867695265;
          break;
        case 4:
          v41 = v20[3];
          if (v23 >= v41 >> 1)
            v20 = sub_1B8CB3868((_QWORD *)(v41 > 1), v23 + 1, 1, v20);
          v20[2] = v23 + 1;
          v42 = &v20[2 * v23];
          v42[4] = 0x70616373646E614CLL;
          v40 = v42 + 4;
          v37 = 0xED00007466654C65;
          break;
        default:
          v48 = v20[3];
          if (v23 >= v48 >> 1)
            v20 = sub_1B8CB3868((_QWORD *)(v48 > 1), v23 + 1, 1, v20);
          v20[2] = v23 + 1;
          v49 = &v20[2 * v23];
          v49[4] = 0x7469617274726F50;
          v40 = v49 + 4;
          v37 = 0xEA00000000007055;
          break;
      }
    }
    else
    {
      if ((v35 & 1) != 0)
        v36 = 0x70616373646E614CLL;
      else
        v36 = 0x7469617274726F50;
      if ((v35 & 1) != 0)
        v37 = 0xE900000000000065;
      else
        v37 = 0xE800000000000000;
      v38 = v20[3];
      if (v23 >= v38 >> 1)
        v20 = sub_1B8CB3868((_QWORD *)(v38 > 1), v23 + 1, 1, v20);
      v20[2] = v23 + 1;
      v39 = &v20[2 * v23];
      v39[4] = v36;
      v40 = v39 + 4;
    }
    v40[1] = v37;
  }
  sub_1B8CA1624(v16, (uint64_t)v13);
  if (v63(v13, 1, v2) == 1)
  {
    sub_1B8C88430((uint64_t)v13, &qword_1ED565328);
  }
  else
  {
    v50 = v61;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v61, v13, v2);
    v51 = v62;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v62, v50, v2);
    v52 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v51, v2);
    v54 = v20[2];
    v53 = v20[3];
    v55 = v53 >> 1;
    v56 = v54 + 1;
    if (v52 == *MEMORY[0x1E0CD86D0])
    {
      if (v55 <= v54)
        v20 = sub_1B8CB3868((_QWORD *)(v53 > 1), v54 + 1, 1, v20);
      v20[2] = v56;
      v57 = &v20[2 * v54];
      v57[4] = 1802658116;
      v57[5] = 0xE400000000000000;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v50, v2);
    }
    else
    {
      if (v55 <= v54)
        v20 = sub_1B8CB3868((_QWORD *)(v53 > 1), v54 + 1, 1, v20);
      v20[2] = v56;
      v58 = &v20[2 * v54];
      v58[4] = 0x746867694CLL;
      v58[5] = 0xE500000000000000;
      v59 = *(void (**)(char *, uint64_t))(v3 + 8);
      v59(v50, v2);
      v59(v62, v2);
    }
  }
  v64 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5650C8);
  sub_1B8CA1230();
  v43 = sub_1B8CE147C();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1B8CB2F98(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for WKAnimationPackageLayerState();
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9D8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_1B8CA11B0(a3 + v16 + v13 * v14, (uint64_t)v12);
      v17 = a1(v12);
      if (v3)
      {
        sub_1B8CA11F4((uint64_t)v12);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_1B8CA127C((uint64_t)v12, v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1B8CA1178(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1B8CA1178(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_1B8CA127C(v23, v15 + v16 + v19 * v13);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_1B8CA11F4((uint64_t)v12);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1B8CB3188(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  _BOOL8 v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v3 = type metadata accessor for WKAnimationPackageLayerState();
  MEMORY[0x1E0C80A78](v3);
  v37 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8CE0F84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565340);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
  v12 = MEMORY[0x1E0C80A78](v11);
  v33 = (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v32 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v32 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v32 - v20;
  v34 = v3;
  v22 = *(int *)(v3 + 20);
  v36 = a1;
  sub_1B8CA1624(a1 + v22, (uint64_t)&v32 - v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v19, v35, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1B8CA1624((uint64_t)v21, (uint64_t)v10);
  sub_1B8CA1624((uint64_t)v19, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v24((uint64_t)v10, 1, v5) != 1)
  {
    sub_1B8CA1624((uint64_t)v10, (uint64_t)v16);
    if (v24(v23, 1, v5) != 1)
    {
      v26 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v32, v23, v5);
      sub_1B8C83740(&qword_1ED567168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD86F8], MEMORY[0x1E0CD8718]);
      v27 = sub_1B8CE1488();
      v28 = *(void (**)(char *, uint64_t))(v6 + 8);
      v28(v26, v5);
      sub_1B8C88430((uint64_t)v19, &qword_1ED565328);
      sub_1B8C88430((uint64_t)v21, &qword_1ED565328);
      v28(v16, v5);
      sub_1B8C88430((uint64_t)v10, &qword_1ED565328);
      v25 = v37;
      sub_1B8CA11B0(v36, v37);
      if ((v27 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v30 = v33;
      sub_1B8CB3DFC(v25 + *(int *)(v34 + 20), v33);
      v29 = v24(v30, 1, v5) == 1;
      sub_1B8C88430(v30, &qword_1ED565328);
      return v29;
    }
    sub_1B8C88430((uint64_t)v19, &qword_1ED565328);
    sub_1B8C88430((uint64_t)v21, &qword_1ED565328);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
LABEL_6:
    sub_1B8C88430((uint64_t)v10, (uint64_t *)&unk_1ED565340);
    v25 = v37;
    sub_1B8CA11B0(v36, v37);
    goto LABEL_9;
  }
  sub_1B8C88430((uint64_t)v19, &qword_1ED565328);
  sub_1B8C88430((uint64_t)v21, &qword_1ED565328);
  if (v24(v23, 1, v5) != 1)
    goto LABEL_6;
  sub_1B8C88430((uint64_t)v10, &qword_1ED565328);
  v25 = v37;
  sub_1B8CA11B0(v36, v37);
LABEL_8:
  sub_1B8CA11F4(v25);
  return 1;
}

uint64_t sub_1B8CB355C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v12;

  v1 = v0;
  v2 = sub_1B8CE0F84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8CE14D0();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for WKAnimationPackageLayerState();
  sub_1B8CA1624(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1B8CE18F0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1B8CE18F0();
    sub_1B8C83740((unint64_t *)&unk_1ED567158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD86F8], MEMORY[0x1E0CD8710]);
    sub_1B8CE1470();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v10 = *(unsigned __int8 *)(v1 + *(int *)(v9 + 24) + 8);
  if (v10 == 255)
    return sub_1B8CE18F0();
  sub_1B8CE18F0();
  if ((v10 & 1) == 0)
  {
    sub_1B8CE18E4();
    return sub_1B8CE18F0();
  }
  sub_1B8CE18E4();
  return sub_1B8CE18E4();
}

uint64_t sub_1B8CB3744()
{
  sub_1B8CE18D8();
  sub_1B8CB355C();
  return sub_1B8CE1908();
}

uint64_t sub_1B8CB3784()
{
  sub_1B8CE18D8();
  sub_1B8CB355C();
  return sub_1B8CE1908();
}

uint64_t sub_1B8CB37C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8CA11B0(v1, a1);
}

uint64_t sub_1B8CB37CC()
{
  uint64_t v0;

  sub_1B8CB28B0();
  v0 = sub_1B8CE14C4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B8CB3810()
{
  return sub_1B8C83740(&qword_1EF1D42B0, (uint64_t (*)(uint64_t))type metadata accessor for WKAnimationPackageLayerState, (uint64_t)&unk_1B8CE73C8);
}

uint64_t sub_1B8CB383C()
{
  return sub_1B8C83740(&qword_1ED5652A0, (uint64_t (*)(uint64_t))type metadata accessor for WKAnimationPackageLayerState, (uint64_t)&unk_1B8CE73A0);
}

_QWORD *sub_1B8CB3868(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565118);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B8CB3CE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8CB3974(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  unsigned __int8 *v29;
  int v30;
  unsigned __int8 *v31;
  int v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  unsigned __int8 *v39;

  v4 = sub_1B8CE0F84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565340);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v36 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v36 - v18;
  if (*a1 != *a2)
    return 0;
  v20 = type metadata accessor for WKAnimationPackageLayerState();
  v21 = a1;
  v22 = v20;
  v23 = *(int *)(v20 + 20);
  v37 = v21;
  sub_1B8CA1624((uint64_t)&v21[v23], (uint64_t)v19);
  v38 = v22;
  v39 = a2;
  sub_1B8CA1624((uint64_t)&a2[*(int *)(v22 + 20)], (uint64_t)v17);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1B8CA1624((uint64_t)v19, (uint64_t)v10);
  sub_1B8CA1624((uint64_t)v17, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) != 1)
  {
    sub_1B8CA1624((uint64_t)v10, (uint64_t)v14);
    if (v25(v24, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v24, v4);
      sub_1B8C83740(&qword_1ED567168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD86F8], MEMORY[0x1E0CD8718]);
      v26 = sub_1B8CE1488();
      v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v27(v7, v4);
      sub_1B8C88430((uint64_t)v17, &qword_1ED565328);
      sub_1B8C88430((uint64_t)v19, &qword_1ED565328);
      v27(v14, v4);
      sub_1B8C88430((uint64_t)v10, &qword_1ED565328);
      if ((v26 & 1) == 0)
        return 0;
      goto LABEL_9;
    }
    sub_1B8C88430((uint64_t)v17, &qword_1ED565328);
    sub_1B8C88430((uint64_t)v19, &qword_1ED565328);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_7:
    sub_1B8C88430((uint64_t)v10, (uint64_t *)&unk_1ED565340);
    return 0;
  }
  sub_1B8C88430((uint64_t)v17, &qword_1ED565328);
  sub_1B8C88430((uint64_t)v19, &qword_1ED565328);
  if (v25(v24, 1, v4) != 1)
    goto LABEL_7;
  sub_1B8C88430((uint64_t)v10, &qword_1ED565328);
LABEL_9:
  v28 = *(int *)(v38 + 24);
  v29 = &v37[v28];
  v30 = v37[v28 + 8];
  v31 = &v39[v28];
  v32 = v39[v28 + 8];
  if (v30 == 255)
  {
    if (v32 == 255)
      return 1;
  }
  else if (v32 != 255)
  {
    v34 = *(_QWORD *)v29;
    v35 = *(_QWORD *)v31;
    if ((v30 & 1) != 0)
    {
      if ((v32 & 1) != 0 && v34 == v35)
        return 1;
    }
    else if ((v32 & 1) == 0 && ((((v34 & 1) == 0) ^ v35) & 1) != 0)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1B8CB3CE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B8CE1818();
  __break(1u);
  return result;
}

BOOL UIInterfaceOrientationIsLandscape(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t sub_1B8CB3DE0(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8CB3188(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1B8CB3DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for WKAnimationPackageLayerState.DeviceOrientationStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WKAnimationPackageLayerState.DeviceOrientationStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B8CB3ED0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WKAnimationPackageLayerState.DeviceOrientationStyle()
{
  return &type metadata for WKAnimationPackageLayerState.DeviceOrientationStyle;
}

unint64_t sub_1B8CB3EF0()
{
  unint64_t result;

  result = qword_1EF1D42B8;
  if (!qword_1EF1D42B8)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE7428, &type metadata for WKAnimationPackageLayerState.DeviceOrientationStyle);
    atomic_store(result, (unint64_t *)&qword_1EF1D42B8);
  }
  return result;
}

uint64_t sub_1B8CB3F34(char a1)
{
  return *(_QWORD *)&aSleep_4[8 * a1];
}

uint64_t sub_1B8CB3F54(char a1)
{
  return *(_QWORD *)&aSleep_5[8 * a1];
}

uint64_t sub_1B8CB3F74()
{
  sub_1B8CE18D8();
  sub_1B8CE14D0();
  swift_bridgeObjectRelease();
  return sub_1B8CE1908();
}

uint64_t sub_1B8CB3FDC()
{
  return sub_1B8CB3F74();
}

uint64_t sub_1B8CB3FE4()
{
  char *v0;

  sub_1B8CB3F54(*v0);
  sub_1B8CE14D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8CB4024()
{
  sub_1B8CE18D8();
  sub_1B8CE14D0();
  swift_bridgeObjectRelease();
  return sub_1B8CE1908();
}

void sub_1B8CB4088(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void sub_1B8CB4094(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6EF7268;
}

uint64_t sub_1B8CB40A4()
{
  char *v0;

  return sub_1B8CB3F34(*v0);
}

uint64_t storeEnumTagSinglePayload for WKDeviceState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8CB40F8 + 4 * byte_1B8CE74FD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8CB412C + 4 * byte_1B8CE74F8[v4]))();
}

uint64_t sub_1B8CB412C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CB4134(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8CB413CLL);
  return result;
}

uint64_t sub_1B8CB4148(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8CB4150);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8CB4154(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CB415C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WKDeviceState()
{
  return &type metadata for WKDeviceState;
}

unint64_t sub_1B8CB417C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1D42C0;
  if (!qword_1EF1D42C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D42C8);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1D42C0);
  }
  return result;
}

unint64_t sub_1B8CB41CC()
{
  unint64_t result;

  result = qword_1EF1D42D0;
  if (!qword_1EF1D42D0)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE75B8, &type metadata for WKDeviceState);
    atomic_store(result, (unint64_t *)&qword_1EF1D42D0);
  }
  return result;
}

unint64_t sub_1B8CB4214()
{
  unint64_t result;

  result = qword_1ED565658;
  if (!qword_1ED565658)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE75F8, &type metadata for WKDeviceState);
    atomic_store(result, (unint64_t *)&qword_1ED565658);
  }
  return result;
}

uint64_t destroy for WKAdaptiveStripesStack(uint64_t a1)
{
  sub_1B8C85880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  return swift_release();
}

uint64_t initializeWithCopy for WKAdaptiveStripesStack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 72);
  v16 = *(_QWORD *)(a2 + 80);
  v17 = *(_QWORD *)(a2 + 88);
  v18 = *(_QWORD *)(a2 + 96);
  v19 = *(_QWORD *)(a2 + 104);
  v20 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16, v17, v18, v19, v20);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v16;
  *(_QWORD *)(a1 + 88) = v17;
  *(_QWORD *)(a1 + 96) = v18;
  *(_QWORD *)(a1 + 104) = v19;
  *(_BYTE *)(a1 + 112) = v20;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WKAdaptiveStripesStack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v26 = *(_QWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v30 = *(_QWORD *)(a2 + 96);
  v31 = *(_QWORD *)(a2 + 104);
  v32 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30, v31, v32);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(void **)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v26;
  *(_QWORD *)(a1 + 72) = v27;
  *(_QWORD *)(a1 + 80) = v28;
  *(_QWORD *)(a1 + 88) = v29;
  *(_QWORD *)(a1 + 96) = v30;
  *(_QWORD *)(a1 + 104) = v31;
  *(_BYTE *)(a1 + 112) = v32;
  sub_1B8C85880(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t assignWithTake for WKAdaptiveStripesStack(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v4 = *(_BYTE *)(a2 + 112);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(void **)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_BYTE *)(a1 + 112);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = v4;
  sub_1B8C85880(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, v17);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_release();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for WKAdaptiveStripesStack(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 153))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 144);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WKAdaptiveStripesStack(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 144) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 153) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKAdaptiveStripesStack()
{
  return &type metadata for WKAdaptiveStripesStack;
}

uint64_t sub_1B8CB468C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8CB469C@<X0>(uint64_t *a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  double v7;
  double v8;
  CGFloat v9;
  double Height;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v22[7];
  __int128 v23;
  _BYTE v24[25];
  CGRect v25;

  v3 = v1[7];
  v22[6] = v1[6];
  v23 = v3;
  *(_OWORD *)v24 = v1[8];
  *(_OWORD *)&v24[9] = *(_OWORD *)((char *)v1 + 137);
  v4 = v1[3];
  v22[2] = v1[2];
  v22[3] = v4;
  v5 = v1[5];
  v22[4] = v1[4];
  v22[5] = v5;
  v6 = v1[1];
  v22[0] = *v1;
  v22[1] = v6;
  v7 = WKPosterCanvasSize();
  v9 = v8;
  v25.origin.x = 0.0;
  v25.origin.y = 0.0;
  v25.size.width = v7;
  v25.size.height = v9;
  Height = CGRectGetHeight(v25);
  v11 = *((double *)&v23 + 1);
  v12 = *(double *)&v24[8];
  objc_msgSend(*(id *)(*(_QWORD *)&v24[16] + 16), sel_stripeHeightFactor);
  v14 = Height * *(double *)v24 * v13;
  *a1 = sub_1B8CE1374();
  a1[1] = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D42D8);
  v16 = swift_allocObject();
  v17 = v1[7];
  *(_OWORD *)(v16 + 112) = v1[6];
  *(_OWORD *)(v16 + 128) = v17;
  *(_OWORD *)(v16 + 144) = v1[8];
  *(_OWORD *)(v16 + 153) = *(_OWORD *)((char *)v1 + 137);
  v18 = v1[3];
  *(_OWORD *)(v16 + 48) = v1[2];
  *(_OWORD *)(v16 + 64) = v18;
  v19 = v1[5];
  *(_OWORD *)(v16 + 80) = v1[4];
  *(_OWORD *)(v16 + 96) = v19;
  v20 = v1[1];
  *(_OWORD *)(v16 + 16) = *v1;
  *(_OWORD *)(v16 + 32) = v20;
  *(double *)(v16 + 176) = Height * v11 + v14 * -3.0;
  *(double *)(v16 + 184) = v14;
  *(double *)(v16 + 192) = Height * v12;
  *(_QWORD *)(v16 + 200) = 0;
  *(_QWORD *)(v16 + 208) = 0;
  *(double *)(v16 + 216) = v7;
  *(CGFloat *)(v16 + 224) = v9;
  sub_1B8CB4BA0((uint64_t)v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D42E0);
  sub_1B8C86A88(&qword_1EF1D42E8, &qword_1EF1D42E0, MEMORY[0x1E0DEAF48]);
  sub_1B8CB4C04();
  sub_1B8CB4C48();
  return sub_1B8CE135C();
}

uint64_t sub_1B8CB4874@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, CGFloat a7@<D3>, CGFloat a8@<D4>, CGFloat a9@<D5>, CGFloat a10@<D6>)
{
  unsigned __int8 v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v19 = *a1;
  result = sub_1B8C867C0(*a1, (uint64_t)&unk_1E6EF7930);
  if ((v21 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1B8CB49A8(result, (double *)v28, a4, a5, a6, a7, a8, a9, a10);
    v25 = v28[0];
    v26 = v28[1];
    v27 = v28[2];
    v22 = v29;
    v23 = v30;
    v24 = *(_BYTE *)(a2 + 152);
    result = swift_getKeyPath();
    LOBYTE(v28[0]) = 0;
    *(_QWORD *)a3 = result;
    *(_OWORD *)(a3 + 8) = 0u;
    *(_OWORD *)(a3 + 24) = 0u;
    *(_OWORD *)(a3 + 40) = 0u;
    *(_OWORD *)(a3 + 56) = 0u;
    *(_OWORD *)(a3 + 72) = 0u;
    *(_OWORD *)(a3 + 88) = 0u;
    *(_QWORD *)(a3 + 104) = 0;
    *(_BYTE *)(a3 + 112) = 0;
    *(_QWORD *)(a3 + 120) = 0;
    *(_BYTE *)(a3 + 128) = v19;
    *(_BYTE *)(a3 + 129) = v24;
    *(_OWORD *)(a3 + 136) = v25;
    *(_OWORD *)(a3 + 152) = v26;
    *(_OWORD *)(a3 + 168) = v27;
    *(_QWORD *)(a3 + 184) = v22;
    *(_QWORD *)(a3 + 192) = v23;
  }
  return result;
}

double sub_1B8CB49A8@<D0>(uint64_t a1@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, CGFloat a6@<D3>, CGFloat a7@<D4>, CGFloat a8@<D5>, CGFloat a9@<D6>)
{
  double v15;
  double v16;
  double MinX;
  double v18;
  double MaxX;
  double v20;
  double v21;
  double v22;
  double result;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  v15 = (double)a1 * a4 + a3;
  v16 = 0.5;
  if (a1 == 5)
    v16 = 0.0;
  v28 = v16 * a4 + a4;
  v29.origin.x = a6;
  v29.origin.y = a7;
  v29.size.width = a8;
  v29.size.height = a9;
  MinX = CGRectGetMinX(v29);
  v30.origin.x = a6;
  v30.origin.y = a7;
  v30.size.width = a8;
  v30.size.height = a9;
  v27 = MinX - CGRectGetWidth(v30);
  v24 = v15 + a5;
  v31.origin.x = a6;
  v31.origin.y = a7;
  v31.size.width = a8;
  v31.size.height = a9;
  v18 = CGRectGetMinX(v31);
  v32.origin.x = a6;
  v32.origin.y = a7;
  v32.size.width = a8;
  v32.size.height = a9;
  v25 = v15 + a5 + v28;
  v26 = v18 - CGRectGetWidth(v32);
  v33.origin.x = a6;
  v33.origin.y = a7;
  v33.size.width = a8;
  v33.size.height = a9;
  MaxX = CGRectGetMaxX(v33);
  v34.origin.x = a6;
  v34.origin.y = a7;
  v34.size.width = a8;
  v34.size.height = a9;
  v20 = MaxX + CGRectGetWidth(v34);
  v21 = v15 - (a5 + a5);
  v35.origin.x = a6;
  v35.origin.y = a7;
  v35.size.width = a8;
  v35.size.height = a9;
  v22 = CGRectGetMaxX(v35);
  v36.origin.x = a6;
  v36.origin.y = a7;
  v36.size.width = a8;
  v36.size.height = a9;
  result = v22 + CGRectGetWidth(v36);
  *a2 = v27;
  a2[1] = v24;
  a2[2] = v26;
  a2[3] = v25;
  a2[4] = v20;
  a2[5] = v21;
  a2[6] = result;
  a2[7] = v21 + v28;
  return result;
}

uint64_t sub_1B8CB4B30()
{
  uint64_t v0;

  sub_1B8C85880(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_BYTE *)(v0 + 128));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8CB4B88@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  double *v2;

  return sub_1B8CB4874(a1, (uint64_t)(v2 + 2), a2, v2[22], v2[23], v2[24], v2[25], v2[26], v2[27], v2[28]);
}

uint64_t sub_1B8CB4BA0(uint64_t a1)
{
  sub_1B8C85798(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  swift_retain();
  return a1;
}

unint64_t sub_1B8CB4C04()
{
  unint64_t result;

  result = qword_1EF1D42F0;
  if (!qword_1EF1D42F0)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE7748, &type metadata for WKAdaptiveStripeView);
    atomic_store(result, (unint64_t *)&qword_1EF1D42F0);
  }
  return result;
}

unint64_t sub_1B8CB4C48()
{
  unint64_t result;

  result = qword_1EF1D42F8;
  if (!qword_1EF1D42F8)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE96C8, &type metadata for WKStripeColor);
    atomic_store(result, (unint64_t *)&qword_1EF1D42F8);
  }
  return result;
}

uint64_t sub_1B8CB4C94()
{
  return sub_1B8C86A88(&qword_1EF1D4300, &qword_1EF1D4308, MEMORY[0x1E0CDFCF8]);
}

uint64_t destroy for WKAdaptiveStripeView(uint64_t a1)
{
  return sub_1B8C85880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
}

uint64_t initializeWithCopy for WKAdaptiveStripeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 96);
  v18 = *(_QWORD *)(a2 + 104);
  v19 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 104) = v18;
  *(_BYTE *)(a1 + 112) = v19;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  return a1;
}

uint64_t assignWithCopy for WKAdaptiveStripeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v26 = *(_QWORD *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v30 = *(_QWORD *)(a2 + 96);
  v31 = *(_QWORD *)(a2 + 104);
  v32 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30, v31, v32);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(void **)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v26;
  *(_QWORD *)(a1 + 72) = v27;
  *(_QWORD *)(a1 + 80) = v28;
  *(_QWORD *)(a1 + 88) = v29;
  *(_QWORD *)(a1 + 96) = v30;
  *(_QWORD *)(a1 + 104) = v31;
  *(_BYTE *)(a1 + 112) = v32;
  sub_1B8C85880(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t assignWithTake for WKAdaptiveStripeView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v4 = *(_BYTE *)(a2 + 112);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(void **)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_BYTE *)(a1 + 112);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = v4;
  sub_1B8C85880(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, v17);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for WKAdaptiveStripeView(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 200))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 112);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WKAdaptiveStripeView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 200) = 0;
    if (a2)
      *(_BYTE *)(result + 112) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKAdaptiveStripeView()
{
  return &type metadata for WKAdaptiveStripeView;
}

uint64_t sub_1B8CB513C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8CB514C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  int v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[56];
  id v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[64];
  uint64_t v43;

  v3 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)&v42[32] = *(_OWORD *)(v1 + 160);
  *(_OWORD *)&v42[48] = v3;
  v43 = *(_QWORD *)(v1 + 192);
  v4 = *(_OWORD *)(v1 + 112);
  v40 = *(_OWORD *)(v1 + 96);
  v41 = v4;
  v5 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)v42 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)&v42[16] = v5;
  v6 = *(_OWORD *)(v1 + 48);
  v36 = *(_OWORD *)(v1 + 32);
  v37 = v6;
  v7 = *(_OWORD *)(v1 + 80);
  v38 = *(_OWORD *)(v1 + 64);
  v39 = v7;
  v8 = *(_OWORD *)(v1 + 16);
  v35[0] = *(_OWORD *)v1;
  v35[1] = v8;
  v9 = v42[0];
  v27 = v35[0];
  v28 = v8;
  v29 = v36;
  v30 = v6;
  v31 = v38;
  v32 = v39;
  v33 = v40;
  v34 = v41;
  sub_1B8C86848((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85798);
  sub_1B8CDF63C((uint64_t)v24);
  v10 = v26;

  swift_release();
  if (!v9 && v42[1] && UIInterfaceOrientationIsLandscape(v10))
    v11 = sub_1B8CE12A8();
  else
    sub_1B8CDB5B4(v9);
  v12 = v11;
  sub_1B8C86848((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85880);
  v22 = *(_OWORD *)&v42[24];
  v23 = *(_OWORD *)&v42[8];
  v21 = *(_OWORD *)&v42[40];
  v13 = *(_QWORD *)&v42[56];
  v14 = v43;
  KeyPath = swift_getKeyPath();
  v16 = sub_1B8CE13A4();
  v17 = sub_1B8CE1170();
  result = sub_1B8CE13B0();
  *(_OWORD *)a1 = v23;
  *(_OWORD *)(a1 + 16) = v22;
  *(_OWORD *)(a1 + 32) = v21;
  *(_QWORD *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = KeyPath;
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v16;
  *(_DWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 104) = v19;
  *(_QWORD *)(a1 + 112) = v20;
  *(_BYTE *)(a1 + 120) = 1;
  return result;
}

unint64_t sub_1B8CB52E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1D4310;
  if (!qword_1EF1D4310)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4318);
    v2[0] = sub_1B8CB536C();
    v2[1] = sub_1B8C86A88(&qword_1EF1D4338, &qword_1EF1D4340, MEMORY[0x1E0CDC1F0]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4310);
  }
  return result;
}

unint64_t sub_1B8CB536C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1D4320;
  if (!qword_1EF1D4320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4328);
    v2[0] = sub_1B8CB53F0();
    v2[1] = sub_1B8C86A88(&qword_1ED567498, &qword_1ED5674A0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4320);
  }
  return result;
}

unint64_t sub_1B8CB53F0()
{
  unint64_t result;

  result = qword_1EF1D4330;
  if (!qword_1EF1D4330)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE8480, &type metadata for WKAdaptiveStripeParallelogram);
    atomic_store(result, (unint64_t *)&qword_1EF1D4330);
  }
  return result;
}

uint64_t sub_1B8CB5434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  id v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  unsigned __int8 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;

  v1 = v0;
  swift_getKeyPath();
  v35 = (void *)v0;
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  v2 = *(_QWORD *)(v0 + 16);
  if (!v2)
    return 0;
  v3 = *(void **)(v2 + 16);
  swift_retain();
  if (!objc_msgSend(v3, sel_valueBasedWallpaperForLocation_andAppearance_, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("default")))
  {
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    swift_release();
    goto LABEL_10;
  }
  sub_1B8C8FB7C((uint64_t *)&v37);
  swift_release();
  swift_unknownObjectRelease();
  v4 = *((_QWORD *)&v38 + 1);
  if (!*((_QWORD *)&v38 + 1))
  {
LABEL_10:
    sub_1B8C88430((uint64_t)&v37, &qword_1EF1D4040);
    return 0;
  }
  v5 = v39;
  __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v5 + 24))(&v35, v4, v5);
  v6 = v35;
  v7 = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  if (v7 != 2)
  {
    sub_1B8C8846C(v6, v7);
    return 0;
  }
  swift_getKeyPath();
  *(_QWORD *)&v37 = v1;
  sub_1B8CE0E7C();
  swift_release();
  v8 = *(_QWORD *)(v1 + 96);
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_mainScreen);
  v11 = objc_msgSend(v10, sel_fixedCoordinateSpace);

  objc_msgSend(v11, sel_bounds);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_unknownObjectRelease();
  swift_getKeyPath();
  *(_QWORD *)&v37 = v1;
  sub_1B8CE0E7C();
  swift_release();
  *(_QWORD *)&v37 = v8;
  *((_QWORD *)&v37 + 1) = v13;
  *(_QWORD *)&v38 = v15;
  *((_QWORD *)&v38 + 1) = v17;
  v39 = v19;
  v40 = *(_OWORD *)(v1 + 104);
  v41 = *(_OWORD *)(v1 + 120);
  swift_getKeyPath();
  v35 = (void *)v1;
  sub_1B8CE0E7C();
  swift_release();
  swift_beginAccess();
  v20 = *(_QWORD *)(v1 + 160);
  if (!*(_QWORD *)(v20 + 16))
  {
LABEL_15:
    v25 = objc_msgSend(v9, sel_mainScreen);
    v26 = objc_msgSend(v25, sel_fixedCoordinateSpace);

    objc_msgSend(v26, sel_bounds);
    swift_unknownObjectRelease();
    v34 = (uint64_t)v6;
    v27 = sub_1B8CB6B50(&v34);
    v29 = v28;
    v31 = v30;
    swift_getKeyPath();
    v34 = v1;
    sub_1B8CE0E7C();
    swift_release();
    v34 = v1;
    swift_getKeyPath();
    sub_1B8CE0E94();
    swift_release();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = *(_QWORD *)(v1 + 160);
    *(_QWORD *)(v1 + 160) = 0x8000000000000000;
    sub_1B8CA0874((uint64_t *)&v37, isUniquelyReferenced_nonNull_native, v27, v29, v31);
    *(_QWORD *)(v1 + 160) = v33;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v34 = v1;
    swift_getKeyPath();
    sub_1B8CE0E88();
    swift_release();
    sub_1B8C8846C(v6, 2);
    return *(_QWORD *)&v27;
  }
  swift_bridgeObjectRetain();
  v21 = sub_1B8C9C644((uint64_t *)&v37);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 24 * v21);
  swift_bridgeObjectRelease();
  sub_1B8C8846C(v6, 2);
  return v23;
}

double sub_1B8CB58EC()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  return *(double *)(v0 + 136);
}

uint64_t sub_1B8CB5970@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

id sub_1B8CB5A00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  id v11;

  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  v3 = *(_BYTE *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_BYTE *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v11 = *(id *)(v1 + 80);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v11;
  v9 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 80) = v9;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 120);
  swift_retain();
  return v11;
}

uint64_t sub_1B8CB5AE8()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  return *(_QWORD *)(v0 + 152);
}

uint64_t sub_1B8CB5B6C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 16) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1B8CB5BA4(uint64_t a1, _OWORD *a2)
{
  void *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = *(void **)(a1 + 80);
  v3 = a2[2];
  *(_OWORD *)(a1 + 72) = a2[3];
  v4 = a2[5];
  *(_OWORD *)(a1 + 88) = a2[4];
  *(_OWORD *)(a1 + 104) = v4;
  *(_OWORD *)(a1 + 120) = a2[6];
  v5 = a2[1];
  *(_OWORD *)(a1 + 24) = *a2;
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 56) = v3;
  sub_1B8CB6A68((uint64_t)a2);

  return swift_release();
}

uint64_t sub_1B8CB5C10(uint64_t result, double a2)
{
  *(double *)(result + 136) = a2;
  return result;
}

uint64_t sub_1B8CB5C18()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  return *(unsigned __int8 *)(v0 + 144);
}

uint64_t sub_1B8CB5C9C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 144) = a2;
  return result;
}

uint64_t sub_1B8CB5CA4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 152) = a2;
  return result;
}

uint64_t sub_1B8CB5CAC()
{
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8CB5D48@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 160);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8CB5DEC()
{
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  swift_bridgeObjectRetain();
  sub_1B8CE0E70();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8CB5EA4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 160) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8CB5F08(char *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;

  v3 = v2;
  v35 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5650E8);
  MEMORY[0x1E0C80A78](v5);
  v37 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = sub_1B8CE1608();
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565040);
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  MEMORY[0x1E0C80A78](v9);
  v39 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *a1;
  v12 = a1[8];
  v13 = *((_QWORD *)a1 + 2);
  v14 = a1[24];
  v15 = *((_QWORD *)a1 + 4);
  v16 = a1[40];
  v17 = *((_QWORD *)a1 + 6);
  v18 = *((_QWORD *)a1 + 7);
  v19 = *((_QWORD *)a1 + 8);
  v20 = *((_QWORD *)a1 + 9);
  v21 = *((_QWORD *)a1 + 10);
  v22 = *((_QWORD *)a1 + 11);
  v23 = *((_QWORD *)a1 + 12);
  v24 = *((_QWORD *)a1 + 13);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 152) = 0;
  v25 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 160) = sub_1B8CC6884(MEMORY[0x1E0DEE9D8]);
  if ((v25 & 0xC000000000000000) != 0 && sub_1B8CE17DC())
    v26 = sub_1B8CB6F34(MEMORY[0x1E0DEE9D8]);
  else
    v26 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v3 + 168) = v26;
  sub_1B8CE0EA0();
  *(_BYTE *)(v3 + 24) = v11;
  *(_BYTE *)(v3 + 32) = v12;
  *(_QWORD *)(v3 + 40) = v13;
  *(_BYTE *)(v3 + 48) = v14;
  *(_QWORD *)(v3 + 56) = v15;
  *(_BYTE *)(v3 + 64) = v16;
  *(_QWORD *)(v3 + 72) = v17;
  *(_QWORD *)(v3 + 80) = v18;
  *(_QWORD *)(v3 + 88) = v19;
  *(_QWORD *)(v3 + 96) = v20;
  *(_QWORD *)(v3 + 104) = v21;
  *(_QWORD *)(v3 + 112) = v22;
  *(_QWORD *)(v3 + 120) = v23;
  *(_QWORD *)(v3 + 128) = v24;
  *(_BYTE *)(v3 + 144) = v35 & 1;
  *(double *)(v3 + 136) = sub_1B8CCF6C0(v20) * 0.0174532925;
  v27 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED5650D8 != -1)
    swift_once();
  sub_1B8CE1614();

  v42 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v28 = sub_1B8CE165C();
  v29 = (uint64_t)v37;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v37, 1, 1, v28);
  sub_1B8CB6A9C();
  sub_1B8C83740(&qword_1ED5650E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  sub_1B8C83740(&qword_1ED5650F0, (uint64_t (*)(uint64_t))sub_1B8CB6A9C, MEMORY[0x1E0CB2358]);
  v30 = v38;
  v31 = v39;
  sub_1B8CE0F48();
  sub_1B8C88430(v29, &qword_1ED5650E8);

  (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v8, v30);
  swift_allocObject();
  swift_weakInit();
  sub_1B8CB6B04();
  v32 = v41;
  sub_1B8CE0F54();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v31, v32);
  swift_beginAccess();
  sub_1B8CE0EF4();
  swift_endAccess();
  swift_release();
  return v3;
}

uint64_t sub_1B8CB62F4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    swift_getKeyPath();
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    sub_1B8CE0E7C();
    swift_release();
    v2 = *(_QWORD *)(v1 + 16);
    swift_retain();
    result = swift_release();
    if (v2)
    {
      if (objc_msgSend(*(id *)(v2 + 16), sel_isAppearanceAware))
      {
        swift_beginAccess();
        Strong = swift_weakLoadStrong();
        if (Strong)
        {
          v4 = Strong;
          swift_getKeyPath();
          sub_1B8CE0E7C();
          swift_release();
          swift_getKeyPath();
          sub_1B8CE0E94();
          result = swift_release();
          v5 = *(_QWORD *)(v4 + 152);
          v6 = __OFADD__(v5, 1);
          v7 = v5 + 1;
          if (v6)
          {
            __break(1u);
            return result;
          }
          *(_QWORD *)(v4 + 152) = v7;
          swift_getKeyPath();
          sub_1B8CE0E88();
          swift_release();
          swift_release();
        }
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1B8CB64B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterLayerViewModel___observationRegistrar;
  v2 = sub_1B8CE0EAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1B8CB652C()
{
  return type metadata accessor for WKWallpaperPosterLayerViewModel();
}

uint64_t type metadata accessor for WKWallpaperPosterLayerViewModel()
{
  uint64_t result;

  result = qword_1ED5652E8;
  if (!qword_1ED5652E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8CB6570()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8CE0EAC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WKAdaptiveStripesBaseMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WKAdaptiveStripesBaseMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WKAdaptiveStripesBaseMetrics()
{
  return &type metadata for WKAdaptiveStripesBaseMetrics;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AdaptiveStripesCacheKey(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AdaptiveStripesCacheKey(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AdaptiveStripesCacheKey()
{
  return &type metadata for AdaptiveStripesCacheKey;
}

uint64_t sub_1B8CB671C()
{
  double *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  sub_1B8CE18E4();
  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v10.origin.x = v1;
  v10.origin.y = v2;
  v10.size.width = v3;
  v10.size.height = v4;
  CGRectGetWidth(v10);
  sub_1B8CE18FC();
  v11.origin.x = v1;
  v11.origin.y = v2;
  v11.size.width = v3;
  v11.size.height = v4;
  CGRectGetHeight(v11);
  sub_1B8CE18FC();
  sub_1B8CE18FC();
  sub_1B8CE18FC();
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = v0[8];
  v12.origin.x = v5;
  v12.origin.y = v6;
  v12.size.width = v7;
  v12.size.height = v8;
  CGRectGetWidth(v12);
  sub_1B8CE18FC();
  v13.origin.x = v5;
  v13.origin.y = v6;
  v13.size.width = v7;
  v13.size.height = v8;
  CGRectGetHeight(v13);
  sub_1B8CE18FC();
  sub_1B8CE18FC();
  return sub_1B8CE18FC();
}

uint64_t sub_1B8CB6834()
{
  sub_1B8CE18D8();
  sub_1B8CB671C();
  return sub_1B8CE1908();
}

uint64_t sub_1B8CB688C()
{
  return sub_1B8CB671C();
}

uint64_t sub_1B8CB68CC()
{
  sub_1B8CE18D8();
  sub_1B8CB671C();
  return sub_1B8CE1908();
}

BOOL sub_1B8CB6920(uint64_t a1, uint64_t a2)
{
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  _BOOL8 result;
  CGRect v11;
  CGRect v12;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v2 = *(double *)(a1 + 40);
  v3 = *(double *)(a1 + 48);
  v4 = *(double *)(a1 + 56);
  v5 = *(double *)(a1 + 64);
  v6 = *(double *)(a2 + 40);
  v7 = *(double *)(a2 + 48);
  v8 = *(double *)(a2 + 56);
  v9 = *(double *)(a2 + 64);
  result = CGRectEqualToRect(*(CGRect *)(a1 + 8), *(CGRect *)(a2 + 8));
  if (result)
  {
    v11.origin.x = v2;
    v11.origin.y = v3;
    v11.size.width = v4;
    v11.size.height = v5;
    v12.origin.x = v6;
    v12.origin.y = v7;
    v12.size.width = v8;
    v12.size.height = v9;
    return CGRectEqualToRect(v11, v12);
  }
  return result;
}

BOOL sub_1B8CB69B4(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

unint64_t sub_1B8CB69E8()
{
  unint64_t result;

  result = qword_1EF1D4348;
  if (!qword_1EF1D4348)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE78E0, &type metadata for AdaptiveStripesCacheKey);
    atomic_store(result, (unint64_t *)&qword_1EF1D4348);
  }
  return result;
}

uint64_t sub_1B8CB6A2C()
{
  uint64_t result;

  result = sub_1B8CE1494();
  qword_1ED56B8A8 = result;
  return result;
}

uint64_t sub_1B8CB6A68(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 56);
  swift_retain();
  v3 = v2;
  return a1;
}

unint64_t sub_1B8CB6A9C()
{
  unint64_t result;

  result = qword_1ED5650F8;
  if (!qword_1ED5650F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED5650F8);
  }
  return result;
}

uint64_t sub_1B8CB6AD8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8CB6AFC()
{
  return sub_1B8CB62F4();
}

unint64_t sub_1B8CB6B04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED565038;
  if (!qword_1ED565038)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565040);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0C95CB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED565038);
  }
  return result;
}

long double sub_1B8CB6B50(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  CGFloat v15;
  double Height;
  double Width;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  double MidY;
  double v33;
  double v34;
  double v35;
  id v36;
  long double v37;
  long double v38;
  CGFloat rect;
  CGFloat rect_8;
  CGFloat rect_16;
  CGFloat rect_24;
  CGFloat v44;
  CGFloat v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;

  v2 = v1;
  v3 = *a1;
  v4 = WKPosterCanvasSize();
  v45 = v5;
  v6 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v7 = objc_msgSend(v6, sel_fixedCoordinateSpace);

  objc_msgSend(v7, sel_bounds);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_unknownObjectRelease();
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  if (UIInterfaceOrientationIsLandscape(*(_QWORD *)(v2 + 96)))
  {
    v46.origin.x = v9;
    v46.origin.y = v11;
    v46.size.width = v13;
    v46.size.height = v15;
    Height = CGRectGetHeight(v46);
    v47.origin.x = v9;
    v47.origin.y = v11;
    v47.size.width = v13;
    v47.size.height = v15;
    Width = CGRectGetWidth(v47);
    if (Height > Width)
      v18 = Height;
    else
      v18 = Width;
    v48.origin.x = v9;
    v48.origin.y = v11;
    v48.size.width = v13;
    v48.size.height = v15;
    v19 = CGRectGetHeight(v48);
    v49.origin.x = v9;
    v49.origin.y = v11;
    v49.size.width = v13;
    v49.size.height = v15;
    v20 = CGRectGetWidth(v49);
    if (v20 >= v19)
      v15 = v19;
    else
      v15 = v20;
    v13 = v18;
  }
  UIRectCenteredRect();
  rect_24 = v22;
  v44 = v21;
  rect_8 = v24;
  rect_16 = v23;
  swift_getKeyPath();
  sub_1B8CE0E7C();
  swift_release();
  v25 = v15;
  v26 = *(double *)(v2 + 104);
  v27 = *(double *)(v2 + 112);
  v28 = *(double *)(v2 + 120);
  v29 = *(double *)(v2 + 128);
  rect = v13 * v26;
  v50.origin.x = v26;
  v50.origin.y = v27;
  v50.size.width = v28;
  v50.size.height = v29;
  v30 = v13 * CGRectGetWidth(v50);
  v51.origin.x = v26;
  v51.origin.y = v27;
  v51.size.width = v28;
  v51.size.height = v29;
  v31 = v25 * CGRectGetHeight(v51);
  v52.origin.y = rect_24;
  v52.origin.x = v44;
  v52.size.height = rect_8;
  v52.size.width = rect_16;
  CGRectGetMinY(v52);
  v53.origin.x = rect;
  v53.origin.y = v25 * v27;
  v53.size.width = v30;
  v53.size.height = v31;
  CGRectGetMinY(v53);
  v54.origin.x = 0.0;
  v54.origin.y = 0.0;
  v54.size.width = v4;
  v54.size.height = v45;
  CGRectGetMidX(v54);
  v55.origin.x = 0.0;
  v55.origin.y = 0.0;
  v55.size.width = v4;
  v55.size.height = v45;
  MidY = CGRectGetMidY(v55);
  objc_msgSend(*(id *)(v3 + 16), sel_stripeAngleDegrees);
  v34 = v33;
  v56.origin.x = 0.0;
  v56.origin.y = 0.0;
  v56.size.width = v4;
  v56.size.height = v45;
  v35 = CGRectGetWidth(v56);
  swift_getKeyPath();
  sub_1B8CE0E7C();
  swift_release();
  if (!UIInterfaceOrientationIsLandscape(*(_QWORD *)(v2 + 96)))
  {
    v36 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    objc_msgSend(v36, sel_userInterfaceIdiom);

  }
  v37 = v35 * 0.5 * tan(v34 * 0.0174532925);
  v57.origin.x = 0.0;
  v57.origin.y = 0.0;
  v57.size.width = v4;
  v57.size.height = v45;
  v38 = (MidY + v37) / CGRectGetHeight(v57);
  v58.origin.x = 0.0;
  v58.origin.y = 0.0;
  v58.size.width = v4;
  v58.size.height = v45;
  CGRectGetHeight(v58);
  v59.origin.x = 0.0;
  v59.origin.y = 0.0;
  v59.size.width = v4;
  v59.size.height = v45;
  CGRectGetHeight(v59);
  return v38;
}

unint64_t sub_1B8CB6F34(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B8CE17DC();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4350);
      result = sub_1B8CE16F8();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1B8CE17DC();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x1BCCB8A6C](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_1B8CE0F00();
    sub_1B8C83740(&qword_1EF1D4358, v8, MEMORY[0x1E0C95E18]);
    result = sub_1B8CE1464();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_1B8C83740(&qword_1EF1D4360, v8, MEMORY[0x1E0C95E20]);
      do
      {
        result = sub_1B8CE1488();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1B8CB71E0()
{
  uint64_t v0;

  return sub_1B8CB5EA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B8CB7200(uint64_t a1, void *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  __int128 v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1B8C8A344((__int128 *)a1, (uint64_t)v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_1B8CA0DC0(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B8C88430(a1, &qword_1EF1D4378);
    sub_1B8CD6DC4((uint64_t)a2, (uint64_t)v7);

    return sub_1B8C88430((uint64_t)v7, &qword_1EF1D4378);
  }
}

uint64_t sub_1B8CB72B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  __CFString *v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __CFString *v33;
  _BOOL8 v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  char v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t *v59;
  void *v60;
  BOOL v61;
  uint64_t *v62;
  uint64_t v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  __CFString *v69;
  unint64_t v70;
  char v71;
  char v72;
  __CFString *v73;
  unint64_t v74;
  __CFString *v75;
  uint64_t v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  NSString *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t result;
  uint64_t v99;
  __CFString *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  __CFString *v117;
  unint64_t v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  const __CFString *v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1B8CE0E58();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v103 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B8CE0E1C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v104 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v99 - v13;
  v120 = v2;
  v15 = objc_msgSend(v2, sel_dataStores);
  v119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1D4368);
  v16 = sub_1B8CE1530();

  v17 = a1;
  v121 = (uint64_t)sub_1B8CBA7BC(v16);
  swift_bridgeObjectRelease();

  v18 = sub_1B8CE14B8();
  v20 = v19;
  v21 = sub_1B8CE14B8();
  v111 = a2;
  v110 = v7;
  v109 = v9;
  v108 = v14;
  v107 = v10;
  if (v18 == v21 && v20 == v22)
    v23 = 1;
  else
    v23 = sub_1B8CE1890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v23 & 1;
  v25 = (_QWORD *)sub_1B8CC69DC(MEMORY[0x1E0DEE9D8]);
  v26 = v121 & 1;
  v27 = CFSTR("default");
  sub_1B8CB7E00(v24, v26, v125);
  v28 = v17;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v123 = v25;
  v30 = sub_1B8C9C7D4(v28);
  v32 = v31;
  v33 = (__CFString *)v25[2];
  v34 = (v31 & 1) == 0;
  type metadata accessor for WKWallpaperLocation(0);
  v36 = v35;
  v37 = (uint64_t)v33 + v34;
  if (__OFADD__(v33, v34))
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v38 = v25[3];
  v118 = v36;
  if (v38 >= v37)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B8CA0338();
      v25 = (_QWORD *)v123;
    }
  }
  else
  {
    sub_1B8C9E1C4(v37, isUniquelyReferenced_nonNull_native);
    v25 = (_QWORD *)v123;
    v39 = sub_1B8C9C7D4(v28);
    if ((v32 & 1) != (v40 & 1))
      goto LABEL_74;
    v30 = v39;
  }
  swift_bridgeObjectRelease();
  v41 = (uint64_t)v25;
  swift_bridgeObjectRetain();
  if ((v32 & 1) == 0)
  {
    v42 = sub_1B8CC6AE4(MEMORY[0x1E0DEE9D8]);
    sub_1B8C9EC64(v30, (uint64_t)v28, v42, v25);
    v43 = v28;
  }
  swift_bridgeObjectRelease();
  sub_1B8CB7200((uint64_t)v125, v27);

  if ((v121 & 1) == 0)
  {
    v27 = 0;
    if (!v25[2])
      goto LABEL_59;
    goto LABEL_19;
  }
  v27 = (__CFString *)v28;
  v117 = CFSTR("dark");
  sub_1B8CB7E00(v24, 2, v125);
  v44 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v123 = v25;
  v46 = sub_1B8C9C7D4(v27);
  v47 = v25[2];
  v48 = (v45 & 1) == 0;
  v49 = v47 + v48;
  if (__OFADD__(v47, v48))
  {
    __break(1u);
    goto LABEL_73;
  }
  v50 = v45;
  if (v25[3] >= v49)
  {
    if ((v44 & 1) == 0)
    {
      sub_1B8CA0338();
      v25 = (_QWORD *)v123;
    }
LABEL_56:
    v73 = v117;
    swift_bridgeObjectRelease();
    v41 = (uint64_t)v25;
    swift_bridgeObjectRetain();
    if ((v50 & 1) == 0)
    {
      v74 = sub_1B8CC6AE4(MEMORY[0x1E0DEE9D8]);
      sub_1B8C9EC64(v46, (uint64_t)v27, v74, v25);
      v75 = v27;
    }
    swift_bridgeObjectRelease();
    sub_1B8CB7200((uint64_t)v125, v73);

    v27 = (__CFString *)sub_1B8CBA650;
    if (!v25[2])
    {
LABEL_59:
      swift_bridgeObjectRelease();
      if (qword_1EF1D3AD0 == -1)
      {
LABEL_60:
        v76 = sub_1B8CE0EDC();
        __swift_project_value_buffer(v76, (uint64_t)qword_1EF1D78D0);
        v77 = v28;
        v78 = sub_1B8CE0EC4();
        v79 = sub_1B8CE15B4();
        v80 = os_log_type_enabled(v78, v79);
        v81 = v111;
        if (v80)
        {
          v82 = (uint8_t *)swift_slowAlloc();
          v83 = swift_slowAlloc();
          v125[0] = v83;
          *(_DWORD *)v82 = 136315138;
          v84 = sub_1B8CE14B8();
          *(_QWORD *)&v123 = sub_1B8CC4700(v84, v85, v125);
          sub_1B8CE1674();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1B8C64000, v78, v79, "No synthesized wallpapers, unable to create wallpaper bundle (wallpaperLocation: %s).", v82, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCB9588](v83, -1, -1);
          MEMORY[0x1BCCB9588](v82, -1, -1);

        }
        else
        {

        }
        *(_QWORD *)(v81 + 32) = 0;
        *(_OWORD *)v81 = 0u;
        *(_OWORD *)(v81 + 16) = 0u;
        return sub_1B8C84210((uint64_t)v27);
      }
LABEL_73:
      swift_once();
      goto LABEL_60;
    }
LABEL_19:
    v102 = v41;
    v53 = 0x726353206B636F4CLL;
    if ((_DWORD)v24)
      v53 = 0x72635320656D6F48;
    v101 = v53;
    if ((v121 & 1) != 0)
      v33 = (__CFString *)&unk_1E6EF85D8;
    else
      v33 = (__CFString *)&unk_1E6EF85B0;
    v54 = objc_msgSend(v120, sel_dataStores);
    v32 = sub_1B8CE1530();

    if (!(v32 >> 62))
    {
      v55 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v55)
      {
LABEL_26:
        v100 = v27;
        v56 = 0;
        LODWORD(v120) = 0;
        if ((v121 & 1) != 0)
          v57 = (uint64_t *)&unk_1E6EF85E8;
        else
          v57 = (uint64_t *)&unk_1E6EF85C0;
        v58 = *v57;
        v118 = v32 & 0xC000000000000001;
        v112 = v32 + 32;
        v59 = (uint64_t *)&unk_1E6EF85F8;
        if ((v121 & 1) == 0)
          v59 = (uint64_t *)&unk_1E6EF85D0;
        v113 = v59;
        v27 = (__CFString *)&selRef_lowercaseString;
        v121 = MEMORY[0x1E0DEE9B8] + 8;
        v116 = v32;
        v117 = v33;
        v114 = v58;
        v115 = v55;
        while (1)
        {
          if (v118)
          {
            v60 = (void *)MEMORY[0x1BCCB8A6C](v56, v32);
            v61 = __OFADD__(v56++, 1);
            if (v61)
              goto LABEL_64;
          }
          else
          {
            v60 = *(void **)(v112 + 8 * v56);
            swift_unknownObjectRetain();
            v61 = __OFADD__(v56++, 1);
            if (v61)
            {
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
          }
          if (v58)
          {
            v119 = v56;
            swift_bridgeObjectRetain();
            v62 = v113;
            do
            {
              v63 = *v62++;
              v64 = objc_msgSend(v60, sel_wallpaperOptionsForVariant_wallpaperMode_, v24, v63);
              if (v64)
              {
                v65 = v64;
                v66 = objc_msgSend(v64, sel_wallpaperKitData);
                if (v66)
                {
                  v67 = v66;
                  v68 = sub_1B8CE144C();

                  v122 = CFSTR("WKWallpaperKitDataDisableParallaxKey");
                  type metadata accessor for WKWallpaperKitDataKey(0);
                  sub_1B8CBA948();
                  v69 = CFSTR("WKWallpaperKitDataDisableParallaxKey");
                  sub_1B8CE16EC();
                  if (*(_QWORD *)(v68 + 16) && (v70 = sub_1B8C9C6E8((uint64_t)v125), (v71 & 1) != 0))
                  {
                    sub_1B8C841D4(*(_QWORD *)(v68 + 56) + 32 * v70, (uint64_t)&v123);
                  }
                  else
                  {
                    v123 = 0u;
                    v124 = 0u;
                  }
                  swift_bridgeObjectRelease();

                  sub_1B8C97ADC((uint64_t)v125);
                  if (*((_QWORD *)&v124 + 1))
                  {
                    if ((swift_dynamicCast() & 1) != 0)
                      LODWORD(v120) = v120 | v122;
                  }
                  else
                  {
                    sub_1B8C88430((uint64_t)&v123, &qword_1ED565600);
                  }
                }
                else
                {

                }
              }
              --v58;
            }
            while (v58);
            swift_unknownObjectRelease();
            v33 = v117;
            swift_bridgeObjectRelease();
            v55 = v115;
            v32 = v116;
            v56 = v119;
            v58 = v114;
            if (v119 == v115)
            {
LABEL_53:
              swift_bridgeObjectRelease();
              v27 = v100;
              v72 = (char)v120;
              goto LABEL_68;
            }
          }
          else
          {
            swift_unknownObjectRelease();
            if (v56 == v55)
              goto LABEL_53;
          }
        }
      }
LABEL_67:
      swift_bridgeObjectRelease();
      v72 = 0;
LABEL_68:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v86 = NSTemporaryDirectory();
      sub_1B8CE14B8();

      v87 = v104;
      sub_1B8CE0DD4();
      swift_bridgeObjectRelease();
      v88 = v103;
      sub_1B8CE0E4C();
      sub_1B8CE0E28();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v88, v106);
      v89 = v108;
      sub_1B8CE0DF8();
      swift_bridgeObjectRelease();
      v90 = v107;
      v91 = *(void (**)(char *, uint64_t))(v107 + 8);
      v92 = v87;
      v93 = v109;
      v91(v92, v109);
      v94 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56);
      v95 = (uint64_t)v110;
      v94(v110, 1, 1, v93);
      *(_QWORD *)&v123 = 0;
      static WKWallpaperBundle.createWallpaperBundle(in:version:identifier:name:family:disableParallax:isOffloaded:logicalScreenClass:thumbnailImageURL:adjustmentTraits:preferredProminentColors:assetMapping:)(1, 40, 0, v72 & 1, v125, 0, (uint64_t)CFSTR("any"), v95, (uint64_t *)&v123, 0, v102);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B8C88430(v95, (uint64_t *)&unk_1ED565130);
      v96 = v125[0];
      v97 = v111;
      if (v125[0])
      {
        *(_QWORD *)(v111 + 24) = &type metadata for WKWallpaperBundle;
        *(_QWORD *)(v97 + 32) = sub_1B8C8A2F0();
        *(_QWORD *)v97 = v96;
        v91(v89, v93);
      }
      else
      {
        v91(v89, v93);
        *(_QWORD *)(v97 + 32) = 0;
        *(_OWORD *)v97 = 0u;
        *(_OWORD *)(v97 + 16) = 0u;
      }
      return sub_1B8C84210((uint64_t)v27);
    }
LABEL_66:
    swift_bridgeObjectRetain();
    v55 = sub_1B8CE17DC();
    if (v55)
      goto LABEL_26;
    goto LABEL_67;
  }
  sub_1B8C9E1C4(v49, v44);
  v25 = (_QWORD *)v123;
  v51 = sub_1B8C9C7D4(v27);
  if ((v50 & 1) == (v52 & 1))
  {
    v46 = v51;
    goto LABEL_56;
  }
LABEL_74:
  result = sub_1B8CE189C();
  __break(1u);
  return result;
}

void sub_1B8CB7E00(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  char *v90;
  _QWORD *v91;
  char *v92;
  char *v93;
  NSObject *v94;
  char *v95;
  uint64_t v96;
  id v97;
  char *v98;
  unint64_t v99;
  unint64_t v100;
  id v101;
  void *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  id v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t ObjCClassFromMetadata;
  uint64_t v116;
  BOOL v117;
  char v118;
  void *v119;
  uint64_t *v120;
  id v121;
  void *v122;
  void *v123;
  void *v124;
  id v125;
  uint64_t v126;
  NSObject *v127;
  os_log_type_t v128;
  id v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  id v133;
  void *v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  id v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  id v150;
  uint64_t v151;
  char *v152;
  id v153;
  void *v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  id v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  os_log_type_t v163;
  id v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  id v168;
  void *v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  id v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  char *v177;
  void *v178;
  char *v179;
  void *v180;
  unint64_t v181;
  uint64_t v182;
  id v183;
  void *v184;
  void (*v185)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v186;
  uint64_t v187;
  id v188;
  void *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  void *v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  void *v205;
  char *v206;
  uint64_t v207;
  id v208;
  void *v209;
  double v210;
  double v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t (*v217)(uint64_t, uint64_t, uint64_t);
  uint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  NSObject *v226;
  os_log_type_t v227;
  _BOOL4 v228;
  uint64_t v229;
  uint64_t v230;
  id v231;
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  id v235;
  void *v236;
  uint64_t v237;
  unint64_t v238;
  unint64_t v239;
  id v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  char *v244;
  _QWORD *v245;
  void (*v246)(char *, uint64_t, uint64_t);
  uint64_t v247;
  char *v248;
  void (*v249)(char *, uint64_t, uint64_t);
  uint64_t v250;
  char *v251;
  char *v252;
  char *v253;
  uint64_t *v254;
  uint64_t v255;
  id v256;
  void *v257;
  void *v258;
  char *v259;
  void *v260;
  void *v261;
  id v262;
  void (*v263)(char *, uint64_t);
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  char *v268;
  char *v269;
  char *v270;
  uint64_t *v271;
  id v272;
  void *v273;
  void *v274;
  void *v275;
  id v276;
  void (*v277)(char *, uint64_t);
  uint64_t v278;
  uint64_t v279;
  NSObject *v280;
  os_log_type_t v281;
  uint64_t v282;
  id v283;
  uint64_t v284;
  unint64_t v285;
  unint64_t v286;
  id v287;
  void *v288;
  uint64_t v289;
  unint64_t v290;
  unint64_t v291;
  id v292;
  uint64_t v293;
  unint64_t v294;
  unint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t *v298;
  _QWORD *v299;
  uint64_t v300;
  char *v301;
  NSObject *v302;
  os_log_type_t v303;
  uint64_t v304;
  id v305;
  uint64_t v306;
  char *v307;
  id v308;
  void *v309;
  uint64_t v310;
  unint64_t v311;
  unint64_t v312;
  id v313;
  uint64_t v314;
  unint64_t v315;
  unint64_t v316;
  uint64_t v317;
  _QWORD *v318;
  char *v319;
  NSObject *v320;
  os_log_type_t v321;
  id v322;
  uint64_t v323;
  unint64_t v324;
  unint64_t v325;
  id v326;
  void *v327;
  uint64_t v328;
  unint64_t v329;
  unint64_t v330;
  id v331;
  uint64_t v332;
  unint64_t v333;
  unint64_t v334;
  char *v335;
  uint64_t *v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  char *v342;
  char *v343;
  uint64_t v344;
  char *v345;
  char *v346;
  char *v347;
  uint64_t v348;
  char *v349;
  char *v350;
  char *v351;
  char *v352;
  char *v353;
  char *v354;
  char *v355;
  int *v356;
  char *v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  char *v368;
  char *v369;
  unint64_t v370;
  char *v371;
  uint64_t v372;
  _QWORD *v373;
  uint64_t *v374;
  _QWORD *v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  __int128 v379;
  __int128 v380;

  v4 = v3;
  v374 = a3;
  v356 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4380);
  MEMORY[0x1E0C80A78](v356);
  v360 = (uint64_t)&v337 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v363 = sub_1B8CE0E1C();
  v367 = *(_QWORD *)(v363 - 8);
  v8 = MEMORY[0x1E0C80A78](v363);
  v342 = (char *)&v337 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v337 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v346 = (char *)&v337 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v358 = (char *)&v337 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v345 = (char *)&v337 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v337 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v341 = (char *)&v337 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v350 = (char *)&v337 - v25;
  MEMORY[0x1E0C80A78](v24);
  v349 = (char *)&v337 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v28 = MEMORY[0x1E0C80A78](v27);
  v340 = (uint64_t)&v337 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v344 = (uint64_t)&v337 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v339 = (uint64_t)&v337 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v355 = (char *)&v337 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v357 = (char *)&v337 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v348 = (uint64_t)&v337 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v354 = (char *)&v337 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v364 = (uint64_t)&v337 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v353 = (char *)&v337 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v365 = (uint64_t)&v337 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v352 = (char *)&v337 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v366 = (char *)&v337 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v351 = (char *)&v337 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v361 = (uint64_t)&v337 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v58 = (char *)&v337 - v57;
  MEMORY[0x1E0C80A78](v56);
  v359 = (uint64_t)&v337 - v59;
  v60 = (_QWORD *)sub_1B8CE0EDC();
  v375 = (_QWORD *)*(v60 - 1);
  v61 = MEMORY[0x1E0C80A78](v60);
  v368 = (char *)&v337 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = MEMORY[0x1E0C80A78](v61);
  v369 = (char *)&v337 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v66 = MEMORY[0x1E0C80A78](v65);
  v337 = (char *)&v337 - v67;
  v68 = MEMORY[0x1E0C80A78](v66);
  v70 = (char *)&v337 - v69;
  v71 = MEMORY[0x1E0C80A78](v68);
  v73 = (char *)&v337 - v72;
  v74 = MEMORY[0x1E0C80A78](v71);
  v371 = (char *)&v337 - v75;
  MEMORY[0x1E0C80A78](v74);
  v77 = (char *)&v337 - v76;
  v338 = v78;
  v343 = v12;
  v347 = v21;
  if (a2 == 2)
  {
    v79 = 30;
    if (a1 == 1)
      v79 = 52;
    v80 = a1 == 0;
    v81 = 42;
  }
  else if (a2 == 1)
  {
    v79 = 30;
    if (a1 == 1)
      v79 = 51;
    v80 = a1 == 0;
    v81 = 41;
  }
  else
  {
    if (a2)
    {
      v79 = 30;
      goto LABEL_17;
    }
    v79 = 30;
    if (a1 == 1)
      v79 = 50;
    v80 = a1 == 0;
    v81 = 40;
  }
  if (v80)
    v79 = v81;
LABEL_17:
  v362 = v79;
  v82 = (uint64_t)objc_msgSend(v4, sel_wallpaperConfigurationForVariant_includingValuesForTypes_wallpaperMode_, a1, 63, a2);
  v83 = objc_msgSend((id)v82, sel_wallpaperType);
  v372 = a2;
  v373 = v60;
  if (v83 == (id)2)
  {
    v84 = objc_msgSend((id)v82, sel_proceduralWallpaperOptions);
    if (v84)
    {
      v85 = v84;
      v86 = sub_1B8CE144C();

      v376 = sub_1B8CE14B8();
      v377 = v87;
      sub_1B8CE16EC();
      if (*(_QWORD *)(v86 + 16) && (v88 = sub_1B8C9C6E8((uint64_t)&v378), (v89 & 1) != 0))
      {
        sub_1B8C841D4(*(_QWORD *)(v86 + 56) + 32 * v88, (uint64_t)&v379);
      }
      else
      {
        v379 = 0u;
        v380 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1B8C97ADC((uint64_t)&v378);
      if (*((_QWORD *)&v380 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v118 = sub_1B8C8DAD8();
          sub_1B8CBA67C(6uLL);
          sub_1B8C8C20C(v118);
          v119 = (void *)v82;
          sub_1B8C8C9E0(v118);
          v120 = v374;
          v374[3] = (uint64_t)&type metadata for WKBokehWallpaper;
          v120[4] = (uint64_t)&protocol witness table for WKBokehWallpaper;
          v121 = objc_allocWithZone((Class)WKBokehWallpaper);
          v122 = (void *)sub_1B8CE1494();
          swift_bridgeObjectRelease();
          sub_1B8C84230(0, (unint64_t *)&qword_1EF1D3AE0);
          v123 = (void *)sub_1B8CE1524();
          swift_bridgeObjectRelease();
          v124 = (void *)sub_1B8CE1524();
          swift_bridgeObjectRelease();
          v125 = objc_msgSend(v121, sel_initWithIdentifier_name_backgroundColors_bubbleColors_bubbleCount_bubbleScale_parallaxMultiplier_thumbnailSeed_, v362, v122, v123, v124, 40, 0, 1.0, 0.5);

          type metadata accessor for WKBokehWallpaper.ImplementationWrapper();
          v126 = swift_allocObject();
          *(_QWORD *)(v126 + 16) = v125;

          *v120 = v126;
          return;
        }
      }
      else
      {
        sub_1B8C88430((uint64_t)&v379, &qword_1ED565600);
      }
    }
    if (qword_1EF1D3AD0 == -1)
      goto LABEL_49;
    goto LABEL_110;
  }
  if (objc_msgSend((id)v82, sel_wallpaperType) == (id)4)
  {
    if (qword_1EF1D3AD0 != -1)
      swift_once();
    v90 = (char *)__swift_project_value_buffer((uint64_t)v60, (uint64_t)qword_1EF1D78D0);
    v91 = v375;
    v92 = (char *)v375[2];
    v371 = v90;
    ((void (*)(char *))v92)(v73);
    v93 = (char *)(id)v82;
    v94 = sub_1B8CE0EC4();
    LODWORD(v369) = sub_1B8CE15B4();
    v95 = v70;
    if (os_log_type_enabled(v94, (os_log_type_t)v369))
    {
      v368 = v92;
      v96 = swift_slowAlloc();
      v367 = swift_slowAlloc();
      v378 = (char *)v367;
      *(_DWORD *)v96 = 136446722;
      v370 = a1;
      v97 = (id)PBUIStringForWallpaperVariant();
      v98 = (char *)sub_1B8CE14B8();
      v100 = v99;

      *(_QWORD *)&v379 = sub_1B8CC4700((uint64_t)v98, v100, (uint64_t *)&v378);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      *(_WORD *)(v96 + 12) = 2082;
      v101 = (id)PBUIStringForWallpaperMode();
      if (!v101)
      {
LABEL_128:

        __break(1u);
LABEL_129:

        __break(1u);
        goto LABEL_130;
      }
      v102 = v101;
      v103 = sub_1B8CE14B8();
      v105 = v104;

      *(_QWORD *)&v379 = sub_1B8CC4700(v103, v105, (uint64_t *)&v378);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      *(_WORD *)(v96 + 22) = 2082;
      objc_msgSend(v93, sel_wallpaperType);
      v106 = (id)PBUIStringForWallpaperType();
      v107 = sub_1B8CE14B8();
      v109 = v108;

      *(_QWORD *)&v379 = sub_1B8CC4700(v107, v109, (uint64_t *)&v378);
      sub_1B8CE1674();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B8C64000, v94, (os_log_type_t)v369, "Color wallpaper migration not supported. (variant: %{public}s, mode: %{public}s, type: %{public}s).", (uint8_t *)v96, 0x20u);
      v110 = v367;
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v110, -1, -1);
      MEMORY[0x1BCCB9588](v96, -1, -1);

      v111 = (_QWORD *)v375[1];
      v60 = v373;
      ((void (*)(char *, _QWORD *))v111)(v73, v373);
      ((void (*)(char *, char *, _QWORD *))v368)(v95, v371, v60);
    }
    else
    {

      v111 = (_QWORD *)v91[1];
      ((void (*)(char *, _QWORD *))v111)(v73, v60);
      ((void (*)(char *, char *, _QWORD *))v92)(v70, v371, v60);
    }
    v98 = v93;
    v127 = sub_1B8CE0EC4();
    v128 = sub_1B8CE15C0();
    if (os_log_type_enabled(v127, v128))
    {
      v375 = v111;
      v93 = (char *)swift_slowAlloc();
      v371 = (char *)swift_slowAlloc();
      v378 = v371;
      *(_DWORD *)v93 = 136446722;
      v129 = (id)PBUIStringForWallpaperVariant();
      v130 = sub_1B8CE14B8();
      v132 = v131;

      *(_QWORD *)&v379 = sub_1B8CC4700(v130, v132, (uint64_t *)&v378);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      *((_WORD *)v93 + 6) = 2082;
      v133 = (id)PBUIStringForWallpaperMode();
      if (v133)
      {
        v134 = v133;
        v135 = sub_1B8CE14B8();
        v137 = v136;

        *(_QWORD *)&v379 = sub_1B8CC4700(v135, v137, (uint64_t *)&v378);
        sub_1B8CE1674();
        swift_bridgeObjectRelease();
        *((_WORD *)v93 + 11) = 2082;
        objc_msgSend(v98, sel_wallpaperType);
        v138 = (id)PBUIStringForWallpaperType();
        v139 = sub_1B8CE14B8();
        v141 = v140;

        *(_QWORD *)&v379 = sub_1B8CC4700(v139, v141, (uint64_t *)&v378);
        sub_1B8CE1674();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B8C64000, v127, v128, "Color wallpaper migration not supported. (variant: %{public}s, mode: %{public}s, type: %{public}s).", (uint8_t *)v93, 0x20u);
        v142 = v371;
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v142, -1, -1);
        MEMORY[0x1BCCB9588](v93, -1, -1);

        v143 = v95;
LABEL_123:
        ((void (*)(char *, _QWORD *))v375)(v143, v373);
        goto LABEL_124;
      }
      goto LABEL_129;
    }
    goto LABEL_56;
  }
  v112 = objc_msgSend(v4, sel_dataStores);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1D4368);
  v113 = sub_1B8CE1530();

  v370 = a1;
  if (v113 >> 62)
  {
    swift_bridgeObjectRetain();
    v114 = sub_1B8CE17DC();
    if (v114)
      goto LABEL_30;
LABEL_112:
    swift_bridgeObjectRelease_n();
LABEL_113:
    v179 = v369;
LABEL_114:
    v299 = v375;
    if (qword_1EF1D3AD0 != -1)
      swift_once();
    v300 = __swift_project_value_buffer((uint64_t)v60, (uint64_t)qword_1EF1D78D0);
    v301 = (char *)v299[2];
    v367 = v300;
    v371 = v301;
    ((void (*)(char *))v301)(v179);
    v93 = (char *)(id)v82;
    v302 = sub_1B8CE0EC4();
    v303 = sub_1B8CE15B4();
    if (os_log_type_enabled(v302, v303))
    {
      v304 = swift_slowAlloc();
      v366 = (char *)swift_slowAlloc();
      v378 = v366;
      *(_DWORD *)v304 = 136446722;
      v305 = (id)PBUIStringForWallpaperVariant();
      v306 = sub_1B8CE14B8();
      v98 = v307;

      *(_QWORD *)&v379 = sub_1B8CC4700(v306, (unint64_t)v98, (uint64_t *)&v378);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      *(_WORD *)(v304 + 12) = 2082;
      v308 = (id)PBUIStringForWallpaperMode();
      if (!v308)
      {
LABEL_130:

        __break(1u);
        goto LABEL_131;
      }
      v309 = v308;
      v310 = sub_1B8CE14B8();
      v312 = v311;

      *(_QWORD *)&v379 = sub_1B8CC4700(v310, v312, (uint64_t *)&v378);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      *(_WORD *)(v304 + 22) = 2082;
      objc_msgSend(v93, sel_wallpaperType);
      v313 = (id)PBUIStringForWallpaperType();
      v314 = sub_1B8CE14B8();
      v316 = v315;

      *(_QWORD *)&v379 = sub_1B8CC4700(v314, v316, (uint64_t *)&v378);
      sub_1B8CE1674();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B8C64000, v302, v303, "No wallpaper directory data store found, migration not possible (variant: %{public}s, mode: %{public}s, type: %{public}s).", (uint8_t *)v304, 0x20u);
      v317 = (uint64_t)v366;
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v317, -1, -1);
      MEMORY[0x1BCCB9588](v304, -1, -1);

      v318 = (_QWORD *)v375[1];
      v60 = v373;
      ((void (*)(char *, _QWORD *))v318)(v369, v373);
    }
    else
    {

      v318 = (_QWORD *)v299[1];
      ((void (*)(char *, _QWORD *))v318)(v179, v60);
    }
    v319 = v368;
    ((void (*)(char *, uint64_t, _QWORD *))v371)(v368, v367, v60);
    v98 = v93;
    v320 = sub_1B8CE0EC4();
    v321 = sub_1B8CE15C0();
    if (!os_log_type_enabled(v320, v321))
    {

      ((void (*)(char *, _QWORD *))v318)(v319, v60);
      goto LABEL_124;
    }
    v375 = v318;
    v93 = (char *)swift_slowAlloc();
    v371 = (char *)swift_slowAlloc();
    v378 = v371;
    *(_DWORD *)v93 = 136446722;
    v322 = (id)PBUIStringForWallpaperVariant();
    v323 = sub_1B8CE14B8();
    v325 = v324;

    *(_QWORD *)&v379 = sub_1B8CC4700(v323, v325, (uint64_t *)&v378);
    sub_1B8CE1674();
    swift_bridgeObjectRelease();
    *((_WORD *)v93 + 6) = 2082;
    v326 = (id)PBUIStringForWallpaperMode();
    if (v326)
    {
      v327 = v326;
      v328 = sub_1B8CE14B8();
      v330 = v329;

      *(_QWORD *)&v379 = sub_1B8CC4700(v328, v330, (uint64_t *)&v378);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      *((_WORD *)v93 + 11) = 2082;
      objc_msgSend(v98, sel_wallpaperType);
      v331 = (id)PBUIStringForWallpaperType();
      v332 = sub_1B8CE14B8();
      v334 = v333;

      *(_QWORD *)&v379 = sub_1B8CC4700(v332, v334, (uint64_t *)&v378);
      sub_1B8CE1674();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B8C64000, v320, v321, "No wallpaper directory data store found, migration not possible (variant: %{public}s, mode: %{public}s, type: %{public}s).", (uint8_t *)v93, 0x20u);
      v335 = v371;
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v335, -1, -1);
      MEMORY[0x1BCCB9588](v93, -1, -1);

      v143 = v368;
      goto LABEL_123;
    }
LABEL_131:

    __break(1u);
LABEL_132:

    __break(1u);
    goto LABEL_133;
  }
  v114 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v114)
    goto LABEL_112;
LABEL_30:
  v371 = (char *)v82;
  sub_1B8C84230(0, &qword_1EF1D4388);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  a1 = v113 & 0xC000000000000001;
  v82 = 4;
  while (1)
  {
    v116 = v82 - 4;
    if (a1)
    {
      v60 = (_QWORD *)MEMORY[0x1BCCB8A6C](v82 - 4, v113);
      v117 = __OFADD__(v116, 1);
      v77 = (char *)(v82 - 3);
      if (v117)
        goto LABEL_109;
    }
    else
    {
      v60 = *(_QWORD **)(v113 + 8 * v82);
      swift_unknownObjectRetain();
      v117 = __OFADD__(v116, 1);
      v77 = (char *)(v82 - 3);
      if (v117)
      {
LABEL_109:
        __break(1u);
LABEL_110:
        swift_once();
LABEL_49:
        v144 = __swift_project_value_buffer((uint64_t)v60, (uint64_t)qword_1EF1D78D0);
        v145 = v375;
        v146 = (char *)v375[2];
        v369 = (char *)v144;
        ((void (*)(char *))v146)(v77);
        v93 = (char *)(id)v82;
        v147 = sub_1B8CE0EC4();
        v148 = sub_1B8CE15B4();
        if (os_log_type_enabled(v147, v148))
        {
          v368 = v146;
          v149 = swift_slowAlloc();
          v367 = swift_slowAlloc();
          v378 = (char *)v367;
          *(_DWORD *)v149 = 136446722;
          v370 = a1;
          v150 = (id)PBUIStringForWallpaperVariant();
          v151 = sub_1B8CE14B8();
          v98 = v152;

          *(_QWORD *)&v379 = sub_1B8CC4700(v151, (unint64_t)v98, (uint64_t *)&v378);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          *(_WORD *)(v149 + 12) = 2082;
          v153 = (id)PBUIStringForWallpaperMode();
          if (!v153)
          {

            __break(1u);
LABEL_127:

            __break(1u);
            goto LABEL_128;
          }
          v154 = v153;
          v155 = sub_1B8CE14B8();
          v157 = v156;

          *(_QWORD *)&v379 = sub_1B8CC4700(v155, v157, (uint64_t *)&v378);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          *(_WORD *)(v149 + 22) = 2082;
          objc_msgSend(v93, sel_wallpaperType);
          v158 = (id)PBUIStringForWallpaperType();
          v159 = sub_1B8CE14B8();
          v161 = v160;

          *(_QWORD *)&v379 = sub_1B8CC4700(v159, v161, (uint64_t *)&v378);
          sub_1B8CE1674();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1B8C64000, v147, v148, "No bokeh variant found (variant: %{public}s, mode: %{public}s, type: %{public}s).", (uint8_t *)v149, 0x20u);
          v162 = v367;
          swift_arrayDestroy();
          MEMORY[0x1BCCB9588](v162, -1, -1);
          MEMORY[0x1BCCB9588](v149, -1, -1);

          v111 = (_QWORD *)v375[1];
          v60 = v373;
          ((void (*)(char *, _QWORD *))v111)(v77, v373);
          v146 = v368;
        }
        else
        {

          v111 = (_QWORD *)v145[1];
          ((void (*)(char *, _QWORD *))v111)(v77, v60);
        }
        v95 = v371;
        ((void (*)(char *, char *, _QWORD *))v146)(v371, v369, v60);
        v98 = v93;
        v127 = sub_1B8CE0EC4();
        v163 = sub_1B8CE15C0();
        if (os_log_type_enabled(v127, v163))
        {
          v375 = v111;
          v93 = (char *)swift_slowAlloc();
          v369 = (char *)swift_slowAlloc();
          v378 = v369;
          *(_DWORD *)v93 = 136446722;
          v164 = (id)PBUIStringForWallpaperVariant();
          v165 = sub_1B8CE14B8();
          v167 = v166;

          *(_QWORD *)&v379 = sub_1B8CC4700(v165, v167, (uint64_t *)&v378);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          *((_WORD *)v93 + 6) = 2082;
          v168 = (id)PBUIStringForWallpaperMode();
          if (v168)
          {
            v169 = v168;
            v170 = sub_1B8CE14B8();
            v172 = v171;

            *(_QWORD *)&v379 = sub_1B8CC4700(v170, v172, (uint64_t *)&v378);
            sub_1B8CE1674();
            swift_bridgeObjectRelease();
            *((_WORD *)v93 + 11) = 2082;
            objc_msgSend(v98, sel_wallpaperType);
            v173 = (id)PBUIStringForWallpaperType();
            v174 = sub_1B8CE14B8();
            v176 = v175;

            *(_QWORD *)&v379 = sub_1B8CC4700(v174, v176, (uint64_t *)&v378);
            sub_1B8CE1674();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1B8C64000, v127, v163, "No bokeh variant found (variant: %{public}s, mode: %{public}s, type: %{public}s).", (uint8_t *)v93, 0x20u);
            v177 = v369;
            swift_arrayDestroy();
            MEMORY[0x1BCCB9588](v177, -1, -1);
            MEMORY[0x1BCCB9588](v93, -1, -1);

            v143 = v371;
            goto LABEL_123;
          }
          goto LABEL_127;
        }
LABEL_56:

        ((void (*)(char *, _QWORD *))v111)(v95, v60);
LABEL_124:
        v336 = v374;
        v374[4] = 0;
        *(_OWORD *)v336 = 0u;
        *((_OWORD *)v336 + 1) = 0u;
        return;
      }
    }
    if (objc_msgSend(v60, sel_isKindOfClass_, ObjCClassFromMetadata))
      break;
    swift_unknownObjectRelease();
    ++v82;
    if (v77 == (char *)v114)
    {
      swift_bridgeObjectRelease_n();
      v60 = v373;
      v82 = (uint64_t)v371;
      goto LABEL_113;
    }
  }
  swift_bridgeObjectRelease_n();
  objc_opt_self();
  v178 = (void *)swift_dynamicCastObjCClass();
  v82 = (uint64_t)v371;
  v179 = v369;
  if (!v178)
  {
    swift_unknownObjectRelease();
    v60 = v373;
    goto LABEL_114;
  }
  v180 = v178;
  v181 = v370;
  v182 = v372;
  v183 = objc_msgSend(v178, sel_wk_wallpaperThumbnailURLForVariant_wallpaperMode_, v370, v372);
  if (v183)
  {
    v184 = v183;
    sub_1B8CE0E04();

    v185 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v367 + 56);
    v185(v58, 0, 1, v363);
  }
  else
  {
    v185 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v367 + 56);
    v185(v58, 1, 1, v363);
  }
  v186 = v359;
  v187 = (uint64_t)v355;
  sub_1B8C8838C((uint64_t)v58, v359);
  v188 = objc_msgSend(v180, sel_wk_wallpaperOriginalImageURLForVariant_wallpaperMode_, v181, v182);
  if (v188)
  {
    v189 = v188;
    v190 = v351;
    sub_1B8CE0E04();

    v191 = 0;
    v192 = v363;
  }
  else
  {
    v191 = 1;
    v192 = v363;
    v190 = v351;
  }
  v193 = 1;
  v185(v190, v191, 1, v192);
  v194 = (uint64_t)v190;
  v195 = v361;
  sub_1B8C8838C(v194, v361);
  v196 = objc_msgSend(v180, sel_wk_wallpaperImageURLForVariant_wallpaperMode_, v370, v182);
  if (v196)
  {
    v197 = v196;
    v198 = (uint64_t)v352;
    sub_1B8CE0E04();

    v193 = 0;
  }
  else
  {
    v198 = (uint64_t)v352;
  }
  v199 = 1;
  v185((char *)v198, v193, 1, v192);
  sub_1B8C8838C(v198, (uint64_t)v366);
  v200 = objc_msgSend((id)v82, sel_originalVideoURL);
  if (v200)
  {
    v201 = v200;
    v202 = (uint64_t)v353;
    sub_1B8CE0E04();

    v199 = 0;
  }
  else
  {
    v202 = (uint64_t)v353;
  }
  v203 = 1;
  v185((char *)v202, v199, 1, v192);
  sub_1B8C8838C(v202, v365);
  v204 = objc_msgSend((id)v82, sel_videoURL);
  if (v204)
  {
    v205 = v204;
    v206 = v354;
    sub_1B8CE0E04();

    v207 = (uint64_t)v206;
    v203 = 0;
  }
  else
  {
    v207 = (uint64_t)v354;
  }
  v185((char *)v207, v203, 1, v192);
  sub_1B8C8838C(v207, v364);
  v208 = objc_msgSend((id)v82, sel_wallpaperOptions);
  if (v208)
  {
    v209 = v208;
    objc_msgSend(v208, sel_stillTimeInVideo);
    v211 = v210;

  }
  else
  {
    v211 = 0.0;
  }
  v212 = v360 + v356[12];
  v213 = v360 + v356[16];
  v214 = v360 + v356[20];
  v215 = v360 + v356[24];
  sub_1B8C84538(v186, v360);
  sub_1B8C84538(v195, v212);
  sub_1B8C84538(v365, v213);
  sub_1B8C84538((uint64_t)v366, v214);
  sub_1B8C84538(v364, v215);
  v216 = v367;
  v217 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v367 + 48);
  v218 = v363;
  v219 = v217(v212, 1, v363);
  v220 = (uint64_t)v357;
  if (v219 != 1)
  {
    sub_1B8C84538(v212, v187);
    if (v217(v213, 1, v218) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v216 + 8))(v187, v218);
      goto LABEL_80;
    }
    sub_1B8C8838C(v360, v348);
    v249 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 32);
    v249(v349, v187, v218);
    v249(v350, v213, v218);
LABEL_93:
    sub_1B8C88430(v215, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v214, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v212, (uint64_t *)&unk_1ED565130);
    sub_1B8CBA67C(1uLL);
    v250 = v344;
    sub_1B8C8838C(v348, v344);
    v251 = v345;
    v252 = v349;
    (*(void (**)(char *, char *, uint64_t))(v216 + 16))(v345, v349, v218);
    if (v217(v250, 1, v218) == 1)
    {
      v249(v347, (uint64_t)v251, v218);
      sub_1B8C88430(v250, (uint64_t *)&unk_1ED565130);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v216 + 8))(v251, v218);
      v249(v347, v250, v218);
    }
    v249(v358, (uint64_t)v252, v218);
    v253 = v346;
    v249(v346, (uint64_t)v350, v218);
    v254 = v374;
    v374[3] = (uint64_t)&type metadata for WKLiveWallpaper;
    v254[4] = (uint64_t)&protocol witness table for WKLiveWallpaper;
    v255 = v218;
    v256 = objc_allocWithZone((Class)WKLiveWallpaper);
    v257 = (void *)sub_1B8CE1494();
    swift_bridgeObjectRelease();
    v258 = (void *)sub_1B8CE0DEC();
    v259 = v358;
    v260 = (void *)sub_1B8CE0DEC();
    v261 = (void *)sub_1B8CE0DEC();
    v262 = objc_msgSend(v256, sel_initWithIdentifier_name_type_thumbnailImageURL_fullsizeImageURL_videoAssetURL_stillTimeInVideo_, v362, v257, 0, v258, v260, v261, v211);

    v263 = *(void (**)(char *, uint64_t))(v367 + 8);
    v263(v253, v255);
    v263(v259, v255);
    v263(v347, v255);
    type metadata accessor for WKLiveWallpaper.ImplementationWrapper();
    v264 = swift_allocObject();
    *(_QWORD *)(v264 + 16) = v262;

    swift_unknownObjectRelease();
    *v254 = v264;
LABEL_102:
    sub_1B8C88430(v364, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v365, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430((uint64_t)v366, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v361, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v359, (uint64_t *)&unk_1ED565130);
    return;
  }
LABEL_80:
  if (v217(v214, 1, v218) != 1)
  {
    v221 = v339;
    sub_1B8C84538(v214, v339);
    if (v217(v215, 1, v218) != 1)
    {
      sub_1B8C8838C(v360, v348);
      v249 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 32);
      v249(v349, v221, v218);
      v249(v350, v215, v218);
      v215 = v214;
      v214 = v213;
      goto LABEL_93;
    }
    (*(void (**)(uint64_t, uint64_t))(v216 + 8))(v221, v218);
  }
  if (v217(v212, 1, v218) != 1)
  {
    sub_1B8C8838C(v360, v220);
    v246 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 32);
    v247 = v220;
    v248 = v341;
    v246(v341, v212, v218);
LABEL_98:
    sub_1B8C88430(v215, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v214, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v213, (uint64_t *)&unk_1ED565130);
    sub_1B8CBA67C(0);
    v265 = v247;
    v266 = v340;
    sub_1B8C8838C(v265, v340);
    v267 = v342;
    (*(void (**)(char *, char *, uint64_t))(v367 + 16))(v342, v248, v218);
    v268 = v248;
    if (v217(v266, 1, v218) == 1)
    {
      v269 = v343;
      v246(v343, (uint64_t)v267, v218);
      sub_1B8C88430(v266, (uint64_t *)&unk_1ED565130);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v367 + 8))(v267, v218);
      v269 = v343;
      v246(v343, v266, v218);
    }
    v270 = v358;
    v246(v358, (uint64_t)v268, v218);
    v271 = v374;
    v374[3] = (uint64_t)&type metadata for WKStillWallpaper;
    v271[4] = (uint64_t)&protocol witness table for WKStillWallpaper;
    v272 = objc_allocWithZone((Class)WKStillWallpaper);
    v273 = (void *)sub_1B8CE1494();
    swift_bridgeObjectRelease();
    v274 = (void *)sub_1B8CE0DEC();
    v275 = (void *)sub_1B8CE0DEC();
    v276 = objc_msgSend(v272, sel_initWithIdentifier_name_type_thumbnailImageURL_fullsizeImageURL_, v362, v273, 0, v274, v275);

    v277 = *(void (**)(char *, uint64_t))(v367 + 8);
    v277(v270, v218);
    v277(v269, v218);
    type metadata accessor for WKStillWallpaper.ImplementationWrapper();
    v278 = swift_allocObject();
    *(_QWORD *)(v278 + 16) = v276;

    swift_unknownObjectRelease();
    *v271 = v278;
    goto LABEL_102;
  }
  if (v217(v214, 1, v218) != 1)
  {
    sub_1B8C8838C(v360, v220);
    v246 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 32);
    v247 = v220;
    v248 = v341;
    v246(v341, v214, v218);
    v214 = v213;
    v213 = v212;
    goto LABEL_98;
  }
  if (qword_1EF1D3AD0 != -1)
    swift_once();
  v222 = (uint64_t)v373;
  v223 = __swift_project_value_buffer((uint64_t)v373, (uint64_t)qword_1EF1D78D0);
  v98 = (char *)v375;
  v224 = (char *)v375[2];
  v225 = v337;
  v368 = (char *)v223;
  v369 = v224;
  ((void (*)(char *))v224)(v337);
  v93 = v371;
  v226 = sub_1B8CE0EC4();
  v227 = sub_1B8CE15B4();
  v228 = os_log_type_enabled(v226, v227);
  v229 = v361;
  if (v228)
  {
    v230 = swift_slowAlloc();
    v371 = (char *)swift_slowAlloc();
    v378 = v371;
    *(_DWORD *)v230 = 136446722;
    v231 = (id)PBUIStringForWallpaperVariant();
    v232 = sub_1B8CE14B8();
    v234 = v233;

    *(_QWORD *)&v379 = sub_1B8CC4700(v232, v234, (uint64_t *)&v378);
    sub_1B8CE1674();
    swift_bridgeObjectRelease();
    *(_WORD *)(v230 + 12) = 2082;
    v235 = (id)PBUIStringForWallpaperMode();
    if (!v235)
      goto LABEL_132;
    v236 = v235;
    v237 = sub_1B8CE14B8();
    v239 = v238;

    *(_QWORD *)&v379 = sub_1B8CC4700(v237, v239, (uint64_t *)&v378);
    sub_1B8CE1674();
    swift_bridgeObjectRelease();
    *(_WORD *)(v230 + 22) = 2082;
    objc_msgSend(v93, sel_wallpaperType);
    v240 = (id)PBUIStringForWallpaperType();
    v241 = sub_1B8CE14B8();
    v243 = v242;

    *(_QWORD *)&v379 = sub_1B8CC4700(v241, v243, (uint64_t *)&v378);
    sub_1B8CE1674();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B8C64000, v226, v227, "Synthesizing wallpaper failed (variant: %{public}s, mode: %{public}s, type: %{public}s).", (uint8_t *)v230, 0x20u);
    v244 = v371;
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v244, -1, -1);
    MEMORY[0x1BCCB9588](v230, -1, -1);

    v245 = (_QWORD *)v375[1];
    v222 = (uint64_t)v373;
    ((void (*)(char *, _QWORD *))v245)(v337, v373);
    v229 = v361;
  }
  else
  {

    v245 = (_QWORD *)*((_QWORD *)v98 + 1);
    ((void (*)(char *, uint64_t))v245)(v225, v222);
  }
  v279 = v338;
  ((void (*)(uint64_t, char *, uint64_t))v369)(v338, v368, v222);
  v98 = v93;
  v280 = sub_1B8CE0EC4();
  v281 = sub_1B8CE15C0();
  if (os_log_type_enabled(v280, v281))
  {
    v375 = v245;
    v282 = swift_slowAlloc();
    v371 = (char *)swift_slowAlloc();
    v378 = v371;
    *(_DWORD *)v282 = 136446722;
    v283 = (id)PBUIStringForWallpaperVariant();
    v284 = sub_1B8CE14B8();
    v286 = v285;

    *(_QWORD *)&v379 = sub_1B8CC4700(v284, v286, (uint64_t *)&v378);
    sub_1B8CE1674();
    swift_bridgeObjectRelease();
    *(_WORD *)(v282 + 12) = 2082;
    v287 = (id)PBUIStringForWallpaperMode();
    if (v287)
    {
      v288 = v287;
      v289 = sub_1B8CE14B8();
      v291 = v290;

      *(_QWORD *)&v379 = sub_1B8CC4700(v289, v291, (uint64_t *)&v378);
      sub_1B8CE1674();
      swift_bridgeObjectRelease();
      *(_WORD *)(v282 + 22) = 2082;
      objc_msgSend(v98, sel_wallpaperType);
      v292 = (id)PBUIStringForWallpaperType();
      v293 = sub_1B8CE14B8();
      v295 = v294;

      *(_QWORD *)&v379 = sub_1B8CC4700(v293, v295, (uint64_t *)&v378);
      sub_1B8CE1674();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B8C64000, v280, v281, "Synthesizing wallpaper failed (variant: %{public}s, mode: %{public}s, type: %{public}s).", (uint8_t *)v282, 0x20u);
      v296 = v371;
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v296, -1, -1);
      MEMORY[0x1BCCB9588](v282, -1, -1);

      swift_unknownObjectRelease();
      ((void (*)(uint64_t, _QWORD *))v375)(v338, v373);
      sub_1B8C88430(v364, (uint64_t *)&unk_1ED565130);
      sub_1B8C88430(v365, (uint64_t *)&unk_1ED565130);
      sub_1B8C88430((uint64_t)v366, (uint64_t *)&unk_1ED565130);
      v297 = v361;
      goto LABEL_108;
    }
LABEL_133:

    __break(1u);
  }
  else
  {

    swift_unknownObjectRelease();
    ((void (*)(uint64_t, uint64_t))v245)(v279, v222);
    sub_1B8C88430(v364, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v365, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430((uint64_t)v366, (uint64_t *)&unk_1ED565130);
    v297 = v229;
LABEL_108:
    sub_1B8C88430(v297, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v359, (uint64_t *)&unk_1ED565130);
    v298 = v374;
    v374[4] = 0;
    *(_OWORD *)v298 = 0u;
    *((_OWORD *)v298 + 1) = 0u;
    sub_1B8C88430(v360, &qword_1EF1D4380);
  }
}

unint64_t sub_1B8CBA650@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_1B8CC6AE4(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  return result;
}

uint64_t sub_1B8CBA67C(unint64_t a1)
{
  __CFString *v1;
  uint64_t v2;

  v1 = WKStringFromWallpaperType(a1);
  v2 = sub_1B8CE14B8();

  sub_1B8CE14DC();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_1B8CBA7BC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;

  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v2 = sub_1B8CE17DC();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = 4;
      while (1)
      {
        v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v5 = (void *)MEMORY[0x1BCCB8A6C](v3 - 4, a1);
          v6 = v3 - 3;
          if (__OFADD__(v4, 1))
            goto LABEL_16;
        }
        else
        {
          v5 = *(void **)(a1 + 8 * v3);
          swift_unknownObjectRetain();
          v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v7 = sub_1B8CE14B8();
        v9 = v8;
        if (v7 == sub_1B8CE14B8() && v9 == v10)
          v11 = 1;
        else
          v11 = sub_1B8CE1890();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v12 = objc_msgSend(v5, sel_hasWallpaperImageForVariant_wallpaperMode_, v11 & 1, 2);
        swift_unknownObjectRelease();
        if ((v12 & 1) == 0)
        {
          ++v3;
          if (v6 != v2)
            continue;
        }
        goto LABEL_19;
      }
    }
  }
  v12 = 0;
LABEL_19:
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_1B8CBA948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1D3E60;
  if (!qword_1EF1D3E60)
  {
    type metadata accessor for WKWallpaperKitDataKey(255);
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE4770, v1);
    atomic_store(result, (unint64_t *)&qword_1EF1D3E60);
  }
  return result;
}

void sub_1B8CBA990()
{
  id v0;
  id v1;
  double v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  v2 = 119.0;
  if (!v1)
    v2 = 64.0;
  qword_1ED56B920 = *(_QWORD *)&v2;
}

id sub_1B8CBAA04(char a1, uint64_t a2)
{
  _BYTE *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v22;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_1B8CE0E1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &v2[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_originalSize];
  *v10 = 0;
  v10[1] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)&v2[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_currentScaleEffect] = _Q0;
  v2[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_layerLevel] = a1;
  sub_1B8CBC208();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v16 = sub_1B8CE14B8();
  v18 = v17;
  v19 = v2;
  *(_QWORD *)&v19[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_package] = sub_1B8CBAD1C((uint64_t)v9, v16, v18, 0);

  v23.receiver = v19;
  v23.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v23, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1B8CBAEA8();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  return v20;
}

id sub_1B8CBAD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)sub_1B8CE0DEC();
  v7 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_1B8CE1440();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v17[0] = 0;
  v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_packageWithContentsOfURL_type_options_error_, v6, v7, v8, v17);

  v10 = v17[0];
  if (v9)
  {
    v11 = sub_1B8CE0E1C();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v13 = v10;
    v12(a1, v11);
  }
  else
  {
    v14 = v17[0];
    sub_1B8CE0DBC();

    swift_willThrow();
    v15 = sub_1B8CE0E1C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  }
  return v9;
}

void sub_1B8CBAEA8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

  objc_msgSend(v0, sel_setClipsToBounds_, 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_package];
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v3, sel_rootLayer);
    if (v4)
    {
      v15 = v4;
      objc_msgSend(v4, sel_size);
      v6 = (double *)&v0[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_originalSize];
      v7 = *(double *)&v0[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_originalSize];
      v8 = *(double *)&v0[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_originalSize + 8];
      *v6 = v9;
      v6[1] = v5;
      if (v9 != v7 || v5 != v8)
        objc_msgSend(v0, sel_layoutIfNeeded);
      objc_msgSend(v15, sel_setContentsGravity_, *MEMORY[0x1E0CD2F90]);
      objc_msgSend(v15, sel_setMasksToBounds_, 0);
      objc_msgSend(v15, sel_setFillMode_, *MEMORY[0x1E0CD2B50]);
      v11 = objc_msgSend(v0, sel_layer);
      objc_msgSend(v11, sel_setMasksToBounds_, 0);

      v12 = objc_msgSend(v0, sel_layer);
      objc_msgSend(v12, sel_addSublayer_, v15);

      v13 = objc_msgSend(v0, sel_layer);
      objc_msgSend(v13, sel_setGeometryFlipped_, objc_msgSend(v3, sel_isGeometryFlipped));

      objc_msgSend(v0, sel_layoutIfNeeded);
      v14 = v15;
    }
    else
    {
      v14 = v3;
    }

  }
}

void sub_1B8CBB1EC(double a1, double a2, double a3, double a4)
{
  char *v4;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double *v14;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char isEscapingClosureAtFileLocation;
  uint64_t aBlock[6];
  objc_super v34;

  v34.receiver = v4;
  v34.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v34, sel_drawRect_, a1, a2, a3, a4);
  objc_msgSend(v4, sel_frame);
  v12 = sub_1B8CBB55C(v9, v10);
  v13 = v11;
  v14 = (double *)&v4[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_currentScaleEffect];
  if (v12 != *(double *)&v4[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_currentScaleEffect]
    || v11 != *(double *)&v4[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_currentScaleEffect + 8])
  {
    if (qword_1ED5652F8 != -1)
      swift_once();
    v16 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED56B930);
    v17 = v4;
    v18 = sub_1B8CE0EC4();
    v19 = sub_1B8CE15CC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      aBlock[0] = v21;
      *(_DWORD *)v20 = 136446466;
      v22 = MEMORY[0x1BCCB897C](v12, v13);
      sub_1B8CC4700(v22, v23, aBlock);
      sub_1B8CE1674();
      v24 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      v25 = MEMORY[0x1BCCB897C](v24, *v14, v14[1]);
      sub_1B8CC4700(v25, v26, aBlock);
      sub_1B8CE1674();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B8C64000, v18, v19, "New scale effect %{public}s isn't the same as the current scale effect %{public}s, applying.", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v21, -1, -1);
      MEMORY[0x1BCCB9588](v20, -1, -1);

    }
    else
    {

    }
    v27 = (void *)objc_opt_self();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v17;
    *(double *)(v28 + 24) = v12;
    *(double *)(v28 + 32) = v13;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = sub_1B8CBC160;
    *(_QWORD *)(v29 + 24) = v28;
    aBlock[4] = (uint64_t)sub_1B8CABD28;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1B8CBBFAC;
    aBlock[3] = (uint64_t)&block_descriptor_1;
    v30 = _Block_copy(aBlock);
    v31 = v17;
    swift_retain();
    swift_release();
    objc_msgSend(v27, sel_performWithoutAnimation_, v30);
    _Block_release(v30);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

double sub_1B8CBB55C(double a1, double a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  double v29;
  BOOL v31;
  int v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v43;
  double v44;
  uint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  double v70;
  double v71;
  uint64_t v72;
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  double v87;
  uint64_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v5 = sub_1B8CE0EDC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v88 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v88 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v88 - v16;
  if (a1 == 0.0 && a2 == 0.0
    || (v18 = *(_QWORD *)&a1 & 0x7FF0000000000000, (*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) == 0)
    && v18 == 0x7FF0000000000000
    || (v18 == 0x7FF0000000000000 ? (v31 = (*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) == 0) : (v31 = 1),
        !v31 ? (v32 = 0) : (v32 = 1),
        (~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0 || !v32))
  {
    if (qword_1ED5652F8 != -1)
      swift_once();
    v19 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED56B930);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v19, v5);
    v20 = v2;
    v21 = sub_1B8CE0EC4();
    v22 = sub_1B8CE15CC();
    if (os_log_type_enabled(v21, v22))
    {
      v90 = v5;
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v89 = (uint8_t *)v24;
      *(_DWORD *)v23 = 136446210;
      v93 = v24;
      v25 = sub_1B8CE14C4();
      v91 = v6;
      v27 = v26;
      swift_bridgeObjectRelease();
      v92 = sub_1B8CC4700(v25, v27, &v93);
      sub_1B8CE1674();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B8C64000, v21, v22, "Bounding size for %{public}s is zero.", v23, 0xCu);
      v28 = v89;
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v28, -1, -1);
      MEMORY[0x1BCCB9588](v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v91 + 8))(v9, v90);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  else
  {
    v33 = WKStandardDisplayModeScreenSize();
    v35 = v34;
    if (qword_1ED565210 != -1)
      swift_once();
    v36 = *(double *)&qword_1ED56B920;
    v37 = WKStandardDisplayModeScreenSize();
    if (a2 >= a1)
      v38 = a1;
    else
      v38 = a2;
    v39 = *(double *)&v2[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_originalSize];
    v40 = *(double *)&v2[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_originalSize + 8];
    if (v39 == v40)
    {
      v41 = round(sqrt(v35 * v35 + v33 * v33)) + v36 + v36;
      if (v39 != v41 || v40 != v41)
      {
        v43 = v41 / v39;
        v44 = v38 / v37;
        if (qword_1ED5652F8 != -1)
          swift_once();
        v29 = v44 * v43;
        v45 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED56B930);
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v17, v45, v5);
        v46 = v2;
        v47 = sub_1B8CE0EC4();
        v48 = sub_1B8CE15CC();
        v49 = v48;
        if (os_log_type_enabled(v47, v48))
        {
          v50 = swift_slowAlloc();
          LODWORD(v89) = v49;
          v51 = v50;
          v90 = swift_slowAlloc();
          v93 = v90;
          *(_DWORD *)v51 = 136446466;
          v52 = sub_1B8CE1560();
          v92 = sub_1B8CC4700(v52, v53, &v93);
          sub_1B8CE1674();
          swift_bridgeObjectRelease();
          *(_WORD *)(v51 + 12) = 2082;
          v54 = sub_1B8CE14C4();
          v91 = v6;
          v55 = v54;
          v57 = v56;
          swift_bridgeObjectRelease();
          v92 = sub_1B8CC4700(v55, v57, &v93);
          sub_1B8CE1674();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1B8C64000, v47, (os_log_type_t)v89, "[Square] Applying '%{public}s' scale to %{public}s", (uint8_t *)v51, 0x16u);
          v58 = v90;
          swift_arrayDestroy();
          MEMORY[0x1BCCB9588](v58, -1, -1);
          MEMORY[0x1BCCB9588](v51, -1, -1);

          v59 = *(void (**)(char *, uint64_t))(v91 + 8);
        }
        else
        {

          v59 = *(void (**)(char *, uint64_t))(v6 + 8);
        }
        v86 = v17;
LABEL_50:
        v59(v86, v5);
        return v29;
      }
    }
    if (v39 / v40 != a1 / a2)
    {
      v70 = a2 / v40;
      v71 = v39 * (a2 / v40);
      if (a1 / v39 < v70)
        a1 = v71;
      if (qword_1ED5652F8 != -1)
      {
        v87 = *(double *)&v2[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_originalSize];
        swift_once();
        v39 = v87;
      }
      v29 = a1 / v39;
      v72 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED56B930);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v72, v5);
      v73 = v2;
      v74 = sub_1B8CE0EC4();
      v75 = sub_1B8CE15CC();
      v76 = v75;
      if (os_log_type_enabled(v74, v75))
      {
        v77 = swift_slowAlloc();
        LODWORD(v89) = v76;
        v78 = v77;
        v90 = swift_slowAlloc();
        v93 = v90;
        *(_DWORD *)v78 = 136446466;
        v79 = sub_1B8CE1560();
        v92 = sub_1B8CC4700(v79, v80, &v93);
        sub_1B8CE1674();
        swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 12) = 2082;
        v81 = sub_1B8CE14C4();
        v91 = v6;
        v82 = v81;
        v84 = v83;
        swift_bridgeObjectRelease();
        v92 = sub_1B8CC4700(v82, v84, &v93);
        sub_1B8CE1674();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B8C64000, v74, (os_log_type_t)v89, "[Aspect Rectangle] Applying '%{public}s' scale to %{public}s", (uint8_t *)v78, 0x16u);
        v85 = v90;
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v85, -1, -1);
        MEMORY[0x1BCCB9588](v78, -1, -1);

        v59 = *(void (**)(char *, uint64_t))(v91 + 8);
      }
      else
      {

        v59 = *(void (**)(char *, uint64_t))(v6 + 8);
      }
      v86 = v15;
      goto LABEL_50;
    }
    if (qword_1ED5652F8 != -1)
      swift_once();
    v60 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED56B930);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, v60, v5);
    v61 = v2;
    v62 = sub_1B8CE0EC4();
    v63 = sub_1B8CE15CC();
    if (os_log_type_enabled(v62, v63))
    {
      v90 = v5;
      v64 = (uint8_t *)swift_slowAlloc();
      v65 = swift_slowAlloc();
      *(_DWORD *)v64 = 136446210;
      v93 = v65;
      v89 = v64 + 4;
      v66 = sub_1B8CE14C4();
      v91 = v6;
      v67 = v66;
      v69 = v68;
      swift_bridgeObjectRelease();
      v92 = sub_1B8CC4700(v67, v69, &v93);
      sub_1B8CE1674();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B8C64000, v62, v63, "Applying no scaling to %{public}s", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v65, -1, -1);
      MEMORY[0x1BCCB9588](v64, -1, -1);

      (*(void (**)(char *, uint64_t))(v91 + 8))(v12, v90);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    }
  }
  return 1.0;
}

id sub_1B8CBBF04(double a1, double a2)
{
  void *v4;
  id v5;

  v4 = (void *)objc_opt_self();
  objc_msgSend(v4, sel_begin);
  v5 = objc_msgSend(v4, sel_disableActions);
  objc_msgSend(v4, sel_setDisableActions_, 1);
  sub_1B8CD575C(a1, a2, 0.5, 0.5);
  objc_msgSend(v4, sel_commit);
  return objc_msgSend(v4, sel_setDisableActions_, v5);
}

uint64_t sub_1B8CBBFAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_1B8CBC030()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC12WallpaperKit21WKPlatformPackageView_package];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, sel_rootLayer);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v0, sel_bounds);
      UIRectGetCenter();
      objc_msgSend(v4, sel_setPosition_);

      v2 = v4;
    }

  }
}

uint64_t type metadata accessor for WKPlatformPackageView()
{
  return objc_opt_self();
}

uint64_t sub_1B8CBC13C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1B8CBC160()
{
  uint64_t v0;

  return sub_1B8CBBF04(*(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1B8CBC16C()
{
  return swift_deallocObject();
}

uint64_t sub_1B8CBC17C(void (*a1)(_QWORD *__return_ptr))
{
  uint64_t v1;
  _QWORD v3[8];

  a1(v3);
  v1 = WKPosterEnvironmentSnapshot.description.getter();

  swift_release();
  return v1;
}

uint64_t sub_1B8CBC1D8(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v2;

  a1(&v2);
  return sub_1B8CC11E4();
}

unint64_t sub_1B8CBC208()
{
  unint64_t result;

  result = qword_1ED565590;
  if (!qword_1ED565590)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED565590);
  }
  return result;
}

_BYTE *WKPosterWakeState.init(screenState:progress:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(_BYTE *)a2 = *result;
  *(double *)(a2 + 8) = a3;
  return result;
}

void static WKPosterWakeState.screenOn.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0x3FF0000000000000;
}

void static WKPosterWakeState.screenOff.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 0;
}

void WKPosterWakeState.screenState.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

double WKPosterWakeState.progress.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double *WKPosterWakeState.transitionDirection(from:)@<X0>(double *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;

  v3 = *(unsigned __int8 *)result;
  if (v3 != 3)
  {
    v4 = *(double *)(v2 + 8);
    v5 = result[1];
    if (v5 == v4)
    {
      *a2 = 3;
      return result;
    }
    LOBYTE(v3) = v5 >= v4;
  }
  *a2 = v3;
  return result;
}

BOOL static WKPosterWakeState.== infix(_:_:)(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
}

BOOL static WKPosterWakeState.ScreenState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WKPosterWakeState.ScreenState.description.getter()
{
  char *v0;

  return qword_1B8CE7C80[*v0];
}

unint64_t WKPosterWakeState.description.getter()
{
  sub_1B8CE1704();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  sub_1B8CE1560();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  return 0xD000000000000021;
}

uint64_t WKPosterWakeState.ScreenState.hash(into:)()
{
  return sub_1B8CE18E4();
}

uint64_t WKPosterWakeState.ScreenState.hashValue.getter()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKPosterWakeState.hash(into:)()
{
  sub_1B8CE18E4();
  return sub_1B8CE18FC();
}

uint64_t WKPosterWakeState.hashValue.getter()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  sub_1B8CE18FC();
  return sub_1B8CE1908();
}

unint64_t sub_1B8CBC528()
{
  unint64_t result;

  result = qword_1EF1D43B0;
  if (!qword_1EF1D43B0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKPosterWakeState.ScreenState, &type metadata for WKPosterWakeState.ScreenState);
    atomic_store(result, (unint64_t *)&qword_1EF1D43B0);
  }
  return result;
}

unint64_t sub_1B8CBC570()
{
  unint64_t result;

  result = qword_1EF1D43B8;
  if (!qword_1EF1D43B8)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKPosterWakeState, &type metadata for WKPosterWakeState);
    atomic_store(result, (unint64_t *)&qword_1EF1D43B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKPosterWakeState()
{
  return &type metadata for WKPosterWakeState;
}

uint64_t storeEnumTagSinglePayload for WKPosterWakeState.ScreenState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8CBC610 + 4 * byte_1B8CE7B05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8CBC644 + 4 * byte_1B8CE7B00[v4]))();
}

uint64_t sub_1B8CBC644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CBC64C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8CBC654);
  return result;
}

uint64_t sub_1B8CBC660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8CBC668);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8CBC66C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CBC674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WKPosterWakeState.ScreenState()
{
  return &type metadata for WKPosterWakeState.ScreenState;
}

CGSize __swiftcall CGSize.aspectFit(to:)(CGSize to)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  CGSize result;

  v3 = to.width / v1;
  v4 = to.height / v2;
  if (v4 >= v3)
    v4 = v3;
  v5 = v4 * v1;
  v6 = v4 * v2;
  result.height = v6;
  result.width = v5;
  return result;
}

CGSize __swiftcall CGSize.aspectFill(to:)(CGSize to)
{
  double v1;
  double v2;
  double v3;
  double v4;

  v3 = to.width / v1;
  if (to.width / v1 <= to.height / v2)
    v3 = to.height / v2;
  v4 = v3 * v1;
  if (v4 <= to.width)
    to.width = v4;
  if (v3 * v2 <= to.height)
    to.height = v3 * v2;
  return to;
}

BOOL sub_1B8CBC6D8(double a1, double a2, double a3, double a4)
{
  BOOL v4;

  v4 = (~*(_QWORD *)&a1 & 0x7FF0000000000000) != 0 || (*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) == 0;
  if (!v4
    || (~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL) != 0
    || (~*(_QWORD *)&a3 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&a3 & 0xFFFFFFFFFFFFFLL) != 0)
  {
    return 1;
  }
  if ((~*(_QWORD *)&a4 & 0x7FF0000000000000) != 0)
    return 0;
  return (*(_QWORD *)&a4 & 0xFFFFFFFFFFFFFLL) != 0;
}

uint64_t sub_1B8CBC740(double a1, double a2, double a3, double a4)
{
  _BOOL4 v4;
  int v5;
  unsigned int v6;

  v4 = (~*(_QWORD *)&a4 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&a4 & 0xFFFFFFFFFFFFFLL) == 0;
  v5 = (*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000 || v4;
  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000)
    v6 = 1;
  else
    v6 = v5;
  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000)
    return 1;
  else
    return v6;
}

BOOL sub_1B8CBC798()
{
  _QWORD *v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  if ((~*v0 & 0x7FF0000000000000) == 0 && (*v0 & 0xFFFFFFFFFFFFFLL) != 0)
    return 1;
  v2 = v0[1];
  v3 = ~v2 & 0x7FF0000000000000;
  v4 = v2 & 0xFFFFFFFFFFFFFLL;
  if (!v3 && v4 != 0)
    return 1;
  v6 = v0[2];
  if ((~v6 & 0x7FF0000000000000) == 0 && (v6 & 0xFFFFFFFFFFFFFLL) != 0)
    return 1;
  v7 = v0[3];
  if ((~v7 & 0x7FF0000000000000) == 0 && (v7 & 0xFFFFFFFFFFFFFLL) != 0)
    return 1;
  v8 = v0[4];
  if ((~v8 & 0x7FF0000000000000) == 0 && (v8 & 0xFFFFFFFFFFFFFLL) != 0)
    return 1;
  v10 = v0[5];
  return (~v10 & 0x7FF0000000000000) == 0 && (v10 & 0xFFFFFFFFFFFFFLL) != 0;
}

BOOL sub_1B8CBC830()
{
  _QWORD *v0;
  uint64_t v2;

  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000)
    return 1;
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000)
    return 1;
  if ((v0[2] & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000)
    return 1;
  if ((v0[3] & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000)
    return 1;
  if ((v0[4] & 0x7FFFFFFFFFFFFFFFLL) == 0x7FF0000000000000)
    return 1;
  v2 = v0[5];
  return (~v2 & 0x7FF0000000000000) == 0 && (v2 & 0xFFFFFFFFFFFFFLL) == 0;
}

uint64_t *sub_1B8CBC8CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B8CE0E58();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
  }
  return a1;
}

uint64_t sub_1B8CBC970(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1B8CE0E58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1B8CBC9A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1B8CBCA1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1B8CBCA9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1B8CBCB14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B8CE0E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1B8CBCB8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CBCB98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8CE0E58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1B8CBCBD4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CBCBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1B8CE0E58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WKPosterDynamicRotationState()
{
  uint64_t result;

  result = qword_1ED564FF8;
  if (!qword_1ED564FF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8CBCC5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8CE0E58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

int *sub_1B8CBCCD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  BOOL v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  int *result;
  uint64_t v17;

  v4 = sub_1B8CE0E58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8CE0E4C();
  if (a1 == 2)
  {
    v13 = 180.0;
  }
  else
  {
    if (a1 == 3)
    {
      v14 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v15 = objc_msgSend(v14, sel_userInterfaceLayoutDirection);

      v10 = v15 == (id)1;
      v11 = 90.0;
      v12 = 270.0;
    }
    else
    {
      if (a1 != 4)
      {
        v13 = 0.0;
        goto LABEL_11;
      }
      v8 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v9 = objc_msgSend(v8, sel_userInterfaceLayoutDirection);

      v10 = v9 == (id)1;
      v11 = 270.0;
      v12 = 90.0;
    }
    if (v10)
      v13 = v12;
    else
      v13 = v11;
  }
LABEL_11:
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  result = (int *)type metadata accessor for WKPosterDynamicRotationState();
  *(double *)(a2 + result[5]) = v13;
  *(_QWORD *)(a2 + result[6]) = 0x3FF0000000000000;
  *(_QWORD *)(a2 + result[7]) = a1;
  *(_QWORD *)(a2 + result[8]) = a1;
  return result;
}

id WKWallpaperAdjustmentTraitOffset.offsetForCurrentScreenScaleMode(with:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_offsetForCurrentScreenScaleModeWithInterfaceOrientation_, a1);
}

uint64_t WKWallpaperAdjustmentTraitOffset.init(attributeDictionary:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t result;

  if (a1)
  {
    v3 = (void *)sub_1B8CE1440();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(objc_allocWithZone((Class)WKWallpaperAdjustmentTraitOffset), sel_initWithAttributeDictionary_, v3);

  type metadata accessor for WKWallpaperAdjustmentTraitOffset.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v4;
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for WKWallpaperAdjustmentTraitOffset.ImplementationWrapper()
{
  return objc_opt_self();
}

Swift::OpaquePointer_optional __swiftcall WKWallpaperAdjustmentTraitOffset.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id static WKWallpaperAdjustmentTraitOffset.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKWallpaperAdjustmentTraitOffset.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKWallpaperAdjustmentTraitOffset.description.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_description);
  v2 = sub_1B8CE14B8();

  return v2;
}

uint64_t WKWallpaperAdjustmentTraitOffset.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKWallpaperAdjustmentTraitOffset.screenScaleMode.getter()
{
  uint64_t v1;
  _OWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  sub_1B8CE0E64();
  if ((id)SFPerformSelector())
  {
    sub_1B8CE16A4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_1B8CBD1BC((uint64_t)v2, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast())
      return v1;
    else
      return 0;
  }
  else
  {
    sub_1B8CBD204((uint64_t)v3);
    return 0;
  }
}

uint64_t sub_1B8CBD1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CBD204(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565600);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WKWallpaperAdjustmentTraitOffset.screenScaleMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  _OWORD v8[2];

  sub_1B8CE0E64();
  v4 = *(void **)(*(_QWORD *)v2 + 16);
  v5 = v4;
  if (a2)
  {
    sub_1B8CE1494();
    swift_bridgeObjectRelease();
  }
  v6 = (id)SFPerformSelector();

  swift_unknownObjectRelease();
  if (v6)
  {
    sub_1B8CE16A4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  return sub_1B8CBD204((uint64_t)v8);
}

uint64_t (*WKWallpaperAdjustmentTraitOffset.screenScaleMode.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = WKWallpaperAdjustmentTraitOffset.screenScaleMode.getter();
  a1[1] = v3;
  return sub_1B8CBD36C;
}

uint64_t sub_1B8CBD36C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return WKWallpaperAdjustmentTraitOffset.screenScaleMode.setter(*a1, v2);
  swift_bridgeObjectRetain();
  WKWallpaperAdjustmentTraitOffset.screenScaleMode.setter(v3, v2);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B8CBD3D0()
{
  unint64_t result;

  result = qword_1EF1D43C0;
  if (!qword_1EF1D43C0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperAdjustmentTraitOffset, &type metadata for WKWallpaperAdjustmentTraitOffset);
    atomic_store(result, (unint64_t *)&qword_1EF1D43C0);
  }
  return result;
}

uint64_t sub_1B8CBD414@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = WKWallpaperAdjustmentTraitOffset.screenScaleMode.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B8CBD44C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return WKWallpaperAdjustmentTraitOffset.screenScaleMode.setter(v1, v2);
}

ValueMetadata *type metadata accessor for WKWallpaperAdjustmentTraitOffset()
{
  return &type metadata for WKWallpaperAdjustmentTraitOffset;
}

ValueMetadata *type metadata accessor for WKLayeredStillWallpaperPosterOverlay()
{
  return &type metadata for WKLayeredStillWallpaperPosterOverlay;
}

uint64_t sub_1B8CBD4A8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1B8CBD4B8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  double result;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25[2];
  unsigned __int8 v26;
  id v27;
  _QWORD v28[19];
  char v29;

  v3 = *(_QWORD *)v1;
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v18 = *(_QWORD *)v1;
  v6 = *(_QWORD *)(v1 + 40);
  v23 = *(_QWORD *)(v1 + 8);
  v24 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v17 = *(void **)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 80);
  v21 = *(_QWORD *)(v1 + 72);
  v22 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v20 = *(_QWORD *)(v1 + 104);
  v19 = *(_BYTE *)(v1 + 112);
  v11 = *(_QWORD *)(v1 + 120);
  v28[3] = &type metadata for WKWallpaperBundle;
  v28[4] = sub_1B8C8A2F0();
  v28[5] = v3;
  v28[0] = v11;
  v28[6] = v23;
  v28[7] = v5;
  v28[8] = v4;
  v28[9] = v24;
  v28[10] = v6;
  v28[11] = v7;
  v28[12] = v17;
  v28[13] = v22;
  v28[14] = v21;
  v28[15] = v8;
  v28[16] = v9;
  v28[17] = v10;
  v28[18] = v20;
  v29 = v19;
  swift_retain();
  sub_1B8C85798(v18, v23, v5, v4, v24, v6, v7, v17, v22, v21, v8, v9, v10, v20, v19);
  sub_1B8CDF63C((uint64_t)v25);
  sub_1B8C85880(v18, v23, v5, v4, v24, v6, v7, v17, v22, v21, v8, v9, v10, v20, v19);
  LODWORD(v4) = v26;

  swift_release();
  if ((_DWORD)v4)
    v12 = 4;
  else
    v12 = 8;
  KeyPath = swift_getKeyPath();
  v14 = swift_getKeyPath();
  sub_1B8C90CCC((uint64_t)v28, (uint64_t)v25);
  v15 = swift_allocObject();
  sub_1B8C8A344(v25, v15 + 16);
  *(_BYTE *)(v15 + 56) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  *(_QWORD *)a1 = KeyPath;
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v14;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_QWORD *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = sub_1B8C914EC;
  *(_QWORD *)(a1 + 144) = v15;
  *(_BYTE *)(a1 + 152) = 0;
  return result;
}

uint64_t sub_1B8CBD704()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1B8CBD728(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  double v14;
  double v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  __CFString **v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __CFString *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __CFString **v46;
  uint64_t v47;
  char v48;
  char v49;
  BOOL v50;
  __CFString *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  _QWORD v65[2];
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  char v79;
  double v80;
  char v81;
  double v82;
  char v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[2];

  v77 = a5;
  v10 = sub_1B8CE0F84();
  v76 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_BYTE *)a1;
  LODWORD(v75) = *((unsigned __int8 *)a1 + 8);
  v14 = a1[2];
  v74 = *((unsigned __int8 *)a1 + 24);
  v15 = a1[4];
  v73 = *((unsigned __int8 *)a1 + 40);
  v16 = *((_QWORD *)a1 + 6);
  v17 = (void *)*((_QWORD *)a1 + 7);
  v18 = *((_QWORD *)a1 + 8);
  v72 = *((_QWORD *)a1 + 9);
  v19 = *((_QWORD *)a1 + 10);
  v20 = *((_QWORD *)a1 + 11);
  v21 = *((_QWORD *)a1 + 12);
  v22 = *((_QWORD *)a1 + 13);
  if ((sub_1B8CBDF48(a3, a4) & 1) == 0)
  {
LABEL_22:
    *v77 = 0;
    return;
  }
  v68 = a2;
  v69 = v10;
  v70 = a3;
  v71 = v5;
  if (qword_1ED565318 != -1)
    swift_once();
  v23 = sub_1B8CE0EDC();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED56B978);
  swift_retain_n();
  v25 = v17;
  v26 = sub_1B8CE0EC4();
  v27 = sub_1B8CE15A8();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v66 = v12;
    v29 = (uint8_t *)v28;
    v30 = swift_slowAlloc();
    v67 = v24;
    v31 = v30;
    v93[0] = v30;
    *(_DWORD *)v29 = 136446210;
    v65[1] = v29 + 4;
    LOBYTE(v78) = v13;
    v79 = v75;
    v80 = v14;
    v81 = v74;
    v82 = v15;
    v83 = v73;
    v84 = v16;
    v85 = v25;
    v86 = v18;
    v87 = v72;
    v88 = v19;
    v89 = v20;
    v90 = v21;
    v91 = v22;
    v32 = WKPosterEnvironmentSnapshot.description.getter();
    v78 = sub_1B8CC4700(v32, v33, v93);
    sub_1B8CE1674();
    swift_release_n();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B8C64000, v26, v27, "Resolving Layered Stripe against Traits: %{public}s.", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v31, -1, -1);
    v34 = v29;
    v12 = v66;
    MEMORY[0x1BCCB9588](v34, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v35 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 32);
  v36 = v70;
  v37 = v35(v70, a4);
  v38 = WKWallpaperAppearanceDefault;
  v39 = v69;
  if ((v37 & 1) != 0)
  {
    v40 = v76;
    (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v12, *MEMORY[0x1E0CD86D0], v69);
    v41 = sub_1B8CE0F78();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v39);
    if ((v41 & 1) != 0)
      v38 = WKWallpaperAppearanceDark;
  }
  v42 = *v38;
  sub_1B8CBE120(1u, a4, &v78);

  v43 = v78;
  if (!v78)
  {
    v53 = sub_1B8CE0EC4();
    v54 = sub_1B8CE15B4();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v55 = 0;
      MEMORY[0x1BCCB9588](v55, -1, -1);
    }

    v56 = sub_1B8CE0EC4();
    v57 = sub_1B8CE15C0();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      MEMORY[0x1BCCB9588](v58, -1, -1);
    }

    goto LABEL_22;
  }
  sub_1B8CBE120(0, a4, &v78);
  v44 = v78;
  if (v78)
  {
    v45 = v35(v36, a4);
    v46 = WKWallpaperAppearanceDefault;
    if ((v45 & 1) != 0)
    {
      v47 = v76;
      (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v12, *MEMORY[0x1E0CD86D0], v39);
      v48 = sub_1B8CE0F78();
      v75 = v43;
      v49 = v48;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v39);
      v50 = (v49 & 1) == 0;
      v43 = v75;
      if (!v50)
        v46 = WKWallpaperAppearanceDark;
    }
    v51 = *v46;
    sub_1B8CBE120(2u, a4, &v78);

    v52 = v78;
    if (v78)
    {
      v92 = v43;
      v93[0] = v44;
      sub_1B8CBE1E8(v93, &v92, &v78, v14);
      v92 = v52;
      v93[0] = v78;
      sub_1B8CBE1E8(v93, &v92, &v78, v15);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      *v77 = v78;
      return;
    }
    swift_release();
  }
  v59 = sub_1B8CE0EC4();
  v60 = sub_1B8CE15B4();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v61 = 0;
    MEMORY[0x1BCCB9588](v61, -1, -1);
  }

  v62 = sub_1B8CE0EC4();
  v63 = sub_1B8CE15C0();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v64 = 0;
    MEMORY[0x1BCCB9588](v64, -1, -1);
  }

  *v77 = v43;
}

uint64_t sub_1B8CBDE58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  if ((*(uint64_t (**)(const __CFString *, uint64_t, uint64_t))(a2 + 112))(CFSTR("WKWallpaperLocationCoverSheet"), a1, a2) != 1)return 0;
  (*(void (**)(__int128 *__return_ptr, const __CFString *, uint64_t, uint64_t))(a2 + 152))(&v8, CFSTR("WKWallpaperLocationCoverSheet"), a1, a2);
  if (!v9)
  {
    sub_1B8CBE7C0((uint64_t)&v8);
    return 0;
  }
  sub_1B8C8A344(&v8, (uint64_t)v10);
  v4 = v11;
  v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v5 + 24))(&v8, v4, v5);
  if (BYTE8(v8) != 1)
  {
    sub_1B8C8846C((void *)v8, SBYTE8(v8));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return 0;
  }
  v6 = 1;
  sub_1B8C8846C((void *)v8, SBYTE8(v8));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v6;
}

uint64_t sub_1B8CBDF48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  if ((*(uint64_t (**)(const __CFString *, uint64_t, uint64_t))(a2 + 112))(CFSTR("WKWallpaperLocationCoverSheet"), a1, a2) == 1)
  {
    (*(void (**)(__int128 *__return_ptr, const __CFString *, uint64_t, uint64_t))(a2 + 152))(&v7, CFSTR("WKWallpaperLocationCoverSheet"), a1, a2);
    if (v8)
    {
      sub_1B8C8A344(&v7, (uint64_t)v9);
      v4 = v10;
      v5 = v11;
      __swift_project_boxed_opaque_existential_1(v9, v10);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v5 + 24))(&v7, v4, v5);
      if (BYTE8(v7) == 2)
      {
        sub_1B8C8846C((void *)v7, SBYTE8(v7));
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
        return 1;
      }
      sub_1B8C8846C((void *)v7, SBYTE8(v7));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    }
    else
    {
      sub_1B8CBE7C0((uint64_t)&v7);
    }
  }
  return 0;
}

uint64_t sub_1B8CBE034(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  if ((*(uint64_t (**)(const __CFString *, uint64_t, uint64_t))(a2 + 112))(CFSTR("WKWallpaperLocationCoverSheet"), a1, a2) == 1)
  {
    (*(void (**)(__int128 *__return_ptr, const __CFString *, uint64_t, uint64_t))(a2 + 152))(&v7, CFSTR("WKWallpaperLocationCoverSheet"), a1, a2);
    if (v8)
    {
      sub_1B8C8A344(&v7, (uint64_t)v9);
      v4 = v10;
      v5 = v11;
      __swift_project_boxed_opaque_existential_1(v9, v10);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v5 + 24))(&v7, v4, v5);
      if (BYTE8(v7) == 3)
      {
        sub_1B8C8846C((void *)v7, SBYTE8(v7));
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
        return 1;
      }
      sub_1B8C8846C((void *)v7, SBYTE8(v7));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    }
    else
    {
      sub_1B8CBE7C0((uint64_t)&v7);
    }
  }
  return 0;
}

void sub_1B8CBE120(unsigned __int8 a1@<W0>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  __CFString **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int v8;
  void *v9;
  unsigned __int8 v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  if (a1 > 1u)
    v4 = WKWallpaperLocationHomeScreen;
  else
    v4 = WKWallpaperLocationCoverSheet;
  (*(void (**)(_QWORD *__return_ptr, __CFString *))(a2 + 160))(v11, *v4);
  v5 = v12;
  if (!v12)
  {
    sub_1B8CBE7C0((uint64_t)v11);
    goto LABEL_8;
  }
  v6 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v6 + 24))(&v9, v5, v6);
  v7 = v9;
  v8 = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (v8 != 2)
  {
    sub_1B8C8846C(v7, v8);
LABEL_8:
    v7 = 0;
  }
  *a3 = v7;
}

uint64_t sub_1B8CBE1E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  double v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  id v30;
  id v31;
  id v32;

  v6 = *a1;
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    *a3 = v6;
    return swift_retain();
  }
  v7 = *a2;
  if (WKFloatIsOne(a4))
  {
    *a3 = v7;
    return swift_retain();
  }
  v9 = *(void **)(v6 + 16);
  objc_msgSend(v9, sel_stripeAngleDegrees);
  v11 = v10;
  v12 = *(void **)(v7 + 16);
  objc_msgSend(v12, sel_stripeAngleDegrees);
  v14 = v13;
  objc_msgSend(v9, sel_stripeAngleDegrees);
  v16 = v11 + (v14 - v15) * a4;
  objc_msgSend(v9, sel_stripeHeightFactor);
  v18 = v17;
  objc_msgSend(v12, sel_stripeHeightFactor);
  v20 = v19;
  objc_msgSend(v9, sel_stripeHeightFactor);
  v22 = v18 + (v20 - v21) * a4;
  objc_msgSend(v9, sel_firstStripeOffsetScaleFactor);
  v24 = v23;
  objc_msgSend(v12, sel_firstStripeOffsetScaleFactor);
  v26 = v25;
  objc_msgSend(v9, sel_firstStripeOffsetScaleFactor);
  v28 = v24 + (v26 - v27) * a4;
  v29 = objc_msgSend(v9, sel_backgroundColor);
  v30 = objc_msgSend(v12, sel_backgroundColor);
  v31 = objc_msgSend(v29, sel_wk_interpolatedToColor_progress_, v30, a4);

  v32 = objc_msgSend(objc_allocWithZone((Class)WKLayeredStripeWallpaperInput), sel_initWithBackgroundColor_stripeAngleDegrees_stripeHeightFactor_firstStripeOffsetScaleFactor_, v31, v16, v22, v28);
  type metadata accessor for WKLayeredStripeWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v32;
  *a3 = result;
  return result;
}

void sub_1B8CBE3E0(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  void *v19;
  unsigned __int8 v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1B8CE0F84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  if ((sub_1B8CBE034(a1, a2) & 1) != 0)
  {
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2) & 1) != 0)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CD86D0], v6);
      v11 = sub_1B8CE0F78();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v11 & 1) != 0)
      {
        (*(void (**)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t))(a2 + 160))(v21, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("dark"), a1, a2);
        v12 = v22;
        if (v22)
        {
          v13 = v23;
          __swift_project_boxed_opaque_existential_1(v21, v22);
          (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v13 + 24))(&v19, v12, v13);
          v10 = v19;
          v14 = v20;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
          if (v14 == 3)
            goto LABEL_12;
          sub_1B8C8846C(v10, v14);
        }
        else
        {
          sub_1B8CBE7C0((uint64_t)v21);
        }
      }
    }
    (*(void (**)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t))(a2 + 160))(v21, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("default"), a1, a2);
    v15 = v22;
    if (!v22)
    {
      sub_1B8CBE7C0((uint64_t)v21);
      goto LABEL_11;
    }
    v16 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v16 + 24))(&v19, v15, v16);
    v10 = v19;
    v17 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    if (v17 != 3)
    {
      sub_1B8C8846C(v10, v17);
LABEL_11:
      v10 = 0;
    }
  }
LABEL_12:
  *a3 = v10;
}

uint64_t sub_1B8CBE60C(uint64_t a1, uint64_t a2)
{
  void *v5;

  sub_1B8CE1704();
  sub_1B8CE14DC();
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  sub_1B8CE1578();
  sub_1B8CE14DC();
  v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  type metadata accessor for WKWallpaperRepresentingLogicalScreenClass(0);
  sub_1B8CE1788();

  sub_1B8CE14DC();
  return 0;
}

uint64_t sub_1B8CBE7C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4040);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1B8CBE800()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.421333333, 0.730196078, 0.27372549, 1.0);
  qword_1ED56B9B0 = (uint64_t)result;
  return result;
}

id sub_1B8CBE84C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.12622222, 0.722352941, 0.162745098, 1.0);
  qword_1ED56B9C8 = (uint64_t)result;
  return result;
}

id sub_1B8CBE898()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 1.09955556, 0.504705882, 0.109411765, 1.0);
  qword_1ED56B9B8 = (uint64_t)result;
  return result;
}

id sub_1B8CBE8E4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.993333333, 0.225490196, 0.243137255, 1.0);
  qword_1ED56B9A0 = (uint64_t)result;
  return result;
}

id sub_1B8CBE934()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.665777778, 0.237254902, 0.593333333, 1.0);
  qword_1ED56B9C0 = (uint64_t)result;
  return result;
}

id sub_1B8CBE980()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, -0.0128888889, 0.617254902, 0.868627451, 1.0);
  qword_1ED56B9A8 = (uint64_t)result;
  return result;
}

uint64_t WKWallpaperRepresentingCollectionsManager.__allocating_init(downloadManager:)(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;

  v2 = swift_allocObject();
  if (a1)
    v3 = *(id *)(*(_QWORD *)(a1 + 16) + 16);
  else
    v3 = 0;
  v4 = objc_msgSend(objc_allocWithZone((Class)WKWallpaperRepresentingCollectionsManager), sel_initWithDownloadManager_, v3);
  swift_release();

  type metadata accessor for WKWallpaperRepresentingCollectionsManager.ImplementationWrapper();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v2 + 16) = v5;
  return v2;
}

uint64_t sub_1B8CBEA6C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  type metadata accessor for WKWallpaperRepresentingCollectionsManager();
  v1 = swift_allocObject();
  type metadata accessor for WKWallpaperRepresentingCollectionsManager.ImplementationWrapper();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v1 + 16) = v2;
  return v1;
}

uint64_t WKWallpaperRepresentingCollectionsManager.init(downloadManager:)(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;

  if (a1)
    v2 = *(id *)(*(_QWORD *)(a1 + 16) + 16);
  else
    v2 = 0;
  v3 = objc_msgSend(objc_allocWithZone((Class)WKWallpaperRepresentingCollectionsManager), sel_initWithDownloadManager_, v2);
  swift_release();

  type metadata accessor for WKWallpaperRepresentingCollectionsManager.ImplementationWrapper();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  return v1;
}

uint64_t type metadata accessor for WKWallpaperRepresentingCollectionsManager.ImplementationWrapper()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WKWallpaperRepresentingCollectionsManager()
{
  return objc_opt_self();
}

id sub_1B8CBEBA0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 16), sel_numberOfWallpaperCollections);
}

uint64_t sub_1B8CBEBB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v4;
  uint64_t result;

  v4 = objc_msgSend(*(id *)(*(_QWORD *)(v2 + 16) + 16), sel_wallpaperCollectionAtIndex_, a1);
  type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v4;
  *a2 = result;
  return result;
}

uint64_t sub_1B8CBEC10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  uint64_t result;

  v3 = *(id *)(*(_QWORD *)(v1 + 16) + 16);
  v4 = (void *)sub_1B8CE0E34();
  v5 = objc_msgSend(v3, sel_wallpaperCollectionWithIdentifier_, v4);

  result = 0;
  if (v5)
  {
    type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
  }
  *a1 = result;
  return result;
}

uint64_t WKWallpaperRepresentingCollectionsManager.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t WKWallpaperRepresentingCollectionsManager.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8CBECDC()
{
  return sub_1B8CBEFA8(&qword_1ED5657E8, (uint64_t)&protocol conformance descriptor for WKWallpaperRepresentingCollectionsManager);
}

uint64_t sub_1B8CBED00()
{
  return sub_1B8CBF014(&qword_1EF1D43C8, MEMORY[0x1E0DEB8B8]);
}

unint64_t sub_1B8CBED24()
{
  unint64_t result;

  result = qword_1EF1D43D0;
  if (!qword_1EF1D43D0)
  {
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EF1D43D0);
  }
  return result;
}

uint64_t sub_1B8CBED68()
{
  return sub_1B8CBEE20(&qword_1EF1D43D8, &qword_1EF1D43E8, (uint64_t)&protocol conformance descriptor for WKWallpaperRepresentingCollectionsManager, MEMORY[0x1E0DEDE40]);
}

uint64_t sub_1B8CBEDA4()
{
  return sub_1B8CBEFA8(&qword_1ED5657F0, (uint64_t)&protocol conformance descriptor for WKWallpaperRepresentingCollectionsManager);
}

uint64_t sub_1B8CBEDC8()
{
  return sub_1B8CBF014(&qword_1EF1D45C0, MEMORY[0x1E0DEB890]);
}

uint64_t sub_1B8CBEDEC()
{
  return sub_1B8CBEE20(&qword_1EF1D43F0, &qword_1ED5657E8, (uint64_t)&protocol conformance descriptor for WKWallpaperRepresentingCollectionsManager, MEMORY[0x1E0DEDE28]);
}

uint64_t sub_1B8CBEE20(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D43E0);
    v10 = sub_1B8CBEFA8(a2, a3);
    result = MEMORY[0x1BCCB94E0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1B8CBEE9C@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)v2 + 16) + 16), sel_numberOfWallpaperCollections);
    if ((v4 & 0x8000000000000000) == 0 && v4 < (uint64_t)result)
    {
      *a2 = v4;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1B8CBEEFC(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    result = (uint64_t *)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)v1 + 16) + 16), sel_numberOfWallpaperCollections);
    if ((v2 & 0x8000000000000000) == 0 && v2 < (uint64_t)result)
    {
      *v3 = v2;
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_1B8CBEF5C(uint64_t *a1, uint64_t *a2)
{
  return sub_1B8C9C4D8(*a1, *a2);
}

uint64_t sub_1B8CBEF84()
{
  return sub_1B8CBEFA8(&qword_1ED567378, (uint64_t)&protocol conformance descriptor for WKWallpaperRepresentingCollectionsManager);
}

uint64_t sub_1B8CBEFA8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WKWallpaperRepresentingCollectionsManager();
    result = MEMORY[0x1BCCB94E0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8CBEFE4()
{
  return MEMORY[0x1E0DEB430];
}

uint64_t sub_1B8CBEFF0()
{
  return sub_1B8CBF014(&qword_1EF1D43F8, MEMORY[0x1E0DEB8C0]);
}

uint64_t sub_1B8CBF014(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EF1D4590);
    v6 = sub_1B8CBED24();
    v7[0] = MEMORY[0x1E0DEB458];
    v7[1] = v6;
    result = MEMORY[0x1BCCB94E0](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8CBF080()
{
  return sub_1B8C86A88(&qword_1EF1D4400, &qword_1EF1D43E0, MEMORY[0x1E0DEDE48]);
}

id sub_1B8CBF0AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)v1 + 16) + 16), sel_numberOfWallpaperCollections);
  *a1 = result;
  return result;
}

void (*sub_1B8CBF0E4(uint64_t **a1, uint64_t *a2))(_QWORD *a1)
{
  uint64_t *v4;

  v4 = (uint64_t *)malloc(0x28uLL);
  *a1 = v4;
  v4[4] = (uint64_t)sub_1B8CBF160(v4, *a2);
  return sub_1B8CBF134;
}

void sub_1B8CBF134(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1B8CBF160(uint64_t *a1, uint64_t a2))()
{
  uint64_t v2;
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*(id *)(*(_QWORD *)(v2 + 16) + 16), sel_wallpaperCollectionAtIndex_, a2);
  type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *a1 = v5;
  return destroy for WKWallpaperPosterLayer;
}

uint64_t sub_1B8CBF1C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a1;
  v4 = a1[1];
  v6 = *v2;
  result = (uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(v6 + 16) + 16), sel_numberOfWallpaperCollections);
  if (result < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (result >= v4)
  {
    *a2 = v5;
    a2[1] = v4;
    a2[2] = v6;
    return swift_retain();
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_1B8CBF230@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = (unint64_t)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)v1 + 16) + 16), sel_numberOfWallpaperCollections);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = 0;
    a1[1] = result;
  }
  return result;
}

void sub_1B8CBF278(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

_QWORD *sub_1B8CBF288@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)v3 + 16) + 16), sel_numberOfWallpaperCollections);
    if ((v5 & 0x8000000000000000) == 0 && (uint64_t)result >= v5)
    {
      *a3 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_1B8CBF2E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  id result;
  char v6;

  result = sub_1B8CD358C(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_1B8CBF320(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[1];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_1B8CBF33C(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_1B8CBF358(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < result[1])
    __break(1u);
  return result;
}

id sub_1B8CBF374@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  id result;

  v4 = *a1;
  result = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)v2 + 16) + 16), sel_numberOfWallpaperCollections);
  if (v4 < 0 || v4 >= (uint64_t)result)
    __break(1u);
  else
    *a2 = v4 + 1;
  return result;
}

id sub_1B8CBF3CC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id result;

  v3 = *v1;
  v4 = *a1;
  result = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_numberOfWallpaperCollections);
  if (v4 < 0 || v4 >= (uint64_t)result)
    __break(1u);
  else
    *a1 = v4 + 1;
  return result;
}

uint64_t sub_1B8CBF41C()
{
  return sub_1B8C86A88(&qword_1EF1D4408, &qword_1EF1D4410, MEMORY[0x1E0DEC908]);
}

void sub_1B8CBF448(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_1B8CBF454(uint64_t a1)
{
  MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperRepresentingCollectionsManager, a1);
  return sub_1B8CE1584();
}

uint64_t sub_1B8CBF488()
{
  return 2;
}

uint64_t sub_1B8CBF490()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_1B8CA18F8(*v0);
  swift_release();
  return v1;
}

_QWORD *sub_1B8CBF4C4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B8CBF4E4(a1, a2, a3);
}

_QWORD *sub_1B8CBF4E4(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v4 = result;
  if (!a2)
  {
    v7 = 0;
    goto LABEL_11;
  }
  if (!a3)
  {
LABEL_10:
    v7 = a3;
    goto LABEL_11;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    if (objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_numberOfWallpaperCollections))
    {
      while (1)
      {
        v8 = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_wallpaperCollectionAtIndex_, v7);
        type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = v8;
        result = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_numberOfWallpaperCollections);
        if (v7 >= (uint64_t)result)
          break;
        *(_QWORD *)(a2 + 8 * v7) = v9;
        if (a3 - 1 == v7)
          goto LABEL_10;
        if ((id)++v7 == objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_numberOfWallpaperCollections))
          goto LABEL_11;
      }
      __break(1u);
      goto LABEL_13;
    }
LABEL_11:
    *v4 = v3;
    v4[1] = v7;
    return (_QWORD *)v7;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1B8CBF5F4()
{
  type metadata accessor for WKWallpaperRepresentingCollectionsManager();
  return sub_1B8CE150C();
}

uint64_t method lookup function for WKWallpaperRepresentingCollectionsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static WKWallpaperRepresentingCollectionsManager.default.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of WKWallpaperRepresentingCollectionsManager.__allocating_init(downloadManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of WKWallpaperRepresentingCollectionsManager.startIndex.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of WKWallpaperRepresentingCollectionsManager.endIndex.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of WKWallpaperRepresentingCollectionsManager.subscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of WKWallpaperRepresentingCollectionsManager.wallpaperCollection(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1B8CBF6AC()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8CE0F24();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B8CBF71C()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8CE0F24();
  swift_release();
  swift_release();
  return v1;
}

void sub_1B8CBF790()
{
  __asm { BR              X10 }
}

void sub_1B8CBF7D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel_wallpaperRepresenting + 24);
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel_wallpaperRepresenting + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel_wallpaperRepresenting), v2);
  v3 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 16) + 16))(v2);
  v4 = v3;
  if (v3)
    objc_msgSend(v3, sel_size);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1B8CE0F30();
  if (v4)
  {
    v5 = v4;
    sub_1B8CE12C0();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1B8CE0F30();

}

uint64_t sub_1B8CBFAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel__image;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567380);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel__imageSize;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567390);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel_wallpaperRepresenting);
  return swift_deallocClassInstance();
}

uint64_t sub_1B8CBFB3C()
{
  return type metadata accessor for WKWallpaperImageViewModel();
}

uint64_t type metadata accessor for WKWallpaperImageViewModel()
{
  uint64_t result;

  result = qword_1ED567368;
  if (!qword_1ED567368)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8CBFB80()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B8CBFC38(319, &qword_1ED567388, &qword_1ED5674A8);
  if (v0 <= 0x3F)
  {
    sub_1B8CBFC38(319, &qword_1ED567398, &qword_1ED5674B8);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1B8CBFC38(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1B8CE0F3C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1B8CBFC84()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1B8CBFC90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8CE0F0C();
  *a1 = result;
  return result;
}

unint64_t static WKWallpaperPosterUserInfoKeys.wallpaperRepresentingIdentifier.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static WKWallpaperPosterUserInfoKeys.wallpaperRepresentingFileName.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static WKWallpaperPosterUserInfoKeys.posterEnvironmentOverrides.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static WKWallpaperPosterUserInfoKeys.isLegacyWallpaperMigration.getter()
{
  return 0xD00000000000001ELL;
}

ValueMetadata *type metadata accessor for WKWallpaperPosterUserInfoKeys()
{
  return &type metadata for WKWallpaperPosterUserInfoKeys;
}

uint64_t destroy for WKBokehWallpaperPoster(uint64_t a1)
{
  sub_1B8C85880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for WKBokehWallpaperPoster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 72);
  v16 = *(_QWORD *)(a2 + 80);
  v17 = *(_QWORD *)(a2 + 88);
  v18 = *(_QWORD *)(a2 + 96);
  v19 = *(_QWORD *)(a2 + 104);
  v20 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v14, v15, v16, v17, v18, v19, v20);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v16;
  *(_QWORD *)(a1 + 88) = v17;
  *(_QWORD *)(a1 + 96) = v18;
  *(_QWORD *)(a1 + 104) = v19;
  *(_BYTE *)(a1 + 112) = v20;
  v12 = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = v12;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WKBokehWallpaperPoster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v27 = *(_QWORD *)(a2 + 64);
  v28 = *(_QWORD *)(a2 + 72);
  v29 = *(_QWORD *)(a2 + 80);
  v30 = *(_QWORD *)(a2 + 88);
  v31 = *(_QWORD *)(a2 + 96);
  v32 = *(_QWORD *)(a2 + 104);
  v33 = *(_BYTE *)(a2 + 112);
  sub_1B8C85798(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29, v30, v31, v32, v33);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(void **)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v27;
  *(_QWORD *)(a1 + 72) = v28;
  *(_QWORD *)(a1 + 80) = v29;
  *(_QWORD *)(a1 + 88) = v30;
  *(_QWORD *)(a1 + 96) = v31;
  *(_QWORD *)(a1 + 104) = v32;
  *(_BYTE *)(a1 + 112) = v33;
  sub_1B8C85880(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  v25 = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = v25;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WKBokehWallpaperPoster(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v4 = *(_BYTE *)(a2 + 112);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(void **)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_BYTE *)(a1 + 112);
  v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = v4;
  sub_1B8C85880(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, v17);
  v21 = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = v21;
  swift_release();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for WKBokehWallpaperPoster()
{
  return &type metadata for WKBokehWallpaperPoster;
}

uint64_t sub_1B8CC00DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8CC00EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  ValueMetadata *v104;
  unint64_t v105;
  unsigned __int8 v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;

  v98 = a1;
  v88 = type metadata accessor for WKBokehViewRepresentable();
  v2 = MEMORY[0x1E0C80A78](v88);
  v83 = (uint64_t *)((char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v2);
  v84 = (uint64_t)&v73 - v4;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565738);
  MEMORY[0x1E0C80A78](v85);
  v87 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for WKWallpaperPreviewImage();
  v6 = MEMORY[0x1E0C80A78](v86);
  v82 = (uint64_t *)((char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v73 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565748);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = *(_QWORD *)v1;
  v100 = *(_QWORD *)(v1 + 8);
  v101 = *(_QWORD *)(v1 + 16);
  v99 = *(_QWORD *)(v1 + 24);
  v97 = *(_QWORD *)(v1 + 32);
  v96 = *(_QWORD *)(v1 + 40);
  v93 = *(_QWORD *)(v1 + 48);
  v95 = *(void **)(v1 + 56);
  v94 = *(_QWORD *)(v1 + 64);
  v91 = *(_QWORD *)(v1 + 72);
  v14 = *(_QWORD *)(v1 + 88);
  v92 = *(_QWORD *)(v1 + 80);
  v90 = *(_QWORD *)(v1 + 96);
  v89 = *(_QWORD *)(v1 + 104);
  v15 = *(unsigned __int8 *)(v1 + 112);
  v16 = *(_QWORD *)(v1 + 120);
  v17 = *(unsigned __int8 *)(v1 + 128);
  v18 = *(_QWORD *)(v1 + 136);
  v19 = swift_retain();
  v20 = sub_1B8C92424(v19);
  swift_release();
  if ((v20 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v98, 1, 1, v10);
  v76 = v17;
  v77 = v16;
  v79 = v18;
  v73 = v9;
  v80 = v13;
  v81 = v11;
  v78 = v10;
  v108 = v102;
  v109 = v100;
  v110 = v101;
  v111 = v99;
  v112 = v97;
  v113 = v96;
  v21 = v93;
  v22 = v95;
  v114 = v93;
  v115 = v95;
  v23 = v94;
  v116 = v94;
  v117 = v91;
  v24 = v92;
  v118 = v92;
  v119 = v14;
  v25 = v90;
  v26 = v89;
  v120 = v90;
  v121 = v89;
  v122 = v15;
  v27 = v91;
  sub_1B8C85798(v102, v100, v101, v99, v97, v96, v93, v95, v94, v91, v92, v14, v90, v89, v15);
  sub_1B8CDF63C((uint64_t)&v103);
  v74 = v15;
  v72 = v15;
  v75 = v14;
  v68 = v24;
  v69 = v14;
  v66 = v23;
  v28 = v100;
  v29 = v99;
  v30 = v97;
  v31 = v96;
  sub_1B8C85880(v102, v100, v101, v99, v97, v96, v21, v22, v66, v27, v68, v69, v25, v26, v72);
  LOBYTE(v21) = v103;

  swift_release();
  if ((v21 & 1) != 0)
    goto LABEL_7;
  v32 = v28;
  v33 = v30;
  v34 = swift_retain();
  v35 = sub_1B8CDFAB4(v34, v76);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v103 = v35;
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  v36 = *(_BYTE *)(v35 + 144);
  swift_release();
  v37 = v32;
  v38 = v101;
  if ((v36 & 1) != 0)
    goto LABEL_7;
  v39 = v29;
  v40 = v74;
  v70 = v25;
  v71 = v26;
  v41 = v75;
  v42 = v92;
  v67 = v27;
  v43 = v94;
  v44 = v93;
  v45 = v95;
  sub_1B8C85798(v102, v37, v101, v39, v33, v31, v93, v95, v94, v67, v92, v75, v70, v71, v74);
  sub_1B8CDF63C((uint64_t)&v103);
  sub_1B8C85880(v102, v100, v38, v99, v33, v31, v44, v45, v43, v91, v42, v41, v90, v89, v40);
  v46 = v106;

  swift_release();
  if (v46 != 1)
  {
LABEL_7:
    v104 = &type metadata for WKWallpaperBundle;
    v105 = sub_1B8C8A2F0();
    *(_QWORD *)&v103 = v79;
    KeyPath = swift_getKeyPath();
    v57 = v83;
    *v83 = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    swift_storeEnumTagMultiPayload();
    v58 = v88;
    v59 = (char *)v57 + *(int *)(v88 + 20);
    type metadata accessor for WKWallpaperPosterLayerViewModel();
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    swift_retain();
    *(_QWORD *)v59 = sub_1B8CE0F9C();
    v59[8] = v60 & 1;
    sub_1B8C8A344(&v103, (uint64_t)v57 + *(int *)(v58 + 24));
    v51 = type metadata accessor for WKBokehViewRepresentable;
    v61 = (uint64_t)v57;
    v62 = v84;
    sub_1B8C8A35C(v61, v84, (uint64_t (*)(_QWORD))type metadata accessor for WKBokehViewRepresentable);
    sub_1B8C8A3A0(v62, v87, (uint64_t (*)(_QWORD))type metadata accessor for WKBokehViewRepresentable);
    swift_storeEnumTagMultiPayload();
    sub_1B8C83740(&qword_1ED565678, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPreviewImage, (uint64_t)&protocol conformance descriptor for WKWallpaperPreviewImage);
    sub_1B8C83740(&qword_1ED565688, (uint64_t (*)(uint64_t))type metadata accessor for WKBokehViewRepresentable, (uint64_t)&unk_1B8CE9AE0);
    v53 = (uint64_t)v80;
    sub_1B8CE1158();
    v54 = v62;
  }
  else
  {
    v104 = &type metadata for WKWallpaperBundle;
    v105 = sub_1B8C8A2F0();
    *(_QWORD *)&v103 = v79;
    v47 = swift_getKeyPath();
    v48 = (uint64_t)v82;
    *v82 = v47;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    swift_storeEnumTagMultiPayload();
    v49 = v86;
    v50 = v48 + *(int *)(v86 + 20);
    *(_QWORD *)v50 = swift_getKeyPath();
    *(_QWORD *)(v50 + 8) = 0;
    *(_BYTE *)(v50 + 16) = 0;
    sub_1B8C8A344(&v103, v48 + *(int *)(v49 + 24));
    *(_BYTE *)(v48 + *(int *)(v49 + 28)) = 1;
    v51 = type metadata accessor for WKWallpaperPreviewImage;
    v52 = (uint64_t)v73;
    sub_1B8C8A35C(v48, (uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for WKWallpaperPreviewImage);
    sub_1B8C8A3A0(v52, v87, (uint64_t (*)(_QWORD))type metadata accessor for WKWallpaperPreviewImage);
    swift_storeEnumTagMultiPayload();
    sub_1B8C83740(&qword_1ED565678, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPreviewImage, (uint64_t)&protocol conformance descriptor for WKWallpaperPreviewImage);
    sub_1B8C83740(&qword_1ED565688, (uint64_t (*)(uint64_t))type metadata accessor for WKBokehViewRepresentable, (uint64_t)&unk_1B8CE9AE0);
    swift_retain();
    v53 = (uint64_t)v80;
    sub_1B8CE1158();
    v54 = v52;
  }
  sub_1B8C92BF4(v54, (uint64_t (*)(_QWORD))v51);
  v63 = v78;
  v64 = v81;
  v65 = v98;
  sub_1B8CC0A14(v53, v98);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v63);
}

uint64_t sub_1B8CC0A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8CC0A70()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED565758;
  if (!qword_1ED565758)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565750);
    v2 = sub_1B8CC0AD4();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED565758);
  }
  return result;
}

unint64_t sub_1B8CC0AD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565740;
  if (!qword_1ED565740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565748);
    v2[0] = sub_1B8C83740(&qword_1ED565678, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPreviewImage, (uint64_t)&protocol conformance descriptor for WKWallpaperPreviewImage);
    v2[1] = sub_1B8C83740(&qword_1ED565688, (uint64_t (*)(uint64_t))type metadata accessor for WKBokehViewRepresentable, (uint64_t)&unk_1B8CE9AE0);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565740);
  }
  return result;
}

uint64_t sub_1B8CC0B70()
{
  uint64_t v0;

  if (qword_1ED565318 != -1)
    swift_once();
  v0 = sub_1B8CE0EDC();
  return __swift_project_value_buffer(v0, (uint64_t)qword_1ED56B978);
}

uint64_t sub_1B8CC0BB8(uint64_t a1)
{
  return sub_1B8CC0C40(a1, qword_1ED56B948);
}

uint64_t sub_1B8CC0BD8(uint64_t a1)
{
  return sub_1B8CC0C40(a1, qword_1EF1D78D0);
}

uint64_t sub_1B8CC0BFC(uint64_t a1)
{
  return sub_1B8CC0C40(a1, qword_1ED56B978);
}

uint64_t sub_1B8CC0C20(uint64_t a1)
{
  return sub_1B8CC0C40(a1, qword_1ED56B890);
}

uint64_t sub_1B8CC0C40(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1B8CE0EDC();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  swift_bridgeObjectRetain();
  return sub_1B8CE0ED0();
}

uint64_t sub_1B8CC0CC4(uint64_t a1)
{
  return sub_1B8CC0D28(a1, qword_1ED56B930);
}

uint64_t sub_1B8CC0CEC(uint64_t a1)
{
  return sub_1B8CC0D28(a1, qword_1ED56B960);
}

uint64_t sub_1B8CC0D0C(uint64_t a1)
{
  return sub_1B8CC0D28(a1, qword_1ED56B878);
}

uint64_t sub_1B8CC0D28(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1B8CE0EDC();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1B8CE0ED0();
}

uint64_t getEnumTagSinglePayload for WKAdaptiveStripeParallelogram(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WKAdaptiveStripeParallelogram(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WKAdaptiveStripeParallelogram()
{
  return &type metadata for WKAdaptiveStripeParallelogram;
}

uint64_t sub_1B8CC0E08()
{
  return sub_1B8C86A88(&qword_1EF1D4428, &qword_1EF1D4430, MEMORY[0x1E0CD8668]);
}

double sub_1B8CC0E34@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  sub_1B8CE1218();
  sub_1B8CE1200();
  sub_1B8CE120C();
  sub_1B8CE120C();
  sub_1B8CE120C();
  sub_1B8CE120C();
  sub_1B8CE11F4();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

__n128 sub_1B8CC0EF8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

__n128 sub_1B8CC0F0C(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(v1 + 32) = result;
  *(_OWORD *)(v1 + 48) = v4;
  return result;
}

void (*sub_1B8CC0F20(_QWORD *a1))(void **a1)
{
  _OWORD *v1;
  _QWORD *v3;
  __int128 v4;
  __int128 v5;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = v1[1];
  *(_OWORD *)v3 = *v1;
  *((_OWORD *)v3 + 1) = v4;
  v5 = v1[3];
  *((_OWORD *)v3 + 2) = v1[2];
  *((_OWORD *)v3 + 3) = v5;
  return sub_1B8CC0F68;
}

void sub_1B8CC0F68(void **a1)
{
  _QWORD *v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v1 = *a1;
  v2 = (_OWORD *)v1[8];
  v3 = *((_OWORD *)v1 + 1);
  v4 = *((_OWORD *)v1 + 2);
  v5 = *((_OWORD *)v1 + 3);
  *v2 = *(_OWORD *)v1;
  v2[1] = v3;
  v2[2] = v4;
  v2[3] = v5;
  free(v1);
}

uint64_t sub_1B8CC0F84()
{
  sub_1B8CC10D4();
  return sub_1B8CE1344();
}

uint64_t sub_1B8CC0FD4()
{
  sub_1B8CC10D4();
  return sub_1B8CE1314();
}

uint64_t sub_1B8CC1024()
{
  sub_1B8CC10D4();
  return sub_1B8CE132C();
}

uint64_t sub_1B8CC105C()
{
  return sub_1B8C86A88(&qword_1EF1D4438, &qword_1EF1D4440, MEMORY[0x1E0CD9220]);
}

unint64_t sub_1B8CC108C()
{
  unint64_t result;

  result = qword_1EF1D4448;
  if (!qword_1EF1D4448)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE84D0, &type metadata for WKAdaptiveStripeParallelogram);
    atomic_store(result, (unint64_t *)&qword_1EF1D4448);
  }
  return result;
}

unint64_t sub_1B8CC10D4()
{
  unint64_t result;

  result = qword_1EF1D4450;
  if (!qword_1EF1D4450)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE8520, &type metadata for WKAdaptiveStripeParallelogram);
    atomic_store(result, (unint64_t *)&qword_1EF1D4450);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WKAnimationPackageLayerLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8CC1164 + 4 * byte_1B8CE8575[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8CC1198 + 4 * byte_1B8CE8570[v4]))();
}

uint64_t sub_1B8CC1198(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CC11A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8CC11A8);
  return result;
}

uint64_t sub_1B8CC11B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8CC11BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8CC11C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CC11C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WKAnimationPackageLayerLevel()
{
  return &type metadata for WKAnimationPackageLayerLevel;
}

uint64_t sub_1B8CC11E4()
{
  uint64_t v0;

  v0 = sub_1B8CE14C4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B8CC1240()
{
  return sub_1B8CC11E4();
}

unint64_t sub_1B8CC124C()
{
  unint64_t result;

  result = qword_1EF1D4458;
  if (!qword_1EF1D4458)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE8638, &type metadata for WKAnimationPackageLayerLevel);
    atomic_store(result, (unint64_t *)&qword_1EF1D4458);
  }
  return result;
}

unint64_t sub_1B8CC1294()
{
  unint64_t result;

  result = qword_1EF1D4460;
  if (!qword_1EF1D4460)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE85B0, &type metadata for WKAnimationPackageLayerLevel);
    atomic_store(result, (unint64_t *)&qword_1EF1D4460);
  }
  return result;
}

id sub_1B8CC12D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  id v12;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  v4 = *(_BYTE *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  v6 = *(_BYTE *)(v3 + 48);
  v7 = *(_QWORD *)(v3 + 56);
  v8 = *(_BYTE *)(v3 + 64);
  v9 = *(_QWORD *)(v3 + 72);
  v12 = *(id *)(v3 + 80);
  *(_BYTE *)a2 = *(_BYTE *)(v3 + 24);
  *(_BYTE *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = v9;
  *(_QWORD *)(a2 + 56) = v12;
  v10 = *(_OWORD *)(v3 + 104);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v3 + 88);
  *(_OWORD *)(a2 + 80) = v10;
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v3 + 120);
  swift_retain();
  return v12;
}

uint64_t sub_1B8CC13C0(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  _OWORD v5[7];

  v1 = a1[5];
  v5[4] = a1[4];
  v5[5] = v1;
  v5[6] = a1[6];
  v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v3 = a1[3];
  v5[2] = a1[2];
  v5[3] = v3;
  swift_getKeyPath();
  sub_1B8CB6A68((uint64_t)v5);
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E70();
  sub_1B8C87884((uint64_t)v5);
  return swift_release();
}

uint64_t sub_1B8CC1494@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 144);
  return result;
}

uint64_t sub_1B8CC1520()
{
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E70();
  return swift_release();
}

void sub_1B8CC15C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;
  swift_retain();
  if (v2)
  {
    swift_release();
LABEL_3:
    swift_release();
    return;
  }
  v3 = *(_QWORD *)(v1 + 32);
  if (!v3)
    goto LABEL_3;
  v4 = *(void **)(v1 + 16);
  swift_retain();
  v5 = objc_msgSend(v4, sel_backgroundView);
  v6 = objc_msgSend(v4, sel_foregroundView);
  v7 = objc_msgSend(v4, sel_floatingView);
  sub_1B8C8AF44(v3, v5, v6, v7);
  swift_release();
  swift_release();

}

void sub_1B8CC16C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = sub_1B8CE0E1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565140);
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v10 = MEMORY[0x1E0C80A78](v9);
  v49 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v45 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v45 - v15;
  v17 = *(_QWORD *)(v2 + 40);
  v47 = v2;
  if (v17)
  {
    v46 = v14;
    v18 = v5;
    v19 = a2;
    v20 = a1;
    v21 = *(_QWORD *)(v2 + 48);
    ObjectType = swift_getObjectType();
    v23 = *(_QWORD *)(v21 + 8);
    v24 = v6;
    v25 = *(void (**)(uint64_t, uint64_t))(v23 + 40);
    swift_unknownObjectRetain();
    v26 = v23;
    a1 = v20;
    a2 = v19;
    v5 = v18;
    v14 = v46;
    v25(ObjectType, v26);
    v6 = v24;
    swift_unknownObjectRelease();
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v27(v16, 0, 1, v5);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v27((char *)&v45 - v15, 1, 1, v5);
  }
  v28 = (uint64_t)v49;
  if (a1)
  {
    v29 = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 40))(v29);
    v30 = 0;
  }
  else
  {
    v30 = 1;
  }
  v31 = (uint64_t)v50;
  v27(v14, v30, 1, v5);
  v32 = v31 + *(int *)(v48 + 48);
  sub_1B8C84538((uint64_t)v16, v31);
  sub_1B8C84538((uint64_t)v14, v32);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v33(v31, 1, v5) == 1)
  {
    sub_1B8C88430((uint64_t)v14, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430((uint64_t)v16, (uint64_t *)&unk_1ED565130);
    if (v33(v32, 1, v5) == 1)
    {
      sub_1B8C88430(v31, (uint64_t *)&unk_1ED565130);
      return;
    }
  }
  else
  {
    sub_1B8C84538(v31, v28);
    if (v33(v32, 1, v5) != 1)
    {
      v42 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v45, v32, v5);
      sub_1B8C83740((unint64_t *)&unk_1ED565120, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v43 = sub_1B8CE1488();
      v44 = *(void (**)(char *, uint64_t))(v6 + 8);
      v44(v42, v5);
      sub_1B8C88430((uint64_t)v14, (uint64_t *)&unk_1ED565130);
      sub_1B8C88430((uint64_t)v16, (uint64_t *)&unk_1ED565130);
      v44((char *)v28, v5);
      sub_1B8C88430(v31, (uint64_t *)&unk_1ED565130);
      if ((v43 & 1) != 0)
        return;
      goto LABEL_13;
    }
    sub_1B8C88430((uint64_t)v14, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430((uint64_t)v16, (uint64_t *)&unk_1ED565130);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v28, v5);
  }
  sub_1B8C88430(v31, &qword_1ED565140);
LABEL_13:
  if (qword_1ED565310 != -1)
    swift_once();
  v34 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED56B960);
  v35 = v47;
  swift_retain_n();
  v36 = sub_1B8CE0EC4();
  v37 = sub_1B8CE15CC();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v52 = v39;
    *(_DWORD *)v38 = 136446466;
    v40 = sub_1B8CE1944();
    v51 = sub_1B8CC4700(v40, v41, &v52);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    v51 = sub_1B8CC4700(0xD00000000000001ALL, 0x80000001B8CEDEA0, &v52);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v36, v37, "(%{public}s.%{public}s): sourceAssetDirectory differ, loading contents from environment…", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v39, -1, -1);
    MEMORY[0x1BCCB9588](v38, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  sub_1B8CC1C38();
  if (*(_QWORD *)(v35 + 32))
  {
    swift_retain();
    sub_1B8CB5434();
    swift_release();
  }
}

void sub_1B8CC1C38()
{
  char **v0;
  char **v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char **v10;
  char *v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  char **v44;
  uint64_t v45[2];

  v1 = v0;
  if (qword_1ED565310 != -1)
LABEL_24:
    swift_once();
  v2 = sub_1B8CE0EDC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED56B960);
  swift_retain_n();
  v4 = sub_1B8CE0EC4();
  v5 = sub_1B8CE15CC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v45[0] = v7;
    *(_DWORD *)v6 = 136446466;
    v8 = sub_1B8CE1944();
    sub_1B8CC4700(v8, v9, v45);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    sub_1B8CC4700(0xD00000000000001DLL, 0x80000001B8CEE130, v45);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v4, v5, "Start (%{public}s.%{public}s)…", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v7, -1, -1);
    MEMORY[0x1BCCB9588](v6, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  if (!v1[5])
    goto LABEL_26;
  v10 = v1;
  v11 = v1[6];
  ObjectType = swift_getObjectType();
  v13 = *((_QWORD *)v11 + 1);
  swift_unknownObjectRetain();
  sub_1B8C969C0(ObjectType, v13, v45);
  swift_unknownObjectRelease();
  v14 = (uint64_t)v10[4];
  if (!v14)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v15 = v45[0];
  v16 = v45[1];
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  v45[0] = v14;
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  swift_retain();
  swift_retain();
  sub_1B8CE0E70();
  swift_release();
  swift_release();
  swift_release();
  v44 = v10;
  v18 = (uint64_t)v10[4];
  if (!v18)
  {
LABEL_28:
    __break(1u);
    return;
  }
  swift_getKeyPath();
  v45[0] = v18;
  swift_retain();
  sub_1B8CE0E7C();
  swift_release();
  v45[0] = v18;
  swift_getKeyPath();
  sub_1B8CE0E94();
  swift_release();
  v19 = *(_QWORD *)(v18 + 152);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  *(_QWORD *)(v18 + 152) = v21;
  v45[0] = v18;
  swift_getKeyPath();
  sub_1B8CE0E88();
  swift_release();
  swift_release();
  v22 = swift_retain();
  sub_1B8CC7358(v22);
  swift_release();
  v23 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  WKSetApplicationSpecificInformation(v23);

  v10[7] = (char *)v16;
  sub_1B8CC25CC();
  v24 = v10[2];
  v25 = objc_msgSend(v24, sel_backgroundView, v3);
  objc_msgSend(v25, sel_setOverrideUserInterfaceStyle_, v16);

  v26 = objc_msgSend(v24, sel_foregroundView);
  objc_msgSend(v26, sel_setOverrideUserInterfaceStyle_, v16);

  v27 = objc_msgSend(v24, sel_floatingView);
  objc_msgSend(v27, sel_setOverrideUserInterfaceStyle_, v16);

  v28 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  type metadata accessor for WKWallpaperRepresentingCollectionsManager();
  inited = swift_initStackObject();
  type metadata accessor for WKWallpaperRepresentingCollectionsManager.ImplementationWrapper();
  v30 = swift_initStackObject();
  *(_QWORD *)(v30 + 16) = v28;
  *(_QWORD *)(inited + 16) = v30;
  swift_retain();
  if (objc_msgSend(v28, sel_numberOfWallpaperCollections))
  {
    v31 = 0;
    v1 = &selRef_lowercaseString;
    while (1)
    {
      v32 = *(void **)(v30 + 16);
      v33 = objc_msgSend(v32, sel_wallpaperCollectionAtIndex_, v31);
      if (v31 >= (uint64_t)objc_msgSend(v32, sel_numberOfWallpaperCollections))
      {
        __break(1u);
        goto LABEL_24;
      }
      v34 = *(void **)(v15 + 16);
      swift_retain();
      v35 = objc_msgSend(v34, sel_identifierString);
      sub_1B8CE14B8();
      swift_release();

      v36 = v33;
      v37 = (void *)sub_1B8CE1494();
      v38 = objc_msgSend(v36, sel_containsWallpaperRepresentingWithIdentifier_, v37);
      swift_bridgeObjectRelease();

      if ((v38 & 1) != 0)
        break;

      if ((id)++v31 == objc_msgSend(v28, sel_numberOfWallpaperCollections))
        goto LABEL_14;
    }
    swift_release_n();
    if (!objc_msgSend(v36, sel_disableRotation))
    {

      v39 = (uint64_t)v44;
      goto LABEL_15;
    }
    v41 = sub_1B8CE0EC4();
    v42 = sub_1B8CE15CC();
    v39 = (uint64_t)v44;
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1B8C64000, v41, v42, "Renderer will NOT support rotation", v43, 2u);
      MEMORY[0x1BCCB9588](v43, -1, -1);

      swift_bridgeObjectRelease();
      swift_release();

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_release();
    }
    v44[3] = 0;
  }
  else
  {
LABEL_14:
    swift_release_n();
    v39 = (uint64_t)v44;
LABEL_15:
    type metadata accessor for WKDynamicRotationManager();
    swift_allocObject();
    v40 = sub_1B8CAF5F4();
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)(v39 + 24) = v40;
  }
  swift_release();
  sub_1B8CC4254(v39, 0xD00000000000001DLL, 0x80000001B8CEE130);
}

uint64_t WKWallpaperPosterRenderController.__allocating_init(renderer:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  WKWallpaperPosterRenderController.init(renderer:)(a1);
  return v2;
}

uint64_t WKWallpaperPosterRenderController.init(renderer:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_BYTE *)(v2 + 64) = 3;
  type metadata accessor for WKWallpaperPosterRendererTokenManager();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v2 + 72) = v4;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 56) = 0;
  type metadata accessor for WKDynamicRotationManager();
  swift_allocObject();
  *(_QWORD *)(v2 + 24) = sub_1B8CAF5F4();
  swift_release();
  return v2;
}

void sub_1B8CC25CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  __CFString **v7;
  __CFString *v8;
  uint64_t v9;
  __CFString *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  __CFString *v15;
  uint64_t v16;
  char v17;
  id v18;

  v1 = v0;
  v2 = v0[7];
  if (!v2)
  {
    if (!v0[5])
      goto LABEL_19;
    v3 = v0[6];
    ObjectType = swift_getObjectType();
    v5 = *(_QWORD *)(v3 + 8);
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 16);
    swift_unknownObjectRetain();
    v2 = v6(ObjectType, v5);
    swift_unknownObjectRelease();
  }
  v7 = WKWallpaperAppearanceDark;
  if (v2 != 2)
    v7 = WKWallpaperAppearanceDefault;
  v8 = *v7;
  v9 = v0[4];
  if (v9)
  {
    v10 = v8;
    swift_getKeyPath();
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    swift_retain();
    sub_1B8CE0E7C();
    swift_release();
    v11 = *(_QWORD *)(v9 + 16);
    swift_retain();
    swift_release();
    if (v11)
    {
      v12 = objc_msgSend(*(id *)(v11 + 16), sel_preferredProminentColors);
      if (v12)
      {
        v13 = v12;
        type metadata accessor for WKWallpaperAppearance(0);
        sub_1B8C84230(0, (unint64_t *)&qword_1EF1D3AE0);
        sub_1B8C83740(&qword_1EF1D3DA0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperAppearance, (uint64_t)&unk_1B8CE4338);
        v14 = sub_1B8CE144C();
        swift_release();

        if (*(_QWORD *)(v14 + 16))
        {
          v15 = v10;
          v16 = sub_1B8C9C7D4();
          if ((v17 & 1) != 0)
          {
            v18 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v16);

            swift_bridgeObjectRelease();
LABEL_16:
            objc_msgSend((id)v1[2], sel_wk_setPreferredProminentColor_, v18);

            return;
          }

        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      v18 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

uint64_t sub_1B8CC2800(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _BYTE *v9;
  int v10;
  _BOOL4 v11;
  int v12;
  uint64_t result;
  int v14;
  int v15;
  uint64_t v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  int v24;
  BOOL v25;
  uint64_t v27;
  id v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint8_t *v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v3 = (void *)a1[7];
  if (!v3)
  {
    result = (*(_BYTE *)(a2 + 40) & 1) == 0;
    *(_BYTE *)(v2 + 64) = 3;
    return result;
  }
  v5 = *a1;
  v4 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v57 = a1[4];
  v58 = a1[5];
  v59 = a1[6];
  v8 = *(double *)(a2 + 16);
  if (v8 == *(double *)&v7)
  {
    v10 = *(unsigned __int8 *)(v2 + 64);
    v9 = (_BYTE *)(v2 + 64);
    v11 = v10 == 3;
    v12 = 3;
  }
  else
  {
    v12 = v8 <= *(double *)&v7;
    v15 = *(unsigned __int8 *)(v2 + 64);
    v9 = (_BYTE *)(v2 + 64);
    v14 = v15;
    v11 = v15 != 3 && v14 == v12;
  }
  if (a1[1] != 1 && *(_BYTE *)(a2 + 8) == 1)
  {
    v54 = v9;
    v51 = (void *)a1[7];
    v46 = v12;
    v48 = *a1;
    v17 = qword_1ED565310;
    v18 = v3;
    swift_retain();
    if (v17 != -1)
      swift_once();
    v19 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED56B960);
    v20 = sub_1B8CE0EC4();
    v21 = sub_1B8CE15CC();
    if (!os_log_type_enabled(v20, v21))
    {
      sub_1B8CC54C0(v48, v4, v7, v6, v57, v58, v59, v51);

      goto LABEL_36;
    }
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1B8C64000, v20, v21, "Screen is off, pausing animation", v22, 2u);
    MEMORY[0x1BCCB9588](v22, -1, -1);

    v23 = v48;
LABEL_17:
    sub_1B8CC54C0(v23, v4, v7, v6, v57, v58, v59, v51);
LABEL_36:
    result = 0;
    *v54 = v46;
    return result;
  }
  v24 = v8 == *(double *)&v7 || v11;
  if (v12)
    v25 = 0;
  else
    v25 = v24 == 0;
  if (v25 && a1[3] == 0)
  {
    v56 = v9;
    v53 = (void *)a1[7];
    v50 = *a1;
    v33 = qword_1ED565310;
    v34 = v3;
    swift_retain();
    if (v33 != -1)
      swift_once();
    v35 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED56B960);
    v36 = sub_1B8CE0EC4();
    v37 = sub_1B8CE15CC();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_1B8C64000, v36, v37, "Screen was turned on and settled on lock screen, starting animation", v38, 2u);
      MEMORY[0x1BCCB9588](v38, -1, -1);

      sub_1B8CC54C0(v50, v4, v7, v6, v57, v58, v59, v53);
    }
    else
    {
      sub_1B8CC54C0(v50, v4, v7, v6, v57, v58, v59, v53);

    }
    *v56 = 0;
    return 1;
  }
  if (!a1[3])
  {
    if (*(_BYTE *)(a2 + 24))
    {
      v51 = (void *)a1[7];
      v54 = v9;
      v46 = v12;
      v39 = qword_1ED565310;
      v40 = v3;
      swift_retain();
      if (v39 != -1)
        swift_once();
      v41 = sub_1B8CE0EDC();
      __swift_project_value_buffer(v41, (uint64_t)qword_1ED56B960);
      v42 = sub_1B8CE0EC4();
      v43 = sub_1B8CE15CC();
      if (!os_log_type_enabled(v42, v43))
      {
        sub_1B8CC54C0(v5, v4, v7, v6, v57, v58, v59, v51);

        goto LABEL_36;
      }
      v44 = v5;
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_1B8C64000, v42, v43, "Starting to move from lock screen to home screen, pausing animation", v45, 2u);
      MEMORY[0x1BCCB9588](v45, -1, -1);

      v23 = v44;
      goto LABEL_17;
    }
    goto LABEL_48;
  }
  if (*(_BYTE *)(a2 + 24) || *(_BYTE *)(a2 + 8))
  {
LABEL_48:
    *v9 = v12;
    return 2;
  }
  v55 = v9;
  v52 = (void *)a1[7];
  v47 = v12;
  v27 = qword_1ED565310;
  v28 = v3;
  swift_retain();
  if (v27 != -1)
    swift_once();
  v29 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ED56B960);
  v30 = sub_1B8CE0EC4();
  v31 = sub_1B8CE15CC();
  if (os_log_type_enabled(v30, v31))
  {
    v49 = v5;
    v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v32 = 0;
    _os_log_impl(&dword_1B8C64000, v30, v31, "Settling on lock screen from home screen and screen is on, restarting animation", v32, 2u);
    MEMORY[0x1BCCB9588](v32, -1, -1);

    sub_1B8CC54C0(v49, v4, v7, v6, v57, v58, v59, v52);
  }
  else
  {
    sub_1B8CC54C0(v5, v4, v7, v6, v57, v58, v59, v52);

  }
  *v55 = v47;
  return 1;
}

void sub_1B8CC2E48(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t KeyPath;
  int v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[6];

  v3 = sub_1B8CE13C8();
  v45 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1B8CE13E0();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B8CE13BC();
  v39 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = sub_1B8CE1410();
  v38 = *(_QWORD *)(v40 - 8);
  v10 = MEMORY[0x1E0C80A78](v40);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v36 - v13;
  sub_1B8CD5E6C(0);
  v46 = v1;
  sub_1B8CD61C0(0, *(_QWORD *)(v1 + 16));
  if ((a1 & 1) != 0)
  {
    if (qword_1ED565310 != -1)
      swift_once();
    v15 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED56B960);
    v16 = sub_1B8CE0EC4();
    v17 = sub_1B8CE15CC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1B8C64000, v16, v17, "Enabling animations based on playbackKind.", v18, 2u);
      MEMORY[0x1BCCB9588](v18, -1, -1);
    }
    v36 = v7;
    v37 = v3;

    v19 = *(_QWORD *)(v46 + 32);
    if (!v19)
    {
      __break(1u);
      return;
    }
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    *(&v36 - 2) = v19;
    *((_BYTE *)&v36 - 8) = 1;
    aBlock[0] = v19;
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    swift_retain();
    sub_1B8CE0E70();
    swift_release();
    swift_release();
    v7 = v36;
    v3 = v37;
  }
  v21 = a1 & 1;
  if (qword_1ED565310 != -1)
    swift_once();
  v22 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED56B960);
  v23 = sub_1B8CE0EC4();
  v24 = sub_1B8CE15CC();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v25 = 134349056;
    v26 = (4 * v21);
    aBlock[0] = v26;
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v23, v24, "Disabling animations based on playbackKind (waiting duration %{public}ld).", v25, 0xCu);
    MEMORY[0x1BCCB9588](v25, -1, -1);

  }
  else
  {

    v26 = (4 * v21);
  }
  v27 = v39;
  sub_1B8C84230(0, (unint64_t *)&qword_1ED565560);
  v28 = (void *)sub_1B8CE15F0();
  sub_1B8CE1404();
  *v9 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104))(v9, *MEMORY[0x1E0DEF4A0], v7);
  MEMORY[0x1BCCB8784](v12, v9);
  (*(void (**)(_QWORD *, uint64_t))(v27 + 8))(v9, v7);
  v29 = *(void (**)(char *, uint64_t))(v38 + 8);
  v30 = v40;
  v29(v12, v40);
  v31 = swift_allocObject();
  swift_weakInit();
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v31;
  *(_BYTE *)(v32 + 24) = v21;
  aBlock[4] = sub_1B8CC5488;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B8CAF418;
  aBlock[3] = &block_descriptor_2;
  v33 = _Block_copy(aBlock);
  swift_release();
  v34 = v41;
  sub_1B8CE13D4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1B8C83740(&qword_1ED565520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565530);
  sub_1B8CAFA48();
  v35 = v44;
  sub_1B8CE16B0();
  MEMORY[0x1BCCB8928](v14, v34, v35, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v3);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v43);
  v29(v14, v30);
}

void sub_1B8CC33F8()
{
  uint64_t Strong;
  uint64_t KeyPath;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (*(_QWORD *)(Strong + 32))
    {
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
      swift_retain();
      sub_1B8CE0E70();
      swift_release();
      swift_release();
      if (qword_1ED565310 != -1)
        swift_once();
      v2 = sub_1B8CE0EDC();
      __swift_project_value_buffer(v2, (uint64_t)qword_1ED56B960);
      v3 = sub_1B8CE0EC4();
      v4 = sub_1B8CE15CC();
      if (os_log_type_enabled(v3, v4))
      {
        v5 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v5 = 134349056;
        sub_1B8CE1674();
        _os_log_impl(&dword_1B8C64000, v3, v4, "Disabled animations based on playbackKind after waiting duration %{public}ld.", v5, 0xCu);
        MEMORY[0x1BCCB9588](v5, -1, -1);
        swift_release();

      }
      else
      {

        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t WKWallpaperPosterRenderController.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t WKWallpaperPosterRenderController.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

void WKWallpaperPosterRenderController.renderer(_:didInitialize:with:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  sub_1B8CC4D74(a2, a3, a4);
}

void WKWallpaperPosterRenderController.renderer(_:didUpdate:with:using:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, void *a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  id v45;
  _QWORD *v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  void *v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  _QWORD *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD v82[7];
  uint64_t v83[9];
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;

  v6 = v5;
  v66 = a1;
  v11 = sub_1B8CE11C4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v67 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a4[5];
  v91 = a4[4];
  v92 = v14;
  v93 = a4[6];
  v15 = a4[1];
  v87 = *a4;
  v88 = v15;
  v16 = a4[3];
  v89 = a4[2];
  v90 = v16;
  if (qword_1ED565310 != -1)
    swift_once();
  v17 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED56B960);
  swift_retain_n();
  v18 = sub_1B8CE0EC4();
  v19 = sub_1B8CE15CC();
  v20 = os_log_type_enabled(v18, v19);
  v80 = a3;
  v81 = a2;
  v63 = a5;
  v68 = v12;
  v69 = v11;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v83[0] = v22;
    *(_DWORD *)v21 = 136446466;
    v23 = sub_1B8CE1944();
    *(_QWORD *)&v82[0] = sub_1B8CC4700(v23, v24, v83);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    *(_QWORD *)&v82[0] = sub_1B8CC4700(0xD000000000000021, 0x80000001B8CEDE20, v83);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v18, v19, "Start (%{public}s.%{public}s)…", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v22, -1, -1);
    MEMORY[0x1BCCB9588](v21, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  if (!v6[5])
  {
    __break(1u);
    goto LABEL_25;
  }
  v25 = v6[6];
  ObjectType = swift_getObjectType();
  v27 = *(_QWORD *)(v25 + 8);
  v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 16);
  swift_unknownObjectRetain();
  v29 = v28(ObjectType, v27);
  swift_unknownObjectRelease();
  v30 = v6[4];
  if (!v30)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v64 = v29;
  swift_getKeyPath();
  v83[0] = v30;
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  swift_retain();
  sub_1B8CE0E7C();
  swift_release();
  v78 = *(unsigned __int8 *)(v30 + 32);
  v31 = *(double *)(v30 + 40);
  v70 = *(unsigned __int8 *)(v30 + 48);
  v32 = *(double *)(v30 + 56);
  v65 = *(unsigned __int8 *)(v30 + 64);
  v34 = *(void **)(v30 + 80);
  v33 = *(_QWORD *)(v30 + 88);
  v79 = *(_QWORD *)(v30 + 96);
  v75 = v33;
  swift_retain();
  v76 = v34;
  swift_release();
  v35 = v6[4];
  v77 = v6;
  if (!v35)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  swift_getKeyPath();
  v83[0] = v35;
  swift_retain();
  sub_1B8CE0E7C();
  swift_release();
  v74 = *(unsigned __int8 *)(v35 + 24);
  v73 = *(unsigned __int8 *)(v35 + 32);
  v36 = *(_QWORD *)(v35 + 40);
  v37 = *(unsigned __int8 *)(v35 + 48);
  v38 = *(_QWORD *)(v35 + 56);
  v39 = *(unsigned __int8 *)(v35 + 64);
  v40 = *(_QWORD *)(v35 + 72);
  v41 = *(void **)(v35 + 80);
  v42 = *(_QWORD *)(v35 + 88);
  v43 = *(_OWORD *)(v35 + 96);
  v71 = *(_OWORD *)(v35 + 112);
  v72 = v43;
  v44 = *(_QWORD *)(v35 + 128);
  swift_retain();
  v45 = v41;
  swift_release();
  v83[0] = v74;
  v83[1] = v73;
  v83[2] = v36;
  v83[3] = v37;
  v83[4] = v38;
  v83[5] = v39;
  v83[6] = v40;
  v83[7] = (uint64_t)v45;
  v84 = v72;
  v85 = v71;
  v83[8] = v42;
  v86 = v44;
  v82[4] = v91;
  v82[5] = v92;
  v82[6] = v93;
  v82[0] = v87;
  v82[1] = v88;
  v82[2] = v89;
  v82[3] = v90;
  v46 = v77;
  v47 = sub_1B8CC2800(v83, (uint64_t)v82);
  swift_release();

  v83[0] = 0;
  if (v78 != BYTE8(v87)
    || v31 != *(double *)&v88
    || v70 != BYTE8(v88)
    || v32 != *(double *)&v89
    || v65 != (BYTE8(v89) & 1))
  {
    sub_1B8CD61C0(1, v66);
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    v49 = v67;
    sub_1B8CE11B8();
    sub_1B8CE0FCC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v49, v69);
    v48 = swift_release();
  }
  v50 = v80;
  v51 = v81;
  if (v79 != *((_QWORD *)&v91 + 1))
  {
    if (v46[3])
    {
      v52 = swift_getObjectType();
      v53 = *(_QWORD *)(v50 + 8);
      v54 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8);
      swift_retain();
      v55 = v54(v52, v53);
      sub_1B8CADA48(v55, v63);
      v48 = swift_release();
    }
  }
  MEMORY[0x1E0C80A78](v48);
  *(&v63 - 4) = v46;
  *(&v63 - 3) = &v87;
  *((_BYTE *)&v63 - 16) = v47;
  swift_retain();
  sub_1B8CE102C();
  swift_release();
  v57 = v46[5];
  v56 = v46[6];
  v46[5] = v51;
  v46[6] = v50;
  swift_unknownObjectRetain_n();
  sub_1B8CC16C8(v57, v56);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v46[7])
    goto LABEL_21;
  if (v46[5])
  {
    v58 = v46[6];
    v59 = swift_getObjectType();
    v60 = *(_QWORD *)(v58 + 8);
    v61 = *(uint64_t (**)(uint64_t, uint64_t))(v60 + 16);
    swift_unknownObjectRetain();
    v62 = v61(v59, v60);
    swift_unknownObjectRelease();
    if (v64 != v62)
    {
      sub_1B8CC25CC();
      swift_release();
      swift_release();

      goto LABEL_22;
    }
LABEL_21:
    swift_release();

    swift_release();
LABEL_22:
    sub_1B8CC4254((uint64_t)v46, 0xD000000000000021, 0x80000001B8CEDE20);
    return;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1B8CC3D90()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v0 = sub_1B8CE13C8();
  v28 = *(_QWORD *)(v0 - 8);
  v29 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B8CE13E0();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8CE13BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_1B8CE13F8();
  v10 = *(_QWORD *)(v25 - 8);
  v11 = MEMORY[0x1E0C80A78](v25);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B8C84230(0, (unint64_t *)&qword_1ED565560);
    v24 = sub_1B8CE15F0();
    sub_1B8CE13EC();
    *v9 = 500;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF490], v6);
    MEMORY[0x1BCCB876C](v13, v9);
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    v17 = *(void (**)(char *, uint64_t))(v10 + 8);
    v18 = v25;
    v17(v13, v25);
    v19 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1B8CC54B8;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1B8CAF418;
    aBlock[3] = &block_descriptor_22;
    v20 = _Block_copy(aBlock);
    swift_release();
    sub_1B8CE13D4();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1B8C83740(&qword_1ED565520, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565530);
    sub_1B8CAFA48();
    v21 = v29;
    sub_1B8CE16B0();
    v22 = (void *)v24;
    MEMORY[0x1BCCB8934](v15, v5, v2, v20);
    _Block_release(v20);
    swift_release();

    (*(void (**)(char *, uint64_t))(v28 + 8))(v2, v21);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v27);
    return ((uint64_t (*)(char *, uint64_t))v17)(v15, v18);
  }
  return result;
}

uint64_t sub_1B8CC40B4()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_1B8CD5E6C(1);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1B8CC4120(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t KeyPath;

  if (*(_QWORD *)(a1 + 32))
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    swift_retain();
    sub_1B8CB6A68(a2);
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    sub_1B8CE0E70();
    sub_1B8C87884(a2);
    swift_release();
    swift_release();
    if (a3 != 2)
      sub_1B8CC2E48(a3 & 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1B8CC4254(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (qword_1ED565310 != -1)
    swift_once();
  v5 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED56B960);
  swift_retain_n();
  v6 = sub_1B8CE0EC4();
  v7 = sub_1B8CE15CC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v12 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = sub_1B8CE1944();
    sub_1B8CC4700(v10, v11, &v12);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    sub_1B8CC4700(a2, a3, &v12);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v6, v7, "…Complete (%{public}s.%{public}s)", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v9, -1, -1);
    MEMORY[0x1BCCB9588](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

void sub_1B8CC4434(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  sub_1B8CC4D74(a2, a3, a4);
}

uint64_t sub_1B8CC444C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_1ED565030 != -1)
    swift_once();
  v2 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED56B890);
  v3 = sub_1B8CE0EC4();
  v4 = sub_1B8CE15CC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1B8C64000, v3, v4, "Renderer will start rotation.", v5, 2u);
    MEMORY[0x1BCCB9588](v5, -1, -1);
  }

  sub_1B8CD61C0(3, *(_QWORD *)(v1 + 16));
  return 1;
}

void sub_1B8CC4530()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  sub_1B8CD5E6C(3);
  objc_msgSend(*(id *)(v0 + 16), sel_wk_noteContentSignificantlyChanged);
  if (qword_1ED565030 != -1)
    swift_once();
  v1 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED56B890);
  oslog = sub_1B8CE0EC4();
  v2 = sub_1B8CE15CC();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1B8C64000, oslog, v2, "Renderer did complete rotation.", v3, 2u);
    MEMORY[0x1BCCB9588](v3, -1, -1);
  }

}

uint64_t sub_1B8CC461C()
{
  sub_1B8CC444C();
  return 1;
}

uint64_t sub_1B8CC4638()
{
  return swift_slowAlloc();
}

uint64_t sub_1B8CC4640(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1B8CC4650(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_1B8CC4684()
{
  JUMPOUT(0x1BCCB9588);
}

uint64_t sub_1B8CC4690(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1B8CC4700(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1B8CE1674();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1B8CC4700(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1B8CC47D0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1B8C841D4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1B8C841D4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1B8CC47D0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1B8CE1680();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1B8CC4988(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1B8CE1740();
  if (!v8)
  {
    sub_1B8CE17C4();
    __break(1u);
LABEL_17:
    result = sub_1B8CE1818();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1B8CC4988(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1B8CC4A1C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1B8CC4BF4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1B8CC4BF4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1B8CC4A1C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1B8CC4B90(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1B8CE1710();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1B8CE17C4();
      __break(1u);
LABEL_10:
      v2 = sub_1B8CE14E8();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1B8CE1818();
    __break(1u);
LABEL_14:
    result = sub_1B8CE17C4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1B8CC4B90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5655E8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1B8CC4BF4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5655E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1B8CE1818();
  __break(1u);
  return result;
}

_BYTE **sub_1B8CC4D40(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1B8CC4D50(void (*a1)(void))
{
  a1();
  return sub_1B8CE1944();
}

void sub_1B8CC4D74(uint64_t a1, uint64_t a2, char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  v4 = v3;
  v7 = *a3;
  v8 = a3[8];
  v9 = *((_QWORD *)a3 + 2);
  v37 = a3[24];
  v10 = *((_QWORD *)a3 + 4);
  v11 = a3[40];
  v12 = *((_QWORD *)a3 + 6);
  v13 = (void *)*((_QWORD *)a3 + 7);
  v38 = *((_OWORD *)a3 + 5);
  v39 = *((_OWORD *)a3 + 6);
  v40 = *((_OWORD *)a3 + 4);
  if (qword_1ED565310 != -1)
    swift_once();
  v14 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED56B960);
  swift_retain_n();
  v15 = sub_1B8CE0EC4();
  v16 = sub_1B8CE15CC();
  if (os_log_type_enabled(v15, v16))
  {
    v35 = v7;
    v17 = swift_slowAlloc();
    v36 = a2;
    v18 = swift_slowAlloc();
    v41 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = sub_1B8CE1944();
    sub_1B8CC4700(v19, v20, &v41);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    sub_1B8CC4700(0xD00000000000001FLL, 0x80000001B8CEE150, &v41);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v15, v16, "Start (%{public}s.%{public}s)…", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    v21 = v18;
    a2 = v36;
    MEMORY[0x1BCCB9588](v21, -1, -1);
    v22 = v17;
    v7 = v35;
    MEMORY[0x1BCCB9588](v22, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  LOBYTE(v41) = v7;
  v42 = v8;
  v43 = v9;
  v44 = v37;
  v45 = v10;
  v46 = v11;
  v47 = v12;
  v48 = v13;
  v49 = v40;
  v50 = v38;
  v51 = v39;
  type metadata accessor for WKWallpaperPosterLayerViewModel();
  swift_allocObject();
  swift_retain();
  v23 = v13;
  v24 = sub_1B8CB5F08((char *)&v41, v11 ^ 1u);
  sub_1B8CC15C8(v24);
  v26 = v4[5];
  v25 = v4[6];
  v4[5] = a1;
  v4[6] = a2;
  swift_unknownObjectRetain_n();
  sub_1B8CC16C8(v26, v25);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v27 = v4[3];
  if (!v27)
    goto LABEL_11;
  *(_QWORD *)(v27 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_delegate + 8) = &off_1E6EF8460;
  swift_unknownObjectWeakAssign();
  v28 = v4[3];
  if (!v28)
    goto LABEL_11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565108);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1B8CE6BD0;
  v30 = v4[4];
  if (v30)
  {
    *(_QWORD *)(v29 + 32) = v30;
    *(_QWORD *)(v29 + 40) = &off_1E6EF8378;
    *(_QWORD *)(v28 + 16) = v29;
    swift_retain();
    swift_bridgeObjectRelease();
    if (v4[3])
    {
      ObjectType = swift_getObjectType();
      v32 = *(_QWORD *)(a2 + 8);
      v33 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
      swift_retain();
      v34 = v33(ObjectType, v32);
      sub_1B8CAD440(v34);
      swift_release();
    }
LABEL_11:
    sub_1B8CC4254((uint64_t)v4, 0xD00000000000001FLL, 0x80000001B8CEE150);
    return;
  }
  __break(1u);
}

uint64_t sub_1B8CC517C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8CC51A0()
{
  return sub_1B8CC3D90();
}

void sub_1B8CC51A8()
{
  uint64_t v0;

  sub_1B8CC4120(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void _s12WallpaperKit33WKWallpaperPosterRenderControllerC21rendererDidInvalidateyySo0cD8Renderer_pF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = v0;
  if (qword_1ED565310 != -1)
    swift_once();
  v2 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED56B960);
  swift_retain_n();
  v3 = sub_1B8CE0EC4();
  v4 = sub_1B8CE15CC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v9 = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = sub_1B8CE1944();
    sub_1B8CC4700(v7, v8, &v9);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_1B8CC4700(0xD000000000000019, 0x80000001B8CEDF30, &v9);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v3, v4, "Start (%{public}s.%{public}s)…", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v6, -1, -1);
    MEMORY[0x1BCCB9588](v5, -1, -1);

    if (!*(_QWORD *)(v1 + 24))
      goto LABEL_8;
    goto LABEL_7;
  }

  swift_release_n();
  if (*(_QWORD *)(v1 + 24))
  {
LABEL_7:
    swift_retain();
    sub_1B8CAE280();
    swift_release();
  }
LABEL_8:
  sub_1B8CD6878();
  sub_1B8CC4254(v1, 0xD000000000000019, 0x80000001B8CEDF30);
}

uint64_t type metadata accessor for WKWallpaperPosterRenderController()
{
  return objc_opt_self();
}

uint64_t method lookup function for WKWallpaperPosterRenderController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WKWallpaperPosterRenderController.__allocating_init(renderer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1B8CC542C()
{
  uint64_t v0;

  return sub_1B8CB5B6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B8CC544C()
{
  uint64_t v0;

  return sub_1B8CB5BA4(*(_QWORD *)(v0 + 16), *(_OWORD **)(v0 + 24));
}

uint64_t sub_1B8CC5464()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1B8CC5488()
{
  sub_1B8CC33F8();
}

uint64_t sub_1B8CC549C()
{
  uint64_t v0;

  return sub_1B8CB5C9C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1B8CC54B8()
{
  return sub_1B8CC40B4();
}

uint64_t sub_1B8CC54C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t result;

  if (a8)
  {

    return swift_release();
  }
  return result;
}

uint64_t sub_1B8CC54F4()
{
  return sub_1B8CC549C();
}

uint64_t sub_1B8CC5508()
{
  return sub_1B8CC544C();
}

_BYTE *WKPosterEnvironmentSnapshot.init(environmentMode:wakeState:unlockState:environmentRequiresImmediateRendering:animationDuration:timingFunction:animation:interfaceOrientation:floatingObscurableBounds:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>, double a13@<D4>)
{
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v13 = *a2;
  v14 = *((_QWORD *)a2 + 1);
  v15 = *a3;
  v16 = *((_QWORD *)a3 + 1);
  *(_BYTE *)a8 = *result;
  *(_BYTE *)(a8 + 8) = v13;
  *(_QWORD *)(a8 + 16) = v14;
  *(_BYTE *)(a8 + 24) = v15;
  *(_QWORD *)(a8 + 32) = v16;
  *(_BYTE *)(a8 + 40) = a4;
  *(double *)(a8 + 48) = a9;
  *(_QWORD *)(a8 + 56) = a5;
  *(_QWORD *)(a8 + 64) = a6;
  *(_QWORD *)(a8 + 72) = a7;
  *(double *)(a8 + 80) = a10;
  *(double *)(a8 + 88) = a11;
  *(double *)(a8 + 96) = a12;
  *(double *)(a8 + 104) = a13;
  return result;
}

uint64_t WKPosterEnvironmentSnapshot.description.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __CFString *v7;
  uint64_t v9;

  v1 = *(_BYTE *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(void **)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  sub_1B8CE1704();
  sub_1B8CE14DC();
  sub_1B8CE14DC();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  WKPosterWakeState.description.getter();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  LOBYTE(v9) = v1;
  WKPosterUnlockState.description.getter();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  sub_1B8CE156C();
  sub_1B8CE14DC();
  v6 = objc_msgSend(v4, sel_description, v9, v2);
  sub_1B8CE14B8();

  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  if (v3)
    sub_1B8CE1380();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  v7 = WKStringForInterfaceOrientation(v5);
  sub_1B8CE14B8();

  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  sub_1B8CE1620();
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  return 0;
}

BOOL static WKPosterEnvironmentSnapshot.PosterEnvironmentMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WKPosterEnvironmentSnapshot.PosterEnvironmentMode.hash(into:)()
{
  return sub_1B8CE18E4();
}

uint64_t WKPosterEnvironmentSnapshot.PosterEnvironmentMode.hashValue.getter()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

void WKPosterEnvironmentSnapshot.environmentMode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *WKPosterEnvironmentSnapshot.environmentMode.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*WKPosterEnvironmentSnapshot.environmentMode.modify())()
{
  return nullsub_1;
}

double WKPosterEnvironmentSnapshot.wakeState.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 16);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 8);
  *(double *)(a1 + 8) = result;
  return result;
}

double WKPosterEnvironmentSnapshot.wakeState.setter(uint64_t a1)
{
  uint64_t v1;
  double result;

  result = *(double *)(a1 + 8);
  *(_BYTE *)(v1 + 8) = *(_BYTE *)a1;
  *(double *)(v1 + 16) = result;
  return result;
}

uint64_t (*WKPosterEnvironmentSnapshot.wakeState.modify())()
{
  return nullsub_1;
}

double WKPosterEnvironmentSnapshot.unlockState.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 32);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 24);
  *(double *)(a1 + 8) = result;
  return result;
}

double WKPosterEnvironmentSnapshot.unlockState.setter(uint64_t a1)
{
  uint64_t v1;
  double result;

  result = *(double *)(a1 + 8);
  *(_BYTE *)(v1 + 24) = *(_BYTE *)a1;
  *(double *)(v1 + 32) = result;
  return result;
}

uint64_t (*WKPosterEnvironmentSnapshot.unlockState.modify())()
{
  return nullsub_1;
}

uint64_t WKPosterEnvironmentSnapshot.environmentRequiresImmediateRendering.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t WKPosterEnvironmentSnapshot.environmentRequiresImmediateRendering.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*WKPosterEnvironmentSnapshot.environmentRequiresImmediateRendering.modify())()
{
  return nullsub_1;
}

double WKPosterEnvironmentSnapshot.animationDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void WKPosterEnvironmentSnapshot.animationDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*WKPosterEnvironmentSnapshot.animationDuration.modify())()
{
  return nullsub_1;
}

id WKPosterEnvironmentSnapshot.timingFunction.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

void WKPosterEnvironmentSnapshot.timingFunction.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
}

uint64_t (*WKPosterEnvironmentSnapshot.timingFunction.modify())()
{
  return nullsub_1;
}

uint64_t WKPosterEnvironmentSnapshot.animation.getter()
{
  return swift_retain();
}

uint64_t WKPosterEnvironmentSnapshot.animation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*WKPosterEnvironmentSnapshot.animation.modify())()
{
  return nullsub_1;
}

uint64_t WKPosterEnvironmentSnapshot.interfaceOrientation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t WKPosterEnvironmentSnapshot.interfaceOrientation.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*WKPosterEnvironmentSnapshot.interfaceOrientation.modify())()
{
  return nullsub_1;
}

double WKPosterEnvironmentSnapshot.floatingObscurableBounds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void WKPosterEnvironmentSnapshot.floatingObscurableBounds.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[10] = a1;
  v4[11] = a2;
  v4[12] = a3;
  v4[13] = a4;
}

uint64_t (*WKPosterEnvironmentSnapshot.floatingObscurableBounds.modify())()
{
  return nullsub_1;
}

uint64_t WKPosterEnvironmentSnapshot.PosterEnvironmentMode.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E6974696465;
  else
    return 0x6E697265646E6572;
}

BOOL _s12WallpaperKit27WKPosterEnvironmentSnapshotV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  _BOOL8 result;
  uint64_t v4;
  uint64_t v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  uint64_t v10;
  uint64_t v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  char v16;
  CGRect v17;
  CGRect v18;

  result = 0;
  if (((*a1 ^ *a2) & 1) == 0
    && a1[8] == a2[8]
    && *((double *)a1 + 2) == *((double *)a2 + 2)
    && a1[24] == a2[24]
    && *((double *)a1 + 4) == *((double *)a2 + 4)
    && ((a1[40] ^ a2[40]) & 1) == 0
    && *((double *)a1 + 6) == *((double *)a2 + 6))
  {
    v4 = *((_QWORD *)a1 + 8);
    v5 = *((_QWORD *)a1 + 9);
    v6 = *((double *)a1 + 10);
    v7 = *((double *)a1 + 11);
    v8 = *((double *)a1 + 12);
    v9 = *((double *)a1 + 13);
    v10 = *((_QWORD *)a2 + 8);
    v11 = *((_QWORD *)a2 + 9);
    v12 = *((double *)a2 + 10);
    v13 = *((double *)a2 + 11);
    v14 = *((double *)a2 + 12);
    v15 = *((double *)a2 + 13);
    sub_1B8C8EC20();
    if ((sub_1B8CE1644() & 1) != 0)
    {
      if (!v4)
      {
        result = 0;
        if (v10)
          return result;
LABEL_15:
        if (v5 == v11)
        {
          v17.origin.x = v6;
          v17.origin.y = v7;
          v17.size.width = v8;
          v17.size.height = v9;
          v18.origin.x = v12;
          v18.origin.y = v13;
          v18.size.width = v14;
          v18.size.height = v15;
          return CGRectEqualToRect(v17, v18);
        }
        return result;
      }
      if (v10)
      {
        swift_retain();
        swift_retain();
        v16 = sub_1B8CE138C();
        swift_release();
        swift_release();
        result = 0;
        if ((v16 & 1) == 0)
          return result;
        goto LABEL_15;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_1B8CC5D1C()
{
  unint64_t result;

  result = qword_1EF1D4468;
  if (!qword_1EF1D4468)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKPosterEnvironmentSnapshot.PosterEnvironmentMode, &type metadata for WKPosterEnvironmentSnapshot.PosterEnvironmentMode);
    atomic_store(result, (unint64_t *)&qword_1EF1D4468);
  }
  return result;
}

uint64_t destroy for WKPosterEnvironmentSnapshot(uint64_t a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for WKPosterEnvironmentSnapshot(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  __int128 v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v3 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v3;
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v6 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WKPosterEnvironmentSnapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(void **)(a2 + 56);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for WKPosterEnvironmentSnapshot(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for WKPosterEnvironmentSnapshot(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WKPosterEnvironmentSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKPosterEnvironmentSnapshot()
{
  return &type metadata for WKPosterEnvironmentSnapshot;
}

uint64_t storeEnumTagSinglePayload for WKPosterEnvironmentSnapshot.PosterEnvironmentMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8CC6028 + 4 * byte_1B8CE8825[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8CC605C + 4 * byte_1B8CE8820[v4]))();
}

uint64_t sub_1B8CC605C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CC6064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8CC606CLL);
  return result;
}

uint64_t sub_1B8CC6078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8CC6080);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8CC6084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CC608C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WKPosterEnvironmentSnapshot.PosterEnvironmentMode()
{
  return &type metadata for WKPosterEnvironmentSnapshot.PosterEnvironmentMode;
}

id WKLayeredStripeWallpaperInput.stripeAngleDegrees.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_stripeAngleDegrees);
}

id WKLayeredStripeWallpaperInput.firstStripeOffsetScaleFactor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_firstStripeOffsetScaleFactor);
}

id WKLayeredStripeWallpaperInput.stripeHeightFactor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_stripeHeightFactor);
}

id static WKLayeredStripeWallpaperInput.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

id WKLayeredStripeWallpaperInput.backgroundColor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backgroundColor);
}

uint64_t WKLayeredStripeWallpaperInput.init(backgroundColor:stripeAngleDegrees:stripeHeightFactor:firstStripeOffsetScaleFactor:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  id v7;
  uint64_t result;

  v7 = objc_msgSend(objc_allocWithZone((Class)WKLayeredStripeWallpaperInput), sel_initWithBackgroundColor_stripeAngleDegrees_stripeHeightFactor_firstStripeOffsetScaleFactor_, a1, a3, a4, a5);

  type metadata accessor for WKLayeredStripeWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v7;
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for WKLayeredStripeWallpaperInput.ImplementationWrapper()
{
  return objc_opt_self();
}

uint64_t WKLayeredStripeWallpaperInput.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKLayeredStripeWallpaperInput.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKLayeredStripeWallpaperInput.description.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_description);
  v2 = sub_1B8CE14B8();

  return v2;
}

unint64_t sub_1B8CC62E8()
{
  unint64_t result;

  result = qword_1EF1D4470;
  if (!qword_1EF1D4470)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredStripeWallpaperInput, &type metadata for WKLayeredStripeWallpaperInput);
    atomic_store(result, (unint64_t *)&qword_1EF1D4470);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredStripeWallpaperInput()
{
  return &type metadata for WKLayeredStripeWallpaperInput;
}

uint64_t dispatch thunk of WKThumbnailRepresentable.thumbnailImageURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WKThumbnailRepresentable.thumbnailImage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unint64_t sub_1B8CC634C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5652C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (unsigned __int8 *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655A0);
  v6 = sub_1B8CE180C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1B8C92BB0(v12, (uint64_t)v5, &qword_1ED5652C8);
    result = sub_1B8C9C718(v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for WKAnimationPackageLayerState();
    result = sub_1B8CA127C((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8CC64D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5652D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (unsigned __int8 *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655B0);
  v6 = sub_1B8CE180C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1B8C92BB0(v12, (uint64_t)v5, &qword_1ED5652D0);
    result = sub_1B8C9C718(v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for WKAnimationPackageLayerState();
    result = sub_1B8CA127C((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8CC6664(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5655C8);
  v2 = (_QWORD *)sub_1B8CE180C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_1B8C9C5F8((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8CC676C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5655C0);
  v2 = (_QWORD *)sub_1B8CE180C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_1B8C9C770(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8CC6884(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4290);
  v2 = (_QWORD *)sub_1B8CE180C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 120);
  while (1)
  {
    v5 = *(_OWORD *)(v4 - 9);
    v6 = *(_OWORD *)(v4 - 5);
    v20 = *(_OWORD *)(v4 - 7);
    v21 = v6;
    v22 = *(v4 - 3);
    v18 = *(_OWORD *)(v4 - 11);
    v19 = v5;
    v17 = *((_OWORD *)v4 - 1);
    v7 = *v4;
    result = sub_1B8C9C644((uint64_t *)&v18);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = v2[6] + 72 * result;
    v11 = v21;
    *(_OWORD *)(v10 + 32) = v20;
    *(_OWORD *)(v10 + 48) = v11;
    *(_QWORD *)(v10 + 64) = v22;
    v12 = v19;
    *(_OWORD *)v10 = v18;
    *(_OWORD *)(v10 + 16) = v12;
    v13 = v2[7] + 24 * result;
    *(_OWORD *)v13 = v17;
    *(_QWORD *)(v13 + 16) = v7;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v2[2] = v16;
    v4 += 12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8CC69DC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4280);
  v2 = (_QWORD *)sub_1B8CE180C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_1B8C9C7D4(v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8CC6AE4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4288);
  v2 = sub_1B8CE180C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B8C92BB0(v6, (uint64_t)&v13, &qword_1EF1D4510);
    v7 = v13;
    result = sub_1B8C9C7D4(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = sub_1B8C8A344(&v14, v3[7] + 40 * result);
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8CC6C14(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565100);
  v2 = (_QWORD *)sub_1B8CE180C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1B8C9C770(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B8CC6D2C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4520);
  v2 = sub_1B8CE180C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B8C92BB0(v6, (uint64_t)v15, &qword_1EF1D4528);
    result = sub_1B8C9C6E8((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1B8C8ECA4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1B8CC6E6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1B8CE1764();
    result = sub_1B8CCC1A4(a1);
    v4 = result;
    v6 = v5;
    v7 = 0;
    v8 = a1 + 64;
    v16 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_23;
      v17 = v7;
      swift_retain();
      sub_1B8CE174C();
      sub_1B8CE1770();
      sub_1B8CE177C();
      result = sub_1B8CE1758();
      v9 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v9)
        goto LABEL_24;
      v11 = *(_QWORD *)(v8 + 8 * v10);
      if ((v11 & (1 << v4)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(a1 + 36) != v6)
        goto LABEL_26;
      v12 = v11 & (-2 << (v4 & 0x3F));
      if (v12)
      {
        v9 = __clz(__rbit64(v12)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v13 = v10 + 1;
        v14 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v14)
        {
          v15 = *(_QWORD *)(v8 + 8 * v13);
          if (v15)
          {
LABEL_18:
            v9 = __clz(__rbit64(v15)) + (v13 << 6);
          }
          else
          {
            while (v14 - 2 != v10)
            {
              v15 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v15)
              {
                v13 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v17 + 1;
      v4 = v9;
      if (v17 + 1 == v16)
        return v18;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

_QWORD *sub_1B8CC7058(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_1B8CCC1A4(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_1B8CCC22C(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t sub_1B8CC70E0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_retain();
}

uint64_t sub_1B8CC7170()
{
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  swift_retain();
  sub_1B8CE0E70();
  swift_release();
  return swift_release();
}

uint64_t sub_1B8CC7228@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  result = swift_release();
  *a2 = *(_QWORD *)(v3 + 152);
  return result;
}

uint64_t sub_1B8CC72B4()
{
  swift_getKeyPath();
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E70();
  return swift_release();
}

uint64_t sub_1B8CC7358(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v7;

  sub_1B8CE1704();
  sub_1B8CE14DC();
  v2 = *(void **)(a1 + 16);
  v3 = objc_msgSend(v2, sel_identifierString);
  sub_1B8CE14B8();

  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  v4 = objc_msgSend(v2, sel_name);
  sub_1B8CE14B8();

  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  sub_1B8CE14DC();
  v5 = objc_msgSend(v2, sel_contentVersion);
  objc_msgSend(v5, sel_floatValue);

  sub_1B8CE1578();
  sub_1B8CE14DC();
  v7 = objc_msgSend(v2, sel_logicalScreenClass);
  type metadata accessor for WKWallpaperRepresentingLogicalScreenClass(0);
  sub_1B8CE1788();

  sub_1B8CE14DC();
  return 0;
}

uint64_t sub_1B8CC7564(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70[2];
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v66 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v66 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v66 - v12;
  if (!a1)
    return 0;
  v14 = *(void **)(a1 + 16);
  swift_retain();
  if (!objc_msgSend(v14, sel_valueBasedWallpaperForLocation_, CFSTR("WKWallpaperLocationCoverSheet")))
  {
    swift_release();
    return 0;
  }
  sub_1B8C8FB7C((uint64_t *)v70);
  swift_unknownObjectRelease();
  sub_1B8C8A344(v70, (uint64_t)v71);
  v15 = v72;
  v16 = v73;
  __swift_project_boxed_opaque_existential_1(v71, v72);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v16 + 24))(v70, v15, v16);
  v17 = *(void **)&v70[0];
  switch(BYTE8(v70[0]))
  {
    case 5u:
      v23 = *(void **)(*(_QWORD *)&v70[0] + 16);
      swift_retain_n();
      v24 = objc_msgSend(v23, sel_floatingAnimationFileURL);
      if (v24)
      {
        v25 = v24;
        sub_1B8CE0E04();

        v26 = sub_1B8CE0E1C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 0, 1, v26);
      }
      else
      {
        v26 = sub_1B8CE0E1C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 1, 1, v26);
      }
      sub_1B8C8838C((uint64_t)v5, (uint64_t)v8);
      sub_1B8C8846C(v17, 5);
      sub_1B8CE0E1C();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v8, 1, v26) == 1)
      {
        sub_1B8C8846C(v17, 5);
        sub_1B8C8846C(v17, 5);
        v38 = (uint64_t)v8;
        goto LABEL_28;
      }
      sub_1B8C88430((uint64_t)v8, (uint64_t *)&unk_1ED565130);
      if (qword_1ED565308 != -1)
        swift_once();
      v57 = sub_1B8CE0EDC();
      __swift_project_value_buffer(v57, (uint64_t)qword_1ED56B948);
      swift_retain_n();
      v58 = sub_1B8CE0EC4();
      v59 = sub_1B8CE15CC();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        v61 = swift_slowAlloc();
        v69 = v61;
        *(_DWORD *)v60 = 136446210;
        v67 = v60 + 4;
        v62 = objc_msgSend(v14, sel_identifierString);
        v63 = sub_1B8CE14B8();
        v65 = v64;

        v68 = sub_1B8CC4700(v63, v65, &v69);
        sub_1B8CE1674();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B8C64000, v58, v59, "Adding toggle depth action since '%{public}s' has floating layer content (LayeredAnimation).", v60, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v61, -1, -1);
        MEMORY[0x1BCCB9588](v60, -1, -1);

        sub_1B8C8846C(v17, 5);
      }
      else
      {

        sub_1B8C8846C(v17, 5);
        swift_release_n();
      }
      v36 = v17;
      v37 = 5;
      goto LABEL_43;
    case 2u:
      if (qword_1ED565308 != -1)
        swift_once();
      v27 = sub_1B8CE0EDC();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED56B948);
      swift_retain_n();
      v28 = sub_1B8CE0EC4();
      v29 = sub_1B8CE15CC();
      if (!os_log_type_enabled(v28, v29))
      {

        sub_1B8C8846C(v17, 2);
        swift_release_n();
LABEL_44:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
        return 1;
      }
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v69 = v31;
      *(_DWORD *)v30 = 136446210;
      v67 = v30 + 4;
      v32 = objc_msgSend(v14, sel_identifierString);
      v33 = sub_1B8CE14B8();
      v35 = v34;

      v68 = sub_1B8CC4700(v33, v35, &v69);
      sub_1B8CE1674();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B8C64000, v28, v29, "Adding toggle depth action since '%{public}s' has floating layer content (LayeredStripe).", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v31, -1, -1);
      MEMORY[0x1BCCB9588](v30, -1, -1);

      v36 = v17;
      v37 = 2;
LABEL_43:
      sub_1B8C8846C(v36, v37);
      swift_release();
      goto LABEL_44;
    case 1u:
      v18 = *(void **)(*(_QWORD *)&v70[0] + 16);
      swift_retain_n();
      v19 = objc_msgSend(v18, sel_floatingFullSizeImageURL);
      if (v19)
      {
        v20 = v19;
        sub_1B8CE0E04();

        v21 = sub_1B8CE0E1C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 0, 1, v21);
      }
      else
      {
        v21 = sub_1B8CE0E1C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 1, 1, v21);
      }
      sub_1B8C8838C((uint64_t)v11, (uint64_t)v13);
      sub_1B8C8846C(v17, 1);
      sub_1B8CE0E1C();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v13, 1, v21) == 1)
      {
        sub_1B8C8846C(v17, 1);
        sub_1B8C8846C(v17, 1);
        v38 = (uint64_t)v13;
LABEL_28:
        sub_1B8C88430(v38, (uint64_t *)&unk_1ED565130);
        goto LABEL_29;
      }
      sub_1B8C88430((uint64_t)v13, (uint64_t *)&unk_1ED565130);
      if (qword_1ED565308 != -1)
        swift_once();
      v39 = sub_1B8CE0EDC();
      __swift_project_value_buffer(v39, (uint64_t)qword_1ED56B948);
      swift_retain_n();
      v40 = sub_1B8CE0EC4();
      v41 = sub_1B8CE15CC();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v69 = v43;
        *(_DWORD *)v42 = 136446210;
        v67 = v42 + 4;
        v44 = objc_msgSend(v14, sel_identifierString);
        v45 = sub_1B8CE14B8();
        v47 = v46;

        v68 = sub_1B8CC4700(v45, v47, &v69);
        sub_1B8CE1674();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B8C64000, v40, v41, "Adding toggle depth action since '%{public}s' has floating layer content (LayeredStill).", v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v43, -1, -1);
        MEMORY[0x1BCCB9588](v42, -1, -1);

        sub_1B8C8846C(v17, 1);
      }
      else
      {

        sub_1B8C8846C(v17, 1);
        swift_release_n();
      }
      v36 = v17;
      v37 = 1;
      goto LABEL_43;
  }
  sub_1B8C8846C(*(void **)&v70[0], SBYTE8(v70[0]));
LABEL_29:
  if (qword_1ED565308 != -1)
    swift_once();
  v48 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v48, (uint64_t)qword_1ED56B948);
  swift_retain_n();
  v49 = sub_1B8CE0EC4();
  v50 = sub_1B8CE15CC();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    v69 = v52;
    *(_DWORD *)v51 = 136446210;
    v53 = objc_msgSend(v14, sel_identifierString);
    v54 = sub_1B8CE14B8();
    v56 = v55;

    v68 = sub_1B8CC4700(v54, v56, &v69);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B8C64000, v49, v50, "No need to add toggle depth action for '%{public}s'.", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v52, -1, -1);
    MEMORY[0x1BCCB9588](v51, -1, -1);
    swift_release();
  }
  else
  {
    swift_release_n();
  }

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  return 0;
}

uint64_t sub_1B8CC7FA0(_QWORD **a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  objc_class *v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  id v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  _QWORD *v67;
  __int128 v68;
  objc_super v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  void *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  id v79;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[40];

  v2 = v1;
  v3 = *a1;
  v4 = v1[7];
  if (!v4)
  {
    if (qword_1ED565028 != -1)
      swift_once();
    v42 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED56B878);
    v43 = sub_1B8CE0EC4();
    v44 = sub_1B8CE15CC();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_1B8C64000, v43, v44, "Removing all items (no collection).", v45, 2u);
      MEMORY[0x1BCCB9588](v45, -1, -1);
    }

    swift_beginAccess();
    v2[4] = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    v46 = v2[7];
    if (v3)
      goto LABEL_26;
LABEL_22:
    if (!v46)
      goto LABEL_32;
    goto LABEL_30;
  }
  v5 = qword_1ED565028;
  swift_retain();
  if (v5 != -1)
LABEL_46:
    swift_once();
  v6 = sub_1B8CE0EDC();
  v62 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED56B878);
  v7 = sub_1B8CE0EC4();
  v8 = sub_1B8CE15CC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1B8C64000, v7, v8, "Removing all items.", v9, 2u);
    MEMORY[0x1BCCB9588](v9, -1, -1);
  }
  v63 = v3;

  v67 = v2 + 4;
  swift_beginAccess();
  v2[4] = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  v10 = *(void **)(v4 + 16);
  swift_retain();
  if (objc_msgSend(v10, sel_numberOfWallpapers))
  {
    v3 = 0;
    v65 = v2;
    v66 = MEMORY[0x1E0DEE9C0] + 8;
    v64 = v4;
    do
    {
      v79 = objc_msgSend(v10, sel_wallpaperBundleAtIndex_, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5670D0);
      if (!swift_dynamicCast())
        goto LABEL_49;
      sub_1B8C8A344(&v70, (uint64_t)v80);
      v22 = v81;
      v23 = v82;
      __swift_project_boxed_opaque_existential_1(v80, v81);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v23 + 8))(&v70, v22, v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
      sub_1B8C8A344(&v70, (uint64_t)v83);
      if ((uint64_t)v3 >= (uint64_t)objc_msgSend(*(id *)(v4 + 16), sel_numberOfWallpapers))
      {
        __break(1u);
        goto LABEL_46;
      }
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED567068);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v24 = (void *)v2[16];
        if (!v24)
        {
          __break(1u);
          goto LABEL_48;
        }
        v25 = v70;
        v26 = v2[15];
        v27 = *((_BYTE *)v2 + 112);
        v28 = v2[13];
        v29 = v2[12];
        v30 = v2[11];
        v31 = v2[10];
        LOBYTE(v70) = v2[9] & 1;
        BYTE8(v70) = v31;
        *(_QWORD *)&v71 = v30;
        BYTE8(v71) = v29;
        v72 = v28;
        v73 = v27 & 1;
        v74 = v26;
        v75 = v24;
        v68 = *(_OWORD *)(v2 + 17);
        v32 = *(_OWORD *)(v2 + 19);
        v76 = v68;
        v77 = v32;
        v78 = *(_OWORD *)(v2 + 21);
        type metadata accessor for WKWallpaperPosterLayerViewModel();
        swift_allocObject();
        swift_retain();
        v33 = v24;
        v34 = sub_1B8CB5F08((char *)&v70, 1);
        KeyPath = swift_getKeyPath();
        MEMORY[0x1E0C80A78](KeyPath);
        v2 = &v59;
        v60 = v34;
        v61 = v25;
        *(_QWORD *)&v70 = v34;
        sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
        swift_retain();
        sub_1B8CE0E70();
        swift_release();
        swift_release();
        swift_getKeyPath();
        *(_QWORD *)&v70 = v34;
        sub_1B8CE0E7C();
        swift_release();
        *(_QWORD *)&v70 = v34;
        swift_getKeyPath();
        sub_1B8CE0E94();
        swift_release();
        v36 = *(_QWORD *)(v34 + 152);
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
        {
          __break(1u);
          break;
        }
        *(_QWORD *)(v34 + 152) = v38;
        *(_QWORD *)&v70 = v34;
        swift_getKeyPath();
        sub_1B8CE0E88();
        swift_release();
        v11 = (objc_class *)type metadata accessor for WKWallpaperPosterEditorLookItem();
        v12 = (char *)objc_allocWithZone(v11);
        *(_QWORD *)&v12[OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_views] = 0;
        *(_QWORD *)&v12[OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_wallpaperPosterLayerViewModel] = v34;
        v69.receiver = v12;
        v69.super_class = v11;
        swift_retain();
        v13 = objc_msgSendSuper2(&v69, sel_init);
        v14 = *(void **)(v25 + 16);
        swift_retain();
        v15 = objc_msgSend(v14, sel_identifierString);
        v16 = sub_1B8CE14B8();
        v18 = v17;
        swift_release();

        v19 = v67;
        swift_beginAccess();
        v20 = v13;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v80[0] = *v19;
        *v19 = 0x8000000000000000;
        sub_1B8CA0EE4((uint64_t)v20, v16, v18, isUniquelyReferenced_nonNull_native);
        *v19 = v80[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();

        swift_release();
        swift_release();
        v4 = v64;
        v2 = v65;
      }
      v3 = (_QWORD *)((char *)v3 + 1);
      v10 = *(void **)(v4 + 16);
    }
    while (v3 != objc_msgSend(v10, sel_numberOfWallpapers));
  }
  swift_release();
  swift_retain();
  v39 = sub_1B8CE0EC4();
  v40 = sub_1B8CE15CC();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v41 = 134349056;
    *(_QWORD *)&v70 = *(_QWORD *)(v2[4] + 16);
    sub_1B8CE1674();
    swift_release();
    _os_log_impl(&dword_1B8C64000, v39, v40, "Created %{public}ld items.", v41, 0xCu);
    MEMORY[0x1BCCB9588](v41, -1, -1);
    swift_release();

  }
  else
  {

    swift_release();
    swift_release();
  }
  v3 = v63;
  v46 = v2[7];
  if (!v63)
    goto LABEL_22;
LABEL_26:
  if (!v46)
  {
    swift_retain();
LABEL_30:
    swift_release();
    goto LABEL_31;
  }
  v47 = (void *)v3[2];
  v48 = *(_QWORD *)(v46 + 16);
  swift_retain_n();
  LOBYTE(v47) = objc_msgSend(v47, sel_isEqual_, v48);
  swift_release_n();
  if ((v47 & 1) == 0)
LABEL_31:
    objc_msgSend((id)v2[2], sel_updateActions);
LABEL_32:
  swift_beginAccess();
  v49 = swift_bridgeObjectRetain();
  v50 = sub_1B8CC6E6C(v49);
  swift_bridgeObjectRelease();
  v51 = v2[7];
  if (!v51)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    v72 = 0;
    v70 = 0u;
    v71 = 0u;
    sub_1B8C88430((uint64_t)&v70, (uint64_t *)&unk_1EF1D4270);
    LODWORD(v61) = 0;
    v60 = 219;
    result = sub_1B8CE17D0();
    __break(1u);
    return result;
  }
  if (objc_msgSend(*(id *)(v51 + 16), sel_disableRotation))
  {
    if (qword_1ED565028 != -1)
      swift_once();
    v52 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v52, (uint64_t)qword_1ED56B878);
    v53 = sub_1B8CE0EC4();
    v54 = sub_1B8CE15CC();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v55 = 0;
      _os_log_impl(&dword_1B8C64000, v53, v54, "Renderer will NOT support rotation", v55, 2u);
      MEMORY[0x1BCCB9588](v55, -1, -1);
    }

    v2[3] = 0;
    goto LABEL_41;
  }
  if (!v2[3])
  {
    type metadata accessor for WKDynamicRotationManager();
    swift_allocObject();
    v2[3] = sub_1B8CAF5F4();
LABEL_41:
    swift_release();
  }
  v56 = v2[3];
  if (v56)
  {
    swift_retain();
    v57 = sub_1B8CC8940(v50);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v56 + 16) = v57;
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8CC8940(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1B8CE17DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v16 = MEMORY[0x1E0DEE9D8];
  result = sub_1B8CA12C0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1BCCB8A6C](v5, a1);
        v8 = *(_QWORD *)(v16 + 16);
        v7 = *(_QWORD *)(v16 + 24);
        if (v8 >= v7 >> 1)
          sub_1B8CA12C0(v7 > 1, v8 + 1, 1);
        ++v5;
        *(_QWORD *)(v16 + 16) = v8 + 1;
        v9 = v16 + 16 * v8;
        *(_QWORD *)(v9 + 32) = v6;
        *(_QWORD *)(v9 + 40) = &off_1E6EF8378;
      }
      while (v2 != v5);
    }
    else
    {
      v10 = (uint64_t *)(a1 + 32);
      v11 = *(_QWORD *)(v16 + 16);
      v12 = 16 * v11;
      do
      {
        v13 = *v10;
        v14 = *(_QWORD *)(v16 + 24);
        swift_retain();
        if (v11 >= v14 >> 1)
          sub_1B8CA12C0(v14 > 1, v11 + 1, 1);
        *(_QWORD *)(v16 + 16) = v11 + 1;
        v15 = v16 + v12;
        *(_QWORD *)(v15 + 32) = v13;
        *(_QWORD *)(v15 + 40) = &off_1E6EF8378;
        v12 += 16;
        ++v10;
        ++v11;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

void sub_1B8CC8AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  _QWORD *v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;

  if (*(_QWORD *)(v1 + 64) != a1)
  {
    v2 = v1;
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 32);
    v36 = v3 + 64;
    v4 = 1 << *(_BYTE *)(v3 + 32);
    v5 = -1;
    if (v4 < 64)
      v5 = ~(-1 << v4);
    v6 = v5 & *(_QWORD *)(v3 + 64);
    v37 = (unint64_t)(v4 + 63) >> 6;
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = &unk_1ED565000;
    if (!v6)
      goto LABEL_6;
LABEL_5:
    v38 = (v6 - 1) & v6;
    v39 = v7;
    for (i = __clz(__rbit64(v6)) | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v12 << 6))
    {
      v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * i);
      v16 = *v14;
      v15 = v14[1];
      v17 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * i);
      v18 = v8[5];
      swift_bridgeObjectRetain();
      v19 = v17;
      if (v18 != -1)
        swift_once();
      v20 = sub_1B8CE0EDC();
      __swift_project_value_buffer(v20, (uint64_t)qword_1ED56B878);
      swift_bridgeObjectRetain();
      v21 = sub_1B8CE0EC4();
      v22 = sub_1B8CE15CC();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = v8;
        v24 = v2;
        v25 = v3;
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        v40 = v27;
        *(_DWORD *)v26 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v26 + 4) = sub_1B8CC4700(v16, v15, &v40);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1B8C64000, v21, v22, "Updating overrideUserInterfaceStyle on %{public}s.", (uint8_t *)v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCB9588](v27, -1, -1);
        v28 = v26;
        v3 = v25;
        v2 = v24;
        v8 = v23;
        MEMORY[0x1BCCB9588](v28, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v29 = OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_views;
      v30 = *(void **)&v19[OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_views];
      if (!v30)
        break;
      v31 = objc_msgSend(v30, sel_backgroundView);
      objc_msgSend(v31, sel_setOverrideUserInterfaceStyle_, *(_QWORD *)(v2 + 64));

      v32 = *(void **)&v19[v29];
      if (!v32)
        goto LABEL_35;
      v33 = objc_msgSend(v32, sel_foregroundView);
      objc_msgSend(v33, sel_setOverrideUserInterfaceStyle_, *(_QWORD *)(v2 + 64));

      v34 = *(void **)&v19[v29];
      if (!v34)
        goto LABEL_36;
      v35 = objc_msgSend(v34, sel_floatingView);
      objc_msgSend(v35, sel_setOverrideUserInterfaceStyle_, *(_QWORD *)(v2 + 64));

      v6 = v38;
      v7 = v39;
      if (v38)
        goto LABEL_5;
LABEL_6:
      v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_33:
        __break(1u);
        break;
      }
      if (v10 >= v37)
        goto LABEL_30;
      v11 = *(_QWORD *)(v36 + 8 * v10);
      v12 = v7 + 1;
      if (!v11)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v37)
          goto LABEL_30;
        v11 = *(_QWORD *)(v36 + 8 * v12);
        if (!v11)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v37)
            goto LABEL_30;
          v11 = *(_QWORD *)(v36 + 8 * v12);
          if (!v11)
          {
            v13 = v7 + 4;
            if (v7 + 4 >= v37)
            {
LABEL_30:
              swift_release();
              return;
            }
            v11 = *(_QWORD *)(v36 + 8 * v13);
            if (!v11)
            {
              while (1)
              {
                v12 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_33;
                if (v12 >= v37)
                  goto LABEL_30;
                v11 = *(_QWORD *)(v36 + 8 * v12);
                ++v13;
                if (v11)
                  goto LABEL_19;
              }
            }
            v12 = v7 + 4;
          }
        }
      }
LABEL_19:
      v38 = (v11 - 1) & v11;
      v39 = v12;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
}

void sub_1B8CC8EBC(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __int128 v41;
  unint64_t i;
  BOOL v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t KeyPath;
  id v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unsigned __int8 v91[16];
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = (void *)a1[7];
  v10 = a1[8];
  v11 = a1[9];
  v12 = a1[10];
  v13 = a1[11];
  v15 = a1[12];
  v14 = a1[13];
  v90 = v15;
  v17 = v1[9];
  v16 = v1[10];
  v19 = v1[11];
  v18 = (id)v1[12];
  v21 = v1[13];
  v20 = v1[14];
  v22 = v1[15];
  v23 = (void *)v1[16];
  v24 = (_QWORD *)v1[17];
  v25 = v1[18];
  v26 = v1[19];
  v27 = v1[20];
  v28 = v1[21];
  v29 = v1[22];
  if (v23)
  {
    v105 = v1[9];
    v106 = v16;
    v107 = v19;
    v108 = v18;
    v109 = v21;
    v110 = v20;
    v111 = v22;
    v112 = v23;
    v113 = v24;
    v114 = v25;
    v115 = v26;
    v116 = v27;
    v117 = v28;
    v118 = v29;
    v85 = v20;
    v86 = v17;
    v88 = v19;
    v89 = v21;
    v87 = v16;
    if (v9)
    {
      v91[0] = v3 & 1;
      v91[8] = v2;
      v92 = v4;
      v93 = v5;
      v94 = v6;
      v95 = v7 & 1;
      v96 = v8;
      v97 = v9;
      v98 = v10;
      v99 = v11;
      v100 = v12;
      v101 = v13;
      v102 = v90;
      v103 = v14;
      v83 = v24;
      v84 = v25;
      v30 = (uint64_t)v18;
      v31 = v20;
      v32 = v22;
      sub_1B8CCF504(v17, v16, v19, (uint64_t)v18, v21, v20, v22, v23);
      sub_1B8CCF504(v86, v87, v88, v30, v89, v31, v32, v23);
      LODWORD(v90) = _s12WallpaperKit27WKPosterEnvironmentSnapshotV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v105, v91);

      swift_release();
      sub_1B8CC54C0(v86, v87, v88, v30, v89, v85, v32, v23);
      if ((v90 & 1) != 0)
        return;
      goto LABEL_9;
    }
    v82 = v18;
    v83 = (uint64_t *)v22;
    v80 = v8;
    v81 = v7;
    v33 = v6;
    v78 = v4;
    v79 = v5;
    v77 = v10;
    v74 = v11;
    v75 = v2;
    v72 = v13;
    v73 = v12;
    v70 = v14;
    *(_QWORD *)&v71 = v3;
    v34 = v23;
    swift_retain();
    v14 = v70;
    v3 = v71;
    v12 = v73;
    v11 = v74;
    v2 = v75;
    v10 = v77;
    v4 = v78;
    v5 = v79;
    v8 = v80;
    v6 = v33;
    v7 = v81;
    v18 = v82;
    v17 = v86;
    v16 = v87;
    v19 = v88;
    v21 = v89;
    v20 = v85;
    v22 = (uint64_t)v83;
  }
  else if (!v9)
  {
    return;
  }
  v105 = v17;
  v106 = v16;
  v107 = v19;
  v108 = v18;
  v109 = v21;
  v110 = v20;
  v111 = v22;
  v112 = v23;
  v113 = v24;
  v114 = v25;
  v115 = v26;
  v116 = v27;
  v117 = v28;
  v118 = v29;
  v119 = v3;
  v120 = v2;
  v121 = v4;
  v122 = v5;
  v123 = v6;
  v124 = v7;
  v125 = v8;
  v126 = v9;
  v127 = v10;
  v128 = v11;
  v129 = v12;
  v130 = v13;
  v131 = v90;
  v132 = v14;
  sub_1B8CCF504(v3, v2, v4, v5, v6, v7, v8, v9);
  sub_1B8CCF534((uint64_t)&v105);
LABEL_9:
  swift_beginAccess();
  v35 = v76[4];
  v36 = *(_QWORD *)(v35 + 64);
  v72 = v35 + 64;
  v37 = 1 << *(_BYTE *)(v35 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & v36;
  v73 = (unint64_t)(v37 + 63) >> 6;
  v75 = v35;
  swift_bridgeObjectRetain();
  v40 = 0;
  *(_QWORD *)&v41 = 136446210;
  v71 = v41;
  v70 = MEMORY[0x1E0DEE9B8] + 8;
  v74 = MEMORY[0x1E0DEE9C0] + 8;
  if (!v39)
    goto LABEL_13;
LABEL_12:
  v89 = (v39 - 1) & v39;
  v90 = v40;
  for (i = __clz(__rbit64(v39)) | (v40 << 6); ; i = __clz(__rbit64(v45)) + (v44 << 6))
  {
    v47 = (uint64_t *)(*(_QWORD *)(v75 + 48) + 16 * i);
    v48 = *v47;
    v49 = v47[1];
    v50 = *(void **)(*(_QWORD *)(v75 + 56) + 8 * i);
    v51 = qword_1ED565028;
    swift_bridgeObjectRetain();
    v52 = v50;
    if (v51 != -1)
      swift_once();
    v53 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v53, (uint64_t)qword_1ED56B878);
    swift_bridgeObjectRetain();
    v54 = sub_1B8CE0EC4();
    v55 = sub_1B8CE15CC();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v104 = v57;
      *(_DWORD *)v56 = v71;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v56 + 4) = sub_1B8CC4700(v48, v49, &v104);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B8C64000, v54, v55, "Updating posterEnvironmentSnapshot on %{public}s.", (uint8_t *)v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v57, -1, -1);
      MEMORY[0x1BCCB9588](v56, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v58 = (void *)v76[16];
    if (!v58)
      break;
    v59 = v76[21];
    v77 = v76[22];
    v78 = v59;
    v60 = v76[19];
    v79 = v76[20];
    v80 = v60;
    v61 = (_QWORD *)v76[17];
    v81 = v76[18];
    v62 = v76[14];
    v84 = v76[15];
    v85 = v62;
    v63 = v76[13];
    v86 = v76[12];
    v87 = v63;
    v64 = v76[10];
    v88 = v76[11];
    v65 = v76[9];
    v66 = *(_QWORD *)&v52[OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_wallpaperPosterLayerViewModel];
    LOBYTE(v105) = v65 & 1;
    LOBYTE(v106) = v64;
    v107 = v88;
    LOBYTE(v108) = v86;
    v109 = v63;
    LOBYTE(v110) = v62 & 1;
    v111 = v84;
    v112 = v58;
    v113 = v61;
    v114 = v81;
    v115 = v60;
    v116 = v79;
    v117 = v59;
    v118 = v77;
    KeyPath = swift_getKeyPath();
    v82 = v52;
    v83 = &v69;
    MEMORY[0x1E0C80A78](KeyPath);
    v104 = v66;
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    v68 = v58;
    swift_retain();
    sub_1B8CE0E70();
    sub_1B8CC54C0(v65, v64, v88, v86, v87, v85, v84, v58);

    swift_release();
    v39 = v89;
    v40 = v90;
    if (v89)
      goto LABEL_12;
LABEL_13:
    v43 = __OFADD__(v40, 1);
    v44 = v40 + 1;
    if (v43)
    {
      __break(1u);
LABEL_38:
      __break(1u);
      break;
    }
    if (v44 >= v73)
      goto LABEL_36;
    v45 = *(_QWORD *)(v72 + 8 * v44);
    if (!v45)
    {
      v46 = v44 + 1;
      if (v44 + 1 >= v73)
        goto LABEL_36;
      v45 = *(_QWORD *)(v72 + 8 * v46);
      if (!v45)
      {
        v46 = v44 + 2;
        if (v44 + 2 >= v73)
          goto LABEL_36;
        v45 = *(_QWORD *)(v72 + 8 * v46);
        if (!v45)
        {
          v46 = v44 + 3;
          if (v44 + 3 >= v73)
          {
LABEL_36:
            swift_release();
            return;
          }
          v45 = *(_QWORD *)(v72 + 8 * v46);
          if (!v45)
          {
            while (1)
            {
              v44 = v46 + 1;
              if (__OFADD__(v46, 1))
                goto LABEL_38;
              if (v44 >= v73)
                goto LABEL_36;
              v45 = *(_QWORD *)(v72 + 8 * v44);
              ++v46;
              if (v45)
                goto LABEL_23;
            }
          }
        }
      }
      v44 = v46;
    }
LABEL_23:
    v89 = (v45 - 1) & v45;
    v90 = v44;
  }
  __break(1u);
}

void sub_1B8CC95A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  char v17;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 184);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_wallpaperPosterLayerViewModel);
    swift_getKeyPath();
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    swift_retain();
    sub_1B8CE0E7C();
    swift_release();
    v6 = *(_QWORD *)(v5 + 16);
    swift_retain();
    swift_release();
    if (v6)
    {
      v7 = objc_msgSend(*(id *)(v6 + 16), sel_identifierString);
      v8 = sub_1B8CE14B8();
      v10 = v9;
      swift_release();

      if (!a1)
        goto LABEL_4;
LABEL_7:
      v12 = *(_QWORD *)(a1
                      + OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_wallpaperPosterLayerViewModel);
      swift_getKeyPath();
      sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
      sub_1B8CE0E7C();
      swift_release();
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        v14 = *(void **)(v13 + 16);
        swift_retain();
        v15 = objc_msgSend(v14, sel_identifierString);
        a1 = sub_1B8CE14B8();
        v11 = v16;
        swift_release();

        if (!v10)
          goto LABEL_14;
      }
      else
      {
        a1 = 0;
        v11 = 0;
        if (!v10)
          goto LABEL_14;
      }
      goto LABEL_9;
    }
  }
  v8 = 0;
  v10 = 0;
  if (a1)
    goto LABEL_7;
LABEL_4:
  v11 = 0;
  if (!v10)
  {
LABEL_14:
    if (!v11)
      return;
    goto LABEL_15;
  }
LABEL_9:
  if (!v11)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_17:
    objc_msgSend(*(id *)(v2 + 16), sel_updateActions);
    return;
  }
  if (v8 == a1 && v10 == v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v17 = sub_1B8CE1890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
    goto LABEL_17;
}

void sub_1B8CC97F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v5 = sub_1B8CE0E1C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565140);
  MEMORY[0x1E0C80A78](v48);
  v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v10 = MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v44 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v44 - v15;
  v17 = *(_QWORD *)(v2 + 192);
  v47 = v2;
  if (v17)
  {
    v45 = v14;
    v18 = v5;
    v19 = a2;
    v20 = a1;
    v21 = *(_QWORD *)(v2 + 200);
    ObjectType = swift_getObjectType();
    v23 = *(_QWORD *)(v21 + 8);
    v24 = v6;
    v25 = *(void (**)(uint64_t, uint64_t))(v23 + 40);
    swift_unknownObjectRetain();
    v26 = v23;
    a1 = v20;
    a2 = v19;
    v5 = v18;
    v14 = v45;
    v25(ObjectType, v26);
    v6 = v24;
    swift_unknownObjectRelease();
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v27(v16, 0, 1, v5);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v27((char *)&v44 - v15, 1, 1, v5);
  }
  if (a1)
  {
    v28 = swift_getObjectType();
    (*(void (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 40))(v28);
    v29 = 0;
  }
  else
  {
    v29 = 1;
  }
  v30 = (uint64_t)v49;
  v27(v14, v29, 1, v5);
  v31 = v30 + *(int *)(v48 + 48);
  sub_1B8C92BB0((uint64_t)v16, v30, (uint64_t *)&unk_1ED565130);
  sub_1B8C92BB0((uint64_t)v14, v31, (uint64_t *)&unk_1ED565130);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v32(v30, 1, v5) == 1)
  {
    sub_1B8C88430((uint64_t)v14, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430((uint64_t)v16, (uint64_t *)&unk_1ED565130);
    if (v32(v31, 1, v5) == 1)
    {
      sub_1B8C88430(v30, (uint64_t *)&unk_1ED565130);
      return;
    }
  }
  else
  {
    v33 = v46;
    sub_1B8C92BB0(v30, v46, (uint64_t *)&unk_1ED565130);
    if (v32(v31, 1, v5) != 1)
    {
      v41 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v44, v31, v5);
      sub_1B8C83740((unint64_t *)&unk_1ED565120, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v42 = sub_1B8CE1488();
      v43 = *(void (**)(char *, uint64_t))(v6 + 8);
      v43(v41, v5);
      sub_1B8C88430((uint64_t)v14, (uint64_t *)&unk_1ED565130);
      sub_1B8C88430((uint64_t)v16, (uint64_t *)&unk_1ED565130);
      v43((char *)v33, v5);
      sub_1B8C88430(v30, (uint64_t *)&unk_1ED565130);
      if ((v42 & 1) != 0)
        return;
      goto LABEL_13;
    }
    sub_1B8C88430((uint64_t)v14, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430((uint64_t)v16, (uint64_t *)&unk_1ED565130);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v33, v5);
  }
  sub_1B8C88430(v30, &qword_1ED565140);
LABEL_13:
  if (qword_1ED565028 != -1)
    swift_once();
  v34 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v35 = sub_1B8CE0EC4();
  v36 = sub_1B8CE15CC();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v51 = v38;
    *(_DWORD *)v37 = 136446466;
    v39 = sub_1B8CE1944();
    v50 = sub_1B8CC4700(v39, v40, &v51);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2082;
    v50 = sub_1B8CC4700(0xD000000000000018, 0x80000001B8CEE3F0, &v51);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v35, v36, "(%{public}s.%{public}s): sourceAssetDirectory differ, loading contents from environment…", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v38, -1, -1);
    MEMORY[0x1BCCB9588](v37, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  sub_1B8CC9D58();
}

void sub_1B8CC9D58()
{
  char **v0;
  char **v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t ObjectType;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char v30;
  char v31;
  char v32;
  id v33;
  __CFString **v34;
  __CFString *v35;
  ValueMetadata *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  void *v40;
  ValueMetadata *v41;
  unint64_t v42;
  uint64_t inited;
  char *v44;
  void *v45;
  id v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  unsigned __int8 v60;
  char *v61;
  void *v62;
  _QWORD *v63;
  void *v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84[2];
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  ValueMetadata *v88;
  unint64_t v89;

  v1 = v0;
  v2 = sub_1B8CE0E58();
  v79 = *(_QWORD *)(v2 - 8);
  v80 = v2;
  MEMORY[0x1E0C80A78](v2);
  v78 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED565028 != -1)
LABEL_41:
    swift_once();
  v81 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v81, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v4 = sub_1B8CE0EC4();
  v5 = sub_1B8CE15CC();
  if (!os_log_type_enabled(v4, v5))
  {

    swift_release_n();
    v10 = v1[24];
    if (v10)
      goto LABEL_4;
LABEL_6:
    v14 = sub_1B8CE0EC4();
    v15 = sub_1B8CE15CC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1B8C64000, v14, v15, "No poster environment set, bailing.", v16, 2u);
      MEMORY[0x1BCCB9588](v16, -1, -1);
    }

    goto LABEL_33;
  }
  v6 = swift_slowAlloc();
  v7 = (_QWORD *)swift_slowAlloc();
  v85 = v7;
  *(_DWORD *)v6 = 136446466;
  v8 = sub_1B8CE1944();
  *(_QWORD *)&v82 = sub_1B8CC4700(v8, v9, (uint64_t *)&v85);
  sub_1B8CE1674();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v6 + 12) = 2082;
  *(_QWORD *)&v82 = sub_1B8CC4700(0xD00000000000001DLL, 0x80000001B8CEE130, (uint64_t *)&v85);
  sub_1B8CE1674();
  _os_log_impl(&dword_1B8C64000, v4, v5, "Start (%{public}s.%{public}s)…", (uint8_t *)v6, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x1BCCB9588](v7, -1, -1);
  MEMORY[0x1BCCB9588](v6, -1, -1);

  v10 = v1[24];
  if (!v10)
    goto LABEL_6;
LABEL_4:
  v11 = v1[25];
  ObjectType = swift_getObjectType();
  v13 = *((_QWORD *)v11 + 1);
  swift_unknownObjectRetain();
  sub_1B8C969C0(ObjectType, v13, (uint64_t *)&v85);
  v77 = v10;
  v18 = v85;
  v17 = v86;
  v19 = v87;
  v20 = (uint64_t)v1[8];
  v1[8] = v86;
  sub_1B8CC8AE0(v20);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v21 = sub_1B8CE0EC4();
  v22 = sub_1B8CE15CC();
  v23 = os_log_type_enabled(v21, v22);
  v76 = v19;
  if (v23)
  {
    v24 = swift_slowAlloc();
    v75 = (_QWORD *)swift_slowAlloc();
    v85 = v75;
    *(_DWORD *)v24 = 136446466;
    swift_bridgeObjectRetain();
    v74 = MEMORY[0x1E0DEE9B8] + 8;
    v25 = sub_1B8CE1458();
    v27 = v26;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v82 = sub_1B8CC4700(v25, v27, (uint64_t *)&v85);
    sub_1B8CE1674();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    v19 = v76;
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2050;
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)&v82 = v17;
    sub_1B8CE1674();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_1B8C64000, v21, v22, "Loaded source contents: '%{public}s' + '%{public}ld'.", (uint8_t *)v24, 0x16u);
    v28 = v75;
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v28, -1, -1);
    MEMORY[0x1BCCB9588](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v84[0] = 0xD00000000000001ELL;
  v84[1] = 0x80000001B8CEDDB0;
  sub_1B8CE16EC();
  if (*(_QWORD *)(v19 + 16) && (v29 = sub_1B8C9C6E8((uint64_t)&v85), (v30 & 1) != 0))
  {
    sub_1B8C841D4(*(_QWORD *)(v19 + 56) + 32 * v29, (uint64_t)&v82);
  }
  else
  {
    v82 = 0u;
    v83 = 0u;
  }
  sub_1B8C97ADC((uint64_t)&v85);
  if (*((_QWORD *)&v83 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v31 = sub_1B8CB0B28();
      if (v31 != 2)
      {
        v32 = v31;
        v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D652A0]), sel_init);
        v34 = WKWallpaperLocationHomeScreen;
        if ((v32 & 1) == 0)
          v34 = WKWallpaperLocationCoverSheet;
        v35 = *v34;
        sub_1B8CB72B8(v35, (uint64_t)&v82);

        if (*((_QWORD *)&v83 + 1))
        {
          sub_1B8C8A344(&v82, (uint64_t)&v85);
          v36 = v88;
          v37 = v89;
          __swift_project_boxed_opaque_existential_1(&v85, (uint64_t)v88);
          sub_1B8CBE60C((uint64_t)v36, v37);
          *(_QWORD *)&v82 = 0x646574617267694DLL;
          *((_QWORD *)&v82 + 1) = 0xEB00000000203A20;
          sub_1B8CE14DC();
          swift_bridgeObjectRelease();
          v38 = (void *)sub_1B8CE1494();
          swift_bridgeObjectRelease();
          WKSetApplicationSpecificInformation(v38);

          v39 = v78;
          sub_1B8CE0E4C();
          sub_1B8CE0E28();
          (*(void (**)(char *, uint64_t))(v79 + 8))(v39, v80);
          v40 = (void *)sub_1B8CE1494();
          swift_bridgeObjectRelease();
          v41 = v88;
          v42 = v89;
          __swift_project_boxed_opaque_existential_1(&v85, (uint64_t)v88);
          (*(void (**)(ValueMetadata *, unint64_t))(v42 + 56))(v41, v42);
          sub_1B8C90CCC((uint64_t)&v85, (uint64_t)&v82);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565838);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1B8CE6BD0;
          sub_1B8C90CCC((uint64_t)&v85, inited + 32);
          WKWallpaperRepresentingCollection.init(wallpaperCollectionIdentifier:displayName:previewWallpaperRepresenting:wallpapersShareBaseAppearance:hiddenFromPicker:disableRotation:wallpaperRepresentingCollection:downloadManager:)(v40, (uint64_t)&v82, 0, 0, 0, inited, v84, 0);
          v44 = v1[7];
          v1[7] = (char *)v84[0];
          *(_QWORD *)&v82 = v44;
          sub_1B8CC7FA0((_QWORD **)&v82);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();

          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
        }
        else
        {
          sub_1B8C88430((uint64_t)&v82, &qword_1ED567340);
          if (qword_1EF1D3AD0 != -1)
            swift_once();
          __swift_project_value_buffer(v81, (uint64_t)qword_1EF1D78D0);
          v70 = sub_1B8CE0EC4();
          v71 = sub_1B8CE15B4();
          if (os_log_type_enabled(v70, v71))
          {
            v72 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v72 = 0;
            _os_log_impl(&dword_1B8C64000, v70, v71, "Migration failed (see previous fault log for failure case).", v72, 2u);
            MEMORY[0x1BCCB9588](v72, -1, -1);
            swift_bridgeObjectRelease();
            swift_release();
            swift_unknownObjectRelease();

          }
          else
          {

            swift_bridgeObjectRelease();
            swift_release();
            swift_unknownObjectRelease();
          }

        }
LABEL_33:
        sub_1B8CCBA98((uint64_t)v1, 0xD00000000000001DLL, 0x80000001B8CEE130);
        return;
      }
    }
  }
  else
  {
    sub_1B8C88430((uint64_t)&v82, &qword_1ED565600);
  }
  v45 = (void *)v18[2];
  swift_retain();
  v46 = objc_msgSend(v45, sel_identifierString);
  v47 = sub_1B8CE14B8();
  v49 = v48;
  swift_release();

  v1[5] = (char *)v47;
  v1[6] = v49;
  v81 = (uint64_t)v1;
  swift_bridgeObjectRelease();
  v50 = swift_retain();
  sub_1B8CC7358(v50);
  v75 = v18;
  swift_release();
  v51 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  WKSetApplicationSpecificInformation(v51);

  v52 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  type metadata accessor for WKWallpaperRepresentingCollectionsManager();
  v53 = swift_initStackObject();
  type metadata accessor for WKWallpaperRepresentingCollectionsManager.ImplementationWrapper();
  v54 = swift_initStackObject();
  *(_QWORD *)(v54 + 16) = v52;
  *(_QWORD *)(v53 + 16) = v54;
  v74 = v53;
  swift_retain();
  if (!objc_msgSend(v52, sel_numberOfWallpaperCollections))
  {
LABEL_30:
    swift_release_n();
    v61 = v78;
    sub_1B8CE0E4C();
    sub_1B8CE0E28();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v61, v80);
    v62 = (void *)sub_1B8CE1494();
    swift_bridgeObjectRelease();
    v63 = v75;
    v64 = (void *)v75[2];
    swift_retain();
    v65 = objc_msgSend(v64, sel_name);
    sub_1B8CE14B8();
    swift_release();

    v88 = &type metadata for WKWallpaperBundle;
    v66 = sub_1B8C8A2F0();
    v89 = v66;
    v85 = v63;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565838);
    v67 = swift_initStackObject();
    *(_OWORD *)(v67 + 16) = xmmword_1B8CE6BD0;
    *(_QWORD *)(v67 + 56) = &type metadata for WKWallpaperBundle;
    *(_QWORD *)(v67 + 64) = v66;
    *(_QWORD *)(v67 + 32) = v63;
    swift_retain_n();
    WKWallpaperRepresentingCollection.init(wallpaperCollectionIdentifier:displayName:previewWallpaperRepresenting:wallpapersShareBaseAppearance:hiddenFromPicker:disableRotation:wallpaperRepresentingCollection:downloadManager:)(v62, (uint64_t)&v85, 0, 0, 0, v67, (uint64_t *)&v82, 0);
    v1 = (char **)v81;
    v68 = *(_QWORD **)(v81 + 56);
    *(_QWORD *)(v81 + 56) = v82;
    v85 = v68;
    sub_1B8CC7FA0(&v85);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_32:
    swift_release();
    swift_release();
    goto LABEL_33;
  }
  v55 = 0;
  v1 = &selRef_lowercaseString;
  while (1)
  {
    v56 = objc_msgSend(v52, sel_wallpaperCollectionAtIndex_, v55);
    type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = v56;
    if ((uint64_t)v55 >= (uint64_t)objc_msgSend(v52, sel_numberOfWallpaperCollections))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (!*(_QWORD *)(v81 + 48))
      break;
    swift_bridgeObjectRetain();
    v58 = v56;
    v59 = (void *)sub_1B8CE1494();
    v60 = objc_msgSend(v58, sel_containsWallpaperRepresentingWithIdentifier_, v59);
    swift_bridgeObjectRelease();

    if ((v60 & 1) != 0)
    {
      swift_release_n();
      v1 = (char **)v81;
      v69 = *(_QWORD **)(v81 + 56);
      *(_QWORD *)(v81 + 56) = v57;
      swift_retain();
      v85 = v69;
      sub_1B8CC7FA0(&v85);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_32;
    }
    ++v55;
    swift_release();
    if (v55 == objc_msgSend(v52, sel_numberOfWallpaperCollections))
      goto LABEL_30;
  }
  __break(1u);
}

uint64_t WKWallpaperPosterEditorController.__allocating_init(editor:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = sub_1B8CC6C14(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_QWORD *)(v2 + 200) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  return v2;
}

uint64_t WKWallpaperPosterEditorController.init(editor:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = sub_1B8CC6C14(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_QWORD *)(v1 + 200) = 0;
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t WKWallpaperPosterEditorController.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B8CC54C0(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(void **)(v0 + 128));

  swift_unknownObjectRelease();
  return v0;
}

uint64_t WKWallpaperPosterEditorController.__deallocating_deinit()
{
  WKWallpaperPosterEditorController.deinit();
  return swift_deallocClassInstance();
}

void WKWallpaperPosterEditorController.editor(_:didInitialize:with:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  sub_1B8CCC2BC(a2, a3, a4);
}

void WKWallpaperPosterEditorController.editor(_:didUpdate:with:using:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, void *a5)
{
  sub_1B8CCC750(a2, a3, a4, a5);
}

uint64_t sub_1B8CCACC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v0 = sub_1B8CE0EDC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED565028 != -1)
    swift_once();
  v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED56B878);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  swift_retain_n();
  v5 = sub_1B8CE0EC4();
  v6 = sub_1B8CE15CC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15 = v13;
    *(_DWORD *)v7 = 136446466;
    v8 = sub_1B8CE1944();
    v14 = sub_1B8CC4700(v8, v9, &v15);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    v14 = sub_1B8CC4700(0x6F6628736B6F6F6CLL, 0xEB00000000293A72, &v15);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v5, v6, "…Complete (%{public}s.%{public}s)", (uint8_t *)v7, 0x16u);
    v10 = v13;
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v10, -1, -1);
    MEMORY[0x1BCCB9588](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id sub_1B8CCAF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  objc_super v13;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC12WallpaperKitP33_EFDDAE94C6722FEA4441550D18B5A9BD21WKWallpaperPosterLook_identifier];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v9[OBJC_IVAR____TtC12WallpaperKitP33_EFDDAE94C6722FEA4441550D18B5A9BD21WKWallpaperPosterLook_displayName];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t WKWallpaperPosterEditorController.trailingMenuElements(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  if (qword_1ED565028 != -1)
    swift_once();
  v4 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v5 = sub_1B8CE0EC4();
  v6 = sub_1B8CE15CC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v18 = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_1B8CE1944();
    sub_1B8CC4700(v9, v10, &v18);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    sub_1B8CC4700(0xD00000000000001ALL, 0x80000001B8CEE2B0, &v18);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v5, v6, "Start (%{public}s.%{public}s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v8, -1, -1);
    MEMORY[0x1BCCB9588](v7, -1, -1);

    v11 = *(char **)(v2 + 184);
    if (!v11)
      goto LABEL_11;
  }
  else
  {

    swift_release_n();
    v11 = *(char **)(v2 + 184);
    if (!v11)
    {
LABEL_11:
      v16 = 0;
      goto LABEL_12;
    }
  }
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_wallpaperPosterLayerViewModel];
  swift_getKeyPath();
  v18 = v12;
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  v13 = v11;
  sub_1B8CE0E7C();
  swift_release();
  v14 = *(_QWORD *)(v12 + 16);
  if (!v14 || (objc_msgSend(*(id *)(v14 + 16), sel_isAppearanceAware) & 1) == 0)
  {

    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1B8CE5390;
  *(_QWORD *)(v15 + 32) = objc_msgSend(a1, sel_appearanceMenu);
  v18 = v15;
  sub_1B8CE153C();
  v16 = v18;

LABEL_12:
  sub_1B8CCBA98(v2, 0xD00000000000001ALL, 0x80000001B8CEE2B0);
  return v16;
}

uint64_t WKWallpaperPosterEditorController.leadingMenuElements(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = v1;
  if (qword_1ED565028 != -1)
    swift_once();
  v4 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v5 = sub_1B8CE0EC4();
  v6 = sub_1B8CE15CC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v19 = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_1B8CE1944();
    sub_1B8CC4700(v9, v10, &v19);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    sub_1B8CC4700(0xD000000000000019, 0x80000001B8CEE2D0, &v19);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v5, v6, "Start (%{public}s.%{public}s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v8, -1, -1);
    MEMORY[0x1BCCB9588](v7, -1, -1);

    v11 = *(char **)(v2 + 184);
    if (!v11)
      goto LABEL_10;
  }
  else
  {

    swift_release_n();
    v11 = *(char **)(v2 + 184);
    if (!v11)
    {
LABEL_10:
      v17 = 0;
      goto LABEL_11;
    }
  }
  v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_wallpaperPosterLayerViewModel];
  swift_getKeyPath();
  v19 = v12;
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  v13 = v11;
  sub_1B8CE0E7C();
  swift_release();
  v14 = swift_retain();
  v15 = sub_1B8CC7564(v14);
  swift_release();
  if ((v15 & 1) == 0)
  {

    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1B8CE5390;
  *(_QWORD *)(v16 + 32) = objc_msgSend(a1, sel_depthEffectMenu);
  v19 = v16;
  sub_1B8CE153C();
  v17 = v19;

LABEL_11:
  sub_1B8CCBA98(v2, 0xD000000000000019, 0x80000001B8CEE2D0);
  return v17;
}

void WKWallpaperPosterEditorController.editor(_:appearanceMenuDidChangeSelectedStyle:)(uint64_t a1, uint64_t a2)
{
  sub_1B8CCD748(a2);
}

void sub_1B8CCB5A4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (qword_1ED565028 != -1)
    swift_once();
  v0 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v1 = sub_1B8CE0EC4();
  v2 = sub_1B8CE15CC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    v7 = v4;
    *(_DWORD *)v3 = 136446722;
    v5 = sub_1B8CE1944();
    sub_1B8CC4700(v5, v6, &v7);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2082;
    sub_1B8CC4700(0xD00000000000002FLL, 0x80000001B8CEE5E0, &v7);
    sub_1B8CE1674();
    *(_WORD *)(v3 + 22) = 2048;
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v1, v2, "…Complete (%{public}s.%{public}s) userInterfaceStyle: '%ld'", (uint8_t *)v3, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v4, -1, -1);
    MEMORY[0x1BCCB9588](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

void WKWallpaperPosterEditorController.editor(_:populateViews:for:)(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B8CCD970(a2, a3);
}

void sub_1B8CCB7BC(uint64_t a1, void *a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED565028 != -1)
    swift_once();
  v3 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  swift_unknownObjectRetain_n();
  v4 = sub_1B8CE0EC4();
  v5 = sub_1B8CE15CC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136446722;
    v8 = sub_1B8CE1944();
    sub_1B8CC4700(v8, v9, &v15);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    v14 = sub_1B8CC4700(0xD00000000000001CLL, 0x80000001B8CEE5C0, &v15);
    sub_1B8CE1674();
    *(_WORD *)(v6 + 22) = 2082;
    v10 = objc_msgSend(a2, sel_identifier, v14, v15);
    v11 = sub_1B8CE14B8();
    v13 = v12;

    sub_1B8CC4700(v11, v13, &v15);
    sub_1B8CE1674();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B8C64000, v4, v5, "…Complete (%{public}s.%{public}s) look: '%{public}s'", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v7, -1, -1);
    MEMORY[0x1BCCB9588](v6, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_release_n();
  }
}

void WKWallpaperPosterEditorController.editor(_:didFinishTransitionTo:)(uint64_t a1, void *a2)
{
  sub_1B8CCDECC(a2);
}

uint64_t WKWallpaperPosterEditorController.editorFinalize(_:with:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EF1D4488 + dword_1EF1D4488);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B8C95B24;
  return v3();
}

void sub_1B8CCBA98(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (qword_1ED565028 != -1)
    swift_once();
  v5 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v6 = sub_1B8CE0EC4();
  v7 = sub_1B8CE15CC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v12 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = sub_1B8CE1944();
    sub_1B8CC4700(v10, v11, &v12);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    sub_1B8CC4700(a2, a3, &v12);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v6, v7, "…Complete (%{public}s.%{public}s)", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v9, -1, -1);
    MEMORY[0x1BCCB9588](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

void sub_1B8CCBC78(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  sub_1B8CCC2BC(a2, a3, a4);
}

void sub_1B8CCBC88(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, void *a5)
{
  sub_1B8CCC750(a2, a3, a4, a5);
}

void sub_1B8CCBCB0(uint64_t a1, uint64_t a2)
{
  sub_1B8CCD748(a2);
}

void sub_1B8CCBCB8(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1B8CCD970(a2, a3);
}

void sub_1B8CCBCC4(uint64_t a1, void *a2)
{
  sub_1B8CCDECC(a2);
}

uint64_t sub_1B8CCBCD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EF1D4488 + dword_1EF1D4488);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1B8C95B6C;
  return v3();
}

id sub_1B8CCBEE4()
{
  void *v0;

  swift_bridgeObjectRetain();
  v0 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B8CCBF38(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v6 = sub_1B8CE14B8();
  v7 = (uint64_t *)(a1 + *a4);
  *v7 = v6;
  v7[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8CCBFE0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1ED565030 != -1)
    swift_once();
  v0 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED56B890);
  v1 = sub_1B8CE0EC4();
  v2 = sub_1B8CE15CC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1B8C64000, v1, v2, "Editor will start rotation.", v3, 2u);
    MEMORY[0x1BCCB9588](v3, -1, -1);
  }

  return 1;
}

void sub_1B8CCC0B0()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1ED565030 != -1)
    swift_once();
  v0 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED56B890);
  oslog = sub_1B8CE0EC4();
  v1 = sub_1B8CE15CC();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1B8C64000, oslog, v1, "Editor did complete rotation.", v2, 2u);
    MEMORY[0x1BCCB9588](v2, -1, -1);
  }

}

uint64_t sub_1B8CCC17C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1B8CCC1A4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_1B8CCC22C(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  id v7;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v6 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * a2);
    *result = v6;
    swift_bridgeObjectRetain();
    v7 = v6;
    return (_QWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1B8CCC2BC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[15];

  v4 = v3;
  v33 = *a3;
  v32 = a3[8];
  v31 = a3[24];
  v27 = *((_QWORD *)a3 + 4);
  v28 = *((_QWORD *)a3 + 2);
  v30 = a3[40];
  v26 = *((_QWORD *)a3 + 6);
  v36 = (void *)*((_QWORD *)a3 + 7);
  v29 = *((_OWORD *)a3 + 5);
  v34 = *((_OWORD *)a3 + 6);
  v35 = *((_OWORD *)a3 + 4);
  if (qword_1ED565028 != -1)
    swift_once();
  v37 = a2;
  v38 = a1;
  v7 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v8 = sub_1B8CE0EC4();
  v9 = sub_1B8CE15CC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v49[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = sub_1B8CE1944();
    sub_1B8CC4700(v12, v13, v49);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    sub_1B8CC4700(0xD00000000000001DLL, 0x80000001B8CEE6A0, v49);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v8, v9, "Start (%{public}s.%{public}s)…", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v11, -1, -1);
    MEMORY[0x1BCCB9588](v10, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = v4[10];
  v45 = v4[9];
  v15 = v4[11];
  v43 = v4[13];
  v44 = v4[12];
  v41 = v4[15];
  v42 = v4[14];
  v25 = v4[17];
  v16 = v4[18];
  v39 = v4[19];
  v40 = (void *)v4[16];
  v46 = v4[20];
  v47 = v4[21];
  v48 = v4[22];
  v4[9] = v33;
  v4[10] = v32;
  v4[11] = v28;
  v4[12] = v31;
  v4[13] = v27;
  v4[14] = v30;
  v4[15] = v26;
  v4[16] = v36;
  *(_OWORD *)(v4 + 17) = v35;
  *(_OWORD *)(v4 + 19) = v29;
  *(_OWORD *)(v4 + 21) = v34;
  swift_retain();
  v17 = v36;
  sub_1B8CCF504(v45, v14, v15, v44, v43, v42, v41, v40);
  sub_1B8CC54C0(v45, v14, v15, v44, v43, v42, v41, v40);
  v49[0] = v45;
  v49[1] = v14;
  v49[2] = v15;
  v49[3] = v44;
  v49[4] = v43;
  v49[5] = v42;
  v49[6] = v41;
  v49[7] = (uint64_t)v40;
  v49[8] = v25;
  v49[9] = v16;
  v49[10] = v39;
  v49[11] = v46;
  v49[12] = v47;
  v49[13] = v48;
  sub_1B8CC8EBC(v49);
  sub_1B8CC54C0(v45, v14, v15, v44, v43, v42, v41, v40);
  v19 = v4[24];
  v18 = v4[25];
  v4[24] = v38;
  v4[25] = v37;
  swift_unknownObjectRetain_n();
  sub_1B8CC97F4(v19, v18);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v20 = v4[3];
  if (v20)
  {
    *(_QWORD *)(v20 + OBJC_IVAR____TtC12WallpaperKit24WKDynamicRotationManager_delegate + 8) = &off_1E6EF8428;
    swift_unknownObjectWeakAssign();
    if (v4[3])
    {
      ObjectType = swift_getObjectType();
      v22 = *(_QWORD *)(v37 + 8);
      v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
      swift_retain();
      v24 = v23(ObjectType, v22);
      sub_1B8CAD440(v24);
      swift_release();
    }
  }
  sub_1B8CCBA98((uint64_t)v4, 0xD00000000000001DLL, 0x80000001B8CEE6A0);
}

void sub_1B8CCC750(uint64_t a1, uint64_t a2, unsigned __int8 *a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  uint64_t v37;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[15];

  v5 = v4;
  v33 = *a3;
  v32 = a3[8];
  v31 = a3[24];
  v27 = *((_QWORD *)a3 + 4);
  v28 = *((_QWORD *)a3 + 2);
  v30 = a3[40];
  v26 = *((_QWORD *)a3 + 6);
  v36 = (void *)*((_QWORD *)a3 + 7);
  v29 = *((_OWORD *)a3 + 5);
  v34 = *((_OWORD *)a3 + 6);
  v35 = *((_OWORD *)a3 + 4);
  if (qword_1ED565028 != -1)
    swift_once();
  v37 = a2;
  v7 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v8 = sub_1B8CE0EC4();
  v9 = sub_1B8CE15CC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v49[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = sub_1B8CE1944();
    sub_1B8CC4700(v12, v13, v49);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    sub_1B8CC4700(0xD00000000000001FLL, 0x80000001B8CEE680, v49);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v8, v9, "Start (%{public}s.%{public}s)…", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v11, -1, -1);
    MEMORY[0x1BCCB9588](v10, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = v5[10];
  v45 = v5[9];
  v15 = v5[11];
  v43 = v5[13];
  v44 = v5[12];
  v41 = v5[15];
  v42 = v5[14];
  v25 = v5[17];
  v16 = v5[18];
  v39 = v5[19];
  v40 = (void *)v5[16];
  v46 = v5[20];
  v47 = v5[21];
  v48 = v5[22];
  v5[9] = v33;
  v5[10] = v32;
  v5[11] = v28;
  v5[12] = v31;
  v5[13] = v27;
  v5[14] = v30;
  v5[15] = v26;
  v5[16] = v36;
  *(_OWORD *)(v5 + 17) = v35;
  *(_OWORD *)(v5 + 19) = v29;
  *(_OWORD *)(v5 + 21) = v34;
  swift_retain();
  v17 = v36;
  sub_1B8CCF504(v45, v14, v15, v44, v43, v42, v41, v40);
  sub_1B8CC54C0(v45, v14, v15, v44, v43, v42, v41, v40);
  v49[0] = v45;
  v49[1] = v14;
  v49[2] = v15;
  v49[3] = v44;
  v49[4] = v43;
  v49[5] = v42;
  v49[6] = v41;
  v49[7] = (uint64_t)v40;
  v49[8] = v25;
  v49[9] = v16;
  v49[10] = v39;
  v49[11] = v46;
  v49[12] = v47;
  v49[13] = v48;
  sub_1B8CC8EBC(v49);
  sub_1B8CC54C0(v45, v14, v15, v44, v43, v42, v41, v40);
  v19 = v5[24];
  v18 = v5[25];
  v5[24] = a1;
  v5[25] = v37;
  swift_unknownObjectRetain_n();
  sub_1B8CC97F4(v19, v18);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v5[3])
  {
    ObjectType = swift_getObjectType();
    v21 = *(_QWORD *)(v37 + 8);
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    swift_retain();
    v23 = v22(ObjectType, v21);
    sub_1B8CADA48(v23, a4);
    swift_release();
  }
  sub_1B8CCBA98((uint64_t)v5, 0xD00000000000001FLL, 0x80000001B8CEE680);
}

uint64_t _s12WallpaperKit33WKWallpaperPosterEditorControllerC5looks3forSaySo0cD11EditingLook_pGSo0cdE0_p_tF_0()
{
  char **v0;
  char **v1;
  char **v2;
  void (**v3)(char *, uint64_t, char **);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, char **);
  int64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  objc_class *v31;
  char *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  objc_class *v43;
  char *v44;
  char *v45;
  uint64_t *v46;
  uint64_t result;
  void (**v48)(char *, uint64_t, char **);
  char **v49;
  objc_super v50;
  id v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  __int128 v55[2];
  uint64_t v56;
  uint64_t v57;
  objc_super v58;

  v1 = v0;
  v2 = (char **)sub_1B8CE0EDC();
  v3 = (void (**)(char *, uint64_t, char **))*(v2 - 1);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED565028 != -1)
    goto LABEL_21;
  while (1)
  {
    v6 = __swift_project_value_buffer((uint64_t)v2, (uint64_t)qword_1ED56B878);
    v3[2](v5, v6, v2);
    swift_retain_n();
    v7 = sub_1B8CE0EC4();
    v8 = sub_1B8CE15CC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v49 = v1;
      v11 = v10;
      *(_QWORD *)&v55[0] = v10;
      *(_DWORD *)v9 = 136446466;
      v12 = sub_1B8CE1944();
      v52[0] = sub_1B8CC4700(v12, v13, (uint64_t *)v55);
      sub_1B8CE1674();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2082;
      v52[0] = sub_1B8CC4700(0x6F6628736B6F6F6CLL, 0xEB00000000293A72, (uint64_t *)v55);
      sub_1B8CE1674();
      _os_log_impl(&dword_1B8C64000, v7, v8, "Start (%{public}s.%{public}s)…", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      v14 = v11;
      v1 = v49;
      MEMORY[0x1BCCB9588](v14, -1, -1);
      MEMORY[0x1BCCB9588](v9, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    ((void (*)(char *, char **))v3[1])(v5, v2);
    v3 = (void (**)(char *, uint64_t, char **))v1[7];
    if (!v3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED5655F0);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1B8CE5390;
      v37 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v38 = (void *)sub_1B8CE1494();
      v39 = objc_msgSend(v37, sel_localizedStringForKey_value_table_, v38, 0, 0);

      v40 = sub_1B8CE14B8();
      v42 = v41;

      v43 = (objc_class *)type metadata accessor for WKWallpaperPosterLook();
      v44 = (char *)objc_allocWithZone(v43);
      v45 = &v44[OBJC_IVAR____TtC12WallpaperKitP33_EFDDAE94C6722FEA4441550D18B5A9BD21WKWallpaperPosterLook_identifier];
      *(_QWORD *)v45 = 0xD000000000000018;
      *((_QWORD *)v45 + 1) = 0x80000001B8CEE640;
      v46 = (uint64_t *)&v44[OBJC_IVAR____TtC12WallpaperKitP33_EFDDAE94C6722FEA4441550D18B5A9BD21WKWallpaperPosterLook_displayName];
      *v46 = v40;
      v46[1] = v42;
      v58.receiver = v44;
      v58.super_class = v43;
      *(_QWORD *)(v36 + 32) = objc_msgSendSuper2(&v58, sel_init);
      *(_QWORD *)&v55[0] = v36;
      sub_1B8CE153C();
      v35 = *(_QWORD *)&v55[0];
LABEL_18:
      sub_1B8CCACC0();
      return v35;
    }
    v15 = v3[2];
    swift_retain();
    v2 = &selRef_lowercaseString;
    v16 = (int64_t)objc_msgSend(v15, sel_numberOfWallpapers);
    if (((unint64_t)objc_msgSend(v15, sel_numberOfWallpapers) & 0x8000000000000000) != 0)
      break;
    v17 = objc_msgSend(v15, sel_numberOfWallpapers);
    if (v16 < 0 || (uint64_t)v17 < v16)
      goto LABEL_23;
    if (!v16)
    {
      swift_release();
      v35 = MEMORY[0x1E0DEE9D8];
      goto LABEL_18;
    }
    v48 = v3;
    v49 = v1;
    v57 = MEMORY[0x1E0DEE9D8];
    v5 = (char *)&v57;
    sub_1B8CE1764();
    v18 = 0;
    while (v16 != v18)
    {
      v1 = v2;
      v51 = objc_msgSend(v15, sel_wallpaperBundleAtIndex_, v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5670D0);
      if (!swift_dynamicCast())
        goto LABEL_24;
      sub_1B8C8A344(v55, (uint64_t)v52);
      v19 = v53;
      v20 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 8))(v55, v19, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      sub_1B8C8A344(v55, (uint64_t)v52);
      v21 = v53;
      v22 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 48))(v21, v22);
      v25 = v24;
      v26 = v53;
      v27 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
      v30 = v29;
      v31 = (objc_class *)type metadata accessor for WKWallpaperPosterLook();
      v32 = (char *)objc_allocWithZone(v31);
      v33 = (uint64_t *)&v32[OBJC_IVAR____TtC12WallpaperKitP33_EFDDAE94C6722FEA4441550D18B5A9BD21WKWallpaperPosterLook_identifier];
      *v33 = v23;
      v33[1] = v25;
      v34 = (uint64_t *)&v32[OBJC_IVAR____TtC12WallpaperKitP33_EFDDAE94C6722FEA4441550D18B5A9BD21WKWallpaperPosterLook_displayName];
      *v34 = v28;
      v34[1] = v30;
      v50.receiver = v32;
      v50.super_class = v31;
      v3 = (void (**)(char *, uint64_t, char **))objc_msgSendSuper2(&v50, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      v5 = (char *)&v57;
      sub_1B8CE174C();
      sub_1B8CE1770();
      sub_1B8CE177C();
      sub_1B8CE1758();
      v2 = v1;
      if (v18 >= (uint64_t)objc_msgSend(v15, (SEL)v1 + 761))
        goto LABEL_20;
      if (v16 == ++v18)
      {
        v35 = v57;
        swift_release();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    swift_once();
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  v56 = 0;
  memset(v55, 0, sizeof(v55));
  sub_1B8C88430((uint64_t)v55, (uint64_t *)&unk_1EF1D4270);
  result = sub_1B8CE17D0();
  __break(1u);
  return result;
}

_QWORD *_s12WallpaperKit33WKWallpaperPosterEditorControllerC21initialLookIdentifier3forSSSo0cdE0_p_tF_0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *result;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28[3];

  v1 = v0;
  if (qword_1ED565028 != -1)
    swift_once();
  v2 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v3 = sub_1B8CE0EC4();
  v4 = sub_1B8CE15CC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v28[0] = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = sub_1B8CE1944();
    sub_1B8CC4700(v7, v8, v28);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_1B8CC4700(0xD00000000000001BLL, 0x80000001B8CEE660, v28);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v3, v4, "Start (%{public}s.%{public}s)…", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v6, -1, -1);
    MEMORY[0x1BCCB9588](v5, -1, -1);

    v9 = v1[6];
    if (v9)
    {
LABEL_5:
      v10 = v1[5];
      swift_beginAccess();
      v11 = v1[4];
      v12 = *(_QWORD *)(v11 + 16);
      swift_bridgeObjectRetain();
      if (v12)
      {
        swift_bridgeObjectRetain();
        v13 = sub_1B8C9C770(v10, v9);
        if ((v14 & 1) != 0)
        {
          v15 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v13);
          v16 = v15;
        }
        else
        {
          v15 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = 0;
      }
      swift_endAccess();
      v27 = (void *)v1[23];
      v1[23] = (uint64_t)v15;
      v26 = v15;
      sub_1B8CC95A4((uint64_t)v27);

      goto LABEL_17;
    }
  }
  else
  {

    swift_release_n();
    v9 = v1[6];
    if (v9)
      goto LABEL_5;
  }
  swift_beginAccess();
  v17 = v1[4];
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v10 = 0xD000000000000018;
    goto LABEL_18;
  }
  result = sub_1B8CC7058(v17);
  if (v20)
  {
    v21 = v19;
    swift_bridgeObjectRelease();
    v22 = (void *)v1[23];
    v1[23] = (uint64_t)v21;
    v23 = v21;
    sub_1B8CC95A4((uint64_t)v22);

    result = sub_1B8CC7058(v1[4]);
    if (v25)
    {
      v10 = (uint64_t)result;
      v26 = v24;
LABEL_17:

LABEL_18:
      sub_1B8CCBA98((uint64_t)v1, 0xD00000000000001BLL, 0x80000001B8CEE660);
      return (_QWORD *)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s12WallpaperKit33WKWallpaperPosterEditorControllerC29activeAppearanceMenuSelection3forSo20UIUserInterfaceStyleVSo0cdE0_p_tF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  if (qword_1ED565028 != -1)
    swift_once();
  v2 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v3 = sub_1B8CE0EC4();
  v4 = sub_1B8CE15CC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = sub_1B8CE1944();
    sub_1B8CC4700(v7, v8, &v11);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_1B8CC4700(0xD000000000000023, 0x80000001B8CEE610, &v11);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v3, v4, "Start (%{public}s.%{public}s)…", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v6, -1, -1);
    MEMORY[0x1BCCB9588](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v9 = *(_QWORD *)(v1 + 64);
  sub_1B8CCBA98(v1, 0xD000000000000023, 0x80000001B8CEE610);
  return v9;
}

void sub_1B8CCD748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  if (qword_1ED565028 != -1)
    swift_once();
  v4 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v5 = sub_1B8CE0EC4();
  v6 = sub_1B8CE15CC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446722;
    v9 = sub_1B8CE1944();
    sub_1B8CC4700(v9, v10, &v12);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    sub_1B8CC4700(0xD00000000000002FLL, 0x80000001B8CEE5E0, &v12);
    sub_1B8CE1674();
    *(_WORD *)(v7 + 22) = 2048;
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v5, v6, "Start (%{public}s.%{public}s) userInterfaceStyle: '%ld'…", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v8, -1, -1);
    MEMORY[0x1BCCB9588](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v11 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = a1;
  sub_1B8CC8AE0(v11);
  sub_1B8CCB5A4();
}

void sub_1B8CCD970(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  char **v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  os_log_type_t type;
  uint64_t v45;
  uint64_t v46[3];

  v3 = v2;
  if (qword_1ED565028 != -1)
    swift_once();
  v5 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  swift_unknownObjectRetain_n();
  v6 = sub_1B8CE0EC4();
  v7 = sub_1B8CE15CC();
  v8 = &_OBJC___PROTOCOL_METHOD_TYPES_NSCopying_17;
  if (os_log_type_enabled(v6, v7))
  {
    v9 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    v46[0] = v45;
    *(_DWORD *)v9 = 136446722;
    v10 = sub_1B8CE1944();
    sub_1B8CC4700(v10, v11, v46);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    type = v7;
    *(_WORD *)(v9 + 12) = 2082;
    sub_1B8CC4700(0xD00000000000001CLL, 0x80000001B8CEE5C0, v46);
    sub_1B8CE1674();
    *(_WORD *)(v9 + 22) = 2082;
    v12 = objc_msgSend(a2, sel_identifier);
    v13 = sub_1B8CE14B8();
    v15 = v14;

    sub_1B8CC4700(v13, v15, v46);
    v8 = &_OBJC___PROTOCOL_METHOD_TYPES_NSCopying_17;
    sub_1B8CE1674();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B8C64000, v6, type, "Start (%{public}s.%{public}s) look: '%{public}s'…", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v45, -1, -1);
    MEMORY[0x1BCCB9588](v9, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_release_n();
  }
  v16 = objc_msgSend(a2, v8[460]);
  v17 = sub_1B8CE14B8();
  v19 = v18;

  swift_beginAccess();
  v20 = *(_QWORD *)(v3 + 32);
  if (!*(_QWORD *)(v20 + 16) || (v21 = sub_1B8C9C770(v17, v19), (v22 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_unknownObjectRetain_n();
    v33 = sub_1B8CE0EC4();
    v34 = sub_1B8CE15CC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v46[0] = v36;
      *(_DWORD *)v35 = 136446210;
      v37 = objc_msgSend(a2, v8[460]);
      v38 = v3;
      v39 = a2;
      v40 = sub_1B8CE14B8();
      v42 = v41;

      v43 = v40;
      a2 = v39;
      v3 = v38;
      sub_1B8CC4700(v43, v42, v46);
      sub_1B8CE1674();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B8C64000, v33, v34, "No 'wallpaperPosterEditorLookItem' found for look: '%{public}s'", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v36, -1, -1);
      MEMORY[0x1BCCB9588](v35, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    goto LABEL_15;
  }
  v23 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * v21);
  swift_endAccess();
  v24 = v23;
  swift_bridgeObjectRelease();
  v25 = swift_unknownObjectRetain();
  sub_1B8C93598(v25);
  v26 = OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_views;
  v27 = *(void **)&v24[OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_views];
  if (!v27)
  {
    __break(1u);
    goto LABEL_17;
  }
  v28 = objc_msgSend(v27, sel_backgroundView);
  objc_msgSend(v28, sel_setOverrideUserInterfaceStyle_, *(_QWORD *)(v3 + 64));

  v29 = *(void **)&v24[v26];
  if (!v29)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v30 = objc_msgSend(v29, sel_foregroundView);
  objc_msgSend(v30, sel_setOverrideUserInterfaceStyle_, *(_QWORD *)(v3 + 64));

  v31 = *(void **)&v24[v26];
  if (v31)
  {
    v32 = objc_msgSend(v31, sel_floatingView);
    objc_msgSend(v32, sel_setOverrideUserInterfaceStyle_, *(_QWORD *)(v3 + 64));

LABEL_15:
    sub_1B8CCB7BC(v3, a2);
    return;
  }
LABEL_18:
  __break(1u);
}

void sub_1B8CCDECC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23[3];

  v2 = v1;
  if (qword_1ED565028 != -1)
    swift_once();
  v4 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v5 = sub_1B8CE0EC4();
  v6 = sub_1B8CE15CC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v23[0] = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_1B8CE1944();
    sub_1B8CC4700(v9, v10, v23);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    v22 = sub_1B8CC4700(0xD000000000000020, 0x80000001B8CEE590, v23);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v5, v6, "Start (%{public}s.%{public}s)…", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v8, -1, -1);
    MEMORY[0x1BCCB9588](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v11 = objc_msgSend(a1, sel_identifier, v22, v23[0]);
  v12 = sub_1B8CE14B8();
  v14 = v13;

  swift_beginAccess();
  v15 = *(_QWORD *)(v2 + 32);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_1B8C9C770(v12, v14), (v17 & 1) != 0))
  {
    v18 = *(void **)(*(_QWORD *)(v15 + 56) + 8 * v16);
    v19 = v18;
  }
  else
  {
    v18 = 0;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  v20 = *(void **)(v2 + 184);
  *(_QWORD *)(v2 + 184) = v18;
  v21 = v18;
  sub_1B8CC95A4((uint64_t)v20);

  sub_1B8CCBA98(v2, 0xD000000000000020, 0x80000001B8CEE590);
}

uint64_t _s12WallpaperKit33WKWallpaperPosterEditorControllerC19timeScrollsWithLook3forSbSo0cdE0_p_tF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = v0;
  if (qword_1ED565028 != -1)
    swift_once();
  v2 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v3 = sub_1B8CE0EC4();
  v4 = sub_1B8CE15CC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = sub_1B8CE1944();
    sub_1B8CC4700(v7, v8, &v10);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_1B8CC4700(0xD000000000000019, 0x80000001B8CEE570, &v10);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v3, v4, "Start (%{public}s.%{public}s)…", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v6, -1, -1);
    MEMORY[0x1BCCB9588](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  sub_1B8CCBA98(v1, 0xD000000000000019, 0x80000001B8CEE570);
  return 0;
}

uint64_t sub_1B8CCE378()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[59] = v0;
  v2 = sub_1B8CE0E1C();
  v1[60] = v2;
  v1[61] = *(_QWORD *)(v2 - 8);
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B8CCE3E8()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(_QWORD, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  void (*v70)(_QWORD, _QWORD);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76[2];

  if (qword_1ED565028 != -1)
    swift_once();
  v1 = (uint64_t *)(v0 + 440);
  v2 = (_QWORD *)(v0 + 448);
  v3 = (uint64_t *)(v0 + 464);
  v4 = (uint64_t *)(v0 + 472);
  v5 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v6 = sub_1B8CE0EC4();
  v7 = sub_1B8CE15CC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v73 = v0;
    v9 = swift_slowAlloc();
    v76[0] = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = sub_1B8CE1944();
    *v3 = sub_1B8CC4700(v10, v11, v76);
    sub_1B8CE1674();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2082;
    *v1 = sub_1B8CC4700(0xD000000000000017, 0x80000001B8CEE550, v76);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v6, v7, "Start (%{public}s.%{public}s)…", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    v12 = v9;
    v0 = v73;
    MEMORY[0x1BCCB9588](v12, -1, -1);
    MEMORY[0x1BCCB9588](v8, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v13 = v4;
  v14 = v2;
  v15 = *(char **)(*v4 + 184);
  if (!v15)
  {
    v25 = sub_1B8CE0EC4();
    v26 = sub_1B8CE15B4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v76[0] = v28;
      *(_DWORD *)v27 = 136446210;
      *(_QWORD *)(v0 + 456) = sub_1B8CC4700(0xD00000000000001FLL, 0x80000001B8CEE510, v76);
      sub_1B8CE1674();
      _os_log_impl(&dword_1B8C64000, v25, v26, "Could not find '%{public}s' to finalize editor session", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v28, -1, -1);
      MEMORY[0x1BCCB9588](v27, -1, -1);
    }

    v29 = sub_1B8CE0EC4();
    v30 = sub_1B8CE15C0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v76[0] = v32;
      *(_DWORD *)v31 = 136446210;
      *(_QWORD *)(v0 + 400) = sub_1B8CC4700(0xD00000000000001FLL, 0x80000001B8CEE510, v76);
      sub_1B8CE1674();
      _os_log_impl(&dword_1B8C64000, v29, v30, "Could not find '%{public}s' to finalize editor session", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v32, -1, -1);
      MEMORY[0x1BCCB9588](v31, -1, -1);
    }

    goto LABEL_30;
  }
  v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC12WallpaperKit31WKWallpaperPosterEditorLookItem_wallpaperPosterLayerViewModel];
  swift_getKeyPath();
  *v14 = v16;
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  v17 = v15;
  sub_1B8CE0E7C();
  result = swift_release();
  v19 = *(_QWORD *)(v16 + 16);
  if (!v19)
  {
    v33 = sub_1B8CE0EC4();
    v34 = sub_1B8CE15B4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v76[0] = v36;
      *(_DWORD *)v35 = 136446210;
      *(_QWORD *)(v0 + 432) = sub_1B8CC4700(0xD000000000000011, 0x80000001B8CEE530, v76);
      sub_1B8CE1674();
      _os_log_impl(&dword_1B8C64000, v33, v34, "Could not find '%{public}s' to finalize editor session.", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v36, -1, -1);
      MEMORY[0x1BCCB9588](v35, -1, -1);
    }

    v37 = sub_1B8CE0EC4();
    v38 = sub_1B8CE15C0();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v76[0] = v40;
      *(_DWORD *)v39 = 136446210;
      *(_QWORD *)(v0 + 408) = sub_1B8CC4700(0xD000000000000011, 0x80000001B8CEE530, v76);
      sub_1B8CE1674();
      _os_log_impl(&dword_1B8C64000, v37, v38, "Could not find '%{public}s' to finalize editor session.", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v40, -1, -1);
      MEMORY[0x1BCCB9588](v39, -1, -1);

    }
    else
    {

    }
    goto LABEL_30;
  }
  v20 = *v13;
  if (!*(_QWORD *)(*v13 + 192))
  {
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v21 = *(_QWORD *)(v20 + 200);
  ObjectType = swift_getObjectType();
  v23 = *(_QWORD *)(v21 + 8);
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v41 = v24(ObjectType, v23);
  result = swift_unknownObjectRelease();
  v75 = v19;
  v76[0] = v19;
  if (!*(_QWORD *)(v20 + 192))
    goto LABEL_32;
  v42 = *(_QWORD *)(v20 + 200);
  v43 = swift_getObjectType();
  v44 = *(void (**)(uint64_t, uint64_t))(v42 + 16);
  swift_unknownObjectRetain();
  v44(v43, v42);
  swift_unknownObjectRelease();
  WKWallpaperBundle.copyWallpaperRepresenting(to:)();
  v74 = v17;
  v45 = *(_QWORD *)(v0 + 472);
  v46 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 488) + 8);
  v46(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 480));
  v72 = sub_1B8CE0DE0();
  v48 = v47;
  sub_1B8CE0D5C();
  swift_allocObject();
  sub_1B8CE0D50();
  v49 = *(_QWORD *)(v45 + 64);
  if (v49 == 2)
    v50 = 1;
  else
    v50 = 2;
  if (v49 == 1)
    v51 = 0;
  else
    v51 = v50;
  *(_BYTE *)(v0 + 512) = v51;
  sub_1B8CCF624();
  v70 = v46;
  v52 = sub_1B8CE0D44();
  *(_QWORD *)(v0 + 352) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 360) = 0x80000001B8CED410;
  v54 = v53;
  sub_1B8CE16EC();
  *(_QWORD *)(v0 + 256) = MEMORY[0x1E0CB0338];
  *(_QWORD *)(v0 + 232) = v52;
  *(_QWORD *)(v0 + 240) = v54;
  sub_1B8C8ECA4((_OWORD *)(v0 + 232), (_OWORD *)(v0 + 136));
  v71 = v52;
  sub_1B8CCF668(v52, v54);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v76[0] = v41;
  sub_1B8CA1040((_OWORD *)(v0 + 136), v0 + 56, isUniquelyReferenced_nonNull_native);
  v56 = v76[0];
  swift_bridgeObjectRelease();
  sub_1B8C97ADC(v0 + 56);
  *(_QWORD *)(v0 + 384) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 392) = 0x80000001B8CED430;
  v57 = MEMORY[0x1E0DEA968];
  sub_1B8CE16EC();
  *(_QWORD *)(v0 + 288) = v57;
  *(_QWORD *)(v0 + 264) = v72;
  *(_QWORD *)(v0 + 272) = v48;
  sub_1B8C8ECA4((_OWORD *)(v0 + 264), (_OWORD *)(v0 + 200));
  v58 = swift_isUniquelyReferenced_nonNull_native();
  v76[0] = v56;
  sub_1B8CA1040((_OWORD *)(v0 + 200), v0 + 16, v58);
  v59 = v76[0];
  swift_bridgeObjectRelease();
  sub_1B8C97ADC(v0 + 16);
  *(_QWORD *)(v0 + 368) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 376) = 0x80000001B8CED450;
  sub_1B8CE16EC();
  v60 = *(void **)(v75 + 16);
  swift_retain();
  v61 = objc_msgSend(v60, sel_identifierString);
  v62 = sub_1B8CE14B8();
  v64 = v63;

  swift_release();
  *(_QWORD *)(v0 + 192) = v57;
  *(_QWORD *)(v0 + 168) = v62;
  *(_QWORD *)(v0 + 176) = v64;
  sub_1B8C8ECA4((_OWORD *)(v0 + 168), (_OWORD *)(v0 + 296));
  v65 = swift_isUniquelyReferenced_nonNull_native();
  v76[0] = v59;
  sub_1B8CA1040((_OWORD *)(v0 + 296), v0 + 96, v65);
  v66 = v76[0];
  swift_bridgeObjectRelease();
  result = sub_1B8C97ADC(v0 + 96);
  if (*(_QWORD *)(v20 + 192))
  {
    v67 = *(_QWORD *)(v20 + 200);
    v68 = swift_getObjectType();
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 24);
    swift_unknownObjectRetain();
    v69(v66, v68, v67);
    v70(*(_QWORD *)(v0 + 504), *(_QWORD *)(v0 + 480));
    sub_1B8C97B54(v71, v54);
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();

LABEL_30:
    sub_1B8CCBA98(*(_QWORD *)(v0 + 472), 0xD000000000000017, 0x80000001B8CEE550);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_33:
  __break(1u);
  return result;
}

void _s12WallpaperKit33WKWallpaperPosterEditorControllerC19editorDidInvalidateyySo0cdE0_pF_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[14];
  uint64_t v30;

  v1 = v0;
  if (qword_1ED565028 != -1)
    swift_once();
  v2 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED56B878);
  swift_retain_n();
  v3 = sub_1B8CE0EC4();
  v4 = sub_1B8CE15CC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v29[0] = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = sub_1B8CE1944();
    v30 = sub_1B8CC4700(v7, v8, v29);
    sub_1B8CE1674();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    v30 = sub_1B8CC4700(0xD000000000000017, 0x80000001B8CEE4F0, v29);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v3, v4, "Start (%{public}s.%{public}s)…", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v6, -1, -1);
    MEMORY[0x1BCCB9588](v5, -1, -1);

    if (!v1[3])
      goto LABEL_8;
    goto LABEL_7;
  }

  swift_release_n();
  if (v1[3])
  {
LABEL_7:
    swift_retain();
    sub_1B8CAE280();
    swift_release();
  }
LABEL_8:
  swift_beginAccess();
  v1[4] = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  v10 = v1[24];
  v9 = v1[25];
  v1[24] = 0;
  v1[25] = 0;
  sub_1B8CC97F4(v10, v9);
  swift_unknownObjectRelease();
  v11 = v1[10];
  v12 = v1[11];
  v27 = v12;
  v28 = v1[12];
  v13 = v1[13];
  v14 = v1[14];
  v15 = v1[15];
  v26 = v15;
  v24 = v1[9];
  v25 = (void *)v1[16];
  v17 = v1[17];
  v16 = v1[18];
  v19 = v1[19];
  v18 = v1[20];
  v20 = v1[21];
  v21 = v1[22];
  *(_OWORD *)(v1 + 9) = 0u;
  *(_OWORD *)(v1 + 11) = 0u;
  *(_OWORD *)(v1 + 13) = 0u;
  *(_OWORD *)(v1 + 15) = 0u;
  *(_OWORD *)(v1 + 17) = 0u;
  *(_OWORD *)(v1 + 19) = 0u;
  *(_OWORD *)(v1 + 21) = 0u;
  v23 = v13;
  sub_1B8CCF504(v24, v11, v12, v28, v13, v14, v15, v25);
  sub_1B8CC54C0(v24, v11, v27, v28, v23, v14, v26, v25);
  v29[0] = v24;
  v29[1] = v11;
  v29[2] = v27;
  v29[3] = v28;
  v29[4] = v23;
  v29[5] = v14;
  v29[6] = v26;
  v29[7] = (uint64_t)v25;
  v29[8] = v17;
  v29[9] = v16;
  v29[10] = v19;
  v29[11] = v18;
  v29[12] = v20;
  v29[13] = v21;
  sub_1B8CC8EBC(v29);
  sub_1B8CC54C0(v24, v11, v27, v28, v23, v14, v26, v25);
  v22 = (void *)v1[23];
  v1[23] = 0;
  sub_1B8CC95A4((uint64_t)v22);

  sub_1B8CCBA98((uint64_t)v1, 0xD000000000000017, 0x80000001B8CEE4F0);
}

uint64_t type metadata accessor for WKWallpaperPosterEditorController()
{
  return objc_opt_self();
}

uint64_t method lookup function for WKWallpaperPosterEditorController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WKWallpaperPosterEditorController.__allocating_init(editor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t type metadata accessor for WKWallpaperPosterLook()
{
  return objc_opt_self();
}

id sub_1B8CCF504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id result;

  if (a8)
  {
    swift_retain();
    return a8;
  }
  return result;
}

uint64_t sub_1B8CCF534(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v8 = *(void **)(a1 + 168);
  sub_1B8CC54C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56));
  sub_1B8CC54C0(v10, v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1B8CCF60C()
{
  uint64_t v0;

  return sub_1B8CB5CA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1B8CCF624()
{
  unint64_t result;

  result = qword_1EF1D4518;
  if (!qword_1EF1D4518)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE5F40, &type metadata for WKPosterEnvironmentOverrides);
    atomic_store(result, (unint64_t *)&qword_1EF1D4518);
  }
  return result;
}

uint64_t sub_1B8CCF668(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1B8CCF6AC()
{
  return sub_1B8CC542C();
}

double sub_1B8CCF6C0(uint64_t a1)
{
  id v1;
  id v2;
  BOOL v3;
  double result;
  double v5;
  id v6;
  id v7;

  switch(a1)
  {
    case 2:
      return 180.0;
    case 3:
      v6 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v7 = objc_msgSend(v6, sel_userInterfaceLayoutDirection);

      v3 = v7 == (id)1;
      result = 90.0;
      v5 = 270.0;
      break;
    case 4:
      v1 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
      v2 = objc_msgSend(v1, sel_userInterfaceLayoutDirection);

      v3 = v2 == (id)1;
      result = 270.0;
      v5 = 90.0;
      break;
    default:
      return 0.0;
  }
  if (v3)
    return v5;
  return result;
}

double sub_1B8CCF7B4(uint64_t a1, unint64_t a2, double a3)
{
  double v6;
  _BOOL4 v7;
  id v8;
  id v9;

  v6 = sub_1B8CCF6C0(a2);
  switch(a1)
  {
    case 0:
    case 1:
      if (a2 != 4)
        goto LABEL_5;
      goto LABEL_3;
    case 2:
      if (a2 != 3)
        goto LABEL_5;
      goto LABEL_3;
    case 3:
      v7 = a2 > 1;
      break;
    case 4:
      if (a2 != 2)
        goto LABEL_5;
LABEL_3:
      v7 = 0;
      break;
    default:
LABEL_5:
      v7 = 1;
      break;
  }
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v9 = objc_msgSend(v8, sel_userInterfaceLayoutDirection);

  if (((v7 ^ (v9 != (id)1)) & 1) != 0 && v6 > a3)
    return a3 + 360.0;
  return a3;
}

uint64_t sub_1B8CCF8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(const __CFString *, uint64_t, uint64_t);
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  void (*v26)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  _QWORD *v37;
  char *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  const __CFString *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  uint64_t result;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  char isUniquelyReferenced_nonNull_native;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  char v70;
  uint64_t v71;
  void *v72;
  void *v73;
  void *v74;
  uint64_t v75;
  void (*v76)(char *, _QWORD, uint64_t, uint64_t);
  char *v77;
  char *v78;
  void (*v79)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t);
  char *v80;
  const __CFString *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD v87[3];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v5 = sub_1B8CE0E1C();
  v6 = *(_QWORD **)(v5 - 8);
  v84 = v5;
  v85 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v75 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v75 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v75 - v19;
  v21 = *(uint64_t (**)(const __CFString *, uint64_t, uint64_t))(a2 + 112);
  v86 = v2;
  v22 = a1;
  v23 = 0;
  if (v21(CFSTR("WKWallpaperLocationCoverSheet"), a1, a2))
    return (uint64_t)v23;
  v80 = v18;
  v24 = v84;
  v25 = v85;
  v77 = v12;
  v78 = v15;
  v82 = v8;
  v90 = MEMORY[0x1E0DEE9E0];
  v26 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))(a2 + 144);
  v81 = CFSTR("WKWallpaperLocationCoverSheet");
  v27 = v22;
  v28 = a2;
  v79 = (void (*)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t))v26;
  v26(v87, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("default"), v22, a2);
  v29 = v88;
  v83 = v20;
  if (v88)
  {
    v30 = v89;
    __swift_project_boxed_opaque_existential_1(v87, v88);
    v31 = *(void (**)(uint64_t, uint64_t))(v30 + 16);
    v32 = v30;
    v20 = v83;
    v31(v29, v32);
    v33 = v25;
    v34 = v24;
    v76 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v25[7];
    v76(v20, 0, 1, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
  }
  else
  {
    sub_1B8C88430((uint64_t)v87, &qword_1EF1D4530);
    v33 = v25;
    v34 = v24;
    v76 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v25[7];
    v76(v20, 1, 1, v24);
  }
  v35 = (uint64_t)v80;
  sub_1B8C84538((uint64_t)v20, (uint64_t)v80);
  v36 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v33[6];
  if (v36(v35, 1, v34) == 1)
  {
    v37 = 0;
  }
  else
  {
    v38 = v82;
    ((void (*)(char *, uint64_t, uint64_t))v33[4])(v82, v35, v34);
    v39 = (void *)objc_opt_self();
    v40 = (void *)sub_1B8CE0DEC();
    v37 = objc_msgSend(v39, sel_wk_imageWithContentsOfURL_, v40);

    ((void (*)(char *, uint64_t))v33[1])(v38, v34);
  }
  v41 = v28;
  v42 = v81;
  if (qword_1ED5657A0 != -1)
    swift_once();
  v43 = (void *)qword_1ED56B9D8;
  v85 = v37;
  if (v37)
  {
    v44 = v90;
    if ((v90 & 0xC000000000000001) != 0)
    {
      if (v90 >= 0)
        v44 = v90 & 0xFFFFFFFFFFFFFF8;
      v45 = v37;
      v46 = v43;
      result = sub_1B8CE17A0();
      if (__OFADD__(result, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      v44 = sub_1B8CD1414(v44, result + 1);
    }
    else
    {
      v45 = v37;
      v51 = v43;
    }
    v48 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v87[0] = v44;
    sub_1B8CA09A0((uint64_t)v45, v43, isUniquelyReferenced_nonNull_native);
    v90 = v87[0];

    swift_bridgeObjectRelease();
  }
  else
  {
    v48 = v27;
    v49 = (id)qword_1ED56B9D8;
    v50 = (void *)sub_1B8CD6BAC((unint64_t)v49);

  }
  v53 = v36;
  v79(v87, v42, CFSTR("dark"), v48, v41);
  v54 = v88;
  if (v88)
  {
    v55 = v89;
    __swift_project_boxed_opaque_existential_1(v87, v88);
    v56 = (uint64_t)v78;
    (*(void (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
    v76((char *)v56, 0, 1, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
  }
  else
  {
    sub_1B8C88430((uint64_t)v87, &qword_1EF1D4530);
    v56 = (uint64_t)v78;
    v76(v78, 1, 1, v34);
  }
  v57 = v82;
  v58 = (uint64_t)v77;
  sub_1B8C84538(v56, (uint64_t)v77);
  if (v53(v58, 1, v34) == 1)
  {
    v59 = 0;
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t))v33[4])(v57, v58, v34);
    v60 = (void *)objc_opt_self();
    v61 = (void *)sub_1B8CE0DEC();
    v59 = objc_msgSend(v60, sel_wk_imageWithContentsOfURL_, v61);

    ((void (*)(char *, uint64_t))v33[1])(v57, v34);
  }
  v62 = (uint64_t)v83;
  if (qword_1ED565798 != -1)
    swift_once();
  v63 = (void *)qword_1ED56B9D0;
  if (!v59)
  {
    v67 = (id)qword_1ED56B9D0;
    v68 = (void *)sub_1B8CD6BAC((unint64_t)v67);

    v65 = 0;
LABEL_36:
    v71 = objc_opt_self();
    sub_1B8C84230(0, &qword_1ED5657B0);
    sub_1B8C84230(0, (unint64_t *)&unk_1ED5674C0);
    sub_1B8C8A420();
    v72 = (void *)sub_1B8CE1440();
    swift_bridgeObjectRelease();
    v73 = (void *)v71;
    v74 = v85;
    v23 = objc_msgSend(v73, sel_wk_dynamicImageWithTraitCollectionToImageMap_baseImage_, v72, v85);

    sub_1B8C88430(v56, (uint64_t *)&unk_1ED565130);
    sub_1B8C88430(v62, (uint64_t *)&unk_1ED565130);
    return (uint64_t)v23;
  }
  v64 = v90;
  if ((v90 & 0xC000000000000001) == 0)
  {
    v65 = v59;
    v69 = v63;
    goto LABEL_35;
  }
  if (v90 >= 0)
    v64 = v90 & 0xFFFFFFFFFFFFFF8;
  v65 = v59;
  v66 = v63;
  result = sub_1B8CE17A0();
  if (!__OFADD__(result, 1))
  {
    v64 = sub_1B8CD1414(v64, result + 1);
LABEL_35:
    v70 = swift_isUniquelyReferenced_nonNull_native();
    v87[0] = v64;
    sub_1B8CA09A0((uint64_t)v65, v63, v70);
    v90 = v87[0];

    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_1B8CCFF8C(uint64_t a1, uint64_t a2)
{
  void (*v4)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v12[3];
  void *v13;
  uint64_t v14;

  v4 = *(void (**)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t))(a2 + 128);
  v4(v12, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("default"), a1, a2);
  v5 = v13;
  if (v13)
  {
    v6 = v14;
    __swift_project_boxed_opaque_existential_1(v12, (uint64_t)v13);
    v5 = (void *)(*(uint64_t (**)(void *, uint64_t))(v6 + 16))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_1B8C88430((uint64_t)v12, &qword_1ED567348);
  }
  v4(v12, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("dark"), a1, a2);
  v7 = (uint64_t)v13;
  if (v13)
  {
    v8 = v14;
    __swift_project_boxed_opaque_existential_1(v12, (uint64_t)v13);
    v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_1B8C88430((uint64_t)v12, &qword_1ED567348);
    v9 = 0;
  }
  v10 = objc_msgSend((id)objc_opt_self(), sel_wk_imageWithLightAppearanceImage_darkAppearanceImage_, v5, v9);

  return v10;
}

id sub_1B8CD00F8(uint64_t a1, uint64_t a2)
{
  return sub_1B8CD0138(a1, a2, (SEL *)&selRef_backgroundThumbnailImageURL);
}

void sub_1B8CD0104(void *a1, char a2)
{
  if (a2 != -1)
    sub_1B8C8846C(a1, a2);
}

id sub_1B8CD0118(id result, char a2)
{
  if (a2 != -1)
    return sub_1B8C8EA9C(result, a2);
  return result;
}

id sub_1B8CD012C(uint64_t a1, uint64_t a2)
{
  return sub_1B8CD0138(a1, a2, (SEL *)&selRef_foregroundThumbnailImageURL);
}

id sub_1B8CD0138(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(_QWORD **__return_ptr, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  void *v46;
  char v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  id v62;
  _QWORD *v63;
  char *v64;
  void *v65;
  char *v66;
  uint64_t v67;
  void *v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  id v79;
  char *v80;
  void *v81;
  void *v82;
  void *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  SEL *v94;
  _QWORD *v95;
  unsigned __int8 v96;
  _QWORD v97[3];
  uint64_t v98;
  uint64_t v99;

  v94 = a3;
  v5 = sub_1B8CE0E1C();
  v92 = *(_QWORD *)(v5 - 8);
  v93 = v5;
  MEMORY[0x1E0C80A78](v5);
  v90 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v8 = MEMORY[0x1E0C80A78](v7);
  v88 = (uint64_t)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v83 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v86 = (char *)&v83 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v89 = (uint64_t)&v83 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v83 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v84 = (char *)&v83 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v85 = (char *)&v83 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v83 - v25;
  MEMORY[0x1E0C80A78](v24);
  v91 = (char *)&v83 - v27;
  v28 = *(void (**)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t))(a2 + 160);
  v28(v97, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("default"), a1, a2);
  v29 = v98;
  v87 = v19;
  if (v98)
  {
    v30 = v99;
    __swift_project_boxed_opaque_existential_1(v97, v98);
    (*(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(v30 + 24))(&v95, v29, v30);
    v31 = v95;
    v32 = v96;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
  }
  else
  {
    sub_1B8C88430((uint64_t)v97, &qword_1EF1D4040);
    v31 = 0;
    v32 = 255;
  }
  v28(v97, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("dark"), a1, a2);
  v33 = v98;
  if (v98)
  {
    v34 = v31;
    v35 = v99;
    __swift_project_boxed_opaque_existential_1(v97, v98);
    v36 = *(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(v35 + 24);
    v37 = v35;
    v31 = v34;
    v36(&v95, v33, v37);
    v38 = v95;
    v39 = v96;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
    if (v32 != 255)
      goto LABEL_6;
LABEL_12:
    v46 = v31;
    v47 = -1;
LABEL_17:
    sub_1B8CD0104(v46, v47);
    sub_1B8CD0104(v38, v39);
    return 0;
  }
  sub_1B8C88430((uint64_t)v97, &qword_1EF1D4040);
  v38 = 0;
  v39 = 255;
  if (v32 == 255)
    goto LABEL_12;
LABEL_6:
  if (v32 != 1)
  {
    v46 = v31;
    v47 = v32;
    goto LABEL_17;
  }
  if (v39 == 255)
  {
    v48 = (void *)v31[2];
    v49 = v31;
    swift_retain_n();
    v50 = objc_msgSend(v48, *v94);
    v52 = v92;
    v51 = v93;
    if (v50)
    {
      v53 = v50;
      sub_1B8CE0E04();

      v54 = 0;
    }
    else
    {
      v54 = 1;
    }
    v73 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v12, v54, 1, v51);
    sub_1B8C8838C((uint64_t)v12, v73);
    sub_1B8CD0104(v49, 1);
    v74 = v88;
    sub_1B8C84538(v73, v88);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v74, 1, v51) != 1)
    {
      v75 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v90, v74, v51);
      v76 = (void *)objc_opt_self();
      v77 = (void *)sub_1B8CE0DEC();
      v55 = objc_msgSend(v76, sel_wk_imageWithContentsOfURL_, v77);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v75, v51);
      sub_1B8CD0104(v49, 1);
      sub_1B8CD0104(v49, 1);
      sub_1B8CD0104(v38, 255);
      sub_1B8C88430(v73, (uint64_t *)&unk_1ED565130);
      return v55;
    }
    sub_1B8CD0104(v49, 1);
    sub_1B8CD0104(v49, 1);
    sub_1B8CD0104(v38, 255);
    sub_1B8C88430(v73, (uint64_t *)&unk_1ED565130);
    return 0;
  }
  v41 = v92;
  v40 = v93;
  if (v39 != 1)
  {
    v46 = v31;
    v47 = 1;
    goto LABEL_17;
  }
  v42 = (void *)v31[2];
  sub_1B8C8EA9C(v31, 1);
  sub_1B8CD0118(v31, 1);
  sub_1B8CD0118(v38, 1);
  v43 = objc_msgSend(v42, *v94);
  if (v43)
  {
    v44 = v43;
    sub_1B8CE0E04();

    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
    v45(v26, 0, 1, v40);
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
    v45(v26, 1, 1, v40);
  }
  v57 = (uint64_t)v91;
  v58 = (uint64_t)v85;
  v59 = (void *)objc_opt_self();
  sub_1B8C8838C((uint64_t)v26, v57);
  sub_1B8CD0104(v31, 1);
  sub_1B8C84538(v57, v58);
  v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  v61 = v60(v58, 1, v40);
  v83 = v31;
  if (v61 == 1)
  {
    v62 = 0;
  }
  else
  {
    v63 = v38;
    v64 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v90, v58, v40);
    v65 = (void *)sub_1B8CE0DEC();
    v62 = objc_msgSend(v59, sel_wk_imageWithContentsOfURL_, v65);

    v57 = (uint64_t)v91;
    v66 = v64;
    v38 = v63;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v66, v40);
  }
  v67 = (uint64_t)v84;
  sub_1B8C88430(v57, (uint64_t *)&unk_1ED565130);
  v68 = (void *)v38[2];
  swift_retain();
  v69 = objc_msgSend(v68, *v94);
  if (v69)
  {
    v70 = v69;
    v71 = (uint64_t)v87;
    sub_1B8CE0E04();

    v72 = 0;
  }
  else
  {
    v72 = 1;
    v71 = (uint64_t)v87;
  }
  v45((char *)v71, v72, 1, v40);
  sub_1B8C8838C(v71, v67);
  sub_1B8CD0104(v38, 1);
  v78 = v89;
  sub_1B8C84538(v67, v89);
  if (v60(v78, 1, v40) == 1)
  {
    v79 = 0;
  }
  else
  {
    v80 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v90, v78, v40);
    v81 = (void *)sub_1B8CE0DEC();
    v79 = objc_msgSend(v59, sel_wk_imageWithContentsOfURL_, v81);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v80, v40);
  }
  sub_1B8C88430(v67, (uint64_t *)&unk_1ED565130);
  v55 = objc_msgSend(v59, sel_wk_imageWithLightAppearanceImage_darkAppearanceImage_, v62, v79);
  v82 = v83;
  sub_1B8CD0104(v83, 1);
  sub_1B8CD0104(v38, 1);

  sub_1B8CD0104(v82, 1);
  sub_1B8CD0104(v38, 1);

  return v55;
}

id sub_1B8CD08B8(uint64_t a1, uint64_t a2)
{
  return sub_1B8CD0138(a1, a2, (SEL *)&selRef_floatingThumbnailImageURL);
}

uint64_t sub_1B8CD08C4(uint64_t a1, uint64_t a2)
{
  return sub_1B8CD08DC(a1, a2, (SEL *)&selRef_backgroundFullSizeImageURL);
}

uint64_t sub_1B8CD08D0(uint64_t a1, uint64_t a2)
{
  return sub_1B8CD08DC(a1, a2, (SEL *)&selRef_foregroundFullSizeImageURL);
}

uint64_t sub_1B8CD08DC(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(_QWORD **__return_ptr, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  int v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  void *v45;
  char v46;
  void *v47;
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  id v58;
  char *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  void *v63;
  _QWORD *v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  char *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  id v85;
  char v86;
  void *v87;
  id v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  char *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  uint64_t v100;
  id v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  char isUniquelyReferenced_nonNull_native;
  void *v107;
  void *v108;
  void *v109;
  char v110;
  id v111;
  char v112;
  void *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  SEL *v123;
  uint64_t v124;
  _QWORD *v125;
  unsigned __int8 v126;
  _QWORD v127[3];
  uint64_t v128;
  uint64_t v129;

  v123 = a3;
  v122 = sub_1B8CE0E1C();
  v124 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v120 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v7 = MEMORY[0x1E0C80A78](v6);
  v117 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v114 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v118 = (char *)&v114 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v115 = (uint64_t)&v114 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v114 = (char *)&v114 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v119 = (char *)&v114 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v116 = (char *)&v114 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v114 - v23;
  MEMORY[0x1E0C80A78](v22);
  v121 = (uint64_t)&v114 - v25;
  v26 = *(void (**)(_QWORD *__return_ptr, const __CFString *, const __CFString *, uint64_t, uint64_t))(a2 + 160);
  v26(v127, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("default"), a1, a2);
  v27 = v128;
  if (v128)
  {
    v28 = v129;
    __swift_project_boxed_opaque_existential_1(v127, v128);
    (*(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(v28 + 24))(&v125, v27, v28);
    v29 = v125;
    v30 = v126;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v127);
  }
  else
  {
    sub_1B8C88430((uint64_t)v127, &qword_1EF1D4040);
    v29 = 0;
    v30 = 255;
  }
  v26(v127, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("dark"), a1, a2);
  v31 = v128;
  if (v128)
  {
    v32 = v29;
    v33 = v129;
    __swift_project_boxed_opaque_existential_1(v127, v128);
    v34 = *(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t))(v33 + 24);
    v35 = v33;
    v29 = v32;
    v34(&v125, v31, v35);
    v36 = v125;
    v37 = v126;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v127);
    if (v30 != 255)
      goto LABEL_6;
LABEL_12:
    v45 = v29;
    v46 = -1;
LABEL_17:
    sub_1B8CD0104(v45, v46);
    sub_1B8CD0104(v36, v37);
    return 0;
  }
  sub_1B8C88430((uint64_t)v127, &qword_1EF1D4040);
  v36 = 0;
  v37 = 255;
  if (v30 == 255)
    goto LABEL_12;
LABEL_6:
  if (v30 != 1)
  {
    v45 = v29;
    v46 = v30;
    goto LABEL_17;
  }
  if (v37 == 255)
  {
    v127[0] = MEMORY[0x1E0DEE9E0];
    v47 = (void *)v29[2];
    swift_retain_n();
    v48 = objc_msgSend(v47, *v123);
    v49 = v124;
    if (v48)
    {
      v50 = v48;
      sub_1B8CE0E04();

      v51 = 0;
    }
    else
    {
      v51 = 1;
    }
    v69 = v122;
    v70 = (uint64_t)v117;
    v71 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v11, v51, 1, v122);
    sub_1B8C8838C((uint64_t)v11, v71);
    sub_1B8CD0104(v29, 1);
    sub_1B8C84538(v71, v70);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v70, 1, v69) == 1)
    {
      v72 = 0;
    }
    else
    {
      v73 = v120;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v120, v70, v69);
      v74 = (void *)objc_opt_self();
      v75 = (void *)sub_1B8CE0DEC();
      v72 = objc_msgSend(v74, sel_wk_imageWithContentsOfURL_, v75);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v73, v69);
    }
    v76 = v29;
    sub_1B8C88430(v71, (uint64_t *)&unk_1ED565130);
    if (qword_1ED5657A0 != -1)
      swift_once();
    v77 = (void *)qword_1ED56B9D8;
    if (v72)
    {
      v78 = v127[0];
      if ((v127[0] & 0xC000000000000001) != 0)
      {
        if (v127[0] >= 0)
          v78 = v127[0] & 0xFFFFFFFFFFFFFF8;
        v79 = v72;
        v80 = v77;
        result = sub_1B8CE17A0();
        if (__OFADD__(result, 1))
          goto LABEL_70;
        v78 = sub_1B8CD1414(v78, result + 1);
      }
      else
      {
        v79 = v72;
        v105 = v77;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v125 = (_QWORD *)v78;
      sub_1B8CA09A0((uint64_t)v79, v77, isUniquelyReferenced_nonNull_native);
      v127[0] = v125;

      swift_bridgeObjectRelease();
    }
    else
    {
      v83 = (id)qword_1ED56B9D8;
      v84 = (void *)sub_1B8CD6BAC((unint64_t)v83);

      v79 = 0;
    }
    v107 = (void *)objc_opt_self();
    sub_1B8C84230(0, &qword_1ED5657B0);
    sub_1B8C84230(0, (unint64_t *)&unk_1ED5674C0);
    sub_1B8C8A420();
    v108 = (void *)sub_1B8CE1440();
    swift_bridgeObjectRelease();
    v52 = objc_msgSend(v107, sel_wk_dynamicImageWithTraitCollectionToImageMap_baseImage_, v108, v79);
    sub_1B8CD0104(v76, 1);

    sub_1B8CD0104(v76, 1);
    v109 = v36;
    v110 = -1;
LABEL_67:
    sub_1B8CD0104(v109, v110);

    return (uint64_t)v52;
  }
  v38 = v124;
  if (v37 != 1)
  {
    v45 = v29;
    v46 = 1;
    goto LABEL_17;
  }
  v127[0] = MEMORY[0x1E0DEE9E0];
  v39 = (void *)v29[2];
  sub_1B8C8EA9C(v29, 1);
  sub_1B8CD0118(v29, 1);
  sub_1B8CD0118(v36, 1);
  v40 = objc_msgSend(v39, *v123);
  if (v40)
  {
    v41 = v40;
    sub_1B8CE0E04();

    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    v43 = v24;
    v44 = 0;
  }
  else
  {
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    v43 = v24;
    v44 = 1;
  }
  v53 = v122;
  v42(v43, v44, 1, v122);
  v54 = (uint64_t)v116;
  v55 = v121;
  sub_1B8C8838C((uint64_t)v24, v121);
  sub_1B8CD0104(v29, 1);
  sub_1B8C84538(v55, v54);
  v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  v57 = v53;
  if (v56(v54, 1, v53) == 1)
  {
    v58 = 0;
  }
  else
  {
    v59 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v120, v54, v53);
    v60 = (void *)objc_opt_self();
    v61 = (void *)sub_1B8CE0DEC();
    v58 = objc_msgSend(v60, sel_wk_imageWithContentsOfURL_, v61);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v57);
  }
  v62 = (uint64_t)v119;
  sub_1B8C88430(v121, (uint64_t *)&unk_1ED565130);
  if (qword_1ED5657A0 != -1)
    swift_once();
  v63 = (void *)qword_1ED56B9D8;
  if (v58)
  {
    v64 = v29;
    v65 = v127[0];
    if ((v127[0] & 0xC000000000000001) == 0)
    {
      v66 = v58;
      v85 = v63;
      goto LABEL_45;
    }
    if (v127[0] >= 0)
      v65 = v127[0] & 0xFFFFFFFFFFFFFF8;
    v66 = v58;
    v67 = v63;
    result = sub_1B8CE17A0();
    if (!__OFADD__(result, 1))
    {
      v65 = sub_1B8CD1414(v65, result + 1);
LABEL_45:
      v86 = swift_isUniquelyReferenced_nonNull_native();
      v125 = (_QWORD *)v65;
      sub_1B8CA09A0((uint64_t)v66, v63, v86);
      v127[0] = v125;

      swift_bridgeObjectRelease();
      v29 = v64;
      v57 = v122;
      goto LABEL_46;
    }
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v81 = (id)qword_1ED56B9D8;
  v82 = (void *)sub_1B8CD6BAC((unint64_t)v81);

LABEL_46:
  v87 = (void *)v36[2];
  swift_retain();
  v88 = objc_msgSend(v87, *v123);
  v89 = (uint64_t)v114;
  if (v88)
  {
    v90 = v88;
    sub_1B8CE0E04();

    v91 = 0;
  }
  else
  {
    v91 = 1;
  }
  v42((char *)v89, v91, 1, v57);
  sub_1B8C8838C(v89, v62);
  sub_1B8CD0104(v36, 1);
  v92 = v115;
  sub_1B8C84538(v62, v115);
  if (v56(v92, 1, v57) == 1)
  {
    v93 = 0;
  }
  else
  {
    v94 = v124;
    v95 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v124 + 32))(v120, v92, v57);
    v96 = (void *)objc_opt_self();
    v97 = (void *)sub_1B8CE0DEC();
    v93 = objc_msgSend(v96, sel_wk_imageWithContentsOfURL_, v97);

    (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v57);
  }
  v98 = v29;
  sub_1B8C88430(v62, (uint64_t *)&unk_1ED565130);
  if (qword_1ED565798 != -1)
    swift_once();
  v99 = (void *)qword_1ED56B9D0;
  if (!v93)
  {
    v103 = (id)qword_1ED56B9D0;
    v104 = (void *)sub_1B8CD6BAC((unint64_t)v103);

    v101 = 0;
LABEL_66:
    v113 = (void *)objc_opt_self();
    sub_1B8C84230(0, &qword_1ED5657B0);
    sub_1B8C84230(0, (unint64_t *)&unk_1ED5674C0);
    sub_1B8C8A420();
    v108 = (void *)sub_1B8CE1440();
    swift_bridgeObjectRelease();
    v52 = objc_msgSend(v113, sel_wk_dynamicImageWithTraitCollectionToImageMap_baseImage_, v108, v58);
    sub_1B8CD0104(v98, 1);

    sub_1B8CD0104(v36, 1);
    sub_1B8CD0104(v98, 1);
    v109 = v36;
    v110 = 1;
    goto LABEL_67;
  }
  v100 = v127[0];
  if ((v127[0] & 0xC000000000000001) == 0)
  {
    v101 = v93;
    v111 = v99;
    goto LABEL_65;
  }
  if (v127[0] >= 0)
    v100 = v127[0] & 0xFFFFFFFFFFFFFF8;
  v101 = v93;
  v102 = v99;
  result = sub_1B8CE17A0();
  if (!__OFADD__(result, 1))
  {
    v100 = sub_1B8CD1414(v100, result + 1);
LABEL_65:
    v112 = swift_isUniquelyReferenced_nonNull_native();
    v125 = (_QWORD *)v100;
    sub_1B8CA09A0((uint64_t)v101, v99, v112);
    v127[0] = v125;

    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_1B8CD1408(uint64_t a1, uint64_t a2)
{
  return sub_1B8CD08DC(a1, a2, (SEL *)&selRef_floatingFullSizeImageURL);
}

uint64_t sub_1B8CD1414(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5657C8);
    v2 = sub_1B8CE1800();
    v18 = v2;
    sub_1B8CE1794();
    v3 = sub_1B8CE17B8();
    if (v3)
    {
      v4 = v3;
      sub_1B8C84230(0, &qword_1ED5657B0);
      do
      {
        swift_dynamicCast();
        sub_1B8C84230(0, (unint64_t *)&unk_1ED5674C0);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1B8C9CB28(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1B8CE1638();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1B8CE17B8();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

_QWORD *sub_1B8CD1664(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;

  if (a1 != a2)
  {
    sub_1B8C85C20((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v39 = a2;
  v40 = a3;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = *((_QWORD *)v9 + 2);
  v13 = *((_QWORD *)v9 + 3);
  v14 = *((_QWORD *)v9 + 4);
  v15 = *((_QWORD *)v9 + 5);
  v17 = *((_QWORD *)v9 + 6);
  v16 = (void *)*((_QWORD *)v9 + 7);
  v32 = *((_QWORD *)v9 + 8);
  v33 = *((_QWORD *)v9 + 9);
  v34 = *((_QWORD *)v9 + 10);
  v35 = *((_QWORD *)v9 + 11);
  v36 = *((_QWORD *)v9 + 12);
  v37 = *((_QWORD *)v9 + 13);
  v38 = v9[112];
  sub_1B8C85798(*(_QWORD *)v9, v11, v12, v13, v14, v15, v17, v16, v32, v33, v34, v35, v36, v37, v38);
  v18 = *(_QWORD *)v8;
  v19 = *((_QWORD *)v8 + 1);
  v20 = *((_QWORD *)v8 + 2);
  v21 = *((_QWORD *)v8 + 3);
  v22 = *((_QWORD *)v8 + 4);
  v23 = *((_QWORD *)v8 + 5);
  v24 = *((_QWORD *)v8 + 6);
  v25 = (void *)*((_QWORD *)v8 + 7);
  v26 = *((_OWORD *)v8 + 4);
  v27 = *((_OWORD *)v8 + 5);
  v28 = *((_QWORD *)v8 + 12);
  v29 = *((_QWORD *)v8 + 13);
  v30 = v8[112];
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  *((_QWORD *)v8 + 3) = v13;
  *((_QWORD *)v8 + 4) = v14;
  *((_QWORD *)v8 + 5) = v15;
  *((_QWORD *)v8 + 6) = v17;
  *((_QWORD *)v8 + 7) = v16;
  *((_QWORD *)v8 + 8) = v32;
  *((_QWORD *)v8 + 9) = v33;
  *((_QWORD *)v8 + 10) = v34;
  *((_QWORD *)v8 + 11) = v35;
  *((_QWORD *)v8 + 12) = v36;
  *((_QWORD *)v8 + 13) = v37;
  v8[112] = v38;
  sub_1B8C85880(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, *((uint64_t *)&v27 + 1), v28, v29, v30);
  *(_QWORD *)((char *)a1 + *(int *)(v40 + 24)) = *(_QWORD *)((char *)v39 + *(int *)(v40 + 24));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1B8CD183C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  if (a1 != a2)
  {
    sub_1B8C85C20((uint64_t)a1);
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[112];
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  v14 = *((_QWORD *)v9 + 2);
  v15 = *((_QWORD *)v9 + 3);
  v16 = *((_QWORD *)v9 + 4);
  v17 = *((_QWORD *)v9 + 5);
  v18 = *((_QWORD *)v9 + 6);
  v19 = (void *)*((_QWORD *)v9 + 7);
  v20 = *((_OWORD *)v9 + 4);
  v21 = *((_OWORD *)v9 + 5);
  v22 = *((_QWORD *)v9 + 12);
  v23 = *((_QWORD *)v9 + 13);
  v24 = v9[112];
  v25 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v25;
  v26 = *((_OWORD *)v10 + 3);
  *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
  *((_OWORD *)v9 + 3) = v26;
  v27 = *((_OWORD *)v10 + 5);
  *((_OWORD *)v9 + 4) = *((_OWORD *)v10 + 4);
  *((_OWORD *)v9 + 5) = v27;
  *((_OWORD *)v9 + 6) = *((_OWORD *)v10 + 6);
  v9[112] = v11;
  sub_1B8C85880(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_1B8CD1964()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CD1970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B8CD19F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CD19FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WKStripesWallpaperPosterBackground()
{
  uint64_t result;

  result = qword_1ED566FA8;
  if (!qword_1ED566FA8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8CD1AB4()
{
  unint64_t v0;

  sub_1B8C86054();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B8CD1B34()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B8CD1B44(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  BOOL v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  double v26;
  double v27;
  void *v28;
  __CFString **v29;
  char *v30;
  char v31;
  __CFString *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void *v42;
  __CFString **v43;
  char *v44;
  char v45;
  __CFString *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  int v50;
  void *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  void *v58;
  char v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  void *v79;
  void *v80;
  unsigned __int8 v81;

  v8 = sub_1B8CE0F84();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1B8C92334(a3) & 1) == 0)
  {
    *a4 = 0;
    return;
  }
  v69 = v11;
  v71 = a4;
  if (qword_1ED565318 != -1)
    swift_once();
  v12 = sub_1B8CE0EDC();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED56B978);
  sub_1B8CB6A68((uint64_t)a1);
  sub_1B8CB6A68((uint64_t)a1);
  v14 = sub_1B8CE0EC4();
  v15 = sub_1B8CE15A8();
  v16 = os_log_type_enabled(v14, v15);
  v70 = v13;
  if (v16)
  {
    v17 = swift_slowAlloc();
    v68 = v8;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v80 = (void *)v19;
    *(_DWORD *)v18 = 136446210;
    v67 = v9;
    v20 = *((_OWORD *)a1 + 5);
    v76 = *((_OWORD *)a1 + 4);
    v77 = v20;
    v78 = *((_OWORD *)a1 + 6);
    v21 = *((_OWORD *)a1 + 1);
    v72 = *(_OWORD *)a1;
    v73 = v21;
    v22 = *((_OWORD *)a1 + 3);
    v74 = *((_OWORD *)a1 + 2);
    v75 = v22;
    v23 = WKPosterEnvironmentSnapshot.description.getter();
    *(_QWORD *)&v72 = sub_1B8CC4700(v23, v24, (uint64_t *)&v80);
    v9 = v67;
    sub_1B8CE1674();
    swift_bridgeObjectRelease();
    sub_1B8C87884((uint64_t)a1);
    sub_1B8C87884((uint64_t)a1);
    _os_log_impl(&dword_1B8C64000, v14, v15, "Resolving Layered Stripe against Traits: %{public}s.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v19, -1, -1);
    v25 = v18;
    v8 = v68;
    MEMORY[0x1BCCB9588](v25, -1, -1);
  }
  else
  {
    sub_1B8C87884((uint64_t)a1);
    sub_1B8C87884((uint64_t)a1);
  }

  v26 = a1[2];
  v27 = a1[4];
  v28 = *(void **)(a3 + 16);
  v29 = WKWallpaperAppearanceDefault;
  if (objc_msgSend(v28, sel_isAppearanceAware))
  {
    v30 = v69;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v69, *MEMORY[0x1E0CD86D0], v8);
    v31 = sub_1B8CE0F78();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v30, v8);
    if ((v31 & 1) != 0)
      v29 = WKWallpaperAppearanceDark;
  }
  v32 = *v29;
  if (!objc_msgSend(v28, sel_valueBasedWallpaperForLocation_andAppearance_, CFSTR("WKWallpaperLocationCoverSheet"), v32))goto LABEL_22;
  v68 = a2;
  v33 = v8;
  sub_1B8C8FB7C((uint64_t *)&v72);
  swift_unknownObjectRelease();
  v34 = *((_QWORD *)&v73 + 1);
  v35 = v74;
  __swift_project_boxed_opaque_existential_1(&v72, *((uint64_t *)&v73 + 1));
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v35 + 24))(&v80, v34, v35);
  v36 = v80;
  v37 = v81;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  if (v37 != 2)
  {
    sub_1B8C8846C(v36, v37);
LABEL_22:

    v52 = sub_1B8CE0EC4();
    v53 = sub_1B8CE15B4();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      MEMORY[0x1BCCB9588](v54, -1, -1);
    }

    v55 = sub_1B8CE0EC4();
    v56 = sub_1B8CE15C0();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      MEMORY[0x1BCCB9588](v57, -1, -1);
    }

    *v71 = 0;
    return;
  }

  if (objc_msgSend(v28, sel_valueBasedWallpaperForLocation_andAppearance_, CFSTR("WKWallpaperLocationCoverSheet"), CFSTR("inactive")))
  {
    sub_1B8C8FB7C((uint64_t *)&v72);
    swift_unknownObjectRelease();
    v38 = *((_QWORD *)&v73 + 1);
    v39 = v74;
    __swift_project_boxed_opaque_existential_1(&v72, *((uint64_t *)&v73 + 1));
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v39 + 24))(&v80, v38, v39);
    v40 = (uint64_t)v80;
    v41 = v81;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
    if (v41 == 2)
    {
      v67 = v40;
      v42 = v36;
      v43 = WKWallpaperAppearanceDefault;
      if ((objc_msgSend(v28, sel_isAppearanceAware) & 1) != 0)
      {
        v44 = v69;
        (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v69, *MEMORY[0x1E0CD86D0], v33);
        v45 = sub_1B8CE0F78();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v44, v33);
        if ((v45 & 1) != 0)
          v43 = WKWallpaperAppearanceDark;
      }
      v46 = *v43;
      if (objc_msgSend(v28, sel_valueBasedWallpaperForLocation_andAppearance_, CFSTR("WKWallpaperLocationHomeScreen"), v46))
      {
        sub_1B8C8FB7C((uint64_t *)&v72);
        swift_unknownObjectRelease();
        v47 = *((_QWORD *)&v73 + 1);
        v48 = v74;
        __swift_project_boxed_opaque_existential_1(&v72, *((uint64_t *)&v73 + 1));
        (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v48 + 24))(&v80, v47, v48);
        v49 = v80;
        v50 = v81;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
        if (v50 == 2)
        {

          v51 = (void *)v67;
          v79 = v42;
          v80 = (void *)v67;
          sub_1B8CBE1E8((uint64_t *)&v80, (uint64_t *)&v79, (uint64_t *)&v72, v26);
          v79 = v49;
          v80 = (void *)v72;
          sub_1B8CBE1E8((uint64_t *)&v80, (uint64_t *)&v79, (uint64_t *)&v72, v27);
          sub_1B8C8846C(v51, 2);
          sub_1B8C8846C(v42, 2);
          sub_1B8C8846C(v49, 2);
          swift_release();
          *v71 = v72;
          return;
        }
        sub_1B8C8846C(v49, v50);
      }

      v58 = (void *)v67;
      v59 = 2;
    }
    else
    {
      v42 = v36;
      v58 = (void *)v40;
      v59 = v41;
    }
    sub_1B8C8846C(v58, v59);
  }
  else
  {
    v42 = v36;
  }
  v60 = sub_1B8CE0EC4();
  v61 = sub_1B8CE15B4();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v62 = 0;
    MEMORY[0x1BCCB9588](v62, -1, -1);
  }

  v63 = sub_1B8CE0EC4();
  v64 = sub_1B8CE15C0();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v65 = 0;
    MEMORY[0x1BCCB9588](v65, -1, -1);
  }

  *v71 = v42;
}

uint64_t sub_1B8CD22D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64x2_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _OWORD v30[7];
  _OWORD v31[7];
  char v32;

  v3 = sub_1B8CE0F84();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WKStripesWallpaperPosterBackground();
  v8 = *(_QWORD *)(v1 + *(int *)(v7 + 24));
  v9 = v1 + *(int *)(v7 + 20);
  v10 = *(_OWORD *)(v9 + 80);
  v31[4] = *(_OWORD *)(v9 + 64);
  v31[5] = v10;
  v31[6] = *(_OWORD *)(v9 + 96);
  v32 = *(_BYTE *)(v9 + 112);
  v11 = *(_OWORD *)(v9 + 16);
  v31[0] = *(_OWORD *)v9;
  v31[1] = v11;
  v12 = *(_OWORD *)(v9 + 48);
  v31[2] = *(_OWORD *)(v9 + 32);
  v31[3] = v12;
  swift_retain();
  sub_1B8C86848((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85798);
  sub_1B8CDF63C((uint64_t)&v22);
  sub_1B8C86848((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85880);
  v30[3] = v25;
  v30[4] = v26;
  v30[5] = v27;
  v30[6] = v28;
  v30[0] = v22;
  v30[1] = v23;
  v30[2] = v24;
  sub_1B8CDF87C((uint64_t)v6);
  sub_1B8CD1B44((double *)v30, (uint64_t)v6, v8, &v29);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1B8C87884((uint64_t)v30);
  result = swift_release();
  if (v29)
  {
    v14 = MEMORY[0x1BCCB85E0](objc_msgSend(*(id *)(v29 + 16), sel_backgroundColor));
    WKPosterCanvasSize();
    WKPosterCanvasSize();
    sub_1B8CE1374();
    sub_1B8CE0FD8();
    v15 = v22;
    v16 = BYTE8(v22);
    v17 = v23;
    v18 = BYTE8(v23);
    v21 = v24;
    result = swift_release();
    v19 = v21;
    v20 = vdupq_n_s64(0x100uLL);
    v20.i64[0] = v14;
  }
  else
  {
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v20 = 0uLL;
    v19 = 0uLL;
  }
  *(int64x2_t *)a1 = v20;
  *(_QWORD *)(a1 + 16) = v15;
  *(_QWORD *)(a1 + 24) = v16;
  *(_QWORD *)(a1 + 32) = v17;
  *(_QWORD *)(a1 + 40) = v18;
  *(_OWORD *)(a1 + 48) = v19;
  return result;
}

unint64_t sub_1B8CD24F4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF1D4538;
  if (!qword_1EF1D4538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4540);
    v2 = sub_1B8CD2558();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4538);
  }
  return result;
}

unint64_t sub_1B8CD2558()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1D4548;
  if (!qword_1EF1D4548)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EF1D4550);
    v2[0] = sub_1B8CD25C4();
    v2[1] = MEMORY[0x1E0CD8D70];
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4548);
  }
  return result;
}

unint64_t sub_1B8CD25C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5656F8;
  if (!qword_1ED5656F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565700);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD8668], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5656F8);
  }
  return result;
}

uint64_t sub_1B8CD2610@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)();
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[2];
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE v85[128];
  char v86;

  v2 = v1;
  v84 = a1;
  v78 = type metadata accessor for WKStripesWallpaperPosterOverlay();
  v3 = MEMORY[0x1E0C80A78](v78);
  v75 = (_QWORD *)((char *)v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v3);
  v76 = (uint64_t)v70 - v5;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5653E0);
  MEMORY[0x1E0C80A78](v79);
  v81 = (uint64_t)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for WKAdaptiveStripeWallpaperFloatingLayer();
  v7 = MEMORY[0x1E0C80A78](v80);
  v77 = (_QWORD *)((char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v70 - v9;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565440);
  MEMORY[0x1E0C80A78](v82);
  v12 = (char *)v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5653E8);
  MEMORY[0x1E0C80A78](v83);
  v14 = (char *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5653C8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_OWORD *)((char *)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565410);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565478);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *v2;
  v25 = swift_retain();
  LOBYTE(v2) = sub_1B8C9223C(v25);
  swift_release();
  if ((v2 & 1) != 0)
  {
    *(_QWORD *)v85 = swift_getKeyPath();
    memset(&v85[8], 0, 105);
    *(_QWORD *)&v85[120] = v24;
    v26 = *(_OWORD *)&v85[80];
    v17[4] = *(_OWORD *)&v85[64];
    v17[5] = v26;
    v27 = *(_OWORD *)&v85[112];
    v17[6] = *(_OWORD *)&v85[96];
    v17[7] = v27;
    v28 = *(_OWORD *)&v85[16];
    *v17 = *(_OWORD *)v85;
    v17[1] = v28;
    v29 = *(_OWORD *)&v85[48];
    v17[2] = *(_OWORD *)&v85[32];
    v17[3] = v29;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1B8C92C30((uint64_t)v85);
    sub_1B8CD3148();
    sub_1B8CD318C();
    sub_1B8CE1158();
    sub_1B8C92BB0((uint64_t)v20, (uint64_t)v14, &qword_1ED565410);
    swift_storeEnumTagMultiPayload();
    sub_1B8CD3124();
    sub_1B8CD3228();
    sub_1B8CE1158();
    sub_1B8C88430((uint64_t)v20, &qword_1ED565410);
    sub_1B8C92C94((uint64_t)v85);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565470);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v23, 0, 1, v30);
    v31 = (uint64_t)v23;
    return sub_1B8CD3274(v31, v84);
  }
  v71 = v10;
  v73 = v15;
  v74 = v12;
  v72 = v23;
  v32 = swift_retain();
  v33 = sub_1B8C92334(v32);
  swift_release();
  if ((v33 & 1) != 0)
  {
    v70[1] = v18;
    v34 = objc_msgSend(*(id *)(v24 + 16), sel_logicalScreenClass);
    v35 = sub_1B8CE14B8();
    v37 = v36;
    v38 = sub_1B8CE14B8();
    v70[0] = v20;
    if (v35 == v38 && v37 == v39)
    {

      swift_bridgeObjectRelease_n();
      v40 = (uint64_t)v14;
    }
    else
    {
      v50 = sub_1B8CE1890();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = (uint64_t)v14;
      v51 = v78;
      if ((v50 & 1) == 0)
      {
        *(_QWORD *)&v85[24] = &type metadata for WKWallpaperBundle;
        *(_QWORD *)&v85[32] = sub_1B8C8A2F0();
        *(_QWORD *)v85 = v24;
        KeyPath = swift_getKeyPath();
        v64 = (uint64_t)v75;
        *v75 = KeyPath;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
        swift_storeEnumTagMultiPayload();
        v65 = v64 + *(int *)(v51 + 20);
        *(_QWORD *)v65 = swift_getKeyPath();
        *(_OWORD *)(v65 + 8) = 0u;
        *(_OWORD *)(v65 + 24) = 0u;
        *(_OWORD *)(v65 + 40) = 0u;
        *(_OWORD *)(v65 + 56) = 0u;
        *(_OWORD *)(v65 + 72) = 0u;
        *(_OWORD *)(v65 + 88) = 0u;
        *(_OWORD *)(v65 + 97) = 0u;
        sub_1B8C8A344((__int128 *)v85, v64 + *(int *)(v51 + 24));
        v66 = v76;
        sub_1B8C8A35C(v64, v76, (uint64_t (*)(_QWORD))type metadata accessor for WKStripesWallpaperPosterOverlay);
        sub_1B8C8A3A0(v66, v81, (uint64_t (*)(_QWORD))type metadata accessor for WKStripesWallpaperPosterOverlay);
        swift_storeEnumTagMultiPayload();
        sub_1B8C83740(&qword_1ED565160, (uint64_t (*)(uint64_t))type metadata accessor for WKAdaptiveStripeWallpaperFloatingLayer, (uint64_t)&unk_1B8CE4C78);
        sub_1B8C83740(&qword_1ED5651F8, (uint64_t (*)(uint64_t))type metadata accessor for WKStripesWallpaperPosterOverlay, (uint64_t)&unk_1B8CE4B60);
        swift_retain();
        v59 = (uint64_t)v74;
        sub_1B8CE1158();
        v60 = v66;
        v61 = type metadata accessor for WKStripesWallpaperPosterOverlay;
        goto LABEL_13;
      }
    }
    v52 = swift_getKeyPath();
    v53 = (uint64_t)v77;
    *v77 = v52;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    swift_storeEnumTagMultiPayload();
    v54 = v80;
    v55 = v53 + *(int *)(v80 + 20);
    *(_QWORD *)v55 = swift_getKeyPath();
    *(_OWORD *)(v55 + 8) = 0u;
    *(_OWORD *)(v55 + 24) = 0u;
    *(_OWORD *)(v55 + 40) = 0u;
    *(_OWORD *)(v55 + 56) = 0u;
    *(_OWORD *)(v55 + 72) = 0u;
    *(_OWORD *)(v55 + 88) = 0u;
    *(_OWORD *)(v55 + 97) = 0u;
    v56 = v53 + *(int *)(v54 + 24);
    type metadata accessor for WKWallpaperPosterLayerViewModel();
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    swift_retain();
    *(_QWORD *)v56 = sub_1B8CE0F9C();
    *(_BYTE *)(v56 + 8) = v57 & 1;
    *(_QWORD *)(v53 + *(int *)(v54 + 28)) = v24;
    v58 = (uint64_t)v71;
    sub_1B8C8A35C(v53, (uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for WKAdaptiveStripeWallpaperFloatingLayer);
    sub_1B8C8A3A0(v58, v81, (uint64_t (*)(_QWORD))type metadata accessor for WKAdaptiveStripeWallpaperFloatingLayer);
    swift_storeEnumTagMultiPayload();
    sub_1B8C83740(&qword_1ED565160, (uint64_t (*)(uint64_t))type metadata accessor for WKAdaptiveStripeWallpaperFloatingLayer, (uint64_t)&unk_1B8CE4C78);
    sub_1B8C83740(&qword_1ED5651F8, (uint64_t (*)(uint64_t))type metadata accessor for WKStripesWallpaperPosterOverlay, (uint64_t)&unk_1B8CE4B60);
    v59 = (uint64_t)v74;
    sub_1B8CE1158();
    v60 = v58;
    v61 = type metadata accessor for WKAdaptiveStripeWallpaperFloatingLayer;
LABEL_13:
    sub_1B8C92BF4(v60, (uint64_t (*)(_QWORD))v61);
    sub_1B8C92BB0(v59, (uint64_t)v17, &qword_1ED565440);
    swift_storeEnumTagMultiPayload();
    sub_1B8CD3148();
    sub_1B8CD318C();
    v67 = v70[0];
    sub_1B8CE1158();
    sub_1B8C92BB0(v67, v40, &qword_1ED565410);
    swift_storeEnumTagMultiPayload();
    sub_1B8CD3124();
    sub_1B8CD3228();
    v68 = (uint64_t)v72;
    sub_1B8CE1158();
    sub_1B8C88430(v67, &qword_1ED565410);
    sub_1B8C88430(v59, &qword_1ED565440);
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565470);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 0, 1, v69);
    v31 = v68;
    return sub_1B8CD3274(v31, v84);
  }
  v41 = swift_retain();
  v42 = sub_1B8C92514(v41);
  swift_release();
  if ((v42 & 1) != 0)
  {
    type metadata accessor for WKWallpaperPosterLayerViewModel();
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    swift_retain();
    v43 = sub_1B8CE0F9C();
    v45 = v44;
    v46 = swift_getKeyPath();
    v85[0] = v45 & 1;
    v86 = 0;
    *(_QWORD *)v14 = v43;
    v14[8] = v45 & 1;
    *((_QWORD *)v14 + 2) = v46;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 40) = 0u;
    *(_OWORD *)(v14 + 56) = 0u;
    *(_OWORD *)(v14 + 72) = 0u;
    *(_OWORD *)(v14 + 88) = 0u;
    *(_OWORD *)(v14 + 104) = 0u;
    *((_QWORD *)v14 + 15) = 0;
    v14[128] = 0;
    *((_QWORD *)v14 + 17) = v24;
    swift_storeEnumTagMultiPayload();
    sub_1B8CD3124();
    sub_1B8CD3228();
    v47 = v84;
    sub_1B8CE1158();
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565470);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 0, 1, v48);
  }
  else
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565470);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v84, 1, 1, v62);
  }
}

uint64_t sub_1B8CD3030@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565478);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *v1;
  sub_1B8CD2610((uint64_t)v5);
  v6 = sub_1B8CE1020();
  v7 = sub_1B8CE11E8();
  sub_1B8C92BB0((uint64_t)v5, a1, &qword_1ED565478);
  v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED565390) + 36);
  *(_QWORD *)v8 = v6;
  *(_BYTE *)(v8 + 8) = v7;
  return sub_1B8C88430((uint64_t)v5, &qword_1ED565478);
}

ValueMetadata *type metadata accessor for WKWallpaperPosterOverlay()
{
  return &type metadata for WKWallpaperPosterOverlay;
}

uint64_t sub_1B8CD310C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8CD3124()
{
  return sub_1B8C927EC(&qword_1ED565408, &qword_1ED565410, (uint64_t (*)(void))sub_1B8CD3148, (uint64_t (*)(void))sub_1B8CD318C);
}

unint64_t sub_1B8CD3148()
{
  unint64_t result;

  result = qword_1ED565148;
  if (!qword_1ED565148)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE7E18, &type metadata for WKLayeredStillWallpaperPosterOverlay);
    atomic_store(result, (unint64_t *)&qword_1ED565148);
  }
  return result;
}

unint64_t sub_1B8CD318C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565438;
  if (!qword_1ED565438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565440);
    v2[0] = sub_1B8C83740(&qword_1ED565160, (uint64_t (*)(uint64_t))type metadata accessor for WKAdaptiveStripeWallpaperFloatingLayer, (uint64_t)&unk_1B8CE4C78);
    v2[1] = sub_1B8C83740(&qword_1ED5651F8, (uint64_t (*)(uint64_t))type metadata accessor for WKStripesWallpaperPosterOverlay, (uint64_t)&unk_1B8CE4B60);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565438);
  }
  return result;
}

unint64_t sub_1B8CD3228()
{
  unint64_t result;

  result = qword_1ED5651A8;
  if (!qword_1ED5651A8)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE584C, &type metadata for WKLayeredAnimationWallpaperPosterOverlay);
    atomic_store(result, (unint64_t *)&qword_1ED5651A8);
  }
  return result;
}

uint64_t sub_1B8CD3274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8CD32C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565388;
  if (!qword_1ED565388)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565390);
    v2[0] = sub_1B8CD332C();
    v2[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565388);
  }
  return result;
}

unint64_t sub_1B8CD332C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED565480;
  if (!qword_1ED565480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565478);
    v2 = sub_1B8C927EC(&qword_1ED565468, &qword_1ED565470, sub_1B8CD3124, (uint64_t (*)(void))sub_1B8CD3228);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED565480);
  }
  return result;
}

Swift::Bool __swiftcall WKWallpaperRepresentingCollection.contains(_:)(Swift::String a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  unsigned __int8 v4;

  v2 = *(id *)(*(_QWORD *)v1 + 16);
  v3 = (void *)sub_1B8CE1494();
  v4 = objc_msgSend(v2, sel_containsWallpaperRepresentingWithIdentifier_, v3);

  return v4;
}

uint64_t WKWallpaperRepresentingCollection.subscript.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE1494();
  v3 = objc_msgSend(v1, sel_wallpaperRepresentingWithIdentifier_, v2);

  if (v3
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5670D0),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((_QWORD *)&v8 + 1))
    {
      sub_1B8C8A344(&v7, (uint64_t)v10);
      v4 = v11;
      v5 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
  }
  else
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
  }
  sub_1B8C88430((uint64_t)&v7, (uint64_t *)&unk_1EF1D4270);
  result = sub_1B8CE17D0();
  __break(1u);
  return result;
}

id sub_1B8CD358C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id result;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  result = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_numberOfWallpaperCollections);
  if (a1 < 0 || (uint64_t)result < a1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_numberOfWallpaperCollections);
  if (a3 < 0 || (uint64_t)result < a3)
    goto LABEL_17;
  v8 = a3 - a1;
  if (a2 >= 1)
  {
    if (v8 < 0 || v8 >= a2)
      goto LABEL_12;
    return 0;
  }
  if (v8 <= 0 && v8 > a2)
    return 0;
LABEL_12:
  v10 = __OFADD__(a1, a2);
  v9 = a1 + a2;
  if (v10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  result = objc_msgSend(*(id *)(*(_QWORD *)(v3 + 16) + 16), sel_numberOfWallpaperCollections);
  if ((v9 & 0x8000000000000000) == 0 && (uint64_t)result >= v9)
    return (id)v9;
LABEL_19:
  __break(1u);
  return result;
}

id sub_1B8CD3670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  v7 = *(void **)(a4 + 16);
  result = objc_msgSend(v7, sel_numberOfWallpapers);
  if (a1 < 0 || (uint64_t)result < a1)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = objc_msgSend(v7, sel_numberOfWallpapers);
  if (a3 < 0 || (uint64_t)result < a3)
    goto LABEL_17;
  v9 = a3 - a1;
  if (a2 >= 1)
  {
    if (v9 < 0 || v9 >= a2)
      goto LABEL_12;
    return 0;
  }
  if (v9 <= 0 && v9 > a2)
    return 0;
LABEL_12:
  v11 = __OFADD__(a1, a2);
  v10 = a1 + a2;
  if (v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  result = objc_msgSend(v7, sel_numberOfWallpapers);
  if ((v10 & 0x8000000000000000) == 0 && (uint64_t)result >= v10)
    return (id)v10;
LABEL_19:
  __break(1u);
  return result;
}

id WKWallpaperRepresentingCollection.disableRotation.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_disableRotation);
}

uint64_t WKWallpaperRepresentingCollection.init(wallpaperCollectionIdentifier:displayName:previewWallpaperRepresenting:wallpapersShareBaseAppearance:hiddenFromPicker:disableRotation:wallpaperRepresentingCollection:downloadManager:)@<X0>(void *a1@<X0>, uint64_t a2@<X3>, char a3@<W4>, char a4@<W5>, char a5@<W6>, uint64_t a6@<X7>, uint64_t *a7@<X8>, uint64_t a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  __int128 v33[2];
  uint64_t v34;
  _QWORD v35[5];
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[5];
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v11 = a2;
  sub_1B8C90CCC(a2, (uint64_t)v40);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED567068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5657E0);
  if (!swift_dynamicCast())
    goto LABEL_15;
  v29 = a4;
  v30 = a5;
  v31 = v11;
  v32 = a7;
  sub_1B8C8A344(&v37, (uint64_t)v41);
  v36 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a6 + 16);
  if (v11)
  {
    v14 = a6 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1B8C90CCC(v14, (uint64_t)v40);
      sub_1B8C90CCC((uint64_t)v40, (uint64_t)v35);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v34 = 0;
        memset(v33, 0, sizeof(v33));
        sub_1B8C88430((uint64_t)v33, &qword_1EF1D41A8);
        sub_1B8C90CCC((uint64_t)v40, (uint64_t)&v37);
        v35[0] = 0;
        v35[1] = 0xE000000000000000;
        sub_1B8CE1704();
        sub_1B8CE14DC();
        sub_1B8CE14DC();
        sub_1B8CE14DC();
        __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
        swift_getDynamicType();
        sub_1B8CE1944();
        sub_1B8CE14DC();
        swift_bridgeObjectRelease();
        sub_1B8CE14DC();
        while (1)
        {
          sub_1B8CE17D0();
          __break(1u);
LABEL_15:
          v39 = 0;
          v37 = 0u;
          v38 = 0u;
          sub_1B8C88430((uint64_t)&v37, &qword_1EF1D41A8);
          sub_1B8C90CCC(v11, (uint64_t)v41);
          v40[0] = 0;
          v40[1] = 0xE000000000000000;
          sub_1B8CE1704();
          sub_1B8CE14DC();
          sub_1B8CE14DC();
          sub_1B8CE14DC();
          __swift_project_boxed_opaque_existential_1(v41, v42);
          swift_getDynamicType();
          sub_1B8CE1944();
          sub_1B8CE14DC();
          swift_bridgeObjectRelease();
          sub_1B8CE14DC();
        }
      }
      sub_1B8C8A344(v33, (uint64_t)&v37);
      v15 = *((_QWORD *)&v38 + 1);
      v16 = v39;
      __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
      v17 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      MEMORY[0x1BCCB8868](v17);
      if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1B8CE1548();
      sub_1B8CE1554();
      sub_1B8CE153C();
      v14 += 40;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v18 = v42;
  v19 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  if (a8)
    v21 = *(id *)(*(_QWORD *)(a8 + 16) + 16);
  else
    v21 = 0;
  v22 = objc_allocWithZone((Class)WKWallpaperRepresentingCollection);
  v23 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190);
  v24 = (void *)sub_1B8CE1524();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v22, sel_initWithWallpaperCollectionIdentifier_displayName_previewWallpaperRepresenting_wallpapersShareBaseAppearance_hiddenFromPicker_disableRotation_wallpaperRepresentingCollection_downloadManager_, a1, v23, v20, a3 & 1, v29 & 1, v30 & 1, v24, v21);
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v31);
  type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v25;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  *v32 = v26;
  return result;
}

uint64_t type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper()
{
  return objc_opt_self();
}

void WKWallpaperRepresentingCollection.identifier.getter()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
  sub_1B8CE0E40();

}

uint64_t WKWallpaperRepresentingCollection.displayName.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_displayName);
}

id WKWallpaperRepresentingCollection.supportsDownloading.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsDownloading);
}

id WKWallpaperRepresentingCollection.wallpapersShareBaseAppearance.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_wallpapersShareBaseAppearance);
}

id WKWallpaperRepresentingCollection.hiddenFromPicker.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_hiddenFromPicker);
}

uint64_t WKWallpaperRepresentingCollection.previewWallpaperRepresenting.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  __int128 v4[2];
  uint64_t v5;
  id v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v6 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_previewWallpaperRepresenting);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5670D0);
  if (swift_dynamicCast())
  {
    sub_1B8C8A344(v4, (uint64_t)v7);
    v1 = v8;
    v2 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    v5 = 0;
    memset(v4, 0, sizeof(v4));
    sub_1B8C88430((uint64_t)v4, (uint64_t *)&unk_1EF1D4270);
    result = sub_1B8CE17D0();
    __break(1u);
  }
  return result;
}

uint64_t WKWallpaperRepresentingCollection.init(url:downloadManager:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  uint64_t v16;

  v6 = sub_1B8CE0E1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, a1, v6);
  if (a2)
    v10 = *(id *)(*(_QWORD *)(a2 + 16) + 16);
  else
    v10 = 0;
  v11 = objc_allocWithZone((Class)WKWallpaperRepresentingCollection);
  v12 = (void *)sub_1B8CE0DEC();
  v13 = objc_msgSend(v11, sel_initWithURL_downloadManager_, v12, v10);

  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  swift_release();
  v14(a1, v6);
  type metadata accessor for WKWallpaperRepresentingCollection.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v13;
  *a3 = result;
  return result;
}

uint64_t WKWallpaperRepresentingCollection.downloadWallpaperRepresenting(with:progress:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[24] = a3;
  v5[25] = a4;
  v5[22] = a1;
  v5[23] = a2;
  v5[26] = *v4;
  return swift_task_switch();
}

uint64_t sub_1B8CD3FCC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[25];
  v2 = *(void **)(v0[26] + 16);
  v0[27] = v2;
  v3 = v2;
  v4 = sub_1B8CE1494();
  v0[28] = v4;
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_1B8CD40A0;
  v5 = swift_continuation_init();
  v0[15] = MEMORY[0x1E0C809B0];
  v6 = v0 + 15;
  v6[1] = 0x40000000;
  v6[2] = sub_1B8C95380;
  v6[3] = &block_descriptor_3;
  v6[4] = v5;
  objc_msgSend(v3, sel_downloadWallpaperRepresentingWithIdentifier_progress_completion_, v4, v1, v6);
  return swift_continuation_await();
}

uint64_t sub_1B8CD40A0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1B8CD4100()
{
  uint64_t v0;
  int v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 160);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5670D0);
  v1 = swift_dynamicCast();
  v3 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 224);
  if (v1)
  {
    sub_1B8C8A344((__int128 *)(v0 + 120), v0 + 80);

    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 80), v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 152) = 0;
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    sub_1B8C88430(v0 + 120, (uint64_t *)&unk_1EF1D4270);

    return sub_1B8CE17D0();
  }
}

uint64_t sub_1B8CD425C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 224);
  v2 = *(void **)(v0 + 216);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WKWallpaperRepresentingCollection.cancelDownload(for:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[15] = a1;
  v3[16] = a2;
  v3[17] = *v2;
  return swift_task_switch();
}

uint64_t sub_1B8CD42C4()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0[17] + 16);
  v0[18] = v1;
  v2 = v1;
  v3 = sub_1B8CE1494();
  v0[19] = v3;
  v0[2] = v0;
  v0[3] = sub_1B8CD4384;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1B8C95914;
  v5[3] = &block_descriptor_2_0;
  v5[4] = v4;
  objc_msgSend(v2, sel_cancelDownloadForWallpaperRepresentingWithIdentifier_completion_, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_1B8CD4384()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1B8CD43E4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8CD441C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WKWallpaperRepresentingCollection.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

id static WKWallpaperRepresentingCollection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKWallpaperRepresentingCollection.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKWallpaperRepresentingCollection.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

void WKWallpaperRepresentingCollection.id.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  swift_retain();
  v2 = objc_msgSend(v1, sel_identifier);
  sub_1B8CE0E40();
  swift_release();

}

void sub_1B8CD45B0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  swift_retain();
  v2 = objc_msgSend(v1, sel_identifier);
  sub_1B8CE0E40();
  swift_release();

}

uint64_t WKWallpaperRepresentingCollection.startIndex.getter()
{
  return 0;
}

id WKWallpaperRepresentingCollection.endIndex.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_numberOfWallpapers);
}

uint64_t WKWallpaperRepresentingCollection.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  __int128 v5[2];
  uint64_t v6;
  id v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v7 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_wallpaperBundleAtIndex_, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567190);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5670D0);
  if (swift_dynamicCast())
  {
    sub_1B8C8A344(v5, (uint64_t)v8);
    v2 = v9;
    v3 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    sub_1B8C88430((uint64_t)v5, (uint64_t *)&unk_1EF1D4270);
    result = sub_1B8CE17D0();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B8CD4768()
{
  unint64_t result;

  result = qword_1EF1D4570;
  if (!qword_1EF1D4570)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperRepresentingCollection, &type metadata for WKWallpaperRepresentingCollection);
    atomic_store(result, (unint64_t *)&qword_1EF1D4570);
  }
  return result;
}

unint64_t sub_1B8CD47B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED5657D8;
  if (!qword_1ED5657D8)
  {
    v1 = sub_1B8CE0E58();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED5657D8);
  }
  return result;
}

unint64_t sub_1B8CD47FC()
{
  unint64_t result;

  result = qword_1EF1D4580;
  if (!qword_1EF1D4580)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperRepresentingCollection, &type metadata for WKWallpaperRepresentingCollection);
    atomic_store(result, (unint64_t *)&qword_1EF1D4580);
  }
  return result;
}

uint64_t sub_1B8CD4840()
{
  return sub_1B8CD4930(&qword_1EF1D45A0, (uint64_t (*)(void))sub_1B8CD486C, MEMORY[0x1E0DEDE40]);
}

unint64_t sub_1B8CD486C()
{
  unint64_t result;

  result = qword_1EF1D45B0;
  if (!qword_1EF1D45B0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperRepresentingCollection, &type metadata for WKWallpaperRepresentingCollection);
    atomic_store(result, (unint64_t *)&qword_1EF1D45B0);
  }
  return result;
}

unint64_t sub_1B8CD48C0()
{
  unint64_t result;

  result = qword_1EF1D45B8;
  if (!qword_1EF1D45B8)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperRepresentingCollection, &type metadata for WKWallpaperRepresentingCollection);
    atomic_store(result, (unint64_t *)&qword_1EF1D45B8);
  }
  return result;
}

uint64_t sub_1B8CD4904()
{
  return sub_1B8CD4930(&qword_1EF1D45C8, (uint64_t (*)(void))sub_1B8CD47FC, MEMORY[0x1E0DEDE28]);
}

uint64_t sub_1B8CD4930(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D45A8);
    v8 = a2();
    result = MEMORY[0x1BCCB94E0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1B8CD4998@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(*(id *)(*(_QWORD *)v2 + 16), sel_numberOfWallpapers);
    if ((v4 & 0x8000000000000000) == 0 && v4 < (uint64_t)result)
    {
      *a2 = v4;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1B8CD49F4(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    result = (uint64_t *)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_numberOfWallpapers);
    if ((v2 & 0x8000000000000000) == 0 && v2 < (uint64_t)result)
    {
      *v3 = v2;
      return result;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1B8CD4A54()
{
  unint64_t result;

  result = qword_1EF1D45D0;
  if (!qword_1EF1D45D0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperRepresentingCollection, &type metadata for WKWallpaperRepresentingCollection);
    atomic_store(result, (unint64_t *)&qword_1EF1D45D0);
  }
  return result;
}

uint64_t sub_1B8CD4A98()
{
  return sub_1B8C86A88(&qword_1EF1D45E0, &qword_1EF1D45A8, MEMORY[0x1E0DEDE48]);
}

id sub_1B8CD4AC4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_numberOfWallpapers);
  *a1 = result;
  return result;
}

void (*sub_1B8CD4AF8(void **a1, uint64_t *a2))(uint64_t *a1)
{
  *a1 = malloc(0x28uLL);
  WKWallpaperRepresentingCollection.subscript.getter(*a2);
  return sub_1B8CD4B48;
}

void sub_1B8CD4B48(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  __swift_destroy_boxed_opaque_existential_1(*a1);
  free(v1);
}

uint64_t sub_1B8CD4B70@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a1;
  v4 = a1[1];
  v6 = *v2;
  result = (uint64_t)objc_msgSend(*(id *)(v6 + 16), sel_numberOfWallpapers);
  if (result < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (result >= v4)
  {
    a2[1] = v4;
    a2[2] = v6;
    *a2 = v5;
    return swift_retain();
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_1B8CD4BD4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = (unint64_t)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_numberOfWallpapers);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *a1 = 0;
    a1[1] = result;
  }
  return result;
}

BOOL sub_1B8CD4C10()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_numberOfWallpapers) == 0;
}

_QWORD *sub_1B8CD4C40@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(*(id *)(*(_QWORD *)v3 + 16), sel_numberOfWallpapers);
    if ((v5 & 0x8000000000000000) == 0 && (uint64_t)result >= v5)
    {
      *a3 = v5;
      return result;
    }
  }
  __break(1u);
  return result;
}

id sub_1B8CD4C9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  id result;
  char v7;

  result = sub_1B8CD3670(*a1, a2, *a3, *v4);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v7 & 1;
  return result;
}

id sub_1B8CD4CD4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id result;

  v3 = *a1;
  v4 = *a2;
  v5 = *(void **)(*(_QWORD *)v2 + 16);
  result = objc_msgSend(v5, sel_numberOfWallpapers);
  if (v3 < 0 || (uint64_t)result < v3)
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(v5, sel_numberOfWallpapers);
    if ((v4 & 0x8000000000000000) == 0 && (uint64_t)result >= v4)
      return (id)(v4 - v3);
  }
  __break(1u);
  return result;
}

id sub_1B8CD4D44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  id result;

  v4 = *a1;
  result = objc_msgSend(*(id *)(*(_QWORD *)v2 + 16), sel_numberOfWallpapers);
  if (v4 < 0 || v4 >= (uint64_t)result)
    __break(1u);
  else
    *a2 = v4 + 1;
  return result;
}

id sub_1B8CD4D98(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id result;

  v3 = *v1;
  v4 = *a1;
  result = objc_msgSend(*(id *)(v3 + 16), sel_numberOfWallpapers);
  if (v4 < 0 || v4 >= (uint64_t)result)
    __break(1u);
  else
    *a1 = v4 + 1;
  return result;
}

uint64_t sub_1B8CD4DE4()
{
  return sub_1B8C86A88(&qword_1EF1D45E8, &qword_1EF1D45F0, MEMORY[0x1E0DEC908]);
}

int64_t sub_1B8CD4E10()
{
  uint64_t v0;
  void *v1;
  int64_t v2;
  int64_t result;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = (int64_t)objc_msgSend(v1, sel_numberOfWallpapers);
  result = (int64_t)objc_msgSend(v1, sel_numberOfWallpapers);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    result = (int64_t)objc_msgSend(v1, sel_numberOfWallpapers);
    if ((v2 & 0x8000000000000000) == 0 && result >= v2)
      return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8CD4E80()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_1B8CA17F4(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1B8CD4EB4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1B8CA1BA4(a1, a2, a3, *v3);
}

uint64_t sub_1B8CD4EBC()
{
  return sub_1B8CE150C();
}

ValueMetadata *type metadata accessor for WKWallpaperRepresentingCollection()
{
  return &type metadata for WKWallpaperRepresentingCollection;
}

ValueMetadata *type metadata accessor for WKLayeredAnimationWallpaperPosterBackground()
{
  return &type metadata for WKLayeredAnimationWallpaperPosterBackground;
}

uint64_t sub_1B8CD4EFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8CD4F0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[23];
  uint64_t v46;
  char v47;

  v3 = (int *)type metadata accessor for WKAnimationPackageLayer(0);
  v35 = *((_QWORD *)v3 - 1);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v31 - v10;
  v12 = sub_1B8CE0E1C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v33 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v31 - v16;
  v18 = *(_QWORD *)v1;
  v47 = *(_BYTE *)(v1 + 8);
  v36 = v18;
  v37 = v47;
  v43 = *(_OWORD *)(v1 + 89);
  v44 = *(_OWORD *)(v1 + 105);
  *(_OWORD *)v45 = *(_OWORD *)(v1 + 121);
  *(_QWORD *)&v45[15] = *(_QWORD *)(v1 + 136);
  v39 = *(_OWORD *)(v1 + 25);
  v40 = *(_OWORD *)(v1 + 41);
  v41 = *(_OWORD *)(v1 + 57);
  v42 = *(_OWORD *)(v1 + 73);
  v38 = *(_OWORD *)(v1 + 9);
  sub_1B8C88268(&v46);
  if (v46)
  {
    v34 = a1;
    v19 = objc_msgSend(*(id *)(v46 + 16), sel_backgroundAnimationFileURL);
    if (v19)
    {
      v20 = v19;
      sub_1B8CE0E04();

      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, v21, 1, v12);
    sub_1B8C8838C((uint64_t)v9, (uint64_t)v11);
    swift_release();
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    a1 = v34;
    if (v22 != 1)
    {
      v32 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v32(v17, v11, v12);
      v24 = v33;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v33, v17, v12);
      v25 = v47;
      v26 = swift_retain();
      v27 = sub_1B8CDFAB4(v26, v25);
      swift_release();
      swift_getKeyPath();
      v36 = v27;
      sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
      sub_1B8CE0E7C();
      swift_release();
      v28 = *(_QWORD *)(v27 + 136);
      swift_release();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
      *(_QWORD *)v5 = swift_getKeyPath();
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_OWORD *)(v5 + 40) = 0u;
      *(_OWORD *)(v5 + 56) = 0u;
      *(_OWORD *)(v5 + 72) = 0u;
      *(_OWORD *)(v5 + 88) = 0u;
      *(_OWORD *)(v5 + 97) = 0u;
      v29 = (uint64_t *)&v5[v3[5]];
      *v29 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
      a1 = v34;
      swift_storeEnumTagMultiPayload();
      v5[v3[6]] = 0;
      v32(&v5[v3[7]], v24, v12);
      *(_QWORD *)&v5[v3[8]] = v28;
      sub_1B8C883EC((uint64_t)v5, a1);
      v23 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v35 + 56))(a1, v23, 1, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_1B8C88430((uint64_t)v11, (uint64_t *)&unk_1ED565130);
  v23 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v35 + 56))(a1, v23, 1, v3);
}

id static WKLayeredThumbnailWallpaperInput.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKLayeredThumbnailWallpaperInput.backgroundThumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_backgroundThumbnailImageURL, a1);
}

uint64_t WKLayeredThumbnailWallpaperInput.foregroundThumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_foregroundThumbnailImageURL, a1);
}

uint64_t WKLayeredThumbnailWallpaperInput.floatingThumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_floatingThumbnailImageURL, a1);
}

uint64_t WKLayeredThumbnailWallpaperInput.init(backgroundThumbnailImageURL:foregroundThumbnailImageURL:floatingThumbnailImageURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t result;
  uint64_t v20;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED565130);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v20 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - v15;
  sub_1B8C84538(a1, (uint64_t)&v20 - v15);
  sub_1B8C84538(a2, (uint64_t)v14);
  sub_1B8C84538(a3, (uint64_t)v11);
  v17 = objc_allocWithZone((Class)WKLayeredThumbnailWallpaperInput);
  v18 = sub_1B8CD55AC((uint64_t)v16, (uint64_t)v14, (uint64_t)v11);
  sub_1B8C8491C(a3);
  sub_1B8C8491C(a2);
  sub_1B8C8491C(a1);
  type metadata accessor for WKLayeredThumbnailWallpaperInput.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v18;
  *a4 = result;
  return result;
}

uint64_t WKLayeredThumbnailWallpaperInput.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKLayeredThumbnailWallpaperInput.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t WKLayeredThumbnailWallpaperInput.description.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_description);
  v2 = sub_1B8CE14B8();

  return v2;
}

id sub_1B8CD55AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v4 = v3;
  v8 = sub_1B8CE0E1C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = 0;
  if (v10(a1, 1, v8) != 1)
  {
    v11 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  }
  if (v10(a2, 1, v8) == 1)
  {
    v12 = 0;
  }
  else
  {
    v12 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  }
  if (v10(a3, 1, v8) == 1)
  {
    v13 = 0;
  }
  else
  {
    v13 = (void *)sub_1B8CE0DEC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  }
  v14 = objc_msgSend(v4, sel_initWithBackgroundThumbnailImageURL_foregroundThumbnailImageURL_floatingThumbnailImageURL_, v11, v12, v13);

  return v14;
}

uint64_t type metadata accessor for WKLayeredThumbnailWallpaperInput.ImplementationWrapper()
{
  return objc_opt_self();
}

unint64_t sub_1B8CD5708()
{
  unint64_t result;

  result = qword_1EF1D45F8;
  if (!qword_1EF1D45F8)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKLayeredThumbnailWallpaperInput, &type metadata for WKLayeredThumbnailWallpaperInput);
    atomic_store(result, (unint64_t *)&qword_1EF1D45F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WKLayeredThumbnailWallpaperInput()
{
  return &type metadata for WKLayeredThumbnailWallpaperInput;
}

void sub_1B8CD575C(double a1, double a2, double a3, double a4)
{
  void *v4;
  void *v5;
  _BOOL4 v8;
  uint64_t v12;
  BOOL v13;
  _BOOL4 v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  BOOL v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  id v52;
  CGAffineTransform v53;
  CGAffineTransform v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;

  v5 = v4;
  v8 = a3 >= 0.0;
  if (a3 > 1.0)
    v8 = 0;
  if (a4 < 0.0)
    v8 = 0;
  if (a4 > 1.0 || !v8)
    goto LABEL_24;
  if (a1 <= 0.0)
    goto LABEL_24;
  if (a2 <= 0.0)
    goto LABEL_24;
  v12 = *(_QWORD *)&a1 & 0x7FF0000000000000;
  if ((*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) == 0 && v12 == 0x7FF0000000000000)
    goto LABEL_24;
  v13 = v12 != 0x7FF0000000000000 || (*(_QWORD *)&a1 & 0xFFFFFFFFFFFFFLL) == 0;
  v14 = v13;
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0
    || !v14
    || (objc_msgSend(v4, sel_bounds), (sub_1B8CBC740(v15, v16, v17, v18) & 1) != 0)
    || (objc_msgSend(v4, sel_bounds), sub_1B8CBC6D8(v19, v20, v21, v22))
    || (objc_msgSend(v4, sel_bounds),
        v58.origin.x = 0.0,
        v58.origin.y = 0.0,
        v58.size.width = 0.0,
        v58.size.height = 0.0,
        CGRectEqualToRect(v55, v58)))
  {
LABEL_24:
    if (qword_1ED5652F8 != -1)
      swift_once();
    v23 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED56B930);
    v52 = v4;
    v24 = sub_1B8CE0EC4();
    v25 = sub_1B8CE15B4();
    if (!os_log_type_enabled(v24, v25))
    {

      return;
    }
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    *(_QWORD *)&v54.a = v27;
    *(_DWORD *)v26 = 67241474;
    sub_1B8CE1674();
    *(_WORD *)(v26 + 8) = 1026;
    sub_1B8CE1674();
    *(_WORD *)(v26 + 14) = 1026;
    sub_1B8CE1674();
    *(_WORD *)(v26 + 20) = 1026;
    objc_msgSend(v52, sel_bounds);
    sub_1B8CBC740(v28, v29, v30, v31);
    sub_1B8CE1674();
    *(_WORD *)(v26 + 26) = 1026;
    objc_msgSend(v52, sel_bounds);
    sub_1B8CBC6D8(v32, v33, v34, v35);
    sub_1B8CE1674();

    *(_WORD *)(v26 + 32) = 2082;
    v36 = MEMORY[0x1BCCB897C](a1, a2);
    *(_QWORD *)&v53.a = sub_1B8CC4700(v36, v37, (uint64_t *)&v54);
    sub_1B8CE1674();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B8C64000, v24, v25, "Not applying transform (anchorPoint.isUnitPoint: %{BOOL,public}d, scale.hasInfComponents: %{BOOL,public}d, scale.hasNaNComponents: %{BOOL,public}d, bounds.hasInfComponents: %{BOOL,public}d, bounds.hasNaNComponents: %{BOOL,public}d, scale: %{public}s.", (uint8_t *)v26, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v27, -1, -1);
    v38 = v26;
    goto LABEL_29;
  }
  v39 = objc_msgSend(v4, sel_layer);
  objc_msgSend(v39, sel_setAnchorPoint_, a3, a4);

  objc_msgSend(v5, sel_bounds);
  v40 = 1.0 / a1 * (a3 + -0.5) * CGRectGetWidth(v56);
  objc_msgSend(v5, sel_bounds);
  v41 = 1.0 / a2 * (a4 + -0.5) * CGRectGetHeight(v57);
  CGAffineTransformMakeScale(&v54, a1, a2);
  CGAffineTransformTranslate(&v53, &v54, v40, v41);
  a = v53.a;
  b = v53.b;
  c = v53.c;
  d = v53.d;
  tx = v53.tx;
  ty = v53.ty;
  v54 = v53;
  v48 = sub_1B8CBC830();
  if (v48 || sub_1B8CBC798())
  {
    if (qword_1ED5652F8 != -1)
      swift_once();
    v49 = sub_1B8CE0EDC();
    __swift_project_value_buffer(v49, (uint64_t)qword_1ED56B930);
    v24 = sub_1B8CE0EC4();
    v50 = sub_1B8CE15B4();
    if (!os_log_type_enabled(v24, v50))
      goto LABEL_30;
    v51 = swift_slowAlloc();
    *(_DWORD *)v51 = 67240448;
    LODWORD(v53.a) = v48;
    sub_1B8CE1674();
    *(_WORD *)(v51 + 8) = 1026;
    LOBYTE(v53.a) = sub_1B8CBC798();
    LODWORD(v53.a) = LOBYTE(v53.a);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v24, v50, "Not applying transform (hasInfComponents: %{BOOL,public}d, hasNaNComponents: %{BOOL,public}d).", (uint8_t *)v51, 0xEu);
    v38 = v51;
LABEL_29:
    MEMORY[0x1BCCB9588](v38, -1, -1);
LABEL_30:

    return;
  }
  v53.a = a;
  v53.b = b;
  v53.c = c;
  v53.d = d;
  v53.tx = tx;
  v53.ty = ty;
  objc_msgSend(v5, sel_setTransform_, &v53);
}

uint64_t sub_1B8CD5D34(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 4;
  result = sub_1B8CE1674();
  *a1 = v5;
  return result;
}

void *sub_1B8CD5D8C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1B8CE1818();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_1B8CD5E20(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1B8CD5E44@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void sub_1B8CD5E6C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _DWORD *v11;
  _QWORD v12[6];

  v2 = v1;
  v4 = sub_1B8CE0EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED565310 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED56B960);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v9 = sub_1B8CE0EC4();
  v10 = sub_1B8CE15CC();
  if (os_log_type_enabled(v9, v10))
  {
    v12[1] = v2;
    v11 = (_DWORD *)swift_slowAlloc();
    v12[3] = swift_slowAlloc();
    *v11 = 136446210;
    __asm { BR              X10 }
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __asm { BR              X10 }
}

void sub_1B8CD61C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _DWORD *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v21 = a1;
  v5 = sub_1B8CE0EDC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v16 - v10;
  if (qword_1ED565310 != -1)
    swift_once();
  v20 = v9;
  v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED56B960);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v19(v11, v12, v5);
  v13 = sub_1B8CE0EC4();
  v14 = sub_1B8CE15CC();
  if (os_log_type_enabled(v13, v14))
  {
    v16 = v3;
    v15 = (_DWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *v15 = 136446210;
    v18 = a2;
    __asm { BR              X10 }
  }

  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v11, v5);
  __asm { BR              X10 }
}

id sub_1B8CD6878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  if (qword_1ED565310 != -1)
LABEL_30:
    swift_once();
  v2 = sub_1B8CE0EDC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED56B960);
  v3 = sub_1B8CE0EC4();
  v4 = sub_1B8CE15CC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1B8C64000, v3, v4, "Invalidating all extensions.", v5, 2u);
    MEMORY[0x1BCCB9588](v5, -1, -1);
  }

  v6 = (_QWORD *)(v1 + 16);
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 16);
  v1 = v7 + 64;
  v8 = 1 << *(_BYTE *)(v7 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v7 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = (id)swift_bridgeObjectRetain_n();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_8;
    }
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v11)
      goto LABEL_28;
    v17 = *(_QWORD *)(v1 + 8 * v16);
    ++v13;
    if (!v17)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v11)
        goto LABEL_28;
      v17 = *(_QWORD *)(v1 + 8 * v13);
      if (!v17)
      {
        v13 = v16 + 2;
        if (v16 + 2 >= v11)
          goto LABEL_28;
        v17 = *(_QWORD *)(v1 + 8 * v13);
        if (!v17)
        {
          v13 = v16 + 3;
          if (v16 + 3 >= v11)
            goto LABEL_28;
          v17 = *(_QWORD *)(v1 + 8 * v13);
          if (!v17)
          {
            v13 = v16 + 4;
            if (v16 + 4 >= v11)
              goto LABEL_28;
            v17 = *(_QWORD *)(v1 + 8 * v13);
            if (!v17)
              break;
          }
        }
      }
    }
LABEL_27:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_8:
    result = objc_msgSend(*(id *)(*(_QWORD *)(v7 + 56) + 8 * v15), sel_wk_invalidate);
  }
  v18 = v16 + 5;
  if (v18 >= v11)
  {
LABEL_28:
    swift_release();
    swift_bridgeObjectRelease();
    *v6 = MEMORY[0x1E0DEE9E0];
    return (id)swift_bridgeObjectRelease();
  }
  v17 = *(_QWORD *)(v1 + 8 * v18);
  if (v17)
  {
    v13 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v11)
      goto LABEL_28;
    v17 = *(_QWORD *)(v1 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8CD6AD4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B8CD6B10 + 4 * byte_1B8CE9358[a1]))(0xD000000000000016, 0x80000001B8CEE8F0);
}

uint64_t sub_1B8CD6B10()
{
  return 0x6552726574736F70;
}

uint64_t sub_1B8CD6B34()
{
  uint64_t v0;

  return v0 + 1;
}

unint64_t sub_1B8CD6B4C()
{
  return 0xD000000000000014;
}

uint64_t sub_1B8CD6B68()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WKWallpaperPosterRendererTokenManager()
{
  return objc_opt_self();
}

uint64_t sub_1B8CD6BAC(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1B8C9C69C(a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1B8C9F838();
        v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = sub_1B8CE17AC();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v8 = sub_1B8CE17A0();
  v9 = sub_1B8CD1414(v5, v8);
  swift_retain();
  a1 = sub_1B8C9C69C((uint64_t)v6);
  v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * a1);
  sub_1B8CD6EB0(a1, v9);
  *v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1B8CD6CF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1B8C9C770(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B8C9FFB8();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1B8CD7060(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1B8CD6DC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1B8C9C7D4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1B8CA0170();
      v9 = v11;
    }

    sub_1B8C8A344((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_1B8CD7234(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_1B8CD6EB0(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1B8CE16BC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1B8CE1638();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1B8CD7060(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B8CE16BC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1B8CE18D8();
        swift_bridgeObjectRetain();
        sub_1B8CE14D0();
        v9 = sub_1B8CE1908();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1B8CD7234(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  __int128 *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1B8CE16BC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v11 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_1B8CE14B8();
        sub_1B8CE18D8();
        v12 = v11;
        sub_1B8CE14D0();
        v13 = sub_1B8CE1908();

        result = swift_bridgeObjectRelease();
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_QWORD *)(v15 + 8 * v3);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = v18 + 40 * v3;
          v20 = (__int128 *)(v18 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= (unint64_t)v20 + 40))
          {
            v9 = *v20;
            v10 = v20[1];
            *(_QWORD *)(v19 + 32) = *((_QWORD *)v20 + 4);
            *(_OWORD *)v19 = v9;
            *(_OWORD *)(v19 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t WKWallpaperPreviewImage.init(wallpaperRepresenting:previewStyle:)@<X0>(__int128 *a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  char v5;
  int *v6;
  char *v7;
  uint64_t result;

  v5 = *a2;
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  swift_storeEnumTagMultiPayload();
  v6 = (int *)type metadata accessor for WKWallpaperPreviewImage();
  v7 = (char *)a3 + v6[5];
  *(_QWORD *)v7 = swift_getKeyPath();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  result = sub_1B8C8A344(a1, (uint64_t)a3 + v6[6]);
  *((_BYTE *)a3 + v6[7]) = v5;
  return result;
}

uint64_t sub_1B8CD74D0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000012;
    else
      v3 = 1819047270;
    if (v2 == 1)
      v4 = 0x80000001B8CECDA0;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000012;
      else
        v6 = 1819047270;
      if (v5 == 1)
        v7 = 0x80000001B8CECDA0;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xEF6C69616E626D75;
    v3 = 0x6854656C646E7562;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xEF6C69616E626D75;
  if (v3 != 0x6854656C646E7562)
  {
LABEL_21:
    v8 = sub_1B8CE1890();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

double sub_1B8CD75E0@<D0>(uint64_t a1@<X8>)
{
  double result;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  sub_1B8C8BC7C();
  sub_1B8CE1098();
  *(_BYTE *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v12;
  result = *(double *)&v13;
  *(_OWORD *)(a1 + 96) = v13;
  return result;
}

uint64_t sub_1B8CD7674(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 56);
  sub_1B8C8BC7C();
  v2 = v1;
  swift_retain();
  return sub_1B8CE10A4();
}

uint64_t sub_1B8CD7720()
{
  return sub_1B8CE1044();
}

uint64_t sub_1B8CD7740()
{
  return sub_1B8CE1044();
}

uint64_t sub_1B8CD7760(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1B8CE0F84();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B8CE1050();
}

uint64_t type metadata accessor for WKWallpaperPreviewImage()
{
  uint64_t result;

  result = qword_1ED567330;
  if (!qword_1ED567330)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8CD781C()
{
  sub_1B8CE18D8();
  sub_1B8CE14D0();
  swift_bridgeObjectRelease();
  return sub_1B8CE1908();
}

uint64_t sub_1B8CD78C4()
{
  sub_1B8CE14D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8CD7944()
{
  sub_1B8CE18D8();
  sub_1B8CE14D0();
  swift_bridgeObjectRelease();
  return sub_1B8CE1908();
}

WallpaperKit::WKWallpaperPreviewImage::PreviewStyle_optional __swiftcall WKWallpaperPreviewImage.PreviewStyle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WallpaperKit::WKWallpaperPreviewImage::PreviewStyle_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1B8CE1830();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static WKWallpaperPreviewImage.PreviewStyle.allCases.getter()
{
  return &unk_1E6EF7BA0;
}

uint64_t WKWallpaperPreviewImage.PreviewStyle.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 1819047270;
  if (*v0)
    return v1;
  else
    return 0x6854656C646E7562;
}

uint64_t sub_1B8CD7AB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B8CD74D0(*a1, *a2);
}

uint64_t sub_1B8CD7ABC()
{
  return sub_1B8CD781C();
}

uint64_t sub_1B8CD7AC4()
{
  return sub_1B8CD78C4();
}

uint64_t sub_1B8CD7ACC()
{
  return sub_1B8CD7944();
}

WallpaperKit::WKWallpaperPreviewImage::PreviewStyle_optional sub_1B8CD7AD4(Swift::String *a1)
{
  return WKWallpaperPreviewImage.PreviewStyle.init(rawValue:)(*a1);
}

uint64_t sub_1B8CD7AE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = WKWallpaperPreviewImage.PreviewStyle.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1B8CD7B04(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6EF7CC0;
}

uint64_t WKWallpaperPreviewImage.previewStyle.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WKWallpaperPreviewImage();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t WKWallpaperPreviewImage.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v2 = v1;
  v26 = a1;
  v3 = sub_1B8CE1188();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4600);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4608);
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4610);
  MEMORY[0x1E0C80A78](v25);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8CD7DE8(v2, (uint64_t)v9);
  sub_1B8CE117C();
  v15 = sub_1B8CD9694();
  sub_1B8CE1260();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1B8C88430((uint64_t)v9, &qword_1EF1D4600);
  v27 = 0x455041504C4C4157;
  v28 = 0xEA00000000005F52;
  v16 = (_QWORD *)(v2 + *(int *)(type metadata accessor for WKWallpaperPreviewImage() + 24));
  v17 = v16[3];
  v18 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 48))(v17, v18);
  sub_1B8CE14DC();
  swift_bridgeObjectRelease();
  v27 = v7;
  v28 = v15;
  swift_getOpaqueTypeConformance2();
  sub_1B8CE1248();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  v19 = v16[3];
  v20 = v16[4];
  __swift_project_boxed_opaque_existential_1(v16, v19);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20);
  v28 = v21;
  sub_1B8C8DFDC();
  sub_1B8CE1014();
  swift_bridgeObjectRelease();
  return sub_1B8C88430((uint64_t)v14, &qword_1EF1D4610);
}

uint64_t sub_1B8CD7DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  _BYTE v83[512];
  uint64_t v84;
  char v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  char v94;
  uint64_t (*v95)();
  uint64_t v96;
  char v97;
  __int128 v98[32];
  _OWORD v99[33];

  v79 = a2;
  v3 = type metadata accessor for WKWallpaperPreviewImage();
  v4 = MEMORY[0x1E0C80A78](v3);
  v72 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v71 - v6;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D46B8);
  MEMORY[0x1E0C80A78](v76);
  v78 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D46C0);
  MEMORY[0x1E0C80A78](v74);
  v75 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4638);
  MEMORY[0x1E0C80A78](v77);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567480);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567440);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4648);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (_OWORD *)((char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v71 - v23;
  v25 = *(int *)(v3 + 28);
  v80 = a1;
  v26 = *(unsigned __int8 *)(a1 + v25);
  if (v26)
  {
    if (v26 == 1)
    {
      v73 = v22;
      v27 = (uint64_t)v11;
      v28 = v80;
      v29 = (_QWORD *)(v80 + *(int *)(v3 + 24));
      v30 = v29[3];
      v31 = v29[4];
      __swift_project_boxed_opaque_existential_1(v29, v30);
      v32 = (*(uint64_t (**)(const __CFString *, uint64_t, uint64_t))(v31 + 112))(CFSTR("WKWallpaperLocationCoverSheet"), v30, v31);
      sub_1B8CDA3FC(v28, (uint64_t)v7);
      if (v32)
      {
        v33 = &v7[*(int *)(v3 + 24)];
        v34 = *((_QWORD *)v33 + 3);
        v35 = *((_QWORD *)v33 + 4);
        __swift_project_boxed_opaque_existential_1(v33, v34);
        LOBYTE(v34) = sub_1B8CBE034(v34, v35);
        sub_1B8C8A3E4((uint64_t)v7);
        v36 = v78;
        if ((v34 & 1) == 0)
        {
          v37 = v29[3];
          v38 = v29[4];
          __swift_project_boxed_opaque_existential_1(v29, v37);
          if ((sub_1B8CBDE58(v37, v38) & 1) != 0)
          {
            sub_1B8CD8EF8((uint64_t)v99);
            sub_1B8C8F26C((uint64_t)v99, (uint64_t)v83, &qword_1ED5673E0);
            sub_1B8C8F26C((uint64_t)v83, (uint64_t)&v84, &qword_1ED5673E0);
            sub_1B8CDA490((uint64_t)&v84);
            sub_1B8C8F26C((uint64_t)&v84, (uint64_t)v98, &qword_1EF1D46C8);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5673E0);
            sub_1B8C914FC();
            sub_1B8CD98EC();
            sub_1B8CE1158();
            memcpy(v98, v99, 0x201uLL);
            nullsub_1(v98);
          }
          else
          {
            sub_1B8CDA440((uint64_t)v98);
          }
          sub_1B8C8F26C((uint64_t)v98, (uint64_t)v99, &qword_1EF1D4678);
          goto LABEL_20;
        }
      }
      else
      {
        sub_1B8C8A3E4((uint64_t)v7);
        v36 = v78;
      }
      sub_1B8C90CCC((uint64_t)v29, (uint64_t)v99);
      KeyPath = swift_getKeyPath();
      v65 = swift_getKeyPath();
      sub_1B8C90CCC((uint64_t)v99, (uint64_t)v98);
      v66 = swift_allocObject();
      sub_1B8C8A344(v98, v66 + 16);
      *(_BYTE *)(v66 + 56) = 1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      v83[0] = 0;
      v82 = 0;
      v81 = 0;
      v84 = KeyPath;
      v85 = 0;
      v87 = 0u;
      v88 = 0u;
      v89 = 0u;
      v90 = 0u;
      v91 = 0u;
      v92 = 0u;
      v86 = v65;
      v93 = 0;
      v94 = 0;
      v95 = sub_1B8CDB560;
      v96 = v66;
      v97 = 0;
      sub_1B8CDA4F0((uint64_t)&v84);
      sub_1B8C8F26C((uint64_t)&v84, (uint64_t)v98, &qword_1EF1D46C8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5673E0);
      sub_1B8C914FC();
      sub_1B8CD98EC();
      sub_1B8CE1158();
      memcpy(v98, v99, 0x201uLL);
      nullsub_1(v98);
      sub_1B8C8F26C((uint64_t)v98, (uint64_t)v99, &qword_1EF1D4678);
LABEL_20:
      sub_1B8C8F26C((uint64_t)v99, v75, &qword_1EF1D4678);
      swift_storeEnumTagMultiPayload();
      sub_1B8CDA7DC(v99, sub_1B8CDA4F8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4678);
      sub_1B8CD973C();
      sub_1B8CD9868();
      sub_1B8CE1158();
      sub_1B8C92BB0(v27, v36, &qword_1EF1D4638);
      swift_storeEnumTagMultiPayload();
      sub_1B8CD9718();
      sub_1B8CE1158();
      sub_1B8CDA7DC(v99, sub_1B8CDA8B0);
      v49 = v27;
      v50 = &qword_1EF1D4638;
      return sub_1B8C88430(v49, v50);
    }
    v51 = v80;
    v52 = (_QWORD *)(v80 + *(int *)(v3 + 24));
    v53 = v52[3];
    v54 = v52[4];
    __swift_project_boxed_opaque_existential_1(v52, v53);
    v55 = (*(uint64_t (**)(const __CFString *, uint64_t, uint64_t))(v54 + 112))(CFSTR("WKWallpaperLocationCoverSheet"), v53, v54);
    v56 = v51;
    v57 = v72;
    sub_1B8CDA3FC(v56, v72);
    if (v55)
    {
      v58 = (_QWORD *)(v57 + *(int *)(v3 + 24));
      v59 = v58[3];
      v60 = v58[4];
      __swift_project_boxed_opaque_existential_1(v58, v59);
      LOBYTE(v59) = sub_1B8CBE034(v59, v60);
      sub_1B8C8A3E4(v57);
      v61 = v78;
      if ((v59 & 1) == 0)
      {
        v62 = v52[3];
        v63 = v52[4];
        __swift_project_boxed_opaque_existential_1(v52, v62);
        if ((sub_1B8CBDE58(v62, v63) & 1) == 0)
        {
          sub_1B8CDA440((uint64_t)v98);
          goto LABEL_17;
        }
        sub_1B8CD9230((uint64_t)v99);
        sub_1B8C8F26C((uint64_t)v99, (uint64_t)v83, &qword_1ED5673E0);
        sub_1B8C8F26C((uint64_t)v83, (uint64_t)&v84, &qword_1ED5673E0);
        sub_1B8CDA490((uint64_t)&v84);
        sub_1B8C8F26C((uint64_t)&v84, (uint64_t)v98, &qword_1EF1D46C8);
LABEL_16:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5673E0);
        sub_1B8C914FC();
        sub_1B8CD98EC();
        sub_1B8CE1158();
        memcpy(v98, v99, 0x201uLL);
        nullsub_1(v98);
LABEL_17:
        sub_1B8C8F26C((uint64_t)v98, (uint64_t)v99, &qword_1EF1D4678);
        sub_1B8C8F26C((uint64_t)v99, v61, &qword_1EF1D4678);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4678);
        sub_1B8CD9718();
        sub_1B8CD9868();
        return sub_1B8CE1158();
      }
    }
    else
    {
      sub_1B8C8A3E4(v57);
      v61 = v78;
    }
    sub_1B8C90CCC((uint64_t)v52, (uint64_t)v99);
    v67 = swift_getKeyPath();
    v68 = swift_getKeyPath();
    sub_1B8C90CCC((uint64_t)v99, (uint64_t)v98);
    v69 = swift_allocObject();
    sub_1B8C8A344(v98, v69 + 16);
    *(_BYTE *)(v69 + 56) = 5;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
    v83[0] = 0;
    v82 = 0;
    v81 = 0;
    v84 = v67;
    v85 = 0;
    v87 = 0u;
    v88 = 0u;
    v89 = 0u;
    v90 = 0u;
    v91 = 0u;
    v92 = 0u;
    v86 = v68;
    v93 = 0;
    v94 = 0;
    v95 = sub_1B8C914EC;
    v96 = v69;
    v97 = 0;
    sub_1B8CDA4F0((uint64_t)&v84);
    sub_1B8C8F26C((uint64_t)&v84, (uint64_t)v98, &qword_1EF1D46C8);
    goto LABEL_16;
  }
  v39 = v22;
  v73 = v22;
  sub_1B8CD8898(v80, (uint64_t)v99);
  v40 = (uint64_t)v11;
  sub_1B8CD8B0C((uint64_t)v17);
  v41 = sub_1B8CE1368();
  v43 = v42;
  sub_1B8C92BB0((uint64_t)v17, (uint64_t)v14, &qword_1ED567440);
  v44 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *v44 = v41;
  v44[1] = v43;
  sub_1B8C92BB0((uint64_t)v14, (uint64_t)v21 + *(int *)(v39 + 36), &qword_1ED567480);
  v45 = v99[7];
  v21[6] = v99[6];
  v21[7] = v45;
  v21[8] = v99[8];
  *(_OWORD *)((char *)v21 + 137) = *(_OWORD *)((char *)&v99[8] + 9);
  v46 = v99[3];
  v21[2] = v99[2];
  v21[3] = v46;
  v47 = v99[5];
  v21[4] = v99[4];
  v21[5] = v47;
  v48 = v99[1];
  *v21 = v99[0];
  v21[1] = v48;
  sub_1B8CDB1FC((uint64_t)v99, (void (*)(uint64_t, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE))sub_1B8C85798, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1B8CDA7D4);
  sub_1B8C88430((uint64_t)v14, &qword_1ED567480);
  sub_1B8C88430((uint64_t)v17, &qword_1ED567440);
  sub_1B8CDB1FC((uint64_t)v99, (void (*)(uint64_t, _QWORD))sub_1B8CDAEE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE))sub_1B8C85880, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1B8CDAEEC);
  sub_1B8C8F26C((uint64_t)v21, (uint64_t)v24, &qword_1EF1D4648);
  sub_1B8C92BB0((uint64_t)v24, v75, &qword_1EF1D4648);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1D4678);
  sub_1B8CD973C();
  sub_1B8CD9868();
  sub_1B8CE1158();
  sub_1B8C92BB0(v40, v78, &qword_1EF1D4638);
  swift_storeEnumTagMultiPayload();
  sub_1B8CD9718();
  sub_1B8CE1158();
  sub_1B8C88430(v40, &qword_1EF1D4638);
  v49 = (uint64_t)v24;
  v50 = &qword_1EF1D4648;
  return sub_1B8C88430(v49, v50);
}

uint64_t sub_1B8CD8898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  __int128 v25[2];
  char v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t (*v38)();
  uint64_t v39;
  char v40;
  _BYTE v41[168];

  v4 = type metadata accessor for WKWallpaperPreviewImage();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)v25 - v9;
  v11 = (_QWORD *)(a1 + *(int *)(v8 + 24));
  v12 = v11[3];
  v13 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v14 = (*(uint64_t (**)(const __CFString *, uint64_t, uint64_t))(v13 + 112))(CFSTR("WKWallpaperLocationCoverSheet"), v12, v13);
  sub_1B8CDA3FC(a1, (uint64_t)v10);
  if (!v14)
  {
    sub_1B8C8A3E4((uint64_t)v10);
    sub_1B8CDA3FC(a1, (uint64_t)v7);
    goto LABEL_6;
  }
  v15 = &v10[*(int *)(v4 + 24)];
  v16 = *((_QWORD *)v15 + 3);
  v17 = *((_QWORD *)v15 + 4);
  __swift_project_boxed_opaque_existential_1(v15, v16);
  LOBYTE(v16) = sub_1B8CBDE58(v16, v17);
  sub_1B8C8A3E4((uint64_t)v10);
  sub_1B8CDA3FC(a1, (uint64_t)v7);
  if ((v16 & 1) != 0)
  {
LABEL_6:
    sub_1B8C8A3E4((uint64_t)v7);
    goto LABEL_7;
  }
  v18 = &v7[*(int *)(v4 + 24)];
  v19 = *((_QWORD *)v18 + 3);
  v20 = *((_QWORD *)v18 + 4);
  __swift_project_boxed_opaque_existential_1(v18, v19);
  LOBYTE(v19) = sub_1B8CBE034(v19, v20);
  sub_1B8C8A3E4((uint64_t)v7);
  if ((v19 & 1) != 0)
  {
LABEL_7:
    sub_1B8C90CCC((uint64_t)v11, (uint64_t)&v28);
    KeyPath = swift_getKeyPath();
    v22 = swift_getKeyPath();
    sub_1B8C90CCC((uint64_t)&v28, (uint64_t)v25);
    v23 = swift_allocObject();
    sub_1B8C8A344(v25, v23 + 16);
    *(_BYTE *)(v23 + 56) = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    LOBYTE(v25[0]) = 0;
    v27 = 0;
    v26 = 0;
    *(_QWORD *)&v28 = KeyPath;
    BYTE8(v28) = 0;
    v29 = v22;
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    v35 = 0u;
    v36 = 0;
    v37 = 0;
    v38 = sub_1B8CDB560;
    v39 = v23;
    v40 = 0;
    nullsub_1(&v28);
    goto LABEL_8;
  }
  sub_1B8CDB4C8(&v28);
LABEL_8:
  sub_1B8C8F26C((uint64_t)&v28, (uint64_t)v41, &qword_1EF1D4668);
  return sub_1B8C8F26C((uint64_t)v41, a2, &qword_1EF1D4668);
}

uint64_t sub_1B8CD8B0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565830);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8CE12CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WKWallpaperPreviewImage();
  v11 = (_QWORD *)(v1 + *(int *)(v10 + 24));
  v12 = v11[3];
  v13 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13) & 1) == 0)
    goto LABEL_4;
  if (*(_BYTE *)(v1 + *(int *)(v10 + 28)))
  {
    v14 = sub_1B8CE1890();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
LABEL_4:
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565828);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1B8CE12E4();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CDF6F8], v6);
  sub_1B8CE12FC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = *MEMORY[0x1E0CDF770];
  v18 = sub_1B8CE12F0();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v5, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v5, 0, 1, v18);
  v34 = sub_1B8CE12D8();
  swift_release();
  sub_1B8C88430((uint64_t)v5, &qword_1ED565830);
  v20 = sub_1B8CE12B4();
  KeyPath = swift_getKeyPath();
  sub_1B8CE1374();
  sub_1B8CE0FD8();
  v22 = v51;
  v23 = v52;
  v24 = v53;
  v25 = v54;
  v35 = a1;
  v27 = v55;
  v26 = v56;
  LOBYTE(v17) = sub_1B8CE11E8();
  sub_1B8CE0F6C();
  v36 = v34;
  v37 = KeyPath;
  v38 = v20;
  v39 = v22;
  v40 = v23;
  v41 = v24;
  v42 = v25;
  v43 = v27;
  v44 = v26;
  v45 = v17;
  v46 = v28;
  v47 = v29;
  v48 = v30;
  v49 = v31;
  v50 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565820);
  sub_1B8C8BA94(&qword_1ED565818, &qword_1ED565820, sub_1B8CDB420, MEMORY[0x1E0CD9758]);
  v32 = v35;
  sub_1B8CE1248();
  swift_release();
  swift_release();
  swift_release();
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565828);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
}

uint64_t sub_1B8CD8EF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  _BYTE v24[7];
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  uint64_t (*v35)();
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)();
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  uint64_t (*v65)();
  uint64_t v66;
  char v67;
  _BYTE v68[7];
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[520];

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WKWallpaperPreviewImage() + 24));
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  if ((sub_1B8CBDE58(v4, v5) & 1) != 0)
  {
    sub_1B8C90CCC((uint64_t)v3, (uint64_t)v71);
    KeyPath = swift_getKeyPath();
    v22 = swift_getKeyPath();
    sub_1B8C90CCC((uint64_t)v71, (uint64_t)&v25);
    v6 = swift_allocObject();
    sub_1B8C8A344(&v25, v6 + 16);
    *(_BYTE *)(v6 + 56) = 3;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    v7 = sub_1B8CE1374();
    v20 = v8;
    v21 = v7;
    sub_1B8C90CCC((uint64_t)v3, (uint64_t)v71);
    v19 = swift_getKeyPath();
    v18 = swift_getKeyPath();
    sub_1B8C90CCC((uint64_t)v71, (uint64_t)&v25);
    v9 = swift_allocObject();
    sub_1B8C8A344(&v25, v9 + 16);
    *(_BYTE *)(v9 + 56) = 2;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    v10 = sub_1B8CE1374();
    v16 = v11;
    v17 = v10;
    sub_1B8C90CCC((uint64_t)v3, (uint64_t)v71);
    v12 = swift_getKeyPath();
    v13 = swift_getKeyPath();
    sub_1B8C90CCC((uint64_t)v71, (uint64_t)&v25);
    v14 = swift_allocObject();
    sub_1B8C8A344(&v25, v14 + 16);
    *(_BYTE *)(v14 + 56) = 4;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    *(_QWORD *)&v25 = KeyPath;
    BYTE8(v25) = 0;
    v26 = v22;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0;
    v34 = 0;
    v35 = sub_1B8CDB560;
    v36 = v6;
    v37 = 0;
    v38 = v19;
    v39 = 0;
    v46 = 0u;
    v40 = v18;
    v47 = 0;
    v45 = 0u;
    v44 = 0u;
    v43 = 0u;
    v42 = 0u;
    v41 = 0u;
    v48 = 0;
    v49 = sub_1B8CDB560;
    v50 = v9;
    v51 = 0;
    v52 = v21;
    v53 = v20;
    v54 = v12;
    v55 = 0;
    v61 = 0u;
    v62 = 0u;
    v59 = 0u;
    v60 = 0u;
    v57 = 0u;
    v58 = 0u;
    v56 = v13;
    v63 = 0;
    v64 = 0;
    v65 = sub_1B8CDB560;
    v66 = v14;
    v67 = 0;
    *(_DWORD *)v68 = *(_DWORD *)v24;
    *(_DWORD *)&v68[3] = *(_DWORD *)&v24[3];
    v69 = v17;
    v70 = v16;
    nullsub_1(&v25);
  }
  else
  {
    sub_1B8CDB4F0(&v25);
  }
  sub_1B8C8F26C((uint64_t)&v25, (uint64_t)v71, &qword_1ED5673E0);
  return sub_1B8C8F26C((uint64_t)v71, a1, &qword_1ED5673E0);
}

uint64_t sub_1B8CD9230@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  _BYTE v24[7];
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  uint64_t (*v35)();
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  uint64_t (*v49)();
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  uint64_t (*v65)();
  uint64_t v66;
  char v67;
  _BYTE v68[7];
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[520];

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for WKWallpaperPreviewImage() + 24));
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  if ((sub_1B8CBDE58(v4, v5) & 1) != 0)
  {
    sub_1B8C90CCC((uint64_t)v3, (uint64_t)v71);
    KeyPath = swift_getKeyPath();
    v22 = swift_getKeyPath();
    sub_1B8C90CCC((uint64_t)v71, (uint64_t)&v25);
    v6 = swift_allocObject();
    sub_1B8C8A344(&v25, v6 + 16);
    *(_BYTE *)(v6 + 56) = 7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    v7 = sub_1B8CE1374();
    v20 = v8;
    v21 = v7;
    sub_1B8C90CCC((uint64_t)v3, (uint64_t)v71);
    v19 = swift_getKeyPath();
    v18 = swift_getKeyPath();
    sub_1B8C90CCC((uint64_t)v71, (uint64_t)&v25);
    v9 = swift_allocObject();
    sub_1B8C8A344(&v25, v9 + 16);
    *(_BYTE *)(v9 + 56) = 6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    v10 = sub_1B8CE1374();
    v16 = v11;
    v17 = v10;
    sub_1B8C90CCC((uint64_t)v3, (uint64_t)v71);
    v12 = swift_getKeyPath();
    v13 = swift_getKeyPath();
    sub_1B8C90CCC((uint64_t)v71, (uint64_t)&v25);
    v14 = swift_allocObject();
    sub_1B8C8A344(&v25, v14 + 16);
    *(_BYTE *)(v14 + 56) = 8;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    *(_QWORD *)&v25 = KeyPath;
    BYTE8(v25) = 0;
    v26 = v22;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0;
    v34 = 0;
    v35 = sub_1B8CDB560;
    v36 = v6;
    v37 = 0;
    v38 = v19;
    v39 = 0;
    v46 = 0u;
    v40 = v18;
    v47 = 0;
    v45 = 0u;
    v44 = 0u;
    v43 = 0u;
    v42 = 0u;
    v41 = 0u;
    v48 = 0;
    v49 = sub_1B8CDB560;
    v50 = v9;
    v51 = 0;
    v52 = v21;
    v53 = v20;
    v54 = v12;
    v55 = 0;
    v61 = 0u;
    v62 = 0u;
    v59 = 0u;
    v60 = 0u;
    v57 = 0u;
    v58 = 0u;
    v56 = v13;
    v63 = 0;
    v64 = 0;
    v65 = sub_1B8CDB560;
    v66 = v14;
    v67 = 0;
    *(_DWORD *)v68 = *(_DWORD *)v24;
    *(_DWORD *)&v68[3] = *(_DWORD *)&v24[3];
    v69 = v17;
    v70 = v16;
    nullsub_1(&v25);
  }
  else
  {
    sub_1B8CDB4F0(&v25);
  }
  sub_1B8C8F26C((uint64_t)&v25, (uint64_t)v71, &qword_1ED5673E0);
  return sub_1B8C8F26C((uint64_t)v71, a1, &qword_1ED5673E0);
}

double sub_1B8CD956C@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1B8CB05AC();
  sub_1B8CE1098();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_1B8CD95B8@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1B8CB05AC();
  sub_1B8CE1098();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1B8CD9604()
{
  sub_1B8CB05AC();
  return sub_1B8CE10A4();
}

uint64_t sub_1B8CD964C()
{
  sub_1B8CB05AC();
  return sub_1B8CE10A4();
}

unint64_t sub_1B8CD9694()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1D4618;
  if (!qword_1EF1D4618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4600);
    v2 = sub_1B8C927EC(&qword_1EF1D4620, &qword_1EF1D4628, sub_1B8CD9718, (uint64_t (*)(void))sub_1B8CD9868);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDF690], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4618);
  }
  return result;
}

uint64_t sub_1B8CD9718()
{
  return sub_1B8C927EC(&qword_1EF1D4630, &qword_1EF1D4638, (uint64_t (*)(void))sub_1B8CD973C, (uint64_t (*)(void))sub_1B8CD9868);
}

unint64_t sub_1B8CD973C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1D4640;
  if (!qword_1EF1D4640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4648);
    v2[0] = sub_1B8CD97E0(&qword_1EF1D4650, &qword_1EF1D4658, sub_1B8CD9844, MEMORY[0x1E0CDF690]);
    v2[1] = sub_1B8C86A88(&qword_1ED567478, &qword_1ED567480, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4640);
  }
  return result;
}

uint64_t sub_1B8CD97E0(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x1BCCB94E0](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8CD9844()
{
  return sub_1B8CD97E0(&qword_1EF1D4660, &qword_1EF1D4668, (uint64_t (*)(void))sub_1B8C914FC, MEMORY[0x1E0CE0798]);
}

unint64_t sub_1B8CD9868()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1D4670;
  if (!qword_1EF1D4670)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4678);
    v2 = sub_1B8C927EC(&qword_1EF1D4680, &qword_1EF1D4688, (uint64_t (*)(void))sub_1B8C914FC, sub_1B8CD98EC);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4670);
  }
  return result;
}

uint64_t sub_1B8CD98EC()
{
  return sub_1B8CD97E0(&qword_1ED5673E8, &qword_1ED5673E0, (uint64_t (*)(void))sub_1B8CD9910, MEMORY[0x1E0CE0798]);
}

unint64_t sub_1B8CD9910()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED5673D0;
  if (!qword_1ED5673D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5673D8);
    v2[0] = sub_1B8CD9994();
    v2[1] = sub_1B8C86A88(&qword_1ED567448, &qword_1ED567450, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED5673D0);
  }
  return result;
}

unint64_t sub_1B8CD9994()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED5673A0;
  if (!qword_1ED5673A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5673A8);
    v2[0] = sub_1B8C914FC();
    v2[1] = sub_1B8C86A88(&qword_1ED567488, &qword_1ED567490, MEMORY[0x1E0CDB838]);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED5673A0);
  }
  return result;
}

unint64_t sub_1B8CD9A1C()
{
  unint64_t result;

  result = qword_1EF1D4690;
  if (!qword_1EF1D4690)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperPreviewImage.PreviewStyle, &type metadata for WKWallpaperPreviewImage.PreviewStyle);
    atomic_store(result, (unint64_t *)&qword_1EF1D4690);
  }
  return result;
}

uint64_t sub_1B8CD9A60()
{
  return sub_1B8C86A88(&qword_1EF1D4698, &qword_1EF1D46A0, MEMORY[0x1E0DEAF50]);
}

uint64_t sub_1B8CD9A8C()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for WKWallpaperPreviewImage(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    v14 = v11[16];
    sub_1B8CD9BD4(*(_QWORD *)v11, v13, v14);
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    v10[16] = v14;
    v15 = a3[6];
    v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)((char *)a1 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1B8CD9BD4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for WKWallpaperPreviewImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1B8CE0F84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_1B8CD9C64(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 16));
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
}

uint64_t sub_1B8CD9C64(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for WKWallpaperPreviewImage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  __int128 v14;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B8CE0F84();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  sub_1B8CD9BD4(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  v8[16] = v12;
  v13 = a3[6];
  v14 = *(_OWORD *)((char *)a2 + v13 + 24);
  *(_OWORD *)((char *)a1 + v13 + 24) = v14;
  (**(void (***)(void))(v14 - 8))();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *assignWithCopy for WKWallpaperPreviewImage(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  if (a1 != a2)
  {
    sub_1B8C88430((uint64_t)a1, (uint64_t *)&unk_1ED567170);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *((_QWORD *)v9 + 1);
  v12 = v9[16];
  sub_1B8CD9BD4(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *((_QWORD *)v8 + 1);
  v15 = v8[16];
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  v8[16] = v12;
  sub_1B8CD9C64(v13, v14, v15);
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[6]), (_QWORD *)((char *)a2 + a3[6]));
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

char *initializeWithTake for WKWallpaperPreviewImage(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  char *v13;
  char *v14;
  __int128 v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B8CE0F84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  v12 = *(_OWORD *)v11;
  v10[16] = v11[16];
  *(_OWORD *)v10 = v12;
  v13 = &a1[v9];
  v14 = &a2[v9];
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *assignWithTake for WKWallpaperPreviewImage(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;

  if (a1 != a2)
  {
    sub_1B8C88430((uint64_t)a1, (uint64_t *)&unk_1ED567170);
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = v10[16];
  v12 = *(_QWORD *)v9;
  v13 = *((_QWORD *)v9 + 1);
  v14 = v9[16];
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[16] = v11;
  sub_1B8CD9C64(v12, v13, v14);
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v15]);
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t getEnumTagSinglePayload for WKWallpaperPreviewImage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CDA094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WKWallpaperPreviewImage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CDA124(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

void sub_1B8CDA1A4()
{
  unint64_t v0;

  sub_1B8C86054();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for WKWallpaperPreviewImage.PreviewStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8CDA274 + 4 * byte_1B8CE93B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8CDA2A8 + 4 * asc_1B8CE93B0[v4]))();
}

uint64_t sub_1B8CDA2A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CDA2B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8CDA2B8);
  return result;
}

uint64_t sub_1B8CDA2C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8CDA2CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8CDA2D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CDA2D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WKWallpaperPreviewImage.PreviewStyle()
{
  return &type metadata for WKWallpaperPreviewImage.PreviewStyle;
}

unint64_t sub_1B8CDA2F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EF1D46A8;
  if (!qword_1EF1D46A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4610);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4600);
    v2[3] = sub_1B8CD9694();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1B8CDA38C();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D46A8);
  }
  return result;
}

unint64_t sub_1B8CDA38C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1D46B0;
  if (!qword_1EF1D46B0)
  {
    v1 = sub_1B8CE11D0();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDCFB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1D46B0);
  }
  return result;
}

uint64_t sub_1B8CDA3D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B8CE105C();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8CDA3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKWallpaperPreviewImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_1B8CDA440(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 512) = -1;
  return result;
}

uint64_t sub_1B8CDA490(uint64_t result)
{
  *(_BYTE *)(result + 512) = 1;
  return result;
}

uint64_t sub_1B8CDA49C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B8CE105C();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8CDA4CC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1B8CDA4F0(uint64_t result)
{
  *(_BYTE *)(result + 512) = 0;
  return result;
}

uint64_t sub_1B8CDA4F8(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  unsigned __int8 a65;

  if (a65 != 255)
    return sub_1B8CDAB80(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57,
             a58,
             a59,
             a60,
             a61,
             a62,
             a63);
  return result;
}

uint64_t sub_1B8CDA7C8(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_1B8CDA7D4()
{
  return swift_retain();
}

#error "1B8CDA890: call analysis failed (funcsize=53)"

uint64_t sub_1B8CDA8B0(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  unsigned __int8 a65;

  if (a65 != 255)
    return sub_1B8CDAB80(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57,
             a58,
             a59,
             a60,
             a61,
             a62,
             a63);
  return result;
}

uint64_t sub_1B8CDAB80(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  char a65;
  void (*a66)(uint64_t, _QWORD);
  void (*a67)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE);
  uint64_t (*a68)(uint64_t, uint64_t, _QWORD);

  if ((a65 & 1) != 0)
    return sub_1B8CDAEF4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57,
             a58,
             a59,
             a60,
             a61,
             a62,
             a63);
  a66(a1, a2 & 1);
  a67(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 1);
  return a68(a18, a19, a20 & 1);
}

uint64_t sub_1B8CDAEE0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_1B8CDAEEC()
{
  return swift_release();
}

uint64_t sub_1B8CDAEF4(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  void (*a65)(uint64_t, _QWORD);
  void (*a66)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE);
  void (*a67)(uint64_t, uint64_t, _QWORD);
  int v72;
  int v73;

  if (a2 != -1)
  {
    a65(result, a2 & 1);
    a66(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 1);
    a67(a18, a19, a20 & 1);
    a65(a21, a22 & 1);
    LOBYTE(v72) = a37 & 1;
    a66(a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, v72);
    a67(a38, a39, a40 & 1);
    a65(a43, a44 & 1);
    LOBYTE(v73) = a59 & 1;
    a66(a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, v73);
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))a67)(a60, a61, a62 & 1);
  }
  return result;
}

uint64_t sub_1B8CDB1FC(uint64_t a1, void (*a2)(uint64_t, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE), uint64_t (*a4)(uint64_t, uint64_t, _QWORD))
{
  sub_1B8CDB278(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_OWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_BYTE *)(a1 + 152),
    a2,
    a3,
    a4);
  return a1;
}

uint64_t sub_1B8CDB278(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,void (*a21)(uint64_t, _QWORD),void (*a22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE),uint64_t (*a23)(uint64_t, uint64_t, _QWORD))
{
  if (a2 != -1)
  {
    a21(result, a2 & 1);
    a22(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 1);
    return a23(a18, a19, a20 & 1);
  }
  return result;
}

uint64_t sub_1B8CDB380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8CE1068();
  *a1 = result;
  return result;
}

uint64_t sub_1B8CDB3A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8CE1068();
  *a1 = result;
  return result;
}

uint64_t sub_1B8CDB3D0()
{
  swift_retain();
  return sub_1B8CE1074();
}

uint64_t sub_1B8CDB3F8()
{
  swift_retain();
  return sub_1B8CE1074();
}

uint64_t sub_1B8CDB420()
{
  return sub_1B8C8BA94(&qword_1ED565808, &qword_1ED565810, (uint64_t (*)(void))sub_1B8CDB444, MEMORY[0x1E0CD8D70]);
}

unint64_t sub_1B8CDB444()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED5657F8;
  if (!qword_1ED5657F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565800);
    v2 = sub_1B8C86A88(&qword_1ED567498, &qword_1ED5674A0, MEMORY[0x1E0CDCF80]);
    v3[0] = MEMORY[0x1E0CDF820];
    v3[1] = v2;
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED5657F8);
  }
  return result;
}

double sub_1B8CDB4C8(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1B8CE9670;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  *(_OWORD *)((char *)a1 + 137) = 0u;
  return result;
}

double sub_1B8CDB4F0(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1B8CE9670;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[26] = 0u;
  a1[27] = 0u;
  a1[28] = 0u;
  a1[29] = 0u;
  a1[30] = 0u;
  a1[31] = 0u;
  return result;
}

unint64_t sub_1B8CDB568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1D46D0;
  if (!qword_1EF1D46D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D42E0);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF1D46D0);
  }
  return result;
}

void sub_1B8CDB5B4(char a1)
{
  __asm { BR              X10 }
}

void sub_1B8CDB5D8()
{
  id v0;

  if (qword_1ED5656B8 != -1)
    swift_once();
  v0 = (id)qword_1ED56B9B0;
  JUMPOUT(0x1BCCB85E0);
}

void sub_1B8CDB71C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6EF9FE0;
}

unint64_t sub_1B8CDB730()
{
  unint64_t result;

  result = qword_1EF1D46D8;
  if (!qword_1EF1D46D8)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE9700, &type metadata for WKStripeColor);
    atomic_store(result, (unint64_t *)&qword_1EF1D46D8);
  }
  return result;
}

unint64_t sub_1B8CDB778()
{
  unint64_t result;

  result = qword_1EF1D46E0;
  if (!qword_1EF1D46E0)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE9740, &type metadata for WKStripeColor);
    atomic_store(result, (unint64_t *)&qword_1EF1D46E0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WKStripeColor(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WKStripeColor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B8CDB898 + 4 * byte_1B8CE968B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B8CDB8CC + 4 * byte_1B8CE9686[v4]))();
}

uint64_t sub_1B8CDB8CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CDB8D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8CDB8DCLL);
  return result;
}

uint64_t sub_1B8CDB8E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8CDB8F0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B8CDB8F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CDB8FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WKStripeColor()
{
  return &type metadata for WKStripeColor;
}

uint64_t WKStillWallpaper.init(identifier:name:thumbnailImageURL:fullsizeImageURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t result;

  v8 = objc_allocWithZone((Class)WKStillWallpaper);
  v9 = (void *)sub_1B8CE1494();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1B8CE0DEC();
  v11 = (void *)sub_1B8CE0DEC();
  v12 = objc_msgSend(v8, sel_initWithIdentifier_name_type_thumbnailImageURL_fullsizeImageURL_, a1, v9, 0, v10, v11);

  v13 = sub_1B8CE0E1C();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(a3, v13);
  v14(a2, v13);
  type metadata accessor for WKStillWallpaper.ImplementationWrapper();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v12;
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for WKStillWallpaper.ImplementationWrapper()
{
  return objc_opt_self();
}

void WKStillWallpaper.fullsizeImageURL.getter()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_fullsizeImageURL);
  sub_1B8CE0E04();

}

uint64_t WKStillWallpaper.videoAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_videoAssetURL, a1);
}

id WKStillWallpaper.stillTimeInVideo.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_stillTimeInVideo);
}

id WKStillWallpaper.identifier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_identifier);
}

uint64_t WKStillWallpaper.name.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_name);
}

id WKStillWallpaper.type.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_type);
}

id WKStillWallpaper.representedType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_representedType);
}

id WKStillWallpaper.backingType.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backingType);
}

uint64_t WKStillWallpaper.thumbnailImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8C842C8((SEL *)&selRef_thumbnailImageURL, a1);
}

id WKStillWallpaper.thumbnailImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_thumbnailImage);
}

id WKStillWallpaper.supportsSerialization.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsSerialization);
}

id WKStillWallpaper.supportsCopying.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_supportsCopying);
}

Swift::OpaquePointer_optional __swiftcall WKStillWallpaper.propertyListRepresentation()()
{
  uint64_t v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_propertyListRepresentation);
  if (v1)
  {
    v3 = v1;
    v4 = sub_1B8CE144C();

  }
  else
  {
    v4 = 0;
  }
  v5 = (void *)v4;
  result.value._rawValue = v5;
  result.is_nil = v2;
  return result;
}

id WKStillWallpaper.copyWallpaperContents(to:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1B8CE0DEC();
  v6[0] = 0;
  v3 = objc_msgSend(v1, sel_copyWallpaperContentsToDestinationDirectoryURL_error_, v2, v6);

  if (v3)
    return v6[0];
  v5 = v6[0];
  sub_1B8CE0DBC();

  return (id)swift_willThrow();
}

id static WKStillWallpaper.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t WKStillWallpaper.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  sub_1B8CE1650();

  return sub_1B8CE18E4();
}

uint64_t WKStillWallpaper.description.getter()
{
  return sub_1B8C82D7C((SEL *)&selRef_description);
}

uint64_t WKStillWallpaper.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  sub_1B8CE18D8();
  v2 = *(id *)(v1 + 16);
  sub_1B8CE1650();

  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

unint64_t sub_1B8CDBDA8()
{
  unint64_t result;

  result = qword_1EF1D46E8;
  if (!qword_1EF1D46E8)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKStillWallpaper, &type metadata for WKStillWallpaper);
    atomic_store(result, (unint64_t *)&qword_1EF1D46E8);
  }
  return result;
}

id sub_1B8CDBDEC()
{
  return WKStillWallpaper.copyWallpaperContents(to:)();
}

ValueMetadata *type metadata accessor for WKStillWallpaper()
{
  return &type metadata for WKStillWallpaper;
}

uint64_t sub_1B8CDBE14@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[128];
  char v67;

  v65 = a1;
  v64 = type metadata accessor for WKAdaptiveStripeWallpaperForegroundLayer();
  v2 = MEMORY[0x1E0C80A78](v64);
  v62 = (uint64_t *)((char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v2);
  v63 = (uint64_t)&v56 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5653F8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5653D8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_OWORD *)((char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565430);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654A8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  v18 = swift_retain();
  v19 = sub_1B8C9223C(v18);
  swift_release();
  if ((v19 & 1) != 0)
  {
    *(_QWORD *)v66 = swift_getKeyPath();
    memset(&v66[8], 0, 105);
    *(_QWORD *)&v66[120] = v17;
    v20 = *(_OWORD *)&v66[80];
    v10[4] = *(_OWORD *)&v66[64];
    v10[5] = v20;
    v21 = *(_OWORD *)&v66[112];
    v10[6] = *(_OWORD *)&v66[96];
    v10[7] = v21;
    v22 = *(_OWORD *)&v66[16];
    *v10 = *(_OWORD *)v66;
    v10[1] = v22;
    v23 = *(_OWORD *)&v66[48];
    v10[2] = *(_OWORD *)&v66[32];
    v10[3] = v23;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1B8C92C30((uint64_t)v66);
    sub_1B8CDC6D4();
    sub_1B8C83740(&qword_1ED565178, (uint64_t (*)(uint64_t))type metadata accessor for WKAdaptiveStripeWallpaperForegroundLayer, (uint64_t)&unk_1B8CE9BD0);
    sub_1B8CE1158();
    sub_1B8C92BB0((uint64_t)v13, (uint64_t)v7, &qword_1ED565430);
    swift_storeEnumTagMultiPayload();
    sub_1B8CDC650();
    sub_1B8CDC718();
    sub_1B8CE1158();
    sub_1B8C88430((uint64_t)v13, &qword_1ED565430);
    sub_1B8C92C94((uint64_t)v66);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654A0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 0, 1, v24);
    v25 = (uint64_t)v16;
    v26 = v65;
    return sub_1B8CDC828(v25, v26);
  }
  v59 = v8;
  v57 = v13;
  v58 = v16;
  v27 = (int *)v64;
  v60 = v5;
  v61 = v11;
  v28 = swift_retain();
  v29 = sub_1B8C92334(v28);
  swift_release();
  v30 = v65;
  v31 = (uint64_t)v7;
  if ((v29 & 1) != 0)
  {
    v32 = objc_msgSend(*(id *)(v17 + 16), sel_logicalScreenClass);
    v33 = sub_1B8CE14B8();
    v35 = v34;
    if (v33 == sub_1B8CE14B8() && v35 == v36)
    {

      swift_bridgeObjectRelease_n();
      v30 = v65;
LABEL_8:
      KeyPath = swift_getKeyPath();
      v39 = (uint64_t)v62;
      *v62 = KeyPath;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
      swift_storeEnumTagMultiPayload();
      v40 = v39 + v27[5];
      *(_QWORD *)v40 = swift_getKeyPath();
      *(_OWORD *)(v40 + 8) = 0u;
      *(_OWORD *)(v40 + 24) = 0u;
      *(_OWORD *)(v40 + 40) = 0u;
      *(_OWORD *)(v40 + 56) = 0u;
      *(_OWORD *)(v40 + 72) = 0u;
      *(_OWORD *)(v40 + 88) = 0u;
      *(_OWORD *)(v40 + 97) = 0u;
      v41 = v39 + v27[6];
      type metadata accessor for WKWallpaperPosterLayerViewModel();
      sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
      swift_retain();
      *(_QWORD *)v41 = sub_1B8CE0F9C();
      *(_BYTE *)(v41 + 8) = v42 & 1;
      *(_QWORD *)(v39 + v27[7]) = v17;
      v43 = v63;
      sub_1B8CDC764(v39, v63);
      sub_1B8CDC7A8(v43, (uint64_t)v10);
      swift_storeEnumTagMultiPayload();
      sub_1B8CDC6D4();
      sub_1B8C83740(&qword_1ED565178, (uint64_t (*)(uint64_t))type metadata accessor for WKAdaptiveStripeWallpaperForegroundLayer, (uint64_t)&unk_1B8CE9BD0);
      v44 = (uint64_t)v57;
      sub_1B8CE1158();
      sub_1B8C92BB0(v44, v31, &qword_1ED565430);
      swift_storeEnumTagMultiPayload();
      sub_1B8CDC650();
      sub_1B8CDC718();
      v45 = (uint64_t)v58;
      sub_1B8CE1158();
      sub_1B8C88430(v44, &qword_1ED565430);
      sub_1B8CDC7EC(v43);
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654A0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 0, 1, v46);
      v25 = v45;
      v26 = v30;
      return sub_1B8CDC828(v25, v26);
    }
    v37 = sub_1B8CE1890();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v65;
    if ((v37 & 1) != 0)
      goto LABEL_8;
  }
  v48 = swift_retain();
  v49 = sub_1B8C92514(v48);
  swift_release();
  if ((v49 & 1) != 0)
  {
    type metadata accessor for WKWallpaperPosterLayerViewModel();
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    swift_retain();
    v50 = sub_1B8CE0F9C();
    v52 = v51;
    v53 = swift_getKeyPath();
    v66[0] = v52 & 1;
    v67 = 0;
    *(_QWORD *)v31 = v50;
    *(_BYTE *)(v31 + 8) = v52 & 1;
    *(_QWORD *)(v31 + 16) = v53;
    *(_OWORD *)(v31 + 24) = 0u;
    *(_OWORD *)(v31 + 40) = 0u;
    *(_OWORD *)(v31 + 56) = 0u;
    *(_OWORD *)(v31 + 72) = 0u;
    *(_OWORD *)(v31 + 88) = 0u;
    *(_OWORD *)(v31 + 104) = 0u;
    *(_QWORD *)(v31 + 120) = 0;
    *(_BYTE *)(v31 + 128) = 0;
    *(_QWORD *)(v31 + 136) = v17;
    swift_storeEnumTagMultiPayload();
    sub_1B8CDC650();
    sub_1B8CDC718();
    sub_1B8CE1158();
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654A0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v30, 0, 1, v54);
  }
  else
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v30, 1, 1, v55);
  }
}

uint64_t sub_1B8CDC55C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *v1;
  sub_1B8CDBE14((uint64_t)v5);
  v6 = sub_1B8CE1020();
  v7 = sub_1B8CE11E8();
  sub_1B8C92BB0((uint64_t)v5, a1, &qword_1ED5654A8);
  v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED5653A0) + 36);
  *(_QWORD *)v8 = v6;
  *(_BYTE *)(v8 + 8) = v7;
  return sub_1B8C88430((uint64_t)v5, &qword_1ED5654A8);
}

ValueMetadata *type metadata accessor for WKWallpaperPosterForeground()
{
  return &type metadata for WKWallpaperPosterForeground;
}

uint64_t sub_1B8CDC638()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B8CDC650()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565428;
  if (!qword_1ED565428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED565430);
    v2[0] = sub_1B8CDC6D4();
    v2[1] = sub_1B8C83740(&qword_1ED565178, (uint64_t (*)(uint64_t))type metadata accessor for WKAdaptiveStripeWallpaperForegroundLayer, (uint64_t)&unk_1B8CE9BD0);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565428);
  }
  return result;
}

unint64_t sub_1B8CDC6D4()
{
  unint64_t result;

  result = qword_1ED565158;
  if (!qword_1ED565158)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE5AF8, &type metadata for WKLayeredStillWallpaperPosterForeground);
    atomic_store(result, (unint64_t *)&qword_1ED565158);
  }
  return result;
}

unint64_t sub_1B8CDC718()
{
  unint64_t result;

  result = qword_1ED5651B8;
  if (!qword_1ED5651B8)
  {
    result = MEMORY[0x1BCCB94E0](&unk_1B8CE4D3C, &type metadata for WKLayeredAnimationWallpaperPosterForeground);
    atomic_store(result, (unint64_t *)&qword_1ED5651B8);
  }
  return result;
}

uint64_t sub_1B8CDC764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKAdaptiveStripeWallpaperForegroundLayer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CDC7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WKAdaptiveStripeWallpaperForegroundLayer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CDC7EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WKAdaptiveStripeWallpaperForegroundLayer();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B8CDC828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5654A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8CDC874()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565398;
  if (!qword_1ED565398)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5653A0);
    v2[0] = sub_1B8CDC8E0();
    v2[1] = MEMORY[0x1E0CDCF90];
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565398);
  }
  return result;
}

unint64_t sub_1B8CDC8E0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED5654B0;
  if (!qword_1ED5654B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5654A8);
    v2 = sub_1B8CDC944();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED5654B0);
  }
  return result;
}

unint64_t sub_1B8CDC944()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED565498;
  if (!qword_1ED565498)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5654A0);
    v2[0] = sub_1B8CDC650();
    v2[1] = sub_1B8CDC718();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED565498);
  }
  return result;
}

uint64_t *sub_1B8CDC9B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    v13 = *(_QWORD *)v12;
    LOBYTE(v12) = v12[8];
    *(_QWORD *)v11 = v13;
    v11[8] = (char)v12;
    v14 = (char *)a1 + v10;
    v15 = (char *)a2 + v10;
    v16 = *(_OWORD *)(v15 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v16;
    v17 = v16;
    v18 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_retain();
    v18(v14, v15, v17);
  }
  return a1;
}

uint64_t sub_1B8CDCAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1B8CE0F84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
}

_QWORD *sub_1B8CDCB4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B8CE0F84();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v7;
  v10 = (char *)a2 + v7;
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  v12 = (char *)a1 + v8;
  v13 = (char *)a2 + v8;
  v14 = *(_OWORD *)(v13 + 24);
  *(_OWORD *)((char *)a1 + v8 + 24) = v14;
  v15 = v14;
  v16 = **(void (***)(char *, char *, uint64_t))(v14 - 8);
  swift_retain();
  v16(v12, v13, v15);
  return a1;
}

_QWORD *sub_1B8CDCC40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1B8C85C20((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B8CE0F84();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  LOBYTE(v9) = v9[8];
  *(_QWORD *)v8 = v10;
  v8[8] = (char)v9;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + *(int *)(a3 + 24)), (_QWORD *)((char *)a2 + *(int *)(a3 + 24)));
  return a1;
}

char *sub_1B8CDCD2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B8CE0F84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = &a1[v9];
  v13 = &a2[v9];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  return a1;
}

char *sub_1B8CDCDFC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  if (a1 != a2)
  {
    sub_1B8C85C20((uint64_t)a1);
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8CE0F84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  swift_release();
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = &a2[v12];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v12]);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  return a1;
}

uint64_t sub_1B8CDCEF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CDCEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B8CDCF80()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CDCF8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WKBokehViewRepresentable()
{
  uint64_t result;

  result = qword_1ED565690;
  if (!qword_1ED565690)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8CDD048()
{
  unint64_t v0;

  sub_1B8C86054();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B8CDD0C4()
{
  return sub_1B8C83740(&qword_1ED565688, (uint64_t (*)(uint64_t))type metadata accessor for WKBokehViewRepresentable, (uint64_t)&unk_1B8CE9AE0);
}

uint64_t sub_1B8CDD0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_1B8CE0F84();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for WKBokehViewRepresentable();
  v6 = (_QWORD *)(v0 + *(int *)(v5 + 24));
  v7 = v6[3];
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  sub_1B8CDF87C((uint64_t)v4);
  sub_1B8CBE3E0(v7, v8, &v16);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v16)
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)WKBokehView), sel_initWithBokehWallpaperInput_, *(_QWORD *)(v16 + 16));
    objc_msgSend(v9, sel_setClipsToBounds_, 1);
    v10 = *(_BYTE *)(v0 + *(int *)(v5 + 20) + 8);
    v11 = swift_retain();
    v12 = sub_1B8CDFAB4(v11, v10);
    swift_release();
    swift_getKeyPath();
    v16 = v12;
    sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
    sub_1B8CE0E7C();
    swift_release();
    v13 = *(unsigned __int8 *)(v12 + 144);
    swift_release();
    objc_msgSend(v9, sel_setAnimationEnabled_, v13);
    swift_release();
    return (uint64_t)v9;
  }
  else
  {
    result = sub_1B8CE17D0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B8CDD2EC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_1B8CE0F84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WKBokehViewRepresentable();
  v9 = *(_BYTE *)(v1 + *(int *)(v8 + 20) + 8);
  v10 = swift_retain();
  v11 = sub_1B8CDFAB4(v10, v9);
  swift_release();
  swift_getKeyPath();
  v18 = v11;
  sub_1B8C83740((unint64_t *)&qword_1ED5652E0, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperPosterLayerViewModel, (uint64_t)&unk_1B8CE7958);
  sub_1B8CE0E7C();
  swift_release();
  v12 = *(unsigned __int8 *)(v11 + 144);
  swift_release();
  objc_msgSend(a1, sel_setAnimationEnabled_, v12);
  v13 = (_QWORD *)(v2 + *(int *)(v8 + 24));
  v14 = v13[3];
  v15 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  sub_1B8CDF87C((uint64_t)v7);
  sub_1B8CBE3E0(v14, v15, &v18);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v18)
  {
    objc_msgSend(a1, sel_setBokehWallpaperInput_, *(_QWORD *)(v18 + 16));
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8CDD494()
{
  sub_1B8C83740(&qword_1ED565680, (uint64_t (*)(uint64_t))type metadata accessor for WKBokehViewRepresentable, (uint64_t)&unk_1B8CE9A50);
  return sub_1B8CE1140();
}

uint64_t sub_1B8CDD4FC()
{
  sub_1B8C83740(&qword_1ED565680, (uint64_t (*)(uint64_t))type metadata accessor for WKBokehViewRepresentable, (uint64_t)&unk_1B8CE9A50);
  return sub_1B8CE10EC();
}

void sub_1B8CDD564()
{
  sub_1B8C83740(&qword_1ED565680, (uint64_t (*)(uint64_t))type metadata accessor for WKBokehViewRepresentable, (uint64_t)&unk_1B8CE9A50);
  sub_1B8CE1134();
  __break(1u);
}

uint64_t sub_1B8CDD5A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CDD5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B8CDD634()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8CDD640(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED565350);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for WKAdaptiveStripeWallpaperForegroundLayer()
{
  uint64_t result;

  result = qword_1ED565180;
  if (!qword_1ED565180)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B8CDD6F8()
{
  unint64_t v0;

  sub_1B8C86054();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B8CDD780()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8CDD790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[7];
  _OWORD v65[7];
  char v66;
  _OWORD v67[13];

  v2 = v1;
  v4 = sub_1B8CE0F84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for WKAdaptiveStripeWallpaperForegroundLayer();
  v9 = *(_BYTE *)(v1 + v8[6] + 8);
  v10 = swift_retain();
  sub_1B8CDFAB4(v10, v9);
  swift_release();
  v11 = sub_1B8CB5434();
  v32 = v13;
  v33 = v12;
  v15 = v14;
  swift_release();
  if ((v15 & 1) != 0)
    goto LABEL_4;
  v16 = *(_QWORD *)(v2 + v8[7]);
  v17 = v2 + v8[5];
  v18 = *(_OWORD *)(v17 + 80);
  v65[4] = *(_OWORD *)(v17 + 64);
  v65[5] = v18;
  v65[6] = *(_OWORD *)(v17 + 96);
  v66 = *(_BYTE *)(v17 + 112);
  v19 = *(_OWORD *)(v17 + 16);
  v65[0] = *(_OWORD *)v17;
  v65[1] = v19;
  v20 = *(_OWORD *)(v17 + 48);
  v65[2] = *(_OWORD *)(v17 + 32);
  v65[3] = v20;
  swift_retain();
  sub_1B8C86848((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85798);
  sub_1B8CDF63C((uint64_t)v67);
  sub_1B8C86848((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85880);
  v64[4] = v67[4];
  v64[5] = v67[5];
  v64[6] = v67[6];
  v64[0] = v67[0];
  v64[1] = v67[1];
  v64[2] = v67[2];
  v64[3] = v67[3];
  sub_1B8CDF87C((uint64_t)v7);
  sub_1B8CD1B44((double *)v64, (uint64_t)v7, v16, &v37);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1B8C87884((uint64_t)v64);
  swift_release();
  v21 = v37;
  if (!v37)
  {
LABEL_4:
    sub_1B8C87818(&v38);
  }
  else
  {
    KeyPath = swift_getKeyPath();
    v34 = 0;
    swift_retain();
    WKPosterCanvasSize();
    WKPosterCanvasSize();
    sub_1B8CE1374();
    sub_1B8CE0FD8();
    v22 = v58;
    v23 = v59;
    v24 = v60;
    v25 = v61;
    v26 = a1;
    v28 = v62;
    v27 = v63;
    swift_release();
    v36 = v23;
    v35 = v25;
    v38 = KeyPath;
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v45 = 0;
    v46 = v34;
    v47 = v11;
    v48 = v33;
    v49 = v32;
    v50 = v21;
    v51 = 0;
    v52 = v22;
    v53 = v23;
    v54 = v24;
    v55 = v25;
    v56 = v28;
    v57 = v27;
    a1 = v26;
    nullsub_1(&v38);
  }
  sub_1B8C8783C((uint64_t)&v38, (uint64_t)v67);
  return sub_1B8C8783C((uint64_t)v67, a1);
}

BOOL static WKWallpaperImage.ImageType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WKWallpaperImage.ImageType.hash(into:)()
{
  return sub_1B8CE18E4();
}

uint64_t WKWallpaperImage.ImageType.hashValue.getter()
{
  sub_1B8CE18D8();
  sub_1B8CE18E4();
  return sub_1B8CE1908();
}

uint64_t sub_1B8CDDAF8(uint64_t a1, char a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1B8C90CCC(a1, (uint64_t)v5);
  type metadata accessor for WKWallpaperImageViewModel();
  v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5674A8);
  sub_1B8CE0F18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED5674B8);
  sub_1B8CE0F18();
  sub_1B8C8A344(v5, v3 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel_wallpaperRepresenting);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel_type) = a2;
  return v3;
}

double WKWallpaperImage.body.getter@<D0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  _BYTE v32[4];
  int v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[5];
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  __int128 v47[8];
  _OWORD v48[2];
  _BYTE v49[7];
  char v50;

  v3 = sub_1B8CE10BC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v32[-v8];
  v10 = v1[7];
  v47[6] = v1[6];
  v47[7] = v10;
  v48[0] = v1[8];
  *(_OWORD *)((char *)v48 + 9) = *(__int128 *)((char *)v1 + 137);
  v11 = v1[3];
  v47[2] = v1[2];
  v47[3] = v11;
  v12 = v1[5];
  v47[4] = v1[4];
  v47[5] = v12;
  v13 = v1[1];
  v47[0] = *v1;
  v47[1] = v13;
  v42 = sub_1B8CE12A8();
  v14 = (_OWORD *)swift_allocObject();
  v15 = v1[7];
  v14[7] = v1[6];
  v14[8] = v15;
  v14[9] = v1[8];
  *(_OWORD *)((char *)v14 + 153) = *(__int128 *)((char *)v1 + 137);
  v16 = v1[3];
  v14[3] = v1[2];
  v14[4] = v16;
  v17 = v1[5];
  v14[5] = v1[4];
  v14[6] = v17;
  v18 = v1[1];
  v14[1] = *v1;
  v14[2] = v18;
  sub_1B8CDF314((uint64_t)v47, (void (*)(_QWORD, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDA7D4);
  v19 = sub_1B8CE1374();
  v40 = v20;
  v41 = v19;
  sub_1B8CDDFE4(v47, (uint64_t)v43);
  v38 = v43[1];
  v39 = v43[0];
  v36 = v43[3];
  v37 = v43[2];
  v35 = v43[4];
  v21 = v44;
  v34 = v45;
  v33 = v46;
  sub_1B8CE10B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_1B8C83740((unint64_t *)&unk_1ED566C98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDABC0], MEMORY[0x1E0CDABB0]);
  v22 = sub_1B8CE0FE4();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  v23 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v24 = objc_msgSend(v23, sel_fixedCoordinateSpace);

  objc_msgSend(v24, sel_bounds);
  v26 = v25;
  v28 = v27;
  swift_unknownObjectRelease();
  v50 = 0;
  *(_QWORD *)a1 = v42;
  *(_QWORD *)(a1 + 8) = sub_1B8CDDFDC;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 40) = v39;
  *(_OWORD *)(a1 + 56) = v38;
  *(_OWORD *)(a1 + 72) = v37;
  *(_OWORD *)(a1 + 88) = v36;
  *(_OWORD *)(a1 + 104) = v35;
  v29 = v34;
  *(_QWORD *)(a1 + 120) = v21;
  *(_QWORD *)(a1 + 128) = v29;
  *(_BYTE *)(a1 + 136) = v33;
  *(_DWORD *)(a1 + 140) = *(_DWORD *)&v49[3];
  result = v26 / v28;
  *(_DWORD *)(a1 + 137) = *(_DWORD *)v49;
  v31 = v41;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v31;
  *(_QWORD *)(a1 + 160) = v40;
  *(_BYTE *)(a1 + 168) = 1;
  *(_DWORD *)(a1 + 169) = v43[0];
  *(_DWORD *)(a1 + 172) = *(_DWORD *)((char *)v43 + 3);
  *(double *)(a1 + 176) = v26 / v28;
  *(_BYTE *)(a1 + 184) = v50;
  *(_BYTE *)(a1 + 185) = 1;
  return result;
}

uint64_t sub_1B8CDDEB8(uint64_t a1)
{
  sub_1B8CDF314(a1, (void (*)(_QWORD, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDA7D4);
  type metadata accessor for WKWallpaperImageViewModel();
  sub_1B8C83740(&qword_1ED567360, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperImageViewModel, (uint64_t)&unk_1B8CE8250);
  sub_1B8CE0FA8();
  sub_1B8CDF314(a1, (void (*)(_QWORD, _QWORD))sub_1B8CDAEE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85880, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDAEEC);
  sub_1B8CBF790();
  return swift_release();
}

uint64_t sub_1B8CDDF74()
{
  uint64_t v0;

  sub_1B8CDAEE0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  sub_1B8C85880(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void **)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));
  sub_1B8CDAEEC();
  return swift_deallocObject();
}

uint64_t sub_1B8CDDFDC()
{
  uint64_t v0;

  return sub_1B8CDDEB8(v0 + 16);
}

uint64_t sub_1B8CDDFE4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  int v11;
  uint64_t result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[3];

  sub_1B8CDF314((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDA7D4);
  type metadata accessor for WKWallpaperImageViewModel();
  sub_1B8C83740(&qword_1ED567360, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperImageViewModel, (uint64_t)&unk_1B8CE8250);
  v4 = sub_1B8CE0FA8();
  sub_1B8CDF314((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1B8CDAEE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85880, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDAEEC);
  v5 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel_type);
  swift_release();
  if (v5 >= 5)
  {
    sub_1B8CDF314((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDA7D4);
    v10 = sub_1B8CE0FA8();
    sub_1B8CDF314((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_1B8CDAEE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85880, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDAEEC);
    v11 = *(unsigned __int8 *)(v10 + OBJC_IVAR____TtC12WallpaperKit25WKWallpaperImageViewModel_type);
    result = swift_release();
    if ((v11 - 5) >= 4)
    {
      v17 = 0uLL;
      v23 = -1;
      v18 = 0uLL;
      v19 = 0uLL;
      v20 = 0uLL;
      v21 = 0uLL;
      v22 = 0uLL;
      goto LABEL_7;
    }
    v13 = a1[7];
    v34 = a1[6];
    v35 = v13;
    v36[0] = a1[8];
    *(_OWORD *)((char *)v36 + 9) = *(__int128 *)((char *)a1 + 137);
    v14 = a1[3];
    v30 = a1[2];
    v31 = v14;
    v15 = a1[5];
    v32 = a1[4];
    v33 = v15;
    v16 = a1[1];
    v28 = *a1;
    v29 = v16;
    sub_1B8CDE7FC((uint64_t)&v24);
    v25 = (unsigned __int16)v25;
    v26 = 0uLL;
    v27 = 1;
  }
  else
  {
    v6 = a1[7];
    v34 = a1[6];
    v35 = v6;
    v36[0] = a1[8];
    *(_OWORD *)((char *)v36 + 9) = *(__int128 *)((char *)a1 + 137);
    v7 = a1[3];
    v30 = a1[2];
    v31 = v7;
    v8 = a1[5];
    v32 = a1[4];
    v33 = v8;
    v9 = a1[1];
    v28 = *a1;
    v29 = v9;
    sub_1B8CDE324((uint64_t)&v24);
    v27 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567430);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED567408);
  sub_1B8CDF4EC(&qword_1ED567438, &qword_1ED567430, (uint64_t (*)(void))sub_1B8CDF3F4);
  sub_1B8CDF4EC(&qword_1ED567410, &qword_1ED567408, sub_1B8CDF4D0);
  result = sub_1B8CE1158();
  v17 = v28;
  v18 = v29;
  v19 = v30;
  v20 = v31;
  v21 = v32;
  v22 = v33;
  v23 = v34;
LABEL_7:
  *(_OWORD *)a2 = v17;
  *(_OWORD *)(a2 + 16) = v18;
  *(_OWORD *)(a2 + 32) = v19;
  *(_OWORD *)(a2 + 48) = v20;
  *(_OWORD *)(a2 + 64) = v21;
  *(_OWORD *)(a2 + 80) = v22;
  *(_BYTE *)(a2 + 96) = v23;
  return result;
}

unint64_t sub_1B8CDE2D0()
{
  unint64_t result;

  result = qword_1EF1D46F0;
  if (!qword_1EF1D46F0)
  {
    result = MEMORY[0x1BCCB94E0](&protocol conformance descriptor for WKWallpaperImage.ImageType, &type metadata for WKWallpaperImage.ImageType);
    atomic_store(result, (unint64_t *)&qword_1EF1D46F0);
  }
  return result;
}

uint64_t sub_1B8CDE314()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8CDE324@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char v31;
  double v32;
  double v33;
  uint64_t v34;
  double v35;
  uint64_t result;
  uint64_t v37;
  __int128 v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  double v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  id v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  unsigned __int8 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  unsigned __int8 v79[48];

  v3 = sub_1B8CE12CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[7];
  v77 = v1[6];
  v78 = v7;
  *(_OWORD *)v79 = v1[8];
  *(_OWORD *)&v79[9] = *(__int128 *)((char *)v1 + 137);
  v8 = v1[3];
  v73 = v1[2];
  v74 = v8;
  v9 = v1[5];
  v75 = v1[4];
  v76 = v9;
  v10 = v1[1];
  v71 = *v1;
  v72 = v10;
  sub_1B8CDF314((uint64_t)&v71, (void (*)(_QWORD, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDA7D4);
  type metadata accessor for WKWallpaperImageViewModel();
  sub_1B8C83740(&qword_1ED567360, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperImageViewModel, (uint64_t)&unk_1B8CE8250);
  sub_1B8CE0FA8();
  sub_1B8CDF314((uint64_t)&v71, (void (*)(_QWORD, _QWORD))sub_1B8CDAEE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85880, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDAEEC);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8CE0F24();
  swift_release();
  swift_release();
  swift_release();
  v11 = v63;
  if ((_QWORD)v63)
  {
    v55 = a1;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CDF6F8], v3);
    v54 = sub_1B8CE12FC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v12 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    v13 = objc_msgSend(v12, sel_fixedCoordinateSpace);

    objc_msgSend(v13, sel_bounds);
    v15 = v14;
    v17 = v16;
    swift_unknownObjectRelease();
    v53 = sub_1B8CE1164();
    v18 = *((_QWORD *)&v72 + 1);
    *(_QWORD *)&v56 = v72;
    v51 = *((_QWORD *)&v73 + 1);
    v52 = v73;
    v19 = v74;
    v49 = v75;
    v50 = *((_QWORD *)&v74 + 1);
    v47 = v74;
    v48 = (void *)*((_QWORD *)&v75 + 1);
    v20 = v76;
    v21 = v77;
    v22 = v78;
    LOBYTE(v12) = v79[0];
    v63 = v72;
    v45 = v76;
    v46 = *((_QWORD *)&v72 + 1);
    v64 = v73;
    v65 = v74;
    v66 = v75;
    v67 = v76;
    v43 = v77;
    v44 = *((_QWORD *)&v76 + 1);
    v68 = v77;
    v69 = v78;
    v70 = v79[0];
    HIDWORD(v42) = v79[0];
    sub_1B8CDF314((uint64_t)&v71, (void (*)(_QWORD, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDA7D4);
    v23 = v18;
    v24 = v51;
    v25 = v52;
    v26 = v19;
    v28 = v49;
    v27 = v50;
    v29 = v48;
    sub_1B8C85798(v56, v23, v52, v51, v26, v50, v49, v48, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), (char)v12);
    sub_1B8CDF63C((uint64_t)&v57);
    sub_1B8C85880(v56, v46, v25, v24, v47, v27, v28, v29, v45, v44, v43, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), SBYTE4(v42));
    sub_1B8CDF314((uint64_t)&v71, (void (*)(_QWORD, _QWORD))sub_1B8CDAEE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85880, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDAEEC);
    LOBYTE(v24) = v61;

    swift_release();
    if ((v24 & 1) == 0)
    {
      v30 = v71;
      v31 = BYTE8(v71);
      sub_1B8CDF314((uint64_t)&v71, (void (*)(_QWORD, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDA7D4);
      sub_1B8CDA7C8(v30, v31);
      sub_1B8CDFC70(v30, v31);
      sub_1B8CDAEE0(v30, v31);
      sub_1B8CDF314((uint64_t)&v71, (void (*)(_QWORD, _QWORD))sub_1B8CDAEE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85880, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDAEEC);
    }
    v32 = v15 / v17;
    sub_1B8CE0FB4();
    v33 = v57;
    v56 = v58;
    v34 = v59;
    v11 = v60;
    v35 = v57 * 0.5;
    result = sub_1B8CE1374();
    v38 = v56;
    v39 = v33;
    v40 = v53 | 0x10000000000;
    v41 = v54;
    a1 = v55;
  }
  else
  {
    v41 = 0;
    v39 = 0.0;
    v34 = 0;
    v40 = 0;
    result = 0;
    v37 = 0;
    v38 = 0uLL;
    v32 = 0.0;
    v35 = 0.0;
  }
  *(_QWORD *)a1 = v41;
  *(double *)(a1 + 8) = v32;
  *(_QWORD *)(a1 + 16) = 0;
  *(double *)(a1 + 24) = v35;
  *(double *)(a1 + 32) = v39;
  *(_OWORD *)(a1 + 40) = v38;
  *(_QWORD *)(a1 + 56) = v34;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v40;
  *(_QWORD *)(a1 + 80) = result;
  *(_QWORD *)(a1 + 88) = v37;
  return result;
}

uint64_t sub_1B8CDE7FC@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t result;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;
  __int128 v25;
  _OWORD v26[8];
  _BYTE v27[25];

  v20 = sub_1B8CE12CC();
  v19 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1[7];
  v26[6] = v1[6];
  v26[7] = v5;
  *(_OWORD *)v27 = v1[8];
  *(_OWORD *)&v27[9] = *(_OWORD *)((char *)v1 + 137);
  v6 = v1[3];
  v26[2] = v1[2];
  v26[3] = v6;
  v7 = v1[5];
  v26[4] = v1[4];
  v26[5] = v7;
  v8 = v1[1];
  v26[0] = *v1;
  v26[1] = v8;
  sub_1B8CDF314((uint64_t)v26, (void (*)(_QWORD, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDA7D4);
  type metadata accessor for WKWallpaperImageViewModel();
  sub_1B8C83740(&qword_1ED567360, (uint64_t (*)(uint64_t))type metadata accessor for WKWallpaperImageViewModel, (uint64_t)&unk_1B8CE8250);
  sub_1B8CE0FA8();
  sub_1B8CDF314((uint64_t)v26, (void (*)(_QWORD, _QWORD))sub_1B8CDAEE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85880, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDAEEC);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8CE0F24();
  swift_release();
  swift_release();
  result = swift_release();
  v10 = 0uLL;
  if ((v23 & 1) != 0)
  {
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 1;
  }
  else
  {
    sub_1B8CDF314((uint64_t)v26, (void (*)(_QWORD, _QWORD))sub_1B8CDA7C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDA7D4);
    sub_1B8CE0FA8();
    sub_1B8CDF314((uint64_t)v26, (void (*)(_QWORD, _QWORD))sub_1B8CDAEE0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1B8C85880, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B8CDAEEC);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B8CE0F24();
    swift_release();
    swift_release();
    result = swift_release();
    if (v21)
    {
      v17 = v19;
      v18 = v20;
      (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v4, *MEMORY[0x1E0CDF6F8], v20);
      v16 = sub_1B8CE12FC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v18);
      sub_1B8CE1374();
      result = sub_1B8CE0FD8();
      v11 = v21;
      v12 = v22;
      v13 = v23;
      v14 = v24;
      v15 = 257;
      v10 = v25;
    }
    else
    {
      v16 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v10 = 0uLL;
    }
  }
  *(_QWORD *)a1 = v16;
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 56) = 0;
  *(_WORD *)(a1 + 64) = v15;
  return result;
}

uint64_t destroy for WKWallpaperImage(uint64_t a1)
{
  sub_1B8CDAEE0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_1B8C85880(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  return sub_1B8CDAEEC();
}

uint64_t initializeWithCopy for WKWallpaperImage(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1B8CDA7C8(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = *(_QWORD *)(v2 + 64);
  v13 = *(void **)(v2 + 72);
  v17 = *(_QWORD *)(v2 + 80);
  v18 = *(_QWORD *)(v2 + 88);
  v19 = *(_QWORD *)(v2 + 96);
  v20 = *(_QWORD *)(v2 + 104);
  v21 = *(_QWORD *)(v2 + 112);
  v22 = *(_QWORD *)(v2 + 120);
  v23 = *(_BYTE *)(v2 + 128);
  sub_1B8C85798(v6, v7, v8, v9, v10, v11, v12, v13, v17, v18, v19, v20, v21, v22, v23);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v17;
  *(_QWORD *)(a1 + 88) = v18;
  *(_QWORD *)(a1 + 96) = v19;
  *(_QWORD *)(a1 + 104) = v20;
  *(_QWORD *)(a1 + 112) = v21;
  *(_QWORD *)(a1 + 120) = v22;
  *(_BYTE *)(a1 + 128) = v23;
  v14 = *(_QWORD *)(v2 + 136);
  v15 = *(_QWORD *)(v2 + 144);
  LOBYTE(v2) = *(_BYTE *)(v2 + 152);
  sub_1B8CDA7D4();
  *(_QWORD *)(a1 + 136) = v14;
  *(_QWORD *)(a1 + 144) = v15;
  *(_BYTE *)(a1 + 152) = v2;
  return a1;
}

uint64_t assignWithCopy for WKWallpaperImage(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1B8CDA7C8(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1B8CDAEE0(v6, v7);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  v12 = *(_QWORD *)(v2 + 48);
  v13 = *(_QWORD *)(v2 + 56);
  v14 = *(_QWORD *)(v2 + 64);
  v15 = *(void **)(v2 + 72);
  v32 = *(_QWORD *)(v2 + 80);
  v33 = *(_QWORD *)(v2 + 88);
  v34 = *(_QWORD *)(v2 + 96);
  v35 = *(_QWORD *)(v2 + 104);
  v36 = *(_QWORD *)(v2 + 112);
  v37 = *(_QWORD *)(v2 + 120);
  v38 = *(_BYTE *)(v2 + 128);
  sub_1B8C85798(v8, v9, v10, v11, v12, v13, v14, v15, v32, v33, v34, v35, v36, v37, v38);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 48);
  v21 = *(_QWORD *)(a1 + 56);
  v22 = *(_QWORD *)(a1 + 64);
  v23 = *(void **)(a1 + 72);
  v24 = *(_OWORD *)(a1 + 80);
  v25 = *(_OWORD *)(a1 + 96);
  v26 = *(_QWORD *)(a1 + 112);
  v27 = *(_QWORD *)(a1 + 120);
  v28 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v32;
  *(_QWORD *)(a1 + 88) = v33;
  *(_QWORD *)(a1 + 96) = v34;
  *(_QWORD *)(a1 + 104) = v35;
  *(_QWORD *)(a1 + 112) = v36;
  *(_QWORD *)(a1 + 120) = v37;
  *(_BYTE *)(a1 + 128) = v38;
  sub_1B8C85880(v16, v17, v18, v19, v20, v21, v22, v23, v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, v27, v28);
  v29 = *(_QWORD *)(v2 + 136);
  v30 = *(_QWORD *)(v2 + 144);
  LOBYTE(v2) = *(_BYTE *)(v2 + 152);
  sub_1B8CDA7D4();
  *(_QWORD *)(a1 + 136) = v29;
  *(_QWORD *)(a1 + 144) = v30;
  *(_BYTE *)(a1 + 152) = v2;
  sub_1B8CDAEEC();
  return a1;
}

uint64_t assignWithTake for WKWallpaperImage(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1B8CDAEE0(v6, v7);
  v8 = *((_BYTE *)a2 + 128);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(void **)(a1 + 72);
  v17 = *(_OWORD *)(a1 + 80);
  v18 = *(_OWORD *)(a1 + 96);
  v19 = *(_QWORD *)(a1 + 112);
  v20 = *(_QWORD *)(a1 + 120);
  v21 = *(_BYTE *)(a1 + 128);
  v22 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v22;
  v23 = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 64) = v23;
  v24 = *((_OWORD *)a2 + 6);
  *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
  *(_OWORD *)(a1 + 96) = v24;
  *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
  *(_BYTE *)(a1 + 128) = v8;
  sub_1B8C85880(v9, v10, v11, v12, v13, v14, v15, v16, v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, v20, v21);
  v25 = *((_BYTE *)a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
  *(_BYTE *)(a1 + 152) = v25;
  sub_1B8CDAEEC();
  return a1;
}

uint64_t getEnumTagSinglePayload for WKWallpaperImage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 153))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WKWallpaperImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 153) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WKWallpaperImage()
{
  return &type metadata for WKWallpaperImage;
}

uint64_t getEnumTagSinglePayload for WKWallpaperImage.ImageType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WKWallpaperImage.ImageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1B8CDF0D8 + 4 * byte_1B8CE9C55[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1B8CDF10C + 4 * byte_1B8CE9C50[v4]))();
}

uint64_t sub_1B8CDF10C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CDF114(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8CDF11CLL);
  return result;
}

uint64_t sub_1B8CDF128(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8CDF130);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1B8CDF134(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8CDF13C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WKWallpaperImage.ImageType()
{
  return &type metadata for WKWallpaperImage.ImageType;
}

unint64_t sub_1B8CDF15C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1D46F8;
  if (!qword_1EF1D46F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4700);
    v2[0] = sub_1B8CDF1C8();
    v2[1] = MEMORY[0x1E0CDB158];
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D46F8);
  }
  return result;
}

unint64_t sub_1B8CDF1C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1D4708;
  if (!qword_1EF1D4708)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4710);
    v2[0] = sub_1B8CDF234();
    v2[1] = sub_1B8CDF2D0();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4708);
  }
  return result;
}

unint64_t sub_1B8CDF234()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1D4718;
  if (!qword_1EF1D4718)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1D4720);
    v2[0] = sub_1B8CDF5DC(&qword_1EF1D4728, &qword_1EF1D4730, MEMORY[0x1E0CDF5B0], MEMORY[0x1E0CDC8B0]);
    v2[1] = sub_1B8CDF490(&qword_1ED567468, &qword_1ED567470);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1D4718);
  }
  return result;
}

unint64_t sub_1B8CDF2D0()
{
  unint64_t result;

  result = qword_1EF1D4738;
  if (!qword_1EF1D4738)
  {
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDD2E8], MEMORY[0x1E0CDD2F8]);
    atomic_store(result, (unint64_t *)&qword_1EF1D4738);
  }
  return result;
}

uint64_t sub_1B8CDF314(uint64_t a1, void (*a2)(_QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char), void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 32);
  v21 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 40);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_OWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 120);
  v10 = *(_BYTE *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 136);
  v11 = *(_QWORD *)(a1 + 144);
  v13 = *(unsigned __int8 *)(a1 + 152);
  a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  v15 = v10;
  a3(v22, v21, v20, v19, v5, v6, v7, v18, v17, *((_QWORD *)&v17 + 1), v16, *((_QWORD *)&v16 + 1), v8, v9, v15);
  a4(v12, v11, v13);
  return a1;
}

unint64_t sub_1B8CDF3F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED567420;
  if (!qword_1ED567420)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED567428);
    v2[0] = sub_1B8CDF5DC(&qword_1ED5673C0, &qword_1ED5673C8, MEMORY[0x1E0CDF820], MEMORY[0x1E0CDB158]);
    v2[1] = sub_1B8CDF490(&qword_1ED567458, &qword_1ED567460);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED567420);
  }
  return result;
}

uint64_t sub_1B8CDF490(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CDA280], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8CDF4D0()
{
  return sub_1B8CDF4EC(&qword_1ED567418, &qword_1ED567400, (uint64_t (*)(void))sub_1B8CDF550);
}

uint64_t sub_1B8CDF4EC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CE0798], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B8CDF550()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED5673F0;
  if (!qword_1ED5673F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED5673F8);
    v2[0] = sub_1B8CDF5DC(&qword_1ED5673B0, &qword_1ED5673B8, MEMORY[0x1E0CDF820], MEMORY[0x1E0CD8D70]);
    v2[1] = MEMORY[0x1E0CDB158];
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED5673F0);
  }
  return result;
}

uint64_t sub_1B8CDF5DC(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3;
    v9[1] = a4;
    result = MEMORY[0x1BCCB94E0](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8CDF63C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  os_log_type_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;

  v3 = sub_1B8CE108C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 112) == 1)
  {
    v8 = *(_QWORD *)(v1 + 56);
    v9 = *(_QWORD *)(v1 + 48);
    v10 = *(_BYTE *)(v1 + 40);
    v11 = *(_QWORD *)(v1 + 32);
    v12 = *(_QWORD *)(v1 + 24);
    v13 = *(_QWORD *)(v1 + 16);
    v14 = *(_QWORD *)(v1 + 8);
    *(_BYTE *)a1 = v7 & 1;
    *(_BYTE *)(a1 + 8) = v14;
    *(_QWORD *)(a1 + 16) = v13;
    *(_BYTE *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v10 & 1;
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v8;
    v15 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 96);
    return sub_1B8C86848(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85798);
  }
  else
  {
    sub_1B8C86848(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85798);
    v17 = sub_1B8CE15C0();
    v18 = sub_1B8CE11DC();
    v19 = v17;
    if (os_log_type_enabled(v18, v17))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v23[1] = v7;
      v22 = v21;
      v24 = v21;
      *(_DWORD *)v20 = 136315138;
      v23[0] = v20 + 4;
      v23[2] = sub_1B8CC4700(0xD00000000000001BLL, 0x80000001B8CEE9A0, &v24);
      sub_1B8CE1674();
      _os_log_impl(&dword_1B8C64000, v18, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v22, -1, -1);
      MEMORY[0x1BCCB9588](v20, -1, -1);
    }

    sub_1B8CE1080();
    swift_getAtKeyPath();
    sub_1B8C86848(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8C85880);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1B8CDF87C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v2 = v1;
  v4 = sub_1B8CE108C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8CE0038(v2, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_1B8CE0F84();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = sub_1B8CE15C0();
    v14 = sub_1B8CE11DC();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19[1] = a1;
      v18 = v17;
      v20 = v17;
      *(_DWORD *)v16 = 136315138;
      v19[2] = sub_1B8CC4700(0x686353726F6C6F43, 0xEB00000000656D65, &v20);
      sub_1B8CE1674();
      _os_log_impl(&dword_1B8C64000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v18, -1, -1);
      MEMORY[0x1BCCB9588](v16, -1, -1);
    }

    sub_1B8CE1080();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1B8CDFAB4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1B8CE108C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v8 = sub_1B8CE15C0();
    v9 = sub_1B8CE11DC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_1B8CC4700(0xD00000000000001FLL, 0x80000001B8CEE9C0, &v15);
      sub_1B8CE1674();
      _os_log_impl(&dword_1B8C64000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCB9588](v12, -1, -1);
      MEMORY[0x1BCCB9588](v11, -1, -1);
    }

    sub_1B8CE1080();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

double sub_1B8CDFC70(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  double v15;

  v4 = sub_1B8CE108C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v8 = sub_1B8CE15C0();
  v9 = sub_1B8CE11DC();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = *(double *)&v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_1B8CC4700(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_1B8CE1674();
    _os_log_impl(&dword_1B8C64000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCB9588](v12, -1, -1);
    MEMORY[0x1BCCB9588](v11, -1, -1);
  }

  sub_1B8CE1080();
  swift_getAtKeyPath();
  sub_1B8CDAEE0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

double sub_1B8CDFE30@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  char v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8CE0F24();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1B8CDFEB4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1B8CE0F30();
}

uint64_t sub_1B8CDFF34@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8CE0F24();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8CDFFB4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  return sub_1B8CE0F30();
}

uint64_t sub_1B8CE0038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED567170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8CE0080()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

void WKLogForCategory_cold_1()
{
  __assert_rtn("WKLogForCategory", "WKLogging.m", 13, "category < WKLoggingCategoryCount");
}

uint64_t sub_1B8CE0D20()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1B8CE0D2C()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1B8CE0D38()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1B8CE0D44()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1B8CE0D50()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1B8CE0D5C()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1B8CE0D68()
{
  return MEMORY[0x1E0CAF8D8]();
}

uint64_t sub_1B8CE0D74()
{
  return MEMORY[0x1E0CAF8E8]();
}

uint64_t sub_1B8CE0D80()
{
  return MEMORY[0x1E0CAF8F8]();
}

uint64_t sub_1B8CE0D8C()
{
  return MEMORY[0x1E0CAF900]();
}

uint64_t sub_1B8CE0D98()
{
  return MEMORY[0x1E0CAF920]();
}

uint64_t sub_1B8CE0DA4()
{
  return MEMORY[0x1E0CAF930]();
}

uint64_t sub_1B8CE0DB0()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_1B8CE0DBC()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1B8CE0DC8()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1B8CE0DD4()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_1B8CE0DE0()
{
  return MEMORY[0x1E0CAFE08]();
}

uint64_t sub_1B8CE0DEC()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1B8CE0DF8()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1B8CE0E04()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1B8CE0E10()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_1B8CE0E1C()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1B8CE0E28()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1B8CE0E34()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_1B8CE0E40()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1B8CE0E4C()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1B8CE0E58()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1B8CE0E64()
{
  return MEMORY[0x1E0DEFCD0]();
}

uint64_t sub_1B8CE0E70()
{
  return MEMORY[0x1E0DEFD58]();
}

uint64_t sub_1B8CE0E7C()
{
  return MEMORY[0x1E0DEFD60]();
}

uint64_t sub_1B8CE0E88()
{
  return MEMORY[0x1E0DEFD68]();
}

uint64_t sub_1B8CE0E94()
{
  return MEMORY[0x1E0DEFD70]();
}

uint64_t sub_1B8CE0EA0()
{
  return MEMORY[0x1E0DEFD78]();
}

uint64_t sub_1B8CE0EAC()
{
  return MEMORY[0x1E0DEFD80]();
}

uint64_t sub_1B8CE0EB8()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_1B8CE0EC4()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1B8CE0ED0()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1B8CE0EDC()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1B8CE0EE8()
{
  return MEMORY[0x1E0DC1DC0]();
}

uint64_t sub_1B8CE0EF4()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1B8CE0F00()
{
  return MEMORY[0x1E0C95E00]();
}

uint64_t sub_1B8CE0F0C()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1B8CE0F18()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1B8CE0F24()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1B8CE0F30()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1B8CE0F3C()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t sub_1B8CE0F48()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_1B8CE0F54()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1B8CE0F60()
{
  return MEMORY[0x1E0CD8288]();
}

uint64_t sub_1B8CE0F6C()
{
  return MEMORY[0x1E0CD83B8]();
}

uint64_t sub_1B8CE0F78()
{
  return MEMORY[0x1E0CD86C0]();
}

uint64_t sub_1B8CE0F84()
{
  return MEMORY[0x1E0CD86F8]();
}

uint64_t sub_1B8CE0F90()
{
  return MEMORY[0x1E0CD87D0]();
}

uint64_t sub_1B8CE0F9C()
{
  return MEMORY[0x1E0CD8818]();
}

uint64_t sub_1B8CE0FA8()
{
  return MEMORY[0x1E0CD88A0]();
}

uint64_t sub_1B8CE0FB4()
{
  return MEMORY[0x1E0CD88C0]();
}

uint64_t sub_1B8CE0FC0()
{
  return MEMORY[0x1E0CD8948]();
}

uint64_t sub_1B8CE0FCC()
{
  return MEMORY[0x1E0CD8950]();
}

uint64_t sub_1B8CE0FD8()
{
  return MEMORY[0x1E0CD8D60]();
}

uint64_t sub_1B8CE0FE4()
{
  return MEMORY[0x1E0CD8E58]();
}

uint64_t sub_1B8CE0FF0()
{
  return MEMORY[0x1E0CD8EF0]();
}

uint64_t sub_1B8CE0FFC()
{
  return MEMORY[0x1E0CD9240]();
}

uint64_t sub_1B8CE1008()
{
  return MEMORY[0x1E0CD9790]();
}

uint64_t sub_1B8CE1014()
{
  return MEMORY[0x1E0CD9B68]();
}

uint64_t sub_1B8CE1020()
{
  return MEMORY[0x1E0CD9C90]();
}

uint64_t sub_1B8CE102C()
{
  return MEMORY[0x1E0CD9DD8]();
}

uint64_t sub_1B8CE1038()
{
  return MEMORY[0x1E0CDA218]();
}

uint64_t sub_1B8CE1044()
{
  return MEMORY[0x1E0CDA4E0]();
}

uint64_t sub_1B8CE1050()
{
  return MEMORY[0x1E0CDA4E8]();
}

uint64_t sub_1B8CE105C()
{
  return MEMORY[0x1E0CDA558]();
}

uint64_t sub_1B8CE1068()
{
  return MEMORY[0x1E0CDA630]();
}

uint64_t sub_1B8CE1074()
{
  return MEMORY[0x1E0CDA640]();
}

uint64_t sub_1B8CE1080()
{
  return MEMORY[0x1E0CDAA20]();
}

uint64_t sub_1B8CE108C()
{
  return MEMORY[0x1E0CDAA30]();
}

uint64_t sub_1B8CE1098()
{
  return MEMORY[0x1E0CDAA68]();
}

uint64_t sub_1B8CE10A4()
{
  return MEMORY[0x1E0CDAA78]();
}

uint64_t sub_1B8CE10B0()
{
  return MEMORY[0x1E0CDABB8]();
}

uint64_t sub_1B8CE10BC()
{
  return MEMORY[0x1E0CDABC0]();
}

uint64_t sub_1B8CE10C8()
{
  return MEMORY[0x1E0CDB658]();
}

uint64_t sub_1B8CE10D4()
{
  return MEMORY[0x1E0CDB668]();
}

uint64_t sub_1B8CE10E0()
{
  return MEMORY[0x1E0CDB678]();
}

uint64_t sub_1B8CE10EC()
{
  return MEMORY[0x1E0CDB688]();
}

uint64_t sub_1B8CE10F8()
{
  return MEMORY[0x1E0CDB698]();
}

uint64_t sub_1B8CE1104()
{
  return MEMORY[0x1E0CDB6A8]();
}

uint64_t sub_1B8CE1110()
{
  return MEMORY[0x1E0CDB6B8]();
}

uint64_t sub_1B8CE111C()
{
  return MEMORY[0x1E0CDB6D0]();
}

uint64_t sub_1B8CE1128()
{
  return MEMORY[0x1E0CDB6E0]();
}

uint64_t sub_1B8CE1134()
{
  return MEMORY[0x1E0CDB6F0]();
}

uint64_t sub_1B8CE1140()
{
  return MEMORY[0x1E0CDB6F8]();
}

uint64_t sub_1B8CE114C()
{
  return MEMORY[0x1E0CDB708]();
}

uint64_t sub_1B8CE1158()
{
  return MEMORY[0x1E0CDB870]();
}

uint64_t sub_1B8CE1164()
{
  return MEMORY[0x1E0CDBFA0]();
}

uint64_t sub_1B8CE1170()
{
  return MEMORY[0x1E0CDC818]();
}

uint64_t sub_1B8CE117C()
{
  return MEMORY[0x1E0CDC968]();
}

uint64_t sub_1B8CE1188()
{
  return MEMORY[0x1E0CDC990]();
}

uint64_t sub_1B8CE1194()
{
  return MEMORY[0x1E0CDCA38]();
}

uint64_t sub_1B8CE11A0()
{
  return MEMORY[0x1E0CDCA40]();
}

uint64_t sub_1B8CE11AC()
{
  return MEMORY[0x1E0CDCA48]();
}

uint64_t sub_1B8CE11B8()
{
  return MEMORY[0x1E0CDCAF8]();
}

uint64_t sub_1B8CE11C4()
{
  return MEMORY[0x1E0CDCB08]();
}

uint64_t sub_1B8CE11D0()
{
  return MEMORY[0x1E0CDCFD0]();
}

uint64_t sub_1B8CE11DC()
{
  return MEMORY[0x1E0CDD2D8]();
}

uint64_t sub_1B8CE11E8()
{
  return MEMORY[0x1E0CDD358]();
}

uint64_t sub_1B8CE11F4()
{
  return MEMORY[0x1E0CDD9D8]();
}

uint64_t sub_1B8CE1200()
{
  return MEMORY[0x1E0CDD9E8]();
}

uint64_t sub_1B8CE120C()
{
  return MEMORY[0x1E0CDDA10]();
}

uint64_t sub_1B8CE1218()
{
  return MEMORY[0x1E0CDDA40]();
}

uint64_t sub_1B8CE1224()
{
  return MEMORY[0x1E0CDDE48]();
}

uint64_t sub_1B8CE1230()
{
  return MEMORY[0x1E0CDDE58]();
}

uint64_t sub_1B8CE123C()
{
  return MEMORY[0x1E0CDE038]();
}

uint64_t sub_1B8CE1248()
{
  return MEMORY[0x1E0CDE2A8]();
}

uint64_t sub_1B8CE1254()
{
  return MEMORY[0x1E0CDE380]();
}

uint64_t sub_1B8CE1260()
{
  return MEMORY[0x1E0CDEA88]();
}

uint64_t sub_1B8CE126C()
{
  return MEMORY[0x1E0CDEC40]();
}

uint64_t sub_1B8CE1278()
{
  return MEMORY[0x1E0CDF378]();
}

uint64_t sub_1B8CE1284()
{
  return MEMORY[0x1E0CDF380]();
}

uint64_t sub_1B8CE1290()
{
  return MEMORY[0x1E0CDF3B0]();
}

uint64_t sub_1B8CE129C()
{
  return MEMORY[0x1E0CDF420]();
}

uint64_t sub_1B8CE12A8()
{
  return MEMORY[0x1E0CDF4A8]();
}

uint64_t sub_1B8CE12B4()
{
  return MEMORY[0x1E0CDF4D0]();
}

uint64_t sub_1B8CE12C0()
{
  return MEMORY[0x1E0CDF6A8]();
}

uint64_t sub_1B8CE12CC()
{
  return MEMORY[0x1E0CDF700]();
}

uint64_t sub_1B8CE12D8()
{
  return MEMORY[0x1E0CDF730]();
}

uint64_t sub_1B8CE12E4()
{
  return MEMORY[0x1E0CDF748]();
}

uint64_t sub_1B8CE12F0()
{
  return MEMORY[0x1E0CDF788]();
}

uint64_t sub_1B8CE12FC()
{
  return MEMORY[0x1E0CDF810]();
}

uint64_t sub_1B8CE1308()
{
  return MEMORY[0x1E0CDF900]();
}

uint64_t sub_1B8CE1314()
{
  return MEMORY[0x1E0CDF908]();
}

uint64_t sub_1B8CE1320()
{
  return MEMORY[0x1E0CDF918]();
}

uint64_t sub_1B8CE132C()
{
  return MEMORY[0x1E0CDF928]();
}

uint64_t sub_1B8CE1338()
{
  return MEMORY[0x1E0CDF938]();
}

uint64_t sub_1B8CE1344()
{
  return MEMORY[0x1E0CDF950]();
}

uint64_t sub_1B8CE1350()
{
  return MEMORY[0x1E0CDFE98]();
}

uint64_t sub_1B8CE135C()
{
  return MEMORY[0x1E0CDFEA8]();
}

uint64_t sub_1B8CE1368()
{
  return MEMORY[0x1E0CE0208]();
}

uint64_t sub_1B8CE1374()
{
  return MEMORY[0x1E0CE0220]();
}

uint64_t sub_1B8CE1380()
{
  return MEMORY[0x1E0CE0258]();
}

uint64_t sub_1B8CE138C()
{
  return MEMORY[0x1E0CE0288]();
}

uint64_t sub_1B8CE1398()
{
  return MEMORY[0x1E0CE02F0]();
}

uint64_t sub_1B8CE13A4()
{
  return MEMORY[0x1E0CE0500]();
}

uint64_t sub_1B8CE13B0()
{
  return MEMORY[0x1E0CE06D0]();
}

uint64_t sub_1B8CE13BC()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1B8CE13C8()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1B8CE13D4()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1B8CE13E0()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1B8CE13EC()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1B8CE13F8()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1B8CE1404()
{
  return MEMORY[0x1E0DEF6D8]();
}

uint64_t sub_1B8CE1410()
{
  return MEMORY[0x1E0DEF6E8]();
}

uint64_t sub_1B8CE141C()
{
  return MEMORY[0x1E0DEF750]();
}

uint64_t sub_1B8CE1428()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1B8CE1434()
{
  return MEMORY[0x1E0DEF760]();
}

uint64_t sub_1B8CE1440()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1B8CE144C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1B8CE1458()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1B8CE1464()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1B8CE1470()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1B8CE147C()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1B8CE1488()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1B8CE1494()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1B8CE14A0()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1B8CE14AC()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1B8CE14B8()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1B8CE14C4()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1B8CE14D0()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1B8CE14DC()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1B8CE14E8()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1B8CE14F4()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1B8CE1500()
{
  return MEMORY[0x1E0DEA948]();
}

uint64_t sub_1B8CE150C()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_1B8CE1518()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1B8CE1524()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1B8CE1530()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1B8CE153C()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1B8CE1548()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1B8CE1554()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1B8CE1560()
{
  return MEMORY[0x1E0DEAFE8]();
}

uint64_t sub_1B8CE156C()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1B8CE1578()
{
  return MEMORY[0x1E0DEB160]();
}

uint64_t sub_1B8CE1584()
{
  return MEMORY[0x1E0DEB5E8]();
}

uint64_t sub_1B8CE1590()
{
  return MEMORY[0x1E0DEB618]();
}

uint64_t sub_1B8CE159C()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1B8CE15A8()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1B8CE15B4()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1B8CE15C0()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1B8CE15CC()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1B8CE15D8()
{
  return MEMORY[0x1E0DEF838]();
}

uint64_t sub_1B8CE15E4()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_1B8CE15F0()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1B8CE15FC()
{
  return MEMORY[0x1E0DC2C28]();
}

uint64_t sub_1B8CE1608()
{
  return MEMORY[0x1E0CB1F30]();
}

uint64_t sub_1B8CE1614()
{
  return MEMORY[0x1E0CB1F50]();
}

uint64_t sub_1B8CE1620()
{
  return MEMORY[0x1E0C9B9B8]();
}

uint64_t sub_1B8CE162C()
{
  return MEMORY[0x1E0C9B9E8]();
}

uint64_t sub_1B8CE1638()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1B8CE1644()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1B8CE1650()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t sub_1B8CE165C()
{
  return MEMORY[0x1E0CB22E8]();
}

uint64_t sub_1B8CE1668()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1B8CE1674()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1B8CE1680()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1B8CE168C()
{
  return MEMORY[0x1E0CB2500]();
}

uint64_t sub_1B8CE1698()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1B8CE16A4()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1B8CE16B0()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1B8CE16BC()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1B8CE16C8()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1B8CE16D4()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1B8CE16E0()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1B8CE16EC()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1B8CE16F8()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1B8CE1704()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1B8CE1710()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1B8CE171C()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1B8CE1728()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1B8CE1734()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1B8CE1740()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1B8CE174C()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1B8CE1758()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1B8CE1764()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1B8CE1770()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1B8CE177C()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1B8CE1788()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1B8CE1794()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t sub_1B8CE17A0()
{
  return MEMORY[0x1E0DECB80]();
}

uint64_t sub_1B8CE17AC()
{
  return MEMORY[0x1E0DECBA8]();
}

uint64_t sub_1B8CE17B8()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t sub_1B8CE17C4()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1B8CE17D0()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1B8CE17DC()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1B8CE17E8()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1B8CE17F4()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1B8CE1800()
{
  return MEMORY[0x1E0DECD48]();
}

uint64_t sub_1B8CE180C()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1B8CE1818()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1B8CE1824()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1B8CE1830()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1B8CE183C()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1B8CE1848()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1B8CE1854()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1B8CE1860()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1B8CE186C()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1B8CE1878()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1B8CE1884()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1B8CE1890()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1B8CE189C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1B8CE18A8()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1B8CE18B4()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1B8CE18C0()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1B8CE18CC()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1B8CE18D8()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1B8CE18E4()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1B8CE18F0()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1B8CE18FC()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1B8CE1908()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1B8CE1914()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1B8CE1920()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1B8CE192C()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1B8CE1938()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1B8CE1944()
{
  return MEMORY[0x1E0DEE978]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x1E0CD2388]();
  return result;
}

CAFrameRateRange CAFrameRateRangeMake(float minimum, float maximum, float preferred)
{
  float v3;
  float v4;
  float v5;
  CAFrameRateRange result;

  MEMORY[0x1E0CD23D0](minimum, maximum, preferred);
  result.preferred = v5;
  result.maximum = v4;
  result.minimum = v3;
  return result;
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2640](retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2668](retstr, t, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DTranslate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2678](retstr, t, tx, ty, tz);
}

uint64_t CA_CGRectApplyTransform()
{
  return MEMORY[0x1E0CD26F0]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD8](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BB00](retstr, t, tx, ty);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  CGFloat result;

  MEMORY[0x1E0C9BCF8](color);
  return result;
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1E0C9BD08](color);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return MEMORY[0x1E0C9BD20](color);
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C220](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C408](c, color);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x1E0C9CBA8](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGImageRelease(CGImageRef image)
{
  MEMORY[0x1E0C9CDA0](image);
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D548](t, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D588]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5B0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t CPSharedResourcesDirectory()
{
  return MEMORY[0x1E0CFA6C0]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

NSString *__cdecl NSStringFromCGPoint(CGPoint point)
{
  return (NSString *)MEMORY[0x1E0DC32E0]((__n128)point, *(__n128 *)&point.y);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

uint64_t PBUIStringForWallpaperMode()
{
  return MEMORY[0x1E0D65358]();
}

uint64_t PBUIStringForWallpaperType()
{
  return MEMORY[0x1E0D65360]();
}

uint64_t PBUIStringForWallpaperVariant()
{
  return MEMORY[0x1E0D65368]();
}

uint64_t SFPerformSelector()
{
  return MEMORY[0x1E0D8D690]();
}

uint64_t SFRuntimeAbsoluteFilePathForPath()
{
  return MEMORY[0x1E0D8D6B0]();
}

void UIGraphicsBeginImageContext(CGSize size)
{
  MEMORY[0x1E0DC4BB8]((__n128)size, *(__n128 *)&size.height);
}

void UIGraphicsEndImageContext(void)
{
  MEMORY[0x1E0DC4BD8]();
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1E0DC4BE8]();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)MEMORY[0x1E0DC4BF0]();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1E0DC4C60](image);
}

uint64_t UIRectCenteredRect()
{
  return MEMORY[0x1E0DC5258]();
}

uint64_t UIRectGetCenter()
{
  return MEMORY[0x1E0DC52B0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

int rand(void)
{
  return MEMORY[0x1E0C84FB0]();
}

int rand_r(unsigned int *a1)
{
  return MEMORY[0x1E0C84FB8](a1);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x1E0C85540](__s1);
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return MEMORY[0x1E0DEEBC0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

long double tan(long double __x)
{
  long double result;

  MEMORY[0x1E0C857E8](__x);
  return result;
}

