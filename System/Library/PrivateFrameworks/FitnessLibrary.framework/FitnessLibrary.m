uint64_t OfflineState.activeStorefrontLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23C19B524();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t OfflineState.loadState.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for OfflineState() + 20));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_23C14D708(v4, v5);
}

uint64_t type metadata accessor for OfflineState()
{
  uint64_t result;

  result = qword_256B2FDB8;
  if (!qword_256B2FDB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23C14D708(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 OfflineState.loadState.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for OfflineState() + 20));
  sub_23C14D790(*v3, v3[1]);
  result = v5;
  *(__n128 *)v3 = v5;
  v3[2] = v2;
  return result;
}

uint64_t sub_23C14D790(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*OfflineState.loadState.modify())()
{
  type metadata accessor for OfflineState();
  return nullsub_1;
}

__n128 OfflineState.init(activeStorefrontLocale:loadState:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  __n128 *v7;
  __n128 result;
  __n128 v9;

  v9 = *a2;
  v5 = a2[1].n128_u64[0];
  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = (__n128 *)(a3 + *(int *)(type metadata accessor for OfflineState() + 20));
  result = v9;
  *v7 = v9;
  v7[1].n128_u64[0] = v5;
  return result;
}

BOOL sub_23C14D868(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23C14D880()
{
  sub_23C19C0AC();
  sub_23C19C0B8();
  return sub_23C19C0D0();
}

uint64_t sub_23C14D8C4()
{
  return sub_23C19C0B8();
}

uint64_t sub_23C14D8EC()
{
  sub_23C19C0AC();
  sub_23C19C0B8();
  return sub_23C19C0D0();
}

uint64_t sub_23C14D92C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7461745364616F6CLL;
  else
    return 0xD000000000000016;
}

uint64_t sub_23C14D970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C14E12C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C14D994()
{
  return 0;
}

void sub_23C14D9A0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23C14D9AC()
{
  sub_23C14DBCC();
  return sub_23C19C0F4();
}

uint64_t sub_23C14D9D4()
{
  sub_23C14DBCC();
  return sub_23C19C100();
}

uint64_t OfflineState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  uint64_t v10;
  _BYTE v12[16];
  __int128 v13;
  uint64_t v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FD20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C14DBCC();
  sub_23C19C0E8();
  LOBYTE(v13) = 0;
  sub_23C19B524();
  sub_23C14DF00(&qword_256B2FD30, MEMORY[0x24BDCEEC8]);
  sub_23C19C07C();
  if (!v2)
  {
    v9 = (__int128 *)(v3 + *(int *)(type metadata accessor for OfflineState() + 20));
    v10 = *((_QWORD *)v9 + 2);
    v13 = *v9;
    v14 = v10;
    v12[15] = 1;
    sub_23C14DC10();
    sub_23C19C07C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426189B8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23C14DBCC()
{
  unint64_t result;

  result = qword_256B2FD28;
  if (!qword_256B2FD28)
  {
    result = MEMORY[0x2426189D0](&unk_23C19C684, &type metadata for OfflineState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B2FD28);
  }
  return result;
}

unint64_t sub_23C14DC10()
{
  unint64_t result;

  result = qword_256B2FD38;
  if (!qword_256B2FD38)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineLoadState, &type metadata for OfflineLoadState);
    atomic_store(result, (unint64_t *)&qword_256B2FD38);
  }
  return result;
}

uint64_t OfflineState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char v29;

  v22 = a2;
  v26 = sub_23C19B524();
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8]();
  v24 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FD40);
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OfflineState();
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C14DBCC();
  sub_23C19C0DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a1;
  v21 = v5;
  v11 = (uint64_t)v10;
  v12 = v23;
  LOBYTE(v27) = 0;
  sub_23C14DF00(&qword_256B2FD48, MEMORY[0x24BDCEEE8]);
  v14 = v24;
  v13 = v25;
  v15 = v26;
  sub_23C19C01C();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v15);
  v29 = 1;
  sub_23C14DF40();
  sub_23C19C01C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v13);
  v16 = v28;
  v17 = v11 + *(int *)(v8 + 20);
  *(_OWORD *)v17 = v27;
  *(_QWORD *)(v17 + 16) = v16;
  sub_23C14DF84(v11, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_23C14DFC8(v11);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23C14DF00(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23C19B524();
    result = MEMORY[0x2426189D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C14DF40()
{
  unint64_t result;

  result = qword_256B2FD50;
  if (!qword_256B2FD50)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineLoadState, &type metadata for OfflineLoadState);
    atomic_store(result, (unint64_t *)&qword_256B2FD50);
  }
  return result;
}

uint64_t sub_23C14DF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OfflineState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C14DFC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OfflineState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C14E004@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OfflineState.init(from:)(a1, a2);
}

uint64_t sub_23C14E018(_QWORD *a1)
{
  return OfflineState.encode(to:)(a1);
}

BOOL static OfflineState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  if ((MEMORY[0x242617B18]() & 1) != 0)
  {
    v4 = type metadata accessor for OfflineState();
    v5 = (__int128 *)(a1 + *(int *)(v4 + 20));
    v6 = *((_QWORD *)v5 + 2);
    v13 = *v5;
    v14 = v6;
    v7 = (__int128 *)(a2 + *(int *)(v4 + 20));
    v8 = *((_QWORD *)v7 + 2);
    v11 = *v7;
    v12 = v8;
    return _s14FitnessLibrary16OfflineLoadStateO2eeoiySbAC_ACtFZ_0((uint64_t *)&v13, (uint64_t *)&v11);
  }
  else
  {
    return 0;
  }
}

BOOL sub_23C14E0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  if ((MEMORY[0x242617B18]() & 1) != 0)
  {
    v6 = *(int *)(a3 + 20);
    v7 = *(_QWORD *)(a1 + v6 + 16);
    v14 = *(_OWORD *)(a1 + v6);
    v15 = v7;
    v8 = (__int128 *)(a2 + v6);
    v9 = *((_QWORD *)v8 + 2);
    v12 = *v8;
    v13 = v9;
    return _s14FitnessLibrary16OfflineLoadStateO2eeoiySbAC_ACtFZ_0((uint64_t *)&v14, (uint64_t *)&v12);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23C14E12C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023C1A3FA0 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for OfflineState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C19B524();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    if (v11 >= 3)
    {
      *v9 = *v10;
      v9[1] = v11;
      v9[2] = v10[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v9[2] = v10[2];
    }
  }
  return a1;
}

unint64_t destroy for OfflineState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;

  v4 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8);
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  if (v10 >= 3)
  {
    *v8 = *v9;
    v8[1] = v10;
    v8[2] = v9[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
  }
  return a1;
}

uint64_t assignWithCopy for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = v9[1];
  if (v10 >= 3)
  {
    if (v11 >= 3)
    {
      *v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23C14E4EC((uint64_t)v8);
      v13 = v9[2];
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v8[2] = v13;
    }
  }
  else if (v11 >= 3)
  {
    *v8 = *v9;
    v8[1] = v9[1];
    v8[2] = v9[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)v9;
    v8[2] = v9[2];
    *(_OWORD *)v8 = v12;
  }
  return a1;
}

uint64_t sub_23C14E4EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FD58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  if (*(_QWORD *)(a1 + v7 + 8) >= 3uLL)
  {
    v10 = v9[1];
    if (v10 >= 3)
    {
      *v8 = *v9;
      v8[1] = v10;
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_23C14E4EC((uint64_t)v8);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v8[2] = v9[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C14E650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_23C19B524();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 3;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C14E6E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23C19B524();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 + 2);
  return result;
}

uint64_t sub_23C14E764()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C19B524();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for OfflineState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C14E8C0 + 4 * byte_23C19C4FD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C14E8F4 + 4 * byte_23C19C4F8[v4]))();
}

uint64_t sub_23C14E8F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C14E8FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C14E904);
  return result;
}

uint64_t sub_23C14E910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C14E918);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C14E91C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C14E924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C14E930(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23C14E938(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineState.CodingKeys()
{
  return &type metadata for OfflineState.CodingKeys;
}

unint64_t sub_23C14E958()
{
  unint64_t result;

  result = qword_256B2FDF0;
  if (!qword_256B2FDF0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19C65C, &type metadata for OfflineState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B2FDF0);
  }
  return result;
}

unint64_t sub_23C14E9A0()
{
  unint64_t result;

  result = qword_256B2FDF8;
  if (!qword_256B2FDF8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19C5CC, &type metadata for OfflineState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B2FDF8);
  }
  return result;
}

unint64_t sub_23C14E9E8()
{
  unint64_t result;

  result = qword_256B2FE00;
  if (!qword_256B2FE00)
  {
    result = MEMORY[0x2426189D0](&unk_23C19C5F4, &type metadata for OfflineState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B2FE00);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for OfflineEnvironment(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_23C14EA68(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23C14EA88(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_23C14EB44(a1, &qword_256B2FE08);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_23C14EAD4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23C14EAF4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_23C14EB44(a1, &qword_256B2FE10);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_23C14EB44(a1, &qword_256B2FE18);
}

void sub_23C14EB44(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_23C14EB90()
{
  uint64_t v0;

  v0 = sub_23C19B578();
  __swift_allocate_value_buffer(v0, qword_256B404C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256B404C0);
  return sub_23C19B56C();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

void LibraryLayout.interface.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t LibraryLayout.dynamicTypeSize.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

_BYTE *LibraryLayout.init(interface:dynamicTypeSize:)@<X0>(_BYTE *result@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t sub_23C14EC80()
{
  _BYTE *v0;

  if (*v0)
    return 0x5463696D616E7964;
  else
    return 0x6361667265746E69;
}

uint64_t sub_23C14ECCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C14F4DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C14ECF0()
{
  sub_23C14EE8C();
  return sub_23C19C0F4();
}

uint64_t sub_23C14ED18()
{
  sub_23C14EE8C();
  return sub_23C19C100();
}

uint64_t LibraryLayout.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FE20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C14EE8C();
  sub_23C19C0E8();
  v15 = v8;
  v14 = 0;
  sub_23C14EED0();
  sub_23C19C07C();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_23C14EF14();
    sub_23C19C07C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23C14EE8C()
{
  unint64_t result;

  result = qword_256B2FE28;
  if (!qword_256B2FE28)
  {
    result = MEMORY[0x2426189D0](&unk_23C19C858, &type metadata for LibraryLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B2FE28);
  }
  return result;
}

unint64_t sub_23C14EED0()
{
  unint64_t result;

  result = qword_256B2FE30;
  if (!qword_256B2FE30)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryInterface, &type metadata for LibraryInterface);
    atomic_store(result, (unint64_t *)&qword_256B2FE30);
  }
  return result;
}

unint64_t sub_23C14EF14()
{
  unint64_t result;

  result = qword_256B2FE38;
  if (!qword_256B2FE38)
  {
    result = MEMORY[0x2426189D0](MEMORY[0x24BE34C18], MEMORY[0x24BE34C10]);
    atomic_store(result, (unint64_t *)&qword_256B2FE38);
  }
  return result;
}

uint64_t LibraryLayout.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FE40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C14EE8C();
  sub_23C19C0DC();
  if (!v2)
  {
    v15 = 0;
    sub_23C14F0D4();
    sub_23C19C01C();
    v9 = v16;
    v13 = 1;
    sub_23C14F118();
    sub_23C19C01C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_23C14F0D4()
{
  unint64_t result;

  result = qword_256B2FE48;
  if (!qword_256B2FE48)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryInterface, &type metadata for LibraryInterface);
    atomic_store(result, (unint64_t *)&qword_256B2FE48);
  }
  return result;
}

unint64_t sub_23C14F118()
{
  unint64_t result;

  result = qword_256B2FE50;
  if (!qword_256B2FE50)
  {
    result = MEMORY[0x2426189D0](MEMORY[0x24BE34C20], MEMORY[0x24BE34C10]);
    atomic_store(result, (unint64_t *)&qword_256B2FE50);
  }
  return result;
}

uint64_t sub_23C14F15C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return LibraryLayout.init(from:)(a1, a2);
}

uint64_t sub_23C14F170(_QWORD *a1)
{
  return LibraryLayout.encode(to:)(a1);
}

uint64_t static LibraryLayout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return sub_23C19B548();
  else
    return 0;
}

uint64_t sub_23C14F1A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return sub_23C19B548();
  else
    return 0;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryLayout(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 65282 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65282 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65282;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65282;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65282;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryLayout(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C14F2B8 + 4 * byte_23C19C6F5[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_23C14F2EC + 4 * asc_23C19C6F0[v4]))();
}

uint64_t sub_23C14F2EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23C14F2F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23C14F2FCLL);
  return result;
}

uint64_t sub_23C14F308(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23C14F310);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C14F314(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23C14F31C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryLayout()
{
  return &type metadata for LibraryLayout;
}

uint64_t storeEnumTagSinglePayload for LibraryLayout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C14F384 + 4 * byte_23C19C6FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C14F3B8 + 4 * byte_23C19C6FA[v4]))();
}

uint64_t sub_23C14F3B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C14F3C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C14F3C8);
  return result;
}

uint64_t sub_23C14F3D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C14F3DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C14F3E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C14F3E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryLayout.CodingKeys()
{
  return &type metadata for LibraryLayout.CodingKeys;
}

unint64_t sub_23C14F408()
{
  unint64_t result;

  result = qword_256B2FE58;
  if (!qword_256B2FE58)
  {
    result = MEMORY[0x2426189D0](&unk_23C19C830, &type metadata for LibraryLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B2FE58);
  }
  return result;
}

unint64_t sub_23C14F450()
{
  unint64_t result;

  result = qword_256B2FE60;
  if (!qword_256B2FE60)
  {
    result = MEMORY[0x2426189D0](&unk_23C19C7A0, &type metadata for LibraryLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B2FE60);
  }
  return result;
}

unint64_t sub_23C14F498()
{
  unint64_t result;

  result = qword_256B2FE68[0];
  if (!qword_256B2FE68[0])
  {
    result = MEMORY[0x2426189D0](&unk_23C19C7C8, &type metadata for LibraryLayout.CodingKeys);
    atomic_store(result, qword_256B2FE68);
  }
  return result;
}

uint64_t sub_23C14F4DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6361667265746E69 && a2 == 0xE900000000000065;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5463696D616E7964 && a2 == 0xEF657A6953657079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C14F5FC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t destroy for WorkoutPlanBannerEnvironment()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for WorkoutPlanBannerEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_23C14F674(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23C14F6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t sub_23C14F724(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C14F76C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for HorizontalGeometryReader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HorizontalGeometryReader);
}

uint64_t sub_23C14F7B8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_23C14F7EC()
{
  return 10.0;
}

uint64_t sub_23C14F7F4@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, double)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, uint64_t a7@<D0>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(uint64_t, double);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, double);
  uint64_t v67;
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  uint64_t v71;
  uint64_t v72;
  double v73;
  _QWORD v74[2];

  v50 = a5;
  v66 = a2;
  v67 = a3;
  v48 = a1;
  v65 = a6;
  v60 = *(_QWORD *)(a4 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23C19B680();
  v64 = *(_QWORD *)(v13 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v47 = (char *)&v46 - v14;
  v16 = type metadata accessor for HorizontalGeometryReader.SizeKey(255, a4, a5, v15);
  v17 = MEMORY[0x2426189D0](&unk_23C19C960, v16);
  v55 = v16;
  v58 = v17;
  v18 = sub_23C19B86C();
  v19 = sub_23C19B680();
  v20 = MEMORY[0x2426189D0](MEMORY[0x24BDF0B90], v18);
  v74[0] = MEMORY[0x24BDF3E20];
  v74[1] = v20;
  v51 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v19, v74);
  v52 = sub_23C19B668();
  v53 = MEMORY[0x2426189D0](MEMORY[0x24BDEC6F8], v52);
  v56 = sub_23C19B7B8();
  v21 = sub_23C19B680();
  v63 = *(_QWORD *)(v21 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v49 = (char *)&v46 - v22;
  v57 = sub_23C14FFB0();
  v61 = sub_23C19B860();
  v23 = sub_23C19B680();
  v62 = *(_QWORD *)(v23 - 8);
  v24 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v54 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v59 = (uint64_t)&v46 - v26;
  v71 = a7;
  v72 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_256B2FEF8);
  v27 = sub_23C19BC08();
  v66(v27, v73);
  sub_23C19BD1C();
  v28 = v50;
  sub_23C19BAE8();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v12, a4);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a4;
  *(_QWORD *)(v29 + 24) = v28;
  v71 = sub_23C19B65C();
  v72 = v30;
  sub_23C19BD10();
  v70[0] = v28;
  v70[1] = MEMORY[0x24BDEDBB8];
  v31 = v28;
  v32 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v13, v70);
  v33 = v49;
  v34 = v47;
  sub_23C19B9F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v34, v13);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = a4;
  *(_QWORD *)(v35 + 24) = v31;
  *(double *)(v35 + 32) = *(double *)&a7;
  v36 = v66;
  v37 = v67;
  *(_QWORD *)(v35 + 40) = v48;
  *(_QWORD *)(v35 + 48) = v36;
  *(_QWORD *)(v35 + 56) = v37;
  swift_retain();
  swift_retain();
  v38 = MEMORY[0x2426189D0](MEMORY[0x24BDEF370], v56);
  v69[0] = v32;
  v69[1] = v38;
  v39 = MEMORY[0x24BDED308];
  v40 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v21, v69);
  v41 = (uint64_t)v54;
  sub_23C19BA94();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v33, v21);
  v42 = MEMORY[0x2426189D0](MEMORY[0x24BDF09B0], v61);
  v68[0] = v40;
  v68[1] = v42;
  MEMORY[0x2426189D0](v39, v23, v68);
  v43 = v59;
  sub_23C1515F4(v41, v23, v59);
  v44 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
  v44(v41, v23);
  sub_23C1502B0(v43, v23, v65);
  return ((uint64_t (*)(uint64_t, uint64_t))v44)(v43, v23);
}

uint64_t sub_23C14FD58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v16[0] = sub_23C19BB84();
  v7 = type metadata accessor for HorizontalGeometryReader.SizeKey(0, a1, a2, v6);
  sub_23C19B620();
  MEMORY[0x2426189D0](&unk_23C19C960, v7);
  v8 = MEMORY[0x24BDF3E20];
  sub_23C19BA10();
  swift_release();
  v13[0] = v14;
  v13[1] = v15;
  v9 = sub_23C19B86C();
  v10 = sub_23C19B680();
  v12[0] = v8;
  v12[1] = MEMORY[0x2426189D0](MEMORY[0x24BDF0B90], v9);
  MEMORY[0x2426189D0](MEMORY[0x24BDED308], v10, v12);
  sub_23C1515F4((uint64_t)v13, v10, (uint64_t)v16);
  swift_release();
  v14 = v16[0];
  v15 = v16[1];
  sub_23C1502B0((uint64_t)&v14, v10, a3);
  return swift_release();
}

void sub_23C14FEC8(double *a1, double (*a2)(void))
{
  double v3;
  double v4;

  v3 = *a1;
  v4 = a2();
  if (v3 > v4)
    v4 = v3;
  *a1 = v4;
}

void sub_23C14FF04(double *a1@<X8>)
{
  *a1 = sub_23C14F7EC();
}

void sub_23C14FF30(double *a1)
{
  sub_23C14FEC8(a1, sub_23C150280);
}

uint64_t sub_23C14FF74()
{
  return sub_23C19BA70();
}

uint64_t sub_23C14FF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23C14F7F4(*(_QWORD *)(v2 + 8), *(void (**)(uint64_t, double))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, *(_QWORD *)v2);
}

uint64_t type metadata accessor for HorizontalGeometryReader.SizeKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HorizontalGeometryReader.SizeKey);
}

unint64_t sub_23C14FFB0()
{
  unint64_t result;

  result = qword_256B2FEF0;
  if (!qword_256B2FEF0)
  {
    result = MEMORY[0x2426189D0](MEMORY[0x24BEE50E0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256B2FEF0);
  }
  return result;
}

uint64_t sub_23C14FFF4()
{
  return swift_deallocObject();
}

uint64_t sub_23C150004@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C14FD58(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C15000C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C150038()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_256B2FEF8);
  return sub_23C19BC14();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x242618934](a1, v6, a5);
}

uint64_t sub_23C1500B4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C1500BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];

  v2 = *a1;
  v1 = a1[1];
  v3 = sub_23C19B680();
  v5 = type metadata accessor for HorizontalGeometryReader.SizeKey(255, v2, v1, v4);
  MEMORY[0x2426189D0](&unk_23C19C960, v5);
  v6 = sub_23C19B86C();
  v7 = sub_23C19B680();
  v8 = MEMORY[0x2426189D0](MEMORY[0x24BDF0B90], v6);
  v19[0] = MEMORY[0x24BDF3E20];
  v19[1] = v8;
  v9 = MEMORY[0x24BDED308];
  MEMORY[0x2426189D0](MEMORY[0x24BDED308], v7, v19);
  v10 = sub_23C19B668();
  MEMORY[0x2426189D0](MEMORY[0x24BDEC6F8], v10);
  v11 = sub_23C19B7B8();
  v12 = sub_23C19B680();
  sub_23C14FFB0();
  v13 = sub_23C19B860();
  v14 = sub_23C19B680();
  v18[0] = v1;
  v18[1] = MEMORY[0x24BDEDBB8];
  v17[0] = MEMORY[0x2426189D0](v9, v3, v18);
  v17[1] = MEMORY[0x2426189D0](MEMORY[0x24BDEF370], v11);
  v16[0] = MEMORY[0x2426189D0](v9, v12, v17);
  v16[1] = MEMORY[0x2426189D0](MEMORY[0x24BDF09B0], v13);
  return MEMORY[0x2426189D0](v9, v14, v16);
}

double sub_23C150280()
{
  uint64_t v0;
  double v2;

  (*(void (**)(double *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_23C1502B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_23C1502C8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30030);
  sub_23C15159C(&qword_256B30038, &qword_256B30030, MEMORY[0x24BE2B5E8]);
  return sub_23C19B5D8();
}

uint64_t LibraryGalleryView.init(store:canvasViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a5 = sub_23C1503C4;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_23C1503A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C1503C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t LibraryGalleryView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 *v53;
  char *v54;
  uint64_t v55;
  __int128 *v56;
  uint64_t v57;
  __int128 *v58;
  __int16 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  _QWORD v63[2];
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v54 = a2;
  v55 = a1;
  v52 = sub_23C19B7F4();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v47 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  v4 = *(__int128 **)(a1 + 16);
  swift_getTupleTypeMetadata2();
  v5 = sub_23C19BD34();
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v5);
  v6 = sub_23C19BC80();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v6);
  v7 = sub_23C19BC68();
  v41 = MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v7);
  v8 = sub_23C19B5A8();
  v42 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v39 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF88);
  v11 = sub_23C19B680();
  v45 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v39 - v12;
  v14 = MEMORY[0x2426189D0](MEMORY[0x24BDEB238], v8);
  v39[1] = v14;
  v15 = sub_23C15159C(&qword_256B2FF90, &qword_256B2FF88, MEMORY[0x24BDEEC88]);
  v63[0] = v14;
  v63[1] = v15;
  v16 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v11, v63);
  *(_QWORD *)&v64 = v11;
  *((_QWORD *)&v64 + 1) = v16;
  v17 = MEMORY[0x24261897C](0, &v64, MEMORY[0x24BDF2FE0], 0);
  v49 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v48 = (char *)v39 - v18;
  *(_QWORD *)&v64 = v11;
  *((_QWORD *)&v64 + 1) = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v20 = sub_23C150A0C();
  v50 = v17;
  *(_QWORD *)&v64 = v17;
  *((_QWORD *)&v64 + 1) = &type metadata for LibraryLayout;
  v46 = OpaqueTypeConformance2;
  *(_QWORD *)&v65 = OpaqueTypeConformance2;
  *((_QWORD *)&v65 + 1) = v20;
  v43 = v20;
  v21 = MEMORY[0x24261897C](0, &v64, MEMORY[0x24BDF38E8], 0);
  v44 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v39 - v25;
  v27 = v53[1];
  v64 = *v53;
  v65 = v27;
  v66 = *((_QWORD *)v53 + 4);
  sub_23C19B8B4();
  v28 = *(_QWORD *)(v55 + 24);
  v53 = v4;
  v56 = v4;
  v57 = v28;
  v40 = v28;
  v58 = &v64;
  sub_23C19B5B4();
  sub_23C19B7A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FFA0);
  sub_23C15106C();
  v29 = v47;
  sub_23C19BA64();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v8);
  sub_23C19B7E8();
  LOBYTE(v8) = sub_23C19B8B4();
  sub_23C19B8A8();
  sub_23C19B8A8();
  if (sub_23C19B8A8() != v8)
    sub_23C19B8A8();
  v30 = v48;
  sub_23C19BAC4();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v29, v52);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v11);
  v60 = v64;
  v61 = v65;
  v62 = v66;
  sub_23C1502C8();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v59 = v60;
  v31 = swift_allocObject();
  v32 = v40;
  *(_QWORD *)(v31 + 16) = v53;
  *(_QWORD *)(v31 + 24) = v32;
  v33 = v65;
  *(_OWORD *)(v31 + 32) = v64;
  *(_OWORD *)(v31 + 48) = v33;
  *(_QWORD *)(v31 + 64) = v66;
  sub_23C151178((uint64_t)&v64);
  v34 = v50;
  sub_23C19BB3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v34);
  v35 = v44;
  v36 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v36(v26, v24, v21);
  v37 = *(void (**)(char *, uint64_t))(v35 + 8);
  v37(v24, v21);
  v36(v54, v26, v21);
  return ((uint64_t (*)(char *, uint64_t))v37)(v26, v21);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426189C4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23C150A0C()
{
  unint64_t result;

  result = qword_256B2FF98;
  if (!qword_256B2FF98)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryLayout, &type metadata for LibraryLayout);
    atomic_store(result, (unint64_t *)&qword_256B2FF98);
  }
  return result;
}

uint64_t sub_23C150A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  void (*v17)(_BYTE *, _BYTE *, uint64_t);
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  swift_getTupleTypeMetadata2();
  v8 = sub_23C19BD34();
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v8);
  v9 = sub_23C19BC80();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v9);
  v10 = sub_23C19BC68();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v20[-v15];
  v21 = a2;
  v22 = a3;
  v23 = a1;
  sub_23C19B7A0();
  sub_23C19BC5C();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v10);
  v17 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
  v17(v16, v14, v10);
  v18 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
  v18(v14, v10);
  v17(a4, v16, v10);
  return ((uint64_t (*)(_BYTE *, uint64_t))v18)(v16, v10);
}

uint64_t sub_23C150BE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;

  return sub_23C150A50(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23C150BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  swift_getTupleTypeMetadata2();
  v8 = sub_23C19BD34();
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v8);
  v9 = sub_23C19BC80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v19[-v14];
  sub_23C19BD04();
  v20 = a2;
  v21 = a3;
  v22 = a1;
  sub_23C19BC74();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v9);
  v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16);
  v16(v15, v13, v9);
  v17 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
  v17(v13, v9);
  v16(a4, v15, v9);
  return ((uint64_t (*)(_BYTE *, uint64_t))v17)(v15, v9);
}

uint64_t sub_23C150D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  _QWORD v35[2];
  char *v36;
  char *v37;

  v31 = a3;
  v32 = a4;
  v5 = *(_QWORD *)(a2 - 8);
  v29 = a1;
  v30 = v5;
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v29 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FF80);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v29 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v29 - v19;
  v36 = 0;
  LOBYTE(v37) = 1;
  v21 = sub_23C19B8B4();
  sub_23C19B8A8();
  sub_23C19B8A8();
  if (sub_23C19B8A8() != v21)
    sub_23C19B8A8();
  sub_23C19BD10();
  v22 = MEMORY[0x24BDF4638];
  sub_23C19BAD0();
  v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v20, v18, v11);
  (*(void (**)(uint64_t))(v29 + 24))(v23);
  v24 = v30;
  v25 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v25(v10, v8, a2);
  v26 = *(void (**)(char *, uint64_t))(v24 + 8);
  v26(v8, a2);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v20, v11);
  v36 = v15;
  v25(v8, v10, a2);
  v37 = v8;
  v35[0] = v11;
  v35[1] = a2;
  OpaqueTypeConformance2 = v22;
  v34 = MEMORY[0x24BDF4610];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v34 = v31;
  sub_23C177BE8((uint64_t *)&v36, 2uLL, (uint64_t)v35);
  v26(v10, a2);
  v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  v27(v20, v11);
  v26(v8, a2);
  return ((uint64_t (*)(char *, uint64_t))v27)(v15, v11);
}

uint64_t sub_23C150FD8()
{
  return sub_23C19B5B4();
}

double sub_23C150FF0@<D0>(uint64_t a1@<X8>)
{
  double result;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  __int128 v7;

  sub_23C19BD10();
  sub_23C19B614();
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  result = *(double *)&v7;
  *(_OWORD *)(a1 + 48) = v7;
  return result;
}

unint64_t sub_23C15106C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B2FFA8[0];
  if (!qword_256B2FFA8[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FFA0);
    v2[0] = MEMORY[0x24BDF4610];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, qword_256B2FFA8);
  }
  return result;
}

uint64_t sub_23C1510D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for LibraryGalleryView(0, a4, a5, a4);
  sub_23C1502C8();
  sub_23C19BDA0();
  return swift_release();
}

uint64_t sub_23C151134()
{
  sub_23C151164();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C151164()
{
  return swift_release();
}

uint64_t sub_23C15116C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23C1510D0(a1, a2, v2 + 32, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23C151178(uint64_t a1)
{
  sub_23C1511B4();
  swift_retain();
  return a1;
}

uint64_t sub_23C1511B4()
{
  return swift_retain();
}

uint64_t sub_23C1511BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C1511F4()
{
  sub_23C151164();
  return swift_release();
}

uint64_t sub_23C151224(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t sub_23C151284(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C151164();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_23C151310(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C151164();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPickerView.Layout(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPickerView.Layout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for LibraryGalleryView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryGalleryView);
}

uint64_t sub_23C151400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t OpaqueTypeConformance2;
  unint64_t v8;
  uint64_t v10;
  ValueMetadata *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  swift_getTupleTypeMetadata2();
  v0 = sub_23C19BD34();
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v0);
  v1 = sub_23C19BC80();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v1);
  v2 = sub_23C19BC68();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v2);
  v3 = sub_23C19B5A8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF88);
  v4 = sub_23C19B680();
  v14[0] = MEMORY[0x2426189D0](MEMORY[0x24BDEB238], v3);
  v14[1] = sub_23C15159C(&qword_256B2FF90, &qword_256B2FF88, MEMORY[0x24BDEEC88]);
  v5 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v4, v14);
  v10 = v4;
  v11 = (ValueMetadata *)v5;
  v6 = MEMORY[0x24261897C](255, &v10, MEMORY[0x24BDF2FE0], 0);
  v10 = v4;
  v11 = (ValueMetadata *)v5;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v8 = sub_23C150A0C();
  v10 = v6;
  v11 = &type metadata for LibraryLayout;
  v12 = OpaqueTypeConformance2;
  v13 = v8;
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C15159C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2426189D0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C1515DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;

  return sub_23C150BF4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23C1515E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23C150D60(v1[4], v1[2], v1[3], a1);
}

BOOL sub_23C1515F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23C15160C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23C15163C + 4 * byte_23C19CA70[*v0]))(0x74756F6B726F77, 0xE700000000000000);
}

uint64_t sub_23C15163C()
{
  return 0x697461746964656DLL;
}

uint64_t sub_23C151658()
{
  return 0x6B63617473;
}

uint64_t sub_23C15166C()
{
  return 0x6D6172676F7270;
}

uint64_t sub_23C151680()
{
  return 0x5074756F6B726F77;
}

uint64_t sub_23C1516A0()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_23C1516B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C1532C0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C1516DC(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23C1516E8()
{
  sub_23C152378();
  return sub_23C19C0F4();
}

uint64_t sub_23C151710()
{
  sub_23C152378();
  return sub_23C19C100();
}

uint64_t sub_23C151738()
{
  return 1;
}

uint64_t sub_23C151748()
{
  return 0x696669746E656469;
}

void sub_23C151768(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23C151774()
{
  sub_23C1523BC();
  return sub_23C19C0F4();
}

uint64_t sub_23C15179C()
{
  sub_23C1523BC();
  return sub_23C19C100();
}

uint64_t sub_23C1517C4()
{
  sub_23C1524CC();
  return sub_23C19C0F4();
}

uint64_t sub_23C1517EC()
{
  sub_23C1524CC();
  return sub_23C19C100();
}

uint64_t sub_23C151814()
{
  sub_23C152444();
  return sub_23C19C0F4();
}

uint64_t sub_23C15183C()
{
  sub_23C152444();
  return sub_23C19C100();
}

uint64_t sub_23C151864()
{
  return sub_23C19C0B8();
}

uint64_t sub_23C151888()
{
  sub_23C152488();
  return sub_23C19C0F4();
}

uint64_t sub_23C1518B0()
{
  sub_23C152488();
  return sub_23C19C100();
}

uint64_t sub_23C1518D8()
{
  sub_23C152510();
  return sub_23C19C0F4();
}

uint64_t sub_23C151900()
{
  sub_23C152510();
  return sub_23C19C100();
}

uint64_t sub_23C151928()
{
  sub_23C19C0AC();
  sub_23C19C0B8();
  return sub_23C19C0D0();
}

uint64_t sub_23C151968()
{
  sub_23C19C0AC();
  sub_23C19C0B8();
  return sub_23C19C0D0();
}

uint64_t sub_23C1519A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C151A44()
{
  sub_23C152400();
  return sub_23C19C0F4();
}

uint64_t sub_23C151A6C()
{
  sub_23C152400();
  return sub_23C19C100();
}

void LibraryItem.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_23C19B500();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for LibraryItem();
  MEMORY[0x24BDAC7A8](v2);
  sub_23C151CC4(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_23C151B54 + 4 * byte_23C19CA76[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C151B54()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 64) = 0x2D74756F6B726F77;
  *(_QWORD *)(v0 - 56) = 0xE800000000000000;
  sub_23C19BE0C();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v0 - 64);
}

uint64_t type metadata accessor for LibraryItem()
{
  uint64_t result;

  result = qword_256B30180;
  if (!qword_256B30180)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23C151CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23C151D08(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  LibraryItem.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void LibraryItem.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[2];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30040);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30048);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23C19B500();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v26 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30050);
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v23 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30058);
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v20 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30060);
  v18[1] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30068);
  v18[0] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v12 = type metadata accessor for LibraryItem();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30070);
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v16 = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C152378();
  v36 = v16;
  sub_23C19C0E8();
  sub_23C151CC4(v38, (uint64_t)v14);
  v17 = (char *)sub_23C152008 + 4 * byte_23C19CA7C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C152008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 70) = 0;
  sub_23C152510();
  v3 = *(_QWORD *)(v2 - 104);
  v4 = *(_QWORD *)(v2 - 120);
  sub_23C19C034();
  sub_23C19C058();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v4, v3);
}

unint64_t sub_23C152378()
{
  unint64_t result;

  result = qword_256B30078;
  if (!qword_256B30078)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D38C, &type metadata for LibraryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30078);
  }
  return result;
}

unint64_t sub_23C1523BC()
{
  unint64_t result;

  result = qword_256B30080;
  if (!qword_256B30080)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D33C, &type metadata for LibraryItem.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30080);
  }
  return result;
}

unint64_t sub_23C152400()
{
  unint64_t result;

  result = qword_256B30088;
  if (!qword_256B30088)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D2EC, &type metadata for LibraryItem.WorkoutPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30088);
  }
  return result;
}

unint64_t sub_23C152444()
{
  unint64_t result;

  result = qword_256B30098;
  if (!qword_256B30098)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D29C, &type metadata for LibraryItem.ProgramCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30098);
  }
  return result;
}

unint64_t sub_23C152488()
{
  unint64_t result;

  result = qword_256B300A0;
  if (!qword_256B300A0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D24C, &type metadata for LibraryItem.StackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B300A0);
  }
  return result;
}

unint64_t sub_23C1524CC()
{
  unint64_t result;

  result = qword_256B300A8;
  if (!qword_256B300A8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D1FC, &type metadata for LibraryItem.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B300A8);
  }
  return result;
}

unint64_t sub_23C152510()
{
  unint64_t result;

  result = qword_256B300B0;
  if (!qword_256B300B0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D1AC, &type metadata for LibraryItem.WorkoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B300B0);
  }
  return result;
}

uint64_t LibraryItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  _QWORD v41[7];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;

  v57 = a2;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B300B8);
  v52 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v61 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B300C0);
  v5 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  v51 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v56 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B300C8);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v59 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B300D0);
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B300D8);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v54 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B300E0);
  v41[6] = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v53 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B300E8);
  v58 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for LibraryItem();
  v15 = MEMORY[0x24BDAC7A8](v62);
  v41[4] = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v41[5] = (char *)v41 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v41 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v41 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)v41 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v41 - v29;
  v31 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  sub_23C152378();
  v60 = v14;
  v32 = v65;
  sub_23C19C0DC();
  if (!v32)
  {
    v41[1] = v25;
    v41[2] = v21;
    v41[3] = v28;
    v33 = v60;
    v34 = v62;
    v65 = v30;
    v35 = v63;
    v36 = sub_23C19C028();
    if (*(_QWORD *)(v36 + 16) == 1)
      __asm { BR              X10 }
    v37 = sub_23C19BF50();
    swift_allocError();
    v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v39 = v34;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x24BEE26D0], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v33, v35);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
}

void sub_23C152A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)(v2 - 69) = 1;
  sub_23C1524CC();
  v3 = *(_QWORD *)(v2 - 184);
  v4 = *(_QWORD *)(v2 - 112);
  sub_23C19BFC8();
  if (v0)
    JUMPOUT(0x23C152AB8);
  v5 = *(_QWORD *)(v2 - 264);
  v6 = sub_23C19BFF8();
  v7 = v3;
  v8 = *(_QWORD *)(v2 - 152);
  v9 = v6;
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v7, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v4);
  v12 = *(uint64_t **)(v2 - 328);
  *v12 = v9;
  v12[1] = v11;
  swift_storeEnumTagMultiPayload();
  v13 = *(_QWORD *)(v2 - 160);
  v14 = *(_QWORD *)(v2 - 96);
  sub_23C153004(v12, v14);
  sub_23C153004(v14, v13);
  JUMPOUT(0x23C152A44);
}

void sub_23C152AD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v3 - 68) = 2;
  sub_23C152488();
  v4 = *(_QWORD *)(v3 - 176);
  v5 = *(_QWORD *)(v3 - 112);
  sub_23C19BFC8();
  if (!v1)
  {
    v6 = *(_QWORD *)(v3 - 248);
    v7 = sub_23C19BFF8();
    v9 = v8;
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 8);
    *(_QWORD *)(v3 - 128) = v7;
    v10(v4, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 152) + 8))(v2, v5);
    *v0 = *(_QWORD *)(v3 - 128);
    v0[1] = v9;
    swift_storeEnumTagMultiPayload();
    v11 = *(_QWORD *)(v3 - 160);
    v12 = *(_QWORD *)(v3 - 96);
    sub_23C153004(v0, v12);
    sub_23C153004(v12, v11);
    JUMPOUT(0x23C152A44);
  }
  JUMPOUT(0x23C152A2CLL);
}

void sub_23C152B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  *(_BYTE *)(v3 - 67) = 3;
  sub_23C152444();
  v4 = v2;
  sub_23C19BFC8();
  if (v1)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23C152A40);
  }
  v5 = *(_QWORD *)(v3 - 232);
  v6 = sub_23C19BFF8();
  v7 = *(_QWORD *)(v3 - 152);
  v8 = v6;
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 240) + 8))(v0, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(v7 + 8))(v4, *(_QWORD *)(v3 - 112));
  v11 = *(uint64_t **)(v3 - 320);
  *v11 = v8;
  v11[1] = v10;
  JUMPOUT(0x23C152F9CLL);
}

void sub_23C152B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 66) = 4;
  sub_23C152400();
  v3 = *(_QWORD *)(v2 - 168);
  sub_23C19BFC8();
  if (v0)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23C152A40);
  }
  sub_23C19B500();
  sub_23C153930(&qword_256B300F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v4 = *(_QWORD *)(v2 - 216);
  sub_23C19C01C();
  v5 = *(_QWORD *)(v2 - 152);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 208) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(v5 + 8))(v1, *(_QWORD *)(v2 - 112));
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23C152FE4);
}

void sub_23C152BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  *(_BYTE *)(v3 - 65) = 5;
  sub_23C1523BC();
  v4 = *(_QWORD *)(v3 - 112);
  sub_23C19BFC8();
  if (!v1)
  {
    v5 = *(_QWORD *)(v3 - 224);
    v6 = sub_23C19BFF8();
    v7 = *(_QWORD *)(v3 - 152);
    v8 = v6;
    v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 200) + 8))(v0, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v4);
    v11 = *(uint64_t **)(v3 - 304);
    *v11 = v8;
    v11[1] = v10;
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23C152FE4);
  }
  JUMPOUT(0x23C152D00);
}

uint64_t sub_23C153004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C153048@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryItem.init(from:)(a1, a2);
}

void sub_23C15305C(_QWORD *a1)
{
  LibraryItem.encode(to:)(a1);
}

void LibraryItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_23C19B500();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for LibraryItem();
  MEMORY[0x24BDAC7A8](v2);
  sub_23C151CC4(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_23C153134 + 4 * byte_23C19CA88[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C153134()
{
  sub_23C19C0B8();
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

uint64_t LibraryItem.hashValue.getter()
{
  sub_23C19C0AC();
  LibraryItem.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C153244()
{
  sub_23C19C0AC();
  LibraryItem.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C153284()
{
  sub_23C19C0AC();
  LibraryItem.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C1532C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74756F6B726F77 && a2 == 0xE700000000000000;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697461746964656DLL && a2 == 0xEA00000000006E6FLL || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B63617473 && a2 == 0xE500000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6172676F7270 && a2 == 0xE700000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5074756F6B726F77 && a2 == 0xEB000000006E616CLL || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void _s14FitnessLibrary0B4ItemO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[3];
  uint64_t v17;

  v17 = a2;
  v3 = sub_23C19B500();
  v16[1] = *(_QWORD *)(v3 - 8);
  v16[2] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v16[0] = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LibraryItem();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30260);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 + *(int *)(v12 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C151CC4(a1, (uint64_t)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23C151CC4(v17, (uint64_t)v14);
  v15 = (char *)sub_23C153704 + 4 * byte_23C19CA8E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C153704()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v7;

  sub_23C151CC4(v0, (uint64_t)v2);
  v4 = *v2;
  v3 = v2[1];
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_23C154828(v0);
    goto LABEL_11;
  }
  if (v4 == *v1 && v3 == v1[1])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      sub_23C153D88(v0);
LABEL_11:
      v7 = 0;
      return v7 & 1;
    }
  }
  sub_23C153D88(v0);
  v7 = 1;
  return v7 & 1;
}

void sub_23C153848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  sub_23C151CC4(v0, v2);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    v5 = *(_QWORD *)(v3 - 112);
    v4 = *(_QWORD *)(v3 - 104);
    v6 = v1;
    v7 = *(_QWORD *)(v3 - 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v6, v7);
    sub_23C19B4E8();
    v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v8(v5, v7);
    v8(v2, v7);
    sub_23C153D88(v0);
    JUMPOUT(0x23C153824);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 104) + 8))(v2, *(_QWORD *)(v3 - 96));
  JUMPOUT(0x23C153818);
}

uint64_t sub_23C1538F8()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_23C153904()
{
  return sub_23C153930(&qword_256B30108, (uint64_t (*)(uint64_t))type metadata accessor for LibraryItem, (uint64_t)&protocol conformance descriptor for LibraryItem);
}

uint64_t sub_23C153930(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2426189D0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23C1539C0 + 4 * byte_23C19CA94[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for LibraryItem(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      result = swift_bridgeObjectRelease();
      break;
    case 4:
      v3 = sub_23C19B500();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for LibraryItem()
{
  char *v0;

  v0 = (char *)sub_23C153B6C + 4 * byte_23C19CAA0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23C153B6C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for LibraryItem(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23C153D88(result);
    v2 = (char *)&loc_23C153C90 + 4 * byte_23C19CAA6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23C153D88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LibraryItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for LibraryItem(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 4)
  {
    v6 = sub_23C19B500();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for LibraryItem(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23C153D88((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      v6 = sub_23C19B500();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for LibraryItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23C153F08()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23C153F18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C19B500();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23C154068 + 4 * byte_23C19CAB1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23C15409C + 4 * byte_23C19CAAC[v4]))();
}

uint64_t sub_23C15409C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C1540A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C1540ACLL);
  return result;
}

uint64_t sub_23C1540B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C1540C0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23C1540C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C1540CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23C1540D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryItem.CodingKeys()
{
  return &type metadata for LibraryItem.CodingKeys;
}

uint64_t sub_23C1540FC()
{
  return 0;
}

ValueMetadata *type metadata accessor for LibraryItem.WorkoutCodingKeys()
{
  return &type metadata for LibraryItem.WorkoutCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryItem.MeditationCodingKeys()
{
  return &type metadata for LibraryItem.MeditationCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryItem.StackCodingKeys()
{
  return &type metadata for LibraryItem.StackCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryItem.ProgramCodingKeys()
{
  return &type metadata for LibraryItem.ProgramCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryItem.WorkoutPlanCodingKeys()
{
  return &type metadata for LibraryItem.WorkoutPlanCodingKeys;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerState.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s14FitnessLibrary11LibraryItemO17WorkoutCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C1541E4 + 4 * byte_23C19CAB6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C154204 + 4 * byte_23C19CABB[v4]))();
}

_BYTE *sub_23C1541E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C154204(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C15420C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C154214(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C15421C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C154224(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LibraryItem.DownloadCodingKeys()
{
  return &type metadata for LibraryItem.DownloadCodingKeys;
}

unint64_t sub_23C154244()
{
  unint64_t result;

  result = qword_256B301B8;
  if (!qword_256B301B8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CD34, &type metadata for LibraryItem.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B301B8);
  }
  return result;
}

unint64_t sub_23C15428C()
{
  unint64_t result;

  result = qword_256B301C0;
  if (!qword_256B301C0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CDEC, &type metadata for LibraryItem.WorkoutPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B301C0);
  }
  return result;
}

unint64_t sub_23C1542D4()
{
  unint64_t result;

  result = qword_256B301C8;
  if (!qword_256B301C8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CEA4, &type metadata for LibraryItem.ProgramCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B301C8);
  }
  return result;
}

unint64_t sub_23C15431C()
{
  unint64_t result;

  result = qword_256B301D0;
  if (!qword_256B301D0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CF5C, &type metadata for LibraryItem.StackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B301D0);
  }
  return result;
}

unint64_t sub_23C154364()
{
  unint64_t result;

  result = qword_256B301D8;
  if (!qword_256B301D8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D014, &type metadata for LibraryItem.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B301D8);
  }
  return result;
}

unint64_t sub_23C1543AC()
{
  unint64_t result;

  result = qword_256B301E0;
  if (!qword_256B301E0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D0CC, &type metadata for LibraryItem.WorkoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B301E0);
  }
  return result;
}

unint64_t sub_23C1543F4()
{
  unint64_t result;

  result = qword_256B301E8;
  if (!qword_256B301E8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D184, &type metadata for LibraryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B301E8);
  }
  return result;
}

unint64_t sub_23C15443C()
{
  unint64_t result;

  result = qword_256B301F0;
  if (!qword_256B301F0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D03C, &type metadata for LibraryItem.WorkoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B301F0);
  }
  return result;
}

unint64_t sub_23C154484()
{
  unint64_t result;

  result = qword_256B301F8;
  if (!qword_256B301F8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D064, &type metadata for LibraryItem.WorkoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B301F8);
  }
  return result;
}

unint64_t sub_23C1544CC()
{
  unint64_t result;

  result = qword_256B30200;
  if (!qword_256B30200)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CF84, &type metadata for LibraryItem.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30200);
  }
  return result;
}

unint64_t sub_23C154514()
{
  unint64_t result;

  result = qword_256B30208;
  if (!qword_256B30208)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CFAC, &type metadata for LibraryItem.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30208);
  }
  return result;
}

unint64_t sub_23C15455C()
{
  unint64_t result;

  result = qword_256B30210;
  if (!qword_256B30210)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CECC, &type metadata for LibraryItem.StackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30210);
  }
  return result;
}

unint64_t sub_23C1545A4()
{
  unint64_t result;

  result = qword_256B30218;
  if (!qword_256B30218)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CEF4, &type metadata for LibraryItem.StackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30218);
  }
  return result;
}

unint64_t sub_23C1545EC()
{
  unint64_t result;

  result = qword_256B30220;
  if (!qword_256B30220)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CE14, &type metadata for LibraryItem.ProgramCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30220);
  }
  return result;
}

unint64_t sub_23C154634()
{
  unint64_t result;

  result = qword_256B30228;
  if (!qword_256B30228)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CE3C, &type metadata for LibraryItem.ProgramCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30228);
  }
  return result;
}

unint64_t sub_23C15467C()
{
  unint64_t result;

  result = qword_256B30230;
  if (!qword_256B30230)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CD5C, &type metadata for LibraryItem.WorkoutPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30230);
  }
  return result;
}

unint64_t sub_23C1546C4()
{
  unint64_t result;

  result = qword_256B30238;
  if (!qword_256B30238)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CD84, &type metadata for LibraryItem.WorkoutPlanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30238);
  }
  return result;
}

unint64_t sub_23C15470C()
{
  unint64_t result;

  result = qword_256B30240;
  if (!qword_256B30240)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CCA4, &type metadata for LibraryItem.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30240);
  }
  return result;
}

unint64_t sub_23C154754()
{
  unint64_t result;

  result = qword_256B30248;
  if (!qword_256B30248)
  {
    result = MEMORY[0x2426189D0](&unk_23C19CCCC, &type metadata for LibraryItem.DownloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30248);
  }
  return result;
}

unint64_t sub_23C15479C()
{
  unint64_t result;

  result = qword_256B30250;
  if (!qword_256B30250)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D0F4, &type metadata for LibraryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30250);
  }
  return result;
}

unint64_t sub_23C1547E4()
{
  unint64_t result;

  result = qword_256B30258;
  if (!qword_256B30258)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D11C, &type metadata for LibraryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30258);
  }
  return result;
}

uint64_t sub_23C154828(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30260);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void LibraryPage.title(locale:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23C19B524();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23C19BDD0();
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X10 }
}

uint64_t sub_23C154914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  sub_23C19BDC4();
  if (qword_256B2FD18 != -1)
    swift_once();
  v4 = (void *)qword_256B404E8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
  v5 = v4;
  return sub_23C19BDF4();
}

uint64_t LibraryPage.iconName.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23C154AA4 + 4 * byte_23C19D3E3[a1]))(0x722E657275676966, 0xEA00000000006E75);
}

uint64_t sub_23C154AA4()
{
  return 0x656D2E656C707061;
}

uint64_t sub_23C154AC8()
{
  return 0x2E7373656E746966;
}

uint64_t sub_23C154AEC()
{
  return 0x7261646E656C6163;
}

unint64_t sub_23C154B04()
{
  return 0xD000000000000014;
}

unint64_t sub_23C154B20()
{
  return 0xD000000000000015;
}

uint64_t sub_23C154B40()
{
  return 0x6B636F6C63;
}

void LibraryPage.emptyTitle(locale:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23C19B524();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23C19BDD0();
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X10 }
}

uint64_t sub_23C154BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  sub_23C19BDC4();
  if (qword_256B2FD18 != -1)
    swift_once();
  v4 = (void *)qword_256B404E8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
  v5 = v4;
  return sub_23C19BDF4();
}

void LibraryPage.emptyDescription(locale:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_23C19B524();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23C19BDD0();
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X10 }
}

uint64_t sub_23C154DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  sub_23C19BDC4();
  if (qword_256B2FD18 != -1)
    swift_once();
  v4 = (void *)qword_256B404E8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
  v5 = v4;
  return sub_23C19BDF4();
}

void sub_23C154F18()
{
  qword_256B30268 = (uint64_t)&unk_250D06778;
}

uint64_t static LibraryPage.remoteBrowsing.getter()
{
  if (qword_256B2FCF8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void sub_23C154F6C()
{
  qword_256B404D8 = (uint64_t)&unk_250D067A0;
}

void sub_23C154F80()
{
  qword_256B404E0 = (uint64_t)&unk_250D067C8;
}

uint64_t LibraryPage.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23C154FCC + 4 * byte_23C19D3F8[a1]))(0x7374756F6B726F77, 0xE800000000000000);
}

uint64_t sub_23C154FCC()
{
  return 0x697461746964656DLL;
}

uint64_t sub_23C154FEC()
{
  return 0x736B63617473;
}

uint64_t sub_23C155000()
{
  return 0x5074756F6B726F77;
}

uint64_t sub_23C155020()
{
  return 0x736D6172676F7270;
}

uint64_t sub_23C155034()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_23C155050()
{
  return 0x796C746E65636572;
}

void sub_23C155074(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23C1550C8@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23C155188 + 4 * byte_23C19D406[a1]))(0x697461746964656DLL);
}

uint64_t sub_23C155188(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x697461746964656DLL && v1 == 0xEB00000000736E6FLL)
    v2 = 1;
  else
    v2 = sub_23C19C088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23C1552A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s14FitnessLibrary0B4PageO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_23C1552D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23C155300 + 4 * byte_23C19D40D[*v0]))();
}

void sub_23C155300(_QWORD *a1@<X8>)
{
  *a1 = 0x697461746964656DLL;
  a1[1] = 0xEB00000000736E6FLL;
}

void sub_23C155324(_QWORD *a1@<X8>)
{
  *a1 = 0x736B63617473;
  a1[1] = 0xE600000000000000;
}

void sub_23C15533C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "workoutPlans");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_23C155360(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x736D6172676F7270;
  a1[1] = v1;
}

void sub_23C155378(_QWORD *a1@<X8>)
{
  *a1 = 0x64616F6C6E776F64;
  a1[1] = 0xEA00000000006465;
}

void sub_23C155398(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "recentlyAdded");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_23C1553C4(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t LibraryPage.isEmpty.getter()
{
  return 0;
}

uint64_t LibraryPage.allowsMultiple.getter()
{
  return 0;
}

uint64_t LibraryPage.count.getter()
{
  return 1;
}

uint64_t LibraryPage.contains<A>(id:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[16];

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(_BYTE *))(v2 + 16))(&v4[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  if (swift_dynamicCast())
    __asm { BR              X10 }
  return 0;
}

uint64_t LibraryPage.apply<A>(as:operation:)(uint64_t a1, void (*a2)(_BYTE *), uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE v19[16];

  v8 = sub_23C19BEFC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v19[-v11];
  v13 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19[15] = a4;
  v16 = swift_dynamicCast();
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v16 & 1) != 0)
  {
    v17(v12, 0, 1, a5);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(v15, v12, a5);
    a2(v15);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 8))(v15, a5);
  }
  else
  {
    v17(v12, 1, 1, a5);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
  }
}

uint64_t sub_23C1557D4(uint64_t a1)
{
  return LibraryPage.contains<A>(id:)(a1);
}

uint64_t sub_23C1557E0(uint64_t a1, void (*a2)(_BYTE *), uint64_t a3, uint64_t a4)
{
  char *v4;

  return LibraryPage.apply<A>(as:operation:)(a1, a2, a3, *v4, a4);
}

uint64_t sub_23C1557EC()
{
  sub_23C155DF4();
  return sub_23C19BE3C();
}

uint64_t sub_23C155848()
{
  sub_23C155DF4();
  return sub_23C19BE30();
}

void sub_23C155894()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23C19C0AC();
  __asm { BR              X9 }
}

uint64_t sub_23C1558E0()
{
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  return sub_23C19C0D0();
}

void sub_23C1559B0()
{
  __asm { BR              X10 }
}

uint64_t sub_23C1559EC()
{
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

void sub_23C155AA8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23C19C0AC();
  __asm { BR              X9 }
}

uint64_t sub_23C155AF0()
{
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  return sub_23C19C0D0();
}

uint64_t _s14FitnessLibrary0B4PageO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_23C19BFB0();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

unint64_t sub_23C155C0C()
{
  unint64_t result;

  result = qword_256B30270;
  if (!qword_256B30270)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPage, &type metadata for LibraryPage);
    atomic_store(result, (unint64_t *)&qword_256B30270);
  }
  return result;
}

unint64_t sub_23C155C54()
{
  unint64_t result;

  result = qword_256B30278;
  if (!qword_256B30278)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPage, &type metadata for LibraryPage);
    atomic_store(result, (unint64_t *)&qword_256B30278);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryPage(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23C155D74 + 4 * byte_23C19D43C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23C155DA8 + 4 * byte_23C19D437[v4]))();
}

uint64_t sub_23C155DA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C155DB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C155DB8);
  return result;
}

uint64_t sub_23C155DC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C155DCCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23C155DD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C155DD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryPage()
{
  return &type metadata for LibraryPage;
}

unint64_t sub_23C155DF4()
{
  unint64_t result;

  result = qword_256B30280;
  if (!qword_256B30280)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPage, &type metadata for LibraryPage);
    atomic_store(result, (unint64_t *)&qword_256B30280);
  }
  return result;
}

uint64_t WorkoutPlanBannerState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C155E44(v1, a1);
}

uint64_t sub_23C155E44(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for WorkoutPlanBannerLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t WorkoutPlanBannerState.loadState.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23C155E90(a1, v1);
}

uint64_t sub_23C155E90(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for WorkoutPlanBannerLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*WorkoutPlanBannerState.loadState.modify())()
{
  return nullsub_1;
}

uint64_t WorkoutPlanBannerState.init(loadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23C156798(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerLoadState);
}

uint64_t sub_23C155F04()
{
  return 0x7461745364616F6CLL;
}

uint64_t sub_23C155F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C155FC0()
{
  sub_23C156120();
  return sub_23C19C0F4();
}

uint64_t sub_23C155FE8()
{
  sub_23C156120();
  return sub_23C19C100();
}

uint64_t WorkoutPlanBannerState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30288);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C156120();
  sub_23C19C0E8();
  type metadata accessor for WorkoutPlanBannerLoadState();
  sub_23C153930(&qword_256B30298, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanBannerLoadState, (uint64_t)&protocol conformance descriptor for WorkoutPlanBannerLoadState);
  sub_23C19C07C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_23C156120()
{
  unint64_t result;

  result = qword_256B30290;
  if (!qword_256B30290)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D77C, &type metadata for WorkoutPlanBannerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30290);
  }
  return result;
}

uint64_t WorkoutPlanBannerState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t State;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x24BDAC7A8](State);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302A0);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WorkoutPlanBannerState();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C156120();
  sub_23C19C0DC();
  if (!v2)
  {
    sub_23C153930(&qword_256B302A8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanBannerLoadState, (uint64_t)&protocol conformance descriptor for WorkoutPlanBannerLoadState);
    sub_23C19C01C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_23C156798(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerLoadState);
    sub_23C156798((uint64_t)v11, v13, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerState);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for WorkoutPlanBannerState()
{
  uint64_t result;

  result = qword_256B30328;
  if (!qword_256B30328)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23C15636C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutPlanBannerState.init(from:)(a1, a2);
}

uint64_t sub_23C156380(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30288);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C156120();
  sub_23C19C0E8();
  type metadata accessor for WorkoutPlanBannerLoadState();
  sub_23C153930(&qword_256B30298, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanBannerLoadState, (uint64_t)&protocol conformance descriptor for WorkoutPlanBannerLoadState);
  sub_23C19C07C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t WorkoutPlanBannerState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t State;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v1 = type metadata accessor for WorkoutPlanDetail();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v16 - v10;
  State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x24BDAC7A8](State);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C155E44(v0, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
    return sub_23C19C0B8();
  sub_23C156708((uint64_t)v14, (uint64_t)v11);
  sub_23C19C0B8();
  sub_23C156750((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1)
  {
    sub_23C19C0C4();
  }
  else
  {
    sub_23C156798((uint64_t)v9, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
    sub_23C19C0C4();
    WorkoutPlanDetail.hash(into:)();
    sub_23C1567DC((uint64_t)v4);
  }
  return sub_23C156818((uint64_t)v11);
}

uint64_t WorkoutPlanBannerState.hashValue.getter()
{
  sub_23C19C0AC();
  WorkoutPlanBannerState.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C15668C()
{
  sub_23C19C0AC();
  WorkoutPlanBannerState.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C1566CC()
{
  sub_23C19C0AC();
  WorkoutPlanBannerState.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C156708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C156750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C156798(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23C1567DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorkoutPlanDetail();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C156818(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C156858()
{
  return sub_23C153930(&qword_256B302B8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanBannerState, (uint64_t)&protocol conformance descriptor for WorkoutPlanBannerState);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutPlanBannerState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v43;

  v4 = *(_QWORD *)(type metadata accessor for WorkoutPlanBannerLoadState() - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      v9 = (int *)type metadata accessor for WorkoutPlanDetail();
      v10 = *((_QWORD *)v9 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v10 + 48))(a2, 1, v9))
      {
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
      }
      else
      {
        v11 = sub_23C19B53C();
        v12 = *(_QWORD *)(v11 - 8);
        v43 = v10;
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        v14 = v9[5];
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_23C19B4D0();
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        v20 = v9[6];
        v21 = (uint64_t *)((char *)a1 + v20);
        v22 = (uint64_t *)((char *)a2 + v20);
        v23 = v22[1];
        *v21 = *v22;
        v21[1] = v23;
        v24 = v9[7];
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_23C19B500();
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
        *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
        v29 = v9[9];
        v30 = (uint64_t *)((char *)a1 + v29);
        v31 = (uint64_t *)((char *)a2 + v29);
        v32 = v31[1];
        *v30 = *v31;
        v30[1] = v32;
        v33 = v9[10];
        v34 = (uint64_t *)((char *)a1 + v33);
        v35 = (uint64_t *)((char *)a2 + v33);
        v36 = v35[1];
        *v34 = *v35;
        v34[1] = v36;
        v37 = v9[11];
        v38 = (uint64_t *)((char *)a1 + v37);
        v39 = (uint64_t *)((char *)a2 + v37);
        v40 = v39[1];
        *v38 = *v39;
        v38[1] = v40;
        v41 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v43 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41(a1, 0, 1, v9);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t destroy for WorkoutPlanBannerLoadState(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for WorkoutPlanDetail();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
    if (!(_DWORD)result)
    {
      v5 = sub_23C19B53C();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
      v7 = a1 + *(int *)(v4 + 20);
      v8 = sub_23C19B4D0();
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      swift_bridgeObjectRelease();
      v10 = a1 + *(int *)(v4 + 28);
      v11 = sub_23C19B500();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *initializeWithCopy for WorkoutPlanBannerState(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t State;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, int *);
  uint64_t v41;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    State = type metadata accessor for WorkoutPlanBannerLoadState();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    v7 = (int *)type metadata accessor for WorkoutPlanDetail();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v41 = v8;
      v9 = sub_23C19B53C();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v12 = v7[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_23C19B4D0();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v18 = v7[6];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = *((_QWORD *)v20 + 1);
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *((_QWORD *)v19 + 1) = v21;
      v22 = v7[7];
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = sub_23C19B500();
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v26(v23, v24, v25);
      a1[v7[8]] = a2[v7[8]];
      v27 = v7[9];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v30 = *((_QWORD *)v29 + 1);
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *((_QWORD *)v28 + 1) = v30;
      v31 = v7[10];
      v32 = &a1[v31];
      v33 = &a2[v31];
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      v35 = v7[11];
      v36 = &a1[v35];
      v37 = &a2[v35];
      v38 = *((_QWORD *)v37 + 1);
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *((_QWORD *)v36 + 1) = v38;
      v39 = *(void (**)(char *, _QWORD, uint64_t, int *))(v41 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(a1, 0, 1, v7);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *assignWithCopy for WorkoutPlanBannerState(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  int *v9;
  uint64_t v10;
  size_t v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, int *);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, _QWORD, uint64_t, int *);
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  void (*v76)(char *, _QWORD, uint64_t, int *);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(char *, uint64_t, uint64_t);
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_23C156818((uint64_t)a1);
      goto LABEL_7;
    }
    v12 = (int *)type metadata accessor for WorkoutPlanDetail();
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(uint64_t (**)(char *, uint64_t, int *))(v13 + 48);
    v15 = v14(a1, 1, v12);
    v16 = v14(a2, 1, v12);
    if (v15)
    {
      if (!v16)
      {
        v17 = sub_23C19B53C();
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(a1, a2, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        v53 = v12[5];
        v54 = &a1[v53];
        v55 = &a2[v53];
        v56 = sub_23C19B4D0();
        v57 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
        {
          v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
        }
        v59 = v12[6];
        v60 = &a1[v59];
        v61 = &a2[v59];
        *(_QWORD *)v60 = *(_QWORD *)v61;
        *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
        v62 = v12[7];
        v63 = &a1[v62];
        v64 = &a2[v62];
        v65 = sub_23C19B500();
        v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v63, v64, v65);
        a1[v12[8]] = a2[v12[8]];
        v67 = v12[9];
        v68 = &a1[v67];
        v69 = &a2[v67];
        *(_QWORD *)v68 = *(_QWORD *)v69;
        *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
        v70 = v12[10];
        v71 = &a1[v70];
        v72 = &a2[v70];
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
        v73 = v12[11];
        v74 = &a1[v73];
        v75 = &a2[v73];
        *(_QWORD *)v74 = *(_QWORD *)v75;
        *((_QWORD *)v74 + 1) = *((_QWORD *)v75 + 1);
        v76 = *(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v76(a1, 0, 1, v12);
        return a1;
      }
      goto LABEL_17;
    }
    if (v16)
    {
      sub_23C1567DC((uint64_t)a1);
LABEL_17:
      v11 = *(_QWORD *)(v5 + 64);
      goto LABEL_8;
    }
    v48 = sub_23C19B53C();
    v49 = *(_QWORD *)(v48 - 8);
    v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
    v51 = v50(a1, 1, v48);
    v52 = v50(a2, 1, v48);
    if (v51)
    {
      if (!v52)
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(a1, a2, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(a1, 0, 1, v48);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v52)
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 24))(a1, a2, v48);
LABEL_36:
        v78 = v12[5];
        v79 = &a1[v78];
        v80 = &a2[v78];
        v81 = sub_23C19B4D0();
        v82 = *(_QWORD *)(v81 - 8);
        v83 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
        v84 = v83(v79, 1, v81);
        v85 = v83(v80, 1, v81);
        if (v84)
        {
          if (!v85)
          {
            (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v79, v80, v81);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
LABEL_42:
            v87 = v12[6];
            v88 = &a1[v87];
            v89 = &a2[v87];
            *(_QWORD *)v88 = *(_QWORD *)v89;
            *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v90 = v12[7];
            v91 = &a1[v90];
            v92 = &a2[v90];
            v93 = sub_23C19B500();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 24))(v91, v92, v93);
            a1[v12[8]] = a2[v12[8]];
            v94 = v12[9];
            v95 = &a1[v94];
            v96 = &a2[v94];
            *(_QWORD *)v95 = *(_QWORD *)v96;
            *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v97 = v12[10];
            v98 = &a1[v97];
            v99 = &a2[v97];
            *(_QWORD *)v98 = *(_QWORD *)v99;
            *((_QWORD *)v98 + 1) = *((_QWORD *)v99 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v100 = v12[11];
            v101 = &a1[v100];
            v102 = &a2[v100];
            *(_QWORD *)v101 = *(_QWORD *)v102;
            *((_QWORD *)v101 + 1) = *((_QWORD *)v102 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v85)
          {
            (*(void (**)(char *, char *, uint64_t))(v82 + 24))(v79, v80, v81);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v81);
        }
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(a1, v48);
    }
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_36;
  }
  if (v8)
  {
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for WorkoutPlanBannerLoadState() - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  v9 = (int *)type metadata accessor for WorkoutPlanDetail();
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(a2, 1, v9))
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v103 = v10;
    v20 = sub_23C19B53C();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(a1, a2, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
    }
    v23 = v9[5];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23C19B4D0();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = v9[6];
    v30 = &a1[v29];
    v31 = &a2[v29];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
    v32 = v9[7];
    v33 = &a1[v32];
    v34 = &a2[v32];
    v35 = sub_23C19B500();
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    v36(v33, v34, v35);
    a1[v9[8]] = a2[v9[8]];
    v37 = v9[9];
    v38 = &a1[v37];
    v39 = &a2[v37];
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
    v40 = v9[10];
    v41 = &a1[v40];
    v42 = &a2[v40];
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
    v43 = v9[11];
    v44 = &a1[v43];
    v45 = &a2[v43];
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
    v46 = *(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(a1, 0, 1, v9);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

char *initializeWithTake for WorkoutPlanBannerState(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t State;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    State = type metadata accessor for WorkoutPlanBannerLoadState();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    v7 = (int *)type metadata accessor for WorkoutPlanDetail();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_23C19B53C();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v12 = v7[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_23C19B4D0();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
      v18 = v7[7];
      v19 = &a1[v18];
      v20 = &a2[v18];
      v21 = sub_23C19B500();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      a1[v7[8]] = a2[v7[8]];
      *(_OWORD *)&a1[v7[9]] = *(_OWORD *)&a2[v7[9]];
      *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
      *(_OWORD *)&a1[v7[11]] = *(_OWORD *)&a2[v7[11]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *assignWithTake for WorkoutPlanBannerState(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  int *v9;
  uint64_t v10;
  size_t v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, int *);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_23C156818((uint64_t)a1);
      goto LABEL_7;
    }
    v12 = (int *)type metadata accessor for WorkoutPlanDetail();
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(uint64_t (**)(char *, uint64_t, int *))(v13 + 48);
    v15 = v14(a1, 1, v12);
    v16 = v14(a2, 1, v12);
    if (v15)
    {
      if (!v16)
      {
        v17 = sub_23C19B53C();
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(a1, a2, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        v39 = v12[5];
        v40 = &a1[v39];
        v41 = &a2[v39];
        v42 = sub_23C19B4D0();
        v43 = *(_QWORD *)(v42 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        }
        *(_OWORD *)&a1[v12[6]] = *(_OWORD *)&a2[v12[6]];
        v45 = v12[7];
        v46 = &a1[v45];
        v47 = &a2[v45];
        v48 = sub_23C19B500();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
        a1[v12[8]] = a2[v12[8]];
        *(_OWORD *)&a1[v12[9]] = *(_OWORD *)&a2[v12[9]];
        *(_OWORD *)&a1[v12[10]] = *(_OWORD *)&a2[v12[10]];
        *(_OWORD *)&a1[v12[11]] = *(_OWORD *)&a2[v12[11]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(a1, 0, 1, v12);
        return a1;
      }
      goto LABEL_17;
    }
    if (v16)
    {
      sub_23C1567DC((uint64_t)a1);
LABEL_17:
      v11 = *(_QWORD *)(v5 + 64);
      goto LABEL_8;
    }
    v34 = sub_23C19B53C();
    v35 = *(_QWORD *)(v34 - 8);
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
    v37 = v36(a1, 1, v34);
    v38 = v36(a2, 1, v34);
    if (v37)
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(a1, a2, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 40))(a1, a2, v34);
LABEL_36:
        v50 = v12[5];
        v51 = &a1[v50];
        v52 = &a2[v50];
        v53 = sub_23C19B4D0();
        v54 = *(_QWORD *)(v53 - 8);
        v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
        v56 = v55(v51, 1, v53);
        v57 = v55(v52, 1, v53);
        if (v56)
        {
          if (!v57)
          {
            (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_42:
            v59 = v12[6];
            v60 = &a1[v59];
            v61 = &a2[v59];
            v63 = *(_QWORD *)v61;
            v62 = *((_QWORD *)v61 + 1);
            *(_QWORD *)v60 = v63;
            *((_QWORD *)v60 + 1) = v62;
            swift_bridgeObjectRelease();
            v64 = v12[7];
            v65 = &a1[v64];
            v66 = &a2[v64];
            v67 = sub_23C19B500();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 40))(v65, v66, v67);
            a1[v12[8]] = a2[v12[8]];
            v68 = v12[9];
            v69 = &a1[v68];
            v70 = &a2[v68];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            *(_QWORD *)v69 = v72;
            *((_QWORD *)v69 + 1) = v71;
            swift_bridgeObjectRelease();
            v73 = v12[10];
            v74 = &a1[v73];
            v75 = &a2[v73];
            v77 = *(_QWORD *)v75;
            v76 = *((_QWORD *)v75 + 1);
            *(_QWORD *)v74 = v77;
            *((_QWORD *)v74 + 1) = v76;
            swift_bridgeObjectRelease();
            v78 = v12[11];
            v79 = &a1[v78];
            v80 = &a2[v78];
            v82 = *(_QWORD *)v80;
            v81 = *((_QWORD *)v80 + 1);
            *(_QWORD *)v79 = v82;
            *((_QWORD *)v79 + 1) = v81;
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v57)
          {
            (*(void (**)(char *, char *, uint64_t))(v54 + 40))(v51, v52, v53);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v53);
        }
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(a1, v34);
    }
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_36;
  }
  if (v8)
  {
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for WorkoutPlanBannerLoadState() - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  v9 = (int *)type metadata accessor for WorkoutPlanDetail();
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(a2, 1, v9))
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v20 = sub_23C19B53C();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(a1, a2, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
    }
    v23 = v9[5];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23C19B4D0();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
    v29 = v9[7];
    v30 = &a1[v29];
    v31 = &a2[v29];
    v32 = sub_23C19B500();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
    a1[v9[8]] = a2[v9[8]];
    *(_OWORD *)&a1[v9[9]] = *(_OWORD *)&a2[v9[9]];
    *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
    *(_OWORD *)&a1[v9[11]] = *(_OWORD *)&a2[v9[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(a1, 0, 1, v9);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C157FEC(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for WorkoutPlanBannerLoadState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 48))(a1, a2, State);
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C158034(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for WorkoutPlanBannerLoadState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 56))(a1, a2, a2, State);
}

uint64_t sub_23C158074()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WorkoutPlanBannerLoadState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerState.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C15811C + 4 * asc_23C19D5D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C15813C + 4 * byte_23C19D5D5[v4]))();
}

_BYTE *sub_23C15811C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C15813C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C158144(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C15814C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C158154(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C15815C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerState.CodingKeys()
{
  return &type metadata for WorkoutPlanBannerState.CodingKeys;
}

unint64_t sub_23C15817C()
{
  unint64_t result;

  result = qword_256B30360;
  if (!qword_256B30360)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D754, &type metadata for WorkoutPlanBannerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30360);
  }
  return result;
}

unint64_t sub_23C1581C4()
{
  unint64_t result;

  result = qword_256B30368;
  if (!qword_256B30368)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D6C4, &type metadata for WorkoutPlanBannerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30368);
  }
  return result;
}

unint64_t sub_23C15820C()
{
  unint64_t result;

  result = qword_256B30370;
  if (!qword_256B30370)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D6EC, &type metadata for WorkoutPlanBannerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30370);
  }
  return result;
}

uint64_t sub_23C158254()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23C15827C + 4 * byte_23C19D7D0[*v0]))(1701602409, 0xE400000000000000);
}

uint64_t sub_23C15827C()
{
  return 0x676E696863746566;
}

uint64_t sub_23C158294()
{
  return 0x64656863746566;
}

uint64_t sub_23C1582AC()
{
  return 0x656E696C66666FLL;
}

uint64_t sub_23C1582C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C159A74(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C1582E8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23C1582F4()
{
  sub_23C159004();
  return sub_23C19C0F4();
}

uint64_t sub_23C15831C()
{
  sub_23C159004();
  return sub_23C19C100();
}

uint64_t sub_23C158344()
{
  return 0x7470697263736564;
}

uint64_t sub_23C158360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C158400()
{
  sub_23C15908C();
  return sub_23C19C0F4();
}

uint64_t sub_23C158428()
{
  sub_23C15908C();
  return sub_23C19C100();
}

uint64_t sub_23C158450()
{
  return 0;
}

uint64_t sub_23C15845C()
{
  sub_23C159114();
  return sub_23C19C0F4();
}

uint64_t sub_23C158484()
{
  sub_23C159114();
  return sub_23C19C100();
}

uint64_t sub_23C1584AC()
{
  sub_23C159158();
  return sub_23C19C0F4();
}

uint64_t sub_23C1584D4()
{
  sub_23C159158();
  return sub_23C19C100();
}

uint64_t sub_23C1584FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23C158528()
{
  sub_23C159048();
  return sub_23C19C0F4();
}

uint64_t sub_23C158550()
{
  sub_23C159048();
  return sub_23C19C100();
}

uint64_t OfflineLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30378);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30380);
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30388);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30390);
  v10 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30398);
  v36 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v1;
  v17 = v1[1];
  v25 = v1[2];
  v26 = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C159004();
  sub_23C19C0E8();
  switch(v17)
  {
    case 0:
      LOBYTE(v38) = 0;
      sub_23C159158();
      v19 = v37;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v19);
    case 1:
      LOBYTE(v38) = 1;
      sub_23C159114();
      v21 = v37;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v21);
    case 2:
      LOBYTE(v38) = 3;
      sub_23C159048();
      v18 = v30;
      v19 = v37;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v19);
    default:
      LOBYTE(v38) = 2;
      sub_23C15908C();
      v22 = v31;
      v23 = v37;
      sub_23C19C034();
      v38 = v26;
      v39 = v17;
      v40 = v25;
      sub_23C1590D0();
      v24 = v35;
      sub_23C19C07C();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v23);
  }
}

uint64_t OfflineLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;

  v26 = a2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B303D0);
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B303D8);
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v29 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B303E0);
  v28 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v27 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B303E8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B303F0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23C159004();
  v13 = v31;
  sub_23C19C0DC();
  if (!v13)
  {
    v19[0] = v7;
    v19[1] = v6;
    v31 = v9;
    v14 = sub_23C19C028();
    if (*(_QWORD *)(v14 + 16) == 1)
      __asm { BR              X10 }
    v15 = sub_23C19BF50();
    swift_allocError();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v17 = &type metadata for OfflineLoadState;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x24BEE26D0], v15);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_23C158E30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OfflineLoadState.init(from:)(a1, a2);
}

uint64_t sub_23C158E44(_QWORD *a1)
{
  return OfflineLoadState.encode(to:)(a1);
}

BOOL _s14FitnessLibrary16OfflineLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  if (!v3)
  {
    if (!v6)
    {
      sub_23C14D790(*a1, 0);
      v8 = v5;
      v9 = 0;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    if (v6 == 1)
    {
      sub_23C14D790(*a1, 1uLL);
      sub_23C14D790(v5, 1uLL);
      return v6;
    }
    goto LABEL_12;
  }
  if (v3 != 2)
  {
    if (v6 >= 3 && (v2 == v5 && v3 == v6 || (sub_23C19C088() & 1) != 0))
    {
      v11 = sub_23C18C298(v4, v7);
      sub_23C14D708(v5, v6);
      sub_23C14D708(v2, v3);
      sub_23C14D790(v2, v3);
      sub_23C14D790(v5, v6);
      return (v11 & 1) != 0;
    }
LABEL_12:
    sub_23C14D708(v5, v6);
    sub_23C14D708(v2, v3);
    sub_23C14D790(v2, v3);
    sub_23C14D790(v5, v6);
    return 0;
  }
  if (v6 != 2)
    goto LABEL_12;
  sub_23C14D790(*a1, 2uLL);
  v8 = v5;
  v9 = 2;
LABEL_8:
  sub_23C14D790(v8, v9);
  return 1;
}

unint64_t sub_23C159004()
{
  unint64_t result;

  result = qword_256B303A0;
  if (!qword_256B303A0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DCA4, &type metadata for OfflineLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B303A0);
  }
  return result;
}

unint64_t sub_23C159048()
{
  unint64_t result;

  result = qword_256B303A8;
  if (!qword_256B303A8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DC54, &type metadata for OfflineLoadState.OfflineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B303A8);
  }
  return result;
}

unint64_t sub_23C15908C()
{
  unint64_t result;

  result = qword_256B303B0;
  if (!qword_256B303B0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DC04, &type metadata for OfflineLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B303B0);
  }
  return result;
}

unint64_t sub_23C1590D0()
{
  unint64_t result;

  result = qword_256B303B8;
  if (!qword_256B303B8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineSectionDescriptor, &type metadata for OfflineSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_256B303B8);
  }
  return result;
}

unint64_t sub_23C159114()
{
  unint64_t result;

  result = qword_256B303C0;
  if (!qword_256B303C0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DBB4, &type metadata for OfflineLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B303C0);
  }
  return result;
}

unint64_t sub_23C159158()
{
  unint64_t result;

  result = qword_256B303C8;
  if (!qword_256B303C8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DB64, &type metadata for OfflineLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B303C8);
  }
  return result;
}

unint64_t sub_23C15919C()
{
  unint64_t result;

  result = qword_256B303F8;
  if (!qword_256B303F8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineSectionDescriptor, &type metadata for OfflineSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_256B303F8);
  }
  return result;
}

unint64_t destroy for OfflineLoadState(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14FitnessLibrary16OfflineLoadStateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for OfflineLoadState(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for OfflineLoadState(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineLoadState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OfflineLoadState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_23C1594A0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23C1594B8(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineLoadState()
{
  return &type metadata for OfflineLoadState;
}

uint64_t getEnumTagSinglePayload for OfflineLoadState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C1595C8 + 4 * byte_23C19D7DD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C1595FC + 4 * byte_23C19D7D8[v4]))();
}

uint64_t sub_23C1595FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C159604(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C15960CLL);
  return result;
}

uint64_t sub_23C159618(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C159620);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C159624(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C15962C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineLoadState.CodingKeys()
{
  return &type metadata for OfflineLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for OfflineLoadState.IdleCodingKeys()
{
  return &type metadata for OfflineLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for OfflineLoadState.FetchingCodingKeys()
{
  return &type metadata for OfflineLoadState.FetchingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for OfflineLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C1596A8 + 4 * byte_23C19D7E2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C1596C8 + 4 * byte_23C19D7E7[v4]))();
}

_BYTE *sub_23C1596A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C1596C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C1596D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C1596D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C1596E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C1596E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OfflineLoadState.FetchedCodingKeys()
{
  return &type metadata for OfflineLoadState.FetchedCodingKeys;
}

ValueMetadata *type metadata accessor for OfflineLoadState.OfflineCodingKeys()
{
  return &type metadata for OfflineLoadState.OfflineCodingKeys;
}

unint64_t sub_23C159718()
{
  unint64_t result;

  result = qword_256B30400;
  if (!qword_256B30400)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D9E4, &type metadata for OfflineLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30400);
  }
  return result;
}

unint64_t sub_23C159760()
{
  unint64_t result;

  result = qword_256B30408;
  if (!qword_256B30408)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DB3C, &type metadata for OfflineLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30408);
  }
  return result;
}

unint64_t sub_23C1597A8()
{
  unint64_t result;

  result = qword_256B30410;
  if (!qword_256B30410)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DA5C, &type metadata for OfflineLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30410);
  }
  return result;
}

unint64_t sub_23C1597F0()
{
  unint64_t result;

  result = qword_256B30418;
  if (!qword_256B30418)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DA84, &type metadata for OfflineLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30418);
  }
  return result;
}

unint64_t sub_23C159838()
{
  unint64_t result;

  result = qword_256B30420;
  if (!qword_256B30420)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DA0C, &type metadata for OfflineLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30420);
  }
  return result;
}

unint64_t sub_23C159880()
{
  unint64_t result;

  result = qword_256B30428;
  if (!qword_256B30428)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DA34, &type metadata for OfflineLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30428);
  }
  return result;
}

unint64_t sub_23C1598C8()
{
  unint64_t result;

  result = qword_256B30430;
  if (!qword_256B30430)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D954, &type metadata for OfflineLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30430);
  }
  return result;
}

unint64_t sub_23C159910()
{
  unint64_t result;

  result = qword_256B30438;
  if (!qword_256B30438)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D97C, &type metadata for OfflineLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30438);
  }
  return result;
}

unint64_t sub_23C159958()
{
  unint64_t result;

  result = qword_256B30440;
  if (!qword_256B30440)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D904, &type metadata for OfflineLoadState.OfflineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30440);
  }
  return result;
}

unint64_t sub_23C1599A0()
{
  unint64_t result;

  result = qword_256B30448;
  if (!qword_256B30448)
  {
    result = MEMORY[0x2426189D0](&unk_23C19D92C, &type metadata for OfflineLoadState.OfflineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30448);
  }
  return result;
}

unint64_t sub_23C1599E8()
{
  unint64_t result;

  result = qword_256B30450;
  if (!qword_256B30450)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DAAC, &type metadata for OfflineLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30450);
  }
  return result;
}

unint64_t sub_23C159A30()
{
  unint64_t result;

  result = qword_256B30458;
  if (!qword_256B30458)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DAD4, &type metadata for OfflineLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30458);
  }
  return result;
}

uint64_t sub_23C159A74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656E696C66666FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C159C20()
{
  _WORD *v0;
  uint64_t v1;

  if ((*v0 & 0xFF00) != 0x300)
  {
    v1 = *v0;
    sub_23C19C0B8();
    __asm { BR              X9 }
  }
  return sub_23C19C0B8();
}

uint64_t sub_23C159D68()
{
  __int16 *v0;
  __int16 v1;

  v1 = *v0;
  sub_23C19C0AC();
  if ((v1 & 0xFF00) != 0x300)
  {
    sub_23C19C0B8();
    __asm { BR              X9 }
  }
  sub_23C19C0B8();
  return sub_23C19C0D0();
}

uint64_t sub_23C159EC8()
{
  __int16 *v0;
  __int16 v1;

  v1 = *v0;
  sub_23C19C0AC();
  if ((v1 & 0xFF00) != 0x300)
  {
    sub_23C19C0B8();
    __asm { BR              X9 }
  }
  sub_23C19C0B8();
  return sub_23C19C0D0();
}

BOOL sub_23C15A01C(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2;
  int v3;
  _BOOL8 result;
  char v5;

  v2 = *a1;
  v3 = *a2;
  result = (v3 & 0xFF00) == 0x300 && (v2 & 0xFF00) == 768;
  if ((v2 & 0xFF00) != 0x300 && (v3 & 0xFF00) != 0x300)
  {
    sub_23C16BDD0(v2);
    return (v5 & 1) != 0 && (v3 ^ v2) < 0x100;
  }
  return result;
}

__n128 LibraryFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

void LibraryFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30460);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  __asm { BR              X11 }
}

void sub_23C15A154(char a1@<W8>)
{
  _BYTE *v1;

  *v1 = a1;
}

void sub_23C15A4E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v8 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t, unint64_t, _QWORD))sub_23C19C088)(0x736B63617473, 0xE600000000000000, 0x796C746E65636572, 0xED00006465646441, 0);
  ((void (*)(unint64_t))swift_bridgeObjectRelease)(0xE600000000000000);
  if ((v8 & 1) == 0)
  {
    v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B30468);
    v10 = v1 + v9[16];
    *(_QWORD *)(v7 - 96) = v1 + v9[20];
    v11 = (_QWORD *)(v1 + v9[24]);
    *(_WORD *)(v7 - 82) = 768;
    v12 = sub_23C15A7F0();
    v13 = ((uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))sub_23C19BF2C)(v7 - 82, &type metadata for LibraryFeature.TaskIdentifier, v12);
    ((void (*)(uint64_t))sub_23C19BE84)(v13);
    v14 = *MEMORY[0x24BE2B570];
    v15 = ((uint64_t (*)(_QWORD))sub_23C19BD88)(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v10, v14, v15);
    v16 = *MEMORY[0x24BE2B550];
    v17 = ((uint64_t (*)(_QWORD))sub_23C19BD7C)(0);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(*(_QWORD *)(v7 - 96), v16, v17);
    v18 = ((uint64_t (*)(void *, uint64_t, uint64_t))swift_allocObject)(&unk_250D07C68, 33, 7);
    *(_QWORD *)(v18 + 16) = v6;
    *(_QWORD *)(v18 + 24) = v2;
    *(_BYTE *)(v18 + 32) = v3;
    *v11 = &unk_256B30480;
    v11[1] = v18;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, *MEMORY[0x24BE2B438], v4);
    v19 = *v0;
    ((void (*)(uint64_t))swift_retain)(v2);
    if ((((uint64_t (*)(uint64_t))swift_isUniquelyReferenced_nonNull_native)(v19) & 1) == 0)
      v19 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, void *, void *))sub_23C15AFF8)(0, *(_QWORD *)(v19 + 16) + 1, 1, v19, &unk_256B30518, &unk_256B30460);
    v21 = *(_QWORD *)(v19 + 16);
    v20 = *(_QWORD *)(v19 + 24);
    if (v21 >= v20 >> 1)
      v19 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t, void *, void *))sub_23C15AFF8)(v20 > 1, v21 + 1, 1, v19, &unk_256B30518, &unk_256B30460);
    *(_QWORD *)(v19 + 16) = v21 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v19+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v21, v1, v4);
    *v0 = v19;
  }
  JUMPOUT(0x23C15A4C0);
}

void sub_23C15A4F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v8 = ((uint64_t (*)(uint64_t, unint64_t, uint64_t, unint64_t, _QWORD))sub_23C19C088)(0x5074756F6B726F77, 0xEC000000736E616CLL, 0x796C746E65636572, 0xED00006465646441, 0);
  ((void (*)(unint64_t))swift_bridgeObjectRelease)(0xEC000000736E616CLL);
  if ((v8 & 1) == 0)
  {
    v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B30468);
    v10 = v1 + v9[16];
    *(_QWORD *)(v7 - 96) = v1 + v9[20];
    v11 = (_QWORD *)(v1 + v9[24]);
    *(_WORD *)(v7 - 82) = 768;
    v12 = sub_23C15A7F0();
    v13 = ((uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))sub_23C19BF2C)(v7 - 82, &type metadata for LibraryFeature.TaskIdentifier, v12);
    ((void (*)(uint64_t))sub_23C19BE84)(v13);
    v14 = *MEMORY[0x24BE2B570];
    v15 = ((uint64_t (*)(_QWORD))sub_23C19BD88)(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v10, v14, v15);
    v16 = *MEMORY[0x24BE2B550];
    v17 = ((uint64_t (*)(_QWORD))sub_23C19BD7C)(0);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(*(_QWORD *)(v7 - 96), v16, v17);
    v18 = ((uint64_t (*)(void *, uint64_t, uint64_t))swift_allocObject)(&unk_250D07C68, 33, 7);
    *(_QWORD *)(v18 + 16) = v6;
    *(_QWORD *)(v18 + 24) = v2;
    *(_BYTE *)(v18 + 32) = v3;
    *v11 = &unk_256B30480;
    v11[1] = v18;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, *MEMORY[0x24BE2B438], v4);
    v19 = *v0;
    ((void (*)(uint64_t))swift_retain)(v2);
    if ((((uint64_t (*)(uint64_t))swift_isUniquelyReferenced_nonNull_native)(v19) & 1) == 0)
      v19 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, void *, void *))sub_23C15AFF8)(0, *(_QWORD *)(v19 + 16) + 1, 1, v19, &unk_256B30518, &unk_256B30460);
    v21 = *(_QWORD *)(v19 + 16);
    v20 = *(_QWORD *)(v19 + 24);
    if (v21 >= v20 >> 1)
      v19 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t, void *, void *))sub_23C15AFF8)(v20 > 1, v21 + 1, 1, v19, &unk_256B30518, &unk_256B30460);
    *(_QWORD *)(v19 + 16) = v21 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v19+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v21, v1, v4);
    *v0 = v19;
  }
  JUMPOUT(0x23C15A4C0);
}

void sub_23C15A514()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v9 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, _QWORD))sub_23C19C088)(0x736D6172676F7270, v2, 0x796C746E65636572, 0xED00006465646441, 0);
  ((void (*)(uint64_t))swift_bridgeObjectRelease)(v2);
  if ((v9 & 1) == 0)
  {
    v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B30468);
    v11 = v1 + v10[16];
    *(_QWORD *)(v8 - 96) = v1 + v10[20];
    v12 = (_QWORD *)(v1 + v10[24]);
    *(_WORD *)(v8 - 82) = 768;
    v13 = sub_23C15A7F0();
    v14 = ((uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))sub_23C19BF2C)(v8 - 82, &type metadata for LibraryFeature.TaskIdentifier, v13);
    ((void (*)(uint64_t))sub_23C19BE84)(v14);
    v15 = *MEMORY[0x24BE2B570];
    v16 = ((uint64_t (*)(_QWORD))sub_23C19BD88)(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v11, v15, v16);
    v17 = *MEMORY[0x24BE2B550];
    v18 = ((uint64_t (*)(_QWORD))sub_23C19BD7C)(0);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(*(_QWORD *)(v8 - 96), v17, v18);
    v19 = ((uint64_t (*)(void *, uint64_t, uint64_t))swift_allocObject)(&unk_250D07C68, 33, 7);
    *(_QWORD *)(v19 + 16) = v7;
    *(_QWORD *)(v19 + 24) = v3;
    *(_BYTE *)(v19 + 32) = v4;
    *v12 = &unk_256B30480;
    v12[1] = v19;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, *MEMORY[0x24BE2B438], v5);
    v20 = *v0;
    ((void (*)(uint64_t))swift_retain)(v3);
    if ((((uint64_t (*)(uint64_t))swift_isUniquelyReferenced_nonNull_native)(v20) & 1) == 0)
      v20 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, void *, void *))sub_23C15AFF8)(0, *(_QWORD *)(v20 + 16) + 1, 1, v20, &unk_256B30518, &unk_256B30460);
    v22 = *(_QWORD *)(v20 + 16);
    v21 = *(_QWORD *)(v20 + 24);
    if (v22 >= v21 >> 1)
      v20 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t, void *, void *))sub_23C15AFF8)(v21 > 1, v22 + 1, 1, v20, &unk_256B30518, &unk_256B30460);
    *(_QWORD *)(v20 + 16) = v22 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v20+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v22, v1, v5);
    *v0 = v20;
  }
  JUMPOUT(0x23C15A4C0);
}

void sub_23C15A528()
{
  JUMPOUT(0x23C15A540);
}

unint64_t sub_23C15A7F0()
{
  unint64_t result;

  result = qword_256B30470;
  if (!qword_256B30470)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DE0C, &type metadata for LibraryFeature.TaskIdentifier);
    atomic_store(result, &qword_256B30470);
  }
  return result;
}

uint64_t sub_23C15A834()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 16) = sub_23C19BE78();
  *(_QWORD *)(v0 + 24) = sub_23C19BE6C();
  *(_WORD *)(v0 + 40) = 6;
  *(_BYTE *)(v0 + 42) = 0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30510);
  *v1 = v0;
  v1[1] = sub_23C15A8CC;
  return sub_23C19BD70();
}

uint64_t sub_23C15A8CC()
{
  swift_task_dealloc();
  sub_23C19BE54();
  return swift_task_switch();
}

uint64_t sub_23C15A93C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;
  int *v9;

  v4[2] = sub_23C19BE78();
  v4[3] = sub_23C19BE6C();
  v9 = (int *)((char *)a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  v4[4] = v7;
  *v7 = v4;
  v7[1] = sub_23C15A9C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v9)(a4, 0);
}

uint64_t sub_23C15A9C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_23C19BE54();
  return swift_task_switch();
}

uint64_t sub_23C15AA50()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C15AA84()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C15AAB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C15AADC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(int **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(unsigned __int8 *)(v1 + 32);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23C15AB44;
  return sub_23C15A93C(a1, v4, v5, v6);
}

uint64_t sub_23C15AB44()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_23C15AB98()
{
  unint64_t result;

  result = qword_256B30498;
  if (!qword_256B30498)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryAction, &type metadata for LibraryAction);
    atomic_store(result, (unint64_t *)&qword_256B30498);
  }
  return result;
}

unint64_t sub_23C15ABE0()
{
  unint64_t result;

  result = qword_256B304A0;
  if (!qword_256B304A0)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryAction, &type metadata for LibraryAction);
    atomic_store(result, (unint64_t *)&qword_256B304A0);
  }
  return result;
}

unint64_t sub_23C15AC28()
{
  unint64_t result;

  result = qword_256B304A8;
  if (!qword_256B304A8)
  {
    result = MEMORY[0x2426189D0](MEMORY[0x24BE2B430], MEMORY[0x24BE2B428]);
    atomic_store(result, (unint64_t *)&qword_256B304A8);
  }
  return result;
}

unint64_t sub_23C15AC70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B304B0;
  if (!qword_256B304B0)
  {
    v1 = type metadata accessor for LibraryState();
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryState, v1);
    atomic_store(result, (unint64_t *)&qword_256B304B0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for LibraryEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for LibraryEnvironment()
{
  return swift_release();
}

_QWORD *assignWithCopy for LibraryEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LibraryEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryFeature()
{
  return &type metadata for LibraryFeature;
}

uint64_t getEnumTagSinglePayload for LibraryFeature.TaskIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *(unsigned __int8 *)(a1 + 1);
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 65283;
    if (a2 + 65283 <= 0xFFFEFFFF)
      v3 = 2;
    else
      v3 = 4;
    if (v2 < 0xFF0000)
      v3 = 1;
    if (v2 >= 0x10000)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23C15AE38 + 4 * byte_23C19DD48[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for LibraryFeature.TaskIdentifier(_WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 65283;
  if (a3 + 65283 <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C15AEE4 + 4 * byte_23C19DD52[v5]))();
  *a1 = a2 - 253;
  return ((uint64_t (*)(void))((char *)sub_23C15AF18 + 4 * byte_23C19DD4D[v5]))();
}

uint64_t sub_23C15AF18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23C15AF20(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23C15AF28);
  return result;
}

uint64_t sub_23C15AF34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23C15AF3CLL);
  *(_BYTE *)(result + 1) = a2 + 3;
  return result;
}

uint64_t sub_23C15AF40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23C15AF48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23C15AF54(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 1);
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

uint64_t sub_23C15AF68(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(_WORD *)result = a2 - 254;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 1) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryFeature.TaskIdentifier()
{
  return &type metadata for LibraryFeature.TaskIdentifier;
}

unint64_t sub_23C15AFA0()
{
  unint64_t result;

  result = qword_256B304B8;
  if (!qword_256B304B8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DDE4, &type metadata for LibraryFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B304B8);
  }
  return result;
}

uint64_t sub_23C15AFE4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C15AFF8(a1, a2, a3, a4, &qword_256B30500, &qword_256B30508);
}

uint64_t sub_23C15AFF8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23C19BF74();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23C15B254(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_23C15B204(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C15AFF8(a1, a2, a3, a4, &qword_256B304F0, &qword_256B304F8);
}

uint64_t sub_23C15B218(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C15AFF8(a1, a2, a3, a4, &qword_256B304E0, &qword_256B304E8);
}

uint64_t sub_23C15B22C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C15AFF8(a1, a2, a3, a4, &qword_256B304D0, &qword_256B304D8);
}

uint64_t sub_23C15B240(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C15AFF8(a1, a2, a3, a4, &qword_256B304C0, &qword_256B304C8);
}

uint64_t sub_23C15B254(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23C19BFA4();
  __break(1u);
  return result;
}

uint64_t sub_23C15B378()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23C15B3B4 + 4 * byte_23C19DE50[*v0]))(0x4164694477656976, 0xED00007261657070);
}

unint64_t sub_23C15B3B4()
{
  return 0xD000000000000016;
}

uint64_t sub_23C15B3D0()
{
  return 0x646564616F6CLL;
}

uint64_t sub_23C15B3E4()
{
  return 0x6C66664F776F6873;
}

uint64_t sub_23C15B408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C15C53C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C15B42C()
{
  sub_23C15B970();
  return sub_23C19C0F4();
}

uint64_t sub_23C15B454()
{
  sub_23C15B970();
  return sub_23C19C100();
}

uint64_t sub_23C15B47C()
{
  sub_23C15BA3C();
  return sub_23C19C0F4();
}

uint64_t sub_23C15B4A4()
{
  sub_23C15BA3C();
  return sub_23C19C100();
}

unint64_t sub_23C15B4CC()
{
  return 0xD000000000000011;
}

uint64_t sub_23C15B4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C15C72C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C15B510()
{
  sub_23C15B9F8();
  return sub_23C19C0F4();
}

uint64_t sub_23C15B538()
{
  sub_23C15B9F8();
  return sub_23C19C100();
}

uint64_t sub_23C15B560()
{
  sub_23C15B9B4();
  return sub_23C19C0F4();
}

uint64_t sub_23C15B588()
{
  sub_23C15B9B4();
  return sub_23C19C100();
}

uint64_t sub_23C15B5B0()
{
  sub_23C15BA80();
  return sub_23C19C0F4();
}

uint64_t sub_23C15B5D8()
{
  sub_23C15BA80();
  return sub_23C19C100();
}

uint64_t OfflineAction.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30520);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30528);
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30530);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30538);
  v10 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30540);
  v36 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v1;
  v17 = v1[1];
  v25 = v1[2];
  v26 = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C15B970();
  sub_23C19C0E8();
  switch(v17)
  {
    case 0:
      LOBYTE(v38) = 0;
      sub_23C15BA80();
      v19 = v37;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v19);
    case 1:
      LOBYTE(v38) = 1;
      sub_23C15BA3C();
      v21 = v37;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v21);
    case 2:
      LOBYTE(v38) = 3;
      sub_23C15B9B4();
      v18 = v30;
      v19 = v37;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v19);
    default:
      LOBYTE(v38) = 2;
      sub_23C15B9F8();
      v22 = v31;
      v23 = v37;
      sub_23C19C034();
      v38 = v26;
      v39 = v17;
      v40 = v25;
      sub_23C1590D0();
      v24 = v35;
      sub_23C19C07C();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v23);
  }
}

unint64_t sub_23C15B970()
{
  unint64_t result;

  result = qword_256B30548;
  if (!qword_256B30548)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E32C, &type metadata for OfflineAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30548);
  }
  return result;
}

unint64_t sub_23C15B9B4()
{
  unint64_t result;

  result = qword_256B30550;
  if (!qword_256B30550)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E2DC, &type metadata for OfflineAction.ShowOfflineModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30550);
  }
  return result;
}

unint64_t sub_23C15B9F8()
{
  unint64_t result;

  result = qword_256B30558;
  if (!qword_256B30558)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E28C, &type metadata for OfflineAction.LoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30558);
  }
  return result;
}

unint64_t sub_23C15BA3C()
{
  unint64_t result;

  result = qword_256B30560;
  if (!qword_256B30560)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E23C, &type metadata for OfflineAction.FetchSectionDescriptorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30560);
  }
  return result;
}

unint64_t sub_23C15BA80()
{
  unint64_t result;

  result = qword_256B30568;
  if (!qword_256B30568)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E1EC, &type metadata for OfflineAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30568);
  }
  return result;
}

uint64_t OfflineAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;

  v26 = a2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30570);
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30578);
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v29 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30580);
  v28 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v27 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30588);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30590);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23C15B970();
  v13 = v31;
  sub_23C19C0DC();
  if (!v13)
  {
    v19[0] = v7;
    v19[1] = v6;
    v31 = v9;
    v14 = sub_23C19C028();
    if (*(_QWORD *)(v14 + 16) == 1)
      __asm { BR              X10 }
    v15 = sub_23C19BF50();
    swift_allocError();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v17 = &type metadata for OfflineAction;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x24BEE26D0], v15);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_23C15C00C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OfflineAction.init(from:)(a1, a2);
}

uint64_t sub_23C15C020(_QWORD *a1)
{
  return OfflineAction.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for OfflineAction()
{
  return &type metadata for OfflineAction;
}

uint64_t storeEnumTagSinglePayload for OfflineAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C15C090 + 4 * byte_23C19DE5D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C15C0C4 + 4 * byte_23C19DE58[v4]))();
}

uint64_t sub_23C15C0C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C15C0CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C15C0D4);
  return result;
}

uint64_t sub_23C15C0E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C15C0E8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C15C0EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C15C0F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineAction.CodingKeys()
{
  return &type metadata for OfflineAction.CodingKeys;
}

ValueMetadata *type metadata accessor for OfflineAction.ViewDidAppearCodingKeys()
{
  return &type metadata for OfflineAction.ViewDidAppearCodingKeys;
}

ValueMetadata *type metadata accessor for OfflineAction.FetchSectionDescriptorCodingKeys()
{
  return &type metadata for OfflineAction.FetchSectionDescriptorCodingKeys;
}

uint64_t storeEnumTagSinglePayload for OfflineAction.LoadedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C15C170 + 4 * byte_23C19DE62[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C15C190 + 4 * byte_23C19DE67[v4]))();
}

_BYTE *sub_23C15C170(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C15C190(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C15C198(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C15C1A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C15C1A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C15C1B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OfflineAction.LoadedCodingKeys()
{
  return &type metadata for OfflineAction.LoadedCodingKeys;
}

ValueMetadata *type metadata accessor for OfflineAction.ShowOfflineModeCodingKeys()
{
  return &type metadata for OfflineAction.ShowOfflineModeCodingKeys;
}

unint64_t sub_23C15C1E0()
{
  unint64_t result;

  result = qword_256B30598;
  if (!qword_256B30598)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E06C, &type metadata for OfflineAction.LoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30598);
  }
  return result;
}

unint64_t sub_23C15C228()
{
  unint64_t result;

  result = qword_256B305A0;
  if (!qword_256B305A0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E1C4, &type metadata for OfflineAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305A0);
  }
  return result;
}

unint64_t sub_23C15C270()
{
  unint64_t result;

  result = qword_256B305A8;
  if (!qword_256B305A8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E0E4, &type metadata for OfflineAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305A8);
  }
  return result;
}

unint64_t sub_23C15C2B8()
{
  unint64_t result;

  result = qword_256B305B0;
  if (!qword_256B305B0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E10C, &type metadata for OfflineAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305B0);
  }
  return result;
}

unint64_t sub_23C15C300()
{
  unint64_t result;

  result = qword_256B305B8;
  if (!qword_256B305B8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E094, &type metadata for OfflineAction.FetchSectionDescriptorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305B8);
  }
  return result;
}

unint64_t sub_23C15C348()
{
  unint64_t result;

  result = qword_256B305C0;
  if (!qword_256B305C0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E0BC, &type metadata for OfflineAction.FetchSectionDescriptorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305C0);
  }
  return result;
}

unint64_t sub_23C15C390()
{
  unint64_t result;

  result = qword_256B305C8;
  if (!qword_256B305C8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DFDC, &type metadata for OfflineAction.LoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305C8);
  }
  return result;
}

unint64_t sub_23C15C3D8()
{
  unint64_t result;

  result = qword_256B305D0;
  if (!qword_256B305D0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E004, &type metadata for OfflineAction.LoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305D0);
  }
  return result;
}

unint64_t sub_23C15C420()
{
  unint64_t result;

  result = qword_256B305D8;
  if (!qword_256B305D8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DF8C, &type metadata for OfflineAction.ShowOfflineModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305D8);
  }
  return result;
}

unint64_t sub_23C15C468()
{
  unint64_t result;

  result = qword_256B305E0;
  if (!qword_256B305E0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19DFB4, &type metadata for OfflineAction.ShowOfflineModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305E0);
  }
  return result;
}

unint64_t sub_23C15C4B0()
{
  unint64_t result;

  result = qword_256B305E8;
  if (!qword_256B305E8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E134, &type metadata for OfflineAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305E8);
  }
  return result;
}

unint64_t sub_23C15C4F8()
{
  unint64_t result;

  result = qword_256B305F0;
  if (!qword_256B305F0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E15C, &type metadata for OfflineAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B305F0);
  }
  return result;
}

uint64_t sub_23C15C53C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4164694477656976 && a2 == 0xED00007261657070;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023C1A4300 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646564616F6CLL && a2 == 0xE600000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C66664F776F6873 && a2 == 0xEF65646F4D656E69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C15C72C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C1A4320)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23C19C088();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *static ContentRating.allCases.getter()
{
  return &unk_250D06920;
}

uint64_t ContentRating.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6E61656C63;
  if (a1 == 1)
    return 0x746963696C707865;
  return 0x6669636570736E75;
}

uint64_t sub_23C15C81C(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE800000000000000;
  v4 = 0x746963696C707865;
  if (v2 != 1)
  {
    v4 = 0x6669636570736E75;
    v3 = 0xEB00000000646569;
  }
  if (*a1)
    v5 = v4;
  else
    v5 = 0x6E61656C63;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE500000000000000;
  v7 = 0xE800000000000000;
  v8 = 0x746963696C707865;
  if (*a2 != 1)
  {
    v8 = 0x6669636570736E75;
    v7 = 0xEB00000000646569;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 0x6E61656C63;
  if (*a2)
    v10 = v7;
  else
    v10 = 0xE500000000000000;
  if (v5 == v9 && v6 == v10)
    v11 = 1;
  else
    v11 = sub_23C19C088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_23C15C92C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s14FitnessLibrary13ContentRatingO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_23C15C958(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x746963696C707865;
  if (v2 != 1)
  {
    v5 = 0x6669636570736E75;
    v4 = 0xEB00000000646569;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E61656C63;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_23C15C9BC(_QWORD *a1@<X8>)
{
  *a1 = &unk_250D06948;
}

uint64_t sub_23C15C9CC()
{
  sub_23C15CE74();
  return sub_23C19BE3C();
}

uint64_t sub_23C15CA28()
{
  sub_23C15CE74();
  return sub_23C19BE30();
}

uint64_t sub_23C15CA74()
{
  sub_23C19C0AC();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  return sub_23C19C0D0();
}

uint64_t sub_23C15CB18()
{
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C15CB98()
{
  sub_23C19C0AC();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  return sub_23C19C0D0();
}

uint64_t _s14FitnessLibrary13ContentRatingO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_23C19BFB0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_23C15CC84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B305F8;
  if (!qword_256B305F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30600);
    result = MEMORY[0x2426189D0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256B305F8);
  }
  return result;
}

unint64_t sub_23C15CCD4()
{
  unint64_t result;

  result = qword_256B30608;
  if (!qword_256B30608)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for ContentRating, &type metadata for ContentRating);
    atomic_store(result, (unint64_t *)&qword_256B30608);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContentRating(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentRating(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C15CDF4 + 4 * byte_23C19E381[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C15CE28 + 4 * byte_23C19E37C[v4]))();
}

uint64_t sub_23C15CE28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C15CE30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C15CE38);
  return result;
}

uint64_t sub_23C15CE44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C15CE4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C15CE50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C15CE58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentRating()
{
  return &type metadata for ContentRating;
}

unint64_t sub_23C15CE74()
{
  unint64_t result;

  result = qword_256B30610;
  if (!qword_256B30610)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for ContentRating, &type metadata for ContentRating);
    atomic_store(result, (unint64_t *)&qword_256B30610);
  }
  return result;
}

uint64_t WorkoutPlanDetail.artworkBackgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C15CF54(v1, a1, &qword_256B302C0);
}

uint64_t WorkoutPlanDetail.artworkTemplateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WorkoutPlanDetail();
  return sub_23C15CF54(v1 + *(int *)(v3 + 20), a1, &qword_256B302C8);
}

uint64_t type metadata accessor for WorkoutPlanDetail()
{
  uint64_t result;

  result = qword_256B306D8;
  if (!qword_256B306D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23C15CF54(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t WorkoutPlanDetail.caption.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutPlanDetail.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 28);
  v4 = sub_23C19B500();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WorkoutPlanDetail.isScheduledToday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 32));
}

uint64_t WorkoutPlanDetail.nextWorkoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutPlanDetail.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutPlanDetail.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23C15D0F0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23C19B500();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for WorkoutPlanDetail();
  __swift_allocate_value_buffer((uint64_t)v7, qword_256B30618);
  v8 = __swift_project_value_buffer((uint64_t)v7, (uint64_t)qword_256B30618);
  sub_23C19B4F4();
  sub_23C19B530();
  v9 = sub_23C19B53C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 0, 1, v9);
  v10 = v8 + v7[5];
  v11 = sub_23C19B4D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8 + v7[7], v6, v3);
  result = sub_23C15D3EC((uint64_t)v2, v8, &qword_256B302C0);
  v13 = (_QWORD *)(v8 + v7[11]);
  *v13 = 0xD000000000000011;
  v13[1] = 0x800000023C1A43C0;
  v14 = (_QWORD *)(v8 + v7[10]);
  *v14 = 0xD000000000000014;
  v14[1] = 0x800000023C1A43E0;
  v15 = (_QWORD *)(v8 + v7[6]);
  *v15 = 0xD000000000000013;
  v15[1] = 0x800000023C1A4400;
  v16 = (_QWORD *)(v8 + v7[9]);
  *v16 = 0;
  v16[1] = 0xE000000000000000;
  *(_BYTE *)(v8 + v7[8]) = 0;
  return result;
}

uint64_t WorkoutPlanDetail.init(identifier:artworkBackgroundColor:artworkTemplateURL:title:subtitle:caption:nextWorkoutIdentifier:isScheduledToday:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;

  v19 = (int *)type metadata accessor for WorkoutPlanDetail();
  v20 = a9 + v19[7];
  v21 = sub_23C19B500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a1, v21);
  sub_23C15D3EC(a2, a9, &qword_256B302C0);
  result = sub_23C15D3EC(a3, a9 + v19[5], &qword_256B302C8);
  v23 = (_QWORD *)(a9 + v19[11]);
  *v23 = a4;
  v23[1] = a5;
  v24 = (_QWORD *)(a9 + v19[10]);
  *v24 = a6;
  v24[1] = a7;
  v25 = (_QWORD *)(a9 + v19[6]);
  *v25 = a8;
  v25[1] = a10;
  v26 = (_QWORD *)(a9 + v19[9]);
  *v26 = a11;
  v26[1] = a12;
  *(_BYTE *)(a9 + v19[8]) = a13;
  return result;
}

uint64_t sub_23C15D3EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t static WorkoutPlanDetail.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256B2FD10 != -1)
    swift_once();
  v2 = type metadata accessor for WorkoutPlanDetail();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256B30618);
  return sub_23C15D48C(v3, a1);
}

uint64_t sub_23C15D48C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutPlanDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C15D4D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C15D50C
                                                                     + 4 * asc_23C19E4D0[a1]))(0xD000000000000016, 0x800000023C1A4340);
}

uint64_t sub_23C15D50C()
{
  uint64_t v0;

  return v0 + 2;
}

uint64_t sub_23C15D584()
{
  return 0x656C746974627573;
}

uint64_t sub_23C15D59C()
{
  return 0x656C746974;
}

uint64_t sub_23C15D5B0()
{
  unsigned __int8 *v0;

  return sub_23C15D4D0(*v0);
}

uint64_t sub_23C15D5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C15FB80(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C15D5DC(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_23C15D5E8()
{
  sub_23C15D90C();
  return sub_23C19C0F4();
}

uint64_t sub_23C15D610()
{
  sub_23C15D90C();
  return sub_23C19C100();
}

uint64_t WorkoutPlanDetail.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30630);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C15D90C();
  sub_23C19C0E8();
  v8[15] = 0;
  sub_23C19B53C();
  sub_23C153930(&qword_256B30640, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB0]);
  sub_23C19C04C();
  if (!v1)
  {
    type metadata accessor for WorkoutPlanDetail();
    v8[14] = 1;
    sub_23C19B4D0();
    sub_23C153930(&qword_256B30648, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C19C04C();
    v8[13] = 2;
    sub_23C19C058();
    v8[12] = 3;
    sub_23C19B500();
    sub_23C153930(&qword_256B30090, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23C19C07C();
    v8[11] = 4;
    sub_23C19C064();
    v8[10] = 5;
    sub_23C19C058();
    v8[9] = 6;
    sub_23C19C058();
    v8[8] = 7;
    sub_23C19C058();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C15D90C()
{
  unint64_t result;

  result = qword_256B30638;
  if (!qword_256B30638)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E6EC, &type metadata for WorkoutPlanDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30638);
  }
  return result;
}

uint64_t WorkoutPlanDetail.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;

  v38 = a2;
  v3 = sub_23C19B500();
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30650);
  v12 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v42 = type metadata accessor for WorkoutPlanDetail();
  MEMORY[0x24BDAC7A8](v42);
  v43 = a1;
  v44 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C15D90C();
  v14 = v45;
  sub_23C19C0DC();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v36 = v5;
  v37 = v8;
  v45 = v12;
  v15 = v40;
  sub_23C19B53C();
  v53 = 0;
  sub_23C153930(&qword_256B30658, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC8]);
  sub_23C19BFEC();
  v16 = v44;
  sub_23C15D3EC((uint64_t)v11, v44, &qword_256B302C0);
  sub_23C19B4D0();
  v52 = 1;
  sub_23C153930(&qword_256B30660, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v17 = (uint64_t)v37;
  sub_23C19BFEC();
  v18 = (int *)v42;
  sub_23C15D3EC(v17, v16 + *(int *)(v42 + 20), &qword_256B302C8);
  v51 = 2;
  v19 = sub_23C19BFF8();
  v20 = (uint64_t *)(v16 + v18[6]);
  *v20 = v19;
  v20[1] = v21;
  v50 = 3;
  sub_23C153930(&qword_256B300F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v22 = v36;
  sub_23C19C01C();
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v16 + v18[7], v22, v15);
  v49 = 4;
  v23 = sub_23C19C004();
  v24 = (uint64_t)v43;
  *(_BYTE *)(v16 + v18[8]) = v23 & 1;
  v48 = 5;
  v25 = sub_23C19BFF8();
  v26 = (uint64_t *)(v16 + v18[9]);
  *v26 = v25;
  v26[1] = v27;
  v47 = 6;
  v28 = sub_23C19BFF8();
  v29 = (uint64_t *)(v16 + v18[10]);
  *v29 = v28;
  v29[1] = v30;
  v46 = 7;
  v31 = sub_23C19BFF8();
  v33 = v32;
  (*(void (**)(_QWORD, uint64_t))(v45 + 8))(0, v41);
  v34 = (uint64_t *)(v16 + *(int *)(v42 + 44));
  *v34 = v31;
  v34[1] = v33;
  sub_23C15D48C(v16, v38);
  __swift_destroy_boxed_opaque_existential_1(v24);
  return sub_23C1567DC(v16);
}

uint64_t sub_23C15DF40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutPlanDetail.init(from:)(a1, a2);
}

uint64_t sub_23C15DF54(_QWORD *a1)
{
  return WorkoutPlanDetail.encode(to:)(a1);
}

uint64_t WorkoutPlanDetail.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  char *v19;

  v1 = v0;
  v2 = sub_23C19B4D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23C19B53C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C15CF54(v1, (uint64_t)v14, &qword_256B302C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_23C19C0C4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_23C19C0C4();
    sub_23C153930(&qword_256B30668, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C19BDAC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v15 = type metadata accessor for WorkoutPlanDetail();
  sub_23C15CF54(v1 + *(int *)(v15 + 20), (uint64_t)v7, &qword_256B302C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1)
  {
    sub_23C19C0C4();
  }
  else
  {
    v16 = v19;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v7, v2);
    sub_23C19C0C4();
    sub_23C153930(&qword_256B30670, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C19BDAC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
  }
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  sub_23C19B500();
  sub_23C153930(&qword_256B30100, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23C19BDAC();
  sub_23C19C0C4();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

uint64_t WorkoutPlanDetail.hashValue.getter()
{
  sub_23C19C0AC();
  WorkoutPlanDetail.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C15E328()
{
  sub_23C19C0AC();
  WorkoutPlanDetail.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C15E368()
{
  sub_23C19C0AC();
  WorkoutPlanDetail.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t _s14FitnessLibrary17WorkoutPlanDetailV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v76 = sub_23C19B4D0();
  v74 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v70 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30750);
  MEMORY[0x24BDAC7A8](v73);
  v75 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v71 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v80 = (uint64_t)&v69 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v79 = (uint64_t)&v69 - v11;
  v12 = sub_23C19B53C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v72 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30758);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v69 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v69 - v25;
  v77 = a1;
  sub_23C15CF54(a1, (uint64_t)&v69 - v25, &qword_256B302C0);
  v78 = a2;
  sub_23C15CF54(a2, (uint64_t)v24, &qword_256B302C0);
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_23C15CF54((uint64_t)v26, (uint64_t)v17, &qword_256B302C0);
  sub_23C15CF54((uint64_t)v24, v27, &qword_256B302C0);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v28((uint64_t)v17, 1, v12) == 1)
  {
    sub_23C15FEA8((uint64_t)v24, &qword_256B302C0);
    sub_23C15FEA8((uint64_t)v26, &qword_256B302C0);
    if (v28(v27, 1, v12) == 1)
    {
      sub_23C15FEA8((uint64_t)v17, &qword_256B302C0);
      goto LABEL_8;
    }
LABEL_6:
    v29 = &qword_256B30758;
    v30 = (uint64_t)v17;
LABEL_14:
    sub_23C15FEA8(v30, v29);
    goto LABEL_15;
  }
  sub_23C15CF54((uint64_t)v17, (uint64_t)v21, &qword_256B302C0);
  if (v28(v27, 1, v12) == 1)
  {
    sub_23C15FEA8((uint64_t)v24, &qword_256B302C0);
    sub_23C15FEA8((uint64_t)v26, &qword_256B302C0);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
    goto LABEL_6;
  }
  v31 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v72, v27, v12);
  sub_23C153930(qword_256B30768, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC0]);
  v32 = sub_23C19BDB8();
  v33 = *(void (**)(char *, uint64_t))(v13 + 8);
  v33(v31, v12);
  sub_23C15FEA8((uint64_t)v24, &qword_256B302C0);
  sub_23C15FEA8((uint64_t)v26, &qword_256B302C0);
  v33(v21, v12);
  sub_23C15FEA8((uint64_t)v17, &qword_256B302C0);
  if ((v32 & 1) == 0)
    goto LABEL_15;
LABEL_8:
  v34 = (int *)type metadata accessor for WorkoutPlanDetail();
  v35 = v77;
  v36 = v79;
  sub_23C15CF54(v77 + v34[5], v79, &qword_256B302C8);
  v37 = v78;
  v38 = v80;
  sub_23C15CF54(v78 + v34[5], v80, &qword_256B302C8);
  v39 = v75;
  v40 = v75 + *(int *)(v73 + 48);
  sub_23C15CF54(v36, v75, &qword_256B302C8);
  sub_23C15CF54(v38, v40, &qword_256B302C8);
  v41 = v74;
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  v43 = v76;
  if (v42(v39, 1, v76) == 1)
  {
    sub_23C15FEA8(v38, &qword_256B302C8);
    sub_23C15FEA8(v36, &qword_256B302C8);
    if (v42(v40, 1, v43) == 1)
    {
      sub_23C15FEA8(v39, &qword_256B302C8);
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  v44 = v71;
  sub_23C15CF54(v39, v71, &qword_256B302C8);
  if (v42(v40, 1, v43) == 1)
  {
    sub_23C15FEA8(v80, &qword_256B302C8);
    sub_23C15FEA8(v36, &qword_256B302C8);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v43);
LABEL_13:
    v29 = &qword_256B30750;
    v30 = v39;
    goto LABEL_14;
  }
  v47 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v70, v40, v43);
  sub_23C153930(&qword_256B30760, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v48 = sub_23C19BDB8();
  v49 = *(void (**)(char *, uint64_t))(v41 + 8);
  v49(v47, v43);
  sub_23C15FEA8(v80, &qword_256B302C8);
  sub_23C15FEA8(v79, &qword_256B302C8);
  v49((char *)v44, v43);
  sub_23C15FEA8(v39, &qword_256B302C8);
  if ((v48 & 1) == 0)
    goto LABEL_15;
LABEL_18:
  v50 = v34[6];
  v51 = *(_QWORD *)(v35 + v50);
  v52 = *(_QWORD *)(v35 + v50 + 8);
  v53 = (_QWORD *)(v37 + v50);
  if (v51 != *v53 || v52 != v53[1])
  {
    v54 = sub_23C19C088();
    v45 = 0;
    if ((v54 & 1) == 0)
      return v45 & 1;
  }
  if ((sub_23C19B4E8() & 1) == 0 || *(unsigned __int8 *)(v35 + v34[8]) != *(unsigned __int8 *)(v37 + v34[8]))
  {
LABEL_15:
    v45 = 0;
    return v45 & 1;
  }
  v55 = v34[9];
  v56 = *(_QWORD *)(v35 + v55);
  v57 = *(_QWORD *)(v35 + v55 + 8);
  v58 = (_QWORD *)(v37 + v55);
  if (v56 == *v58 && v57 == v58[1] || (v59 = sub_23C19C088(), v45 = 0, (v59 & 1) != 0))
  {
    v60 = v34[10];
    v61 = *(_QWORD *)(v35 + v60);
    v62 = *(_QWORD *)(v35 + v60 + 8);
    v63 = (_QWORD *)(v37 + v60);
    if (v61 == *v63 && v62 == v63[1] || (v64 = sub_23C19C088(), v45 = 0, (v64 & 1) != 0))
    {
      v65 = v34[11];
      v66 = *(_QWORD *)(v35 + v65);
      v67 = *(_QWORD *)(v35 + v65 + 8);
      v68 = (_QWORD *)(v37 + v65);
      if (v66 == *v68 && v67 == v68[1])
        v45 = 1;
      else
        v45 = sub_23C19C088();
    }
  }
  return v45 & 1;
}

uint64_t sub_23C15EA98()
{
  return sub_23C153930(&qword_256B30678, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanDetail, (uint64_t)&protocol conformance descriptor for WorkoutPlanDetail);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutPlanDetail(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C19B53C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23C19B4D0();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = a3[6];
    v18 = a3[7];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (char *)a1 + v18;
    v23 = (char *)a2 + v18;
    v24 = sub_23C19B500();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    v26 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v27 = (uint64_t *)((char *)a1 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = a3[10];
    v31 = a3[11];
    v32 = (uint64_t *)((char *)a1 + v30);
    v33 = (uint64_t *)((char *)a2 + v30);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = (uint64_t *)((char *)a1 + v31);
    v36 = (uint64_t *)((char *)a2 + v31);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WorkoutPlanDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_23C19B53C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_23C19B4D0();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v9 = a1 + *(int *)(a2 + 28);
  v10 = sub_23C19B500();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for WorkoutPlanDetail(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v6 = sub_23C19B53C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23C19B4D0();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = a3[7];
  v17 = &a1[v15];
  v18 = &a2[v15];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = &a1[v16];
  v21 = &a2[v16];
  v22 = sub_23C19B500();
  v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  v23(v20, v21, v22);
  v24 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  v28 = a3[10];
  v29 = a3[11];
  v30 = &a1[v28];
  v31 = &a2[v28];
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v32;
  v33 = &a1[v29];
  v34 = &a2[v29];
  v35 = *((_QWORD *)v34 + 1);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for WorkoutPlanDetail(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v6 = sub_23C19B53C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23C19B4D0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_23C19B500();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  a1[a3[8]] = a2[a3[8]];
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[10];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[11];
  v35 = &a1[v34];
  v36 = &a2[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for WorkoutPlanDetail(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23C19B53C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23C19B4D0();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23C19B500();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  v20 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  return a1;
}

char *assignWithTake for WorkoutPlanDetail(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v6 = sub_23C19B53C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23C19B4D0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v26 = a3[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_23C19B500();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  v30 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v35 = a3[10];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v39 = *(_QWORD *)v37;
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = v39;
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  v40 = a3[11];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v44 = *(_QWORD *)v42;
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = v44;
  *((_QWORD *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanDetail()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C15F670(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_23C19B500();
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[7];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanDetail()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C15F754(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
        return result;
      }
      v10 = sub_23C19B500();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23C15F828()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23C15F900(319, &qword_256B306E8, (void (*)(uint64_t))MEMORY[0x24BE34FA0]);
  if (v0 <= 0x3F)
  {
    sub_23C15F900(319, qword_256B306F0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    if (v1 <= 0x3F)
    {
      sub_23C19B500();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23C15F900(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23C19BEFC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t getEnumTagSinglePayload for WorkoutPlanDetail.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanDetail.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23C15FA28 + 4 * byte_23C19E4DD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23C15FA5C + 4 * byte_23C19E4D8[v4]))();
}

uint64_t sub_23C15FA5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C15FA64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C15FA6CLL);
  return result;
}

uint64_t sub_23C15FA78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C15FA80);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23C15FA84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C15FA8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanDetail.CodingKeys()
{
  return &type metadata for WorkoutPlanDetail.CodingKeys;
}

unint64_t sub_23C15FAAC()
{
  unint64_t result;

  result = qword_256B30738;
  if (!qword_256B30738)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E6C4, &type metadata for WorkoutPlanDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30738);
  }
  return result;
}

unint64_t sub_23C15FAF4()
{
  unint64_t result;

  result = qword_256B30740;
  if (!qword_256B30740)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E634, &type metadata for WorkoutPlanDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30740);
  }
  return result;
}

unint64_t sub_23C15FB3C()
{
  unint64_t result;

  result = qword_256B30748;
  if (!qword_256B30748)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E65C, &type metadata for WorkoutPlanDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30748);
  }
  return result;
}

uint64_t sub_23C15FB80(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023C1A4340 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023C1A4360 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C1A4380 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023C1A43A0 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_23C15FEA8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23C15FEE4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B307F0);
  sub_23C161310();
  return sub_23C19B5D8();
}

uint64_t CompactLibraryView.init(store:canvasViewBuilder:pageCountViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a7 = sub_23C1503C4;
  *(_QWORD *)(a7 + 8) = result;
  *(_BYTE *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 24) = a3;
  *(_QWORD *)(a7 + 32) = a4;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_23C15FFB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t CompactLibraryView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 *v73;
  _QWORD v74[2];
  _QWORD v75[4];
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v3 = v2;
  v68 = a2;
  v65 = sub_23C19B7F4();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v58 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  v6 = a1[2];
  v7 = a1[3];
  swift_getTupleTypeMetadata2();
  v8 = sub_23C19BD34();
  v9 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v8);
  sub_23C19BC68();
  sub_23C19B680();
  swift_getTupleTypeMetadata2();
  v10 = sub_23C19BD34();
  MEMORY[0x2426189D0](v9, v10);
  v11 = sub_23C19BC80();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v11);
  v12 = sub_23C19B5A8();
  v54 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v51 - v13;
  v15 = MEMORY[0x2426189D0](MEMORY[0x24BDEB238], v12);
  *(_QWORD *)&v76 = v12;
  *((_QWORD *)&v76 + 1) = v15;
  v52 = v15;
  v16 = MEMORY[0x24261897C](0, &v76, MEMORY[0x24BDF2FE0], 0);
  v57 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v51 - v17;
  v56 = v19;
  v20 = sub_23C19B680();
  v62 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v55 = (char *)&v51 - v21;
  v59 = v22;
  v53 = sub_23C19B680();
  v63 = *(_QWORD *)(v53 - 8);
  v23 = MEMORY[0x24BDAC7A8](v53);
  v60 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v61 = (uint64_t)&v51 - v25;
  v26 = v3[1];
  v76 = *v3;
  v77 = v26;
  v78 = v3[2];
  v79 = *((_QWORD *)v3 + 6);
  sub_23C19B8B4();
  v66 = v6;
  v69 = v6;
  v70 = v7;
  v67 = v7;
  v28 = a1[4];
  v27 = a1[5];
  v71 = v28;
  v72 = v27;
  v73 = &v76;
  v29 = v58;
  sub_23C150FD8();
  sub_23C19B7E8();
  LOBYTE(v3) = sub_23C19B8B4();
  sub_23C19B8A8();
  sub_23C19B8A8();
  if (sub_23C19B8A8() != v3)
    sub_23C19B8A8();
  v30 = v52;
  sub_23C19BAC4();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v29, v65);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v12);
  v31 = swift_allocObject();
  v32 = v66;
  v33 = v67;
  *(_QWORD *)(v31 + 16) = v66;
  *(_QWORD *)(v31 + 24) = v33;
  *(_QWORD *)(v31 + 32) = v28;
  *(_QWORD *)(v31 + 40) = v27;
  v34 = v77;
  *(_OWORD *)(v31 + 48) = v76;
  *(_OWORD *)(v31 + 64) = v34;
  *(_OWORD *)(v31 + 80) = v78;
  *(_QWORD *)(v31 + 96) = v79;
  sub_23C160D7C((uint64_t)&v76);
  v75[2] = v12;
  v75[3] = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = v28;
  v37 = v55;
  v38 = v56;
  sub_23C19BB30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v38);
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v32;
  *(_QWORD *)(v39 + 24) = v33;
  *(_QWORD *)(v39 + 32) = v36;
  *(_QWORD *)(v39 + 40) = v27;
  v40 = v77;
  *(_OWORD *)(v39 + 48) = v76;
  *(_OWORD *)(v39 + 64) = v40;
  *(_OWORD *)(v39 + 80) = v78;
  *(_QWORD *)(v39 + 96) = v79;
  sub_23C160D7C((uint64_t)&v76);
  v41 = MEMORY[0x24BDF0910];
  v75[0] = OpaqueTypeConformance2;
  v75[1] = MEMORY[0x24BDF0910];
  v42 = MEMORY[0x24BDED308];
  v43 = v59;
  v44 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v59, v75);
  v45 = (uint64_t)v60;
  sub_23C19BA40();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v43);
  v74[0] = v44;
  v74[1] = v41;
  v46 = v42;
  v47 = v53;
  MEMORY[0x2426189D0](v46, v53, v74);
  v48 = v61;
  sub_23C1515F4(v45, v47, v61);
  v49 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v49(v45, v47);
  sub_23C1502B0(v48, v47, v68);
  return ((uint64_t (*)(uint64_t, uint64_t))v49)(v48, v47);
}

uint64_t sub_23C1605AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v22 = a5;
  v23 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  swift_getTupleTypeMetadata2();
  v10 = sub_23C19BD34();
  v11 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v10);
  sub_23C19BC68();
  sub_23C19B680();
  swift_getTupleTypeMetadata2();
  v12 = sub_23C19BD34();
  MEMORY[0x2426189D0](v11, v12);
  v13 = sub_23C19BC80();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v22 - v18;
  sub_23C19BD04();
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v27 = v22;
  v28 = a1;
  sub_23C19BC74();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v13);
  sub_23C1515F4((uint64_t)v17, v13, (uint64_t)v19);
  v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v17, v13);
  sub_23C1502B0((uint64_t)v19, v13, v23);
  return ((uint64_t (*)(char *, uint64_t))v20)(v19, v13);
}

uint64_t sub_23C16078C()
{
  return sub_23C161374((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C1605AC);
}

uint64_t sub_23C160798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeConformance2;
  uint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  char *v51;
  _QWORD v52[3];

  v40 = a4;
  v41 = a5;
  v38 = a3;
  v39 = a1;
  v46 = a6;
  v37 = a2;
  swift_getTupleTypeMetadata2();
  v6 = sub_23C19BD34();
  v36[1] = MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v6);
  v36[2] = v6;
  v7 = sub_23C19BC68();
  v42 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v36 - v8;
  v10 = sub_23C19B680();
  v43 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v45 = (uint64_t)v36 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FF80);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v44 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v36 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v36 - v22;
  v50 = 0;
  LOBYTE(v51) = 1;
  v24 = sub_23C19B8B4();
  sub_23C19B8A8();
  sub_23C19B8A8();
  if (sub_23C19B8A8() != v24)
    sub_23C19B8A8();
  sub_23C19BD10();
  sub_23C19BAD0();
  v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v23, v21, v15);
  MEMORY[0x24BDAC7A8](v25);
  v26 = v38;
  v36[-6] = v37;
  v36[-5] = v26;
  v27 = v41;
  v36[-4] = v40;
  v36[-3] = v27;
  v36[-2] = v39;
  sub_23C19B7A0();
  sub_23C19BC5C();
  sub_23C19B8D8();
  v28 = MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v7);
  sub_23C19BB18();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v7);
  v52[0] = v28;
  v52[1] = MEMORY[0x24BDECC60];
  v29 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v10, v52);
  v30 = v45;
  sub_23C1515F4((uint64_t)v13, v10, v45);
  v31 = v43;
  v32 = *(void (**)(char *, uint64_t))(v43 + 8);
  v32(v13, v10);
  v33 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v44, v23, v15);
  v50 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v13, v30, v10);
  v51 = v13;
  v49[0] = v15;
  v49[1] = v10;
  OpaqueTypeConformance2 = MEMORY[0x24BDF4638];
  v48 = MEMORY[0x24BDF4610];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v48 = v29;
  sub_23C177BE8(&v50, 2uLL, (uint64_t)v49);
  v32((char *)v30, v10);
  v34 = *(void (**)(char *, uint64_t))(v16 + 8);
  v34(v23, v15);
  v32(v13, v10);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v15);
}

uint64_t sub_23C160B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38[2];

  v30 = a5;
  v33 = a4;
  v34 = a6;
  v32 = *(_QWORD *)(a2 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v29 - v13;
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v12);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v29 - v21;
  (*(void (**)(void))(v20 + 40))();
  sub_23C1515F4((uint64_t)v19, a3, (uint64_t)v22);
  v31 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  v23 = v31(v19, a3);
  (*(void (**)(uint64_t))(a1 + 24))(v23);
  v24 = v33;
  sub_23C1515F4((uint64_t)v11, a2, (uint64_t)v14);
  v25 = v32;
  v26 = *(void (**)(char *, uint64_t))(v32 + 8);
  v26(v11, a2);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v22, a3);
  v38[0] = (uint64_t)v19;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v11, v14, a2);
  v38[1] = (uint64_t)v11;
  v37[0] = a3;
  v37[1] = a2;
  v35 = v30;
  v36 = v24;
  sub_23C177BE8(v38, 2uLL, (uint64_t)v37);
  v26(v14, a2);
  v27 = v31;
  v31(v22, a3);
  v26(v11, a2);
  return v27(v19, a3);
}

void sub_23C160D74()
{
  sub_23C160E88();
}

uint64_t sub_23C160D7C(uint64_t a1)
{
  sub_23C1511B4();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_23C160DCC()
{
  type metadata accessor for CompactLibraryView();
}

uint64_t sub_23C160E0C()
{
  sub_23C15FEE4();
  sub_23C19BDA0();
  return swift_release();
}

uint64_t objectdestroy_2Tm()
{
  sub_23C151164();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23C160E80()
{
  sub_23C160E88();
}

void sub_23C160E88()
{
  sub_23C160DCC();
}

uint64_t sub_23C160EAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C160EE4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C160EEC()
{
  sub_23C151164();
  swift_release();
  return swift_release();
}

uint64_t sub_23C160F24(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = a2[3];
  v7 = a2[6];
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C160FA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C151164();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_23C16104C(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C151164();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_23C1610B0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C1610F8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CompactLibraryView()
{
  JUMPOUT(0x242618934);
}

uint64_t sub_23C161150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  swift_getTupleTypeMetadata2();
  v0 = sub_23C19BD34();
  v1 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v0);
  sub_23C19BC68();
  sub_23C19B680();
  swift_getTupleTypeMetadata2();
  v2 = sub_23C19BD34();
  MEMORY[0x2426189D0](v1, v2);
  v3 = sub_23C19BC80();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v3);
  v4 = sub_23C19B5A8();
  v5 = MEMORY[0x2426189D0](MEMORY[0x24BDEB238], v4);
  v14 = v4;
  v15 = v5;
  MEMORY[0x24261897C](255, &v14, MEMORY[0x24BDF2FE0], 0);
  v6 = sub_23C19B680();
  v7 = sub_23C19B680();
  v14 = v4;
  v15 = v5;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v9 = MEMORY[0x24BDF0910];
  v13[0] = OpaqueTypeConformance2;
  v13[1] = MEMORY[0x24BDF0910];
  v10 = MEMORY[0x24BDED308];
  v12[0] = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v6, v13);
  v12[1] = v9;
  return MEMORY[0x2426189D0](v10, v7, v12);
}

unint64_t sub_23C161310()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B307F8;
  if (!qword_256B307F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B307F0);
    result = MEMORY[0x2426189D0](MEMORY[0x24BE2B5E8], v1);
    atomic_store(result, (unint64_t *)&qword_256B307F8);
  }
  return result;
}

uint64_t sub_23C16135C()
{
  return sub_23C161374((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C160798);
}

uint64_t sub_23C161368()
{
  return sub_23C161374((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C160B90);
}

uint64_t sub_23C161374(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t LibraryRemoteParticipant.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

FitnessLibrary::LibraryRemoteParticipant __swiftcall LibraryRemoteParticipant.init(name:)(FitnessLibrary::LibraryRemoteParticipant name)
{
  FitnessLibrary::LibraryRemoteParticipant *v1;

  *v1 = name;
  return name;
}

uint64_t sub_23C1613BC()
{
  return 1701667182;
}

uint64_t sub_23C1613CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C161450()
{
  sub_23C16158C();
  return sub_23C19C0F4();
}

uint64_t sub_23C161478()
{
  sub_23C16158C();
  return sub_23C19C100();
}

uint64_t LibraryRemoteParticipant.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30800);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C16158C();
  sub_23C19C0E8();
  sub_23C19C040();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_23C16158C()
{
  unint64_t result;

  result = qword_256B30808;
  if (!qword_256B30808)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E98C, &type metadata for LibraryRemoteParticipant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30808);
  }
  return result;
}

uint64_t LibraryRemoteParticipant.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30810);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C16158C();
  sub_23C19C0DC();
  if (!v2)
  {
    v9 = sub_23C19BFE0();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23C1616EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return LibraryRemoteParticipant.init(from:)(a1, a2);
}

uint64_t sub_23C161700(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30800);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C16158C();
  sub_23C19C0E8();
  sub_23C19C040();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t LibraryRemoteParticipant.hash(into:)()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_23C19C0C4();
  sub_23C19C0C4();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

uint64_t static LibraryRemoteParticipant.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_23C19C088() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t LibraryRemoteParticipant.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C19C0AC();
  sub_23C19C0C4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C19BE00();
    swift_bridgeObjectRelease();
  }
  return sub_23C19C0D0();
}

uint64_t sub_23C161934()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C19C0AC();
  sub_23C19C0C4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C19BE00();
    swift_bridgeObjectRelease();
  }
  return sub_23C19C0D0();
}

uint64_t sub_23C1619B0()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_23C19C0C4();
  sub_23C19C0C4();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C161A24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C19C0AC();
  sub_23C19C0C4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C19BE00();
    swift_bridgeObjectRelease();
  }
  return sub_23C19C0D0();
}

unint64_t sub_23C161AA0()
{
  unint64_t result;

  result = qword_256B30818;
  if (!qword_256B30818)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryRemoteParticipant, &type metadata for LibraryRemoteParticipant);
    atomic_store(result, (unint64_t *)&qword_256B30818);
  }
  return result;
}

uint64_t sub_23C161AE4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_23C19C088() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

_QWORD *initializeBufferWithCopyOfBuffer for OfflineCanvasItemPlaceholder(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for OfflineCanvasItemPlaceholder()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for OfflineCanvasItemPlaceholder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for OfflineCanvasItemPlaceholder(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryRemoteParticipant(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryRemoteParticipant(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryRemoteParticipant()
{
  return &type metadata for LibraryRemoteParticipant;
}

uint64_t storeEnumTagSinglePayload for LibraryRemoteParticipant.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C161CDC + 4 * byte_23C19E7E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C161CFC + 4 * byte_23C19E7E5[v4]))();
}

_BYTE *sub_23C161CDC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C161CFC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C161D04(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C161D0C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C161D14(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C161D1C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LibraryRemoteParticipant.CodingKeys()
{
  return &type metadata for LibraryRemoteParticipant.CodingKeys;
}

unint64_t sub_23C161D3C()
{
  unint64_t result;

  result = qword_256B30820;
  if (!qword_256B30820)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E964, &type metadata for LibraryRemoteParticipant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30820);
  }
  return result;
}

unint64_t sub_23C161D84()
{
  unint64_t result;

  result = qword_256B30828;
  if (!qword_256B30828)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E8D4, &type metadata for LibraryRemoteParticipant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30828);
  }
  return result;
}

unint64_t sub_23C161DCC()
{
  unint64_t result;

  result = qword_256B30830;
  if (!qword_256B30830)
  {
    result = MEMORY[0x2426189D0](&unk_23C19E8FC, &type metadata for LibraryRemoteParticipant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30830);
  }
  return result;
}

uint64_t LibraryCanvasPlaceholderReferenceType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C161E50 + 4 * byte_23C19E9E0[a1]))(0xD000000000000010, 0x800000023C1A3F40);
}

uint64_t sub_23C161E50()
{
  return 0x6D6172676F7270;
}

uint64_t sub_23C161E68()
{
  return 0x6B63617473;
}

uint64_t sub_23C161E7C()
{
  return 0x74756F6B726F77;
}

uint64_t sub_23C161E94()
{
  return 0x5074756F6B726F77;
}

uint64_t sub_23C161EB4(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_23C161ECC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = LibraryCanvasPlaceholderReferenceType.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == LibraryCanvasPlaceholderReferenceType.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23C19C088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23C161F54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s14FitnessLibrary0B30CanvasPlaceholderReferenceTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_23C161F80@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = LibraryCanvasPlaceholderReferenceType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23C161FA8()
{
  sub_23C1622A8();
  return sub_23C19BE3C();
}

uint64_t sub_23C162004()
{
  sub_23C1622A8();
  return sub_23C19BE30();
}

uint64_t sub_23C162050()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23C19C0AC();
  LibraryCanvasPlaceholderReferenceType.rawValue.getter(v1);
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  return sub_23C19C0D0();
}

uint64_t sub_23C1620B0()
{
  unsigned __int8 *v0;

  LibraryCanvasPlaceholderReferenceType.rawValue.getter(*v0);
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C1620F0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23C19C0AC();
  LibraryCanvasPlaceholderReferenceType.rawValue.getter(v1);
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  return sub_23C19C0D0();
}

uint64_t _s14FitnessLibrary0B30CanvasPlaceholderReferenceTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_23C19BFB0();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_23C162198()
{
  unint64_t result;

  result = qword_256B30838;
  if (!qword_256B30838)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasPlaceholderReferenceType, &type metadata for LibraryCanvasPlaceholderReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B30838);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasPlaceholderReferenceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23C162228 + 4 * byte_23C19E9EB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23C16225C + 4 * byte_23C19E9E6[v4]))();
}

uint64_t sub_23C16225C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C162264(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C16226CLL);
  return result;
}

uint64_t sub_23C162278(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C162280);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23C162284(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C16228C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasPlaceholderReferenceType()
{
  return &type metadata for LibraryCanvasPlaceholderReferenceType;
}

unint64_t sub_23C1622A8()
{
  unint64_t result;

  result = qword_256B30840;
  if (!qword_256B30840)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasPlaceholderReferenceType, &type metadata for LibraryCanvasPlaceholderReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B30840);
  }
  return result;
}

void ActivePlanBannerView.init(artworkViewBuilder:primaryActionButtonView:secondaryActionButtonView:planDetail:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, __int128 a8, __int128 a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v23 = a5;
  v21 = a8;
  v22 = a9;
  v16 = sub_23C19BB60();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v19 + 104))(v18, *MEMORY[0x24BDF3C28]);
  v20 = MEMORY[0x2426181A8](v18, 0.650980392, 1.0, 0.0, 1.0);
  *(_OWORD *)(a7 + 16) = xmmword_23C19EB20;
  *(int64x2_t *)(a7 + 32) = vdupq_n_s64(1uLL);
  *(_QWORD *)(a7 + 48) = 2;
  *(_OWORD *)(a7 + 56) = xmmword_23C19EB30;
  *(_OWORD *)(a7 + 72) = xmmword_23C19EB30;
  *(_QWORD *)(a7 + 88) = v20;
  *(_QWORD *)(a7 + 96) = 0x403E000000000000;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 104) = a3;
  *(_QWORD *)(a7 + 112) = a4;
  v24 = a6;
  v25 = v21;
  v26 = v22;
  v27 = a10;
  type metadata accessor for ActivePlanBannerView();
}

uint64_t sub_23C16240C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(v3 + *(int *)(a1 + 80));
  *v5 = v2;
  v5[1] = v1;
  return sub_23C162454(*(_QWORD *)(v4 - 136), v3 + *(int *)(a1 + 76));
}

void type metadata accessor for ActivePlanBannerView()
{
  JUMPOUT(0x242618934);
}

uint64_t sub_23C162454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutPlanDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ActivePlanBannerView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *);
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[6];

  v59 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) - 8);
  v56 = *(_QWORD *)(a1 + 16);
  v57 = v4;
  MEMORY[0x24BDAC7A8](a1);
  v55 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23C19B680();
  v58 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v54 = (char *)&v42 - v7;
  v72[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30848);
  v72[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30850);
  v72[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30858);
  v72[4] = MEMORY[0x24BDF4638];
  v53 = *(_QWORD *)(a1 + 24);
  sub_23C19BEFC();
  v52 = *(_QWORD *)(a1 + 32);
  v8 = sub_23C19BEFC();
  swift_getTupleTypeMetadata2();
  v9 = sub_23C19BD34();
  v10 = sub_23C19B7DC();
  v11 = MEMORY[0x24BDF5428];
  v12 = MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v9);
  v51 = *(_QWORD *)(a1 + 56);
  v72[0] = v51;
  v13 = MEMORY[0x2426189D0](MEMORY[0x24BDF5578], v8, v72);
  v71[0] = v12;
  v71[1] = v13;
  MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v10, v71);
  sub_23C19BC68();
  v72[5] = sub_23C19B680();
  swift_getTupleTypeMetadata();
  v14 = sub_23C19BD34();
  MEMORY[0x2426189D0](v11, v14);
  v15 = sub_23C19BC68();
  v16 = sub_23C19B680();
  v70[0] = MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v15);
  v70[1] = MEMORY[0x24BDECC60];
  v45 = v16;
  v46 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v16, v70);
  v47 = sub_23C19B6D4();
  v17 = sub_23C19B680();
  v49 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v42 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30860);
  v20 = sub_23C19B680();
  v50 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v44 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v48 = (uint64_t)&v42 - v23;
  v24 = *(void (**)(char *, char *))v2;
  v25 = &v2[*(int *)(a1 + 76)];
  v26 = type metadata accessor for WorkoutPlanDetail();
  v27 = v55;
  v24(v25, &v25[*(int *)(v26 + 20)]);
  v28 = *(_QWORD *)(a1 + 40);
  v29 = v54;
  v30 = v56;
  sub_23C19BA28();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v30);
  sub_23C19BD1C();
  v60 = v30;
  v61 = v53;
  v62 = v52;
  v63 = v28;
  v64 = *(_QWORD *)(a1 + 48);
  v65 = v51;
  v66 = v2;
  v69[0] = v28;
  v69[1] = MEMORY[0x24BDEEC40];
  v31 = MEMORY[0x24BDED308];
  v32 = v43;
  v33 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v43, v69);
  sub_23C19BB00();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v32);
  v34 = MEMORY[0x2426189D0](MEMORY[0x24BDEDC10], v47);
  v68[0] = v33;
  v68[1] = v34;
  v35 = v31;
  v36 = MEMORY[0x2426189D0](v31, v17, v68);
  v37 = (uint64_t)v44;
  sub_23C19BA4C();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v17);
  v38 = sub_23C15159C(qword_256B30868, &qword_256B30860, MEMORY[0x24BDEB950]);
  v67[0] = v36;
  v67[1] = v38;
  MEMORY[0x2426189D0](v35, v20, v67);
  v39 = v48;
  sub_23C1515F4(v37, v20, v48);
  v40 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v40(v37, v20);
  sub_23C1502B0(v39, v20, v59);
  return ((uint64_t (*)(uint64_t, uint64_t))v40)(v39, v20);
}

uint64_t sub_23C162A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[7];

  v30 = a7;
  v35 = a6;
  v34 = a5;
  v31 = a4;
  v32 = a3;
  v33 = a2;
  v36 = a8;
  v46[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30848);
  v46[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30850);
  v46[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30858);
  v46[4] = MEMORY[0x24BDF4638];
  sub_23C19BEFC();
  v10 = sub_23C19BEFC();
  swift_getTupleTypeMetadata2();
  v11 = sub_23C19BD34();
  v12 = sub_23C19B7DC();
  v13 = MEMORY[0x24BDF5428];
  v46[0] = a7;
  v45[0] = MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v11);
  v45[1] = MEMORY[0x2426189D0](MEMORY[0x24BDF5578], v10, v46);
  MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v12, v45);
  sub_23C19BC68();
  v46[5] = sub_23C19B680();
  swift_getTupleTypeMetadata();
  v14 = sub_23C19BD34();
  MEMORY[0x2426189D0](v13, v14);
  v15 = sub_23C19BC68();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v29 - v17;
  v19 = sub_23C19B680();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v29 - v24;
  sub_23C19B7AC();
  v37 = v33;
  v38 = v32;
  v39 = v31;
  v40 = v34;
  v41 = v35;
  v42 = v30;
  v43 = a1;
  sub_23C19BC5C();
  v26 = MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v15);
  sub_23C19BB0C();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v44[0] = v26;
  v44[1] = MEMORY[0x24BDECC60];
  MEMORY[0x2426189D0](MEMORY[0x24BDED308], v19, v44);
  sub_23C1515F4((uint64_t)v23, v19, (uint64_t)v25);
  v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  v27(v23, v19);
  sub_23C1502B0((uint64_t)v25, v19, v36);
  return ((uint64_t (*)(char *, uint64_t))v27)(v25, v19);
}

uint64_t sub_23C162E00()
{
  return sub_23C1652E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C162A70);
}

void sub_23C162E0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[30];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;

  v24 = a6;
  v22 = a5;
  v21[6] = a3;
  v21[7] = a2;
  v21[15] = a8;
  v21[16] = a1;
  sub_23C19BEFC();
  v21[5] = a4;
  v12 = sub_23C19BEFC();
  swift_getTupleTypeMetadata2();
  v13 = sub_23C19BD34();
  v14 = sub_23C19B7DC();
  v34 = a7;
  v21[4] = a7;
  v33[0] = MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v13);
  v33[1] = MEMORY[0x2426189D0](MEMORY[0x24BDF5578], v12, &v34);
  v21[12] = v14;
  v21[11] = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v14, v33);
  v15 = sub_23C19BC68();
  v21[13] = *(_QWORD *)(v15 - 8);
  v21[10] = v15;
  MEMORY[0x24BDAC7A8](v15);
  v21[9] = (char *)v21 - v16;
  v26 = sub_23C19B680();
  v21[14] = *(_QWORD *)(v26 - 8);
  v17 = MEMORY[0x24BDAC7A8](v26);
  v25 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v23 = (char *)v21 - v19;
  v20 = sub_23C19B968();
  MEMORY[0x24BDAC7A8](v20);
  v27 = a2;
  v28 = a3;
  v29 = a4;
  v30 = v22;
  v31 = v24;
  v32 = a7;
  type metadata accessor for ActivePlanBannerView();
}

uint64_t sub_23C163008(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, _QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void (*v64)(_QWORD, uint64_t);

  v6 = *(_QWORD *)(v1 + 128);
  v7 = v6 + *(int *)(a1 + 76);
  *(_QWORD *)(v1 + 264) = v7;
  v8 = type metadata accessor for WorkoutPlanDetail();
  v9 = *(int *)(v8 + 24);
  v10 = v8;
  *(_QWORD *)(v1 + 176) = v8;
  v11 = (_QWORD *)(v7 + v9);
  v12 = v11[1];
  *(_QWORD *)(v5 - 248) = *v11;
  *(_QWORD *)(v5 - 240) = v12;
  v13 = sub_23C165284();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v1 + 168) = v13;
  v14 = sub_23C19B9B0();
  *(_QWORD *)(v1 + 216) = v15;
  *(_QWORD *)(v1 + 224) = v14;
  *(_QWORD *)(v1 + 232) = v16;
  *(_DWORD *)(v1 + 212) = v17 & 1;
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(v6 + 48);
  *(_QWORD *)(v1 + 200) = swift_getKeyPath();
  *(_QWORD *)(v1 + 192) = *(_QWORD *)(v6 + 88);
  swift_retain();
  sub_23C19B974();
  sub_23C19B944();
  sub_23C19B95C();
  swift_release();
  v18 = *MEMORY[0x24BDF17C8];
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104);
  *(_QWORD *)(v1 + 144) = v19;
  v19(v4, v18, v3);
  *(_QWORD *)(v1 + 184) = sub_23C19B980();
  swift_release();
  v20 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v20(v4, v3);
  *(_QWORD *)(v1 + 328) = swift_getKeyPath();
  v21 = *(_QWORD *)(v1 + 264);
  v22 = (_QWORD *)(v21 + *(int *)(v10 + 44));
  v23 = v22[1];
  *(_QWORD *)(v5 - 248) = *v22;
  *(_QWORD *)(v5 - 240) = v23;
  swift_bridgeObjectRetain();
  v24 = sub_23C19B9B0();
  *(_QWORD *)(v1 + 296) = v25;
  *(_QWORD *)(v1 + 304) = v24;
  *(_QWORD *)(v1 + 320) = v26;
  *(_DWORD *)(v1 + 292) = v27 & 1;
  v28 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v28 + 32);
  *(_QWORD *)(v1 + 312) = swift_getKeyPath();
  sub_23C19B950();
  sub_23C19B92C();
  sub_23C19B95C();
  swift_release();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 144);
  v29(v4, v18, v3);
  *(_QWORD *)(v1 + 280) = sub_23C19B980();
  swift_release();
  v20(v4, v3);
  *(_QWORD *)(v1 + 272) = swift_getKeyPath();
  v30 = (_QWORD *)(v21 + *(int *)(*(_QWORD *)(v1 + 176) + 40));
  v31 = v30[1];
  *(_QWORD *)(v5 - 248) = *v30;
  *(_QWORD *)(v5 - 240) = v31;
  swift_bridgeObjectRetain();
  v32 = sub_23C19B9B0();
  *(_QWORD *)(v1 + 160) = v33;
  *(_QWORD *)(v1 + 168) = v32;
  *(_QWORD *)(v1 + 264) = v34;
  *(_DWORD *)(v1 + 156) = v35 & 1;
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v28 + 40);
  *(_QWORD *)(v1 + 176) = swift_getKeyPath();
  sub_23C19B98C();
  v29(v4, v18, v3);
  *(_QWORD *)(v1 + 144) = sub_23C19B980();
  swift_release();
  v20(v4, v3);
  *(_QWORD *)(v1 + 136) = swift_getKeyPath();
  *(_DWORD *)(v1 + 12) = sub_23C19B818();
  v36 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 368) = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 376) = v36;
  v37 = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v1 + 384) = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 392) = v37;
  v38 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 400) = *(_QWORD *)(v1 + 256);
  *(_QWORD *)(v1 + 408) = v38;
  *(_QWORD *)(v1 + 416) = v28;
  sub_23C19B7A0();
  v39 = *(_QWORD *)(v1 + 72);
  sub_23C19BC5C();
  sub_23C19BD10();
  v40 = *(_QWORD *)(v1 + 80);
  v41 = MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v40);
  v42 = *(_QWORD *)(v1 + 336);
  sub_23C19BADC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 104) + 8))(v39, v40);
  v43 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v5 - 128) = v41;
  *(_QWORD *)(v5 - 120) = v43;
  v44 = *(_QWORD *)(v1 + 344);
  *(_QWORD *)(v1 + 240) = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v44, v5 - 128);
  v45 = *(_QWORD *)(v1 + 248);
  v46 = v42;
  sub_23C1515F4(v42, v44, v45);
  v47 = *(_QWORD *)(v1 + 112);
  v48 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  *(_QWORD *)(v1 + 256) = v48;
  v48(v46, v44);
  v49 = *(_QWORD *)(v1 + 216);
  v50 = *(_QWORD *)(v1 + 224);
  *(_QWORD *)(v5 - 248) = v50;
  *(_QWORD *)(v5 - 240) = v49;
  LODWORD(v46) = *(_DWORD *)(v1 + 212);
  *(_BYTE *)(v5 - 232) = v46;
  v51 = *(_QWORD *)(v1 + 192);
  v52 = *(_QWORD *)(v1 + 200);
  *(_QWORD *)(v5 - 224) = *(_QWORD *)(v1 + 232);
  *(_QWORD *)(v5 - 216) = v52;
  *(_QWORD *)(v5 - 208) = *(_QWORD *)(v1 + 64);
  *(_BYTE *)(v5 - 200) = 0;
  v53 = *(_QWORD *)(v1 + 328);
  *(_QWORD *)(v5 - 192) = v51;
  *(_QWORD *)(v5 - 184) = v53;
  v54 = *(_QWORD *)(v1 + 184);
  *(_QWORD *)(v1 + 608) = *(_QWORD *)(v1 + 304);
  *(_QWORD *)(v1 + 616) = *(_QWORD *)(v1 + 296);
  *(_BYTE *)(v1 + 624) = *(_DWORD *)(v1 + 292);
  *(_QWORD *)(v1 + 632) = *(_QWORD *)(v1 + 320);
  *(_QWORD *)(v1 + 640) = *(_QWORD *)(v1 + 312);
  *(_QWORD *)(v1 + 648) = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(v1 + 656) = 0;
  *(_QWORD *)(v1 + 664) = *(_QWORD *)(v1 + 272);
  *(_QWORD *)(v1 + 672) = *(_QWORD *)(v1 + 280);
  *(_QWORD *)(v5 - 176) = v54;
  *(_QWORD *)(v5 - 168) = v5 - 248;
  *(_QWORD *)(v5 - 160) = v1 + 608;
  *(_QWORD *)(v1 + 528) = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v1 + 536) = *(_QWORD *)(v1 + 160);
  *(_BYTE *)(v1 + 544) = *(_DWORD *)(v1 + 156);
  *(_QWORD *)(v1 + 552) = *(_QWORD *)(v1 + 264);
  *(_QWORD *)(v1 + 560) = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(v1 + 568) = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(v1 + 576) = 0;
  *(_QWORD *)(v1 + 584) = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v1 + 592) = *(_QWORD *)(v1 + 144);
  *(_DWORD *)(v1 + 600) = *(_DWORD *)(v1 + 12);
  *(_QWORD *)(v1 + 512) = 0;
  *(_BYTE *)(v1 + 520) = 1;
  *(_QWORD *)(v5 - 152) = v1 + 528;
  *(_QWORD *)(v5 - 144) = v1 + 512;
  v55 = *(void (**)(uint64_t, uint64_t, _QWORD))(v47 + 16);
  v56 = *(_QWORD *)(v1 + 336);
  v55(v56, v45, *(_QWORD *)(v1 + 344));
  *(_QWORD *)(v5 - 136) = v56;
  sub_23C1652FC(v50, v49, v46);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23C1652FC(*(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 296), *(_DWORD *)(v1 + 292));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v58 = *(_QWORD *)(v1 + 160);
  v57 = *(_QWORD *)(v1 + 168);
  LODWORD(v50) = *(_DWORD *)(v1 + 156);
  sub_23C1652FC(v57, v58, v50);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v1 + 472) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30848);
  *(_QWORD *)(v1 + 480) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30850);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30858);
  v60 = MEMORY[0x24BDF4638];
  *(_QWORD *)(v1 + 488) = v59;
  *(_QWORD *)(v1 + 496) = v60;
  v61 = *(_QWORD *)(v1 + 344);
  *(_QWORD *)(v1 + 504) = v61;
  *(_QWORD *)(v1 + 432) = sub_23C165414(&qword_256B30978, &qword_256B30848, (uint64_t (*)(void))sub_23C16530C);
  *(_QWORD *)(v1 + 440) = sub_23C165414(&qword_256B309D0, &qword_256B30850, (uint64_t (*)(void))sub_23C165390);
  v62 = sub_23C165498();
  v63 = MEMORY[0x24BDF4610];
  *(_QWORD *)(v1 + 448) = v62;
  *(_QWORD *)(v1 + 456) = v63;
  *(_QWORD *)(v1 + 464) = *(_QWORD *)(v1 + 240);
  sub_23C177BE8((uint64_t *)(v5 - 168), 5uLL, v1 + 472);
  v64 = *(void (**)(_QWORD, uint64_t))(v1 + 256);
  v64(*(_QWORD *)(v1 + 248), v61);
  sub_23C165534(v57, v58, v50);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23C165534(*(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 296), *(_DWORD *)(v1 + 292));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23C165534(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 216), *(_DWORD *)(v1 + 212));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v64(*(_QWORD *)(v1 + 336), v61);
  sub_23C165534(*(_QWORD *)(v1 + 528), *(_QWORD *)(v1 + 536), *(_BYTE *)(v1 + 544));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23C165534(*(_QWORD *)(v1 + 608), *(_QWORD *)(v1 + 616), *(_BYTE *)(v1 + 624));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23C165534(*(_QWORD *)(v5 - 248), *(_QWORD *)(v5 - 240), *(_BYTE *)(v5 - 232));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_23C163774(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[12];
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v26 = a1;
  v27 = a7;
  v12 = sub_23C19BEFC();
  v13 = sub_23C19BEFC();
  swift_getTupleTypeMetadata2();
  v14 = sub_23C19BD34();
  v25[5] = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v25[4] = (char *)v25 - v16;
  v25[7] = *(_QWORD *)(v13 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v25[8] = (char *)v25 - v19;
  v25[3] = *(_QWORD *)(v12 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v20);
  v28 = (char *)v25 - v21;
  v25[6] = v22;
  v23 = sub_23C19B7DC();
  v25[10] = *(_QWORD *)(v23 - 8);
  v25[11] = v23;
  MEMORY[0x24BDAC7A8](v23);
  v25[9] = (char *)v25 - v24;
  v29 = v26;
  v30 = a2;
  v31 = a3;
  v32 = a4;
  v33 = a5;
  v34 = a6;
  v26 = a6;
  type metadata accessor for ActivePlanBannerView();
}

uint64_t sub_23C163948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  int *v10;
  int *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v9 = v1 + *(int *)(a1 + 76);
  v10 = (int *)type metadata accessor for WorkoutPlanDetail();
  v11 = v10;
  if (*(_BYTE *)(v9 + v10[8]) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(v1 + 104))(*(_QWORD *)(v9 + v10[9]), *(_QWORD *)(v9 + v10[9] + 8));
    *(_QWORD *)(v7 - 176) = v3;
    *(_QWORD *)(v7 - 328) = MEMORY[0x2426189D0](MEMORY[0x24BDF5578], v5, v7 - 176);
    sub_23C1515F4(v4, v5, *(_QWORD *)(v7 - 224));
    v12 = *(_QWORD *)(v7 - 312);
    v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    *(_QWORD *)(v7 - 320) = v13;
    v13(v4, v5);
    (*(void (**)(uint64_t))(v1 + *(int *)(a1 + 80)))(v9 + v11[7]);
    v14 = *(_QWORD *)(v7 - 240);
    *(_QWORD *)(v7 - 184) = v14;
    v15 = MEMORY[0x2426189D0](MEMORY[0x24BDF5578], v2, v7 - 184);
    v16 = *(_QWORD *)(v7 - 272);
    sub_23C1515F4(v6, v2, v16);
    v17 = *(_QWORD *)(v7 - 280);
    v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v18(v6, v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v4, *(_QWORD *)(v7 - 224), v5);
    *(_QWORD *)(v7 - 136) = v4;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v6, v16, v2);
    *(_QWORD *)(v7 - 128) = v6;
    *(_QWORD *)(v7 - 200) = v5;
    *(_QWORD *)(v7 - 192) = v2;
    *(_QWORD *)(v7 - 216) = *(_QWORD *)(v7 - 328);
    *(_QWORD *)(v7 - 208) = v15;
    v19 = *(_QWORD *)(v7 - 304);
    sub_23C177BE8((uint64_t *)(v7 - 136), 2uLL, v7 - 200);
    v18(v6, v2);
    v20 = *(void (**)(uint64_t, uint64_t))(v7 - 320);
    v20(v4, v5);
    v21 = *(_QWORD *)(v7 - 288);
    MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v21);
    v22 = *(_QWORD *)(v7 - 264);
    sub_23C196708(v19, v21);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 296) + 8))(v19, v21);
    v18(v16, v2);
    v20(*(_QWORD *)(v7 - 224), v5);
  }
  else
  {
    (*(void (**)(uint64_t))(v1 + *(int *)(a1 + 80)))(v9 + v10[7]);
    v14 = *(_QWORD *)(v7 - 240);
    *(_QWORD *)(v7 - 144) = v14;
    MEMORY[0x2426189D0](MEMORY[0x24BDF5578], v2, v7 - 144);
    v23 = *(_QWORD *)(v7 - 272);
    sub_23C1515F4(v6, v2, v23);
    v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 280) + 8);
    v24(v6, v2);
    sub_23C1502B0(v23, v2, v6);
    v21 = *(_QWORD *)(v7 - 288);
    MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v21);
    v22 = *(_QWORD *)(v7 - 264);
    sub_23C1967CC(v6, v21, v2);
    v24(v6, v2);
    v24(v23, v2);
  }
  v25 = MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v21);
  *(_QWORD *)(v7 - 152) = v14;
  v26 = MEMORY[0x2426189D0](MEMORY[0x24BDF5578], v2, v7 - 152);
  *(_QWORD *)(v7 - 168) = v25;
  *(_QWORD *)(v7 - 160) = v26;
  v27 = *(_QWORD *)(v7 - 248);
  MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v27, v7 - 168);
  sub_23C1502B0(v22, v27, *(_QWORD *)(v7 - 232));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 256) + 8))(v22, v27);
}

uint64_t sub_23C163CA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C163CE4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C163CEC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WorkoutPlanDetail();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23C163D70(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    v3 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    v9 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v9;
    v10 = a2[14];
    v11 = *(int *)(a3 + 76);
    v12 = (char *)(a1 + v11);
    v13 = (char *)a2 + v11;
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v10;
    v14 = sub_23C19B53C();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v18 = (int *)type metadata accessor for WorkoutPlanDetail();
    v19 = v18[5];
    v20 = &v12[v19];
    v21 = &v13[v19];
    v22 = sub_23C19B4D0();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v25 = v18[6];
    v26 = &v12[v25];
    v27 = &v13[v25];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = v18[7];
    v30 = &v12[v29];
    v31 = &v13[v29];
    v32 = sub_23C19B500();
    v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    v33(v30, v31, v32);
    v12[v18[8]] = v13[v18[8]];
    v34 = v18[9];
    v35 = &v12[v34];
    v36 = &v13[v34];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = v18[10];
    v39 = &v12[v38];
    v40 = &v13[v38];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    v42 = v18[11];
    v43 = &v12[v42];
    v44 = &v13[v42];
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    v46 = *(int *)(a3 + 80);
    v47 = (_QWORD *)(v3 + v46);
    v48 = (uint64_t *)((char *)a2 + v46);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_23C164014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 76);
  v5 = sub_23C19B53C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = type metadata accessor for WorkoutPlanDetail();
  v8 = v4 + *(int *)(v7 + 20);
  v9 = sub_23C19B4D0();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v11 = v4 + *(int *)(v7 + 28);
  v12 = sub_23C19B500();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23C164160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  v8 = *(_QWORD *)(a2 + 112);
  v9 = *(int *)(a3 + 76);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  v12 = sub_23C19B53C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = (int *)type metadata accessor for WorkoutPlanDetail();
  v17 = v16[5];
  v18 = &v10[v17];
  v19 = &v11[v17];
  v20 = sub_23C19B4D0();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = v16[6];
  v24 = &v10[v23];
  v25 = &v11[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v27 = v16[7];
  v28 = &v10[v27];
  v29 = &v11[v27];
  v30 = sub_23C19B500();
  v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  swift_bridgeObjectRetain();
  v31(v28, v29, v30);
  v10[v16[8]] = v11[v16[8]];
  v32 = v16[9];
  v33 = &v10[v32];
  v34 = &v11[v32];
  v35 = *((_QWORD *)v34 + 1);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = v35;
  v36 = v16[10];
  v37 = &v10[v36];
  v38 = &v11[v36];
  v39 = *((_QWORD *)v38 + 1);
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = v39;
  v40 = v16[11];
  v41 = &v10[v40];
  v42 = &v11[v40];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = v43;
  v44 = *(int *)(a3 + 80);
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_23C1643DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  v7 = a2[14];
  a1[13] = a2[13];
  a1[14] = v7;
  swift_retain();
  swift_release();
  v49 = a3;
  v8 = *(int *)(a3 + 76);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23C19B53C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v17 = (int *)type metadata accessor for WorkoutPlanDetail();
  v18 = v17[5];
  v19 = &v9[v18];
  v48 = v10;
  v20 = &v10[v18];
  v21 = sub_23C19B4D0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  v27 = v17[6];
  v28 = &v9[v27];
  v29 = &v48[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v17[7];
  v31 = &v9[v30];
  v32 = &v48[v30];
  v33 = sub_23C19B500();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  v9[v17[8]] = v48[v17[8]];
  v34 = v17[9];
  v35 = &v9[v34];
  v36 = &v48[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v17[10];
  v38 = &v9[v37];
  v39 = &v48[v37];
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = v17[11];
  v41 = &v9[v40];
  v42 = &v48[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = *(int *)(v49 + 80);
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (_QWORD *)((char *)a2 + v43);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23C164780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = *(int *)(a3 + 76);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v12 = sub_23C19B53C();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = (int *)type metadata accessor for WorkoutPlanDetail();
  v16 = v15[5];
  v17 = &v10[v16];
  v18 = &v11[v16];
  v19 = sub_23C19B4D0();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(_OWORD *)&v10[v15[6]] = *(_OWORD *)&v11[v15[6]];
  v22 = v15[7];
  v23 = &v10[v22];
  v24 = &v11[v22];
  v25 = sub_23C19B500();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v10[v15[8]] = v11[v15[8]];
  *(_OWORD *)&v10[v15[9]] = *(_OWORD *)&v11[v15[9]];
  *(_OWORD *)&v10[v15[10]] = *(_OWORD *)&v11[v15[10]];
  *(_OWORD *)&v10[v15[11]] = *(_OWORD *)&v11[v15[11]];
  *(_OWORD *)(a1 + *(int *)(a3 + 80)) = *(_OWORD *)(a2 + *(int *)(a3 + 80));
  return a1;
}

uint64_t sub_23C164978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  size_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v51;
  uint64_t v52;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  v52 = a3;
  v7 = *(int *)(a3 + 76);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = sub_23C19B53C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = (int *)type metadata accessor for WorkoutPlanDetail();
  v17 = v16[5];
  v18 = &v8[v17];
  v19 = &v9[v17];
  v20 = sub_23C19B4D0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v51 = v18;
  LODWORD(v18) = v22(v18, 1, v20);
  v23 = v22(v19, 1, v20);
  if ((_DWORD)v18)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v51, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v51, 0, 1, v20);
      goto LABEL_16;
    }
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8) - 8) + 64);
    v25 = v51;
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v51, v19, v20);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v51, v20);
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8) - 8) + 64);
    v25 = v51;
  }
  memcpy(v25, v19, v24);
LABEL_16:
  v26 = v16[6];
  v27 = &v8[v26];
  v28 = &v9[v26];
  v30 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  v31 = v16[7];
  v32 = &v8[v31];
  v33 = &v9[v31];
  v34 = sub_23C19B500();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v8[v16[8]] = v9[v16[8]];
  v35 = v16[9];
  v36 = &v8[v35];
  v37 = &v9[v35];
  v39 = *(_QWORD *)v37;
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = v39;
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  v40 = v16[10];
  v41 = &v8[v40];
  v42 = &v9[v40];
  v44 = *(_QWORD *)v42;
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = v44;
  *((_QWORD *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  v45 = v16[11];
  v46 = &v8[v45];
  v47 = &v9[v45];
  v49 = *(_QWORD *)v47;
  v48 = *((_QWORD *)v47 + 1);
  *(_QWORD *)v46 = v49;
  *((_QWORD *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + *(int *)(v52 + 80)) = *(_OWORD *)(a2 + *(int *)(v52 + 80));
  swift_release();
  return a1;
}

uint64_t sub_23C164CA8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C164CB4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for WorkoutPlanDetail();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 76)], a2, v8);
  }
}

uint64_t sub_23C164D30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23C164D3C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for WorkoutPlanDetail();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 76)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23C164DB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[6];

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = sub_23C19B680();
  v21[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30848);
  v21[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30850);
  v21[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30858);
  v21[4] = MEMORY[0x24BDF4638];
  sub_23C19BEFC();
  v4 = sub_23C19BEFC();
  swift_getTupleTypeMetadata2();
  v5 = sub_23C19BD34();
  v6 = sub_23C19B7DC();
  v7 = MEMORY[0x24BDF5428];
  v21[0] = v2;
  v20[0] = MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v5);
  v20[1] = MEMORY[0x2426189D0](MEMORY[0x24BDF5578], v4, v21);
  MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v6, v20);
  sub_23C19BC68();
  v21[5] = sub_23C19B680();
  swift_getTupleTypeMetadata();
  v8 = sub_23C19BD34();
  MEMORY[0x2426189D0](v7, v8);
  v9 = sub_23C19BC68();
  v10 = sub_23C19B680();
  v19[0] = MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v9);
  v19[1] = MEMORY[0x24BDECC60];
  v11 = MEMORY[0x24BDED308];
  MEMORY[0x2426189D0](MEMORY[0x24BDED308], v10, v19);
  v12 = sub_23C19B6D4();
  v13 = sub_23C19B680();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30860);
  v14 = sub_23C19B680();
  v18[0] = v1;
  v18[1] = MEMORY[0x24BDEEC40];
  v17[0] = MEMORY[0x2426189D0](v11, v3, v18);
  v17[1] = MEMORY[0x2426189D0](MEMORY[0x24BDEDC10], v12);
  v16[0] = MEMORY[0x2426189D0](v11, v13, v17);
  v16[1] = sub_23C15159C(qword_256B30868, &qword_256B30860, MEMORY[0x24BDEB950]);
  return MEMORY[0x2426189D0](v11, v14, v16);
}

uint64_t sub_23C165060()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C165068()
{
  return swift_release();
}

uint64_t sub_23C165070(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v4;
  swift_retain();
  return a1;
}

_QWORD *sub_23C1650BC(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t sub_23C165174(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t sub_23C1651D0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C165218(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ActivePlanBannerView.Layout()
{
  JUMPOUT(0x242618934);
}

uint64_t sub_23C165278()
{
  return sub_23C1652E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C162E0C);
}

unint64_t sub_23C165284()
{
  unint64_t result;

  result = qword_256B30970;
  if (!qword_256B30970)
  {
    result = MEMORY[0x2426189D0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256B30970);
  }
  return result;
}

uint64_t sub_23C1652D8()
{
  return sub_23C1652E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C163774);
}

uint64_t sub_23C1652E4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_23C1652FC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

unint64_t sub_23C16530C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B30980;
  if (!qword_256B30980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30988);
    v2[0] = sub_23C165390();
    v2[1] = sub_23C15159C(&qword_256B309B0, &qword_256B309B8, MEMORY[0x24BDF0710]);
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B30980);
  }
  return result;
}

unint64_t sub_23C165390()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256B30990;
  if (!qword_256B30990)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30998);
    v2 = sub_23C15159C(&qword_256B309A0, &qword_256B309A8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B30990);
  }
  return result;
}

uint64_t sub_23C165414(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_23C15159C(&qword_256B309C0, &qword_256B309C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C165498()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B309D8;
  if (!qword_256B309D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30858);
    v2[0] = sub_23C165414(&qword_256B309D0, &qword_256B30850, (uint64_t (*)(void))sub_23C165390);
    v2[1] = sub_23C15159C(&qword_256B309E0, qword_256B309E8, MEMORY[0x24BDF0710]);
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B309D8);
  }
  return result;
}

uint64_t sub_23C165534(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_23C165544()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30A70);
  sub_23C1664A4();
  return sub_23C19B5D8();
}

uint64_t WorkoutPlanBannerView.init(store:activePlanBannerViewBuilder:createPlanBannerViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a7 = sub_23C1503C4;
  *(_QWORD *)(a7 + 8) = result;
  *(_BYTE *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 24) = a3;
  *(_QWORD *)(a7 + 32) = a4;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_23C165610()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t WorkoutPlanBannerView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t OpaqueTypeConformance2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  _QWORD v36[2];
  uint64_t v37;
  _QWORD v38[2];
  _QWORD v39[4];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v30 = a2;
  v5 = a1[4];
  *(_QWORD *)&v40 = a1[2];
  v4 = v40;
  *((_QWORD *)&v40 + 1) = v5;
  MEMORY[0x24261897C](255, &v40, MEMORY[0x24BDF3948], 0);
  v25 = a1[3];
  v6 = v25;
  v26 = sub_23C19B7DC();
  v7 = sub_23C19B7DC();
  v8 = sub_23C19BBC0();
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - v9;
  v27 = sub_23C19B680();
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v12 = (char *)&v25 - v11;
  v13 = v2[1];
  v40 = *v2;
  v41 = v13;
  v42 = v2[2];
  v43 = *((_QWORD *)v2 + 6);
  v31 = v4;
  v32 = v6;
  v14 = a1[5];
  v33 = v5;
  v34 = v14;
  v35 = &v40;
  v39[2] = v4;
  v39[3] = v5;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v39[0] = v5;
  v39[1] = v14;
  v16 = MEMORY[0x24BDEF3E0];
  v17 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v26, v39);
  v38[0] = OpaqueTypeConformance2;
  v38[1] = v17;
  v18 = MEMORY[0x2426189D0](v16, v7, v38);
  sub_23C19BBB4();
  v19 = swift_allocObject();
  v20 = v25;
  *(_QWORD *)(v19 + 16) = v4;
  *(_QWORD *)(v19 + 24) = v20;
  *(_QWORD *)(v19 + 32) = v5;
  *(_QWORD *)(v19 + 40) = v14;
  v21 = v41;
  *(_OWORD *)(v19 + 48) = v40;
  *(_OWORD *)(v19 + 64) = v21;
  *(_OWORD *)(v19 + 80) = v42;
  *(_QWORD *)(v19 + 96) = v43;
  sub_23C160D7C((uint64_t)&v40);
  v37 = v18;
  v22 = MEMORY[0x2426189D0](MEMORY[0x24BDF3F50], v8, &v37);
  sub_23C19BB30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  v36[0] = v22;
  v36[1] = MEMORY[0x24BDF0910];
  v23 = v27;
  MEMORY[0x2426189D0](MEMORY[0x24BDED308], v27, v36);
  sub_23C19B9BC();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v23);
}

void sub_23C165908(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t State;
  uint64_t v28;
  __int128 v29;
  _QWORD v30[7];
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD v56[3];
  uint64_t v57;

  v50 = a6;
  v51 = a5;
  v30[1] = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v30[4] = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v30[3] = (char *)v30 - v12;
  v43 = type metadata accessor for WorkoutPlanDetail();
  v34 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v30[2] = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23C19B7DC();
  v38 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v37 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v36 = (char *)v30 - v17;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v41 = *(_QWORD *)(v42 - 8);
  v18 = MEMORY[0x24BDAC7A8](v42);
  v32 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v31 = sub_23C19B6BC();
  v30[6] = *(_QWORD *)(v31 - 8);
  v20 = MEMORY[0x24BDAC7A8](v31);
  v39 = *(_QWORD *)(a2 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v30[0] = (char *)v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v40 = (char *)v30 - v23;
  *(_QWORD *)&v56[0] = a2;
  *((_QWORD *)&v56[0] + 1) = a4;
  v24 = MEMORY[0x24261897C](0, v56, MEMORY[0x24BDF3948], 0);
  v30[5] = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v25);
  v33 = (char *)v30 - v26;
  State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x24BDAC7A8](State);
  v44 = v24;
  v48 = v14;
  v47 = sub_23C19B7DC();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v45 = (char *)v30 - v28;
  v29 = *(_OWORD *)(a1 + 16);
  v56[0] = *(_OWORD *)a1;
  v56[1] = v29;
  v56[2] = *(_OWORD *)(a1 + 32);
  v57 = *(_QWORD *)(a1 + 48);
  v52 = a2;
  v53 = a3;
  v35 = a3;
  v49 = a4;
  v54 = a4;
  v55 = v51;
  type metadata accessor for WorkoutPlanBannerView();
}

uint64_t sub_23C165CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23C165544();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 328) + 48))(v0, 1, *(_QWORD *)(v6 - 320)) == 1)
  {
    v7 = *(_QWORD *)(v6 - 312);
    v8 = *(void (**)(uint64_t))(v5 + 24);
    if (qword_256B2FD10 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v7, (uint64_t)qword_256B30618);
    v10 = *(_QWORD *)(v6 - 336);
    v8(v9);
    sub_23C19B6B0();
    v11 = *(_QWORD *)(v6 - 264);
    sub_23C19BB54();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 416) + 8))(v4, *(_QWORD *)(v6 - 408));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 344) + 8))(v10, v1);
    *(_QWORD *)(v6 - 144) = v1;
    *(_QWORD *)(v6 - 136) = v11;
    swift_getOpaqueTypeConformance2();
    v12 = *(_QWORD *)(v6 - 392);
    v13 = *(_QWORD *)(v6 - 304);
    sub_23C1515F4(v3, v13, v12);
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 424) + 8);
    v14(v3, v13);
    sub_23C1502B0(v12, v13, v3);
    v15 = *(_QWORD *)(v6 - 248);
    *(_QWORD *)(v6 - 240) = v11;
    *(_QWORD *)(v6 - 232) = v15;
    v16 = *(_QWORD *)(v6 - 272);
    MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v16, v6 - 240);
    v17 = *(_QWORD *)(v6 - 296);
    sub_23C196708(v3, v13);
    v14(v3, v13);
    v14(v12, v13);
  }
  else
  {
    sub_23C156708(v0, v2);
    v18 = *(_QWORD *)(v6 - 400);
    sub_23C156750(v2, v18);
    v19 = v2;
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 384) + 48))(v18, 1, *(_QWORD *)(v6 - 312)) == 1)
    {
      v20 = sub_23C156818(v18);
      v21 = *(_QWORD *)(v6 - 432);
      (*(void (**)(uint64_t))(v5 + 40))(v20);
      v22 = *(_QWORD *)(v6 - 440);
      v23 = *(_QWORD *)(v6 - 376);
      v15 = *(_QWORD *)(v6 - 248);
      sub_23C1515F4(v21, v23, v22);
      v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 456) + 8);
      v24(v21, v23);
      sub_23C1502B0(v22, v23, v21);
      v29 = *(_QWORD *)(v6 - 368);
      v11 = *(_QWORD *)(v6 - 264);
      sub_23C1967CC(v21, v1, v23);
      v24(v21, v23);
      v24(v22, v23);
    }
    else
    {
      v25 = *(_QWORD *)(v6 - 448);
      sub_23C162454(v18, v25);
      v26 = *(_QWORD *)(v6 - 464);
      (*(void (**)(uint64_t))(v5 + 24))(v25);
      v27 = *(_QWORD *)(v6 - 336);
      v11 = *(_QWORD *)(v6 - 264);
      sub_23C1515F4(v26, v1, v27);
      v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 344) + 8);
      v28(v26, v1);
      sub_23C1502B0(v27, v1, v26);
      v29 = *(_QWORD *)(v6 - 368);
      v15 = *(_QWORD *)(v6 - 248);
      sub_23C196708(v26, v1);
      v28(v26, v1);
      v28(v27, v1);
      sub_23C1664F0(v25, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
    }
    v16 = *(_QWORD *)(v6 - 272);
    v17 = *(_QWORD *)(v6 - 296);
    *(_QWORD *)(v6 - 192) = v11;
    *(_QWORD *)(v6 - 184) = v15;
    MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v16, v6 - 192);
    v30 = *(_QWORD *)(v6 - 360);
    sub_23C1502B0(v29, v16, v30);
    *(_QWORD *)(v6 - 144) = v1;
    *(_QWORD *)(v6 - 136) = v11;
    swift_getOpaqueTypeConformance2();
    sub_23C1967CC(v30, *(_QWORD *)(v6 - 304), v16);
    v31 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 352) + 8);
    v31(v30, v16);
    v31(v29, v16);
    sub_23C156818(v19);
  }
  *(_QWORD *)(v6 - 144) = v1;
  *(_QWORD *)(v6 - 136) = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v6 - 208) = v11;
  *(_QWORD *)(v6 - 200) = v15;
  v33 = MEMORY[0x24BDEF3E0];
  v34 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v16, v6 - 208);
  *(_QWORD *)(v6 - 224) = OpaqueTypeConformance2;
  *(_QWORD *)(v6 - 216) = v34;
  v35 = *(_QWORD *)(v6 - 280);
  MEMORY[0x2426189D0](v33, v35, v6 - 224);
  sub_23C1502B0(v17, v35, *(_QWORD *)(v6 - 256));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 288) + 8))(v17, v35);
}

void sub_23C1661B0(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_23C165908(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_23C1661C0()
{
  uint64_t v0;

  v0 = type metadata accessor for WorkoutPlanBannerAction();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for WorkoutPlanBannerView();
}

uint64_t sub_23C166258()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_23C165544();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  sub_23C19BDA0();
  swift_release();
  return sub_23C1664F0(v1, v0);
}

uint64_t sub_23C1662C4()
{
  sub_23C151164();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23C1662FC()
{
  sub_23C1661C0();
}

uint64_t sub_23C16630C()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for WorkoutPlanBannerView()
{
  JUMPOUT(0x242618934);
}

uint64_t sub_23C16634C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  _QWORD v11[2];
  uint64_t v12;
  _QWORD v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v15 = *a1;
  v1 = v15;
  v10 = *((_OWORD *)a1 + 1);
  v16 = a1[2];
  MEMORY[0x24261897C](255, &v15, MEMORY[0x24BDF3948], 0);
  v2 = sub_23C19B7DC();
  v3 = sub_23C19B7DC();
  v4 = sub_23C19BBC0();
  v5 = sub_23C19B680();
  v15 = v1;
  v16 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v14 = v10;
  v7 = MEMORY[0x24BDEF3E0];
  v13[0] = OpaqueTypeConformance2;
  v13[1] = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v2, &v14);
  v12 = MEMORY[0x2426189D0](v7, v3, v13);
  v11[0] = MEMORY[0x2426189D0](MEMORY[0x24BDF3F50], v4, &v12);
  v11[1] = MEMORY[0x24BDF0910];
  v8 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v5, v11);
  v15 = v5;
  v16 = v8;
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23C1664A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B30A78;
  if (!qword_256B30A78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30A70);
    result = MEMORY[0x2426189D0](MEMORY[0x24BE2B5E8], v1);
    atomic_store(result, (unint64_t *)&qword_256B30A78);
  }
  return result;
}

uint64_t sub_23C1664F0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

__n128 OfflineFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

uint64_t OfflineFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t *a4)
{
  __int128 *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t result;
  uint64_t v23;
  int *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t);
  void (*v33)(_QWORD);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, char *, uint64_t);
  unint64_t *v38;
  char *v39;
  char *v40;
  char *v41;
  _OWORD *v42;
  __int128 v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  BOOL v49;
  int *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, _QWORD, uint64_t);
  uint64_t v68;
  unint64_t v69;
  unsigned int v70;
  void (*v71)(char *, uint64_t, uint64_t);
  unsigned int v72;
  void (*v73)(char *, _QWORD, uint64_t);
  unint64_t v74;
  unint64_t *v75;
  char v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v75 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30508);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v67 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v67 - v15;
  v18 = *a4;
  v17 = a4[1];
  v19 = a4[2];
  v20 = v4[1];
  v77 = *v4;
  v78 = v20;
  v79 = v4[2];
  if (v17)
  {
    if (v17 == 1)
    {
      v47 = a2 + *(int *)(type metadata accessor for OfflineState() + 20);
      v48 = *(_QWORD *)(v47 + 8);
      if (v48 <= 2)
      {
        *(_OWORD *)v47 = xmmword_23C19ED50;
        *(_QWORD *)(v47 + 16) = 0;
      }
      v49 = v48 > 2;
      v50 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B30468);
      v51 = &v11[v50[16]];
      v52 = &v11[v50[20]];
      v53 = &v11[v50[24]];
      v76 = 1;
      sub_23C166B74();
      sub_23C19BF2C();
      sub_23C19BE84();
      v54 = *MEMORY[0x24BE2B570];
      v55 = sub_23C19BD88();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v51, v54, v55);
      v56 = *MEMORY[0x24BE2B550];
      v57 = sub_23C19BD7C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v52, v56, v57);
      v58 = swift_allocObject();
      v59 = v78;
      *(_OWORD *)(v58 + 16) = v77;
      *(_OWORD *)(v58 + 32) = v59;
      *(_OWORD *)(v58 + 48) = v79;
      *(_BYTE *)(v58 + 64) = v49;
      *(_QWORD *)v53 = &unk_256B30A90;
      *((_QWORD *)v53 + 1) = v58;
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BE2B438], v7);
      v60 = v75;
      v61 = *v75;
      sub_23C167C1C((uint64_t)&v77);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v61 = sub_23C15AFE4(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
      v63 = *(_QWORD *)(v61 + 16);
      v62 = *(_QWORD *)(v61 + 24);
      if (v63 >= v62 >> 1)
        v61 = sub_23C15AFE4(v62 > 1, v63 + 1, 1, v61);
      *(_QWORD *)(v61 + 16) = v63 + 1;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(v61+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v63, v11, v7);
      *v60 = v61;
    }
    else if (v17 == 2)
    {
      v21 = (uint64_t *)(a2 + *(int *)(type metadata accessor for OfflineState() + 20));
      result = sub_23C14D790(*v21, v21[1]);
      *(_OWORD *)v21 = xmmword_23C19ED40;
      v21[2] = 0;
    }
    else
    {
      v64 = (uint64_t *)(a2 + *(int *)(type metadata accessor for OfflineState() + 20));
      v65 = *v64;
      v66 = v64[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = sub_23C14D790(v65, v66);
      *v64 = v18;
      v64[1] = v17;
      v64[2] = v19;
    }
  }
  else
  {
    result = type metadata accessor for OfflineState();
    v23 = a2 + *(int *)(result + 20);
    if (!*(_QWORD *)(v23 + 8))
    {
      *(_OWORD *)v23 = xmmword_23C19ED50;
      *(_QWORD *)(v23 + 16) = 0;
      v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B30468);
      v25 = &v16[v24[16]];
      v26 = &v16[v24[20]];
      v27 = &v16[v24[24]];
      v76 = 0;
      v74 = sub_23C166B74();
      sub_23C19BF2C();
      sub_23C19BE84();
      v28 = *MEMORY[0x24BE2B580];
      v29 = sub_23C19BD88();
      v71 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104);
      v71(v25, v28, v29);
      v30 = *MEMORY[0x24BE2B550];
      v31 = sub_23C19BD7C();
      v32 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104);
      v70 = v30;
      v67 = v32;
      v32(v26, v30, v31);
      *(_QWORD *)v27 = &unk_256B30A98;
      *((_QWORD *)v27 + 1) = 0;
      v33 = *(void (**)(_QWORD))(v8 + 104);
      v72 = *MEMORY[0x24BE2B438];
      v73 = (void (*)(char *, _QWORD, uint64_t))v33;
      v33(v16);
      v34 = *v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_23C15AFE4(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
      v36 = *(_QWORD *)(v34 + 16);
      v35 = *(_QWORD *)(v34 + 24);
      if (v36 >= v35 >> 1)
        v34 = sub_23C15AFE4(v35 > 1, v36 + 1, 1, v34);
      *(_QWORD *)(v34 + 16) = v36 + 1;
      v69 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v68 = *(_QWORD *)(v8 + 72);
      v37 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
      v37(v34 + v69 + v68 * v36, v16, v7);
      v38 = v75;
      *v75 = v34;
      v39 = &v14[v24[16]];
      v40 = &v14[v24[20]];
      v41 = &v14[v24[24]];
      v76 = 2;
      sub_23C19BF2C();
      sub_23C19BE84();
      v71(v39, *MEMORY[0x24BE2B570], v29);
      v67(v40, v70, v31);
      v42 = (_OWORD *)swift_allocObject();
      v43 = v78;
      v42[1] = v77;
      v42[2] = v43;
      v42[3] = v79;
      *(_QWORD *)v41 = &unk_256B30AA8;
      *((_QWORD *)v41 + 1) = v42;
      v73(v14, v72, v7);
      v44 = *v38;
      sub_23C167C1C((uint64_t)&v77);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v44 = sub_23C15AFE4(0, *(_QWORD *)(v44 + 16) + 1, 1, v44);
      v46 = *(_QWORD *)(v44 + 16);
      v45 = *(_QWORD *)(v44 + 24);
      if (v46 >= v45 >> 1)
        v44 = sub_23C15AFE4(v45 > 1, v46 + 1, 1, v44);
      *(_QWORD *)(v44 + 16) = v46 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v37)(v44 + v69 + v46 * v68, v14, v7);
      *v38 = v44;
    }
  }
  return result;
}

unint64_t sub_23C166B74()
{
  unint64_t result;

  result = qword_256B30A80;
  if (!qword_256B30A80)
  {
    result = MEMORY[0x2426189D0](&unk_23C19EE28, &type metadata for OfflineFeature.TaskIdentifier);
    atomic_store(result, &qword_256B30A80);
  }
  return result;
}

uint64_t sub_23C166BB8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = sub_23C19BE78();
  *(_QWORD *)(v0 + 48) = sub_23C19BE6C();
  *(_OWORD *)(v0 + 16) = xmmword_23C19ED50;
  *(_QWORD *)(v0 + 32) = 0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30AD0);
  *v1 = v0;
  v1[1] = sub_23C166C54;
  return sub_23C19BD70();
}

uint64_t sub_23C166C54()
{
  swift_task_dealloc();
  sub_23C19BE54();
  return swift_task_switch();
}

uint64_t sub_23C166CC4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C166CF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  v2[15] = a1;
  v2[16] = sub_23C19BE78();
  v2[17] = sub_23C19BE6C();
  v6 = (uint64_t (*)(_QWORD *))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v2[18] = v4;
  *v4 = v2;
  v4[1] = sub_23C166D80;
  return v6(v2 + 7);
}

uint64_t sub_23C166D80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 160) = sub_23C19BE54();
  *(_QWORD *)(v2 + 168) = v3;
  return swift_task_switch();
}

uint64_t sub_23C166E0C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[10];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_23C19BECC();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v0[22] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[23] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23C166F6C;
  return sub_23C19BE60();
}

uint64_t sub_23C166F6C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C166FC0()
{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 200) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_OWORD *)(v0 + 96) = xmmword_23C19ED50;
    *(_QWORD *)(v0 + 112) = 0;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B30AD0);
    *v2 = v0;
    v2[1] = sub_23C16707C;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C16707C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C1670C8()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[22] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[23] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C166F6C;
  return sub_23C19BE60();
}

uint64_t sub_23C16716C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C1671A0(uint64_t a1, int **a2, char a3)
{
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  *(_BYTE *)(v3 + 256) = a3;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = sub_23C19BE78();
  *(_QWORD *)(v3 + 144) = sub_23C19BE6C();
  v5 = *a2;
  *(_OWORD *)(v3 + 152) = *((_OWORD *)a2 + 2);
  v8 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 168) = v6;
  *v6 = v3;
  v6[1] = sub_23C167234;
  return v8(v3 + 16);
}

uint64_t sub_23C167234()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  v3 = sub_23C19BE54();
  if (!v0)
  {
    *(_QWORD *)(v2 + 184) = v3;
    *(_QWORD *)(v2 + 192) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_23C1672BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)();
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 200) = v2;
  *(_QWORD *)(v0 + 208) = v4;
  sub_23C19BEC0();
  *(_QWORD *)(v0 + 216) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 240) = v1;
    if (qword_256B2FCF0 != -1)
      swift_once();
    v5 = sub_23C19B578();
    __swift_project_value_buffer(v5, (uint64_t)qword_256B404C0);
    MEMORY[0x2426188E0](v1);
    MEMORY[0x2426188E0](v1);
    v6 = sub_23C19B560();
    v7 = sub_23C19BEF0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v15 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue();
      v10 = sub_23C19C0A0();
      *(_QWORD *)(v0 + 120) = sub_23C19AD80(v10, v11, &v15);
      sub_23C19BF08();
      swift_bridgeObjectRelease();
      MEMORY[0x2426188D4](v1);
      MEMORY[0x2426188D4](v1);
      _os_log_impl(&dword_23C14B000, v6, v7, "Failed to fetched descriptor with error: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242618A48](v9, -1, -1);
      MEMORY[0x242618A48](v8, -1, -1);
    }
    else
    {
      MEMORY[0x2426188D4](v1);
      MEMORY[0x2426188D4](v1);
    }

    *(_OWORD *)(v0 + 40) = xmmword_23C19ED40;
    *(_QWORD *)(v0 + 56) = 0;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B30AD0);
    v13 = sub_23C1678D8;
  }
  else
  {
    *(_QWORD *)(v0 + 88) = v3;
    *(_QWORD *)(v0 + 96) = v2;
    *(_QWORD *)(v0 + 104) = v4;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B30AD0);
    v13 = sub_23C16754C;
  }
  *v12 = v0;
  v12[1] = v13;
  return sub_23C19BD70();
}

uint64_t sub_23C16754C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23C1675B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(void);
  _QWORD *v11;
  uint64_t (*v13)(void);
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 216);
  sub_23C19BEC0();
  if (v1)
  {
    *(_QWORD *)(v0 + 240) = v1;
    if (qword_256B2FCF0 != -1)
      swift_once();
    v2 = sub_23C19B578();
    __swift_project_value_buffer(v2, (uint64_t)qword_256B404C0);
    MEMORY[0x2426188E0](v1);
    MEMORY[0x2426188E0](v1);
    v3 = sub_23C19B560();
    v4 = sub_23C19BEF0();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v14 = v6;
      *(_DWORD *)v5 = 136315138;
      swift_getErrorValue();
      v7 = sub_23C19C0A0();
      *(_QWORD *)(v0 + 120) = sub_23C19AD80(v7, v8, &v14);
      sub_23C19BF08();
      swift_bridgeObjectRelease();
      MEMORY[0x2426188D4](v1);
      MEMORY[0x2426188D4](v1);
      _os_log_impl(&dword_23C14B000, v3, v4, "Failed to fetched descriptor with error: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242618A48](v6, -1, -1);
      MEMORY[0x242618A48](v5, -1, -1);
    }
    else
    {
      MEMORY[0x2426188D4](v1);
      MEMORY[0x2426188D4](v1);
    }

    *(_OWORD *)(v0 + 40) = xmmword_23C19ED40;
    *(_QWORD *)(v0 + 56) = 0;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B30AD0);
    *v11 = v0;
    v11[1] = sub_23C1678D8;
    return sub_23C19BD70();
  }
  else
  {
    if (*(_BYTE *)(v0 + 256) == 1)
    {
      v13 = (uint64_t (*)(void))(**(int **)(v0 + 152) + *(_QWORD *)(v0 + 152));
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 232) = v9;
      *v9 = v0;
      v9[1] = sub_23C167858;
      v10 = v13;
    }
    else
    {
      swift_release();
      v10 = *(uint64_t (**)(void))(v0 + 8);
    }
    return v10();
  }
}

uint64_t sub_23C167858()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C1678A4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C1678D8()
{
  swift_task_dealloc();
  sub_23C19BE54();
  return swift_task_switch();
}

uint64_t sub_23C167948()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release();
  MEMORY[0x2426188D4](v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C167988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 240) = v1;
  if (qword_256B2FCF0 != -1)
    swift_once();
  v2 = sub_23C19B578();
  __swift_project_value_buffer(v2, (uint64_t)qword_256B404C0);
  MEMORY[0x2426188E0](v1);
  MEMORY[0x2426188E0](v1);
  v3 = sub_23C19B560();
  v4 = sub_23C19BEF0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_getErrorValue();
    v7 = sub_23C19C0A0();
    *(_QWORD *)(v0 + 120) = sub_23C19AD80(v7, v8, &v11);
    sub_23C19BF08();
    swift_bridgeObjectRelease();
    MEMORY[0x2426188D4](v1);
    MEMORY[0x2426188D4](v1);
    _os_log_impl(&dword_23C14B000, v3, v4, "Failed to fetched descriptor with error: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242618A48](v6, -1, -1);
    MEMORY[0x242618A48](v5, -1, -1);
  }
  else
  {
    MEMORY[0x2426188D4](v1);
    MEMORY[0x2426188D4](v1);
  }

  *(_OWORD *)(v0 + 40) = xmmword_23C19ED40;
  *(_QWORD *)(v0 + 56) = 0;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30AD0);
  *v9 = v0;
  v9[1] = sub_23C1678D8;
  return sub_23C19BD70();
}

uint64_t sub_23C167BB0()
{
  return objectdestroyTm();
}

uint64_t sub_23C167BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int **v4;
  char v5;
  _QWORD *v6;

  v4 = (int **)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23C168174;
  return sub_23C1671A0(a1, v4, v5);
}

uint64_t sub_23C167C1C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C167C6C()
{
  return objectdestroyTm();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C167CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C15AB44;
  return sub_23C166CF8(a1, v1 + 16);
}

unint64_t sub_23C167D0C()
{
  unint64_t result;

  result = qword_256B30AB0;
  if (!qword_256B30AB0)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineAction, &type metadata for OfflineAction);
    atomic_store(result, (unint64_t *)&qword_256B30AB0);
  }
  return result;
}

unint64_t sub_23C167D54()
{
  unint64_t result;

  result = qword_256B30AB8;
  if (!qword_256B30AB8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineAction, &type metadata for OfflineAction);
    atomic_store(result, (unint64_t *)&qword_256B30AB8);
  }
  return result;
}

unint64_t sub_23C167D9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B30AC0;
  if (!qword_256B30AC0)
  {
    v1 = type metadata accessor for OfflineState();
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineState, v1);
    atomic_store(result, (unint64_t *)&qword_256B30AC0);
  }
  return result;
}

uint64_t destroy for OfflineEnvironment()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for OfflineEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for OfflineEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for OfflineEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineFeature()
{
  return &type metadata for OfflineFeature;
}

uint64_t storeEnumTagSinglePayload for OfflineFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C168048 + 4 * byte_23C19ED6D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C16807C + 4 * byte_23C19ED68[v4]))();
}

uint64_t sub_23C16807C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C168084(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C16808CLL);
  return result;
}

uint64_t sub_23C168098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C1680A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C1680A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C1680AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineFeature.TaskIdentifier()
{
  return &type metadata for OfflineFeature.TaskIdentifier;
}

unint64_t sub_23C1680CC()
{
  unint64_t result;

  result = qword_256B30AC8;
  if (!qword_256B30AC8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19EE00, &type metadata for OfflineFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B30AC8);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t LibraryState.init(focusedLibraryPage:libraryLayout:locale:isShowingCreateBanner:isSidebarVisible:)@<X0>(char a1@<W0>, __int16 *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, _BYTE *a6@<X8>)
{
  __int16 v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t result;

  v11 = *a2;
  v12 = (int *)type metadata accessor for LibraryState();
  v13 = v12[7];
  v14 = v12[8];
  *a6 = a1;
  *(_WORD *)&a6[v12[6]] = v11;
  v15 = &a6[v12[5]];
  v16 = sub_23C19B524();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a3, v16);
  a6[v13] = a4;
  a6[v14] = a5;
  return result;
}

uint64_t type metadata accessor for LibraryState()
{
  uint64_t result;

  result = qword_256B30B68;
  if (!qword_256B30B68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LibraryState.focusedLibraryPage.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t LibraryState.focusedLibraryPage.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*LibraryState.focusedLibraryPage.modify())()
{
  return nullsub_1;
}

uint64_t LibraryState.layout.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LibraryState();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t LibraryState.isShowingCreateBanner.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LibraryState() + 28));
}

uint64_t LibraryState.isShowingCreateBanner.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LibraryState();
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*LibraryState.isShowingCreateBanner.modify())()
{
  type metadata accessor for LibraryState();
  return nullsub_1;
}

uint64_t LibraryState.isSidebarVisible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LibraryState() + 32));
}

uint64_t LibraryState.isSidebarVisible.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LibraryState();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*LibraryState.isSidebarVisible.modify())()
{
  type metadata accessor for LibraryState();
  return nullsub_1;
}

uint64_t sub_23C16837C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C1683B8 + 4 * byte_23C19EE68[a1]))(0xD000000000000012, 0x800000023C1A4420);
}

uint64_t sub_23C1683B8()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23C1683CC()
{
  return 0x74756F79616CLL;
}

uint64_t sub_23C1683E0()
{
  uint64_t v0;

  return v0 + 5;
}

unint64_t sub_23C1683F8()
{
  return 0xD000000000000010;
}

uint64_t sub_23C168414()
{
  unsigned __int8 *v0;

  return sub_23C16837C(*v0);
}

uint64_t sub_23C16841C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C1695EC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C168440(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23C16844C()
{
  sub_23C1688F0();
  return sub_23C19C0F4();
}

uint64_t sub_23C168474()
{
  sub_23C1688F0();
  return sub_23C19C100();
}

uint64_t LibraryState.withLayout(_:)@<X0>(__int16 *a1@<X0>, _BYTE *a2@<X8>)
{
  char *v2;
  __int16 v4;
  char v5;
  int *v6;
  uint64_t v7;
  char *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  v4 = *a1;
  v5 = *v2;
  v6 = (int *)type metadata accessor for LibraryState();
  v7 = v6[5];
  v8 = &v2[v7];
  v9 = &a2[v7];
  v10 = sub_23C19B524();
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
  v12 = v6[7];
  v13 = v6[8];
  v14 = v2[v12];
  v15 = v2[v13];
  *a2 = v5;
  *(_WORD *)&a2[v6[6]] = v4;
  a2[v12] = v14;
  a2[v13] = v15;
  return result;
}

uint64_t LibraryState.withLocale(_:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char *v2;
  char v5;
  int *v6;
  __int16 v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  v5 = *v2;
  v6 = (int *)type metadata accessor for LibraryState();
  v7 = *(_WORD *)&v2[v6[6]];
  v8 = &a2[v6[5]];
  v9 = sub_23C19B524();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  v11 = v6[7];
  v12 = v6[8];
  v13 = v2[v11];
  v14 = v2[v12];
  *a2 = v5;
  *(_WORD *)&a2[v6[6]] = v7;
  a2[v11] = v13;
  a2[v12] = v14;
  return result;
}

uint64_t LibraryState.withShowingCreateBanner(_:)@<X0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  char *v2;
  char v5;
  int *v6;
  uint64_t v7;
  __int16 v8;
  char *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *v2;
  v6 = (int *)type metadata accessor for LibraryState();
  v7 = v6[5];
  v8 = *(_WORD *)&v2[v6[6]];
  v9 = &v2[v7];
  v10 = &a2[v7];
  v11 = sub_23C19B524();
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
  v14 = v6[7];
  v13 = v6[8];
  v15 = v2[v13];
  *a2 = v5;
  *(_WORD *)&a2[v6[6]] = v8;
  a2[v14] = a1;
  a2[v13] = v15;
  return result;
}

uint64_t LibraryState.withSidebarVisible(_:)@<X0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  char *v2;
  char v5;
  int *v6;
  uint64_t v7;
  __int16 v8;
  char *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *v2;
  v6 = (int *)type metadata accessor for LibraryState();
  v7 = v6[5];
  v8 = *(_WORD *)&v2[v6[6]];
  v9 = &v2[v7];
  v10 = &a2[v7];
  v11 = sub_23C19B524();
  result = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v9, v11);
  v13 = v6[7];
  v14 = v6[8];
  v15 = v2[v13];
  *a2 = v5;
  *(_WORD *)&a2[v6[6]] = v8;
  a2[v13] = v15;
  a2[v14] = a1;
  return result;
}

uint64_t LibraryState.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[11];
  __int16 v12;
  char v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30AD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C1688F0();
  sub_23C19C0E8();
  v15 = *v3;
  v14 = 0;
  sub_23C168934();
  sub_23C19C07C();
  if (!v2)
  {
    v9 = type metadata accessor for LibraryState();
    v13 = 1;
    sub_23C19B524();
    sub_23C14DF00(&qword_256B2FD30, MEMORY[0x24BDCEEC8]);
    sub_23C19C07C();
    v12 = *(_WORD *)&v3[*(int *)(v9 + 24)];
    v11[10] = 2;
    sub_23C168978();
    sub_23C19C07C();
    v11[9] = 3;
    sub_23C19C064();
    v11[8] = 4;
    sub_23C19C064();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C1688F0()
{
  unint64_t result;

  result = qword_256B30AE0;
  if (!qword_256B30AE0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F02C, &type metadata for LibraryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30AE0);
  }
  return result;
}

unint64_t sub_23C168934()
{
  unint64_t result;

  result = qword_256B30AE8;
  if (!qword_256B30AE8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPage, &type metadata for LibraryPage);
    atomic_store(result, (unint64_t *)&qword_256B30AE8);
  }
  return result;
}

unint64_t sub_23C168978()
{
  unint64_t result;

  result = qword_256B30AF0;
  if (!qword_256B30AF0)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryLayout, &type metadata for LibraryLayout);
    atomic_store(result, (unint64_t *)&qword_256B30AF0);
  }
  return result;
}

uint64_t LibraryState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  char v31;
  char v32;
  __int16 v33;
  char v34;
  char v35;
  char v36;

  v22 = a2;
  v3 = sub_23C19B524();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30AF8);
  v23 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LibraryState();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(int *)(v8 + 28);
  v10[v11] = 0;
  v12 = *(int *)(v8 + 32);
  v10[v12] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C1688F0();
  v27 = v6;
  v13 = (uint64_t)v29;
  sub_23C19C0DC();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = v23;
  v14 = v24;
  v20 = v12;
  v21 = v11;
  v29 = a1;
  v16 = v25;
  v17 = v26;
  v35 = 0;
  sub_23C168CE0();
  sub_23C19C01C();
  *v10 = v36;
  v34 = 1;
  sub_23C14DF00(&qword_256B2FD48, MEMORY[0x24BDCEEE8]);
  sub_23C19C01C();
  (*(void (**)(_BYTE *, char *, uint64_t))(v16 + 32))(&v10[*(int *)(v7 + 20)], v14, v17);
  v32 = 2;
  sub_23C168D24();
  sub_23C19C01C();
  *(_WORD *)&v10[*(int *)(v7 + 24)] = v33;
  v31 = 3;
  v10[v21] = sub_23C19C004() & 1;
  v30 = 4;
  v18 = sub_23C19C004();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v28);
  v10[v20] = v18 & 1;
  sub_23C168D68((uint64_t)v10, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_23C168DAC((uint64_t)v10);
}

unint64_t sub_23C168CE0()
{
  unint64_t result;

  result = qword_256B30B00;
  if (!qword_256B30B00)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPage, &type metadata for LibraryPage);
    atomic_store(result, (unint64_t *)&qword_256B30B00);
  }
  return result;
}

unint64_t sub_23C168D24()
{
  unint64_t result;

  result = qword_256B30B08;
  if (!qword_256B30B08)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryLayout, &type metadata for LibraryLayout);
    atomic_store(result, (unint64_t *)&qword_256B30B08);
  }
  return result;
}

uint64_t sub_23C168D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C168DAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LibraryState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C168DE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryState.init(from:)(a1, a2);
}

uint64_t sub_23C168DFC(_QWORD *a1)
{
  return LibraryState.encode(to:)(a1);
}

uint64_t _s14FitnessLibrary0B5StateV2eeoiySbAC_ACtFZ_0(char *a1, uint64_t a2)
{
  char v4;
  int *v5;
  char v6;

  sub_23C16BDD0(*a1);
  if ((v4 & 1) != 0
    && (v5 = (int *)type metadata accessor for LibraryState(), (MEMORY[0x242617B18](&a1[v5[5]], a2 + v5[5]) & 1) != 0)
    && a1[v5[6]] == *(_BYTE *)(a2 + v5[6])
    && (sub_23C19B548() & 1) != 0
    && a1[v5[7]] == *(_BYTE *)(a2 + v5[7]))
  {
    v6 = a1[v5[8]] ^ *(_BYTE *)(a2 + v5[8]) ^ 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

_QWORD *initializeBufferWithCopyOfBuffer for LibraryState(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_23C19B524();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(_WORD *)((char *)v4 + a3[6]) = *(_WORD *)((char *)a2 + a3[6]);
    *((_BYTE *)v4 + v11) = *((_BYTE *)a2 + v11);
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return v4;
}

uint64_t destroy for LibraryState(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23C19B524();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for LibraryState(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23C19B524();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

_BYTE *assignWithCopy for LibraryState(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23C19B524();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  *v11 = *v12;
  v11[1] = v12[1];
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

_BYTE *initializeWithTake for LibraryState(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23C19B524();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

_BYTE *assignWithTake for LibraryState(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23C19B524();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C169218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_23C19B524();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LibraryState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C1692B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23C19B524();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

uint64_t sub_23C169330()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C19B524();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23C169494 + 4 * byte_23C19EE72[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23C1694C8 + 4 * byte_23C19EE6D[v4]))();
}

uint64_t sub_23C1694C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C1694D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C1694D8);
  return result;
}

uint64_t sub_23C1694E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C1694ECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23C1694F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C1694F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryState.CodingKeys()
{
  return &type metadata for LibraryState.CodingKeys;
}

unint64_t sub_23C169518()
{
  unint64_t result;

  result = qword_256B30BB0;
  if (!qword_256B30BB0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F004, &type metadata for LibraryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30BB0);
  }
  return result;
}

unint64_t sub_23C169560()
{
  unint64_t result;

  result = qword_256B30BB8;
  if (!qword_256B30BB8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19EF74, &type metadata for LibraryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30BB8);
  }
  return result;
}

unint64_t sub_23C1695A8()
{
  unint64_t result;

  result = qword_256B30BC0;
  if (!qword_256B30BC0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19EF9C, &type metadata for LibraryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30BC0);
  }
  return result;
}

uint64_t sub_23C1695EC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x800000023C1A4420 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023C1A4440 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C1A4460)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t TVLibraryView.init(store:libraryPickerViewBuilder:canvasViewBuilder:workoutPlanBannerViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a9 = sub_23C1503C4;
  *(_QWORD *)(a9 + 8) = result;
  *(_BYTE *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = a3;
  *(_QWORD *)(a9 + 32) = a4;
  *(_QWORD *)(a9 + 40) = a5;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  return result;
}

uint64_t sub_23C169874()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t TVLibraryView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unsigned __int8 v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  _QWORD v51[2];
  uint64_t OpaqueTypeConformance2;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  _OWORD *v79;
  _QWORD v80[2];
  _QWORD v81[2];
  _QWORD v82[2];
  _QWORD v83[4];
  _OWORD v84[4];
  uint64_t v85;

  v73 = a2;
  v60 = a1[2];
  v71 = a1[4];
  v64 = a1;
  sub_23C19B680();
  sub_23C19BEFC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  v63 = a1[3];
  swift_getTupleTypeMetadata2();
  v3 = sub_23C19BD34();
  v4 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v3);
  sub_23C19BC80();
  swift_getTupleTypeMetadata2();
  v5 = sub_23C19BD34();
  MEMORY[0x2426189D0](v4, v5);
  v6 = sub_23C19BC68();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v6);
  *(_QWORD *)&v84[0] = sub_23C19B5A8();
  *((_QWORD *)&v84[0] + 1) = MEMORY[0x2426189D0](MEMORY[0x24BDEB238], *(_QWORD *)&v84[0]);
  v7 = MEMORY[0x24BE351A0];
  MEMORY[0x24261897C](255, v84, MEMORY[0x24BE351A0], 0);
  swift_getTupleTypeMetadata2();
  v59 = sub_23C19BD34();
  v57 = MEMORY[0x2426189D0](v4, v59);
  v8 = sub_23C19BC50();
  v61 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v51 - v9;
  v11 = MEMORY[0x2426189D0](MEMORY[0x24BDF4498], v8);
  *(_QWORD *)&v84[0] = v8;
  *((_QWORD *)&v84[0] + 1) = v11;
  v12 = v11;
  v51[1] = v11;
  v13 = MEMORY[0x24261897C](0, v84, MEMORY[0x24BDF2D38], 0);
  v56 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v51 - v14;
  *(_QWORD *)&v84[0] = v8;
  *((_QWORD *)&v84[0] + 1) = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v84[0] = v13;
  *((_QWORD *)&v84[0] + 1) = OpaqueTypeConformance2;
  v16 = MEMORY[0x24261897C](0, v84, v7, 0);
  v55 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v51 - v17;
  v19 = sub_23C19B680();
  v58 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v51 - v20;
  v22 = sub_23C19B680();
  v62 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v54 = (char *)v51 - v23;
  sub_23C19B830();
  v24 = sub_23C19B680();
  v66 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v53 = (char *)v51 - v25;
  v68 = v26;
  v72 = sub_23C19B680();
  v69 = *(_QWORD *)(v72 - 8);
  v27 = MEMORY[0x24BDAC7A8](v72);
  v65 = (char *)v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v67 = (uint64_t)v51 - v29;
  v30 = *(_OWORD *)(v70 + 48);
  v84[2] = *(_OWORD *)(v70 + 32);
  v84[3] = v30;
  v85 = *(_QWORD *)(v70 + 64);
  v31 = *(_OWORD *)(v70 + 16);
  v84[0] = *(_OWORD *)v70;
  v84[1] = v31;
  sub_23C19B788();
  v74 = v60;
  v75 = v63;
  v76 = v71;
  v77 = *(_OWORD *)(v64 + 5);
  v78 = v64[7];
  v79 = v84;
  sub_23C19BC44();
  sub_23C19BAA0();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v8);
  v32 = OpaqueTypeConformance2;
  sub_23C19B9BC();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v13);
  sub_23C19B8F0();
  v83[2] = v13;
  v83[3] = v32;
  v33 = swift_getOpaqueTypeConformance2();
  sub_23C19BB18();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v16);
  sub_23C19B908();
  v34 = MEMORY[0x24BDECC60];
  v83[0] = v33;
  v83[1] = MEMORY[0x24BDECC60];
  v35 = MEMORY[0x24BDED308];
  v36 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v19, v83);
  v37 = v54;
  sub_23C19BB18();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v21, v19);
  v38 = sub_23C19B8D8();
  v82[0] = v36;
  v82[1] = v34;
  v39 = v53;
  v40 = MEMORY[0x2426189D0](v35, v22, v82);
  sub_23C16B034(v38, 0x4059000000000000, 0, v22, v40);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v22);
  LOBYTE(v22) = sub_23C19B8F0();
  v41 = sub_23C19B908();
  sub_23C19B8FC();
  sub_23C19B8FC();
  if (sub_23C19B8FC() != v22)
    sub_23C19B8FC();
  sub_23C19B8FC();
  if (sub_23C19B8FC() != v41)
    sub_23C19B8FC();
  sub_23C19B68C();
  v42 = sub_23C16B128();
  v81[0] = v40;
  v81[1] = v42;
  v43 = MEMORY[0x24BDED308];
  v44 = v68;
  v45 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v68, v81);
  v46 = (uint64_t)v65;
  sub_23C19BA7C();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v39, v44);
  v80[0] = v45;
  v80[1] = MEMORY[0x24BDF1050];
  v47 = v72;
  MEMORY[0x2426189D0](v43, v72, v80);
  v48 = v67;
  sub_23C1515F4(v46, v47, v67);
  v49 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  v49(v46, v47);
  sub_23C1502B0(v48, v47, v73);
  return ((uint64_t (*)(uint64_t, uint64_t))v49)(v48, v47);
}

uint64_t sub_23C16A084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t (*v36)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];
  char *v62;
  char *v63;

  v48 = a6;
  v49 = a7;
  v50 = a8;
  v51 = a5;
  v46 = a3;
  v47 = a4;
  sub_23C19B680();
  sub_23C19BEFC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  swift_getTupleTypeMetadata2();
  v10 = sub_23C19BD34();
  v11 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v10);
  sub_23C19BC80();
  swift_getTupleTypeMetadata2();
  v12 = sub_23C19BD34();
  MEMORY[0x2426189D0](v11, v12);
  v44 = sub_23C19BC68();
  v43 = MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v44);
  v13 = sub_23C19B5A8();
  v45 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v38 = (char *)&v38 - v14;
  v40 = MEMORY[0x2426189D0](MEMORY[0x24BDEB238], v13);
  v62 = (char *)v13;
  v63 = (char *)v40;
  v15 = MEMORY[0x24261897C](0, &v62, MEMORY[0x24BE351A0], 0);
  v42 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v39 = (uint64_t)&v38 - v20;
  v21 = *(_QWORD *)(a2 - 8);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v38 - v26;
  (*(void (**)(uint64_t))(a1 + 24))(v25);
  v28 = v51;
  sub_23C1515F4((uint64_t)v24, a2, (uint64_t)v27);
  v41 = *(void (**)(char *, uint64_t))(v21 + 8);
  v41(v24, a2);
  v29 = a2;
  v52 = a2;
  v53 = v46;
  v54 = v47;
  v55 = v28;
  v56 = v48;
  v57 = v49;
  v58 = a1;
  sub_23C19B8B4();
  v30 = v38;
  sub_23C150FD8();
  v31 = v40;
  sub_23C19B9BC();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v13);
  v62 = (char *)v13;
  v63 = (char *)v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v33 = v39;
  sub_23C1515F4((uint64_t)v18, v15, v39);
  v34 = v42;
  v35 = *(void (**)(char *, uint64_t))(v42 + 8);
  v35(v18, v15);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v27, v29);
  v62 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v18, v33, v15);
  v63 = v18;
  v61[0] = v29;
  v61[1] = v15;
  v59 = v51;
  v60 = OpaqueTypeConformance2;
  sub_23C177BE8((uint64_t *)&v62, 2uLL, (uint64_t)v61);
  v35((char *)v33, v15);
  v36 = (uint64_t (*)(char *, uint64_t))v41;
  v41(v27, v29);
  v35(v18, v15);
  return v36(v24, v29);
}

uint64_t sub_23C16A484()
{
  return sub_23C1652E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C16A084);
}

uint64_t sub_23C16A490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v25 = a6;
  v26 = a7;
  v24 = a5;
  v27 = a8;
  sub_23C19B680();
  sub_23C19BEFC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  swift_getTupleTypeMetadata2();
  v12 = sub_23C19BD34();
  v13 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v12);
  sub_23C19BC80();
  swift_getTupleTypeMetadata2();
  v14 = sub_23C19BD34();
  MEMORY[0x2426189D0](v13, v14);
  v15 = sub_23C19BC68();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v24 - v20;
  v28 = a2;
  v29 = a3;
  v30 = a4;
  v31 = v24;
  v32 = v25;
  v33 = v26;
  v34 = a1;
  sub_23C19B7A0();
  sub_23C19BC5C();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v15);
  sub_23C1515F4((uint64_t)v19, v15, (uint64_t)v21);
  v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v22(v19, v15);
  sub_23C1502B0((uint64_t)v21, v15, v27);
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, v15);
}

void sub_23C16A698(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD v30[10];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v38 = a8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  swift_getTupleTypeMetadata2();
  v15 = sub_23C19BD34();
  v30[9] = MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v15);
  v37 = sub_23C19BC80();
  v32 = *(_QWORD *)(v37 - 8);
  v16 = MEMORY[0x24BDAC7A8](v37);
  v35 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v36 = (char *)v30 - v19;
  v30[2] = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = sub_23C19B680();
  v30[6] = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v30[1] = (char *)v30 - v22;
  v30[8] = v23;
  v31 = sub_23C19BEFC();
  v30[7] = *(_QWORD *)(v31 - 8);
  v24 = MEMORY[0x24BDAC7A8](v31);
  v30[3] = (char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v39 = (char *)v30 - v26;
  v27 = a1[2];
  v28 = a1[3];
  v29 = *a1;
  v47 = a1[1];
  v48 = v27;
  v49 = v28;
  v50 = *((_QWORD *)a1 + 8);
  v46 = v29;
  v33 = a2;
  v40 = a2;
  v41 = a3;
  v34 = a3;
  v42 = a4;
  v43 = a5;
  v30[4] = a5;
  v30[5] = a6;
  v44 = a6;
  v45 = a7;
  type metadata accessor for TVLibraryView();
}

uint64_t sub_23C16A920()
{
  uint64_t v0;

  sub_23C15FEE4();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  return ((uint64_t (*)(uint64_t))((char *)sub_23C16A984 + 4 * byte_23C19F080[*(unsigned __int8 *)(v0 - 176)]))(0x7374756F6B726F77);
}

uint64_t sub_23C16A984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t (*v25)(uint64_t, uint64_t);

  v6 = sub_23C19C088();
  v7 = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    (*(void (**)(uint64_t))(v2 + 56))(v7);
    sub_23C19B8E4();
    sub_23C19BB18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 432) + 8))(v4, v0);
    *(_QWORD *)(v5 - 296) = v1;
    *(_QWORD *)(v5 - 288) = MEMORY[0x24BDECC60];
    v8 = *(_QWORD *)(v5 - 384);
    MEMORY[0x2426189D0](MEMORY[0x24BDED308], v8, v5 - 296);
    v9 = *(_QWORD *)(v5 - 440);
    sub_23C1515F4(v3, v8, v9);
    v10 = *(_QWORD *)(v5 - 400);
    v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v11(v3, v8);
    v12 = *(_QWORD *)(v5 - 424);
    sub_23C1502B0(v9, v8, v12);
    v11(v9, v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v8);
  }
  else
  {
    v12 = *(_QWORD *)(v5 - 424);
    v8 = *(_QWORD *)(v5 - 384);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 400) + 56))(v12, 1, 1, v8);
    *(_QWORD *)(v5 - 240) = v1;
    *(_QWORD *)(v5 - 232) = MEMORY[0x24BDECC60];
    MEMORY[0x2426189D0](MEMORY[0x24BDED308], v8, v5 - 240);
  }
  v13 = *(_QWORD *)(v5 - 392);
  v14 = *(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 16);
  *(_QWORD *)(v5 - 400) = v14;
  v15 = *(_QWORD *)(v5 - 368);
  v14(*(_QWORD *)(v5 - 304), v12, v15);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  *(_QWORD *)(v5 - 384) = v16;
  v16(v12, v15);
  v17 = sub_23C19BD04();
  MEMORY[0x24BDAC7A8](v17);
  v18 = *(_QWORD *)(v5 - 336);
  sub_23C19BC74();
  v19 = *(_QWORD *)(v5 - 320);
  v20 = MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v19);
  v21 = *(_QWORD *)(v5 - 328);
  sub_23C1515F4(v18, v19, v21);
  v22 = v1;
  v23 = *(_QWORD *)(v5 - 360);
  v24 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v24(v18, v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 - 400))(v12, *(_QWORD *)(v5 - 304), v15);
  *(_QWORD *)(v5 - 176) = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v18, v21, v19);
  *(_QWORD *)(v5 - 168) = v18;
  *(_QWORD *)(v5 - 224) = v15;
  *(_QWORD *)(v5 - 216) = v19;
  *(_QWORD *)(v5 - 272) = v22;
  *(_QWORD *)(v5 - 264) = MEMORY[0x24BDECC60];
  *(_QWORD *)(v5 - 280) = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v8, v5 - 272);
  *(_QWORD *)(v5 - 256) = MEMORY[0x2426189D0](MEMORY[0x24BDF5578], v15, v5 - 280);
  *(_QWORD *)(v5 - 248) = v20;
  sub_23C177BE8((uint64_t *)(v5 - 176), 2uLL, v5 - 224);
  v24(v21, v19);
  v25 = *(uint64_t (**)(uint64_t, uint64_t))(v5 - 384);
  v25(*(_QWORD *)(v5 - 304), v15);
  v24(v18, v19);
  return v25(v12, v15);
}

uint64_t sub_23C16ADB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  _QWORD v34[2];
  char *v35;
  char *v36;

  v30 = a3;
  v31 = a4;
  v5 = *(_QWORD *)(a2 - 8);
  v28 = a1;
  v29 = v5;
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FF80);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v28 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v28 - v19;
  v35 = 0;
  LOBYTE(v36) = 1;
  v21 = sub_23C19B8B4();
  sub_23C19B8A8();
  sub_23C19B8A8();
  if (sub_23C19B8A8() != v21)
    sub_23C19B8A8();
  sub_23C19BD10();
  sub_23C19BAD0();
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v20, v18, v11);
  (*(void (**)(uint64_t))(v28 + 40))(v22);
  v23 = v30;
  sub_23C1515F4((uint64_t)v8, a2, (uint64_t)v10);
  v24 = v29;
  v25 = *(void (**)(char *, uint64_t))(v29 + 8);
  v25(v8, a2);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v20, v11);
  v35 = v15;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v8, v10, a2);
  v36 = v8;
  v34[0] = v11;
  v34[1] = a2;
  OpaqueTypeConformance2 = MEMORY[0x24BDF4638];
  v33 = MEMORY[0x24BDF4610];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v33 = v23;
  sub_23C177BE8((uint64_t *)&v35, 2uLL, (uint64_t)v34);
  v25(v10, a2);
  v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v20, v11);
  v25(v8, a2);
  return ((uint64_t (*)(char *, uint64_t))v26)(v15, v11);
}

uint64_t sub_23C16B034(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[5];
  char v18;

  v8 = sub_23C19B830();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  if ((a3 & 1) == 0)
    sub_23C19B584();
  v17[1] = v12;
  v17[2] = v13;
  v17[3] = v14;
  v17[4] = v15;
  v18 = a3 & 1;
  sub_23C19B824();
  MEMORY[0x242618124](v11, a4, v8, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_23C16B128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B30BC8[0];
  if (!qword_256B30BC8[0])
  {
    v1 = sub_23C19B830();
    result = MEMORY[0x2426189D0](MEMORY[0x24BDF02F0], v1);
    atomic_store(result, qword_256B30BC8);
  }
  return result;
}

uint64_t sub_23C16B170()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C16B1B0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C16B1B8()
{
  sub_23C151164();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23C16B1F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = a2[3];
  v7 = a2[8];
  v8 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C16B28C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C151164();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v9;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23C16B358(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C151164();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t sub_23C16B3CC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C16B414(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TVLibraryView()
{
  JUMPOUT(0x242618934);
}

uint64_t sub_23C16B470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  sub_23C19B680();
  sub_23C19BEFC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  swift_getTupleTypeMetadata2();
  v0 = sub_23C19BD34();
  v1 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v0);
  sub_23C19BC80();
  swift_getTupleTypeMetadata2();
  v2 = sub_23C19BD34();
  MEMORY[0x2426189D0](v1, v2);
  v3 = sub_23C19BC68();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v3);
  v22 = sub_23C19B5A8();
  v23 = MEMORY[0x2426189D0](MEMORY[0x24BDEB238], v22);
  v4 = MEMORY[0x24BE351A0];
  MEMORY[0x24261897C](255, &v22, MEMORY[0x24BE351A0], 0);
  swift_getTupleTypeMetadata2();
  v5 = sub_23C19BD34();
  MEMORY[0x2426189D0](v1, v5);
  v6 = sub_23C19BC50();
  v7 = MEMORY[0x2426189D0](MEMORY[0x24BDF4498], v6);
  v22 = v6;
  v23 = v7;
  v8 = MEMORY[0x24261897C](255, &v22, MEMORY[0x24BDF2D38], 0);
  v22 = v6;
  v23 = v7;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v22 = v8;
  v23 = OpaqueTypeConformance2;
  MEMORY[0x24261897C](255, &v22, v4, 0);
  v10 = sub_23C19B680();
  v11 = sub_23C19B680();
  sub_23C19B830();
  v12 = sub_23C19B680();
  v13 = sub_23C19B680();
  v22 = v8;
  v23 = OpaqueTypeConformance2;
  v14 = swift_getOpaqueTypeConformance2();
  v15 = MEMORY[0x24BDECC60];
  v21[0] = v14;
  v21[1] = MEMORY[0x24BDECC60];
  v16 = MEMORY[0x24BDED308];
  v20[0] = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v10, v21);
  v20[1] = v15;
  v19[0] = MEMORY[0x2426189D0](v16, v11, v20);
  v19[1] = sub_23C16B128();
  v18[0] = MEMORY[0x2426189D0](v16, v12, v19);
  v18[1] = MEMORY[0x24BDF1050];
  return MEMORY[0x2426189D0](v16, v13, v18);
}

uint64_t sub_23C16B758()
{
  return sub_23C1652E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C16A490);
}

uint64_t sub_23C16B764()
{
  return sub_23C1652E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C16A698);
}

uint64_t sub_23C16B770()
{
  return sub_23C1652E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23C16ADB4);
}

__n128 LibraryGalleryFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t LibraryGalleryFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t result;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B304F8);
  result = MEMORY[0x24BDAC7A8](v6);
  if (*a4 == 1)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_23C16BA44()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_23C16BAB4()
{
  unint64_t result;

  result = qword_256B30C50;
  if (!qword_256B30C50)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F210, &type metadata for LibraryGalleryFeature.TaskIdentifier);
    atomic_store(result, &qword_256B30C50);
  }
  return result;
}

uint64_t sub_23C16BAF8(uint64_t a1, int *a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v2[2] = sub_23C19BE78();
  v2[3] = sub_23C19BE6C();
  v6 = (uint64_t (*)(_QWORD))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23C15A9C8;
  return v6(0);
}

uint64_t sub_23C16BB78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C16BB9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23C15AB44;
  return sub_23C16BAF8(a1, v4);
}

unint64_t sub_23C16BC08()
{
  unint64_t result;

  result = qword_256B30C68;
  if (!qword_256B30C68)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryGalleryAction, &type metadata for LibraryGalleryAction);
    atomic_store(result, (unint64_t *)&qword_256B30C68);
  }
  return result;
}

unint64_t sub_23C16BC50()
{
  unint64_t result;

  result = qword_256B30C70;
  if (!qword_256B30C70)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryGalleryAction, &type metadata for LibraryGalleryAction);
    atomic_store(result, (unint64_t *)&qword_256B30C70);
  }
  return result;
}

unint64_t sub_23C16BC98()
{
  unint64_t result;

  result = qword_256B30C78;
  if (!qword_256B30C78)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryGalleryState, &type metadata for LibraryGalleryState);
    atomic_store(result, (unint64_t *)&qword_256B30C78);
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryFeature()
{
  return &type metadata for LibraryGalleryFeature;
}

uint64_t storeEnumTagSinglePayload for LibraryGalleryFeature.TaskIdentifier(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C16BD2C + 4 * byte_23C19F147[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C16BD4C + 4 * byte_23C19F14C[v4]))();
}

_BYTE *sub_23C16BD2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C16BD4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C16BD54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C16BD5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C16BD64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C16BD6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryFeature.TaskIdentifier()
{
  return &type metadata for LibraryGalleryFeature.TaskIdentifier;
}

unint64_t sub_23C16BD8C()
{
  unint64_t result;

  result = qword_256B30C80;
  if (!qword_256B30C80)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F1E8, &type metadata for LibraryGalleryFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B30C80);
  }
  return result;
}

void sub_23C16BDD0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23C16BE20(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23C16BEE4 + 4 * byte_23C19F257[a2]))(0x697461746964656DLL);
}

uint64_t sub_23C16BEE4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x697461746964656DLL && v1 == 0xEB00000000736E6FLL)
    v2 = 1;
  else
    v2 = sub_23C19C088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_23C16C000(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23C16C04C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23C16C0E4 + 4 * byte_23C19F264[a2]))(0x6D6172676F7270);
}

uint64_t sub_23C16C0E4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D6172676F7270 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_23C19C088();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

_WORD *LibraryGalleryState.init(layout:page:)@<X0>(_WORD *result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_WORD *)a3 = *result;
  *(_BYTE *)(a3 + 2) = a2;
  return result;
}

uint64_t sub_23C16C1DC()
{
  _BYTE *v0;

  if (*v0)
    return 1701273968;
  else
    return 0x74756F79616CLL;
}

uint64_t sub_23C16C20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C16C934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C16C230()
{
  sub_23C16C3D0();
  return sub_23C19C0F4();
}

uint64_t sub_23C16C258()
{
  sub_23C16C3D0();
  return sub_23C19C100();
}

uint64_t LibraryGalleryState.encode(to:)(_QWORD *a1)
{
  __int16 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int16 v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;
  __int16 v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30C88);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v11 = *((unsigned __int8 *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C16C3D0();
  sub_23C19C0E8();
  v15 = v8;
  v14 = 0;
  sub_23C168978();
  sub_23C19C07C();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_23C168934();
    sub_23C19C07C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23C16C3D0()
{
  unint64_t result;

  result = qword_256B30C90;
  if (!qword_256B30C90)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F3C8, &type metadata for LibraryGalleryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30C90);
  }
  return result;
}

uint64_t LibraryGalleryState.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30C98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C16C3D0();
  sub_23C19C0DC();
  if (!v2)
  {
    v16 = 0;
    sub_23C168D24();
    sub_23C19C01C();
    v9 = v17;
    v10 = v18;
    v14 = 1;
    sub_23C168CE0();
    sub_23C19C01C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v15;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23C16C598@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return LibraryGalleryState.init(from:)(a1, a2);
}

uint64_t sub_23C16C5AC(_QWORD *a1)
{
  return LibraryGalleryState.encode(to:)(a1);
}

void static LibraryGalleryState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;

  if (*a1 == *a2)
  {
    v2 = a1[2];
    if ((sub_23C19B548() & 1) != 0)
      sub_23C16BDD0(v2);
  }
}

void sub_23C16C618(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;

  if (*a1 == *a2)
  {
    v2 = a1[2];
    if ((sub_23C19B548() & 1) != 0)
      sub_23C16BDD0(v2);
  }
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryGalleryState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFE)
  {
    if ((a2 + 33554178) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 3;
  v6 = v4 - 3;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryGalleryState(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554178) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFD)
    v3 = 0;
  if (a2 > 0xFD)
  {
    *(_WORD *)result = a2 - 254;
    *(_BYTE *)(result + 2) = (a2 - 254) >> 16;
    if (v3)
    {
      v4 = ((a2 - 254) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 2;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryState()
{
  return &type metadata for LibraryGalleryState;
}

uint64_t storeEnumTagSinglePayload for LibraryGalleryState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C16C7DC + 4 * byte_23C19F26F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C16C810 + 4 * byte_23C19F26A[v4]))();
}

uint64_t sub_23C16C810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C16C818(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C16C820);
  return result;
}

uint64_t sub_23C16C82C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C16C834);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C16C838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C16C840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryState.CodingKeys()
{
  return &type metadata for LibraryGalleryState.CodingKeys;
}

unint64_t sub_23C16C860()
{
  unint64_t result;

  result = qword_256B30CA0;
  if (!qword_256B30CA0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F3A0, &type metadata for LibraryGalleryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30CA0);
  }
  return result;
}

unint64_t sub_23C16C8A8()
{
  unint64_t result;

  result = qword_256B30CA8;
  if (!qword_256B30CA8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F310, &type metadata for LibraryGalleryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30CA8);
  }
  return result;
}

unint64_t sub_23C16C8F0()
{
  unint64_t result;

  result = qword_256B30CB0;
  if (!qword_256B30CB0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F338, &type metadata for LibraryGalleryState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30CB0);
  }
  return result;
}

uint64_t sub_23C16C934(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74756F79616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701273968 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C16CA0C()
{
  return 0x684374756F79616CLL;
}

uint64_t sub_23C16CA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x684374756F79616CLL && a2 == 0xED00006465676E61)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C16CAE8()
{
  sub_23C16CDA8();
  return sub_23C19C0F4();
}

uint64_t sub_23C16CB10()
{
  sub_23C16CDA8();
  return sub_23C19C100();
}

uint64_t sub_23C16CB38()
{
  return 0x74756F79616CLL;
}

uint64_t sub_23C16CB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C16CBD8()
{
  sub_23C16CDEC();
  return sub_23C19C0F4();
}

uint64_t sub_23C16CC00()
{
  sub_23C16CDEC();
  return sub_23C19C100();
}

uint64_t LibraryGalleryAction.encode(to:)(_QWORD *a1)
{
  __int16 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int16 v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30CB8);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30CC0);
  v12 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C16CDA8();
  sub_23C19C0E8();
  sub_23C16CDEC();
  sub_23C19C034();
  v14 = v9;
  sub_23C168978();
  sub_23C19C07C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v6);
}

unint64_t sub_23C16CDA8()
{
  unint64_t result;

  result = qword_256B30CC8;
  if (!qword_256B30CC8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F698, &type metadata for LibraryGalleryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30CC8);
  }
  return result;
}

unint64_t sub_23C16CDEC()
{
  unint64_t result;

  result = qword_256B30CD0;
  if (!qword_256B30CD0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F648, &type metadata for LibraryGalleryAction.LayoutChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30CD0);
  }
  return result;
}

uint64_t LibraryGalleryAction.init(from:)@<X0>(_QWORD *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _WORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;

  v21 = a2;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30CD8);
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30CE0);
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C16CDA8();
  v9 = v24;
  sub_23C19C0DC();
  if (v9)
    goto LABEL_5;
  v19 = v3;
  v20 = a1;
  v11 = v22;
  v10 = v23;
  v24 = v6;
  if (*(_QWORD *)(sub_23C19C028() + 16) != 1)
  {
    v13 = v10;
    v14 = sub_23C19BF50();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v16 = &type metadata for LibraryGalleryAction;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v13);
    a1 = v20;
LABEL_5:
    v18 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v18);
  }
  sub_23C16CDEC();
  sub_23C19BFC8();
  v12 = v24;
  sub_23C168D24();
  sub_23C19C01C();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v10);
  v18 = (uint64_t)v20;
  *v21 = v25;
  return __swift_destroy_boxed_opaque_existential_1(v18);
}

uint64_t sub_23C16D0F0@<X0>(_QWORD *a1@<X0>, _WORD *a2@<X8>)
{
  return LibraryGalleryAction.init(from:)(a1, a2);
}

uint64_t sub_23C16D104(_QWORD *a1)
{
  return LibraryGalleryAction.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for LibraryGalleryAction(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C16D164 + 4 * byte_23C19F425[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_23C16D198 + 4 * byte_23C19F420[v4]))();
}

uint64_t sub_23C16D198(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23C16D1A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23C16D1A8);
  return result;
}

uint64_t sub_23C16D1B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23C16D1BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C16D1C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23C16D1C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryAction()
{
  return &type metadata for LibraryGalleryAction;
}

ValueMetadata *type metadata accessor for LibraryGalleryAction.CodingKeys()
{
  return &type metadata for LibraryGalleryAction.CodingKeys;
}

uint64_t _s14FitnessLibrary20LibraryGalleryActionO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C16D238 + 4 * byte_23C19F42A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C16D258 + 4 * byte_23C19F42F[v4]))();
}

_BYTE *sub_23C16D238(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C16D258(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C16D260(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C16D268(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C16D270(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C16D278(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryAction.LayoutChangedCodingKeys()
{
  return &type metadata for LibraryGalleryAction.LayoutChangedCodingKeys;
}

unint64_t sub_23C16D298()
{
  unint64_t result;

  result = qword_256B30CE8;
  if (!qword_256B30CE8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F568, &type metadata for LibraryGalleryAction.LayoutChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30CE8);
  }
  return result;
}

unint64_t sub_23C16D2E0()
{
  unint64_t result;

  result = qword_256B30CF0;
  if (!qword_256B30CF0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F620, &type metadata for LibraryGalleryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30CF0);
  }
  return result;
}

unint64_t sub_23C16D328()
{
  unint64_t result;

  result = qword_256B30CF8;
  if (!qword_256B30CF8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F4D8, &type metadata for LibraryGalleryAction.LayoutChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30CF8);
  }
  return result;
}

unint64_t sub_23C16D370()
{
  unint64_t result;

  result = qword_256B30D00;
  if (!qword_256B30D00)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F500, &type metadata for LibraryGalleryAction.LayoutChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30D00);
  }
  return result;
}

unint64_t sub_23C16D3B8()
{
  unint64_t result;

  result = qword_256B30D08;
  if (!qword_256B30D08)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F590, &type metadata for LibraryGalleryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30D08);
  }
  return result;
}

unint64_t sub_23C16D400()
{
  unint64_t result;

  result = qword_256B30D10;
  if (!qword_256B30D10)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F5B8, &type metadata for LibraryGalleryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30D10);
  }
  return result;
}

uint64_t LibraryGalleryEnvironment.init(popCurrentView:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryEnvironment()
{
  return &type metadata for LibraryGalleryEnvironment;
}

uint64_t sub_23C16D45C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C16D494 + 4 * byte_23C19F710[a1]))(0xD000000000000013, 0x800000023C1A4480);
}

uint64_t sub_23C16D494()
{
  return 0x6168437375636F66;
}

uint64_t sub_23C16D4B4()
{
  return 0x684374756F79616CLL;
}

uint64_t sub_23C16D4FC()
{
  unsigned __int8 *v0;

  return sub_23C16D45C(*v0);
}

uint64_t sub_23C16D504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C16F034(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C16D528()
{
  sub_23C16DE1C();
  return sub_23C19C0F4();
}

uint64_t sub_23C16D550()
{
  sub_23C16DE1C();
  return sub_23C19C100();
}

uint64_t sub_23C16D578()
{
  sub_23C16DF70();
  return sub_23C19C0F4();
}

uint64_t sub_23C16D5A0()
{
  sub_23C16DF70();
  return sub_23C19C100();
}

uint64_t sub_23C16D5C8()
{
  return 0x5064657375636F66;
}

uint64_t sub_23C16D5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x5064657375636F66 && a2 == 0xEB00000000656761)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C16D694()
{
  sub_23C16DF2C();
  return sub_23C19C0F4();
}

uint64_t sub_23C16D6BC()
{
  sub_23C16DF2C();
  return sub_23C19C100();
}

uint64_t sub_23C16D6E4()
{
  return 0x756F79614C77656ELL;
}

uint64_t sub_23C16D700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x756F79614C77656ELL && a2 == 0xE900000000000074)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C16D7A0()
{
  sub_23C16DEE8();
  return sub_23C19C0F4();
}

uint64_t sub_23C16D7C8()
{
  sub_23C16DEE8();
  return sub_23C19C100();
}

uint64_t sub_23C16D7F8()
{
  _BYTE *v0;

  if (*v0)
    return 0x6361667265746E69;
  else
    return 1701273968;
}

uint64_t sub_23C16D830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C16F274(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C16D854()
{
  sub_23C16DEA4();
  return sub_23C19C0F4();
}

uint64_t sub_23C16D87C()
{
  sub_23C16DEA4();
  return sub_23C19C100();
}

uint64_t sub_23C16D8A4()
{
  sub_23C16DE60();
  return sub_23C19C0F4();
}

uint64_t sub_23C16D8CC()
{
  sub_23C16DE60();
  return sub_23C19C100();
}

void LibraryAction.encode(to:)(_QWORD *a1)
{
  unsigned __int16 *v1;
  unsigned __int16 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v14[8];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D18);
  v17 = *(_QWORD *)(v4 - 8);
  v18 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v16 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D20);
  v14[1] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v14[7] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D28);
  v14[5] = *(_QWORD *)(v7 - 8);
  v14[6] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v14[4] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D30);
  v14[2] = *(_QWORD *)(v9 - 8);
  v14[3] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D38);
  MEMORY[0x24BDAC7A8](v10);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D40);
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *v2;
  v13 = *((unsigned __int8 *)v2 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C16DE1C();
  v20 = v12;
  sub_23C19C0E8();
  __asm { BR              X9 }
}

uint64_t sub_23C16DAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 67) = 1;
  sub_23C16DF2C();
  v3 = *(_QWORD *)(v1 - 104);
  v2 = *(_QWORD *)(v1 - 96);
  sub_23C19C034();
  *(_BYTE *)(v1 - 67) = *(_DWORD *)(v1 - 72);
  sub_23C168934();
  v4 = *(_QWORD *)(v1 - 184);
  sub_23C19C07C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 192) + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 112) + 8))(v3, v2);
}

void sub_23C16DDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 67) = 0;
  sub_23C16DF70();
  v5 = *(_QWORD *)(v3 - 104);
  v4 = *(_QWORD *)(v3 - 96);
  sub_23C19C034();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 8))(v5, v4);
  JUMPOUT(0x23C16DDA0);
}

unint64_t sub_23C16DE1C()
{
  unint64_t result;

  result = qword_256B30D48;
  if (!qword_256B30D48)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FDDC, &type metadata for LibraryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30D48);
  }
  return result;
}

unint64_t sub_23C16DE60()
{
  unint64_t result;

  result = qword_256B30D50;
  if (!qword_256B30D50)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FD8C, &type metadata for LibraryAction.LibraryPageDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30D50);
  }
  return result;
}

unint64_t sub_23C16DEA4()
{
  unint64_t result;

  result = qword_256B30D58;
  if (!qword_256B30D58)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FD3C, &type metadata for LibraryAction.LibraryPageAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30D58);
  }
  return result;
}

unint64_t sub_23C16DEE8()
{
  unint64_t result;

  result = qword_256B30D60;
  if (!qword_256B30D60)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FCEC, &type metadata for LibraryAction.LayoutChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30D60);
  }
  return result;
}

unint64_t sub_23C16DF2C()
{
  unint64_t result;

  result = qword_256B30D68;
  if (!qword_256B30D68)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FC9C, &type metadata for LibraryAction.FocusChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30D68);
  }
  return result;
}

unint64_t sub_23C16DF70()
{
  unint64_t result;

  result = qword_256B30D70;
  if (!qword_256B30D70)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FC4C, &type metadata for LibraryAction.DismissHandoffAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30D70);
  }
  return result;
}

uint64_t LibraryAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;

  v29 = a2;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D78);
  v27 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v34 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D80);
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v33 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D88);
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v32 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D90);
  v22[3] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v30 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30D98);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30DA0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23C16DE1C();
  v16 = v36;
  sub_23C19C0DC();
  if (!v16)
  {
    v22[1] = v7;
    v22[2] = v10;
    v22[0] = v8;
    v36 = v12;
    v17 = sub_23C19C028();
    if (*(_QWORD *)(v17 + 16) == 1)
      __asm { BR              X10 }
    v18 = sub_23C19BF50();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v20 = &type metadata for LibraryAction;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
}

uint64_t sub_23C16E76C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryAction.init(from:)(a1, a2);
}

void sub_23C16E780(_QWORD *a1)
{
  LibraryAction.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for LibraryAction(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFC)
  {
    v2 = (a2 + 16776964) >> 24 == 255 ? 2 : 1;
    v3 = (a2 + 16776964) >> 24 ? v2 : 0;
    if (v3)
    {
      if (v3 == 2)
      {
        v4 = *(unsigned __int16 *)((char *)a1 + 3);
        if (*(unsigned __int16 *)((char *)a1 + 3))
          return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v4 << 24)) - 16776964;
      }
      else
      {
        v4 = *((unsigned __int8 *)a1 + 3);
        if (*((_BYTE *)a1 + 3))
          return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v4 << 24)) - 16776964;
      }
    }
  }
  v6 = *((unsigned __int8 *)a1 + 2);
  if (v6 >= 5)
    return (v6 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LibraryAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  int v4;
  unsigned int v5;

  if ((a3 + 16776964) >> 24 == 255)
    v3 = 2;
  else
    v3 = 1;
  if ((a3 + 16776964) >> 24)
    v4 = v3;
  else
    v4 = 0;
  if (a3 < 0xFC)
    v4 = 0;
  if (a2 > 0xFB)
  {
    *(_WORD *)result = a2 - 252;
    *(_BYTE *)(result + 2) = (a2 - 252) >> 16;
    if (v4)
    {
      v5 = ((a2 - 252) >> 24) + 1;
      if (v4 == 2)
        *(_WORD *)(result + 3) = v5;
      else
        *(_BYTE *)(result + 3) = v5;
    }
  }
  else
  {
    if (!v4)
      goto LABEL_13;
    if (v4 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_13:
      if (!a2)
        return result;
LABEL_19:
      *(_BYTE *)(result + 2) = -(char)a2;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_19;
  }
  return result;
}

uint64_t sub_23C16E8A4(unsigned __int16 *a1)
{
  uint64_t result;

  result = *((unsigned __int8 *)a1 + 2);
  if (result >= 4)
    return (*a1 | ((_DWORD)result << 16)) - 262140;
  return result;
}

uint64_t sub_23C16E8CC(uint64_t result, unsigned int a2)
{
  __int16 v2;

  if (a2 > 3)
  {
    v2 = a2 - 4;
    a2 = ((a2 - 4) >> 16) + 4;
    *(_WORD *)result = v2;
  }
  *(_BYTE *)(result + 2) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryAction()
{
  return &type metadata for LibraryAction;
}

uint64_t storeEnumTagSinglePayload for LibraryAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23C16E948 + 4 * byte_23C19F724[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23C16E97C + 4 * byte_23C19F71F[v4]))();
}

uint64_t sub_23C16E97C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C16E984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C16E98CLL);
  return result;
}

uint64_t sub_23C16E998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C16E9A0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23C16E9A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C16E9AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryAction.CodingKeys()
{
  return &type metadata for LibraryAction.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryAction.DismissHandoffAlertCodingKeys()
{
  return &type metadata for LibraryAction.DismissHandoffAlertCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryAction.FocusChangedCodingKeys()
{
  return &type metadata for LibraryAction.FocusChangedCodingKeys;
}

uint64_t _s14FitnessLibrary13LibraryActionO22FocusChangedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C16EA2C + 4 * byte_23C19F729[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C16EA4C + 4 * byte_23C19F72E[v4]))();
}

_BYTE *sub_23C16EA2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C16EA4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C16EA54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C16EA5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C16EA64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C16EA6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LibraryAction.LayoutChangedCodingKeys()
{
  return &type metadata for LibraryAction.LayoutChangedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryAction.LibraryPageAppearedCodingKeys()
{
  return &type metadata for LibraryAction.LibraryPageAppearedCodingKeys;
}

uint64_t _s14FitnessLibrary13LibraryActionO29LibraryPageAppearedCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C16EAEC + 4 * byte_23C19F738[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C16EB20 + 4 * byte_23C19F733[v4]))();
}

uint64_t sub_23C16EB20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C16EB28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C16EB30);
  return result;
}

uint64_t sub_23C16EB3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C16EB44);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C16EB48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C16EB50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryAction.LibraryPageDisappearedCodingKeys()
{
  return &type metadata for LibraryAction.LibraryPageDisappearedCodingKeys;
}

unint64_t sub_23C16EB70()
{
  unint64_t result;

  result = qword_256B30DA8;
  if (!qword_256B30DA8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F8F4, &type metadata for LibraryAction.LibraryPageDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DA8);
  }
  return result;
}

unint64_t sub_23C16EBB8()
{
  unint64_t result;

  result = qword_256B30DB0;
  if (!qword_256B30DB0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F9AC, &type metadata for LibraryAction.LibraryPageAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DB0);
  }
  return result;
}

unint64_t sub_23C16EC00()
{
  unint64_t result;

  result = qword_256B30DB8;
  if (!qword_256B30DB8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FA64, &type metadata for LibraryAction.LayoutChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DB8);
  }
  return result;
}

unint64_t sub_23C16EC48()
{
  unint64_t result;

  result = qword_256B30DC0;
  if (!qword_256B30DC0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FB1C, &type metadata for LibraryAction.FocusChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DC0);
  }
  return result;
}

unint64_t sub_23C16EC90()
{
  unint64_t result;

  result = qword_256B30DC8;
  if (!qword_256B30DC8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FC24, &type metadata for LibraryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DC8);
  }
  return result;
}

unint64_t sub_23C16ECD8()
{
  unint64_t result;

  result = qword_256B30DD0;
  if (!qword_256B30DD0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FB44, &type metadata for LibraryAction.DismissHandoffAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DD0);
  }
  return result;
}

unint64_t sub_23C16ED20()
{
  unint64_t result;

  result = qword_256B30DD8;
  if (!qword_256B30DD8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FB6C, &type metadata for LibraryAction.DismissHandoffAlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DD8);
  }
  return result;
}

unint64_t sub_23C16ED68()
{
  unint64_t result;

  result = qword_256B30DE0;
  if (!qword_256B30DE0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FA8C, &type metadata for LibraryAction.FocusChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DE0);
  }
  return result;
}

unint64_t sub_23C16EDB0()
{
  unint64_t result;

  result = qword_256B30DE8;
  if (!qword_256B30DE8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FAB4, &type metadata for LibraryAction.FocusChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DE8);
  }
  return result;
}

unint64_t sub_23C16EDF8()
{
  unint64_t result;

  result = qword_256B30DF0;
  if (!qword_256B30DF0)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F9D4, &type metadata for LibraryAction.LayoutChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DF0);
  }
  return result;
}

unint64_t sub_23C16EE40()
{
  unint64_t result;

  result = qword_256B30DF8;
  if (!qword_256B30DF8)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F9FC, &type metadata for LibraryAction.LayoutChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30DF8);
  }
  return result;
}

unint64_t sub_23C16EE88()
{
  unint64_t result;

  result = qword_256B30E00;
  if (!qword_256B30E00)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F91C, &type metadata for LibraryAction.LibraryPageAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30E00);
  }
  return result;
}

unint64_t sub_23C16EED0()
{
  unint64_t result;

  result = qword_256B30E08;
  if (!qword_256B30E08)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F944, &type metadata for LibraryAction.LibraryPageAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30E08);
  }
  return result;
}

unint64_t sub_23C16EF18()
{
  unint64_t result;

  result = qword_256B30E10;
  if (!qword_256B30E10)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F864, &type metadata for LibraryAction.LibraryPageDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30E10);
  }
  return result;
}

unint64_t sub_23C16EF60()
{
  unint64_t result;

  result = qword_256B30E18;
  if (!qword_256B30E18)
  {
    result = MEMORY[0x2426189D0](&unk_23C19F88C, &type metadata for LibraryAction.LibraryPageDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30E18);
  }
  return result;
}

unint64_t sub_23C16EFA8()
{
  unint64_t result;

  result = qword_256B30E20;
  if (!qword_256B30E20)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FB94, &type metadata for LibraryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30E20);
  }
  return result;
}

unint64_t sub_23C16EFF0()
{
  unint64_t result;

  result = qword_256B30E28;
  if (!qword_256B30E28)
  {
    result = MEMORY[0x2426189D0](&unk_23C19FBBC, &type metadata for LibraryAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B30E28);
  }
  return result;
}

uint64_t sub_23C16F034(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023C1A4480 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168437375636F66 && a2 == 0xEC0000006465676ELL || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x684374756F79616CLL && a2 == 0xED00006465676E61 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023C1A44A0 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023C1A44C0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23C16F274(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701273968 && a2 == 0xE400000000000000;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6361667265746E69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t LibraryCanvasContentView.init(store:canvasViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a5 = sub_23C1503C4;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_23C16F3E0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30EF8);
  sub_23C15159C(&qword_256B30F00, &qword_256B30EF8, MEMORY[0x24BE2B5E8]);
  return sub_23C19B5D8();
}

uint64_t sub_23C16F450()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t LibraryCanvasContentView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  char *v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __int128 *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 *v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  _QWORD v92[2];
  _QWORD v93[2];
  _QWORD v94[3];
  _QWORD v95[2];
  _QWORD v96[2];
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  v83 = a2;
  v84 = sub_23C19B524();
  v82 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v81 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30E30);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30E38);
  v67 = *(_QWORD *)(a1 + 16);
  v4 = a1;
  v69 = a1;
  v5 = sub_23C19B7DC();
  v6 = sub_23C19B7DC();
  v58[1] = v6;
  v7 = sub_23C19BCEC();
  v71 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v58 - v8;
  v10 = sub_23C19B680();
  v76 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)v58 - v11;
  v12 = sub_23C19B680();
  v80 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v68 = (char *)v58 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30E40);
  v15 = sub_23C15159C(&qword_256B30E48, &qword_256B30E30, MEMORY[0x24BDF4700]);
  v16 = sub_23C16FC8C();
  v59 = *(_QWORD *)(v4 + 24);
  v96[0] = v16;
  v96[1] = v59;
  v17 = MEMORY[0x24BDEF3E0];
  v18 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v5, v96);
  v95[0] = v15;
  v95[1] = v18;
  v19 = MEMORY[0x2426189D0](v17, v6, v95);
  v94[0] = MEMORY[0x24BDF5138];
  v94[1] = v19;
  v94[2] = MEMORY[0x24BDF5138];
  v60 = MEMORY[0x2426189D0](MEMORY[0x24BDF4AF8], v7, v94);
  v20 = MEMORY[0x24BDF0910];
  v93[0] = v60;
  v93[1] = MEMORY[0x24BDF0910];
  v21 = MEMORY[0x24BDED308];
  v61 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v10, v93);
  v92[0] = v61;
  v92[1] = v20;
  v22 = MEMORY[0x2426189D0](v21, v12, v92);
  v23 = sub_23C15159C(&qword_256B30E68, &qword_256B30E40, MEMORY[0x24BEE1710]);
  *(_QWORD *)&v97 = v12;
  *((_QWORD *)&v97 + 1) = v14;
  v65 = v14;
  *(_QWORD *)&v98 = v22;
  *((_QWORD *)&v98 + 1) = v23;
  v24 = v22;
  v64 = v22;
  v63 = v23;
  v25 = MEMORY[0x24BDF3908];
  v26 = MEMORY[0x24261897C](0, &v97, MEMORY[0x24BDF3908], 0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = v26;
  v73 = v26;
  v79 = v27;
  MEMORY[0x24BDAC7A8](v26);
  v62 = (char *)v58 - v29;
  *(_QWORD *)&v97 = v12;
  *((_QWORD *)&v97 + 1) = v14;
  *(_QWORD *)&v98 = v24;
  *((_QWORD *)&v98 + 1) = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v75 = OpaqueTypeConformance2;
  v74 = sub_23C16FD10();
  *(_QWORD *)&v97 = v28;
  *((_QWORD *)&v97 + 1) = v84;
  *(_QWORD *)&v98 = OpaqueTypeConformance2;
  *((_QWORD *)&v98 + 1) = v74;
  v31 = MEMORY[0x24261897C](0, &v97, v25, 0);
  v78 = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v70 = (char *)v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v77 = (uint64_t)v58 - v34;
  v35 = v72[1];
  v97 = *v72;
  v98 = v35;
  v99 = *((_QWORD *)v72 + 4);
  v36 = v67;
  v85 = v67;
  v37 = v59;
  v86 = v59;
  v87 = &v97;
  sub_23C19BCE0();
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v36;
  *(_QWORD *)(v38 + 24) = v37;
  v39 = v98;
  *(_OWORD *)(v38 + 32) = v97;
  *(_OWORD *)(v38 + 48) = v39;
  *(_QWORD *)(v38 + 64) = v99;
  sub_23C151178((uint64_t)&v97);
  v40 = v66;
  sub_23C19BB30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v9, v7);
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v36;
  *(_QWORD *)(v41 + 24) = v37;
  v42 = v98;
  *(_OWORD *)(v41 + 32) = v97;
  *(_OWORD *)(v41 + 48) = v42;
  *(_QWORD *)(v41 + 64) = v99;
  sub_23C151178((uint64_t)&v97);
  v43 = v68;
  sub_23C19BA40();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v40, v10);
  v89 = v97;
  v90 = v98;
  v91 = v99;
  sub_23C16F3E0();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v88 = v89;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v36;
  *(_QWORD *)(v44 + 24) = v37;
  v45 = v98;
  *(_OWORD *)(v44 + 32) = v97;
  *(_OWORD *)(v44 + 48) = v45;
  *(_QWORD *)(v44 + 64) = v99;
  sub_23C151178((uint64_t)&v97);
  v46 = v62;
  sub_23C19BB48();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v43, v12);
  v89 = v97;
  v90 = v98;
  v91 = v99;
  sub_23C16F3E0();
  swift_getKeyPath();
  v47 = v81;
  sub_23C19BD94();
  swift_release();
  swift_release();
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v36;
  *(_QWORD *)(v48 + 24) = v37;
  v49 = v98;
  *(_OWORD *)(v48 + 32) = v97;
  *(_OWORD *)(v48 + 48) = v49;
  *(_QWORD *)(v48 + 64) = v99;
  sub_23C151178((uint64_t)&v97);
  v50 = (uint64_t)v70;
  v51 = v73;
  v52 = v84;
  v53 = v75;
  v54 = v74;
  sub_23C19BB48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v52);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v46, v51);
  *(_QWORD *)&v89 = v51;
  *((_QWORD *)&v89 + 1) = v52;
  *(_QWORD *)&v90 = v53;
  *((_QWORD *)&v90 + 1) = v54;
  swift_getOpaqueTypeConformance2();
  v55 = v77;
  sub_23C1515F4(v50, v31, v77);
  v56 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
  v56(v50, v31);
  sub_23C1502B0(v55, v31, v83);
  return ((uint64_t (*)(uint64_t, uint64_t))v56)(v55, v31);
}

unint64_t sub_23C16FC8C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256B30E50;
  if (!qword_256B30E50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30E38);
    v2 = sub_23C15159C(&qword_256B30E58, &qword_256B30E60, MEMORY[0x24BDF4700]);
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    result = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B30E50);
  }
  return result;
}

unint64_t sub_23C16FD10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B30E70[0];
  if (!qword_256B30E70[0])
  {
    v1 = sub_23C19B524();
    result = MEMORY[0x2426189D0](MEMORY[0x24BDCEEE0], v1);
    atomic_store(result, qword_256B30E70);
  }
  return result;
}

uint64_t sub_23C16FD58@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t State;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[2];
  _QWORD v102[2];
  _QWORD v103[2];
  _QWORD v104[2];
  __int128 v105;
  __int128 v106;
  uint64_t v107;

  v100 = a4;
  v85 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v90 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v86 = (uint64_t)&v79 - v9;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30E60);
  MEMORY[0x24BDAC7A8](v84);
  v81 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F08);
  MEMORY[0x24BDAC7A8](v80);
  v82 = (uint64_t)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30E38);
  MEMORY[0x24BDAC7A8](v12);
  v83 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v14;
  v15 = sub_23C19B7DC();
  v92 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v93 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v91 = (char *)&v79 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F10);
  v89 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v88 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v87 = (char *)&v79 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30E30);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x24BDAC7A8](State);
  v28 = (uint64_t *)((char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = v23;
  v95 = v15;
  v29 = sub_23C19B7DC();
  v98 = *(_QWORD *)(v29 - 8);
  v99 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v79 - v30;
  v32 = a1[1];
  v105 = *a1;
  v106 = v32;
  v33 = (uint64_t)a1;
  v107 = *((_QWORD *)a1 + 4);
  v34 = a2;
  v96 = a3;
  v36 = type metadata accessor for LibraryCanvasContentView(0, a2, a3, v35);
  sub_23C16F3E0();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  if (swift_getEnumCaseMultiPayload() - 2 >= 2)
  {
    v88 = (char *)v36;
    v52 = (uint64_t)v90;
    v53 = v33;
    v89 = v34;
    v47 = v95;
    v46 = v96;
    v54 = *v28;
    v55 = (char *)v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
    v56 = sub_23C19B524();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
    v49 = v99;
    v57 = v94;
    v58 = *(_QWORD *)(v54 + 16);
    v59 = swift_bridgeObjectRelease();
    v51 = (uint64_t)v31;
    if (v58)
    {
      v60 = v52;
      (*(void (**)(uint64_t))(v53 + 24))(v59);
      v61 = v86;
      v62 = v89;
      sub_23C1515F4(v52, v89, v86);
      v63 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
      v63(v52, v62);
      sub_23C1502B0(v61, v62, v52);
      sub_23C16FC8C();
      v64 = (uint64_t)v91;
      sub_23C1967CC(v60, v57, v62);
      v63(v60, v62);
      v63(v61, v62);
      v65 = v97;
      v50 = v98;
      v66 = v92;
      v67 = (uint64_t)v93;
    }
    else
    {
      v68 = v53;
      v69 = *(_OWORD *)(v53 + 16);
      v105 = *(_OWORD *)v53;
      v106 = v69;
      v107 = *(_QWORD *)(v53 + 32);
      sub_23C16F3E0();
      swift_getKeyPath();
      sub_23C19BD94();
      swift_release();
      swift_release();
      v67 = (uint64_t)v93;
      v70 = (uint64_t)v81;
      if (v105 == 2)
      {
        v71 = *(_OWORD *)(v68 + 16);
        v105 = *(_OWORD *)v68;
        v106 = v71;
        v107 = *(_QWORD *)(v68 + 32);
        sub_23C16F3E0();
        swift_getKeyPath();
        sub_23C19BD94();
        swift_release();
        swift_release();
        __asm { BR              X10 }
      }
      *(_QWORD *)v70 = sub_23C19B7A0();
      *(_QWORD *)(v70 + 8) = 0;
      *(_BYTE *)(v70 + 16) = 1;
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F20);
      sub_23C17078C(v68, v89, v46, v70 + *(int *)(v72 + 44));
      sub_23C15CF54(v70, v82, &qword_256B30E60);
      swift_storeEnumTagMultiPayload();
      sub_23C15159C(&qword_256B30E58, &qword_256B30E60, MEMORY[0x24BDF4700]);
      v73 = (uint64_t)v83;
      sub_23C19B7D0();
      sub_23C15FEA8(v70, &qword_256B30E60);
      v50 = v98;
      sub_23C16FC8C();
      v64 = (uint64_t)v91;
      sub_23C196708(v73, v94);
      sub_23C15FEA8(v73, &qword_256B30E38);
      v65 = v97;
      v66 = v92;
    }
    v104[0] = sub_23C16FC8C();
    v104[1] = v46;
    MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v47, v104);
    sub_23C1502B0(v64, v47, v67);
    sub_23C15159C(&qword_256B30E48, &qword_256B30E30, MEMORY[0x24BDF4700]);
    sub_23C1967CC(v67, v65, v47);
    v74 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v74(v67, v47);
    v74(v64, v47);
    v48 = v100;
  }
  else
  {
    *(_QWORD *)v25 = sub_23C19B7A0();
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = 1;
    v37 = &v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F28) + 44)];
    v38 = v87;
    sub_23C19B5E4();
    v39 = v89;
    v40 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
    v41 = v88;
    v40(v88, v38, v19);
    *(_QWORD *)v37 = 0;
    v37[8] = 1;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F30);
    v40(&v37[*(int *)(v42 + 48)], v41, v19);
    v43 = &v37[*(int *)(v42 + 64)];
    *(_QWORD *)v43 = 0;
    v43[8] = 1;
    v44 = *(void (**)(char *, uint64_t))(v39 + 8);
    v44(v38, v19);
    v44(v41, v19);
    sub_23C15159C(&qword_256B30E48, &qword_256B30E30, MEMORY[0x24BDF4700]);
    v45 = sub_23C16FC8C();
    v47 = v95;
    v46 = v96;
    v101[0] = v45;
    v101[1] = v96;
    MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v95, v101);
    sub_23C196708((uint64_t)v25, v97);
    sub_23C15FEA8((uint64_t)v25, &qword_256B30E30);
    v49 = v99;
    v48 = v100;
    v50 = v98;
    v51 = (uint64_t)v31;
  }
  v75 = sub_23C15159C(&qword_256B30E48, &qword_256B30E30, MEMORY[0x24BDF4700]);
  v103[0] = sub_23C16FC8C();
  v103[1] = v46;
  v76 = MEMORY[0x24BDEF3E0];
  v77 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v47, v103);
  v102[0] = v75;
  v102[1] = v77;
  MEMORY[0x2426189D0](v76, v49, v102);
  sub_23C1502B0(v51, v49, v48);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v51, v49);
}

uint64_t sub_23C170780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C16FD58(*(__int128 **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C17078C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[2];
  uint64_t v21;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F38);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v20 - v12;
  v14 = *(_OWORD *)(a1 + 16);
  v20[0] = *(_OWORD *)a1;
  v20[1] = v14;
  v21 = *(_QWORD *)(a1 + 32);
  v16 = type metadata accessor for LibraryCanvasContentView(0, a2, a3, v15);
  sub_23C1708C0(v16, (uint64_t)v13);
  sub_23C15CF54((uint64_t)v13, (uint64_t)v11, &qword_256B30F38);
  *(_QWORD *)a4 = 0;
  *(_BYTE *)(a4 + 8) = 1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F40);
  sub_23C15CF54((uint64_t)v11, a4 + *(int *)(v17 + 48), &qword_256B30F38);
  v18 = a4 + *(int *)(v17 + 64);
  *(_QWORD *)v18 = 0;
  *(_BYTE *)(v18 + 8) = 1;
  sub_23C15FEA8((uint64_t)v13, &qword_256B30F38);
  return sub_23C15FEA8((uint64_t)v11, &qword_256B30F38);
}

uint64_t sub_23C1708C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  char v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _OWORD *v23;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v2[1];
  v28[0] = *v2;
  v28[1] = v9;
  v29 = *((_QWORD *)v2 + 4);
  v10 = v2[1];
  v25 = *v2;
  v26 = v10;
  v27 = *((_QWORD *)v2 + 4);
  sub_23C16F3E0();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v11 = v25;
  v12 = *(_QWORD *)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 16);
  v21 = v12;
  v22 = v25;
  v23 = v28;
  v16 = v20;
  v17 = v12;
  v18 = v25;
  v19 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F58);
  sub_23C15159C(&qword_256B30F60, &qword_256B30F50, MEMORY[0x24BDF41A8]);
  sub_23C15159C(&qword_256B30F68, &qword_256B30F58, MEMORY[0x24BDF5428]);
  sub_23C19B800();
  *(_QWORD *)&v25 = 0;
  *((_QWORD *)&v25 + 1) = 0xE000000000000000;
  sub_23C19BE0C();
  v24 = v11;
  sub_23C19BF68();
  v13 = v25;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 16))(a2, v8, v5);
  *(_OWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F38) + 52)) = v13;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23C170B18()
{
  uint64_t v0;

  return sub_23C171228(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 2);
}

uint64_t sub_23C170B3C()
{
  uint64_t v0;

  return sub_23C171228(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 3);
}

uint64_t sub_23C170B60()
{
  uint64_t v0;

  return sub_23C171228(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 4);
}

uint64_t sub_23C170B84()
{
  uint64_t v0;

  return sub_23C171228(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 1);
}

uint64_t sub_23C170BA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C170BD8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v10 = sub_23C19B524();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_OWORD *)(a2 + 16);
  v24[0] = *(_OWORD *)a2;
  v24[1] = v14;
  v25 = *(_QWORD *)(a2 + 32);
  type metadata accessor for LibraryCanvasContentView(0, a3, a4, v15);
  sub_23C16F3E0();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  LibraryPage.emptyTitle(locale:)((uint64_t)v13, a1);
  v17 = v16;
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_QWORD *)&v24[0] = v17;
  *((_QWORD *)&v24[0] + 1) = v19;
  sub_23C165284();
  result = sub_23C19B9B0();
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = v21;
  *(_BYTE *)(a5 + 16) = v22 & 1;
  *(_QWORD *)(a5 + 24) = v23;
  return result;
}

void sub_23C170D00(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23C170D48()
{
  uint64_t *v0;
  uint64_t result;

  result = sub_23C19BBD8();
  *v0 = result;
  return result;
}

void sub_23C170E08(char a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F70);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23C19B524();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2[1];
  v21 = *a2;
  v22 = v14;
  v23 = *((_QWORD *)a2 + 4);
  v20[2] = a3;
  v20[3] = a4;
  type metadata accessor for LibraryCanvasContentView(0, a3, a4, v15);
  sub_23C16F3E0();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  LibraryPage.emptyDescription(locale:)((uint64_t)v13, a1);
  v17 = v16;
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_QWORD *)&v21 = v17;
  *((_QWORD *)&v21 + 1) = v19;
  sub_23C165284();
  sub_23C19B9B0();
  __asm { BR              X10 }
}

uint64_t sub_23C170FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = sub_23C19C088();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v8 - 152) = v7;
    v11 = *(_QWORD *)(v8 - 136);
    *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 - 144);
    *(_QWORD *)(v10 + 24) = v11;
    v12 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)v4;
    *(_OWORD *)(v10 + 48) = v12;
    *(_QWORD *)(v10 + 64) = *(_QWORD *)(v4 + 32);
    MEMORY[0x24BDAC7A8](v10);
    sub_23C151178(v4);
    sub_23C19BC38();
    v7 = *(_QWORD *)(v8 - 152);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F78);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 0, 1, v13);
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F78);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 1, 1, v14);
  }
  sub_23C15CF54(v3, v0, &qword_256B30F70);
  *(_QWORD *)v2 = v6;
  *(_QWORD *)(v2 + 8) = v7;
  *(_BYTE *)(v2 + 16) = v5 & 1;
  *(_QWORD *)(v2 + 24) = v1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F80);
  sub_23C15CF54(v0, v2 + *(int *)(v15 + 48), &qword_256B30F70);
  sub_23C1652FC(v6, v7, v5 & 1);
  swift_bridgeObjectRetain();
  sub_23C15FEA8(v3, &qword_256B30F70);
  sub_23C15FEA8(v0, &qword_256B30F70);
  sub_23C165534(v6, v7, v5 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C171228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for LibraryCanvasContentView(0, a2, a3, a4);
  sub_23C16F3E0();
  sub_23C19BDA0();
  return swift_release();
}

uint64_t sub_23C171284@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v6 = sub_23C19B524();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23C19BDD0();
  MEMORY[0x24BDAC7A8](v7);
  sub_23C19BDC4();
  if (qword_256B2FD18 != -1)
    swift_once();
  v9 = (void *)qword_256B404E8;
  type metadata accessor for LibraryCanvasContentView(0, a1, a2, v8);
  v10 = v9;
  sub_23C16F3E0();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  sub_23C19BDF4();
  sub_23C165284();
  result = sub_23C19B9B0();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v12;
  *(_BYTE *)(a3 + 16) = v13 & 1;
  *(_QWORD *)(a3 + 24) = v14;
  return result;
}

uint64_t type metadata accessor for LibraryCanvasContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryCanvasContentView);
}

uint64_t sub_23C17144C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[3];
  _QWORD v28[2];
  _QWORD v29[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30E30);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30E38);
  v2 = sub_23C19B7DC();
  v3 = sub_23C19B7DC();
  v4 = sub_23C19BCEC();
  v5 = sub_23C19B680();
  v6 = sub_23C19B680();
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30E40);
  v8 = sub_23C15159C(&qword_256B30E48, &qword_256B30E30, MEMORY[0x24BDF4700]);
  v29[0] = sub_23C16FC8C();
  v29[1] = v1;
  v9 = MEMORY[0x24BDEF3E0];
  v28[0] = v8;
  v28[1] = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v2, v29);
  v10 = MEMORY[0x2426189D0](v9, v3, v28);
  v27[0] = MEMORY[0x24BDF5138];
  v27[1] = v10;
  v27[2] = MEMORY[0x24BDF5138];
  v11 = MEMORY[0x2426189D0](MEMORY[0x24BDF4AF8], v4, v27);
  v12 = MEMORY[0x24BDF0910];
  v26[0] = v11;
  v26[1] = MEMORY[0x24BDF0910];
  v13 = MEMORY[0x24BDED308];
  v25[0] = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v5, v26);
  v25[1] = v12;
  v14 = MEMORY[0x2426189D0](v13, v6, v25);
  v15 = sub_23C15159C(&qword_256B30E68, &qword_256B30E40, MEMORY[0x24BEE1710]);
  v21 = v6;
  v22 = v7;
  v23 = v14;
  v24 = v15;
  v16 = MEMORY[0x24261897C](255, &v21, MEMORY[0x24BDF3908], 0);
  v17 = sub_23C19B524();
  v21 = v6;
  v22 = v7;
  v23 = v14;
  v24 = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v19 = sub_23C16FD10();
  v21 = v16;
  v22 = v17;
  v23 = OpaqueTypeConformance2;
  v24 = v19;
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C171670()
{
  return sub_23C19BBF0();
}

void sub_23C1716E0()
{
  uint64_t v0;

  sub_23C170E08(*(_BYTE *)(v0 + 32), *(__int128 **)(v0 + 40), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t objectdestroy_2Tm_0()
{
  sub_23C151164();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C171724()
{
  uint64_t v0;

  return sub_23C171228(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0);
}

uint64_t sub_23C171744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C171284(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C171750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C170BD8(*(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_23C171760()
{
  uint64_t v0;

  sub_23C170D00(*(_BYTE *)(v0 + 16));
}

uint64_t sub_23C171768()
{
  return swift_deallocClassInstance();
}

uint64_t localizedLibraryString(_:locale:comment:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _BYTE v14[16];

  v4 = sub_23C19B524();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_23C19BDD0();
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 16))(&v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  if (qword_256B2FD18 != -1)
    swift_once();
  v11 = (void *)qword_256B404E8;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v12 = v11;
  return sub_23C19BDF4();
}

id sub_23C1718B8()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for LibraryLocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_256B404E8 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for LibraryLocalizationBundle()
{
  return objc_opt_self();
}

uint64_t sub_23C171928()
{
  return 12383;
}

uint64_t sub_23C171934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C1719B0()
{
  sub_23C171F14();
  return sub_23C19C0F4();
}

uint64_t sub_23C1719D8()
{
  sub_23C171F14();
  return sub_23C19C100();
}

uint64_t sub_23C171A00()
{
  _BYTE *v0;

  if (*v0)
    return 0x6570704177656976;
  else
    return 0xD000000000000018;
}

uint64_t sub_23C171A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C174614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C171A6C()
{
  sub_23C171E48();
  return sub_23C19C0F4();
}

uint64_t sub_23C171A94()
{
  sub_23C171E48();
  return sub_23C19C100();
}

uint64_t sub_23C171ABC()
{
  sub_23C171ED0();
  return sub_23C19C0F4();
}

uint64_t sub_23C171AE4()
{
  sub_23C171ED0();
  return sub_23C19C100();
}

uint64_t WorkoutPlanBannerAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31020);
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v21 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31028);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WorkoutPlanBannerAction();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31030);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C171E48();
  sub_23C19C0E8();
  sub_23C171E8C(v27, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    v30 = 1;
    sub_23C171ED0();
    v16 = v21;
    sub_23C19C034();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
  }
  else
  {
    sub_23C156708((uint64_t)v12, (uint64_t)v9);
    v29 = 0;
    sub_23C171F14();
    v18 = v24;
    sub_23C19C034();
    type metadata accessor for WorkoutPlanDetail();
    sub_23C153930(&qword_256B31050, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanDetail, (uint64_t)&protocol conformance descriptor for WorkoutPlanDetail);
    v19 = v26;
    sub_23C19C04C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
    sub_23C15FEA8((uint64_t)v9, &qword_256B302B0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
}

uint64_t type metadata accessor for WorkoutPlanBannerAction()
{
  uint64_t result;

  result = qword_256B310F0;
  if (!qword_256B310F0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C171E48()
{
  unint64_t result;

  result = qword_256B31038;
  if (!qword_256B31038)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0358, &type metadata for WorkoutPlanBannerAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31038);
  }
  return result;
}

uint64_t sub_23C171E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorkoutPlanBannerAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C171ED0()
{
  unint64_t result;

  result = qword_256B31040;
  if (!qword_256B31040)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0308, &type metadata for WorkoutPlanBannerAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31040);
  }
  return result;
}

unint64_t sub_23C171F14()
{
  unint64_t result;

  result = qword_256B31048;
  if (!qword_256B31048)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A02B8, &type metadata for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31048);
  }
  return result;
}

uint64_t WorkoutPlanBannerAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  char v48;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31058);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31060);
  v6 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  v41 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31068);
  v8 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WorkoutPlanBannerAction();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C171E48();
  v17 = v46;
  sub_23C19C0DC();
  if (!v17)
  {
    v35 = v16;
    v36 = v11;
    v19 = v43;
    v18 = v44;
    v34 = v14;
    v37 = v8;
    v46 = a1;
    v20 = v45;
    v21 = sub_23C19C028();
    if (*(_QWORD *)(v21 + 16) == 1)
    {
      if ((*(_BYTE *)(v21 + 32) & 1) != 0)
      {
        v22 = v46;
        v48 = 1;
        sub_23C171ED0();
        sub_23C19BFC8();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v39);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v20);
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
        v29 = (uint64_t)v35;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v35, 1, 1, v28);
        a1 = v22;
      }
      else
      {
        v47 = 0;
        sub_23C171F14();
        v26 = v19;
        sub_23C19BFC8();
        type metadata accessor for WorkoutPlanDetail();
        sub_23C153930(&qword_256B31070, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanDetail, (uint64_t)&protocol conformance descriptor for WorkoutPlanDetail);
        v30 = (uint64_t)v34;
        v31 = v40;
        sub_23C19BFEC();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v20);
        a1 = v46;
        v29 = (uint64_t)v35;
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v30, 0, 1, v32);
        sub_23C156798(v30, v29, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerAction);
      }
      sub_23C156798(v29, v42, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerAction);
    }
    else
    {
      v23 = sub_23C19BF50();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
      *v25 = v36;
      sub_23C19BFD4();
      sub_23C19BF44();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v20);
      a1 = v46;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23C1723F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutPlanBannerAction.init(from:)(a1, a2);
}

uint64_t sub_23C17240C(_QWORD *a1)
{
  return WorkoutPlanBannerAction.encode(to:)(a1);
}

uint64_t WorkoutPlanBannerAction.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v1 = type metadata accessor for WorkoutPlanDetail();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v16 - v10;
  v12 = type metadata accessor for WorkoutPlanBannerAction();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C171E8C(v0, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
    return sub_23C19C0B8();
  sub_23C156708((uint64_t)v14, (uint64_t)v11);
  sub_23C19C0B8();
  sub_23C156750((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1)
  {
    sub_23C19C0C4();
  }
  else
  {
    sub_23C156798((uint64_t)v9, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
    sub_23C19C0C4();
    WorkoutPlanDetail.hash(into:)();
    sub_23C1664F0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
  }
  return sub_23C15FEA8((uint64_t)v11, &qword_256B302B0);
}

uint64_t WorkoutPlanBannerAction.hashValue.getter()
{
  sub_23C19C0AC();
  WorkoutPlanBannerAction.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C17262C()
{
  sub_23C19C0AC();
  WorkoutPlanBannerAction.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C17266C()
{
  sub_23C19C0AC();
  WorkoutPlanBannerAction.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t _s14FitnessLibrary23WorkoutPlanBannerActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = type metadata accessor for WorkoutPlanDetail();
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v31 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31148);
  MEMORY[0x24BDAC7A8](v6);
  v34 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v32 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for WorkoutPlanBannerAction();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31150);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_23C171E8C(a1, (uint64_t)v20);
  sub_23C171E8C(a2, v21);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v22((uint64_t)v20, 1, v8) == 1)
  {
    if (v22(v21, 1, v8) == 1)
      goto LABEL_14;
    goto LABEL_6;
  }
  sub_23C171E8C((uint64_t)v20, (uint64_t)v16);
  if (v22(v21, 1, v8) != 1)
  {
    sub_23C156708(v21, (uint64_t)v13);
    v23 = v34;
    v24 = v34 + *(int *)(v6 + 48);
    sub_23C156708((uint64_t)v16, v34);
    sub_23C156750((uint64_t)v13, v24);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    v26 = v33;
    if (v25(v23, 1, v33) == 1)
    {
      sub_23C15FEA8((uint64_t)v13, &qword_256B302B0);
      if (v25(v24, 1, v26) == 1)
      {
        sub_23C15FEA8(v23, &qword_256B302B0);
LABEL_14:
        sub_23C1664F0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerAction);
        return 1;
      }
    }
    else
    {
      v27 = v32;
      sub_23C156750(v23, v32);
      if (v25(v24, 1, v26) != 1)
      {
        v28 = v31;
        sub_23C156798(v24, v31, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
        v29 = static WorkoutPlanDetail.== infix(_:_:)(v27, v28);
        sub_23C1664F0(v28, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
        sub_23C15FEA8((uint64_t)v13, &qword_256B302B0);
        sub_23C1664F0(v27, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
        sub_23C15FEA8(v23, &qword_256B302B0);
        if ((v29 & 1) != 0)
          goto LABEL_14;
LABEL_15:
        sub_23C1664F0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerAction);
        return 0;
      }
      sub_23C15FEA8((uint64_t)v13, &qword_256B302B0);
      sub_23C1664F0(v27, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
    }
    sub_23C15FEA8(v23, &qword_256B31148);
    goto LABEL_15;
  }
  sub_23C15FEA8((uint64_t)v16, &qword_256B302B0);
LABEL_6:
  sub_23C15FEA8((uint64_t)v20, &qword_256B31150);
  return 0;
}

uint64_t sub_23C172A50()
{
  return sub_23C153930(&qword_256B31078, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanBannerAction, (uint64_t)&protocol conformance descriptor for WorkoutPlanBannerAction);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutPlanBannerLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v44;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = (int *)type metadata accessor for WorkoutPlanDetail();
      v11 = *((_QWORD *)v10 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v12 = sub_23C19B53C();
        v13 = *(_QWORD *)(v12 - 8);
        v44 = v11;
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        v15 = v10[5];
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_23C19B4D0();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        v21 = v10[6];
        v22 = (uint64_t *)((char *)a1 + v21);
        v23 = (uint64_t *)((char *)a2 + v21);
        v24 = v23[1];
        *v22 = *v23;
        v22[1] = v24;
        v25 = v10[7];
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = sub_23C19B500();
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v29(v26, v27, v28);
        *((_BYTE *)a1 + v10[8]) = *((_BYTE *)a2 + v10[8]);
        v30 = v10[9];
        v31 = (uint64_t *)((char *)a1 + v30);
        v32 = (uint64_t *)((char *)a2 + v30);
        v33 = v32[1];
        *v31 = *v32;
        v31[1] = v33;
        v34 = v10[10];
        v35 = (uint64_t *)((char *)a1 + v34);
        v36 = (uint64_t *)((char *)a2 + v34);
        v37 = v36[1];
        *v35 = *v36;
        v35[1] = v37;
        v38 = v10[11];
        v39 = (uint64_t *)((char *)a1 + v38);
        v40 = (uint64_t *)((char *)a2 + v38);
        v41 = v40[1];
        *v39 = *v40;
        v39[1] = v41;
        v42 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v44 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

char *initializeWithCopy for WorkoutPlanBannerLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, int *);
  uint64_t v42;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = (int *)type metadata accessor for WorkoutPlanDetail();
    v9 = *((_QWORD *)v8 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v42 = v9;
      v10 = sub_23C19B53C();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      v13 = v8[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_23C19B4D0();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v19 = v8[6];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      v23 = v8[7];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = sub_23C19B500();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v24, v25, v26);
      a1[v8[8]] = a2[v8[8]];
      v28 = v8[9];
      v29 = &a1[v28];
      v30 = &a2[v28];
      v31 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      v32 = v8[10];
      v33 = &a1[v32];
      v34 = &a2[v32];
      v35 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v35;
      v36 = v8[11];
      v37 = &a1[v36];
      v38 = &a2[v36];
      v39 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      v40 = *(void (**)(char *, _QWORD, uint64_t, int *))(v42 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40(a1, 0, 1, v8);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for WorkoutPlanBannerLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  size_t v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void (*v48)(char *, _QWORD, uint64_t, int *);
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void (*v78)(char *, _QWORD, uint64_t, int *);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C15FEA8((uint64_t)a1, &qword_256B302B0);
      goto LABEL_7;
    }
    v14 = (int *)type metadata accessor for WorkoutPlanDetail();
    v15 = *((_QWORD *)v14 - 1);
    v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
    v17 = v16(a1, 1, v14);
    v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        v19 = sub_23C19B53C();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(a1, a2, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
        }
        v55 = v14[5];
        v56 = &a1[v55];
        v57 = &a2[v55];
        v58 = sub_23C19B4D0();
        v59 = *(_QWORD *)(v58 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
        }
        v61 = v14[6];
        v62 = &a1[v61];
        v63 = &a2[v61];
        *(_QWORD *)v62 = *(_QWORD *)v63;
        *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
        v64 = v14[7];
        v65 = &a1[v64];
        v66 = &a2[v64];
        v67 = sub_23C19B500();
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(v65, v66, v67);
        a1[v14[8]] = a2[v14[8]];
        v69 = v14[9];
        v70 = &a1[v69];
        v71 = &a2[v69];
        *(_QWORD *)v70 = *(_QWORD *)v71;
        *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
        v72 = v14[10];
        v73 = &a1[v72];
        v74 = &a2[v72];
        *(_QWORD *)v73 = *(_QWORD *)v74;
        *((_QWORD *)v73 + 1) = *((_QWORD *)v74 + 1);
        v75 = v14[11];
        v76 = &a1[v75];
        v77 = &a2[v75];
        *(_QWORD *)v76 = *(_QWORD *)v77;
        *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
        v78 = *(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v78(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_23C1664F0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
LABEL_17:
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    v50 = sub_23C19B53C();
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
    v53 = v52(a1, 1, v50);
    v54 = v52(a2, 1, v50);
    if (v53)
    {
      if (!v54)
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(a1, a2, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(a1, 0, 1, v50);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v54)
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 24))(a1, a2, v50);
LABEL_36:
        v80 = v14[5];
        v81 = &a1[v80];
        v82 = &a2[v80];
        v83 = sub_23C19B4D0();
        v84 = *(_QWORD *)(v83 - 8);
        v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
        v86 = v85(v81, 1, v83);
        v87 = v85(v82, 1, v83);
        if (v86)
        {
          if (!v87)
          {
            (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v82, v83);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
LABEL_42:
            v89 = v14[6];
            v90 = &a1[v89];
            v91 = &a2[v89];
            *(_QWORD *)v90 = *(_QWORD *)v91;
            *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v92 = v14[7];
            v93 = &a1[v92];
            v94 = &a2[v92];
            v95 = sub_23C19B500();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 24))(v93, v94, v95);
            a1[v14[8]] = a2[v14[8]];
            v96 = v14[9];
            v97 = &a1[v96];
            v98 = &a2[v96];
            *(_QWORD *)v97 = *(_QWORD *)v98;
            *((_QWORD *)v97 + 1) = *((_QWORD *)v98 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v99 = v14[10];
            v100 = &a1[v99];
            v101 = &a2[v99];
            *(_QWORD *)v100 = *(_QWORD *)v101;
            *((_QWORD *)v100 + 1) = *((_QWORD *)v101 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v102 = v14[11];
            v103 = &a1[v102];
            v104 = &a2[v102];
            *(_QWORD *)v103 = *(_QWORD *)v104;
            *((_QWORD *)v103 + 1) = *((_QWORD *)v104 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v87)
          {
            (*(void (**)(char *, char *, uint64_t))(v84 + 24))(v81, v82, v83);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v84 + 8))(v81, v83);
        }
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v51 + 8))(a1, v50);
    }
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_36;
  }
  if (v10)
  {
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  v11 = (int *)type metadata accessor for WorkoutPlanDetail();
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v105 = v12;
    v22 = sub_23C19B53C();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(a1, a2, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
    }
    v25 = v11[5];
    v26 = &a1[v25];
    v27 = &a2[v25];
    v28 = sub_23C19B4D0();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v31 = v11[6];
    v32 = &a1[v31];
    v33 = &a2[v31];
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
    v34 = v11[7];
    v35 = &a1[v34];
    v36 = &a2[v34];
    v37 = sub_23C19B500();
    v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
    swift_bridgeObjectRetain();
    v38(v35, v36, v37);
    a1[v11[8]] = a2[v11[8]];
    v39 = v11[9];
    v40 = &a1[v39];
    v41 = &a2[v39];
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
    v42 = v11[10];
    v43 = &a1[v42];
    v44 = &a2[v42];
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
    v45 = v11[11];
    v46 = &a1[v45];
    v47 = &a2[v45];
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
    v48 = *(void (**)(char *, _QWORD, uint64_t, int *))(v105 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(a1, 0, 1, v11);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for WorkoutPlanBannerLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = (int *)type metadata accessor for WorkoutPlanDetail();
    v9 = *((_QWORD *)v8 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      v10 = sub_23C19B53C();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      v13 = v8[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_23C19B4D0();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
      v19 = v8[7];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = sub_23C19B500();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      a1[v8[8]] = a2[v8[8]];
      *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for WorkoutPlanBannerLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  size_t v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23C15FEA8((uint64_t)a1, &qword_256B302B0);
      goto LABEL_7;
    }
    v14 = (int *)type metadata accessor for WorkoutPlanDetail();
    v15 = *((_QWORD *)v14 - 1);
    v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
    v17 = v16(a1, 1, v14);
    v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        v19 = sub_23C19B53C();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(a1, a2, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
        }
        v41 = v14[5];
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = sub_23C19B4D0();
        v45 = *(_QWORD *)(v44 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
        {
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        *(_OWORD *)&a1[v14[6]] = *(_OWORD *)&a2[v14[6]];
        v47 = v14[7];
        v48 = &a1[v47];
        v49 = &a2[v47];
        v50 = sub_23C19B500();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        a1[v14[8]] = a2[v14[8]];
        *(_OWORD *)&a1[v14[9]] = *(_OWORD *)&a2[v14[9]];
        *(_OWORD *)&a1[v14[10]] = *(_OWORD *)&a2[v14[10]];
        *(_OWORD *)&a1[v14[11]] = *(_OWORD *)&a2[v14[11]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56))(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_23C1664F0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
LABEL_17:
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    v36 = sub_23C19B53C();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
    v39 = v38(a1, 1, v36);
    v40 = v38(a2, 1, v36);
    if (v39)
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(a1, a2, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v36);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 40))(a1, a2, v36);
LABEL_36:
        v52 = v14[5];
        v53 = &a1[v52];
        v54 = &a2[v52];
        v55 = sub_23C19B4D0();
        v56 = *(_QWORD *)(v55 - 8);
        v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
        v58 = v57(v53, 1, v55);
        v59 = v57(v54, 1, v55);
        if (v58)
        {
          if (!v59)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
LABEL_42:
            v61 = v14[6];
            v62 = &a1[v61];
            v63 = &a2[v61];
            v65 = *(_QWORD *)v63;
            v64 = *((_QWORD *)v63 + 1);
            *(_QWORD *)v62 = v65;
            *((_QWORD *)v62 + 1) = v64;
            swift_bridgeObjectRelease();
            v66 = v14[7];
            v67 = &a1[v66];
            v68 = &a2[v66];
            v69 = sub_23C19B500();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v67, v68, v69);
            a1[v14[8]] = a2[v14[8]];
            v70 = v14[9];
            v71 = &a1[v70];
            v72 = &a2[v70];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            *(_QWORD *)v71 = v74;
            *((_QWORD *)v71 + 1) = v73;
            swift_bridgeObjectRelease();
            v75 = v14[10];
            v76 = &a1[v75];
            v77 = &a2[v75];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            *(_QWORD *)v76 = v79;
            *((_QWORD *)v76 + 1) = v78;
            swift_bridgeObjectRelease();
            v80 = v14[11];
            v81 = &a1[v80];
            v82 = &a2[v80];
            v84 = *(_QWORD *)v82;
            v83 = *((_QWORD *)v82 + 1);
            *(_QWORD *)v81 = v84;
            *((_QWORD *)v81 + 1) = v83;
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v59)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v53, v54, v55);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
        }
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(a1, v36);
    }
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_36;
  }
  if (v10)
  {
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  v11 = (int *)type metadata accessor for WorkoutPlanDetail();
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    v22 = sub_23C19B53C();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(a1, a2, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
    }
    v25 = v11[5];
    v26 = &a1[v25];
    v27 = &a2[v25];
    v28 = sub_23C19B4D0();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302C8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(_OWORD *)&a1[v11[6]] = *(_OWORD *)&a2[v11[6]];
    v31 = v11[7];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = sub_23C19B500();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    a1[v11[8]] = a2[v11[8]];
    *(_OWORD *)&a1[v11[9]] = *(_OWORD *)&a2[v11[9]];
    *(_OWORD *)&a1[v11[10]] = *(_OWORD *)&a2[v11[10]];
    *(_OWORD *)&a1[v11[11]] = *(_OWORD *)&a2[v11[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C174084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C1740E0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23C174134(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_23C174170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

void sub_23C1741B4()
{
  unint64_t v0;

  sub_23C174208();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_23C174208()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B31100)
  {
    type metadata accessor for WorkoutPlanDetail();
    v0 = sub_23C19BEFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B31100);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C1742A8 + 4 * byte_23C19FFB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C1742DC + 4 * asc_23C19FFB0[v4]))();
}

uint64_t sub_23C1742DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C1742E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C1742ECLL);
  return result;
}

uint64_t sub_23C1742F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C174300);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C174304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C17430C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerAction.CodingKeys()
{
  return &type metadata for WorkoutPlanBannerAction.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C174368 + 4 * byte_23C19FFBA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C174388 + 4 * byte_23C19FFBF[v4]))();
}

_BYTE *sub_23C174368(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C174388(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C174390(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C174398(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C1743A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C1743A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys()
{
  return &type metadata for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerAction.ViewAppearedCodingKeys()
{
  return &type metadata for WorkoutPlanBannerAction.ViewAppearedCodingKeys;
}

unint64_t sub_23C1743D8()
{
  unint64_t result;

  result = qword_256B31108;
  if (!qword_256B31108)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A01D8, &type metadata for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31108);
  }
  return result;
}

unint64_t sub_23C174420()
{
  unint64_t result;

  result = qword_256B31110;
  if (!qword_256B31110)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0290, &type metadata for WorkoutPlanBannerAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31110);
  }
  return result;
}

unint64_t sub_23C174468()
{
  unint64_t result;

  result = qword_256B31118;
  if (!qword_256B31118)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0148, &type metadata for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31118);
  }
  return result;
}

unint64_t sub_23C1744B0()
{
  unint64_t result;

  result = qword_256B31120;
  if (!qword_256B31120)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0170, &type metadata for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31120);
  }
  return result;
}

unint64_t sub_23C1744F8()
{
  unint64_t result;

  result = qword_256B31128;
  if (!qword_256B31128)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A00F8, &type metadata for WorkoutPlanBannerAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31128);
  }
  return result;
}

unint64_t sub_23C174540()
{
  unint64_t result;

  result = qword_256B31130;
  if (!qword_256B31130)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0120, &type metadata for WorkoutPlanBannerAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31130);
  }
  return result;
}

unint64_t sub_23C174588()
{
  unint64_t result;

  result = qword_256B31138;
  if (!qword_256B31138)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0200, &type metadata for WorkoutPlanBannerAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31138);
  }
  return result;
}

unint64_t sub_23C1745D0()
{
  unint64_t result;

  result = qword_256B31140;
  if (!qword_256B31140)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0228, &type metadata for WorkoutPlanBannerAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31140);
  }
  return result;
}

uint64_t sub_23C174614(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x800000023C1A4550 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

ValueMetadata *type metadata accessor for PageCountButtonStyle()
{
  return &type metadata for PageCountButtonStyle;
}

uint64_t sub_23C174728()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C174738@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v42 = a1;
  v46 = a2;
  v2 = sub_23C19B83C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31158);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31160);
  MEMORY[0x24BDAC7A8](v43);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31168);
  MEMORY[0x24BDAC7A8](v44);
  v45 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C19B848();
  v12 = sub_23C19B8F0();
  v13 = sub_23C19B908();
  v14 = sub_23C19B8FC();
  sub_23C19B8FC();
  if (sub_23C19B8FC() != v12)
    v14 = sub_23C19B8FC();
  sub_23C19B8FC();
  if (sub_23C19B8FC() != v13)
    v14 = sub_23C19B8FC();
  sub_23C19B584();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  v23 = &v8[*(int *)(v6 + 36)];
  *v23 = v14;
  *((_QWORD *)v23 + 1) = v16;
  *((_QWORD *)v23 + 2) = v18;
  *((_QWORD *)v23 + 3) = v20;
  *((_QWORD *)v23 + 4) = v22;
  v23[40] = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v24 = sub_23C19B8D8();
  v25 = sub_23C19B8E4();
  v26 = sub_23C19B8FC();
  sub_23C19B8FC();
  if (sub_23C19B8FC() != v24)
    v26 = sub_23C19B8FC();
  sub_23C19B8FC();
  if (sub_23C19B8FC() != v25)
    v26 = sub_23C19B8FC();
  sub_23C19B584();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_23C15CF54((uint64_t)v8, (uint64_t)v10, &qword_256B31158);
  v35 = &v10[*(int *)(v43 + 36)];
  *v35 = v26;
  *((_QWORD *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_23C15FEA8((uint64_t)v8, &qword_256B31158);
  if ((sub_23C19B854() & 1) != 0)
  {
    v36 = v42;
    swift_retain();
  }
  else
  {
    v36 = sub_23C19BB84();
  }
  v37 = sub_23C19B8CC();
  v38 = v45;
  sub_23C15CF54((uint64_t)v10, v45, &qword_256B31160);
  v39 = v38 + *(int *)(v44 + 36);
  *(_QWORD *)v39 = v36;
  *(_BYTE *)(v39 + 8) = v37;
  sub_23C15FEA8((uint64_t)v10, &qword_256B31160);
  return sub_23C174A80(v38, v46);
}

uint64_t sub_23C174A78@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23C174738(*v1, a1);
}

uint64_t sub_23C174A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C174ACC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B31170;
  if (!qword_256B31170)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31168);
    v2[0] = sub_23C174B6C(&qword_256B31178, &qword_256B31160, sub_23C174B50);
    v2[1] = sub_23C174C20();
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B31170);
  }
  return result;
}

uint64_t sub_23C174B50()
{
  return sub_23C174B6C(&qword_256B31180, &qword_256B31158, (uint64_t (*)(void))sub_23C174BD8);
}

uint64_t sub_23C174B6C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C174BD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B31188;
  if (!qword_256B31188)
  {
    v1 = sub_23C19B83C();
    result = MEMORY[0x2426189D0](MEMORY[0x24BDF0438], v1);
    atomic_store(result, (unint64_t *)&qword_256B31188);
  }
  return result;
}

unint64_t sub_23C174C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B31190;
  if (!qword_256B31190)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31198);
    result = MEMORY[0x2426189D0](MEMORY[0x24BDF06D0], v1);
    atomic_store(result, (unint64_t *)&qword_256B31190);
  }
  return result;
}

uint64_t LibraryCanvasContentState.init(allowedContentRatings:activeLayout:loadState:locale:page:)@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v10 = *a2;
  *(_QWORD *)a6 = a1;
  *(_WORD *)(a6 + 8) = v10;
  v11 = type metadata accessor for LibraryCanvasContentState();
  sub_23C174D34(a3, a6 + *(int *)(v11 + 28));
  v12 = a6 + *(int *)(v11 + 32);
  v13 = sub_23C19B524();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a4, v13);
  *(_BYTE *)(a6 + 10) = a5;
  return result;
}

uint64_t type metadata accessor for LibraryCanvasContentState()
{
  uint64_t result;

  result = qword_256B31240;
  if (!qword_256B31240)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23C174D34(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for LibraryCanvasContentLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

void LibraryCanvasContentState.activeLayout.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + 8);
}

uint64_t LibraryCanvasContentState.page.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t LibraryCanvasContentState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LibraryCanvasContentState();
  return sub_23C1758D8(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for LibraryCanvasContentLoadState);
}

uint64_t LibraryCanvasContentState.loadState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LibraryCanvasContentState() + 28);
  return sub_23C174DF8(a1, v3);
}

uint64_t sub_23C174DF8(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for LibraryCanvasContentLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*LibraryCanvasContentState.loadState.modify())()
{
  type metadata accessor for LibraryCanvasContentState();
  return nullsub_1;
}

uint64_t sub_23C174E64()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C174E98 + 4 * byte_23C1A0400[*v0]))(0xD000000000000015, 0x800000023C1A4570);
}

uint64_t sub_23C174E98()
{
  return 0x614C657669746361;
}

uint64_t sub_23C174EB8()
{
  return 1701273968;
}

uint64_t sub_23C174EC8()
{
  return 0x7461745364616F6CLL;
}

uint64_t sub_23C174EE4()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23C174EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C176664(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C174F1C()
{
  sub_23C1753A8();
  return sub_23C19C0F4();
}

uint64_t sub_23C174F44()
{
  sub_23C1753A8();
  return sub_23C19C100();
}

uint64_t LibraryCanvasContentState.withActiveLayout(_:)@<X0>(__int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *a1;
  v5 = *v2;
  v6 = type metadata accessor for LibraryCanvasContentState();
  sub_23C1758D8((uint64_t)v2 + *(int *)(v6 + 28), a2 + *(int *)(v6 + 28), (uint64_t (*)(_QWORD))type metadata accessor for LibraryCanvasContentLoadState);
  v7 = *(int *)(v6 + 32);
  v8 = (uint64_t)v2 + v7;
  v9 = a2 + v7;
  v10 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
  v11 = *((_BYTE *)v2 + 10);
  *(_QWORD *)a2 = v5;
  *(_WORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 10) = v11;
  return swift_bridgeObjectRetain();
}

uint64_t LibraryCanvasContentState.withLocale(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v5 = *v2;
  v6 = *((_WORD *)v2 + 4);
  v7 = type metadata accessor for LibraryCanvasContentState();
  sub_23C1758D8((uint64_t)v2 + *(int *)(v7 + 28), a2 + *(int *)(v7 + 28), (uint64_t (*)(_QWORD))type metadata accessor for LibraryCanvasContentLoadState);
  v8 = a2 + *(int *)(v7 + 32);
  v9 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
  v10 = *((_BYTE *)v2 + 10);
  *(_QWORD *)a2 = v5;
  *(_WORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 10) = v10;
  return swift_bridgeObjectRetain();
}

uint64_t LibraryCanvasContentState.withAllowedContentRatings(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v5 = *(_WORD *)(v2 + 8);
  v6 = type metadata accessor for LibraryCanvasContentState();
  sub_23C1758D8(v2 + *(int *)(v6 + 28), a2 + *(int *)(v6 + 28), (uint64_t (*)(_QWORD))type metadata accessor for LibraryCanvasContentLoadState);
  v7 = *(int *)(v6 + 32);
  v8 = v2 + v7;
  v9 = a2 + v7;
  v10 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
  v11 = *(_BYTE *)(v2 + 10);
  *(_QWORD *)a2 = a1;
  *(_WORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 10) = v11;
  return swift_bridgeObjectRetain();
}

uint64_t LibraryCanvasContentState.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B311A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C1753A8();
  sub_23C19C0E8();
  v11 = *v3;
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30E40);
  sub_23C17582C(&qword_256B311B0, (uint64_t (*)(void))sub_23C1753EC, MEMORY[0x24BEE1700]);
  sub_23C19C07C();
  if (!v2)
  {
    LOWORD(v11) = *((_WORD *)v3 + 4);
    HIBYTE(v10) = 1;
    sub_23C168978();
    sub_23C19C07C();
    LOBYTE(v11) = *((_BYTE *)v3 + 10);
    HIBYTE(v10) = 2;
    sub_23C168934();
    sub_23C19C07C();
    type metadata accessor for LibraryCanvasContentState();
    LOBYTE(v11) = 3;
    type metadata accessor for LibraryCanvasContentLoadState();
    sub_23C153930(&qword_256B311C0, (uint64_t (*)(uint64_t))type metadata accessor for LibraryCanvasContentLoadState, (uint64_t)&protocol conformance descriptor for LibraryCanvasContentLoadState);
    sub_23C19C07C();
    LOBYTE(v11) = 4;
    sub_23C19B524();
    sub_23C153930(&qword_256B2FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23C19C07C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C1753A8()
{
  unint64_t result;

  result = qword_256B311A8;
  if (!qword_256B311A8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A05B4, &type metadata for LibraryCanvasContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B311A8);
  }
  return result;
}

unint64_t sub_23C1753EC()
{
  unint64_t result;

  result = qword_256B311B8;
  if (!qword_256B311B8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for ContentRating, &type metadata for ContentRating);
    atomic_store(result, (unint64_t *)&qword_256B311B8);
  }
  return result;
}

uint64_t LibraryCanvasContentState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t State;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  char v29;
  uint64_t v30;

  v22 = a2;
  v24 = sub_23C19B524();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v23 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x24BDAC7A8](State);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B311C8);
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LibraryCanvasContentState();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_23C1753A8();
  v26 = v9;
  v14 = (uint64_t)v28;
  sub_23C19C0DC();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  v28 = v6;
  v15 = v7;
  v16 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30E40);
  v29 = 0;
  sub_23C17582C(&qword_256B311D0, (uint64_t (*)(void))sub_23C175894, MEMORY[0x24BEE1720]);
  v17 = v25;
  sub_23C19C01C();
  *(_QWORD *)v12 = v30;
  v29 = 1;
  sub_23C168D24();
  sub_23C19C01C();
  *((_WORD *)v12 + 4) = v30;
  v29 = 2;
  sub_23C168CE0();
  sub_23C19C01C();
  v12[10] = v30;
  LOBYTE(v30) = 3;
  sub_23C153930(&qword_256B311E0, (uint64_t (*)(uint64_t))type metadata accessor for LibraryCanvasContentLoadState, (uint64_t)&protocol conformance descriptor for LibraryCanvasContentLoadState);
  sub_23C19C01C();
  sub_23C174D34((uint64_t)v28, (uint64_t)&v12[*(int *)(v10 + 28)]);
  LOBYTE(v30) = 4;
  sub_23C153930(&qword_256B2FD48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
  v19 = v23;
  sub_23C19C01C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v26, v17);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v12[*(int *)(v10 + 32)], v19, v16);
  sub_23C1758D8((uint64_t)v12, v22, (uint64_t (*)(_QWORD))type metadata accessor for LibraryCanvasContentState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_23C1664F0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LibraryCanvasContentState);
}

uint64_t sub_23C17582C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30E40);
    v8 = a2();
    result = MEMORY[0x2426189D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C175894()
{
  unint64_t result;

  result = qword_256B311D8;
  if (!qword_256B311D8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for ContentRating, &type metadata for ContentRating);
    atomic_store(result, (unint64_t *)&qword_256B311D8);
  }
  return result;
}

uint64_t sub_23C1758D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23C17591C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryCanvasContentState.init(from:)(a1, a2);
}

uint64_t sub_23C175930(_QWORD *a1)
{
  return LibraryCanvasContentState.encode(to:)(a1);
}

uint64_t _s14FitnessLibrary0B18CanvasContentStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  if ((sub_23C181004(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
    && (sub_23C19B548() & 1) != 0)
  {
    sub_23C16BDD0(*(_BYTE *)(a1 + 10));
    if ((v4 & 1) != 0)
    {
      v5 = type metadata accessor for LibraryCanvasContentState();
      _s14FitnessLibrary0B22CanvasContentLoadStateO2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v5 + 28), a2 + *(int *)(v5 + 28));
      if ((v6 & 1) != 0)
        JUMPOUT(0x242617B18);
    }
  }
  return 0;
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryCanvasContentState(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _WORD *v9;
  _WORD *v10;
  uint64_t State;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    *(_BYTE *)(a1 + 10) = *((_BYTE *)a2 + 10);
    v8 = *(int *)(a3 + 28);
    v9 = (_WORD *)(a1 + v8);
    v10 = (_WORD *)((char *)a2 + v8);
    State = type metadata accessor for LibraryCanvasContentLoadState();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[4] = v10[4];
      swift_bridgeObjectRetain();
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
      v13 = (char *)v9 + v12;
      v14 = (char *)v10 + v12;
      v15 = sub_23C19B524();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    v16 = *(int *)(a3 + 32);
    v17 = v7 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = sub_23C19B524();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return v7;
}

uint64_t destroy for LibraryCanvasContentState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for LibraryCanvasContentLoadState();
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    swift_bridgeObjectRelease();
    v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
    v6 = sub_23C19B524();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 32);
  v8 = sub_23C19B524();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for LibraryCanvasContentState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _WORD *v7;
  _WORD *v8;
  uint64_t State;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v6 = *(int *)(a3 + 28);
  v7 = (_WORD *)(a1 + v6);
  v8 = (_WORD *)(a2 + v6);
  State = type metadata accessor for LibraryCanvasContentLoadState();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    *(_QWORD *)v7 = *(_QWORD *)v8;
    v7[4] = v8[4];
    swift_bridgeObjectRetain();
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
    v11 = (char *)v7 + v10;
    v12 = (char *)v8 + v10;
    v13 = sub_23C19B524();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  v14 = *(int *)(a3 + 32);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for LibraryCanvasContentState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _WORD *v7;
  _WORD *v8;
  uint64_t State;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_WORD *)(a1 + v6);
    v8 = (_WORD *)(a2 + v6);
    sub_23C1664F0(a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for LibraryCanvasContentLoadState);
    State = type metadata accessor for LibraryCanvasContentLoadState();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    }
    else
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      v7[4] = v8[4];
      swift_bridgeObjectRetain();
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      v13 = sub_23C19B524();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
  }
  v14 = *(int *)(a3 + 32);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t initializeWithTake for LibraryCanvasContentState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _WORD *v7;
  _WORD *v8;
  uint64_t State;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v6 = *(int *)(a3 + 28);
  v7 = (_WORD *)(a1 + v6);
  v8 = (_WORD *)(a2 + v6);
  State = type metadata accessor for LibraryCanvasContentLoadState();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
  }
  else
  {
    *(_QWORD *)v7 = *(_QWORD *)v8;
    v7[4] = v8[4];
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
    v11 = (char *)v7 + v10;
    v12 = (char *)v8 + v10;
    v13 = sub_23C19B524();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  v14 = *(int *)(a3 + 32);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t assignWithTake for LibraryCanvasContentState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _WORD *v7;
  _WORD *v8;
  uint64_t State;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_WORD *)(a1 + v6);
    v8 = (_WORD *)(a2 + v6);
    sub_23C1664F0(a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for LibraryCanvasContentLoadState);
    State = type metadata accessor for LibraryCanvasContentLoadState();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(State - 8) + 64));
    }
    else
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      v7[4] = v8[4];
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      v13 = sub_23C19B524();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
  }
  v14 = *(int *)(a3 + 32);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasContentState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C1762D0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t State;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    State = type metadata accessor for LibraryCanvasContentLoadState();
    v9 = *(_QWORD *)(State - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = State;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_23C19B524();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23C17637C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t State;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    State = type metadata accessor for LibraryCanvasContentLoadState();
    v9 = *(_QWORD *)(State - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = State;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_23C19B524();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_23C176418()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for LibraryCanvasContentLoadState();
  if (v1 <= 0x3F)
  {
    result = sub_23C19B524();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23C17650C + 4 * byte_23C1A040A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23C176540 + 4 * byte_23C1A0405[v4]))();
}

uint64_t sub_23C176540(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C176548(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C176550);
  return result;
}

uint64_t sub_23C17655C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C176564);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23C176568(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C176570(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentState.CodingKeys()
{
  return &type metadata for LibraryCanvasContentState.CodingKeys;
}

unint64_t sub_23C176590()
{
  unint64_t result;

  result = qword_256B31288;
  if (!qword_256B31288)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A058C, &type metadata for LibraryCanvasContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31288);
  }
  return result;
}

unint64_t sub_23C1765D8()
{
  unint64_t result;

  result = qword_256B31290;
  if (!qword_256B31290)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A04FC, &type metadata for LibraryCanvasContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31290);
  }
  return result;
}

unint64_t sub_23C176620()
{
  unint64_t result;

  result = qword_256B31298;
  if (!qword_256B31298)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0524, &type metadata for LibraryCanvasContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31298);
  }
  return result;
}

uint64_t sub_23C176664(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023C1A4570 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614C657669746361 && a2 == 0xEC00000074756F79 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701273968 && a2 == 0xE400000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23C176888()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31328);
  sub_23C15159C(qword_256B31330, &qword_256B31328, MEMORY[0x24BE2B5E8]);
  return sub_23C19B5D8();
}

uint64_t OfflineView.init(store:canvasViewBuilder:contentUnavailableViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a7 = sub_23C1503C4;
  *(_QWORD *)(a7 + 8) = result;
  *(_BYTE *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 24) = a3;
  *(_QWORD *)(a7 + 32) = a4;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_23C176974()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t OfflineView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 *v49;
  _QWORD v50[2];
  uint64_t v51;
  _QWORD v52[2];
  _QWORD v53[2];
  _QWORD v54[6];
  _QWORD v55[2];
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v44 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30F10);
  v4 = a1[3];
  v35 = a1[2];
  v5 = v35;
  v6 = sub_23C19B680();
  v39 = a1[4];
  v55[0] = v39;
  v55[1] = MEMORY[0x24BDECC60];
  v37 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v6, v55);
  v36 = sub_23C165284();
  *(_QWORD *)&v56 = v6;
  *((_QWORD *)&v56 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v57 = v37;
  *((_QWORD *)&v57 + 1) = v36;
  MEMORY[0x24261897C](255, &v56, MEMORY[0x24BDF28C0], 0);
  v7 = sub_23C19B7DC();
  v38 = sub_23C19B7DC();
  v8 = v4;
  v34 = v4;
  v9 = sub_23C19B7DC();
  v10 = sub_23C19BBC0();
  v42 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - v11;
  v13 = sub_23C19B680();
  v43 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v40 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v41 = (uint64_t)&v33 - v16;
  v17 = v2[1];
  v56 = *v2;
  v57 = v17;
  v58 = v2[2];
  v59 = *((_QWORD *)v2 + 6);
  v45 = v5;
  v46 = v8;
  v18 = a1[5];
  v19 = v39;
  v47 = v39;
  v48 = v18;
  v49 = &v56;
  v20 = sub_23C15159C(qword_256B312A0, &qword_256B30F10, MEMORY[0x24BDEBC00]);
  v54[2] = v6;
  v54[3] = MEMORY[0x24BEE0D00];
  v54[4] = v37;
  v54[5] = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v54[0] = v18;
  v54[1] = OpaqueTypeConformance2;
  v22 = MEMORY[0x24BDEF3E0];
  v23 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v7, v54);
  v53[0] = v20;
  v53[1] = v23;
  v52[0] = MEMORY[0x2426189D0](v22, v38, v53);
  v52[1] = v18;
  v24 = MEMORY[0x2426189D0](v22, v9, v52);
  sub_23C19BBB4();
  v25 = swift_allocObject();
  v26 = v34;
  *(_QWORD *)(v25 + 16) = v35;
  *(_QWORD *)(v25 + 24) = v26;
  *(_QWORD *)(v25 + 32) = v19;
  *(_QWORD *)(v25 + 40) = v18;
  v27 = v57;
  *(_OWORD *)(v25 + 48) = v56;
  *(_OWORD *)(v25 + 64) = v27;
  *(_OWORD *)(v25 + 80) = v58;
  *(_QWORD *)(v25 + 96) = v59;
  sub_23C160D7C((uint64_t)&v56);
  v51 = v24;
  v28 = MEMORY[0x2426189D0](MEMORY[0x24BDF3F50], v10, &v51);
  v29 = (uint64_t)v40;
  sub_23C19BB30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v10);
  v50[0] = v28;
  v50[1] = MEMORY[0x24BDF0910];
  MEMORY[0x2426189D0](MEMORY[0x24BDED308], v13, v50);
  v30 = v41;
  sub_23C1515F4(v29, v13, v41);
  v31 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v31(v29, v13);
  sub_23C1502B0(v30, v13, v44);
  return ((uint64_t (*)(uint64_t, uint64_t))v31)(v30, v13);
}

void sub_23C176DD0(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  _QWORD v38[29];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[4];

  v41 = a5;
  v39 = a4;
  v38[26] = a6;
  v10 = sub_23C19B524();
  MEMORY[0x24BDAC7A8](v10);
  v38[15] = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23C19BDD0();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v38[11] = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[7] = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v38[6] = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23C19B680();
  v38[14] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v38[10] = (char *)v38 - v17;
  v53[0] = a4;
  v53[1] = MEMORY[0x24BDECC60];
  v18 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v16, v53);
  v19 = sub_23C165284();
  v43 = v16;
  v44 = v18;
  *(_QWORD *)&v49 = v16;
  *((_QWORD *)&v49 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v50 = v18;
  *((_QWORD *)&v50 + 1) = v19;
  v42 = v19;
  v20 = MEMORY[0x24261897C](0, &v49, MEMORY[0x24BDF28C0], 0);
  v38[9] = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v38[13] = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v38[12] = (char *)v38 - v24;
  v38[19] = *(_QWORD *)(a3 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v38[20] = (char *)v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v38[24] = (char *)v38 - v27;
  v38[16] = v28;
  v29 = sub_23C19B7DC();
  v38[18] = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v38[17] = (char *)v38 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v38[22] = (char *)v38 - v32;
  v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30F10);
  v34 = sub_23C19B7DC();
  v38[25] = *(_QWORD *)(v34 - 8);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v38[23] = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v36 = sub_23C19B7DC();
  v38[27] = *(_QWORD *)(v36 - 8);
  v38[28] = v36;
  MEMORY[0x24BDAC7A8](v36);
  v37 = a1[1];
  v49 = *a1;
  v50 = v37;
  v51 = a1[2];
  v38[21] = a1;
  v52 = *((_QWORD *)a1 + 6);
  v38[8] = a2;
  v45 = a2;
  v46 = a3;
  v40 = a3;
  v47 = v39;
  v48 = v41;
  type metadata accessor for OfflineView();
}

uint64_t sub_23C17716C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  __int128 v42;
  _OWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1[5] = a1;
  sub_23C176888();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  v10 = swift_release();
  v11 = *(_QWORD *)(v9 - 200);
  if (v11 >= 2)
  {
    v1[1] = v6;
    v1[2] = v3;
    v1[23] = v2;
    v1[3] = v5;
    v1[4] = v8;
    if (v11 == 2)
    {
      v20 = v1[20];
      (*(void (**)(uint64_t))(v1[21] + 40))(v10);
      v21 = v1[24];
      v22 = v1[30];
      v4 = v1[31];
      sub_23C1515F4(v20, v22, v21);
      v23 = *(void (**)(uint64_t, uint64_t))(v1[19] + 8);
      v23(v20, v22);
      sub_23C1502B0(v21, v22, v20);
      v24 = sub_23C15159C(qword_256B312A0, &qword_256B30F10, MEMORY[0x24BDEBC00]);
      v18 = v1[32];
      v25 = v1[33];
      *(_QWORD *)(v9 - 176) = v25;
      v26 = v1[34];
      *(_QWORD *)(v9 - 168) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v9 - 160) = v26;
      *(_QWORD *)(v9 - 152) = v18;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      *(_QWORD *)(v9 - 224) = v4;
      *(_QWORD *)(v9 - 216) = OpaqueTypeConformance2;
      v28 = MEMORY[0x24BDEF3E0];
      v5 = v1[3];
      v29 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v5, v9 - 224);
      *(_QWORD *)(v9 - 240) = v24;
      *(_QWORD *)(v9 - 232) = v29;
      v30 = v28;
      v17 = v25;
      v8 = v1[4];
      MEMORY[0x2426189D0](v30, v8, v9 - 240);
      v31 = v1[23];
      sub_23C1967CC(v20, v8, v22);
      v23(v20, v22);
      v32 = v22;
      v19 = v31;
      v23(v1[24], v32);
      v16 = v1[26];
    }
    else
    {
      v33 = *(_QWORD *)(v9 - 192);
      v34 = *(_QWORD *)(v9 - 208);
      swift_bridgeObjectRetain();
      sub_23C14D790(v34, v11);
      v35 = *(_QWORD *)(v33 + 16);
      v36 = swift_bridgeObjectRelease();
      v37 = v1[21];
      if (v35)
      {
        v38 = v1[6];
        (*(void (**)(uint64_t))(v37 + 24))(v36);
        sub_23C19B8D8();
        v39 = v1[10];
        v40 = v1[8];
        sub_23C19BB18();
        (*(void (**)(uint64_t, uint64_t))(v1[7] + 8))(v38, v40);
        sub_23C19BDC4();
        if (qword_256B2FD18 != -1)
          swift_once();
        v41 = (void *)qword_256B404E8;
        v42 = *(_OWORD *)(v37 + 16);
        v43 = (_OWORD *)(v9 - 176);
        *v43 = *(_OWORD *)v37;
        v43[1] = v42;
        v43[2] = *(_OWORD *)(v37 + 32);
        *(_QWORD *)(v9 - 128) = *(_QWORD *)(v37 + 48);
        v44 = v41;
        sub_23C176888();
        swift_getKeyPath();
        sub_23C19BD94();
        swift_release();
        swift_release();
        *(_QWORD *)(v9 - 176) = sub_23C19BDF4();
        *(_QWORD *)(v9 - 168) = v45;
        v46 = v1[13];
        v47 = v1[33];
        v48 = v1[34];
        v49 = MEMORY[0x24BEE0D00];
        v50 = v1[32];
        sub_23C19BA88();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v1[14] + 8))(v39, v47);
        *(_QWORD *)(v9 - 176) = v47;
        *(_QWORD *)(v9 - 168) = v49;
        *(_QWORD *)(v9 - 160) = v48;
        *(_QWORD *)(v9 - 152) = v50;
        v51 = v50;
        swift_getOpaqueTypeConformance2();
        v52 = v1[12];
        v53 = v1[16];
        sub_23C1515F4(v46, v53, v52);
        v54 = *(void (**)(uint64_t, uint64_t))(v1[9] + 8);
        v54(v46, v53);
        sub_23C1502B0(v52, v53, v46);
        v55 = v1[22];
        v4 = v1[31];
        sub_23C1967CC(v46, v1[30], v53);
        v54(v46, v53);
        v54(v52, v53);
        v56 = v55;
      }
      else
      {
        v57 = v1[20];
        (*(void (**)(uint64_t))(v37 + 40))(v36);
        v58 = v1[24];
        v59 = v1[30];
        v4 = v1[31];
        sub_23C1515F4(v57, v59, v58);
        v60 = *(void (**)(uint64_t, uint64_t))(v1[19] + 8);
        v60(v57, v59);
        sub_23C1502B0(v58, v59, v57);
        *(_QWORD *)(v9 - 176) = v1[33];
        v49 = MEMORY[0x24BEE0D00];
        v61 = v1[34];
        *(_QWORD *)(v9 - 168) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v9 - 160) = v61;
        v51 = v1[32];
        *(_QWORD *)(v9 - 152) = v51;
        swift_getOpaqueTypeConformance2();
        v62 = v1[22];
        sub_23C196708(v57, v59);
        v60(v57, v59);
        v60(v58, v59);
        v56 = v62;
      }
      v16 = v1[26];
      v64 = v1[33];
      v63 = v1[34];
      *(_QWORD *)(v9 - 176) = v64;
      *(_QWORD *)(v9 - 168) = v49;
      *(_QWORD *)(v9 - 160) = v63;
      *(_QWORD *)(v9 - 152) = v51;
      v65 = swift_getOpaqueTypeConformance2();
      v1[41] = v4;
      v1[42] = v65;
      v5 = v1[3];
      v66 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v5, v1 + 41);
      v67 = v1[17];
      sub_23C1502B0(v56, v5, v67);
      v68 = sub_23C15159C(qword_256B312A0, &qword_256B30F10, MEMORY[0x24BDEBC00]);
      v69 = v1[2];
      sub_23C1967CC(v67, v1[1], v5);
      v70 = *(void (**)(uint64_t, uint64_t))(v1[18] + 8);
      v70(v67, v5);
      v1[39] = v68;
      v1[40] = v66;
      v17 = v64;
      v8 = v1[4];
      MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v8, v1 + 39);
      v19 = v1[23];
      sub_23C196708(v69, v8);
      (*(void (**)(uint64_t, uint64_t))(v1[25] + 8))(v69, v8);
      v70(v1[22], v5);
      v18 = v1[32];
    }
  }
  else
  {
    sub_23C19B5E4();
    v12 = sub_23C15159C(qword_256B312A0, &qword_256B30F10, MEMORY[0x24BDEBC00]);
    *(_QWORD *)(v9 - 176) = v1[33];
    v13 = v1[34];
    *(_QWORD *)(v9 - 168) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 - 160) = v13;
    *(_QWORD *)(v9 - 152) = v1[32];
    v14 = swift_getOpaqueTypeConformance2();
    v1[37] = v4;
    v1[38] = v14;
    v15 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v5, v1 + 37);
    sub_23C196708(v7, v6);
    v1[35] = v12;
    v1[36] = v15;
    MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v8, v1 + 35);
    sub_23C196708(v3, v8);
    (*(void (**)(uint64_t, uint64_t))(v1[25] + 8))(v3, v8);
    (*(void (**)(uint64_t, uint64_t))(v1[23] + 8))(v7, v6);
    v16 = v1[26];
    v18 = v1[32];
    v17 = v1[33];
    v19 = v2;
  }
  v71 = sub_23C15159C(qword_256B312A0, &qword_256B30F10, MEMORY[0x24BDEBC00]);
  *(_QWORD *)(v9 - 176) = v17;
  v72 = v1[34];
  *(_QWORD *)(v9 - 168) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 - 160) = v72;
  *(_QWORD *)(v9 - 152) = v18;
  v73 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v9 - 256) = v4;
  *(_QWORD *)(v9 - 248) = v73;
  v74 = MEMORY[0x24BDEF3E0];
  v75 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v5, v9 - 256);
  v1[46] = v71;
  v1[47] = v75;
  v1[44] = MEMORY[0x2426189D0](v74, v8, v1 + 46);
  v1[45] = v4;
  v76 = v1[28];
  MEMORY[0x2426189D0](v74, v76, v1 + 44);
  sub_23C1502B0(v19, v76, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1[27] + 8))(v19, v76);
}

void sub_23C1778F0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23C176DD0(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

void sub_23C177900()
{
  type metadata accessor for OfflineView();
}

uint64_t sub_23C17793C()
{
  sub_23C176888();
  sub_23C19BDA0();
  return swift_release();
}

uint64_t sub_23C177970()
{
  sub_23C151164();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23C1779A8()
{
  sub_23C177900();
}

uint64_t sub_23C1779B8()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for OfflineView()
{
  JUMPOUT(0x242618934);
}

uint64_t sub_23C1779FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30F10);
  v3 = sub_23C19B680();
  v23[0] = v1;
  v23[1] = MEMORY[0x24BDECC60];
  v4 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v3, v23);
  v5 = sub_23C165284();
  v19 = v3;
  v20 = MEMORY[0x24BEE0D00];
  v21 = v4;
  v22 = v5;
  MEMORY[0x24261897C](255, &v19, MEMORY[0x24BDF28C0], 0);
  v6 = sub_23C19B7DC();
  v7 = sub_23C19B7DC();
  v8 = sub_23C19B7DC();
  v9 = sub_23C19BBC0();
  v10 = sub_23C19B680();
  v11 = sub_23C15159C(qword_256B312A0, &qword_256B30F10, MEMORY[0x24BDEBC00]);
  v19 = v3;
  v20 = MEMORY[0x24BEE0D00];
  v21 = v4;
  v22 = v5;
  v18[0] = v2;
  v18[1] = swift_getOpaqueTypeConformance2();
  v12 = MEMORY[0x24BDEF3E0];
  v17[0] = v11;
  v17[1] = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v6, v18);
  v16[0] = MEMORY[0x2426189D0](v12, v7, v17);
  v16[1] = v2;
  v15 = MEMORY[0x2426189D0](v12, v8, v16);
  v14[0] = MEMORY[0x2426189D0](MEMORY[0x24BDF3F50], v9, &v15);
  v14[1] = MEMORY[0x24BDF0910];
  return MEMORY[0x2426189D0](MEMORY[0x24BDED308], v10, v14);
}

uint64_t sub_23C177BE8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_23C19BD40();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_23C19BD40();
}

uint64_t LibraryView.init(store:canvasViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a5 = sub_23C1503C4;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_23C177E04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t LibraryView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;

  v29 = a1;
  v32 = a2;
  v4 = sub_23C19B7F4();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  type metadata accessor for LibraryPickerView();
  v28 = *(_QWORD *)(a1 + 16);
  swift_getTupleTypeMetadata2();
  v7 = sub_23C19BD34();
  v8 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v7);
  sub_23C19BC68();
  sub_23C19B680();
  swift_getTupleTypeMetadata2();
  v9 = sub_23C19BD34();
  MEMORY[0x2426189D0](v8, v9);
  v10 = sub_23C19BC80();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v10);
  v11 = sub_23C19B5A8();
  v27 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - v12;
  v14 = MEMORY[0x2426189D0](MEMORY[0x24BDEB238], v11);
  *(_QWORD *)&v38[0] = v11;
  *((_QWORD *)&v38[0] + 1) = v14;
  v15 = MEMORY[0x24261897C](0, v38, MEMORY[0x24BDF2FE0], 0);
  v26 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v25 - v19;
  v21 = *(_OWORD *)(v2 + 16);
  v38[0] = *(_OWORD *)v2;
  v38[1] = v21;
  v39 = *(_QWORD *)(v2 + 32);
  sub_23C19B8B4();
  v22 = *(_QWORD *)(v29 + 24);
  v33 = v28;
  v34 = v22;
  v35 = v38;
  sub_23C150FD8();
  sub_23C19B7E8();
  LOBYTE(v8) = sub_23C19B8B4();
  sub_23C19B8A8();
  sub_23C19B8A8();
  if (sub_23C19B8A8() != v8)
    sub_23C19B8A8();
  sub_23C19BAC4();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
  v36 = v11;
  v37 = v14;
  swift_getOpaqueTypeConformance2();
  sub_23C1515F4((uint64_t)v18, v15, (uint64_t)v20);
  v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v18, v15);
  sub_23C1502B0((uint64_t)v20, v15, v32);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v15);
}

uint64_t sub_23C17816C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  type metadata accessor for LibraryPickerView();
  swift_getTupleTypeMetadata2();
  v8 = sub_23C19BD34();
  v9 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v8);
  sub_23C19BC68();
  sub_23C19B680();
  swift_getTupleTypeMetadata2();
  v10 = sub_23C19BD34();
  MEMORY[0x2426189D0](v9, v10);
  v11 = sub_23C19BC80();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v20[-v16];
  sub_23C19BD04();
  v21 = a2;
  v22 = a3;
  v23 = a1;
  sub_23C19BC74();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v11);
  sub_23C1515F4((uint64_t)v15, v11, (uint64_t)v17);
  v18 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
  v18(v15, v11);
  sub_23C1502B0((uint64_t)v17, v11, a4);
  return ((uint64_t (*)(_BYTE *, uint64_t))v18)(v17, v11);
}

uint64_t sub_23C178348@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23C17816C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23C178354()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C178388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  char *v47;
  _QWORD v48[2];

  v37 = a1;
  v38 = a3;
  v42 = a4;
  type metadata accessor for LibraryPickerView();
  v35 = a2;
  swift_getTupleTypeMetadata2();
  v5 = sub_23C19BD34();
  v34[0] = MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v5);
  v34[1] = v5;
  v6 = sub_23C19BC68();
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v34 - v7;
  v9 = sub_23C19B680();
  v39 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v41 = (uint64_t)v34 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B2FF80);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v40 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v34 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v34 - v21;
  v46 = 0;
  LOBYTE(v47) = 1;
  v23 = sub_23C19B8B4();
  sub_23C19B8A8();
  sub_23C19B8A8();
  if (sub_23C19B8A8() != v23)
    sub_23C19B8A8();
  sub_23C19BD10();
  sub_23C19BAD0();
  v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v22, v20, v14);
  MEMORY[0x24BDAC7A8](v24);
  v25 = v38;
  v34[-4] = v35;
  v34[-3] = v25;
  v34[-2] = v37;
  sub_23C19B7A0();
  sub_23C19BC5C();
  sub_23C19B8D8();
  v26 = MEMORY[0x2426189D0](MEMORY[0x24BDF4700], v6);
  sub_23C19BB18();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
  v48[0] = v26;
  v48[1] = MEMORY[0x24BDECC60];
  v27 = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v9, v48);
  v28 = v41;
  sub_23C1515F4((uint64_t)v12, v9, v41);
  v29 = v39;
  v30 = *(void (**)(char *, uint64_t))(v39 + 8);
  v30(v12, v9);
  v31 = (uint64_t)v40;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v40, v22, v14);
  v46 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v12, v28, v9);
  v47 = v12;
  v45[0] = v14;
  v45[1] = v9;
  OpaqueTypeConformance2 = MEMORY[0x24BDF4638];
  v44 = MEMORY[0x24BDF4610];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v44 = v27;
  sub_23C177BE8(&v46, 2uLL, (uint64_t)v45);
  v30((char *)v28, v9);
  v32 = *(void (**)(char *, uint64_t))(v15 + 8);
  v32(v22, v14);
  v30(v12, v9);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v31, v14);
}

uint64_t sub_23C178778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  double v21;
  void (*v22)(char *, uint64_t);
  _QWORD v24[4];
  _QWORD v25[2];
  _OWORD v26[2];
  uint64_t v27;

  v24[1] = a4;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v24 - v11;
  v13 = type metadata accessor for LibraryPickerView();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v24 - v17;
  v19 = *(_OWORD *)(a1 + 16);
  v26[0] = *(_OWORD *)a1;
  v26[1] = v19;
  v27 = *(_QWORD *)(a1 + 32);
  type metadata accessor for LibraryView(0, a2, a3, v20);
  v21 = sub_23C178934((uint64_t)v18);
  (*(void (**)(double))(a1 + 24))(v21);
  sub_23C1515F4((uint64_t)v10, a2, (uint64_t)v12);
  v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22(v10, a2);
  sub_23C178CA8((uint64_t)v18, (uint64_t)v16);
  *(_QWORD *)&v26[0] = v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, a2);
  *((_QWORD *)&v26[0] + 1) = v10;
  v25[0] = v13;
  v25[1] = a2;
  v24[2] = sub_23C178CEC();
  v24[3] = a3;
  sub_23C177BE8((uint64_t *)v26, 2uLL, (uint64_t)v25);
  v22(v12, a2);
  sub_23C178D34((uint64_t)v18);
  v22(v10, a2);
  return sub_23C178D34((uint64_t)v16);
}

double sub_23C178934@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_23C19BB60();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  v9 = v1[3];
  v10 = v1[4];
  v26 = *v1;
  v6 = v26;
  v27 = v7;
  v28 = v8;
  v29 = v9;
  v30 = v10;
  sub_23C15FEE4();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v9;
  v30 = v10;
  sub_23C15FEE4();
  sub_23C19BCA4();
  v11 = v26;
  v12 = v27;
  v13 = v28;
  v14 = (int *)type metadata accessor for LibraryPickerView();
  v15 = a1 + v14[5];
  *(_QWORD *)v15 = v11;
  *(_QWORD *)(v15 + 8) = v12;
  *(_BYTE *)(v15 + 16) = v13;
  v16 = v14[6];
  v24 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B313C0);
  sub_23C19BBFC();
  *(_OWORD *)(a1 + v16) = v25;
  v17 = a1 + v14[7];
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v5, *MEMORY[0x24BDF3C28], v23);
  v18 = MEMORY[0x2426181A8](v5, 0.694117647, 0.694117647, 0.694117647, 1.0);
  v19 = sub_23C19BB90();
  result = 20.0;
  *(_OWORD *)v17 = xmmword_23C1A06F0;
  *(_QWORD *)(v17 + 16) = 0x3FD0000000000000;
  *(_QWORD *)(v17 + 24) = v18;
  *(_QWORD *)(v17 + 32) = v19;
  return result;
}

uint64_t sub_23C178AF4()
{
  swift_getKeyPath();
  sub_23C19BD94();
  return swift_release();
}

unsigned __int8 *sub_23C178B38@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(_BYTE *)(a2 + 2) = 0;
  return result;
}

uint64_t type metadata accessor for LibraryView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryView);
}

uint64_t sub_23C178B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B2FF80);
  type metadata accessor for LibraryPickerView();
  swift_getTupleTypeMetadata2();
  v0 = sub_23C19BD34();
  v1 = MEMORY[0x24BDF5428];
  MEMORY[0x2426189D0](MEMORY[0x24BDF5428], v0);
  sub_23C19BC68();
  sub_23C19B680();
  swift_getTupleTypeMetadata2();
  v2 = sub_23C19BD34();
  MEMORY[0x2426189D0](v1, v2);
  v3 = sub_23C19BC80();
  MEMORY[0x2426189D0](MEMORY[0x24BDF4750], v3);
  v5 = sub_23C19B5A8();
  MEMORY[0x2426189D0](MEMORY[0x24BDEB238], v5);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C178C90@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23C178388(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23C178C9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23C178778(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23C178CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryPickerView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C178CEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B313B8;
  if (!qword_256B313B8)
  {
    v1 = type metadata accessor for LibraryPickerView();
    result = MEMORY[0x2426189D0](&unk_23C1A2650, v1);
    atomic_store(result, (unint64_t *)&qword_256B313B8);
  }
  return result;
}

uint64_t sub_23C178D34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LibraryPickerView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C178D74()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E696863746566;
  else
    return 0x64656863746566;
}

uint64_t sub_23C178DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C17A260(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C178DD4()
{
  sub_23C179CF4();
  return sub_23C19C0F4();
}

uint64_t sub_23C178DFC()
{
  sub_23C179CF4();
  return sub_23C19C100();
}

uint64_t sub_23C178E24()
{
  sub_23C179D7C();
  return sub_23C19C0F4();
}

uint64_t sub_23C178E4C()
{
  sub_23C179D7C();
  return sub_23C19C100();
}

uint64_t sub_23C178E74()
{
  sub_23C179D38();
  return sub_23C19C0F4();
}

uint64_t sub_23C178E9C()
{
  sub_23C179D38();
  return sub_23C19C100();
}

uint64_t WorkoutPlanBannerLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t State;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B313C8);
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v21 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B313D0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x24BDAC7A8](State);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B313D8);
  v28 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C179CF4();
  sub_23C19C0E8();
  sub_23C155E44(v27, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    v30 = 1;
    sub_23C179D38();
    v16 = v21;
    sub_23C19C034();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
  }
  else
  {
    sub_23C156708((uint64_t)v12, (uint64_t)v9);
    v29 = 0;
    sub_23C179D7C();
    v18 = v24;
    sub_23C19C034();
    type metadata accessor for WorkoutPlanDetail();
    sub_23C153930(&qword_256B31050, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanDetail, (uint64_t)&protocol conformance descriptor for WorkoutPlanDetail);
    v19 = v26;
    sub_23C19C04C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
    sub_23C15FEA8((uint64_t)v9, &qword_256B302B0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v15, v13);
}

uint64_t WorkoutPlanBannerLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t State;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  char v48;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B313F8);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31400);
  v6 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  v41 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31408);
  v8 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for WorkoutPlanBannerLoadState();
  v12 = MEMORY[0x24BDAC7A8](State);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C179CF4();
  v17 = v46;
  sub_23C19C0DC();
  if (!v17)
  {
    v35 = v16;
    v36 = State;
    v19 = v43;
    v18 = v44;
    v34 = v14;
    v37 = v8;
    v46 = a1;
    v20 = v45;
    v21 = sub_23C19C028();
    if (*(_QWORD *)(v21 + 16) == 1)
    {
      if ((*(_BYTE *)(v21 + 32) & 1) != 0)
      {
        v22 = v46;
        v48 = 1;
        sub_23C179D38();
        sub_23C19BFC8();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v39);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v20);
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
        v29 = (uint64_t)v35;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v35, 1, 1, v28);
        a1 = v22;
      }
      else
      {
        v47 = 0;
        sub_23C179D7C();
        v26 = v19;
        sub_23C19BFC8();
        type metadata accessor for WorkoutPlanDetail();
        sub_23C153930(&qword_256B31070, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanDetail, (uint64_t)&protocol conformance descriptor for WorkoutPlanDetail);
        v30 = (uint64_t)v34;
        v31 = v40;
        sub_23C19BFEC();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v20);
        a1 = v46;
        v29 = (uint64_t)v35;
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v30, 0, 1, v32);
        sub_23C156798(v30, v29, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerLoadState);
      }
      sub_23C156798(v29, v42, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerLoadState);
    }
    else
    {
      v23 = sub_23C19BF50();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
      *v25 = v36;
      sub_23C19BFD4();
      sub_23C19BF44();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v20);
      a1 = v46;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23C179664@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutPlanBannerLoadState.init(from:)(a1, a2);
}

uint64_t sub_23C179678(_QWORD *a1)
{
  return WorkoutPlanBannerLoadState.encode(to:)(a1);
}

uint64_t WorkoutPlanBannerLoadState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t State;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  v1 = type metadata accessor for WorkoutPlanDetail();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v16 - v10;
  State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x24BDAC7A8](State);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C155E44(v0, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
    return sub_23C19C0B8();
  sub_23C156708((uint64_t)v14, (uint64_t)v11);
  sub_23C19C0B8();
  sub_23C156750((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1)
  {
    sub_23C19C0C4();
  }
  else
  {
    sub_23C156798((uint64_t)v9, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
    sub_23C19C0C4();
    WorkoutPlanDetail.hash(into:)();
    sub_23C1664F0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
  }
  return sub_23C15FEA8((uint64_t)v11, &qword_256B302B0);
}

uint64_t WorkoutPlanBannerLoadState.hashValue.getter()
{
  sub_23C19C0AC();
  WorkoutPlanBannerLoadState.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C179894()
{
  sub_23C19C0AC();
  WorkoutPlanBannerLoadState.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C1798D4()
{
  sub_23C19C0AC();
  WorkoutPlanBannerLoadState.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t _s14FitnessLibrary22WorkoutPlanBannerStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t State;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = type metadata accessor for WorkoutPlanDetail();
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v31 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31148);
  MEMORY[0x24BDAC7A8](v6);
  v34 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v32 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - v12;
  State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x24BDAC7A8](State);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B314D8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_23C155E44(a1, (uint64_t)v20);
  sub_23C155E44(a2, v21);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v22((uint64_t)v20, 1, v8) == 1)
  {
    if (v22(v21, 1, v8) == 1)
      goto LABEL_14;
    goto LABEL_6;
  }
  sub_23C155E44((uint64_t)v20, (uint64_t)v16);
  if (v22(v21, 1, v8) != 1)
  {
    sub_23C156708(v21, (uint64_t)v13);
    v23 = v34;
    v24 = v34 + *(int *)(v6 + 48);
    sub_23C156708((uint64_t)v16, v34);
    sub_23C156750((uint64_t)v13, v24);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    v26 = v33;
    if (v25(v23, 1, v33) == 1)
    {
      sub_23C15FEA8((uint64_t)v13, &qword_256B302B0);
      if (v25(v24, 1, v26) == 1)
      {
        sub_23C15FEA8(v23, &qword_256B302B0);
LABEL_14:
        sub_23C1664F0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerLoadState);
        return 1;
      }
    }
    else
    {
      v27 = v32;
      sub_23C156750(v23, v32);
      if (v25(v24, 1, v26) != 1)
      {
        v28 = v31;
        sub_23C156798(v24, v31, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
        v29 = static WorkoutPlanDetail.== infix(_:_:)(v27, v28);
        sub_23C1664F0(v28, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
        sub_23C15FEA8((uint64_t)v13, &qword_256B302B0);
        sub_23C1664F0(v27, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
        sub_23C15FEA8(v23, &qword_256B302B0);
        if ((v29 & 1) != 0)
          goto LABEL_14;
LABEL_15:
        sub_23C1664F0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerLoadState);
        return 0;
      }
      sub_23C15FEA8((uint64_t)v13, &qword_256B302B0);
      sub_23C1664F0(v27, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanDetail);
    }
    sub_23C15FEA8(v23, &qword_256B31148);
    goto LABEL_15;
  }
  sub_23C15FEA8((uint64_t)v16, &qword_256B302B0);
LABEL_6:
  sub_23C15FEA8((uint64_t)v20, &qword_256B314D8);
  return 0;
}

uint64_t type metadata accessor for WorkoutPlanBannerLoadState()
{
  uint64_t result;

  result = qword_256B31488;
  if (!qword_256B31488)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C179CF4()
{
  unint64_t result;

  result = qword_256B313E0;
  if (!qword_256B313E0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0B64, &type metadata for WorkoutPlanBannerLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B313E0);
  }
  return result;
}

unint64_t sub_23C179D38()
{
  unint64_t result;

  result = qword_256B313E8;
  if (!qword_256B313E8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0B14, &type metadata for WorkoutPlanBannerLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B313E8);
  }
  return result;
}

unint64_t sub_23C179D7C()
{
  unint64_t result;

  result = qword_256B313F0;
  if (!qword_256B313F0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0AC4, &type metadata for WorkoutPlanBannerLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B313F0);
  }
  return result;
}

uint64_t sub_23C179DC0()
{
  return sub_23C153930(&qword_256B31410, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanBannerLoadState, (uint64_t)&protocol conformance descriptor for WorkoutPlanBannerLoadState);
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerLoadState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C179DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerLoadState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C179E54(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C179EF4 + 4 * byte_23C1A07D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C179F28 + 4 * byte_23C1A07D0[v4]))();
}

uint64_t sub_23C179F28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C179F30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C179F38);
  return result;
}

uint64_t sub_23C179F44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C179F4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C179F50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C179F58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerLoadState.CodingKeys()
{
  return &type metadata for WorkoutPlanBannerLoadState.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerLoadState.FetchedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C179FB4 + 4 * byte_23C1A07DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C179FD4 + 4 * byte_23C1A07DF[v4]))();
}

_BYTE *sub_23C179FB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C179FD4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C179FDC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C179FE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C179FEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C179FF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerLoadState.FetchedCodingKeys()
{
  return &type metadata for WorkoutPlanBannerLoadState.FetchedCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerLoadState.FetchingCodingKeys()
{
  return &type metadata for WorkoutPlanBannerLoadState.FetchingCodingKeys;
}

unint64_t sub_23C17A024()
{
  unint64_t result;

  result = qword_256B31498;
  if (!qword_256B31498)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A09E4, &type metadata for WorkoutPlanBannerLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31498);
  }
  return result;
}

unint64_t sub_23C17A06C()
{
  unint64_t result;

  result = qword_256B314A0;
  if (!qword_256B314A0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0A9C, &type metadata for WorkoutPlanBannerLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B314A0);
  }
  return result;
}

unint64_t sub_23C17A0B4()
{
  unint64_t result;

  result = qword_256B314A8;
  if (!qword_256B314A8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0954, &type metadata for WorkoutPlanBannerLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B314A8);
  }
  return result;
}

unint64_t sub_23C17A0FC()
{
  unint64_t result;

  result = qword_256B314B0;
  if (!qword_256B314B0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A097C, &type metadata for WorkoutPlanBannerLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B314B0);
  }
  return result;
}

unint64_t sub_23C17A144()
{
  unint64_t result;

  result = qword_256B314B8;
  if (!qword_256B314B8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0904, &type metadata for WorkoutPlanBannerLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B314B8);
  }
  return result;
}

unint64_t sub_23C17A18C()
{
  unint64_t result;

  result = qword_256B314C0;
  if (!qword_256B314C0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A092C, &type metadata for WorkoutPlanBannerLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B314C0);
  }
  return result;
}

unint64_t sub_23C17A1D4()
{
  unint64_t result;

  result = qword_256B314C8;
  if (!qword_256B314C8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0A0C, &type metadata for WorkoutPlanBannerLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B314C8);
  }
  return result;
}

unint64_t sub_23C17A21C()
{
  unint64_t result;

  result = qword_256B314D0;
  if (!qword_256B314D0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0A34, &type metadata for WorkoutPlanBannerLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B314D0);
  }
  return result;
}

uint64_t sub_23C17A260(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656863746566 && a2 == 0xE700000000000000;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

BOOL static LibraryInterface.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LibraryInterface.hash(into:)()
{
  return sub_23C19C0B8();
}

uint64_t sub_23C17A38C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x647261646E617473;
  if (*v0 != 1)
    v1 = 30324;
  if (*v0)
    return v1;
  else
    return 0x746361706D6F63;
}

uint64_t sub_23C17A3DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C17B154(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C17A400(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23C17A40C()
{
  sub_23C17A7F4();
  return sub_23C19C0F4();
}

uint64_t sub_23C17A434()
{
  sub_23C17A7F4();
  return sub_23C19C100();
}

uint64_t sub_23C17A45C()
{
  sub_23C17A8C0();
  return sub_23C19C0F4();
}

uint64_t sub_23C17A484()
{
  sub_23C17A8C0();
  return sub_23C19C100();
}

uint64_t sub_23C17A4AC()
{
  sub_23C17A87C();
  return sub_23C19C0F4();
}

uint64_t sub_23C17A4D4()
{
  sub_23C17A87C();
  return sub_23C19C100();
}

uint64_t sub_23C17A4FC()
{
  sub_23C17A838();
  return sub_23C19C0F4();
}

uint64_t sub_23C17A524()
{
  sub_23C17A838();
  return sub_23C19C100();
}

uint64_t LibraryInterface.hashValue.getter()
{
  sub_23C19C0AC();
  sub_23C19C0B8();
  return sub_23C19C0D0();
}

uint64_t LibraryInterface.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B314E0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B314E8);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B314F0);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B314F8);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C17A7F4();
  sub_23C19C0E8();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_23C17A87C();
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_23C17A838();
      v16 = v21;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_23C17A8C0();
    sub_23C19C034();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_23C17A7F4()
{
  unint64_t result;

  result = qword_256B31500;
  if (!qword_256B31500)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0F98, &type metadata for LibraryInterface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31500);
  }
  return result;
}

unint64_t sub_23C17A838()
{
  unint64_t result;

  result = qword_256B31508;
  if (!qword_256B31508)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0F48, &type metadata for LibraryInterface.TvCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31508);
  }
  return result;
}

unint64_t sub_23C17A87C()
{
  unint64_t result;

  result = qword_256B31510;
  if (!qword_256B31510)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0EF8, &type metadata for LibraryInterface.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31510);
  }
  return result;
}

unint64_t sub_23C17A8C0()
{
  unint64_t result;

  result = qword_256B31518;
  if (!qword_256B31518)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0EA8, &type metadata for LibraryInterface.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31518);
  }
  return result;
}

uint64_t LibraryInterface.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31520);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31528);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31530);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31538);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C17A7F4();
  v13 = v41;
  sub_23C19C0DC();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_23C19C028();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_23C19BF50();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v25 = &type metadata for LibraryInterface;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_23C17A87C();
      v20 = v9;
      sub_23C19BFC8();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_23C17A838();
      v28 = v15;
      sub_23C19BFC8();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_23C17A8C0();
    sub_23C19BFC8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

unint64_t sub_23C17AD4C()
{
  unint64_t result;

  result = qword_256B31540;
  if (!qword_256B31540)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryInterface, &type metadata for LibraryInterface);
    atomic_store(result, (unint64_t *)&qword_256B31540);
  }
  return result;
}

uint64_t sub_23C17AD90@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return LibraryInterface.init(from:)(a1, a2);
}

uint64_t sub_23C17ADA4(_QWORD *a1)
{
  return LibraryInterface.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for LibraryInterface()
{
  return &type metadata for LibraryInterface;
}

uint64_t _s14FitnessLibrary16LibraryInterfaceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C17AE1C + 4 * byte_23C1A0BC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C17AE50 + 4 * byte_23C1A0BC0[v4]))();
}

uint64_t sub_23C17AE50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C17AE58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C17AE60);
  return result;
}

uint64_t sub_23C17AE6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C17AE74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C17AE78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C17AE80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryInterface.CodingKeys()
{
  return &type metadata for LibraryInterface.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryInterface.CompactCodingKeys()
{
  return &type metadata for LibraryInterface.CompactCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryInterface.StandardCodingKeys()
{
  return &type metadata for LibraryInterface.StandardCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryInterface.TvCodingKeys()
{
  return &type metadata for LibraryInterface.TvCodingKeys;
}

unint64_t sub_23C17AED0()
{
  unint64_t result;

  result = qword_256B31548;
  if (!qword_256B31548)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0E80, &type metadata for LibraryInterface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31548);
  }
  return result;
}

unint64_t sub_23C17AF18()
{
  unint64_t result;

  result = qword_256B31550;
  if (!qword_256B31550)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0DA0, &type metadata for LibraryInterface.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31550);
  }
  return result;
}

unint64_t sub_23C17AF60()
{
  unint64_t result;

  result = qword_256B31558;
  if (!qword_256B31558)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0DC8, &type metadata for LibraryInterface.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31558);
  }
  return result;
}

unint64_t sub_23C17AFA8()
{
  unint64_t result;

  result = qword_256B31560;
  if (!qword_256B31560)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0D50, &type metadata for LibraryInterface.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31560);
  }
  return result;
}

unint64_t sub_23C17AFF0()
{
  unint64_t result;

  result = qword_256B31568;
  if (!qword_256B31568)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0D78, &type metadata for LibraryInterface.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31568);
  }
  return result;
}

unint64_t sub_23C17B038()
{
  unint64_t result;

  result = qword_256B31570;
  if (!qword_256B31570)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0D00, &type metadata for LibraryInterface.TvCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31570);
  }
  return result;
}

unint64_t sub_23C17B080()
{
  unint64_t result;

  result = qword_256B31578;
  if (!qword_256B31578)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0D28, &type metadata for LibraryInterface.TvCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31578);
  }
  return result;
}

unint64_t sub_23C17B0C8()
{
  unint64_t result;

  result = qword_256B31580;
  if (!qword_256B31580)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0DF0, &type metadata for LibraryInterface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31580);
  }
  return result;
}

unint64_t sub_23C17B110()
{
  unint64_t result;

  result = qword_256B31588;
  if (!qword_256B31588)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A0E18, &type metadata for LibraryInterface.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31588);
  }
  return result;
}

uint64_t sub_23C17B154(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746361706D6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x647261646E617473 && a2 == 0xE800000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 30324 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t WorkoutPlanBannerEnvironment.init(fetchActivePlanDetail:makeWorkoutPlanUpdatedStream:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

_QWORD *assignWithCopy for WorkoutPlanBannerEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for WorkoutPlanBannerEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerEnvironment()
{
  return &type metadata for WorkoutPlanBannerEnvironment;
}

uint64_t OfflineCanvasItemPlaceholder.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

FitnessLibrary::OfflineCanvasItemPlaceholder __swiftcall OfflineCanvasItemPlaceholder.init(identifier:)(FitnessLibrary::OfflineCanvasItemPlaceholder identifier)
{
  FitnessLibrary::OfflineCanvasItemPlaceholder *v1;

  *v1 = identifier;
  return identifier;
}

uint64_t sub_23C17B40C()
{
  sub_23C17B548();
  return sub_23C19C0F4();
}

uint64_t sub_23C17B434()
{
  sub_23C17B548();
  return sub_23C19C100();
}

uint64_t OfflineCanvasItemPlaceholder.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31590);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C17B548();
  sub_23C19C0E8();
  sub_23C19C058();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_23C17B548()
{
  unint64_t result;

  result = qword_256B31598;
  if (!qword_256B31598)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1200, &type metadata for OfflineCanvasItemPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31598);
  }
  return result;
}

uint64_t OfflineCanvasItemPlaceholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B315A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C17B548();
  sub_23C19C0DC();
  if (!v2)
  {
    v9 = sub_23C19BFF8();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23C17B6A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return OfflineCanvasItemPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_23C17B6BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31590);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C17B548();
  sub_23C19C0E8();
  sub_23C19C058();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t OfflineCanvasItemPlaceholder.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

uint64_t static OfflineCanvasItemPlaceholder.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23C19C088();
}

uint64_t OfflineCanvasItemPlaceholder.hashValue.getter()
{
  sub_23C19C0AC();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  return sub_23C19C0D0();
}

uint64_t sub_23C17B874()
{
  sub_23C19C0AC();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  return sub_23C19C0D0();
}

uint64_t sub_23C17B8CC()
{
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C17B910()
{
  sub_23C19C0AC();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  return sub_23C19C0D0();
}

unint64_t sub_23C17B968()
{
  unint64_t result;

  result = qword_256B315A8;
  if (!qword_256B315A8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineCanvasItemPlaceholder, &type metadata for OfflineCanvasItemPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B315A8);
  }
  return result;
}

uint64_t sub_23C17B9AC(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23C19C088();
}

uint64_t getEnumTagSinglePayload for OfflineCanvasItemPlaceholder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineCanvasItemPlaceholder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineCanvasItemPlaceholder()
{
  return &type metadata for OfflineCanvasItemPlaceholder;
}

uint64_t storeEnumTagSinglePayload for OfflineCanvasItemPlaceholder.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C17BAB0 + 4 * byte_23C1A1050[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C17BAD0 + 4 * byte_23C1A1055[v4]))();
}

_BYTE *sub_23C17BAB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C17BAD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C17BAD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C17BAE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C17BAE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C17BAF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OfflineCanvasItemPlaceholder.CodingKeys()
{
  return &type metadata for OfflineCanvasItemPlaceholder.CodingKeys;
}

unint64_t sub_23C17BB10()
{
  unint64_t result;

  result = qword_256B315B0;
  if (!qword_256B315B0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A11D8, &type metadata for OfflineCanvasItemPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B315B0);
  }
  return result;
}

unint64_t sub_23C17BB58()
{
  unint64_t result;

  result = qword_256B315B8;
  if (!qword_256B315B8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1148, &type metadata for OfflineCanvasItemPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B315B8);
  }
  return result;
}

unint64_t sub_23C17BBA0()
{
  unint64_t result;

  result = qword_256B315C0;
  if (!qword_256B315C0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1170, &type metadata for OfflineCanvasItemPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B315C0);
  }
  return result;
}

uint64_t LibraryCanvasPlaceholder.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasPlaceholder.secondaryIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasPlaceholder.referenceType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

void __swiftcall LibraryCanvasPlaceholder.init(identifier:secondaryIdentifier:referenceType:)(FitnessLibrary::LibraryCanvasPlaceholder *__return_ptr retstr, Swift::String identifier, Swift::String_optional secondaryIdentifier, FitnessLibrary::LibraryCanvasPlaceholderReferenceType referenceType)
{
  retstr->identifier = identifier;
  retstr->secondaryIdentifier = secondaryIdentifier;
  retstr->referenceType = referenceType;
}

uint64_t sub_23C17BC54()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 != 1)
    v1 = 0x636E657265666572;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_23C17BCC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C17C8C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C17BCE8()
{
  sub_23C17BEB0();
  return sub_23C19C0F4();
}

uint64_t sub_23C17BD10()
{
  sub_23C17BEB0();
  return sub_23C19C100();
}

uint64_t LibraryCanvasPlaceholder.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B315C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v7;
  v12 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C17BEB0();
  sub_23C19C0E8();
  v16 = 0;
  v8 = v11[3];
  sub_23C19C058();
  if (!v8)
  {
    v9 = v12;
    v15 = 1;
    sub_23C19C040();
    v14 = v9;
    v13 = 2;
    sub_23C17BEF4();
    sub_23C19C07C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C17BEB0()
{
  unint64_t result;

  result = qword_256B315D0;
  if (!qword_256B315D0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A140C, &type metadata for LibraryCanvasPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B315D0);
  }
  return result;
}

unint64_t sub_23C17BEF4()
{
  unint64_t result;

  result = qword_256B315D8;
  if (!qword_256B315D8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasPlaceholderReferenceType, &type metadata for LibraryCanvasPlaceholderReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B315D8);
  }
  return result;
}

uint64_t LibraryCanvasPlaceholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B315E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C17BEB0();
  sub_23C19C0DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = 0;
  v9 = sub_23C19BFF8();
  v11 = v10;
  v21 = v9;
  v24 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23C19BFE0();
  v14 = v13;
  v19 = v12;
  v22 = 2;
  sub_23C17C16C();
  swift_bridgeObjectRetain();
  v20 = v14;
  sub_23C19C01C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v23;
  v16 = v20;
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v19;
  *(_QWORD *)(a2 + 24) = v16;
  *(_BYTE *)(a2 + 32) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23C17C16C()
{
  unint64_t result;

  result = qword_256B315E8;
  if (!qword_256B315E8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasPlaceholderReferenceType, &type metadata for LibraryCanvasPlaceholderReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B315E8);
  }
  return result;
}

uint64_t sub_23C17C1B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryCanvasPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_23C17C1C4(_QWORD *a1)
{
  return LibraryCanvasPlaceholder.encode(to:)(a1);
}

void LibraryCanvasPlaceholder.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  sub_23C19C0C4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C19BE00();
    swift_bridgeObjectRelease();
  }
  __asm { BR              X9 }
}

uint64_t sub_23C17C290()
{
  sub_23C19BE00();
  return swift_bridgeObjectRelease();
}

uint64_t LibraryCanvasPlaceholder.hashValue.getter()
{
  sub_23C19C0AC();
  LibraryCanvasPlaceholder.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C17C38C()
{
  sub_23C19C0AC();
  LibraryCanvasPlaceholder.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C17C3E8()
{
  sub_23C19C0AC();
  LibraryCanvasPlaceholder.hash(into:)();
  return sub_23C19C0D0();
}

void _s14FitnessLibrary0B17CanvasPlaceholderV2eeoiySbAC_ACtFZ_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  v6 = a2[2];
  v5 = a2[3];
  v7 = *(_QWORD *)a1 == *a2 && *(_QWORD *)(a1 + 8) == a2[1];
  if (v7 || (sub_23C19C088() & 1) != 0)
  {
    if (v3)
    {
      if (v5)
      {
        v8 = v2 == v6 && v3 == v5;
        if (v8 || (sub_23C19C088() & 1) != 0)
          goto LABEL_13;
      }
    }
    else if (!v5)
    {
LABEL_13:
      sub_23C16C000(v4);
    }
  }
}

unint64_t sub_23C17C4FC()
{
  unint64_t result;

  result = qword_256B315F0;
  if (!qword_256B315F0)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasPlaceholder, &type metadata for LibraryCanvasPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B315F0);
  }
  return result;
}

uint64_t destroy for LibraryCanvasPlaceholder()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LibraryCanvasPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LibraryCanvasPlaceholder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LibraryCanvasPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasPlaceholder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasPlaceholder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasPlaceholder()
{
  return &type metadata for LibraryCanvasPlaceholder;
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasPlaceholder.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C17C768 + 4 * byte_23C1A125B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C17C79C + 4 * byte_23C1A1256[v4]))();
}

uint64_t sub_23C17C79C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C17C7A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C17C7ACLL);
  return result;
}

uint64_t sub_23C17C7B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C17C7C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C17C7C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C17C7CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasPlaceholder.CodingKeys()
{
  return &type metadata for LibraryCanvasPlaceholder.CodingKeys;
}

unint64_t sub_23C17C7EC()
{
  unint64_t result;

  result = qword_256B315F8;
  if (!qword_256B315F8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A13E4, &type metadata for LibraryCanvasPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B315F8);
  }
  return result;
}

unint64_t sub_23C17C834()
{
  unint64_t result;

  result = qword_256B31600;
  if (!qword_256B31600)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1354, &type metadata for LibraryCanvasPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31600);
  }
  return result;
}

unint64_t sub_23C17C87C()
{
  unint64_t result;

  result = qword_256B31608;
  if (!qword_256B31608)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A137C, &type metadata for LibraryCanvasPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31608);
  }
  return result;
}

uint64_t sub_23C17C8C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023C1A4590 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006570795465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C17CA3C()
{
  sub_23C17D124();
  return sub_23C19C0F4();
}

uint64_t sub_23C17CA64()
{
  sub_23C17D124();
  return sub_23C19C100();
}

uint64_t sub_23C17CA8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23C17CAC0 + 4 * byte_23C1A1460[*v0]))(0x756F6D796E6F6E61, 0xE900000000000073);
}

uint64_t sub_23C17CAC0()
{
  return 0x6C61636F6CLL;
}

uint64_t sub_23C17CAD4()
{
  return 0x65746F6D6572;
}

uint64_t sub_23C17CAE8()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_23C17CB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C17E3E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C17CB24()
{
  sub_23C17CFD0();
  return sub_23C19C0F4();
}

uint64_t sub_23C17CB4C()
{
  sub_23C17CFD0();
  return sub_23C19C100();
}

uint64_t sub_23C17CB74()
{
  sub_23C17D0E0();
  return sub_23C19C0F4();
}

uint64_t sub_23C17CB9C()
{
  sub_23C17D0E0();
  return sub_23C19C100();
}

uint64_t sub_23C17CBC4()
{
  sub_23C17D058();
  return sub_23C19C0F4();
}

uint64_t sub_23C17CBEC()
{
  sub_23C17D058();
  return sub_23C19C100();
}

uint64_t sub_23C17CC14()
{
  sub_23C17D014();
  return sub_23C19C0F4();
}

uint64_t sub_23C17CC3C()
{
  sub_23C17D014();
  return sub_23C19C100();
}

uint64_t BrowsingIdentity.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31610);
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v30 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31618);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v33 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31620);
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31628);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31630);
  v36 = *(_QWORD *)(v15 - 8);
  v37 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v2[1];
  v27 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C17CFD0();
  sub_23C19C0E8();
  switch(v18)
  {
    case 3:
      LOBYTE(v38) = 3;
      sub_23C17D014();
      v20 = v30;
      v19 = v37;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v32);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v17, v19);
    case 2:
      LOBYTE(v38) = 1;
      sub_23C17D0E0();
      v22 = v37;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v17, v22);
    case 1:
      LOBYTE(v38) = 0;
      sub_23C17D124();
      v19 = v37;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v17, v19);
    default:
      LOBYTE(v38) = 2;
      sub_23C17D058();
      v23 = v33;
      v24 = v37;
      sub_23C19C034();
      v38 = v27;
      v39 = v18;
      sub_23C17D09C();
      v25 = v35;
      sub_23C19C07C();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v25);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v17, v24);
  }
}

unint64_t sub_23C17CFD0()
{
  unint64_t result;

  result = qword_256B31638;
  if (!qword_256B31638)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1964, &type metadata for BrowsingIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31638);
  }
  return result;
}

unint64_t sub_23C17D014()
{
  unint64_t result;

  result = qword_256B31640;
  if (!qword_256B31640)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1914, &type metadata for BrowsingIdentity.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31640);
  }
  return result;
}

unint64_t sub_23C17D058()
{
  unint64_t result;

  result = qword_256B31648;
  if (!qword_256B31648)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A18C4, &type metadata for BrowsingIdentity.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31648);
  }
  return result;
}

unint64_t sub_23C17D09C()
{
  unint64_t result;

  result = qword_256B31650;
  if (!qword_256B31650)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryRemoteParticipant, &type metadata for LibraryRemoteParticipant);
    atomic_store(result, (unint64_t *)&qword_256B31650);
  }
  return result;
}

unint64_t sub_23C17D0E0()
{
  unint64_t result;

  result = qword_256B31658;
  if (!qword_256B31658)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1874, &type metadata for BrowsingIdentity.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31658);
  }
  return result;
}

unint64_t sub_23C17D124()
{
  unint64_t result;

  result = qword_256B31660;
  if (!qword_256B31660)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1824, &type metadata for BrowsingIdentity.AnonymousCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31660);
  }
  return result;
}

uint64_t BrowsingIdentity.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;

  v26 = a2;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31668);
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31670);
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v29 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31678);
  v28 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v27 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31680);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31688);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23C17CFD0();
  v13 = v31;
  sub_23C19C0DC();
  if (!v13)
  {
    v19[1] = v7;
    v19[2] = v6;
    v31 = v9;
    v14 = sub_23C19C028();
    if (*(_QWORD *)(v14 + 16) == 1)
      __asm { BR              X10 }
    v15 = sub_23C19BF50();
    swift_allocError();
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v17 = &type metadata for BrowsingIdentity;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x24BEE26D0], v15);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

unint64_t sub_23C17D6A0()
{
  unint64_t result;

  result = qword_256B31690;
  if (!qword_256B31690)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryRemoteParticipant, &type metadata for LibraryRemoteParticipant);
    atomic_store(result, (unint64_t *)&qword_256B31690);
  }
  return result;
}

uint64_t sub_23C17D6E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowsingIdentity.init(from:)(a1, a2);
}

uint64_t sub_23C17D6F8(_QWORD *a1)
{
  return BrowsingIdentity.encode(to:)(a1);
}

uint64_t BrowsingIdentity.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0[1];
  if (v1 == 3 || v1 == 2 || v1 == 1)
    return sub_23C19C0B8();
  v3 = *v0;
  sub_23C19C0B8();
  if (!v1)
    return sub_23C19C0C4();
  sub_23C19C0C4();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  return sub_23C17D7BC(v3, v1);
}

uint64_t sub_23C17D7BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t BrowsingIdentity.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  sub_23C19C0AC();
  if (v1 == 3 || v1 == 2 || v1 == 1)
  {
    sub_23C19C0B8();
  }
  else
  {
    sub_23C19C0B8();
    sub_23C19C0C4();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_23C19BE00();
      sub_23C17D7BC(v2, v1);
    }
  }
  return sub_23C19C0D0();
}

uint64_t sub_23C17D89C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0[1];
  if (v1 == 3 || v1 == 2 || v1 == 1)
    return sub_23C19C0B8();
  v3 = *v0;
  sub_23C19C0B8();
  if (!v1)
    return sub_23C19C0C4();
  sub_23C19C0C4();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  return sub_23C17D7BC(v3, v1);
}

uint64_t sub_23C17D94C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  sub_23C19C0AC();
  v1 = v0[1];
  if (v1 == 3 || v1 == 2 || v1 == 1)
  {
    sub_23C19C0B8();
  }
  else
  {
    v3 = *v0;
    sub_23C19C0B8();
    sub_23C19C0C4();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_23C19BE00();
      sub_23C17D7BC(v3, v1);
    }
  }
  return sub_23C19C0D0();
}

BOOL _s14FitnessLibrary16BrowsingIdentityO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v3 == 3)
  {
    if (v5 != 3)
      goto LABEL_12;
    sub_23C17D7BC(*a1, 3);
    v7 = v4;
    v8 = 3;
LABEL_10:
    sub_23C17D7BC(v7, v8);
    return 1;
  }
  if (v3 == 2)
  {
    if (v5 != 2)
      goto LABEL_12;
    sub_23C17D7BC(*a1, 2);
    v7 = v4;
    v8 = 2;
    goto LABEL_10;
  }
  if (v3 != 1)
  {
    if ((unint64_t)(v5 - 1) < 3)
      goto LABEL_12;
    if (v3)
    {
      if (!v5)
      {
        sub_23C17E594(*a1, v3);
        v9 = v4;
        v10 = 0;
        goto LABEL_13;
      }
      if (v2 != v4 || v3 != v5)
      {
        v12 = sub_23C19C088();
        sub_23C17E594(v2, v3);
        sub_23C17E594(v4, v5);
        sub_23C17D7BC(v2, v3);
        sub_23C17D7BC(v4, v5);
        return (v12 & 1) != 0;
      }
      sub_23C17E594(*a1, v3);
      sub_23C17E594(v2, v3);
      sub_23C17D7BC(v2, v3);
      v7 = v2;
      v8 = v3;
    }
    else
    {
      if (v5)
      {
        swift_bridgeObjectRetain();
        v3 = 0;
        goto LABEL_14;
      }
      sub_23C17D7BC(*a1, 0);
      v7 = v4;
      v8 = 0;
    }
    goto LABEL_10;
  }
  if (v5 != 1)
  {
LABEL_12:
    sub_23C17E594(*a1, v3);
    v9 = v4;
    v10 = v5;
LABEL_13:
    sub_23C17E594(v9, v10);
LABEL_14:
    sub_23C17D7BC(v2, v3);
    sub_23C17D7BC(v4, v5);
    return 0;
  }
  v6 = 1;
  sub_23C17D7BC(*a1, 1);
  sub_23C17D7BC(v4, 1);
  return v6;
}

unint64_t sub_23C17DC00()
{
  unint64_t result;

  result = qword_256B31698;
  if (!qword_256B31698)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for BrowsingIdentity, &type metadata for BrowsingIdentity);
    atomic_store(result, (unint64_t *)&qword_256B31698);
  }
  return result;
}

unint64_t destroy for BrowsingIdentity(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *_s14FitnessLibrary16BrowsingIdentityOwCP_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = a2[1];
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for BrowsingIdentity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[1];
  v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v4 = a2[1];
  v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithTake for BrowsingIdentity(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = a2[1];
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowsingIdentity(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 2;
  if (v5 >= 4)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BrowsingIdentity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

uint64_t sub_23C17DE88(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_23C17DEAC(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowsingIdentity()
{
  return &type metadata for BrowsingIdentity;
}

uint64_t storeEnumTagSinglePayload for BrowsingIdentity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C17DF34 + 4 * byte_23C1A146D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C17DF68 + 4 * byte_23C1A1468[v4]))();
}

uint64_t sub_23C17DF68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C17DF70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C17DF78);
  return result;
}

uint64_t sub_23C17DF84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C17DF8CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C17DF90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C17DF98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.CodingKeys()
{
  return &type metadata for BrowsingIdentity.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.AnonymousCodingKeys()
{
  return &type metadata for BrowsingIdentity.AnonymousCodingKeys;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.LocalCodingKeys()
{
  return &type metadata for BrowsingIdentity.LocalCodingKeys;
}

uint64_t storeEnumTagSinglePayload for BrowsingIdentity.RemoteCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C17E014 + 4 * byte_23C1A1472[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C17E034 + 4 * byte_23C1A1477[v4]))();
}

_BYTE *sub_23C17E014(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C17E034(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C17E03C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C17E044(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C17E04C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C17E054(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.RemoteCodingKeys()
{
  return &type metadata for BrowsingIdentity.RemoteCodingKeys;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.UnknownCodingKeys()
{
  return &type metadata for BrowsingIdentity.UnknownCodingKeys;
}

unint64_t sub_23C17E084()
{
  unint64_t result;

  result = qword_256B316A0;
  if (!qword_256B316A0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A16A4, &type metadata for BrowsingIdentity.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316A0);
  }
  return result;
}

unint64_t sub_23C17E0CC()
{
  unint64_t result;

  result = qword_256B316A8;
  if (!qword_256B316A8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A17FC, &type metadata for BrowsingIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316A8);
  }
  return result;
}

unint64_t sub_23C17E114()
{
  unint64_t result;

  result = qword_256B316B0;
  if (!qword_256B316B0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A171C, &type metadata for BrowsingIdentity.AnonymousCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316B0);
  }
  return result;
}

unint64_t sub_23C17E15C()
{
  unint64_t result;

  result = qword_256B316B8;
  if (!qword_256B316B8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1744, &type metadata for BrowsingIdentity.AnonymousCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316B8);
  }
  return result;
}

unint64_t sub_23C17E1A4()
{
  unint64_t result;

  result = qword_256B316C0;
  if (!qword_256B316C0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A16CC, &type metadata for BrowsingIdentity.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316C0);
  }
  return result;
}

unint64_t sub_23C17E1EC()
{
  unint64_t result;

  result = qword_256B316C8;
  if (!qword_256B316C8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A16F4, &type metadata for BrowsingIdentity.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316C8);
  }
  return result;
}

unint64_t sub_23C17E234()
{
  unint64_t result;

  result = qword_256B316D0;
  if (!qword_256B316D0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1614, &type metadata for BrowsingIdentity.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316D0);
  }
  return result;
}

unint64_t sub_23C17E27C()
{
  unint64_t result;

  result = qword_256B316D8;
  if (!qword_256B316D8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A163C, &type metadata for BrowsingIdentity.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316D8);
  }
  return result;
}

unint64_t sub_23C17E2C4()
{
  unint64_t result;

  result = qword_256B316E0;
  if (!qword_256B316E0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A15C4, &type metadata for BrowsingIdentity.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316E0);
  }
  return result;
}

unint64_t sub_23C17E30C()
{
  unint64_t result;

  result = qword_256B316E8;
  if (!qword_256B316E8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A15EC, &type metadata for BrowsingIdentity.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316E8);
  }
  return result;
}

unint64_t sub_23C17E354()
{
  unint64_t result;

  result = qword_256B316F0;
  if (!qword_256B316F0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A176C, &type metadata for BrowsingIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316F0);
  }
  return result;
}

unint64_t sub_23C17E39C()
{
  unint64_t result;

  result = qword_256B316F8;
  if (!qword_256B316F8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1794, &type metadata for BrowsingIdentity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B316F8);
  }
  return result;
}

uint64_t sub_23C17E3E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F6D796E6F6E61 && a2 == 0xE900000000000073;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C17E594(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((unint64_t)(a2 - 1) >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t TVLibraryPickerView.init(store:pages:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v9;
  uint64_t v10;
  char v11;

  sub_23C155C0C();
  sub_23C19B59C();
  sub_23C19BBFC();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a4 = sub_23C1503C4;
  *(_QWORD *)(a4 + 8) = result;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 24) = v9;
  *(_QWORD *)(a4 + 32) = v10;
  *(_BYTE *)(a4 + 40) = v11;
  *(_BYTE *)(a4 + 48) = v9;
  *(_QWORD *)(a4 + 56) = v10;
  *(_QWORD *)(a4 + 64) = a3;
  return result;
}

uint64_t sub_23C17E680()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t TVLibraryPickerView.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  unint64_t v54;
  _BYTE v55[2];
  __int128 v56;
  char v57;
  __int128 v58;
  _BYTE v59[32];
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;

  v51 = a1;
  v44 = sub_23C19B884();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v39 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31700);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31708);
  v41 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31710);
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v38 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31718);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v42 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31720);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1[3];
  *(_OWORD *)&v59[16] = v1[2];
  v60 = v11;
  v61 = *((_QWORD *)v1 + 8);
  v12 = v1[1];
  v58 = *v1;
  *(_OWORD *)v59 = v12;
  *(_QWORD *)v5 = sub_23C19B7A0();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31728);
  v63 = v61;
  *(_QWORD *)&v52 = v61;
  swift_getKeyPath();
  v13 = swift_allocObject();
  v14 = v1[3];
  *(_OWORD *)(v13 + 48) = v1[2];
  *(_OWORD *)(v13 + 64) = v14;
  *(_QWORD *)(v13 + 80) = *((_QWORD *)v1 + 8);
  v15 = v1[1];
  *(_OWORD *)(v13 + 16) = *v1;
  *(_OWORD *)(v13 + 32) = v15;
  sub_23C17F3B8((uint64_t)&v63);
  sub_23C17F3E0((uint64_t)&v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31730);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31738);
  sub_23C15159C(&qword_256B31740, &qword_256B31730, MEMORY[0x24BEE12D8]);
  sub_23C155C0C();
  sub_23C17F438();
  sub_23C19BCC8();
  v62 = v60;
  v52 = v60;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31780);
  sub_23C19BC08();
  v16 = swift_allocObject();
  v17 = v60;
  *(_OWORD *)(v16 + 48) = *(_OWORD *)&v59[16];
  *(_OWORD *)(v16 + 64) = v17;
  *(_QWORD *)(v16 + 80) = v61;
  v18 = *(_OWORD *)v59;
  *(_OWORD *)(v16 + 16) = v58;
  *(_OWORD *)(v16 + 32) = v18;
  sub_23C17F3E0((uint64_t)&v58);
  v19 = sub_23C15159C(&qword_256B31788, &qword_256B31700, MEMORY[0x24BDF4700]);
  v20 = sub_23C155C54();
  sub_23C19BB48();
  swift_release();
  sub_23C17F714((uint64_t)v5);
  v56 = *(_OWORD *)&v59[8];
  v57 = v59[24];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31790);
  sub_23C19B590();
  v56 = v52;
  v57 = v53;
  v35 = *((_QWORD *)&v58 + 1);
  v36 = v58;
  v34[1] = v59[0];
  sub_23C17F3E0((uint64_t)&v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B307F0);
  sub_23C15159C((unint64_t *)&qword_256B307F8, &qword_256B307F0, MEMORY[0x24BE2B5E8]);
  sub_23C19B5D8();
  sub_23C17F754((uint64_t)&v58);
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v55[0] = v55[1];
  v21 = v39;
  sub_23C19B878();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31768);
  *(_QWORD *)&v52 = v3;
  *((_QWORD *)&v52 + 1) = &type metadata for LibraryPage;
  v53 = v19;
  v54 = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v24 = sub_23C17F5D0();
  v25 = v38;
  v26 = v40;
  MEMORY[0x242618058](&v56, v55, v21, v40, v22, OpaqueTypeConformance2, v24);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v44);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v26);
  v56 = v62;
  sub_23C19BC20();
  v56 = v52;
  v57 = v53;
  *(_QWORD *)&v52 = v26;
  *((_QWORD *)&v52 + 1) = v22;
  v53 = OpaqueTypeConformance2;
  v54 = v24;
  swift_getOpaqueTypeConformance2();
  sub_23C17F7AC();
  v27 = v42;
  v28 = v45;
  sub_23C19BAB8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v28);
  sub_23C17F3E0((uint64_t)&v58);
  sub_23C19B5D8();
  sub_23C17F754((uint64_t)&v58);
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  if ((_BYTE)v52)
    v29 = 0.3;
  else
    v29 = 1.0;
  v30 = v49;
  v31 = (uint64_t)v47;
  v32 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v47, v27, v50);
  *(double *)(v31 + *(int *)(v48 + 36)) = v29;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v32);
  return sub_23C17F7F0(v31, v51);
}

uint64_t sub_23C17EE28@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t (**v23)();
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t OpaqueTypeConformance2;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  ValueMetadata *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  ValueMetadata *v70;
  unint64_t v71;
  unint64_t v72;
  __int128 v73;
  char v74;

  v68 = a3;
  v55 = sub_23C19B524();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVLibraryItemCell();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31760);
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v56 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31758);
  v12 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  v63 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31750);
  v15 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  v65 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v60 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B317A8);
  v66 = *(_QWORD *)(v17 - 8);
  v67 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v61 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  sub_23C17F3E0(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B307F0);
  sub_23C15159C((unint64_t *)&qword_256B307F8, &qword_256B307F0, MEMORY[0x24BE2B5E8]);
  sub_23C19B5D8();
  sub_23C17F754(a2);
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v20 = swift_allocObject();
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v20 + 64) = v21;
  *(_QWORD *)(v20 + 80) = *(_QWORD *)(a2 + 64);
  v22 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v20 + 32) = v22;
  *(_BYTE *)(v20 + 88) = v19;
  v9[*(int *)(v7 + 20)] = v19;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v9, v6, v55);
  v23 = (uint64_t (**)())&v9[*(int *)(v7 + 24)];
  *v23 = sub_23C17FCB0;
  v23[1] = (uint64_t (*)())v20;
  v73 = *(_OWORD *)(a2 + 24);
  v74 = *(_BYTE *)(a2 + 40);
  sub_23C17F3E0(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31790);
  sub_23C19B590();
  LOBYTE(v73) = v19;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31768);
  v25 = sub_23C17F588();
  v26 = sub_23C17F5D0();
  v27 = v56;
  sub_23C19BAF4();
  swift_release();
  swift_release();
  sub_23C17FCFC((uint64_t)v9);
  LOBYTE(v73) = v19;
  v69 = v7;
  v70 = (ValueMetadata *)v24;
  v71 = v25;
  v72 = v26;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v29 = sub_23C155C0C();
  v30 = v57;
  v31 = v58;
  sub_23C19BA1C();
  v32 = v31;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v27, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B0);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_23C1A19D0;
  v69 = 0;
  v70 = (ValueMetadata *)0xE000000000000000;
  LOBYTE(v73) = v19;
  sub_23C19BF68();
  v34 = v70;
  *(_QWORD *)(v33 + 32) = v69;
  *(_QWORD *)(v33 + 40) = v34;
  v69 = v32;
  v70 = &type metadata for LibraryPage;
  v71 = OpaqueTypeConformance2;
  v72 = v29;
  v35 = swift_getOpaqueTypeConformance2();
  v36 = v60;
  v37 = v62;
  sub_23C19B9D4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v30, v37);
  v69 = v37;
  v70 = (ValueMetadata *)v35;
  swift_getOpaqueTypeConformance2();
  v38 = v61;
  v39 = v64;
  sub_23C19B9C8();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v36, v39);
  LOBYTE(v39) = sub_23C19B914();
  sub_23C19B584();
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v66;
  v48 = v67;
  v50 = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v68, v38, v67);
  v51 = v50 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B31738) + 36);
  *(_BYTE *)v51 = v39;
  *(_QWORD *)(v51 + 8) = v41;
  *(_QWORD *)(v51 + 16) = v43;
  *(_QWORD *)(v51 + 24) = v45;
  *(_QWORD *)(v51 + 32) = v47;
  *(_BYTE *)(v51 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v38, v48);
}

uint64_t sub_23C17F3A8()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_23C17F3B0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23C17EE28(a1, v2 + 16, a2);
}

uint64_t sub_23C17F3B8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23C17F3E0(uint64_t a1)
{
  sub_23C1511B4();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

unint64_t sub_23C17F438()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[6];

  result = qword_256B31748;
  if (!qword_256B31748)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31738);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31750);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31758);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31760);
    type metadata accessor for TVLibraryItemCell();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31768);
    sub_23C17F588();
    sub_23C17F5D0();
    v3[4] = swift_getOpaqueTypeConformance2();
    v3[5] = sub_23C155C0C();
    swift_getOpaqueTypeConformance2();
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B31748);
  }
  return result;
}

unint64_t sub_23C17F588()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B31770;
  if (!qword_256B31770)
  {
    v1 = type metadata accessor for TVLibraryItemCell();
    result = MEMORY[0x2426189D0](&unk_23C1A3180, v1);
    atomic_store(result, (unint64_t *)&qword_256B31770);
  }
  return result;
}

unint64_t sub_23C17F5D0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256B31778;
  if (!qword_256B31778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31768);
    v2 = sub_23C155C0C();
    result = MEMORY[0x2426189D0](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256B31778);
  }
  return result;
}

uint64_t sub_23C17F634(uint64_t a1)
{
  sub_23C17F3E0(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B307F0);
  sub_23C15159C((unint64_t *)&qword_256B307F8, &qword_256B307F0, MEMORY[0x24BE2B5E8]);
  sub_23C19B5D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31780);
  sub_23C19BC08();
  sub_23C17F754(a1);
  sub_23C19BDA0();
  return swift_release();
}

uint64_t sub_23C17F704()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_23C17F70C()
{
  uint64_t v0;

  return sub_23C17F634(v0 + 16);
}

uint64_t sub_23C17F714(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31700);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C17F754(uint64_t a1)
{
  sub_23C151164();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_23C17F7AC()
{
  unint64_t result;

  result = qword_256B31798;
  if (!qword_256B31798)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPage, &type metadata for LibraryPage);
    atomic_store(result, (unint64_t *)&qword_256B31798);
  }
  return result;
}

uint64_t sub_23C17F7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C17F838()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for TVLibraryPickerView()
{
  sub_23C151164();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TVLibraryPickerView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  v8 = a2[7];
  v7 = a2[8];
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TVLibraryPickerView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C151164();
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TVLibraryPickerView(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C151164();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TVLibraryPickerView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVLibraryPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TVLibraryPickerView()
{
  return &type metadata for TVLibraryPickerView;
}

unint64_t sub_23C17FB0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[6];

  result = qword_256B317A0;
  if (!qword_256B317A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31720);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31710);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31708);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31768);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31700);
    sub_23C15159C(&qword_256B31788, &qword_256B31700, MEMORY[0x24BDF4700]);
    sub_23C155C54();
    swift_getOpaqueTypeConformance2();
    sub_23C17F5D0();
    v3[2] = v2;
    v3[3] = &type metadata for LibraryPage;
    v3[4] = swift_getOpaqueTypeConformance2();
    v3[5] = sub_23C17F7AC();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B317A0);
  }
  return result;
}

uint64_t sub_23C17FC5C()
{
  return objectdestroy_2Tm_1();
}

uint64_t objectdestroy_2Tm_1()
{
  sub_23C151164();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C17FCB0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31780);
  return sub_23C19BC14();
}

uint64_t sub_23C17FCFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TVLibraryItemCell();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 LibraryPageCountEnvironment.init(makeBookmarkUpdatedStream:makeCatalogUpdatedStream:makeDownloadedAssetsCountUpdateStream:makePlaylistCountUpdateStream:makeWorkoutPlanCountUpdateStream:navigateToLibraryGalleryPage:queryLibraryPageCount:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  __n128 result;

  result = a11;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(_QWORD *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 104) = a13;
  return result;
}

uint64_t destroy for LibraryPageCountEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LibraryPageCountEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v3 = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for LibraryPageCountEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_OWORD *assignWithTake for LibraryPageCountEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPageCountEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountEnvironment()
{
  return &type metadata for LibraryPageCountEnvironment;
}

uint64_t sub_23C1800B4(uint64_t a1, unsigned __int8 *a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t State;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  int EnumCaseMultiPayload;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  char v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, uint64_t);
  void (*v53)(char *, char *, uint64_t);
  void (*v54)(char *, uint64_t);
  _DWORD v56[2];
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v59 = a3;
  v60 = a1;
  v4 = sub_23C19B524();
  v5 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  v62 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v56 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v56 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v56 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v56 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v56 - v21;
  State = type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x24BDAC7A8](State);
  v25 = (char *)v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *a2;
  v27 = a2[1];
  sub_23C180468(v63, (uint64_t)v25);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 2)
  {
    v29 = 1;
    return v29 & 1;
  }
  LODWORD(v63) = v26;
  v56[1] = v27;
  v57 = v17;
  v58 = v8;
  v30 = v61;
  v31 = v62;
  if (!EnumCaseMultiPayload)
  {
    v32 = *(_QWORD *)v25;
    v33 = v25[8];
    v34 = &v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64)];
    v35 = v31;
    v36 = v14;
    v37 = v30;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v14, v34, v30);
    v38 = sub_23C18C740(v32, v60);
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0 && v33 == (_DWORD)v63)
    {
      v39 = sub_23C19B548();
      v40 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      v40(v11, v36, v37);
      v41 = v58;
      v40(v58, v59, v37);
      if ((v39 & 1) != 0)
      {
        sub_23C16FD10();
        v29 = sub_23C19BDB8() ^ 1;
LABEL_14:
        v52 = *(void (**)(char *, uint64_t))(v35 + 8);
        v52(v41, v37);
        v52(v11, v37);
        v52(v36, v37);
        return v29 & 1;
      }
    }
    else
    {
      v51 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      v51(v11, v36, v37);
      v41 = v58;
      v51(v58, v59, v37);
    }
    v29 = 1;
    goto LABEL_14;
  }
  v42 = *(_QWORD *)v25;
  v43 = v25[8];
  v44 = &v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64)];
  v45 = v31;
  v46 = v30;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v22, v44, v30);
  v47 = sub_23C18C740(v42, v60);
  swift_bridgeObjectRelease();
  if ((v47 & 1) != 0 && v43 == (_DWORD)v63)
  {
    v48 = sub_23C19B548();
    v49 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    v49(v20, v22, v46);
    v50 = v57;
    v49(v57, v59, v46);
    if ((v48 & 1) != 0)
    {
      sub_23C16FD10();
      v29 = sub_23C19BDB8() ^ 1;
      goto LABEL_17;
    }
  }
  else
  {
    v53 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    v53(v20, v22, v46);
    v50 = v57;
    v53(v57, v59, v46);
  }
  v29 = 1;
LABEL_17:
  v54 = *(void (**)(char *, uint64_t))(v45 + 8);
  v54(v50, v46);
  v54(v20, v46);
  v54(v22, v46);
  return v29 & 1;
}

uint64_t sub_23C180468(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for LibraryCanvasContentLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

unint64_t sub_23C1804AC(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_23C180640(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_23C180640(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = a3[6];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_23C19B5C0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v16 = a3[7];
    v17 = a1 + v16;
    v18 = a2 + v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    sub_23C180640(*(_QWORD *)v18, v20);
    *(_QWORD *)v17 = v19;
    *(_BYTE *)(v17 + 8) = v20;
    v21 = a3[8];
    v22 = a1 + v21;
    v23 = a2 + v21;
    v24 = *(_QWORD *)v23;
    v25 = *(_BYTE *)(v23 + 8);
    sub_23C180640(*(_QWORD *)v23, v25);
    *(_QWORD *)v22 = v24;
    *(_BYTE *)(v22 + 8) = v25;
    v26 = a3[9];
    v27 = a1 + v26;
    v28 = a2 + v26;
    v29 = *(_QWORD *)v28;
    v30 = *(_BYTE *)(v28 + 8);
    sub_23C180640(*(_QWORD *)v28, v30);
    *(_QWORD *)v27 = v29;
    *(_BYTE *)(v27 + 8) = v30;
    *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  }
  return a1;
}

uint64_t sub_23C180640(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_23C18064C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23C180714(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_23C180714(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23C19B5C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_23C180714(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  sub_23C180714(*(_QWORD *)(a1 + a2[8]), *(_BYTE *)(a1 + a2[8] + 8));
  return sub_23C180714(*(_QWORD *)(a1 + a2[9]), *(_BYTE *)(a1 + a2[9] + 8));
}

uint64_t sub_23C180714(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_23C180720(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_23C180640(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_23C180640(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_23C19B5C0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_23C180640(*(_QWORD *)v16, v18);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_23C180640(*(_QWORD *)v21, v23);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *(_BYTE *)(v26 + 8);
  sub_23C180640(*(_QWORD *)v26, v28);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = v28;
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_23C180888(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_23C180640(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_23C180714(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_23C180640(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_23C180714(v12, v13);
  if (a1 != a2)
  {
    v14 = a3[6];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_23C180A3C(a1 + v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_23C19B5C0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_23C180640(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v22;
  sub_23C180714(v23, v24);
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = *(_BYTE *)(v27 + 8);
  sub_23C180640(*(_QWORD *)v27, v29);
  v30 = *(_QWORD *)v26;
  v31 = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = v29;
  sub_23C180714(v30, v31);
  v32 = a3[9];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)v34;
  v36 = *(_BYTE *)(v34 + 8);
  sub_23C180640(*(_QWORD *)v34, v36);
  v37 = *(_QWORD *)v33;
  v38 = *(_BYTE *)(v33 + 8);
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = v36;
  sub_23C180714(v37, v38);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_23C180A3C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C180A7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23C19B5C0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a3[9];
  v18 = a3[10];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  return a1;
}

uint64_t sub_23C180BA4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_23C180714(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_23C180714(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    v13 = a3[6];
    v14 = (void *)(a1 + v13);
    v15 = (char *)a2 + v13;
    sub_23C180A3C(a1 + v13);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_23C19B5C0();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = (uint64_t *)((char *)a2 + v18);
  v21 = *v20;
  LOBYTE(v20) = *((_BYTE *)v20 + 8);
  v22 = *(_QWORD *)v19;
  v23 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = (_BYTE)v20;
  sub_23C180714(v22, v23);
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = (uint64_t *)((char *)a2 + v24);
  v27 = *v26;
  LOBYTE(v26) = *((_BYTE *)v26 + 8);
  v28 = *(_QWORD *)v25;
  v29 = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = (_BYTE)v26;
  sub_23C180714(v28, v29);
  v30 = a3[9];
  v31 = a1 + v30;
  v32 = (uint64_t *)((char *)a2 + v30);
  v33 = *v32;
  LOBYTE(v32) = *((_BYTE *)v32 + 8);
  v34 = *(_QWORD *)v31;
  v35 = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(v31 + 8) = (_BYTE)v32;
  sub_23C180714(v34, v35);
  *(_BYTE *)(a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

uint64_t sub_23C180D20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C180D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B317C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23C180DA4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C180DB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B317C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LibrarySidebarButtonStyle()
{
  uint64_t result;

  result = qword_256B31820;
  if (!qword_256B31820)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23C180E60()
{
  unint64_t v0;

  sub_23C180EE4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23C180EE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B31830)
  {
    sub_23C19B5C0();
    v0 = sub_23C19B5CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B31830);
  }
}

uint64_t sub_23C180F38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C180F48()
{
  return sub_23C19B848();
}

uint64_t LibraryPageCountState.init(locale:focusedLibraryPage:pageCounts:allowedContentRatings:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  sub_23C181388(MEMORY[0x24BEE4AF8]);
  v10 = a5 + *(int *)(type metadata accessor for LibraryPageCountState() + 28);
  v11 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a1, v11);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(a5 + 8) = a2;
  *(_QWORD *)a5 = a3;
  *(_QWORD *)(a5 + 16) = a4;
  return result;
}

uint64_t sub_23C181004(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = *(_QWORD *)(result + 56);
  v26 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & v5;
  v27 = (unint64_t)(v6 + 63) >> 6;
  v28 = result;
  v9 = a2 + 56;
  if ((v7 & v5) == 0)
    goto LABEL_8;
  while (2)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_24:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
    sub_23C19C0AC();
    sub_23C19BE00();
    swift_bridgeObjectRelease();
    v16 = sub_23C19C0D0();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = v4;
    v20 = ~v17;
    while (!*(_BYTE *)(*(_QWORD *)(a2 + 48) + v18))
    {
      v21 = 0xE500000000000000;
      v22 = 0x6E61656C63;
      if (!v15)
        goto LABEL_40;
LABEL_29:
      if (v15 == 1)
        v23 = 0x746963696C707865;
      else
        v23 = 0x6669636570736E75;
      if (v15 == 1)
        v24 = 0xE800000000000000;
      else
        v24 = 0xEB00000000646569;
      if (v22 == v23)
        goto LABEL_41;
LABEL_42:
      v25 = sub_23C19C088();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
        goto LABEL_46;
      v18 = (v18 + 1) & v20;
      if (((*(_QWORD *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        return 0;
    }
    if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v18) == 1)
    {
      v21 = 0xE800000000000000;
      v22 = 0x746963696C707865;
      if (!v15)
        goto LABEL_40;
      goto LABEL_29;
    }
    v22 = 0x6669636570736E75;
    v21 = 0xEB00000000646569;
    if (v15)
      goto LABEL_29;
LABEL_40:
    v24 = 0xE500000000000000;
    if (v22 != 0x6E61656C63)
      goto LABEL_42;
LABEL_41:
    if (v21 != v24)
      goto LABEL_42;
    result = swift_bridgeObjectRelease_n();
LABEL_46:
    v4 = v19;
    v3 = v28;
    if (v8)
      continue;
    break;
  }
LABEL_8:
  v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v12 >= v27)
    return 1;
  v13 = *(_QWORD *)(v26 + 8 * v12);
  ++v4;
  if (v13)
    goto LABEL_23;
  v4 = v12 + 1;
  if (v12 + 1 >= v27)
    return 1;
  v13 = *(_QWORD *)(v26 + 8 * v4);
  if (v13)
    goto LABEL_23;
  v4 = v12 + 2;
  if (v12 + 2 >= v27)
    return 1;
  v13 = *(_QWORD *)(v26 + 8 * v4);
  if (v13)
    goto LABEL_23;
  v4 = v12 + 3;
  if (v12 + 3 >= v27)
    return 1;
  v13 = *(_QWORD *)(v26 + 8 * v4);
  if (v13)
    goto LABEL_23;
  v14 = v12 + 4;
  if (v14 >= v27)
    return 1;
  v13 = *(_QWORD *)(v26 + 8 * v14);
  if (v13)
  {
    v4 = v14;
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v27)
      return 1;
    v13 = *(_QWORD *)(v26 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_51:
  __break(1u);
  return result;
}

void sub_23C181388(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_256B31958),
        v2 = (_QWORD *)sub_23C19BF98(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v5 = *((_BYTE *)v4 - 8);
      v6 = *v4;
      sub_23C18F5FC(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v2[6] + v7) = v5;
      *(_QWORD *)(v2[7] + 8 * v7) = v6;
      v9 = v2[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v4 += 2;
      v2[2] = v11;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for LibraryPageCountState()
{
  uint64_t result;

  result = qword_256B31900;
  if (!qword_256B31900)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LibraryPageCountState.pageCounts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryPageCountState.pageCounts.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*LibraryPageCountState.pageCounts.modify())()
{
  return nullsub_1;
}

uint64_t LibraryPageCountState.focusedLibraryPage.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t LibraryPageCountState.focusedLibraryPage.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*LibraryPageCountState.focusedLibraryPage.modify())()
{
  return nullsub_1;
}

uint64_t sub_23C18151C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23C181550 + 4 * byte_23C1A1B90[*v0]))(0x6E756F4365676170, 0xEA00000000007374);
}

unint64_t sub_23C181550()
{
  return 0xD000000000000012;
}

unint64_t sub_23C18156C()
{
  return 0xD000000000000015;
}

uint64_t sub_23C18158C()
{
  return 0x656C61636F6CLL;
}

uint64_t sub_23C1815A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C182690(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C1815C4()
{
  sub_23C181978();
  return sub_23C19C0F4();
}

uint64_t sub_23C1815EC()
{
  sub_23C181978();
  return sub_23C19C100();
}

uint64_t LibraryPageCountState.withAllowedContentRatings(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v5 = *(int *)(type metadata accessor for LibraryPageCountState() + 28);
  v6 = (uint64_t)v2 + v5;
  v7 = a2 + v5;
  v8 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v6, v8);
  LOBYTE(v6) = *((_BYTE *)v2 + 8);
  v9 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23C181388(MEMORY[0x24BEE4AF8]);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(a2 + 8) = v6;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 16) = a1;
  return result;
}

uint64_t LibraryPageCountState.withFocusedLibraryPage(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v5 = *(int *)(type metadata accessor for LibraryPageCountState() + 28);
  v6 = (char *)v2 + v5;
  v7 = a2 + v5;
  v8 = sub_23C19B524();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v6, v8);
  v9 = *v2;
  v10 = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23C181388(MEMORY[0x24BEE4AF8]);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(a2 + 8) = a1;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 16) = v10;
  return result;
}

uint64_t LibraryPageCountState.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31878);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C181978();
  sub_23C19C0E8();
  v11 = *v3;
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31888);
  sub_23C181D30(&qword_256B31890, (uint64_t (*)(void))sub_23C168934, MEMORY[0x24BEE1770], MEMORY[0x24BEE04C0]);
  sub_23C19C07C();
  if (!v2)
  {
    LOBYTE(v11) = *((_BYTE *)v3 + 8);
    HIBYTE(v10) = 1;
    sub_23C168934();
    sub_23C19C07C();
    v11 = v3[2];
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B30E40);
    sub_23C17582C(&qword_256B311B0, (uint64_t (*)(void))sub_23C1753EC, MEMORY[0x24BEE1700]);
    sub_23C19C07C();
    type metadata accessor for LibraryPageCountState();
    LOBYTE(v11) = 3;
    sub_23C19B524();
    sub_23C14DF00(&qword_256B2FD30, MEMORY[0x24BDCEEC8]);
    sub_23C19C07C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C181978()
{
  unint64_t result;

  result = qword_256B31880;
  if (!qword_256B31880)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1D14, &type metadata for LibraryPageCountState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31880);
  }
  return result;
}

uint64_t LibraryPageCountState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v22 = a2;
  v23 = sub_23C19B524();
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31898);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LibraryPageCountState();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23C181388(MEMORY[0x24BEE4AF8]);
  v26 = a1;
  v27 = v11;
  *v11 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C181978();
  v24 = v8;
  v13 = v28;
  sub_23C19C0DC();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v28 = v9;
    v14 = v6;
    v15 = v5;
    v16 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B31888);
    v29 = 0;
    sub_23C181D30(&qword_256B318A0, (uint64_t (*)(void))sub_23C168CE0, MEMORY[0x24BEE1798], MEMORY[0x24BEE04E0]);
    v17 = v24;
    sub_23C19C01C();
    swift_bridgeObjectRelease();
    v18 = (uint64_t)v27;
    *v27 = v30;
    v29 = 1;
    sub_23C168CE0();
    sub_23C19C01C();
    *(_BYTE *)(v18 + 8) = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B30E40);
    v29 = 2;
    sub_23C17582C(&qword_256B311D0, (uint64_t (*)(void))sub_23C175894, MEMORY[0x24BEE1720]);
    sub_23C19C01C();
    *(_QWORD *)(v18 + 16) = v30;
    LOBYTE(v30) = 3;
    sub_23C14DF00(&qword_256B2FD48, MEMORY[0x24BDCEEE8]);
    v19 = v16;
    v20 = v25;
    sub_23C19C01C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v18 + *(int *)(v28 + 28), v15, v19);
    sub_23C181DA4(v18, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return sub_23C181DE8(v18);
  }
}

uint64_t sub_23C181D30(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31888);
    v10[0] = a2();
    v10[1] = a3;
    result = MEMORY[0x2426189D0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C181DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryPageCountState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C181DE8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LibraryPageCountState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C181E24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryPageCountState.init(from:)(a1, a2);
}

uint64_t sub_23C181E38(_QWORD *a1)
{
  return LibraryPageCountState.encode(to:)(a1);
}

void sub_23C181E50(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v11);
    sub_23C18F5FC(*(_BYTE *)(*(_QWORD *)(a1 + 48) + v11));
    if ((v17 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v16) != v15)
      return;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
}

uint64_t _s14FitnessLibrary0B14PageCountStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  char v4;
  char v5;

  sub_23C181E50(*(_QWORD *)a1, *a2);
  if ((v4 & 1) != 0)
  {
    sub_23C16BDD0(*(_BYTE *)(a1 + 8));
    if ((v5 & 1) != 0 && (sub_23C181004(*(_QWORD *)(a1 + 16), a2[2]) & 1) != 0)
    {
      type metadata accessor for LibraryPageCountState();
      JUMPOUT(0x242617B18);
    }
  }
  return 0;
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryPageCountState(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v6 = *(int *)(a3 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_23C19B524();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for LibraryPageCountState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23C19B524();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23C19B524();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPageCountState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C18236C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23C19B524();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23C1823F4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_23C19B524();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23C182468()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C19B524();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C182538 + 4 * byte_23C1A1B99[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C18256C + 4 * byte_23C1A1B94[v4]))();
}

uint64_t sub_23C18256C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C182574(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C18257CLL);
  return result;
}

uint64_t sub_23C182588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C182590);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C182594(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C18259C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountState.CodingKeys()
{
  return &type metadata for LibraryPageCountState.CodingKeys;
}

unint64_t sub_23C1825BC()
{
  unint64_t result;

  result = qword_256B31940;
  if (!qword_256B31940)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1CEC, &type metadata for LibraryPageCountState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31940);
  }
  return result;
}

unint64_t sub_23C182604()
{
  unint64_t result;

  result = qword_256B31948;
  if (!qword_256B31948)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1C5C, &type metadata for LibraryPageCountState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31948);
  }
  return result;
}

unint64_t sub_23C18264C()
{
  unint64_t result;

  result = qword_256B31950;
  if (!qword_256B31950)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1C84, &type metadata for LibraryPageCountState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31950);
  }
  return result;
}

uint64_t sub_23C182690(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E756F4365676170 && a2 == 0xEA00000000007374;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023C1A4420 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023C1A4570 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

__n128 LibraryPageCountFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v4;
  result = *(__n128 *)(a1 + 96);
  *(__n128 *)(a2 + 96) = result;
  return result;
}

uint64_t LibraryPageCountFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t a4, uint64_t a5)
{
  __int128 *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  int *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v41[15];
  unint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;

  v42 = a3;
  v44 = a2;
  v41[14] = a1;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B304E8);
  v8 = *(_QWORD *)(v43 - 8);
  v9 = MEMORY[0x24BDAC7A8](v43);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v41 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = v5[5];
  v50 = v5[4];
  v51 = v18;
  v52 = v5[6];
  v19 = v5[1];
  v46 = *v5;
  v47 = v19;
  v20 = v5[3];
  v48 = v5[2];
  v49 = v20;
  if (a4 >> 62)
  {
    if (a4 >> 62 != 1)
      __asm { BR              X10 }
    v21 = (uint64_t *)v44;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = *v21;
    *v21 = 0x8000000000000000;
    sub_23C186228(a5, a4, isUniquelyReferenced_nonNull_native);
    *v21 = v45;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B30468);
    v25 = &v17[v24[16]];
    v26 = &v17[v24[20]];
    v27 = &v17[v24[24]];
    LOBYTE(v45) = 2;
    sub_23C183894();
    sub_23C19BF2C();
    sub_23C19BE84();
    v28 = *MEMORY[0x24BE2B570];
    v29 = sub_23C19BD88();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v25, v28, v29);
    v30 = swift_allocObject();
    v31 = v51;
    *(_OWORD *)(v30 + 80) = v50;
    *(_OWORD *)(v30 + 96) = v31;
    *(_OWORD *)(v30 + 112) = v52;
    v32 = v47;
    *(_OWORD *)(v30 + 16) = v46;
    *(_OWORD *)(v30 + 32) = v32;
    v33 = v49;
    *(_OWORD *)(v30 + 48) = v48;
    *(_OWORD *)(v30 + 64) = v33;
    *(_BYTE *)(v30 + 128) = a4;
    *(_QWORD *)v27 = &unk_256B319D0;
    *((_QWORD *)v27 + 1) = v30;
    v34 = *MEMORY[0x24BE2B558];
    v35 = sub_23C19BD7C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v26, v34, v35);
    v36 = v43;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v17, *MEMORY[0x24BE2B438], v43);
    v37 = v42;
    v38 = *v42;
    sub_23C185864((uint64_t)&v46);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v38 = sub_23C15B218(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
    v40 = *(_QWORD *)(v38 + 16);
    v39 = *(_QWORD *)(v38 + 24);
    if (v40 >= v39 >> 1)
      v38 = sub_23C15B218(v39 > 1, v40 + 1, 1, v38);
    *(_QWORD *)(v38 + 16) = v40 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(v38+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v40, v17, v36);
    *v37 = v38;
    *(_BYTE *)(v44 + 8) = a4;
  }
  return result;
}

unint64_t sub_23C183894()
{
  unint64_t result;

  result = qword_256B31960;
  if (!qword_256B31960)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1E50, &type metadata for LibraryPageCountFeature.TaskIdentifier);
    atomic_store(result, &qword_256B31960);
  }
  return result;
}

uint64_t sub_23C1838D8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v2[4] = sub_23C19BE78();
  v2[5] = sub_23C19BE6C();
  v2[6] = sub_23C19BE54();
  v2[7] = v3;
  return swift_task_switch();
}

uint64_t sub_23C183948()
{
  int8x16_t *v0;
  uint64_t v1;
  _QWORD *v2;
  int8x16_t v4;

  v4 = v0[1];
  v0[4].i64[0] = sub_23C19BE6C();
  v1 = swift_task_alloc();
  v0[4].i64[1] = v1;
  *(_QWORD *)(v1 + 16) = &unk_250D06A50;
  *(int8x16_t *)(v1 + 24) = vextq_s8(v4, v4, 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[5].i64[0] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23C183A08;
  return sub_23C19BFBC();
}

uint64_t sub_23C183A08()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C183A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
  v5[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 + 64);
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A20);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  sub_23C19BE78();
  v5[19] = sub_23C19BE6C();
  sub_23C19BE54();
  return swift_task_switch();
}

uint64_t sub_23C183B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v28 = *(_QWORD *)(v0 + 112);
    v3 = (char *)(*(_QWORD *)(v0 + 80) + 32);
    v4 = sub_23C19BEB4();
    v26 = *(_QWORD *)(v4 - 8);
    v27 = v4;
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    swift_bridgeObjectRetain();
    do
    {
      v29 = v2;
      v6 = *(_QWORD *)(v0 + 144);
      v7 = *(_QWORD *)(v0 + 128);
      v9 = *(_QWORD *)(v0 + 96);
      v8 = *(_QWORD *)(v0 + 104);
      v10 = *(_OWORD **)(v0 + 88);
      v30 = *v3;
      v31 = *(_QWORD *)(v0 + 136);
      v25(v6, 1, 1, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v7, v9, v8);
      v11 = (*(unsigned __int8 *)(v28 + 80) + 145) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = 0;
      *(_QWORD *)(v12 + 24) = 0;
      v14 = v10[5];
      v13 = v10[6];
      v15 = v10[4];
      *(_OWORD *)(v12 + 80) = v10[3];
      *(_OWORD *)(v12 + 96) = v15;
      *(_OWORD *)(v12 + 112) = v14;
      *(_OWORD *)(v12 + 128) = v13;
      v17 = v10[1];
      v16 = v10[2];
      *(_OWORD *)(v12 + 32) = *v10;
      *(_OWORD *)(v12 + 48) = v17;
      *(_OWORD *)(v12 + 64) = v16;
      *(_BYTE *)(v12 + 144) = v30;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v28 + 32))(v12 + v11, v7, v8);
      sub_23C1867CC(v6, v31);
      LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v31, 1, v27);
      sub_23C185864((uint64_t)v10);
      v18 = *(_QWORD *)(v0 + 136);
      if ((_DWORD)v7 == 1)
      {
        sub_23C186814(*(_QWORD *)(v0 + 136));
      }
      else
      {
        sub_23C19BEA8();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v18, v27);
      }
      if (*(_QWORD *)(v12 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v19 = sub_23C19BE54();
        v21 = v20;
        swift_unknownObjectRelease();
      }
      else
      {
        v19 = 0;
        v21 = 0;
      }
      v22 = **(_QWORD **)(v0 + 72);
      v23 = v21 | v19;
      if (v21 | v19)
      {
        v23 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v19;
        *(_QWORD *)(v0 + 40) = v21;
      }
      v5 = *(_QWORD *)(v0 + 144);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v23;
      *(_QWORD *)(v0 + 64) = v22;
      swift_task_create();
      swift_release();
      sub_23C186814(v5);
      v2 = v29 - 1;
      ++v3;
    }
    while (v29 != 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C183DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  *(_QWORD *)(v6 + 32) = a6;
  *(_BYTE *)(v6 + 56) = a5;
  v10 = (uint64_t (*)(uint64_t))(**(int **)(a4 + 96) + *(_QWORD *)(a4 + 96));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 40) = v8;
  *v8 = v6;
  v8[1] = sub_23C183E64;
  return v10(a5);
}

uint64_t sub_23C183E64(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 16) = *(unsigned __int8 *)(v4 + 56) | 0x4000000000000000;
  *(_QWORD *)(v4 + 24) = a1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
  *v7 = v5;
  v7[1] = sub_23C186D44;
  return sub_23C19BD70();
}

uint64_t sub_23C183F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v3[2] = sub_23C19BE78();
  v3[3] = sub_23C19BE6C();
  v8 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 80) + *(_QWORD *)(a2 + 80));
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_23C15A9C8;
  return v8(a3);
}

uint64_t sub_23C183F98(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  v2[14] = a1;
  v2[15] = sub_23C19BE78();
  v2[16] = sub_23C19BE6C();
  v6 = (uint64_t (*)(_QWORD *))(*(int *)*a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  v2[17] = v4;
  *v4 = v2;
  v4[1] = sub_23C184020;
  return v6(v2 + 2);
}

uint64_t sub_23C184020()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 152) = sub_23C19BE54();
  *(_QWORD *)(v2 + 160) = v3;
  return swift_task_switch();
}

uint64_t sub_23C1840AC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23C19BECC();
  swift_task_dealloc();
  v0[21] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[22] = v5;
  *v5 = v0;
  v5[1] = sub_23C184200;
  return sub_23C19BE60();
}

uint64_t sub_23C184200()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C184254()
{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 192) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_OWORD *)(v0 + 96) = xmmword_23C1A1E90;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
    *v2 = v0;
    v2[1] = sub_23C184318;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C184318()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C184364()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[21] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[22] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C184200;
  return sub_23C19BE60();
}

uint64_t sub_23C184408()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C18443C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  v2[14] = a1;
  v2[15] = sub_23C19BE78();
  v2[16] = sub_23C19BE6C();
  v6 = (uint64_t (*)(_QWORD *))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v2[17] = v4;
  *v4 = v2;
  v4[1] = sub_23C1844C4;
  return v6(v2 + 2);
}

uint64_t sub_23C1844C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 152) = sub_23C19BE54();
  *(_QWORD *)(v2 + 160) = v3;
  return swift_task_switch();
}

uint64_t sub_23C184550()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23C19BECC();
  swift_task_dealloc();
  v0[21] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[22] = v5;
  *v5 = v0;
  v5[1] = sub_23C1846A4;
  return sub_23C19BE60();
}

uint64_t sub_23C1846A4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C1846F8()
{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 192) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_OWORD *)(v0 + 96) = xmmword_23C1A1EA0;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
    *v2 = v0;
    v2[1] = sub_23C1847BC;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C1847BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C184808()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[21] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[22] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C1846A4;
  return sub_23C19BE60();
}

uint64_t sub_23C1848AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  v2[16] = a1;
  v2[17] = sub_23C19BE78();
  v2[18] = sub_23C19BE6C();
  v6 = (uint64_t (*)(_QWORD *))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  v2[19] = v4;
  *v4 = v2;
  v4[1] = sub_23C184934;
  return v6(v2 + 2);
}

uint64_t sub_23C184934()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 168) = sub_23C19BE54();
  *(_QWORD *)(v2 + 176) = v3;
  return swift_task_switch();
}

uint64_t sub_23C1849C0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23C19BECC();
  swift_task_dealloc();
  v0[23] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[24] = v5;
  *v5 = v0;
  v5[1] = sub_23C184B14;
  return sub_23C19BE60();
}

uint64_t sub_23C184B14()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C184B68()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD *v3;

  if (*(_BYTE *)(v0 + 120) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 96) = 0x4000000000000002;
    *(_QWORD *)(v0 + 104) = v2;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
    *v3 = v0;
    v3[1] = sub_23C184C34;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C184C34()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C184C80()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[23] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C184B14;
  return sub_23C19BE60();
}

uint64_t sub_23C184D24()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C184D58(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  v2[16] = a1;
  v2[17] = sub_23C19BE78();
  v2[18] = sub_23C19BE6C();
  v6 = (uint64_t (*)(_QWORD *))(**(int **)(a2 + 64) + *(_QWORD *)(a2 + 64));
  v4 = (_QWORD *)swift_task_alloc();
  v2[19] = v4;
  *v4 = v2;
  v4[1] = sub_23C184DE0;
  return v6(v2 + 2);
}

uint64_t sub_23C184DE0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 168) = sub_23C19BE54();
  *(_QWORD *)(v2 + 176) = v3;
  return swift_task_switch();
}

uint64_t sub_23C184E6C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23C19BECC();
  swift_task_dealloc();
  v0[23] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[24] = v5;
  *v5 = v0;
  v5[1] = sub_23C184FC0;
  return sub_23C19BE60();
}

uint64_t sub_23C184FC0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C185014()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD *v3;

  if (*(_BYTE *)(v0 + 120) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 96) = 0x4000000000000003;
    *(_QWORD *)(v0 + 104) = v2;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
    *v3 = v0;
    v3[1] = sub_23C1850E0;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C1850E0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C18512C()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[23] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C184FC0;
  return sub_23C19BE60();
}

uint64_t sub_23C1851D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  v2[16] = a1;
  v2[17] = sub_23C19BE78();
  v2[18] = sub_23C19BE6C();
  v6 = (uint64_t (*)(_QWORD *))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v4 = (_QWORD *)swift_task_alloc();
  v2[19] = v4;
  *v4 = v2;
  v4[1] = sub_23C185258;
  return v6(v2 + 2);
}

uint64_t sub_23C185258()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 168) = sub_23C19BE54();
  *(_QWORD *)(v2 + 176) = v3;
  return swift_task_switch();
}

uint64_t sub_23C1852E4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23C19BECC();
  swift_task_dealloc();
  v0[23] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[24] = v5;
  *v5 = v0;
  v5[1] = sub_23C185438;
  return sub_23C19BE60();
}

uint64_t sub_23C185438()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C18548C()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD *v3;

  if (*(_BYTE *)(v0 + 120) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 96) = 0x4000000000000005;
    *(_QWORD *)(v0 + 104) = v2;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
    *v3 = v0;
    v3[1] = sub_23C185558;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C185558()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C1855A4()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[23] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C185438;
  return sub_23C19BE60();
}

uint64_t sub_23C185648(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v2[4] = sub_23C19BE78();
  v2[5] = sub_23C19BE6C();
  v2[6] = sub_23C19BE54();
  v2[7] = v3;
  return swift_task_switch();
}

uint64_t sub_23C1856B8()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;
  int8x16_t v4;

  v4 = v0[1];
  v0[4].i64[0] = sub_23C19BE6C();
  v1 = (int8x16_t *)swift_task_alloc();
  v0[4].i64[1] = (uint64_t)v1;
  v1[1] = vextq_s8(v4, v4, 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[5].i64[0] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23C18576C;
  return sub_23C19BFBC();
}

uint64_t sub_23C18576C()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C1857D4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C185808()
{
  return objectdestroyTm_0();
}

uint64_t sub_23C185810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C185648(a1, v1 + 16);
}

uint64_t sub_23C185864(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C1858EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
  v4[12] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 + 64);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A20);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  sub_23C19BE78();
  v4[18] = sub_23C19BE6C();
  sub_23C19BE54();
  return swift_task_switch();
}

uint64_t sub_23C1859C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  swift_release();
  if (qword_256B2FD00 != -1)
    swift_once();
  v1 = qword_256B404D8;
  v29 = *(_QWORD *)(qword_256B404D8 + 16);
  if (v29)
  {
    v27 = *(_QWORD *)(v0 + 104);
    v26 = sub_23C19BEB4();
    v2 = *(_QWORD *)(v26 - 8);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
    v28 = v1;
    v25 = v2;
    do
    {
      v5 = *(_QWORD *)(v0 + 136);
      v31 = *(_QWORD *)(v0 + 128);
      v6 = *(_QWORD *)(v0 + 120);
      v8 = *(_QWORD *)(v0 + 88);
      v7 = *(_QWORD *)(v0 + 96);
      v9 = *(_OWORD **)(v0 + 80);
      v32 = v3;
      v30 = *(_BYTE *)(v1 + v3 + 32);
      v24(v5, 1, 1, v26);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v6, v8, v7);
      v10 = (*(unsigned __int8 *)(v27 + 80) + 145) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = 0;
      *(_QWORD *)(v11 + 24) = 0;
      v13 = v9[5];
      v12 = v9[6];
      v14 = v9[4];
      *(_OWORD *)(v11 + 80) = v9[3];
      *(_OWORD *)(v11 + 96) = v14;
      *(_OWORD *)(v11 + 112) = v13;
      *(_OWORD *)(v11 + 128) = v12;
      v16 = v9[1];
      v15 = v9[2];
      *(_OWORD *)(v11 + 32) = *v9;
      *(_OWORD *)(v11 + 48) = v16;
      *(_OWORD *)(v11 + 64) = v15;
      *(_BYTE *)(v11 + 144) = v30;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32))(v11 + v10, v6, v7);
      sub_23C1867CC(v5, v31);
      LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v31, 1, v26);
      sub_23C185864((uint64_t)v9);
      v17 = *(_QWORD *)(v0 + 128);
      if ((_DWORD)v7 == 1)
      {
        sub_23C186814(*(_QWORD *)(v0 + 128));
      }
      else
      {
        sub_23C19BEA8();
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v17, v26);
      }
      v1 = v28;
      if (*(_QWORD *)(v11 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v18 = sub_23C19BE54();
        v20 = v19;
        swift_unknownObjectRelease();
      }
      else
      {
        v18 = 0;
        v20 = 0;
      }
      v21 = **(_QWORD **)(v0 + 72);
      v22 = v20 | v18;
      if (v20 | v18)
      {
        v22 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v18;
        *(_QWORD *)(v0 + 40) = v20;
      }
      v3 = v32 + 1;
      v4 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v22;
      *(_QWORD *)(v0 + 64) = v21;
      swift_task_create();
      swift_release();
      sub_23C186814(v4);
    }
    while (v29 != v32 + 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C185CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  *(_QWORD *)(v6 + 32) = a6;
  *(_BYTE *)(v6 + 56) = a5;
  v10 = (uint64_t (*)(uint64_t))(**(int **)(a4 + 96) + *(_QWORD *)(a4 + 96));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 40) = v8;
  *v8 = v6;
  v8[1] = sub_23C185D20;
  return v10(a5);
}

uint64_t sub_23C185D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 16) = *(unsigned __int8 *)(v4 + 56) | 0x4000000000000000;
  *(_QWORD *)(v4 + 24) = a1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
  *v7 = v5;
  v7[1] = sub_23C185DD4;
  return sub_23C19BD70();
}

uint64_t sub_23C185DD4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23C185E24(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  return LibraryPageCountFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *(_QWORD *)a4, *(_QWORD *)(a4 + 8));
}

uint64_t sub_23C185E30()
{
  return objectdestroyTm_0();
}

uint64_t sub_23C185E38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C183F98(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_23C185E8C()
{
  return objectdestroyTm_0();
}

uint64_t sub_23C185E94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C18443C(a1, v1 + 16);
}

uint64_t sub_23C185EE8()
{
  return objectdestroyTm_0();
}

uint64_t sub_23C185EF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C1848AC(a1, v1 + 16);
}

uint64_t sub_23C185F44()
{
  return objectdestroyTm_0();
}

uint64_t sub_23C185F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C184D58(a1, v1 + 16);
}

uint64_t sub_23C185FA0()
{
  return objectdestroyTm_0();
}

uint64_t sub_23C185FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C1851D0(a1, v1 + 16);
}

uint64_t sub_23C185FFC()
{
  return objectdestroyTm_0();
}

uint64_t sub_23C186004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = v1 + 16;
  v5 = *(unsigned __int8 *)(v1 + 128);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23C15AB44;
  return sub_23C183F18(a1, v4, v5);
}

void sub_23C186068(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31958);
  v6 = sub_23C19BF8C();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_20;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_20;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_20:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v18 = 1 << *(_BYTE *)(v5 + 32);
                if (v18 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v18;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_27;
                if (v12 >= v11)
                  goto LABEL_20;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      sub_23C186854(*(_BYTE *)(*(_QWORD *)(v5 + 48) + v14));
    }
  }
  swift_release();
  *v3 = v6;
}

void sub_23C186228(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  sub_23C18F5FC(a2);
  v11 = v10;
  v12 = *(_QWORD *)(v8 + 16);
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v9;
  v16 = *(_QWORD *)(v8 + 24);
  if (v16 >= v14 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_23C1869DC();
LABEL_7:
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v17[7] + 8 * v11) = a1;
      return;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    *(_BYTE *)(v17[6] + v11) = a2;
    *(_QWORD *)(v17[7] + 8 * v11) = a1;
    v20 = v17[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v17[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_23C186068(v14, a3 & 1);
  sub_23C18F5FC(a2);
  if ((v15 & 1) == (v19 & 1))
  {
    v11 = v18;
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23C19C094();
  __break(1u);
}

uint64_t sub_23C186350()
{
  return objectdestroyTm_0();
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C1863B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C1838D8(a1, v1 + 16);
}

unint64_t sub_23C186410()
{
  unint64_t result;

  result = qword_256B319E8;
  if (!qword_256B319E8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPageCountAction, &type metadata for LibraryPageCountAction);
    atomic_store(result, (unint64_t *)&qword_256B319E8);
  }
  return result;
}

unint64_t sub_23C186458()
{
  unint64_t result;

  result = qword_256B319F0;
  if (!qword_256B319F0)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPageCountAction, &type metadata for LibraryPageCountAction);
    atomic_store(result, (unint64_t *)&qword_256B319F0);
  }
  return result;
}

unint64_t sub_23C1864A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B319F8;
  if (!qword_256B319F8)
  {
    v1 = type metadata accessor for LibraryPageCountState();
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPageCountState, v1);
    atomic_store(result, (unint64_t *)&qword_256B319F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountFeature()
{
  return &type metadata for LibraryPageCountFeature;
}

uint64_t getEnumTagSinglePayload for LibraryPageCountFeature.TaskIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23C1865D4 + 4 * byte_23C1A1D7D[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23C186608 + 4 * byte_23C1A1D78[v4]))();
}

uint64_t sub_23C186608(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C186610(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C186618);
  return result;
}

uint64_t sub_23C186624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C18662CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23C186630(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C186638(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountFeature.TaskIdentifier()
{
  return &type metadata for LibraryPageCountFeature.TaskIdentifier;
}

unint64_t sub_23C186658()
{
  unint64_t result;

  result = qword_256B31A00;
  if (!qword_256B31A00)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A1E28, &type metadata for LibraryPageCountFeature.TaskIdentifier);
    atomic_store(result, &qword_256B31A00);
  }
  return result;
}

uint64_t sub_23C18669C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_23C168174;
  return sub_23C183A70(a1, a2, v6, v7, v8);
}

uint64_t sub_23C18671C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18) - 8) + 80);
  v3 = v0 + ((v2 + 145) & ~v2);
  v4 = *(unsigned __int8 *)(v0 + 144);
  v5 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_23C168174;
  *(_QWORD *)(v5 + 32) = v3;
  *(_BYTE *)(v5 + 56) = v4;
  v8 = (uint64_t (*)(uint64_t))(**(int **)(v0 + 128) + *(_QWORD *)(v0 + 128));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 40) = v6;
  *v6 = v5;
  v6[1] = sub_23C183E64;
  return v8(v4);
}

uint64_t sub_23C1867CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C186814(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23C186854(char a1)
{
  sub_23C19C0AC();
  __asm { BR              X10 }
}

unint64_t sub_23C1868B0()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  unint64_t result;

  sub_23C19BE00();
  swift_bridgeObjectRelease();
  sub_23C19C0D0();
  result = sub_23C19BF20();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(v0[6] + result) = v2;
  *(_QWORD *)(v0[7] + 8 * result) = v1;
  ++v0[2];
  return result;
}

void *sub_23C1869DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31958);
  v2 = *v0;
  v3 = sub_23C19BF80();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23C186B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23C168174;
  return sub_23C1858EC(a1, a2, v7, v6);
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 145) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23C186C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B31A18) - 8) + 80);
  v3 = v0 + ((v2 + 145) & ~v2);
  v4 = *(unsigned __int8 *)(v0 + 144);
  v5 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_23C168174;
  *(_QWORD *)(v5 + 32) = v3;
  *(_BYTE *)(v5 + 56) = v4;
  v8 = (uint64_t (*)(uint64_t))(**(int **)(v0 + 128) + *(_QWORD *)(v0 + 128));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 40) = v6;
  *v6 = v5;
  v6[1] = sub_23C185D20;
  return v8(v4);
}

uint64_t sub_23C186D48(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C186D80 + 4 * byte_23C1A1EB0[a1]))(0xD000000000000015, 0x800000023C1A45B0);
}

uint64_t sub_23C186D80()
{
  return 0x6570704177656976;
}

uint64_t sub_23C186DA0()
{
  return 0x6173694477656976;
}

uint64_t sub_23C186E08()
{
  sub_23C187714();
  return sub_23C19C0F4();
}

uint64_t sub_23C186E30()
{
  sub_23C187714();
  return sub_23C19C100();
}

uint64_t sub_23C186E58()
{
  unsigned __int8 *v0;

  return sub_23C186D48(*v0);
}

uint64_t sub_23C186E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C1877AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C186E84()
{
  sub_23C18757C();
  return sub_23C19C0F4();
}

uint64_t sub_23C186EAC()
{
  sub_23C18757C();
  return sub_23C19C100();
}

uint64_t sub_23C186ED4()
{
  sub_23C187648();
  return sub_23C19C0F4();
}

uint64_t sub_23C186EFC()
{
  sub_23C187648();
  return sub_23C19C100();
}

uint64_t sub_23C186F24()
{
  sub_23C187604();
  return sub_23C19C0F4();
}

uint64_t sub_23C186F4C()
{
  sub_23C187604();
  return sub_23C19C100();
}

uint64_t sub_23C186F74()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E756F63;
  else
    return 1701273968;
}

uint64_t sub_23C186FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C187A68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C186FC8()
{
  sub_23C1875C0();
  return sub_23C19C0F4();
}

uint64_t sub_23C186FF0()
{
  sub_23C1875C0();
  return sub_23C19C100();
}

uint64_t sub_23C187018()
{
  sub_23C1876D0();
  return sub_23C19C0F4();
}

uint64_t sub_23C187040()
{
  sub_23C1876D0();
  return sub_23C19C100();
}

uint64_t sub_23C187068()
{
  sub_23C18768C();
  return sub_23C19C0F4();
}

uint64_t sub_23C187090()
{
  sub_23C18768C();
  return sub_23C19C100();
}

uint64_t LibraryPageCountAction.encode(to:)(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v37 = a3;
  v43 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A58);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A60);
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A68);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A70);
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v31 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A78);
  v29 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v28 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A80);
  MEMORY[0x24BDAC7A8](v27);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31A88);
  v44 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C18757C();
  v18 = v17;
  v19 = v43;
  sub_23C19C0E8();
  if (v19 >> 62)
  {
    if (v19 >> 62 != 1)
      __asm { BR              X10 }
    v51 = 5;
    sub_23C1875C0();
    v20 = v40;
    v21 = v15;
    sub_23C19C034();
    v50 = v19;
    v49 = 0;
    sub_23C168934();
    v22 = v42;
    v23 = v45;
    sub_23C19C07C();
    if (!v23)
    {
      v48 = 1;
      sub_23C19C070();
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v20, v22);
  }
  else
  {
    v47 = 3;
    sub_23C187648();
    v21 = v15;
    sub_23C19C034();
    v46 = v19;
    sub_23C168934();
    v24 = v39;
    sub_23C19C07C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v18, v21);
}

unint64_t sub_23C18757C()
{
  unint64_t result;

  result = qword_256B31A90;
  if (!qword_256B31A90)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A256C, &type metadata for LibraryPageCountAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31A90);
  }
  return result;
}

unint64_t sub_23C1875C0()
{
  unint64_t result;

  result = qword_256B31A98;
  if (!qword_256B31A98)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A251C, &type metadata for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31A98);
  }
  return result;
}

unint64_t sub_23C187604()
{
  unint64_t result;

  result = qword_256B31AA0;
  if (!qword_256B31AA0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A24CC, &type metadata for LibraryPageCountAction.RefreshCountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AA0);
  }
  return result;
}

unint64_t sub_23C187648()
{
  unint64_t result;

  result = qword_256B31AA8;
  if (!qword_256B31AA8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A247C, &type metadata for LibraryPageCountAction.NavigateToLibraryPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AA8);
  }
  return result;
}

unint64_t sub_23C18768C()
{
  unint64_t result;

  result = qword_256B31AB0;
  if (!qword_256B31AB0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A242C, &type metadata for LibraryPageCountAction.ViewDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AB0);
  }
  return result;
}

unint64_t sub_23C1876D0()
{
  unint64_t result;

  result = qword_256B31AB8;
  if (!qword_256B31AB8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A23DC, &type metadata for LibraryPageCountAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AB8);
  }
  return result;
}

unint64_t sub_23C187714()
{
  unint64_t result;

  result = qword_256B31AC0;
  if (!qword_256B31AC0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A238C, &type metadata for LibraryPageCountAction.BookmarkCountsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AC0);
  }
  return result;
}

_QWORD *LibraryPageCountAction.init(from:)(_QWORD *a1)
{
  return sub_23C187B40(a1);
}

_QWORD *sub_23C18776C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_23C187B40(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_23C187794(_QWORD *a1)
{
  uint64_t v1;

  return LibraryPageCountAction.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_23C1877AC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023C1A45B0 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6173694477656976 && a2 == 0xEF64657261657070 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023C1A45D0 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4368736572666572 && a2 == 0xEC000000746E756FLL || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023C1A45F0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23C187A68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701273968 && a2 == 0xE400000000000000;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_23C187B40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31B50);
  v23[3] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v34 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31B58);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v31 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31B60);
  v29 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31B68);
  v23[4] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v33 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31B70);
  v23[5] = *(_QWORD *)(v7 - 8);
  v23[6] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31B78);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_256B31B80);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v35 = a1;
  v16 = __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23C18757C();
  v17 = v36;
  sub_23C19C0DC();
  if (!v17)
  {
    v23[1] = v10;
    v23[2] = v9;
    v36 = v12;
    v18 = sub_23C19C028();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X10 }
    v19 = sub_23C19BF50();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v21 = &type metadata for LibraryPageCountAction;
    v16 = v14;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v11);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return v16;
}

void sub_23C1880D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 69) = 4;
  sub_23C187604();
  v4 = *(_QWORD *)(v3 - 144);
  sub_23C19BFC8();
  if (v1)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23C1880A0);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 176) + 8))(v4, *(_QWORD *)(v3 - 168));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v2, v0);
  JUMPOUT(0x23C188258);
}

uint64_t getEnumTagSinglePayload for LibraryPageCountAction(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)a1 >> 3;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 8 * -a2;
      *(_QWORD *)(result + 8) = 0;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23C1883A0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_QWORD *)a1 & 7 | (8 * *(_DWORD *)(a1 + 8))) + 2;
}

_QWORD *sub_23C1883C0(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_23C1883D0(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *result & 7 | (a2 << 62);
  }
  else
  {
    *result = ((_BYTE)a2 - 2) & 7 | 0x8000000000000000;
    result[1] = (unint64_t)(a2 - 2) >> 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction()
{
  return &type metadata for LibraryPageCountAction;
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23C18845C + 4 * byte_23C1A1EC5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23C188490 + 4 * byte_23C1A1EC0[v4]))();
}

uint64_t sub_23C188490(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C188498(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C1884A0);
  return result;
}

uint64_t sub_23C1884AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C1884B4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23C1884B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C1884C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.CodingKeys()
{
  return &type metadata for LibraryPageCountAction.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.BookmarkCountsUpdatedCodingKeys()
{
  return &type metadata for LibraryPageCountAction.BookmarkCountsUpdatedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.ViewAppearedCodingKeys()
{
  return &type metadata for LibraryPageCountAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.ViewDisappearedCodingKeys()
{
  return &type metadata for LibraryPageCountAction.ViewDisappearedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountAction.NavigateToLibraryPageCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C18854C + 4 * byte_23C1A1ECA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C18856C + 4 * byte_23C1A1ECF[v4]))();
}

_BYTE *sub_23C18854C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C18856C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C188574(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C18857C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C188584(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C18858C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.NavigateToLibraryPageCodingKeys()
{
  return &type metadata for LibraryPageCountAction.NavigateToLibraryPageCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.RefreshCountCodingKeys()
{
  return &type metadata for LibraryPageCountAction.RefreshCountCodingKeys;
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C188604 + 4 * byte_23C1A1ED9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C188638 + 4 * byte_23C1A1ED4[v4]))();
}

uint64_t sub_23C188638(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C188640(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C188648);
  return result;
}

uint64_t sub_23C188654(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C18865CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C188660(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C188668(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys()
{
  return &type metadata for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys;
}

unint64_t sub_23C188688()
{
  unint64_t result;

  result = qword_256B31AC8;
  if (!qword_256B31AC8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A20B4, &type metadata for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AC8);
  }
  return result;
}

unint64_t sub_23C1886D0()
{
  unint64_t result;

  result = qword_256B31AD0;
  if (!qword_256B31AD0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A21BC, &type metadata for LibraryPageCountAction.NavigateToLibraryPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AD0);
  }
  return result;
}

unint64_t sub_23C188718()
{
  unint64_t result;

  result = qword_256B31AD8;
  if (!qword_256B31AD8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2364, &type metadata for LibraryPageCountAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AD8);
  }
  return result;
}

unint64_t sub_23C188760()
{
  unint64_t result;

  result = qword_256B31AE0;
  if (!qword_256B31AE0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2284, &type metadata for LibraryPageCountAction.BookmarkCountsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AE0);
  }
  return result;
}

unint64_t sub_23C1887A8()
{
  unint64_t result;

  result = qword_256B31AE8;
  if (!qword_256B31AE8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A22AC, &type metadata for LibraryPageCountAction.BookmarkCountsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AE8);
  }
  return result;
}

unint64_t sub_23C1887F0()
{
  unint64_t result;

  result = qword_256B31AF0;
  if (!qword_256B31AF0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2234, &type metadata for LibraryPageCountAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AF0);
  }
  return result;
}

unint64_t sub_23C188838()
{
  unint64_t result;

  result = qword_256B31AF8;
  if (!qword_256B31AF8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A225C, &type metadata for LibraryPageCountAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31AF8);
  }
  return result;
}

unint64_t sub_23C188880()
{
  unint64_t result;

  result = qword_256B31B00;
  if (!qword_256B31B00)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A21E4, &type metadata for LibraryPageCountAction.ViewDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B00);
  }
  return result;
}

unint64_t sub_23C1888C8()
{
  unint64_t result;

  result = qword_256B31B08;
  if (!qword_256B31B08)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A220C, &type metadata for LibraryPageCountAction.ViewDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B08);
  }
  return result;
}

unint64_t sub_23C188910()
{
  unint64_t result;

  result = qword_256B31B10;
  if (!qword_256B31B10)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A212C, &type metadata for LibraryPageCountAction.NavigateToLibraryPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B10);
  }
  return result;
}

unint64_t sub_23C188958()
{
  unint64_t result;

  result = qword_256B31B18;
  if (!qword_256B31B18)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2154, &type metadata for LibraryPageCountAction.NavigateToLibraryPageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B18);
  }
  return result;
}

unint64_t sub_23C1889A0()
{
  unint64_t result;

  result = qword_256B31B20;
  if (!qword_256B31B20)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A20DC, &type metadata for LibraryPageCountAction.RefreshCountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B20);
  }
  return result;
}

unint64_t sub_23C1889E8()
{
  unint64_t result;

  result = qword_256B31B28;
  if (!qword_256B31B28)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2104, &type metadata for LibraryPageCountAction.RefreshCountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B28);
  }
  return result;
}

unint64_t sub_23C188A30()
{
  unint64_t result;

  result = qword_256B31B30;
  if (!qword_256B31B30)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2024, &type metadata for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B30);
  }
  return result;
}

unint64_t sub_23C188A78()
{
  unint64_t result;

  result = qword_256B31B38;
  if (!qword_256B31B38)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A204C, &type metadata for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B38);
  }
  return result;
}

unint64_t sub_23C188AC0()
{
  unint64_t result;

  result = qword_256B31B40;
  if (!qword_256B31B40)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A22D4, &type metadata for LibraryPageCountAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B40);
  }
  return result;
}

unint64_t sub_23C188B08()
{
  unint64_t result;

  result = qword_256B31B48;
  if (!qword_256B31B48)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A22FC, &type metadata for LibraryPageCountAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31B48);
  }
  return result;
}

__n128 LibraryCanvasContentEnvironment.init(fetchSectionDescriptors:makeCatalogUpdatedStream:makeItemsUpdatedStream:navigateToBuildCustomPlan:refreshCanvas:refreshCatalog:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11, unint64_t a12)
{
  __n128 result;

  result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  a9[5].n128_u64[1] = a12;
  return result;
}

uint64_t destroy for LibraryCanvasContentEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LibraryCanvasContentEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v3 = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for LibraryCanvasContentEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

_OWORD *assignWithTake for LibraryCanvasContentEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasContentEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentEnvironment()
{
  return &type metadata for LibraryCanvasContentEnvironment;
}

uint64_t *sub_23C188E74(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23C19B524();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)v4 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[16] = v11[16];
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v19 = *((_QWORD *)v18 + 3);
    *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 3) = v19;
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23C188F70(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23C188FF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v18 = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 24) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C1890CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_retain();
  swift_release();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_retain();
  swift_release();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = a2 + v13;
  *v14 = *(_QWORD *)(a2 + v13);
  v14[1] = *(_QWORD *)(a2 + v13 + 8);
  v14[2] = *(_QWORD *)(a2 + v13 + 16);
  v14[3] = *(_QWORD *)(a2 + v13 + 24);
  swift_retain();
  swift_release();
  v14[4] = *(_QWORD *)(v15 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23C1891F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  *(_BYTE *)(v9 + 16) = *((_BYTE *)v10 + 16);
  *(_OWORD *)v9 = v11;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  return a1;
}

uint64_t sub_23C189288(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release();
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_release();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_release();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_release();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  swift_release();
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  swift_release();
  return a1;
}

uint64_t sub_23C18937C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C189388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23C19B524();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23C189408()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C189414(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23C19B524();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for LibraryPickerView()
{
  uint64_t result;

  result = qword_256B31BE0;
  if (!qword_256B31BE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23C1894CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C19B524();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23C189550()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C189560@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)();
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v6 = type metadata accessor for LibraryPickerView();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C178CA8(a1, (uint64_t)v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  sub_23C18B164((uint64_t)v9, v11 + v10);
  *(double *)(v11 + ((v10 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  v12 = sub_23C19BD10();
  v14 = v13;
  sub_23C178CA8(a1, (uint64_t)v9);
  v15 = swift_allocObject();
  sub_23C18B164((uint64_t)v9, v15 + v10);
  sub_23C178CA8(a1, (uint64_t)v9);
  v16 = swift_allocObject();
  result = sub_23C18B164((uint64_t)v9, v16 + v10);
  *a2 = sub_23C18B2C4;
  a2[1] = (uint64_t (*)())v11;
  a2[2] = (uint64_t (*)())v12;
  a2[3] = v14;
  a2[4] = (uint64_t (*)())sub_23C18B328;
  a2[5] = (uint64_t (*)())v15;
  a2[6] = sub_23C18B43C;
  a2[7] = (uint64_t (*)())v16;
  return result;
}

uint64_t sub_23C1896C8()
{
  sub_23C19B89C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C30);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31C38);
  sub_23C18B484();
  swift_getOpaqueTypeConformance2();
  return sub_23C19B5B4();
}

uint64_t sub_23C189778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v34 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C60);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C38);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C30);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = sub_23C19B794();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C68);
  sub_23C189A88(a1, a2, &v7[*(int *)(v18 + 44)]);
  sub_23C19BD10();
  sub_23C19B6C8();
  sub_23C15CF54((uint64_t)v7, (uint64_t)v10, &qword_256B31C60);
  v19 = &v10[*(int *)(v8 + 36)];
  v20 = v40;
  *((_OWORD *)v19 + 4) = v39;
  *((_OWORD *)v19 + 5) = v20;
  *((_OWORD *)v19 + 6) = v41;
  v21 = v36;
  *(_OWORD *)v19 = v35;
  *((_OWORD *)v19 + 1) = v21;
  v22 = v38;
  *((_OWORD *)v19 + 2) = v37;
  *((_OWORD *)v19 + 3) = v22;
  sub_23C15FEA8((uint64_t)v7, &qword_256B31C60);
  LOBYTE(v7) = sub_23C19B8C0();
  sub_23C19B584();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_23C15CF54((uint64_t)v10, (uint64_t)v13, &qword_256B31C50);
  v31 = &v13[*(int *)(v11 + 36)];
  *v31 = (char)v7;
  *((_QWORD *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_23C15FEA8((uint64_t)v10, &qword_256B31C50);
  sub_23C18B484();
  sub_23C19BAAC();
  sub_23C15FEA8((uint64_t)v13, &qword_256B31C38);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v34, v17, v14);
}

uint64_t sub_23C189A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  _QWORD v38[2];
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;

  v39 = a2;
  v45 = a3;
  v46 = a1;
  v3 = sub_23C19B6A4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for LibraryPickerView();
  v7 = *(_QWORD *)(v43 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v43);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C70);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C78);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C80);
  v14 = MEMORY[0x24BDAC7A8](v42);
  v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v44 = (uint64_t)v38 - v17;
  *(_QWORD *)v12 = sub_23C19B794();
  *((_QWORD *)v12 + 1) = 0x4034000000000000;
  v12[16] = 0;
  v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B31C88) + 44);
  if (qword_256B2FD08 != -1)
    swift_once();
  v38[1] = &v12[v18];
  v47 = qword_256B404E0;
  sub_23C178CA8(v46, (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v39, v3);
  v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = (v8 + *(unsigned __int8 *)(v4 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v21 = swift_allocObject();
  sub_23C18B164((uint64_t)v9, v21 + v19);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v21 + v20, v6, v3);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31730);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C90);
  sub_23C15159C(&qword_256B31740, &qword_256B31730, MEMORY[0x24BEE12D8]);
  v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31C98);
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31CA0);
  v24 = sub_23C18B700();
  v48 = v23;
  v49 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v48 = v22;
  v49 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_23C18B784();
  sub_23C19BCD4();
  sub_23C19B8C0();
  sub_23C19B584();
  v48 = v26;
  v49 = v27;
  v50 = v28;
  v51 = v29;
  v52 = 0;
  v30 = (uint64_t)v40;
  sub_23C19B824();
  sub_23C15D3EC((uint64_t)v12, v30, &qword_256B31C70);
  v31 = sub_23C19BC2C();
  sub_23C15CF54(v30, (uint64_t)v16, &qword_256B31C78);
  v32 = (uint64_t *)&v16[*(int *)(v42 + 36)];
  *v32 = v31;
  v32[1] = (uint64_t)sub_23C18A518;
  v32[2] = 0;
  sub_23C15FEA8(v30, &qword_256B31C78);
  v33 = v44;
  sub_23C15D3EC((uint64_t)v16, v44, &qword_256B31C80);
  sub_23C15CF54(v33, (uint64_t)v16, &qword_256B31C80);
  v34 = v45;
  *v45 = 0;
  *((_BYTE *)v34 + 8) = 1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31CC8);
  sub_23C15CF54((uint64_t)v16, (uint64_t)v34 + *(int *)(v35 + 48), &qword_256B31C80);
  v36 = (char *)v34 + *(int *)(v35 + 64);
  *(_QWORD *)v36 = 0;
  v36[8] = 1;
  sub_23C15FEA8(v33, &qword_256B31C80);
  return sub_23C15FEA8((uint64_t)v16, &qword_256B31C80);
}

uint64_t sub_23C189EEC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  unsigned __int8 v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  _QWORD v64[2];
  uint64_t v65;
  char *v66;
  int v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;

  v4 = v3;
  v65 = a2;
  v67 = a1;
  v82 = a3;
  v5 = sub_23C19B6A4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = v5;
  v64[1] = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for LibraryPickerView();
  v10 = *(_QWORD *)(v68 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v68);
  v12 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31CD0);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v66 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31CD8);
  MEMORY[0x24BDAC7A8](v70);
  v15 = (char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31CB8);
  MEMORY[0x24BDAC7A8](v71);
  v69 = (char *)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31CA0);
  MEMORY[0x24BDAC7A8](v79);
  v74 = (uint64_t)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C98);
  v80 = *(_QWORD *)(v18 - 8);
  v81 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v78 = (char *)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C90);
  v76 = *(_QWORD *)(v20 - 8);
  v77 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v75 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C178CA8(v3, (uint64_t)v12);
  v22 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v65, v7);
  v23 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v24 = v23 + v11;
  v25 = (*(unsigned __int8 *)(v6 + 80) + v23 + v11 + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v26 = swift_allocObject();
  sub_23C18B164((uint64_t)v12, v26 + v23);
  v27 = v67;
  *(_BYTE *)(v26 + v24) = v67;
  v28 = v26 + v25;
  v29 = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v28, v9, v22);
  v83 = v29;
  v30 = v4;
  v84 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31CE0);
  sub_23C18B94C();
  v31 = v66;
  sub_23C19BC38();
  v32 = (uint64_t *)(v30 + *(int *)(v68 + 20));
  v33 = *v32;
  v34 = v32[1];
  LOBYTE(v32) = *((_BYTE *)v32 + 16);
  v85 = v33;
  v86 = v34;
  v87 = (char)v32;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D00);
  MEMORY[0x24261828C](&v88, v35);
  sub_23C16BDD0(v88);
  LOBYTE(v26) = v36;
  KeyPath = swift_getKeyPath();
  v38 = swift_allocObject();
  *(_BYTE *)(v38 + 16) = v26 & 1;
  v39 = v72;
  v40 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v15, v31, v73);
  v41 = (uint64_t *)&v15[*(int *)(v70 + 36)];
  *v41 = KeyPath;
  v41[1] = (uint64_t)sub_23C18BAF8;
  v41[2] = v38;
  v42 = v31;
  v43 = (uint64_t)v69;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v40);
  sub_23C15CF54((uint64_t)v15, v43, &qword_256B31CD8);
  *(_BYTE *)(v43 + *(int *)(v71 + 52)) = v29;
  sub_23C15FEA8((uint64_t)v15, &qword_256B31CD8);
  LOBYTE(v38) = sub_23C19B8D8();
  v44 = sub_23C19B8E4();
  v45 = sub_23C19B8FC();
  sub_23C19B8FC();
  if (sub_23C19B8FC() != v38)
    v45 = sub_23C19B8FC();
  sub_23C19B8FC();
  if (sub_23C19B8FC() != v44)
    v45 = sub_23C19B8FC();
  sub_23C19B584();
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = v74;
  sub_23C15CF54(v43, v74, &qword_256B31CB8);
  v55 = v79;
  v56 = v54 + *(int *)(v79 + 36);
  *(_BYTE *)v56 = v45;
  *(_QWORD *)(v56 + 8) = v47;
  *(_QWORD *)(v56 + 16) = v49;
  *(_QWORD *)(v56 + 24) = v51;
  *(_QWORD *)(v56 + 32) = v53;
  *(_BYTE *)(v56 + 40) = 0;
  sub_23C15FEA8(v43, &qword_256B31CB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B0);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_23C1A19D0;
  v85 = 0;
  v86 = 0xE000000000000000;
  LOBYTE(v88) = v29;
  sub_23C19BF68();
  v58 = v86;
  *(_QWORD *)(v57 + 32) = v85;
  *(_QWORD *)(v57 + 40) = v58;
  v59 = sub_23C18B700();
  v60 = v78;
  sub_23C19B9D4();
  swift_bridgeObjectRelease();
  sub_23C15FEA8(v54, &qword_256B31CA0);
  v85 = v55;
  v86 = v59;
  swift_getOpaqueTypeConformance2();
  v61 = v75;
  v62 = v81;
  sub_23C19B9C8();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v60, v62);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v76 + 32))(v82, v61, v77);
}

uint64_t sub_23C18A518@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_23C18A520()
{
  type metadata accessor for LibraryPickerView();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C20);
  return sub_23C19BC14();
}

uint64_t sub_23C18A584()
{
  type metadata accessor for LibraryPickerView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D00);
  sub_23C19BC98();
  sub_23C19BD28();
  sub_23C19B650();
  return swift_release();
}

uint64_t sub_23C18A634()
{
  sub_23C19BD4C();
  sub_23C155C0C();
  return sub_23C19B698();
}

uint64_t sub_23C18A69C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v19 = sub_23C19BD10();
  v7 = v6;
  sub_23C18A76C(a1, a2, (uint64_t)v20);
  v8 = v20[0];
  v9 = v20[1];
  v10 = v21;
  v11 = v22;
  v12 = v23;
  v13 = v24;
  v14 = v25;
  v15 = v26;
  v16 = v27;
  v17 = v28;
  result = swift_getKeyPath();
  *(_QWORD *)a3 = v19;
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = v8;
  *(_QWORD *)(a3 + 24) = v9;
  *(_BYTE *)(a3 + 32) = v10;
  *(_QWORD *)(a3 + 40) = v11;
  *(_QWORD *)(a3 + 48) = v12;
  *(_QWORD *)(a3 + 56) = v13;
  *(_QWORD *)(a3 + 64) = v14;
  *(_BYTE *)(a3 + 72) = v15;
  *(_QWORD *)(a3 + 80) = v16;
  *(_QWORD *)(a3 + 88) = v17;
  *(_QWORD *)(a3 + 96) = result;
  *(_QWORD *)(a3 + 104) = 1;
  *(_BYTE *)(a3 + 112) = 0;
  return result;
}

uint64_t sub_23C18A76C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  double v39;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[3];

  LibraryPage.title(locale:)(a2, a1);
  sub_23C165284();
  v5 = sub_23C19B9B0();
  v7 = v6;
  v9 = v8 & 1;
  sub_23C19B944();
  v10 = sub_23C19B998();
  v12 = v11;
  v14 = v13 & 1;
  sub_23C165534(v5, v7, v9);
  swift_bridgeObjectRelease();
  type metadata accessor for LibraryPickerView();
  swift_retain();
  v15 = sub_23C19B9A4();
  v44 = v16;
  v45 = v15;
  v43 = v17;
  v42 = v18 & 1;
  sub_23C165534(v10, v12, v14);
  swift_release();
  swift_bridgeObjectRelease();
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D00);
  MEMORY[0x24261828C](v47);
  sub_23C16BDD0(v47[0]);
  if ((v19 & 1) != 0)
    v20 = 1.0;
  else
    v20 = 0.0;
  LibraryPage.title(locale:)(a2, a1);
  v21 = sub_23C19B9B0();
  v23 = v22;
  v25 = v24 & 1;
  sub_23C19B938();
  v26 = sub_23C19B998();
  v28 = v27;
  v30 = v29 & 1;
  sub_23C165534(v21, v23, v25);
  swift_bridgeObjectRelease();
  swift_retain();
  v31 = sub_23C19B9A4();
  v33 = v32;
  v35 = v34;
  v37 = v36 & 1;
  sub_23C165534(v26, v28, v30);
  swift_release();
  swift_bridgeObjectRelease();
  MEMORY[0x24261828C](v47, v41);
  sub_23C16BDD0(v47[0]);
  if ((v38 & 1) != 0)
    v39 = 0.0;
  else
    v39 = 1.0;
  *(_QWORD *)a3 = v45;
  *(_QWORD *)(a3 + 8) = v44;
  *(_BYTE *)(a3 + 16) = v42;
  *(_QWORD *)(a3 + 24) = v43;
  *(double *)(a3 + 32) = v20;
  *(_QWORD *)(a3 + 40) = v31;
  *(_QWORD *)(a3 + 48) = v33;
  *(_BYTE *)(a3 + 56) = v37;
  *(_QWORD *)(a3 + 64) = v35;
  *(double *)(a3 + 72) = v39;
  sub_23C1652FC(v45, v44, v42);
  swift_bridgeObjectRetain();
  sub_23C1652FC(v31, v33, v37);
  swift_bridgeObjectRetain();
  sub_23C165534(v31, v33, v37);
  swift_bridgeObjectRelease();
  sub_23C165534(v45, v44, v42);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C18AAD4()
{
  uint64_t v0;
  uint64_t result;
  CGRect v2;
  uint64_t v3;

  v2.origin = *(CGPoint *)(v0 + *(int *)(type metadata accessor for LibraryPickerView() + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C20);
  result = sub_23C19BC08();
  if (v3)
  {
    type metadata accessor for CGRect(0);
    sub_23C19B62C();
    CGRectGetMinX(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_23C18ABC4()
{
  uint64_t v0;
  uint64_t result;
  CGRect v2;
  uint64_t v3;

  v2.origin = *(CGPoint *)(v0 + *(int *)(type metadata accessor for LibraryPickerView() + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C20);
  result = sub_23C19BC08();
  if (v3)
  {
    sub_23C19B620();
    type metadata accessor for CGRect(0);
    sub_23C19B62C();
    CGRectGetMaxX(v2);
    return swift_release();
  }
  return result;
}

double sub_23C18ACC0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[12];
  _BYTE v11[199];

  v2 = sub_23C19B794();
  sub_23C18ADC0((uint64_t)v10);
  *(_OWORD *)&v11[135] = v10[8];
  *(_OWORD *)&v11[151] = v10[9];
  *(_OWORD *)&v11[167] = v10[10];
  *(_OWORD *)&v11[183] = v10[11];
  *(_OWORD *)&v11[71] = v10[4];
  *(_OWORD *)&v11[87] = v10[5];
  *(_OWORD *)&v11[103] = v10[6];
  *(_OWORD *)&v11[119] = v10[7];
  *(_OWORD *)&v11[7] = v10[0];
  *(_OWORD *)&v11[23] = v10[1];
  *(_OWORD *)&v11[39] = v10[2];
  *(_OWORD *)&v11[55] = v10[3];
  v3 = *(_OWORD *)&v11[128];
  *(_OWORD *)(a1 + 161) = *(_OWORD *)&v11[144];
  v4 = *(_OWORD *)&v11[176];
  *(_OWORD *)(a1 + 177) = *(_OWORD *)&v11[160];
  *(_OWORD *)(a1 + 193) = v4;
  v5 = *(_OWORD *)&v11[64];
  *(_OWORD *)(a1 + 97) = *(_OWORD *)&v11[80];
  v6 = *(_OWORD *)&v11[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v11[96];
  *(_OWORD *)(a1 + 129) = v6;
  *(_OWORD *)(a1 + 145) = v3;
  v7 = *(_OWORD *)v11;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v11[16];
  result = *(double *)&v11[32];
  v9 = *(_OWORD *)&v11[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v11[32];
  *(_OWORD *)(a1 + 65) = v9;
  *(_OWORD *)(a1 + 81) = v5;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 208) = *(_QWORD *)&v11[191];
  *(_OWORD *)(a1 + 17) = v7;
  return result;
}

double sub_23C18ADC0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  __int128 v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31C28);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23C1A25E0;
  sub_23C19BB78();
  sub_23C18AAD4();
  v3 = sub_23C19BB9C();
  swift_release();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = sub_23C19BB78();
  sub_23C19BE48();
  MEMORY[0x2426182F8](v2);
  sub_23C19BD58();
  sub_23C19BD64();
  sub_23C19B674();
  type metadata accessor for LibraryPickerView();
  sub_23C19BD10();
  sub_23C19B614();
  v4 = sub_23C19BB78();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23C1A25E0;
  *(_QWORD *)(v5 + 32) = sub_23C19BB78();
  sub_23C19BB78();
  sub_23C18ABC4();
  v6 = sub_23C19BB9C();
  swift_release();
  *(_QWORD *)(v5 + 40) = v6;
  sub_23C19BE48();
  MEMORY[0x2426182F8](v5);
  sub_23C19BD58();
  sub_23C19BD64();
  sub_23C19B674();
  sub_23C19BD10();
  sub_23C19B614();
  *(_QWORD *)a1 = v8;
  *(_OWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v12;
  *(_BYTE *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v14;
  *(_BYTE *)(a1 + 64) = v15;
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 80) = v17;
  *(_QWORD *)(a1 + 88) = v4;
  *(_WORD *)(a1 + 96) = 256;
  *(_QWORD *)(a1 + 104) = v18;
  *(_OWORD *)(a1 + 112) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v5;
  *(_BYTE *)(a1 + 152) = v22;
  *(_QWORD *)(a1 + 160) = v23;
  *(_BYTE *)(a1 + 168) = v24;
  result = *(double *)&v25;
  *(_OWORD *)(a1 + 176) = v25;
  return result;
}

double sub_23C18B08C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  _QWORD v10[2];
  double v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_23C178CA8(v2, (uint64_t)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  sub_23C18B164((uint64_t)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  v10[1] = 0x4024000000000000;
  sub_23C19BBFC();
  result = v11;
  v9 = v12;
  *a2 = v11;
  *((_QWORD *)a2 + 1) = v9;
  *((_QWORD *)a2 + 2) = sub_23C18B1A8;
  *((_QWORD *)a2 + 3) = v7;
  return result;
}

uint64_t sub_23C18B164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryPickerView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C18B1A8@<X0>(uint64_t (**a1)()@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LibraryPickerView() - 8) + 80);
  return sub_23C189560(v2 + ((v5 + 16) & ~v5), a1, a2);
}

uint64_t sub_23C18B1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LibraryPickerView() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C18B2C4()
{
  type metadata accessor for LibraryPickerView();
  return sub_23C1896C8();
}

double sub_23C18B328@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for LibraryPickerView();
  return sub_23C18ACC0(a1);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LibraryPickerView() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C18B43C()
{
  type metadata accessor for LibraryPickerView();
  return sub_23C18A520();
}

uint64_t sub_23C18B478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C189778(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_23C18B484()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B31C40;
  if (!qword_256B31C40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31C38);
    v2[0] = sub_23C18B4F0();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B31C40);
  }
  return result;
}

unint64_t sub_23C18B4F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B31C48;
  if (!qword_256B31C48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31C50);
    v2[0] = sub_23C15159C(&qword_256B31C58, &qword_256B31C60, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B31C48);
  }
  return result;
}

uint64_t sub_23C18B574()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for LibraryPickerView() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_23C19B6A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = sub_23C19B524();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v2, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_23C18B680@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for LibraryPickerView() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_23C19B6A4() - 8) + 80);
  return sub_23C189EEC(*a1, v2 + ((v6 + v7 + v8) & ~v8), a2);
}

unint64_t sub_23C18B700()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B31CA8;
  if (!qword_256B31CA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31CA0);
    v2[0] = sub_23C15159C(&qword_256B31CB0, &qword_256B31CB8, MEMORY[0x24BDF44C8]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B31CA8);
  }
  return result;
}

unint64_t sub_23C18B784()
{
  unint64_t result;

  result = qword_256B31CC0;
  if (!qword_256B31CC0)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryPage, &type metadata for LibraryPage);
    atomic_store(result, (unint64_t *)&qword_256B31CC0);
  }
  return result;
}

uint64_t sub_23C18B7C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for LibraryPickerView() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_23C19B6A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + v2 + 1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = sub_23C19B524();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v2, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_23C18B8D8()
{
  type metadata accessor for LibraryPickerView();
  sub_23C19B6A4();
  return sub_23C18A584();
}

uint64_t sub_23C18B940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C18A69C(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_23C18B94C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B31CE8;
  if (!qword_256B31CE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31CE0);
    v2[0] = sub_23C15159C(&qword_256B31CF0, &qword_256B31CF8, MEMORY[0x24BDF4750]);
    v2[1] = sub_23C15159C(&qword_256B309A0, &qword_256B309A8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B31CE8);
  }
  return result;
}

void sub_23C18B9E8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_23C18B9F0(_QWORD *a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  v4 = swift_release();
  result = a2(&v6, v4);
  *a1 = v6;
  return result;
}

uint64_t sub_23C18BA3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23C19B770();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23C18BA6C()
{
  return sub_23C19B77C();
}

uint64_t sub_23C18BA98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C19B74C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23C18BAC4()
{
  return sub_23C19B758();
}

uint64_t sub_23C18BAE8()
{
  return swift_deallocObject();
}

_BYTE *sub_23C18BAF8(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_23C18BB10@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23C19B770();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23C18BB40()
{
  return sub_23C19B77C();
}

uint64_t sub_23C18BB6C()
{
  return sub_23C18A634();
}

ValueMetadata *type metadata accessor for ContentTargetBoundsPreferenceKey()
{
  return &type metadata for ContentTargetBoundsPreferenceKey;
}

uint64_t destroy for LibraryPickerView.Layout()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LibraryPickerView.Layout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for LibraryPickerView.Layout(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LibraryPickerView.Layout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LibraryPickerView.Layout()
{
  return &type metadata for LibraryPickerView.Layout;
}

uint64_t sub_23C18BCD4()
{
  return sub_23C15159C(&qword_256B31D08, &qword_256B31D10, (uint64_t)&unk_23C19C8F8);
}

uint64_t LibraryEnvironment.init(navigateToLibraryGalleryPage:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryEnvironment()
{
  return &type metadata for LibraryEnvironment;
}

uint64_t static OfflineSectionDescriptor.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_23C19C088() & 1) != 0)
    return sub_23C18C298(v2, v3);
  else
    return 0;
}

uint64_t OfflineSectionDescriptor.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OfflineSectionDescriptor.items.getter()
{
  return swift_bridgeObjectRetain();
}

FitnessLibrary::OfflineSectionDescriptor __swiftcall OfflineSectionDescriptor.init(identifier:items:)(Swift::String identifier, Swift::OpaquePointer items)
{
  uint64_t v2;
  FitnessLibrary::OfflineSectionDescriptor result;

  *(Swift::String *)v2 = identifier;
  *(Swift::OpaquePointer *)(v2 + 16) = items;
  result.identifier = identifier;
  result.items = items;
  return result;
}

uint64_t sub_23C18BDB8()
{
  _BYTE *v0;

  if (*v0)
    return 0x736D657469;
  else
    return 0x696669746E656469;
}

uint64_t sub_23C18BDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C18CE20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C18BE18()
{
  sub_23C18C31C();
  return sub_23C19C0F4();
}

uint64_t sub_23C18BE40()
{
  sub_23C18C31C();
  return sub_23C19C100();
}

uint64_t OfflineSectionDescriptor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D18);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C18C31C();
  sub_23C19C0E8();
  v13 = 0;
  sub_23C19C058();
  if (!v2)
  {
    v11 = v9;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D28);
    sub_23C18C3A4(&qword_256B31D30, (uint64_t (*)(void))sub_23C18C360, MEMORY[0x24BEE12A0]);
    sub_23C19C07C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t OfflineSectionDescriptor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C18C31C();
  sub_23C19C0DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_23C19BFF8();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D28);
  v15 = 1;
  sub_23C18C3A4(&qword_256B31D48, (uint64_t (*)(void))sub_23C18C40C, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_23C19C01C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C18C1B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return OfflineSectionDescriptor.init(from:)(a1, a2);
}

uint64_t sub_23C18C1C8(_QWORD *a1)
{
  return OfflineSectionDescriptor.encode(to:)(a1);
}

uint64_t OfflineSectionDescriptor.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  result = sub_23C19C0B8();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23C19BE00();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23C18C298(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    for (i = (_QWORD *)(a2 + 40); ; i += 2)
    {
      v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_23C19C088() & 1) == 0)
        break;
      v3 += 2;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

unint64_t sub_23C18C31C()
{
  unint64_t result;

  result = qword_256B31D20;
  if (!qword_256B31D20)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A294C, &type metadata for OfflineSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31D20);
  }
  return result;
}

unint64_t sub_23C18C360()
{
  unint64_t result;

  result = qword_256B31D38;
  if (!qword_256B31D38)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineCanvasItemPlaceholder, &type metadata for OfflineCanvasItemPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B31D38);
  }
  return result;
}

uint64_t sub_23C18C3A4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31D28);
    v8 = a2();
    result = MEMORY[0x2426189D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C18C40C()
{
  unint64_t result;

  result = qword_256B31D50;
  if (!qword_256B31D50)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineCanvasItemPlaceholder, &type metadata for OfflineCanvasItemPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B31D50);
  }
  return result;
}

uint64_t sub_23C18C450(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  BOOL v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != a2[2])
    return 0;
  if (v2 && (_QWORD *)a1 != a2)
  {
    v3 = *(_QWORD *)(a1 + 48);
    v4 = *(_QWORD *)(a1 + 56);
    v5 = *(unsigned __int8 *)(a1 + 64);
    v7 = a2[6];
    v6 = a2[7];
    v8 = *(_QWORD *)(a1 + 32) == a2[4] && *(_QWORD *)(a1 + 40) == a2[5];
    if (!v8 && (sub_23C19C088() & 1) == 0)
      return 0;
    if (v4)
    {
      if (!v6)
        return 0;
      v9 = v3 == v7 && v4 == v6;
      if (!v9 && (sub_23C19C088() & 1) == 0)
        return 0;
LABEL_18:
      __asm { BR              X8 }
    }
    if (!v6)
      goto LABEL_18;
    return 0;
  }
  return 1;
}

uint64_t sub_23C18C740(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = 0;
    v15 = a1;
    v16 = a2;
    while (1)
    {
      v4 = *(_QWORD *)(a1 + v3 + 48);
      v5 = *(_QWORD *)(a1 + v3 + 56);
      v7 = *(_QWORD *)(a1 + v3 + 64);
      v6 = *(_QWORD *)(a1 + v3 + 72);
      v18 = *(_QWORD *)(a1 + v3 + 80);
      v9 = *(_QWORD *)(a2 + v3 + 48);
      v8 = *(_QWORD *)(a2 + v3 + 56);
      v10 = *(_QWORD *)(a2 + v3 + 64);
      v11 = *(_QWORD *)(a2 + v3 + 72);
      v12 = *(_QWORD **)(a2 + v3 + 80);
      v19 = v8;
      if (*(_QWORD *)(a1 + v3 + 32) != *(_QWORD *)(a2 + v3 + 32)
        || *(_QWORD *)(a1 + v3 + 40) != *(_QWORD *)(a2 + v3 + 40))
      {
        v13 = sub_23C19C088();
        v8 = v19;
        if ((v13 & 1) == 0)
          break;
      }
      if (v5)
      {
        if (!v8 || (v4 != v9 || v5 != v8) && (sub_23C19C088() & 1) == 0)
          return 0;
      }
      else if (v8)
      {
        return 0;
      }
      if (v6)
      {
        if (!v11 || (v7 != v10 || v6 != v11) && (sub_23C19C088() & 1) == 0)
          return 0;
      }
      else if (v11)
      {
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = sub_23C18C450(v18, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
        return 0;
      v3 += 56;
      --v2;
      a1 = v15;
      a2 = v16;
      if (!v2)
        return 1;
    }
  }
  return 0;
}

uint64_t OfflineSectionDescriptor.hashValue.getter()
{
  sub_23C19C0AC();
  OfflineSectionDescriptor.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C18C98C()
{
  sub_23C19C0AC();
  OfflineSectionDescriptor.hash(into:)();
  return sub_23C19C0D0();
}

uint64_t sub_23C18C9E0()
{
  sub_23C19C0AC();
  OfflineSectionDescriptor.hash(into:)();
  return sub_23C19C0D0();
}

unint64_t sub_23C18CA30()
{
  unint64_t result;

  result = qword_256B31D58;
  if (!qword_256B31D58)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for OfflineSectionDescriptor, &type metadata for OfflineSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_256B31D58);
  }
  return result;
}

uint64_t sub_23C18CA74(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_23C19C088() & 1) != 0)
    return sub_23C18C298(v2, v3);
  else
    return 0;
}

uint64_t destroy for OfflineSectionDescriptor()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14FitnessLibrary24OfflineSectionDescriptorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for OfflineSectionDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OfflineSectionDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineSectionDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineSectionDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineSectionDescriptor()
{
  return &type metadata for OfflineSectionDescriptor;
}

uint64_t storeEnumTagSinglePayload for OfflineSectionDescriptor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C18CCC8 + 4 * byte_23C1A27A1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C18CCFC + 4 * byte_23C1A279C[v4]))();
}

uint64_t sub_23C18CCFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C18CD04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C18CD0CLL);
  return result;
}

uint64_t sub_23C18CD18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C18CD20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C18CD24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C18CD2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineSectionDescriptor.CodingKeys()
{
  return &type metadata for OfflineSectionDescriptor.CodingKeys;
}

unint64_t sub_23C18CD4C()
{
  unint64_t result;

  result = qword_256B31D60;
  if (!qword_256B31D60)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2924, &type metadata for OfflineSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31D60);
  }
  return result;
}

unint64_t sub_23C18CD94()
{
  unint64_t result;

  result = qword_256B31D68;
  if (!qword_256B31D68)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2894, &type metadata for OfflineSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31D68);
  }
  return result;
}

unint64_t sub_23C18CDDC()
{
  unint64_t result;

  result = qword_256B31D70;
  if (!qword_256B31D70)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A28BC, &type metadata for OfflineSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31D70);
  }
  return result;
}

uint64_t sub_23C18CE20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t LibraryPageCountView.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  id v7;
  id v9;
  uint64_t v10;

  type metadata accessor for LibraryPageCountView();
  sub_23C18D06C();
  sub_23C19B5F0();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)a3 = sub_23C1503C4;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = 0;
  v7 = objc_allocWithZone(MEMORY[0x24BDD16F0]);
  swift_retain();
  v9 = objc_msgSend(v7, sel_init);
  sub_23C18D0D4();
  sub_23C19BBFC();
  *(_QWORD *)(a3 + 24) = 0x4039000000000000;
  *(_QWORD *)(a3 + 32) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D88);
  sub_23C19BC08();
  objc_msgSend(v9, sel_setMaximumFractionDigits_, 0);

  return swift_release();
}

uint64_t type metadata accessor for LibraryPageCountView()
{
  uint64_t result;

  result = qword_256B31E48;
  if (!qword_256B31E48)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C18D06C()
{
  unint64_t result;

  result = qword_256B31D78;
  if (!qword_256B31D78)
  {
    result = MEMORY[0x2426189D0](MEMORY[0x24BEE50B8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256B31D78);
  }
  return result;
}

uint64_t sub_23C18D0B0()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23C18D0D4()
{
  unint64_t result;

  result = qword_256B31D80;
  if (!qword_256B31D80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256B31D80);
  }
  return result;
}

uint64_t LibraryPageCountView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (**v18)();
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v28 = a1;
  v3 = type metadata accessor for LibraryPageCountView();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D90);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D98);
  MEMORY[0x24BDAC7A8](v25);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DA0);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (uint64_t)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = sub_23C19B7A0();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B31DA8) + 44);
  if (qword_256B2FD00 != -1)
    swift_once();
  v24[1] = &v9[v13];
  v32 = qword_256B404D8;
  sub_23C18D818(v2, (uint64_t)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(unsigned __int8 *)(v4 + 80);
  v15 = (v14 + 16) & ~v14;
  v29 = v14 | 7;
  v30 = v15 + v5;
  v16 = swift_allocObject();
  sub_23C18D860((uint64_t)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31730);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB8);
  sub_23C15159C(&qword_256B31740, &qword_256B31730, MEMORY[0x24BEE12D8]);
  sub_23C15159C(&qword_256B31DC0, &qword_256B31DB8, MEMORY[0x24BDF5428]);
  sub_23C18B784();
  sub_23C19BCD4();
  sub_23C18D818(v2, (uint64_t)v6);
  v17 = swift_allocObject();
  sub_23C18D860((uint64_t)v6, v17 + v15);
  sub_23C15CF54((uint64_t)v9, (uint64_t)v11, &qword_256B31D90);
  v18 = (uint64_t (**)())&v11[*(int *)(v25 + 36)];
  *v18 = sub_23C18DCA8;
  v18[1] = (uint64_t (*)())v17;
  v18[2] = 0;
  v18[3] = 0;
  sub_23C15FEA8((uint64_t)v9, &qword_256B31D90);
  sub_23C18D818(v2, (uint64_t)v6);
  v19 = swift_allocObject();
  sub_23C18D860((uint64_t)v6, v19 + v15);
  v20 = v27;
  sub_23C15CF54((uint64_t)v11, v27, &qword_256B31D98);
  v21 = (_QWORD *)(v20 + *(int *)(v26 + 36));
  *v21 = 0;
  v21[1] = 0;
  v21[2] = sub_23C18DD54;
  v21[3] = v19;
  sub_23C15FEA8((uint64_t)v11, &qword_256B31D98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DC8);
  sub_23C15159C(&qword_256B31DD0, &qword_256B31DC8, MEMORY[0x24BE2B5E8]);
  sub_23C19B5D8();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v31 = v32;
  sub_23C18D818(v2, (uint64_t)v6);
  v22 = swift_allocObject();
  sub_23C18D860((uint64_t)v6, v22 + v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30E40);
  sub_23C18F748(&qword_256B31DD8, &qword_256B31DA0, (uint64_t (*)(void))sub_23C18DE54, MEMORY[0x24BDF0910]);
  sub_23C15159C(&qword_256B30E68, &qword_256B30E40, MEMORY[0x24BEE1710]);
  sub_23C19BB48();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23C15FEA8(v20, &qword_256B31DA0);
}

uint64_t sub_23C18D5B4@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;

  v36 = a2;
  v3 = sub_23C19BCBC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31E90);
  v7 = MEMORY[0x24BDAC7A8](v35);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v33 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31E98);
  v34 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  sub_23C18D8F0(*a1, (uint64_t)&v33 - v16);
  sub_23C19BCB0();
  LOBYTE(a1) = sub_23C19B8F0();
  sub_23C19B584();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
  v26 = &v9[*(int *)(v35 + 36)];
  *v26 = (char)a1;
  *((_QWORD *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_23C15D3EC((uint64_t)v9, (uint64_t)v11, &qword_256B31E90);
  v27 = v34;
  v28 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v28(v15, v17, v12);
  sub_23C15CF54((uint64_t)v11, (uint64_t)v9, &qword_256B31E90);
  v29 = v36;
  v28(v36, v15, v12);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31EA0);
  sub_23C15CF54((uint64_t)v9, (uint64_t)&v29[*(int *)(v30 + 48)], &qword_256B31E90);
  sub_23C15FEA8((uint64_t)v11, &qword_256B31E90);
  v31 = *(void (**)(char *, uint64_t))(v27 + 8);
  v31(v17, v12);
  sub_23C15FEA8((uint64_t)v9, &qword_256B31E90);
  return ((uint64_t (*)(char *, uint64_t))v31)(v15, v12);
}

uint64_t sub_23C18D818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryPageCountView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C18D860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LibraryPageCountView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C18D8A4@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  type metadata accessor for LibraryPageCountView();
  return sub_23C18D5B4(a1, a2);
}

uint64_t sub_23C18D8F0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  ValueMetadata *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;

  v3 = v2;
  v35 = a1;
  v43 = a2;
  v4 = sub_23C19BB60();
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for LibraryPageCountView();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31EA8);
  v38 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v34[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31EB0);
  v15 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  v40 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v34[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31EB8);
  v19 = *(_QWORD *)(v18 - 8);
  v41 = v18;
  v42 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v34[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23C18D818(v3, (uint64_t)v10);
  v22 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = v22 + v9;
  v24 = swift_allocObject();
  sub_23C18D860((uint64_t)v10, v24 + v22);
  v25 = v35;
  *(_BYTE *)(v24 + v23) = v35;
  v44 = v3;
  v45 = v25;
  LOBYTE(v23) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31EC0);
  sub_23C18F51C();
  sub_23C19BC38();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v36 + 104))(v6, *MEMORY[0x24BDF3C28], v37);
  v46 = MEMORY[0x2426181A8](v6, 0.22745098, 0.223529412, 0.231372549, 1.0);
  v26 = sub_23C15159C(&qword_256B31EF0, &qword_256B31EA8, MEMORY[0x24BDF43B0]);
  v27 = sub_23C18F5B8();
  sub_23C19BA34();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v13, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B0);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_23C1A19D0;
  v46 = 0;
  v47 = (ValueMetadata *)0xE000000000000000;
  v50 = v23;
  sub_23C19BF68();
  v29 = v47;
  *(_QWORD *)(v28 + 32) = v46;
  *(_QWORD *)(v28 + 40) = v29;
  v46 = v11;
  v47 = &type metadata for PageCountButtonStyle;
  v48 = v26;
  v49 = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v31 = v39;
  sub_23C19B9D4();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v17, v31);
  v46 = v31;
  v47 = (ValueMetadata *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v32 = v41;
  sub_23C19B9C8();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v42 + 8))(v21, v32);
}

uint64_t sub_23C18DCA8()
{
  return sub_23C18DE14();
}

uint64_t sub_23C18DCB4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DC8);
  sub_23C15159C(&qword_256B31DD0, &qword_256B31DC8, MEMORY[0x24BE2B5E8]);
  sub_23C19B5D8();
  sub_23C19BDA0();
  return swift_release();
}

uint64_t sub_23C18DD54()
{
  return sub_23C18DE14();
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for LibraryPageCountView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_23C151164();

  swift_release();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_23C18DE08()
{
  return sub_23C18DE14();
}

uint64_t sub_23C18DE14()
{
  type metadata accessor for LibraryPageCountView();
  return sub_23C18DCB4();
}

unint64_t sub_23C18DE54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B31DE0;
  if (!qword_256B31DE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31D98);
    v2[0] = sub_23C15159C(&qword_256B31DE8, &qword_256B31D90, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B31DE0);
  }
  return result;
}

uint64_t sub_23C18DED8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C18DEE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  void *v18;

  v15[2] = a1;
  v2 = sub_23C19B524();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 32);
  v16 = *(_QWORD *)(v1 + 24);
  v17 = v6;
  v15[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31D88);
  sub_23C19BC08();
  v7 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DC8);
  sub_23C15159C(&qword_256B31DD0, &qword_256B31DC8, MEMORY[0x24BE2B5E8]);
  sub_23C19B5D8();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v8 = (void *)sub_23C19B50C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v7, sel_setLocale_, v8);

  v9 = *(_QWORD *)(v1 + 32);
  v16 = *(_QWORD *)(v1 + 24);
  v17 = v9;
  sub_23C19BC08();
  v10 = v18;
  v11 = (void *)sub_23C19BED8();
  v12 = objc_msgSend(v10, sel_stringFromNumber_, v11);

  if (!v12)
    return 0;
  v13 = sub_23C19BDDC();

  return v13;
}

uint64_t sub_23C18E0BC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DC8);
  sub_23C15159C(&qword_256B31DD0, &qword_256B31DC8, MEMORY[0x24BE2B5E8]);
  sub_23C19B5D8();
  sub_23C19BDA0();
  return swift_release();
}

uint64_t sub_23C18E158@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31ED8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DC8);
  sub_23C15159C(&qword_256B31DD0, &qword_256B31DC8, MEMORY[0x24BE2B5E8]);
  sub_23C19B5D8();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v9 = v16;
  if (*(_QWORD *)(v16 + 16) && (sub_23C18F5FC(a2), (v11 & 1) != 0))
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
  else
    v12 = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)v8 = sub_23C19B794();
  *((_QWORD *)v8 + 1) = 0x4014000000000000;
  v8[16] = 0;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F00);
  sub_23C18E2F4(a2, a1, v12, (uint64_t)&v8[*(int *)(v13 + 44)]);
  sub_23C15CF54((uint64_t)v8, a3, &qword_256B31ED8);
  *(_BYTE *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B31EC0) + 36)) = 0;
  return sub_23C15FEA8((uint64_t)v8, &qword_256B31ED8);
}

uint64_t sub_23C18E2F4@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;

  v68 = a3;
  v70 = a4;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F08);
  v71 = *(_QWORD *)(v73 - 8);
  v6 = MEMORY[0x24BDAC7A8](v73);
  v72 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v69 = (char *)&v61 - v8;
  v67 = sub_23C19BB60();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v65 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F10);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F18);
  MEMORY[0x24BDAC7A8](v62);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F20);
  v16 = MEMORY[0x24BDAC7A8](v64);
  v74 = (uint64_t)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v61 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v61 - v21;
  v77 = a1;
  v63 = a2;
  v78 = a2;
  v75 = a1;
  v76 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30998);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F28);
  sub_23C165390();
  sub_23C18F748(&qword_256B31F30, &qword_256B31F28, (uint64_t (*)(void))sub_23C18F7B0, MEMORY[0x24BDEBEE0]);
  sub_23C19BBF0();
  v23 = sub_23C19B920();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v13, v10);
  v25 = (uint64_t *)&v15[*(int *)(v62 + 36)];
  *v25 = KeyPath;
  v25[1] = v23;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v26 = v65;
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, *MEMORY[0x24BDF3C28], v67);
  v27 = MEMORY[0x2426181A8](v26, 0.650980392, 1.0, 0.0, 1.0);
  sub_23C15CF54((uint64_t)v15, (uint64_t)v20, &qword_256B31F18);
  *(_QWORD *)&v20[*(int *)(v64 + 36)] = v27;
  sub_23C15FEA8((uint64_t)v15, &qword_256B31F18);
  sub_23C15D3EC((uint64_t)v20, (uint64_t)v22, &qword_256B31F20);
  v28 = sub_23C18DEE8(v68);
  if (v29)
  {
    v79 = v28;
    v80 = v29;
    v79 = sub_23C19BE24();
    v80 = v30;
    sub_23C165284();
    v31 = sub_23C19B9B0();
    v33 = v32;
    v35 = v34 & 1;
    v79 = sub_23C19BB6C();
    v68 = sub_23C19B9A4();
    v67 = v36;
    v66 = v37;
    v39 = v38 & 1;
    sub_23C165534(v31, v33, v35);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v68 = 0;
    v67 = 0;
    v39 = 0;
    v66 = 0;
  }
  v40 = sub_23C19BBCC();
  v41 = sub_23C19BB6C();
  v42 = sub_23C19B80C();
  v43 = sub_23C19B974();
  v44 = swift_getKeyPath();
  v79 = v40;
  v80 = v41;
  v81 = v42;
  v82 = v44;
  v83 = v43;
  sub_23C19B92C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F58);
  sub_23C18FB84();
  v45 = v69;
  sub_23C19BA04();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v61 = v22;
  v46 = v74;
  sub_23C15CF54((uint64_t)v22, v74, &qword_256B31F20);
  v48 = v71;
  v47 = v72;
  v49 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
  v50 = v73;
  v49(v72, v45, v73);
  v51 = v70;
  sub_23C15CF54(v46, v70, &qword_256B31F20);
  v52 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B31F88);
  v53 = v51 + v52[12];
  *(_QWORD *)v53 = 0;
  *(_BYTE *)(v53 + 8) = 1;
  v54 = (_QWORD *)(v51 + v52[16]);
  v55 = v68;
  v56 = v67;
  *v54 = v68;
  v54[1] = v56;
  v57 = v39;
  v54[2] = v39;
  v58 = v66;
  v54[3] = v66;
  v49((char *)(v51 + v52[20]), v47, v50);
  sub_23C18FC8C(v55, v56, v57, v58);
  v59 = *(void (**)(char *, uint64_t))(v48 + 8);
  v59(v45, v50);
  sub_23C15FEA8((uint64_t)v61, &qword_256B31F20);
  v59(v47, v50);
  sub_23C18FCBC(v55, v56, v57, v58);
  return sub_23C15FEA8(v74, &qword_256B31F20);
}

uint64_t sub_23C18E940@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];

  v4 = sub_23C19B524();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DC8);
  sub_23C15159C(&qword_256B31DD0, &qword_256B31DC8, MEMORY[0x24BE2B5E8]);
  sub_23C19B5D8();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  LibraryPage.title(locale:)((uint64_t)v7, a1);
  v9 = v8;
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v19[0] = v9;
  v19[1] = v11;
  sub_23C165284();
  v12 = sub_23C19B9B0();
  v14 = v13;
  LOBYTE(v11) = v15;
  v17 = v16;
  result = swift_getKeyPath();
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v11 & 1;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = result;
  *(_QWORD *)(a2 + 40) = 2;
  *(_BYTE *)(a2 + 48) = 0;
  return result;
}

void sub_23C18EAB4(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F50);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23C19BBE4();
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F40);
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F28);
  MEMORY[0x24BDAC7A8](v5);
  __asm { BR              X10 }
}

uint64_t sub_23C18EBFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  _OWORD *v11;
  __int128 v12;

  v9 = sub_23C19BBD8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BDF40B8], v4);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))((char *)v3 + *(int *)(v6 + 28), v5, v4);
  *v3 = KeyPath;
  sub_23C15CF54((uint64_t)v3, (uint64_t)v0 + *(int *)(v7 + 36), &qword_256B31F50);
  *v0 = v9;
  swift_retain();
  sub_23C15FEA8((uint64_t)v3, &qword_256B31F50);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v4);
  swift_release();
  type metadata accessor for LibraryPageCountView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
  sub_23C19B5FC();
  sub_23C19BD10();
  sub_23C19B614();
  sub_23C15CF54((uint64_t)v0, v1, &qword_256B31F40);
  v11 = (_OWORD *)(v1 + *(int *)(*(_QWORD *)(v8 - 152) + 36));
  v12 = *(_OWORD *)(v8 - 112);
  *v11 = *(_OWORD *)(v8 - 128);
  v11[1] = v12;
  v11[2] = *(_OWORD *)(v8 - 96);
  sub_23C15FEA8((uint64_t)v0, &qword_256B31F40);
  return sub_23C15D3EC(v1, *(_QWORD *)(v8 - 136), &qword_256B31F28);
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryPageCountView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = *((_BYTE *)a2 + 16);
    sub_23C1511B4();
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = (void *)a2[3];
    v11 = a2[4];
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    v12 = *(int *)(a3 + 24);
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = v10;
    swift_retain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
  }
  return a1;
}

uint64_t destroy for LibraryPageCountView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23C151164();

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for LibraryPageCountView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = (void *)a2[3];
  v10 = a2[4];
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = v9;
  swift_retain();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
  return a1;
}

uint64_t assignWithCopy for LibraryPageCountView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_23C1511B4();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_23C151164();
  v9 = (void *)a2[3];
  v10 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v11 = v9;

  *(_QWORD *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = (uint64_t)a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t initializeWithTake for LibraryPageCountView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for LibraryPageCountView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C151164();
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPageCountView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C18F1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C18F23C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_23C18F2B4()
{
  unint64_t v0;

  sub_23C18F330();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23C18F330()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B31E58[0])
  {
    sub_23C18D06C();
    v0 = sub_23C19B608();
    if (!v1)
      atomic_store(v0, qword_256B31E58);
  }
}

uint64_t sub_23C18F388()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31DA0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B30E40);
  sub_23C18F748(&qword_256B31DD8, &qword_256B31DA0, (uint64_t (*)(void))sub_23C18DE54, MEMORY[0x24BDF0910]);
  sub_23C15159C(&qword_256B30E68, &qword_256B30E40, MEMORY[0x24BEE1710]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C18F430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for LibraryPageCountView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_23C151164();

  swift_release();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31DB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_23C18F4D8()
{
  type metadata accessor for LibraryPageCountView();
  return sub_23C18E0BC();
}

uint64_t sub_23C18F510@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C18E158(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

unint64_t sub_23C18F51C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B31EC8;
  if (!qword_256B31EC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31EC0);
    v2[0] = sub_23C15159C(&qword_256B31ED0, &qword_256B31ED8, MEMORY[0x24BDF4498]);
    v2[1] = sub_23C15159C(&qword_256B31EE0, &qword_256B31EE8, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B31EC8);
  }
  return result;
}

unint64_t sub_23C18F5B8()
{
  unint64_t result;

  result = qword_256B31EF8;
  if (!qword_256B31EF8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A03C8, &type metadata for PageCountButtonStyle);
    atomic_store(result, (unint64_t *)&qword_256B31EF8);
  }
  return result;
}

void sub_23C18F5FC(char a1)
{
  sub_23C19C0AC();
  __asm { BR              X10 }
}

uint64_t sub_23C18F654()
{
  uint64_t v0;
  uint64_t v1;

  sub_23C19BE00();
  swift_bridgeObjectRelease();
  v1 = sub_23C19C0D0();
  return sub_23C18F834(v0, v1);
}

uint64_t sub_23C18F730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C18E940(*(_BYTE *)(v1 + 16), a1);
}

void sub_23C18F73C()
{
  uint64_t v0;

  sub_23C18EAB4(*(_BYTE *)(v0 + 16));
}

uint64_t sub_23C18F748(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C18F7B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256B31F38;
  if (!qword_256B31F38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31F40);
    v2 = sub_23C15159C(&qword_256B31F48, &qword_256B31F50, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B31F38);
  }
  return result;
}

uint64_t sub_23C18F834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_23C18FAE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C19B734();
  *a1 = result;
  return result;
}

uint64_t sub_23C18FB0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C19B734();
  *a1 = result;
  return result;
}

uint64_t sub_23C18FB34()
{
  swift_retain();
  return sub_23C19B740();
}

uint64_t sub_23C18FB5C()
{
  swift_retain();
  return sub_23C19B740();
}

unint64_t sub_23C18FB84()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B31F60;
  if (!qword_256B31F60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31F58);
    v2[0] = sub_23C18FC08();
    v2[1] = sub_23C15159C(&qword_256B309C0, &qword_256B309C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B31F60);
  }
  return result;
}

unint64_t sub_23C18FC08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256B31F68;
  if (!qword_256B31F68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31F70);
    v2 = sub_23C15159C(&qword_256B31F78, &qword_256B31F80, MEMORY[0x24BDF0978]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B31F68);
  }
  return result;
}

uint64_t sub_23C18FC8C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C1652FC(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23C18FCBC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C165534(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23C18FCEC()
{
  return sub_23C19B6E0();
}

uint64_t sub_23C18FD0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_23C19BBE4();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23C19B6EC();
}

uint64_t sub_23C18FD98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23C18FDC0 + 4 * byte_23C1A2B90[*v0]))(1701602409, 0xE400000000000000);
}

uint64_t sub_23C18FDC0()
{
  return 0x676E696863746566;
}

uint64_t sub_23C18FDD8()
{
  return 0x64656863746566;
}

uint64_t sub_23C18FDF0()
{
  return 0x6968736572666572;
}

uint64_t sub_23C18FE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C1923DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C18FE30()
{
  sub_23C1914FC();
  return sub_23C19C0F4();
}

uint64_t sub_23C18FE58()
{
  sub_23C1914FC();
  return sub_23C19C100();
}

uint64_t sub_23C18FE80()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74756F79616CLL;
  if (*v0 != 1)
    v1 = 0x656C61636F6CLL;
  if (*v0)
    return v1;
  else
    return 0x7470697263736564;
}

uint64_t sub_23C18FEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C192590(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C18FF00()
{
  sub_23C1915C8();
  return sub_23C19C0F4();
}

uint64_t sub_23C18FF28()
{
  sub_23C1915C8();
  return sub_23C19C100();
}

uint64_t sub_23C18FF50()
{
  sub_23C19160C();
  return sub_23C19C0F4();
}

uint64_t sub_23C18FF78()
{
  sub_23C19160C();
  return sub_23C19C100();
}

uint64_t sub_23C18FFA0()
{
  sub_23C191650();
  return sub_23C19C0F4();
}

uint64_t sub_23C18FFC8()
{
  sub_23C191650();
  return sub_23C19C100();
}

uint64_t sub_23C18FFF0()
{
  sub_23C191540();
  return sub_23C19C0F4();
}

uint64_t sub_23C190018()
{
  sub_23C191540();
  return sub_23C19C100();
}

void LibraryCanvasContentLoadState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t State;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F90);
  v16[2] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v22 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31F98);
  v16[1] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v20 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23C19B524();
  v5 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  v27 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v25 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v16 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31FA0);
  v18 = *(_QWORD *)(v9 - 8);
  v19 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31FA8);
  MEMORY[0x24BDAC7A8](v17);
  State = type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x24BDAC7A8](State);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31FB0);
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C1914FC();
  v29 = v14;
  sub_23C19C0E8();
  sub_23C180468(v31, (uint64_t)v12);
  v15 = (char *)sub_23C1902AC + 4 * byte_23C1A2B94[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C1902AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *v0;
  *(_DWORD *)(v1 - 152) = *((unsigned __int8 *)v0 + 8);
  *(_DWORD *)(v1 - 168) = *((unsigned __int8 *)v0 + 9);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18);
  v4 = *(_QWORD *)(v1 - 144);
  v5 = *(_QWORD *)(v1 - 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 32))(v5, (uint64_t)v0 + *(int *)(v3 + 64), v4);
  *(_BYTE *)(v1 - 72) = 2;
  sub_23C1915C8();
  v6 = *(_QWORD *)(v1 - 192);
  v8 = *(_QWORD *)(v1 - 120);
  v7 = *(_QWORD *)(v1 - 112);
  sub_23C19C034();
  *(_QWORD *)(v1 - 96) = v2;
  *(_QWORD *)(v1 - 72) = v2;
  *(_BYTE *)(v1 - 81) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B31FC8);
  sub_23C191694(&qword_256B31FD0, (uint64_t (*)(void))sub_23C191584, MEMORY[0x24BEE12A0]);
  v9 = *(_QWORD *)(v1 - 184);
  v10 = *(_QWORD *)(v1 - 104);
  sub_23C19C07C();
  if (v10)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 232) + 8))(v6, v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v5, v4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8))(v8, v7);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_BYTE *)(v1 - 72) = *(_DWORD *)(v1 - 152);
    *(_BYTE *)(v1 - 71) = *(_DWORD *)(v1 - 168);
    *(_BYTE *)(v1 - 81) = 1;
    sub_23C168978();
    sub_23C19C07C();
    *(_BYTE *)(v1 - 72) = 2;
    sub_23C14DF00(&qword_256B2FD30, MEMORY[0x24BDCEEC8]);
    v12 = *(_QWORD *)(v1 - 160);
    sub_23C19C07C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 232) + 8))(v6, v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v12, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8))(v8, v7);
  }
}

uint64_t LibraryCanvasContentLoadState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t State;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  _QWORD v30[8];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;

  v33 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B31FF8);
  v30[3] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32000);
  v39 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v38 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32008);
  v30[6] = *(_QWORD *)(v5 - 8);
  v30[7] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32010);
  v30[4] = *(_QWORD *)(v7 - 8);
  v30[5] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v34 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32018);
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for LibraryCanvasContentLoadState();
  v13 = MEMORY[0x24BDAC7A8](State);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v30 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v30 - v19;
  v21 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_23C1914FC();
  v22 = v41;
  sub_23C19C0DC();
  if (!v22)
  {
    v30[1] = v18;
    v30[2] = v15;
    v41 = v20;
    v23 = State;
    v24 = sub_23C19C028();
    v25 = v9;
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X10 }
    v26 = sub_23C19BF50();
    swift_allocError();
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v28 = v23;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t sub_23C191044@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryCanvasContentLoadState.init(from:)(a1, a2);
}

void sub_23C191058(_QWORD *a1)
{
  LibraryCanvasContentLoadState.encode(to:)(a1);
}

void _s14FitnessLibrary0B22CanvasContentLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t State;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[6];

  v4 = sub_23C19B524();
  v5 = *(_QWORD *)(v4 - 8);
  v17[4] = v4;
  v17[5] = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v17[3] = (char *)v17 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v9);
  State = type metadata accessor for LibraryCanvasContentLoadState();
  v11 = MEMORY[0x24BDAC7A8](State);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256B32140);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C180468(a1, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23C180468(a2, (uint64_t)v15);
  v16 = (char *)sub_23C1911FC + 4 * byte_23C1A2B9C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C1911FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(uint64_t, uint64_t);
  void (*v18)(uint64_t, uint64_t);

  sub_23C180468(v0, v1);
  v6 = *(_QWORD *)v1;
  *(_DWORD *)(v5 - 104) = *(unsigned __int8 *)(v1 + 8);
  v7 = *(unsigned __int8 *)(v1 + 9);
  v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
  v9 = v1 + v8;
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 88) + 8))(v1 + v8, *(_QWORD *)(v5 - 96));
    swift_bridgeObjectRelease();
    sub_23C1926EC(v0);
LABEL_8:
    v16 = 0;
    return v16 & 1;
  }
  *(_DWORD *)(v5 - 112) = v7;
  v10 = *(_QWORD *)v4;
  *(_DWORD *)(v5 - 108) = *(unsigned __int8 *)(v4 + 8);
  v11 = v4 + v8;
  v12 = *(_QWORD *)(v5 - 88);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  v14 = v9;
  v15 = *(_QWORD *)(v5 - 96);
  v13(v2, v14, v15);
  v13(v3, v11, v15);
  LOBYTE(v11) = sub_23C18C740(v6, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0 || *(_DWORD *)(v5 - 104) != *(_DWORD *)(v5 - 108) || (sub_23C19B548() & 1) == 0)
  {
    v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v18(v3, v15);
    v18(v2, v15);
    sub_23C191B38(v0);
    goto LABEL_8;
  }
  v16 = MEMORY[0x242617B18](v2, v3);
  v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v17(v3, v15);
  v17(v2, v15);
  sub_23C191B38(v0);
  return v16 & 1;
}

uint64_t type metadata accessor for LibraryCanvasContentLoadState()
{
  uint64_t result;

  result = qword_256B320A0;
  if (!qword_256B320A0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C1914FC()
{
  unint64_t result;

  result = qword_256B31FB8;
  if (!qword_256B31FB8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A30F0, &type metadata for LibraryCanvasContentLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31FB8);
  }
  return result;
}

unint64_t sub_23C191540()
{
  unint64_t result;

  result = qword_256B31FC0;
  if (!qword_256B31FC0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A30A0, &type metadata for LibraryCanvasContentLoadState.RefreshingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31FC0);
  }
  return result;
}

unint64_t sub_23C191584()
{
  unint64_t result;

  result = qword_256B31FD8;
  if (!qword_256B31FD8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasSectionDescriptor, &type metadata for LibraryCanvasSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_256B31FD8);
  }
  return result;
}

unint64_t sub_23C1915C8()
{
  unint64_t result;

  result = qword_256B31FE0;
  if (!qword_256B31FE0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3050, &type metadata for LibraryCanvasContentLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31FE0);
  }
  return result;
}

unint64_t sub_23C19160C()
{
  unint64_t result;

  result = qword_256B31FE8;
  if (!qword_256B31FE8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3000, &type metadata for LibraryCanvasContentLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31FE8);
  }
  return result;
}

unint64_t sub_23C191650()
{
  unint64_t result;

  result = qword_256B31FF0;
  if (!qword_256B31FF0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2FB0, &type metadata for LibraryCanvasContentLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B31FF0);
  }
  return result;
}

uint64_t sub_23C191694(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B31FC8);
    v8 = a2();
    result = MEMORY[0x2426189D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C1916FC()
{
  unint64_t result;

  result = qword_256B32028;
  if (!qword_256B32028)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasSectionDescriptor, &type metadata for LibraryCanvasSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_256B32028);
  }
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (_WORD *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23C19B524();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LibraryCanvasContentLoadState(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
    v4 = sub_23C19B524();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_WORD *initializeWithCopy for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23C19B524();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_WORD *assignWithCopy for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23C191B38((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23C19B524();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23C191B38(uint64_t a1)
{
  uint64_t State;

  State = type metadata accessor for LibraryCanvasContentLoadState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 8))(a1, State);
  return a1;
}

_WORD *initializeWithTake for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[4] = a2[4];
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23C19B524();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_WORD *assignWithTake for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23C191B38((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[4] = a2[4];
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23C19B524();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23C191DAC()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t *v5;

  result = sub_23C19B524();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v4 = &v3;
    swift_getTupleTypeLayout3();
    v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentLoadState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C191EB4 + 4 * byte_23C1A2BA5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C191EE8 + 4 * byte_23C1A2BA0[v4]))();
}

uint64_t sub_23C191EE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C191EF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C191EF8);
  return result;
}

uint64_t sub_23C191F04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C191F0CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C191F10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C191F18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.CodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.IdleCodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.FetchingCodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.FetchingCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.FetchedCodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.FetchedCodingKeys;
}

uint64_t _s14FitnessLibrary29LibraryCanvasContentLoadStateO17FetchedCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C191FB4 + 4 * byte_23C1A2BAF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C191FE8 + 4 * byte_23C1A2BAA[v4]))();
}

uint64_t sub_23C191FE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C191FF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C191FF8);
  return result;
}

uint64_t sub_23C192004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C19200CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C192010(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C192018(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.RefreshingCodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.RefreshingCodingKeys;
}

unint64_t sub_23C192038()
{
  unint64_t result;

  result = qword_256B320D8;
  if (!qword_256B320D8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2D78, &type metadata for LibraryCanvasContentLoadState.RefreshingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B320D8);
  }
  return result;
}

unint64_t sub_23C192080()
{
  unint64_t result;

  result = qword_256B320E0;
  if (!qword_256B320E0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2E30, &type metadata for LibraryCanvasContentLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B320E0);
  }
  return result;
}

unint64_t sub_23C1920C8()
{
  unint64_t result;

  result = qword_256B320E8;
  if (!qword_256B320E8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2F88, &type metadata for LibraryCanvasContentLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B320E8);
  }
  return result;
}

unint64_t sub_23C192110()
{
  unint64_t result;

  result = qword_256B320F0;
  if (!qword_256B320F0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2EA8, &type metadata for LibraryCanvasContentLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B320F0);
  }
  return result;
}

unint64_t sub_23C192158()
{
  unint64_t result;

  result = qword_256B320F8;
  if (!qword_256B320F8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2ED0, &type metadata for LibraryCanvasContentLoadState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B320F8);
  }
  return result;
}

unint64_t sub_23C1921A0()
{
  unint64_t result;

  result = qword_256B32100;
  if (!qword_256B32100)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2E58, &type metadata for LibraryCanvasContentLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32100);
  }
  return result;
}

unint64_t sub_23C1921E8()
{
  unint64_t result;

  result = qword_256B32108;
  if (!qword_256B32108)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2E80, &type metadata for LibraryCanvasContentLoadState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32108);
  }
  return result;
}

unint64_t sub_23C192230()
{
  unint64_t result;

  result = qword_256B32110;
  if (!qword_256B32110)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2DA0, &type metadata for LibraryCanvasContentLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32110);
  }
  return result;
}

unint64_t sub_23C192278()
{
  unint64_t result;

  result = qword_256B32118;
  if (!qword_256B32118)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2DC8, &type metadata for LibraryCanvasContentLoadState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32118);
  }
  return result;
}

unint64_t sub_23C1922C0()
{
  unint64_t result;

  result = qword_256B32120;
  if (!qword_256B32120)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2CE8, &type metadata for LibraryCanvasContentLoadState.RefreshingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32120);
  }
  return result;
}

unint64_t sub_23C192308()
{
  unint64_t result;

  result = qword_256B32128;
  if (!qword_256B32128)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2D10, &type metadata for LibraryCanvasContentLoadState.RefreshingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32128);
  }
  return result;
}

unint64_t sub_23C192350()
{
  unint64_t result;

  result = qword_256B32130;
  if (!qword_256B32130)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2EF8, &type metadata for LibraryCanvasContentLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32130);
  }
  return result;
}

unint64_t sub_23C192398()
{
  unint64_t result;

  result = qword_256B32138;
  if (!qword_256B32138)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A2F20, &type metadata for LibraryCanvasContentLoadState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32138);
  }
  return result;
}

uint64_t sub_23C1923DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6968736572666572 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C192590(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7470697263736564 && a2 == 0xEB0000000073726FLL;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C1926EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_256B32140);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_23C192738(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23C19B524();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_23C1927D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_23C192818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_23C192888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23C192908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23C19296C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release();
  return a1;
}

uint64_t sub_23C1929DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C1929E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23C19B524();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23C192A64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C192A70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23C19B524();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TVLibraryItemCell()
{
  uint64_t result;

  result = qword_256B321A0;
  if (!qword_256B321A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23C192B24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C19B524();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23C192BA4()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_23C192BB4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  __n128 result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23C19BEE4();
    v23 = (void *)sub_23C19B890();
    sub_23C19B554();

  }
  sub_23C19B6C8();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B321E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a9, v13, v24);
  v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B321E8) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *v25 = v27;
  v25[1] = v28;
  result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_23C192D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t *v18;
  char *v19;
  char *v20;
  char *v21;
  _QWORD v23[6];

  v2 = v1;
  v23[1] = a1;
  v3 = (int *)type metadata accessor for LibrarySidebarButtonStyle();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TVLibraryItemCell();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B321E0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256B321E8);
  MEMORY[0x24BDAC7A8](v23[0]);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C193210(v2, (uint64_t)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  sub_23C1932E0((uint64_t)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  v23[4] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B30F50);
  sub_23C15159C(&qword_256B30F60, &qword_256B30F50, MEMORY[0x24BDF41A8]);
  sub_23C19BC38();
  sub_23C19BD10();
  v17 = sub_23C192BB4(0.0, 1, 0.0, 1, 320.0, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v17);
  *(_QWORD *)v5 = swift_getKeyPath();
  v5[8] = 0;
  *((_QWORD *)v5 + 2) = swift_getKeyPath();
  v5[24] = 0;
  v18 = (uint64_t *)&v5[v3[6]];
  *v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B317B8);
  swift_storeEnumTagMultiPayload();
  v19 = &v5[v3[7]];
  *(_QWORD *)v19 = swift_getKeyPath();
  v19[8] = 0;
  v20 = &v5[v3[8]];
  *(_QWORD *)v20 = swift_getKeyPath();
  v20[8] = 0;
  v21 = &v5[v3[9]];
  *(_QWORD *)v21 = swift_getKeyPath();
  v21[8] = 0;
  v5[v3[10]] = 0;
  sub_23C193568();
  sub_23C1935EC();
  sub_23C19BA34();
  sub_23C193634((uint64_t)v5);
  return sub_23C193670((uint64_t)v14);
}

uint64_t sub_23C19308C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = type metadata accessor for TVLibraryItemCell();
  LibraryPage.title(locale:)(a1, *(_BYTE *)(a1 + *(int *)(v4 + 20)));
  sub_23C165284();
  result = sub_23C19B9B0();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

void sub_23C1930F8(uint64_t a1)
{
  char *v1;

  v1 = (char *)sub_23C19314C
     + 4 * byte_23C1A3140[*(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for TVLibraryItemCell() + 20))];
  __asm { BR              X10 }
}

uint64_t sub_23C19314C()
{
  uint64_t *v0;
  uint64_t result;

  result = sub_23C19BBD8();
  *v0 = result;
  return result;
}

uint64_t sub_23C193210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TVLibraryItemCell();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C193254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TVLibraryItemCell() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_23C19B524();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C1932E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TVLibraryItemCell();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C193324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for TVLibraryItemCell();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + *(int *)(v1 + 24) + ((v2 + 16) & ~v2)))();
}

uint64_t sub_23C193368()
{
  return sub_23C19BBF0();
}

uint64_t sub_23C1933C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C19B74C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23C1933F4()
{
  return sub_23C19B758();
}

uint64_t sub_23C193418@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C19B764();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23C193444()
{
  return sub_23C19B704();
}

uint64_t sub_23C193464(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_23C19B5C0();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23C19B710();
}

uint64_t sub_23C1934E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C19B728();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23C193510@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C19B71C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23C19353C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C19B6F8();
  *a1 = result & 1;
  return result;
}

unint64_t sub_23C193568()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B321F0;
  if (!qword_256B321F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B321E8);
    v2[0] = sub_23C15159C(&qword_256B321F8, &qword_256B321E0, MEMORY[0x24BDF43B0]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2426189D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B321F0);
  }
  return result;
}

unint64_t sub_23C1935EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B32200;
  if (!qword_256B32200)
  {
    v1 = type metadata accessor for LibrarySidebarButtonStyle();
    result = MEMORY[0x2426189D0](&unk_23C1A1B50, v1);
    atomic_store(result, (unint64_t *)&qword_256B32200);
  }
  return result;
}

uint64_t sub_23C193634(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LibrarySidebarButtonStyle();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C193670(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B321E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C1936B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C19308C(*(_QWORD *)(v1 + 16), a1);
}

void sub_23C1936B8()
{
  uint64_t v0;

  sub_23C1930F8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23C1936C0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B321E8);
  type metadata accessor for LibrarySidebarButtonStyle();
  sub_23C193568();
  sub_23C1935EC();
  return swift_getOpaqueTypeConformance2();
}

uint64_t LibraryCanvasSectionDescriptor.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasSectionDescriptor.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasSectionDescriptor.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasSectionDescriptor.items.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall LibraryCanvasSectionDescriptor.init(identifier:title:subtitle:items:)(FitnessLibrary::LibraryCanvasSectionDescriptor *__return_ptr retstr, Swift::String identifier, Swift::String_optional title, Swift::String_optional subtitle, Swift::OpaquePointer items)
{
  retstr->identifier = identifier;
  retstr->title = title;
  retstr->subtitle = subtitle;
  retstr->items = items;
}

uint64_t sub_23C1937CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23C193800 + 4 * byte_23C1A32F0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_23C193800()
{
  return 0x656C746974;
}

uint64_t sub_23C193814()
{
  return 0x656C746974627573;
}

uint64_t sub_23C19382C()
{
  return 0x736D657469;
}

uint64_t sub_23C193840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C194824(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C193864()
{
  sub_23C193A88();
  return sub_23C19C0F4();
}

uint64_t sub_23C19388C()
{
  sub_23C193A88();
  return sub_23C19C100();
}

uint64_t LibraryCanvasSectionDescriptor.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32208);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v16 = v1[3];
  v17 = v7;
  v8 = v1[4];
  v14 = v1[5];
  v15 = v8;
  v13 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C193A88();
  sub_23C19C0E8();
  v23 = 0;
  v9 = v18;
  sub_23C19C058();
  if (!v9)
  {
    v10 = v13;
    v22 = 1;
    sub_23C19C040();
    v21 = 2;
    sub_23C19C040();
    v19 = v10;
    v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B32218);
    sub_23C193E2C(&qword_256B32220, (uint64_t (*)(void))sub_23C193ACC, MEMORY[0x24BEE12A0]);
    sub_23C19C07C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C193A88()
{
  unint64_t result;

  result = qword_256B32210;
  if (!qword_256B32210)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A34B4, &type metadata for LibraryCanvasSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32210);
  }
  return result;
}

unint64_t sub_23C193ACC()
{
  unint64_t result;

  result = qword_256B32228;
  if (!qword_256B32228)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasPlaceholder, &type metadata for LibraryCanvasPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B32228);
  }
  return result;
}

uint64_t LibraryCanvasSectionDescriptor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32230);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C193A88();
  sub_23C19C0DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = 0;
  v9 = sub_23C19BFF8();
  v11 = v10;
  v28 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23C19BFE0();
  v24 = v13;
  v21 = v12;
  v22 = v9;
  v27 = 2;
  swift_bridgeObjectRetain();
  v23 = 0;
  v20 = sub_23C19BFE0();
  v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B32218);
  v26 = 3;
  sub_23C193E2C(&qword_256B32238, (uint64_t (*)(void))sub_23C193E94, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_23C19C01C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v25;
  swift_bridgeObjectRetain();
  v18 = v15;
  v19 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v22;
  a2[1] = v11;
  a2[2] = v21;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v18;
  a2[6] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C193E2C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B32218);
    v8 = a2();
    result = MEMORY[0x2426189D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C193E94()
{
  unint64_t result;

  result = qword_256B32240;
  if (!qword_256B32240)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasPlaceholder, &type metadata for LibraryCanvasPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B32240);
  }
  return result;
}

uint64_t sub_23C193ED8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return LibraryCanvasSectionDescriptor.init(from:)(a1, a2);
}

uint64_t sub_23C193EEC(_QWORD *a1)
{
  return LibraryCanvasSectionDescriptor.encode(to:)(a1);
}

uint64_t LibraryCanvasSectionDescriptor.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[3];
  v4 = v1[5];
  v5 = v1[6];
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_23C19C0C4();
    if (v4)
      goto LABEL_3;
LABEL_5:
    sub_23C19C0C4();
    goto LABEL_6;
  }
  sub_23C19C0C4();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_5;
LABEL_3:
  sub_23C19C0C4();
  swift_bridgeObjectRetain();
  sub_23C19BE00();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_23C194120(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t LibraryCanvasSectionDescriptor.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD v5[11];
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 48);
  v5[9] = *(_QWORD *)v0;
  v5[10] = v1;
  v3 = *(_OWORD *)(v0 + 32);
  v6 = *(_OWORD *)(v0 + 16);
  v7 = v3;
  v8 = v2;
  sub_23C19C0AC();
  LibraryCanvasSectionDescriptor.hash(into:)((uint64_t)v5);
  return sub_23C19C0D0();
}

uint64_t sub_23C194064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD v5[11];
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 48);
  v5[9] = *(_QWORD *)v0;
  v5[10] = v1;
  v3 = *(_OWORD *)(v0 + 32);
  v6 = *(_OWORD *)(v0 + 16);
  v7 = v3;
  v8 = v2;
  sub_23C19C0AC();
  LibraryCanvasSectionDescriptor.hash(into:)((uint64_t)v5);
  return sub_23C19C0D0();
}

uint64_t sub_23C1940C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD v5[11];
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 48);
  v5[9] = *(_QWORD *)v0;
  v5[10] = v1;
  v3 = *(_OWORD *)(v0 + 32);
  v6 = *(_OWORD *)(v0 + 16);
  v7 = v3;
  v8 = v2;
  sub_23C19C0AC();
  LibraryCanvasSectionDescriptor.hash(into:)((uint64_t)v5);
  return sub_23C19C0D0();
}

uint64_t sub_23C194120(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23C19C0B8();
  if (v3)
  {
    v5 = *(_QWORD *)(a2 + 56);
    v6 = *(unsigned __int8 *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_23C19BE00();
    swift_bridgeObjectRelease();
    sub_23C19C0C4();
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_23C19BE00();
      swift_bridgeObjectRelease();
    }
    __asm { BR              X8 }
  }
  return result;
}

uint64_t _s14FitnessLibrary0B23CanvasSectionDescriptorV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v6 = a1[5];
  v5 = a1[6];
  v8 = a2[2];
  v7 = a2[3];
  v10 = a2[4];
  v9 = a2[5];
  v11 = (_QWORD *)a2[6];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_23C19C088() & 1) == 0)
    return 0;
  if (v4)
  {
    if (!v7 || (v2 != v8 || v4 != v7) && (sub_23C19C088() & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (v6)
  {
    if (v9 && (v3 == v10 && v6 == v9 || (sub_23C19C088() & 1) != 0))
      return sub_23C18C450(v5, v11);
  }
  else if (!v9)
  {
    return sub_23C18C450(v5, v11);
  }
  return 0;
}

unint64_t sub_23C1943F4()
{
  unint64_t result;

  result = qword_256B32248;
  if (!qword_256B32248)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasSectionDescriptor, &type metadata for LibraryCanvasSectionDescriptor);
    atomic_store(result, (unint64_t *)&qword_256B32248);
  }
  return result;
}

uint64_t destroy for LibraryCanvasSectionDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LibraryCanvasSectionDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LibraryCanvasSectionDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LibraryCanvasSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasSectionDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasSectionDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasSectionDescriptor()
{
  return &type metadata for LibraryCanvasSectionDescriptor;
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasSectionDescriptor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C1946CC + 4 * byte_23C1A32FF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C194700 + 4 * byte_23C1A32FA[v4]))();
}

uint64_t sub_23C194700(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C194708(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C194710);
  return result;
}

uint64_t sub_23C19471C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C194724);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C194728(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C194730(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasSectionDescriptor.CodingKeys()
{
  return &type metadata for LibraryCanvasSectionDescriptor.CodingKeys;
}

unint64_t sub_23C194750()
{
  unint64_t result;

  result = qword_256B32250;
  if (!qword_256B32250)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A348C, &type metadata for LibraryCanvasSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32250);
  }
  return result;
}

unint64_t sub_23C194798()
{
  unint64_t result;

  result = qword_256B32258;
  if (!qword_256B32258)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A33FC, &type metadata for LibraryCanvasSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32258);
  }
  return result;
}

unint64_t sub_23C1947E0()
{
  unint64_t result;

  result = qword_256B32260;
  if (!qword_256B32260)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3424, &type metadata for LibraryCanvasSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32260);
  }
  return result;
}

uint64_t sub_23C194824(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C1949D8()
{
  sub_23C195414();
  return sub_23C19C0F4();
}

uint64_t sub_23C194A00()
{
  sub_23C195414();
  return sub_23C19C100();
}

uint64_t sub_23C194A28()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C194A5C + 4 * byte_23C1A3510[*v0]))(0xD000000000000015, 0x800000023C1A4640);
}

uint64_t sub_23C194A5C()
{
  return 0x6843656C61636F6CLL;
}

uint64_t sub_23C194A80()
{
  return 0x647055736D657469;
}

uint64_t sub_23C194AA4()
{
  return 0x6570704177656976;
}

uint64_t sub_23C194AC4()
{
  return 0x6173694477656976;
}

uint64_t sub_23C194AE8()
{
  return 0x4968736572666572;
}

uint64_t sub_23C194B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C19640C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C194B2C()
{
  sub_23C19527C();
  return sub_23C19C0F4();
}

uint64_t sub_23C194B54()
{
  sub_23C19527C();
  return sub_23C19C100();
}

uint64_t sub_23C194B7C()
{
  return 0x7470697263736564;
}

uint64_t sub_23C194B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7470697263736564 && a2 == 0xEB0000000073726FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23C19C088();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23C194C48()
{
  sub_23C19538C();
  return sub_23C19C0F4();
}

uint64_t sub_23C194C70()
{
  sub_23C19538C();
  return sub_23C19C100();
}

uint64_t sub_23C194C98()
{
  sub_23C1953D0();
  return sub_23C19C0F4();
}

uint64_t sub_23C194CC0()
{
  sub_23C1953D0();
  return sub_23C19C100();
}

uint64_t sub_23C194CE8()
{
  sub_23C1952C0();
  return sub_23C19C0F4();
}

uint64_t sub_23C194D10()
{
  sub_23C1952C0();
  return sub_23C19C100();
}

uint64_t sub_23C194D38()
{
  sub_23C195348();
  return sub_23C19C0F4();
}

uint64_t sub_23C194D60()
{
  sub_23C195348();
  return sub_23C19C100();
}

uint64_t sub_23C194D88()
{
  sub_23C195304();
  return sub_23C19C0F4();
}

uint64_t sub_23C194DB0()
{
  sub_23C195304();
  return sub_23C19C100();
}

uint64_t LibraryCanvasContentAction.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32268);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32270);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32278);
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v34 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32280);
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v36 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32288);
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32290);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32298);
  v46 = *(_QWORD *)(v16 - 8);
  v47 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = *v1;
  v19 = a1[3];
  v20 = a1;
  v21 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v20, v19);
  sub_23C19527C();
  sub_23C19C0E8();
  switch(v18)
  {
    case 0:
      v49 = 0;
      sub_23C195414();
      v22 = v47;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v21, v22);
    case 1:
      v50 = 1;
      sub_23C1953D0();
      v27 = v47;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v33);
      goto LABEL_9;
    case 2:
      v52 = 3;
      sub_23C195348();
      v28 = v34;
      v27 = v47;
      sub_23C19C034();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v37);
      goto LABEL_9;
    case 3:
      v53 = 4;
      sub_23C195304();
      v29 = v39;
      v27 = v47;
      sub_23C19C034();
      v31 = v41;
      v30 = v42;
      goto LABEL_8;
    case 4:
      v54 = 5;
      sub_23C1952C0();
      v29 = v43;
      v27 = v47;
      sub_23C19C034();
      v31 = v44;
      v30 = v45;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
LABEL_9:
      result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v21, v27);
      break;
    default:
      v51 = 2;
      sub_23C19538C();
      v24 = v36;
      v25 = v47;
      sub_23C19C034();
      v48 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B31FC8);
      sub_23C191694(&qword_256B31FD0, (uint64_t (*)(void))sub_23C191584, MEMORY[0x24BEE12A0]);
      v26 = v40;
      sub_23C19C07C();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v26);
      result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v21, v25);
      break;
  }
  return result;
}

unint64_t sub_23C19527C()
{
  unint64_t result;

  result = qword_256B322A0;
  if (!qword_256B322A0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3B68, &type metadata for LibraryCanvasContentAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B322A0);
  }
  return result;
}

unint64_t sub_23C1952C0()
{
  unint64_t result;

  result = qword_256B322A8;
  if (!qword_256B322A8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3B18, &type metadata for LibraryCanvasContentAction.RefreshItemsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B322A8);
  }
  return result;
}

unint64_t sub_23C195304()
{
  unint64_t result;

  result = qword_256B322B0;
  if (!qword_256B322B0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3AC8, &type metadata for LibraryCanvasContentAction.ViewDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B322B0);
  }
  return result;
}

unint64_t sub_23C195348()
{
  unint64_t result;

  result = qword_256B322B8;
  if (!qword_256B322B8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3A78, &type metadata for LibraryCanvasContentAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B322B8);
  }
  return result;
}

unint64_t sub_23C19538C()
{
  unint64_t result;

  result = qword_256B322C0;
  if (!qword_256B322C0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3A28, &type metadata for LibraryCanvasContentAction.ItemsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B322C0);
  }
  return result;
}

unint64_t sub_23C1953D0()
{
  unint64_t result;

  result = qword_256B322C8;
  if (!qword_256B322C8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A39D8, &type metadata for LibraryCanvasContentAction.LocaleChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B322C8);
  }
  return result;
}

unint64_t sub_23C195414()
{
  unint64_t result;

  result = qword_256B322D0;
  if (!qword_256B322D0)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3988, &type metadata for LibraryCanvasContentAction.BuildCustomPlanTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B322D0);
  }
  return result;
}

uint64_t LibraryCanvasContentAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD v25[6];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;

  v34 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B322D8);
  v25[5] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v39 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B322E0);
  v30 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v38 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B322E8);
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B322F0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B322F8);
  v25[4] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v35 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32300);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B32308);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23C19527C();
  v19 = v41;
  sub_23C19C0DC();
  if (!v19)
  {
    v25[2] = v13;
    v25[0] = v11;
    v25[1] = v10;
    v41 = v15;
    v25[3] = 0;
    v20 = sub_23C19C028();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X10 }
    v21 = sub_23C19BF50();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B300F0);
    *v23 = &type metadata for LibraryCanvasContentAction;
    sub_23C19BFD4();
    sub_23C19BF44();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v14);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

void sub_23C195990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 66) = 4;
  sub_23C195304();
  v5 = *(_QWORD *)(v4 - 248);
  sub_23C19BFC8();
  if (v5)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23C195960);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 192) + 8))(v1, *(_QWORD *)(v4 - 216));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  **(_QWORD **)(v4 - 160) = 3;
  JUMPOUT(0x23C195968);
}

void sub_23C1959E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 65) = 5;
  sub_23C1952C0();
  v5 = *(_QWORD *)(v4 - 248);
  sub_23C19BFC8();
  if (v5)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23C195960);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 232) + 8))(v2, *(_QWORD *)(v4 - 184));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v0);
  JUMPOUT(0x23C195B6CLL);
}

uint64_t sub_23C195B7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryCanvasContentAction.init(from:)(a1, a2);
}

uint64_t sub_23C195B90(_QWORD *a1)
{
  return LibraryCanvasContentAction.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for LibraryCanvasContentAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for LibraryCanvasContentAction(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for LibraryCanvasContentAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for LibraryCanvasContentAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasContentAction(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

uint64_t sub_23C195D8C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23C195DA4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction()
{
  return &type metadata for LibraryCanvasContentAction;
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23C195E20 + 4 * byte_23C1A3526[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23C195E54 + 4 * byte_23C1A3521[v4]))();
}

uint64_t sub_23C195E54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C195E5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C195E64);
  return result;
}

uint64_t sub_23C195E70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C195E78);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23C195E7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C195E84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.CodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.BuildCustomPlanTappedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.BuildCustomPlanTappedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.LocaleChangedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.LocaleChangedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentAction.ItemsUpdatedCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C195F00 + 4 * byte_23C1A352B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C195F20 + 4 * byte_23C1A3530[v4]))();
}

_BYTE *sub_23C195F00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C195F20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C195F28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C195F30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C195F38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C195F40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.ItemsUpdatedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.ItemsUpdatedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.ViewAppearedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.ViewDisappearedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.ViewDisappearedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.RefreshItemsCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.RefreshItemsCodingKeys;
}

unint64_t sub_23C195F90()
{
  unint64_t result;

  result = qword_256B32310;
  if (!qword_256B32310)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3808, &type metadata for LibraryCanvasContentAction.ItemsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32310);
  }
  return result;
}

unint64_t sub_23C195FD8()
{
  unint64_t result;

  result = qword_256B32318;
  if (!qword_256B32318)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3960, &type metadata for LibraryCanvasContentAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32318);
  }
  return result;
}

unint64_t sub_23C196020()
{
  unint64_t result;

  result = qword_256B32320;
  if (!qword_256B32320)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3880, &type metadata for LibraryCanvasContentAction.BuildCustomPlanTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32320);
  }
  return result;
}

unint64_t sub_23C196068()
{
  unint64_t result;

  result = qword_256B32328;
  if (!qword_256B32328)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A38A8, &type metadata for LibraryCanvasContentAction.BuildCustomPlanTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32328);
  }
  return result;
}

unint64_t sub_23C1960B0()
{
  unint64_t result;

  result = qword_256B32330;
  if (!qword_256B32330)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3830, &type metadata for LibraryCanvasContentAction.LocaleChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32330);
  }
  return result;
}

unint64_t sub_23C1960F8()
{
  unint64_t result;

  result = qword_256B32338;
  if (!qword_256B32338)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3858, &type metadata for LibraryCanvasContentAction.LocaleChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32338);
  }
  return result;
}

unint64_t sub_23C196140()
{
  unint64_t result;

  result = qword_256B32340;
  if (!qword_256B32340)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3778, &type metadata for LibraryCanvasContentAction.ItemsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32340);
  }
  return result;
}

unint64_t sub_23C196188()
{
  unint64_t result;

  result = qword_256B32348;
  if (!qword_256B32348)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A37A0, &type metadata for LibraryCanvasContentAction.ItemsUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32348);
  }
  return result;
}

unint64_t sub_23C1961D0()
{
  unint64_t result;

  result = qword_256B32350;
  if (!qword_256B32350)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3728, &type metadata for LibraryCanvasContentAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32350);
  }
  return result;
}

unint64_t sub_23C196218()
{
  unint64_t result;

  result = qword_256B32358;
  if (!qword_256B32358)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3750, &type metadata for LibraryCanvasContentAction.ViewAppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32358);
  }
  return result;
}

unint64_t sub_23C196260()
{
  unint64_t result;

  result = qword_256B32360;
  if (!qword_256B32360)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A36D8, &type metadata for LibraryCanvasContentAction.ViewDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32360);
  }
  return result;
}

unint64_t sub_23C1962A8()
{
  unint64_t result;

  result = qword_256B32368;
  if (!qword_256B32368)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3700, &type metadata for LibraryCanvasContentAction.ViewDisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32368);
  }
  return result;
}

unint64_t sub_23C1962F0()
{
  unint64_t result;

  result = qword_256B32370;
  if (!qword_256B32370)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3688, &type metadata for LibraryCanvasContentAction.RefreshItemsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32370);
  }
  return result;
}

unint64_t sub_23C196338()
{
  unint64_t result;

  result = qword_256B32378;
  if (!qword_256B32378)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A36B0, &type metadata for LibraryCanvasContentAction.RefreshItemsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32378);
  }
  return result;
}

unint64_t sub_23C196380()
{
  unint64_t result;

  result = qword_256B32380;
  if (!qword_256B32380)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A38D0, &type metadata for LibraryCanvasContentAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B32380);
  }
  return result;
}

unint64_t sub_23C1963C8()
{
  unint64_t result;

  result = qword_256B32388[0];
  if (!qword_256B32388[0])
  {
    result = MEMORY[0x2426189D0](&unk_23C1A38F8, &type metadata for LibraryCanvasContentAction.CodingKeys);
    atomic_store(result, qword_256B32388);
  }
  return result;
}

uint64_t sub_23C19640C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023C1A4640 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6843656C61636F6CLL && a2 == 0xED00006465676E61 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x647055736D657469 && a2 == 0xEC00000064657461 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6173694477656976 && a2 == 0xEF64657261657070 || (sub_23C19C088() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4968736572666572 && a2 == 0xEC000000736D6574)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_23C19C088();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23C196708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_23C19B7C4();
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_23C19B7D0();
}

uint64_t sub_23C1967CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = sub_23C19B7C4();
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_23C19B7D0();
}

uint64_t LibraryDispatcherView.init(store:compactViewBuilder:standardViewBuilder:tvViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a9 = sub_23C1503C4;
  *(_QWORD *)(a9 + 8) = result;
  *(_BYTE *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = a3;
  *(_QWORD *)(a9 + 32) = a4;
  *(_QWORD *)(a9 + 40) = a5;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  return result;
}

uint64_t sub_23C196920()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t LibraryDispatcherView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 *v59;
  __int16 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  _QWORD v66[3];
  _QWORD v67[2];
  _QWORD v68[2];
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;

  v51 = a2;
  v4 = a1[2];
  v5 = a1[3];
  v6 = sub_23C19B7DC();
  v7 = a1[4];
  v8 = sub_23C19B7DC();
  v40[1] = v8;
  v9 = sub_23C19BCEC();
  v50 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)v40 - v10;
  v11 = a1[5];
  v41 = a1[6];
  v42 = v11;
  v68[0] = v11;
  v68[1] = v41;
  v12 = MEMORY[0x24BDEF3E0];
  v13 = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v6, v68);
  v40[0] = a1[7];
  v67[0] = v13;
  v67[1] = v40[0];
  v14 = MEMORY[0x2426189D0](v12, v8, v67);
  v66[0] = MEMORY[0x24BDF5138];
  v66[1] = v14;
  v66[2] = MEMORY[0x24BDF5138];
  v46 = v9;
  v15 = MEMORY[0x2426189D0](MEMORY[0x24BDF4AF8], v9, v66);
  v45 = v15;
  v44 = sub_23C150A0C();
  *(_QWORD *)&v69 = v9;
  *((_QWORD *)&v69 + 1) = &type metadata for LibraryLayout;
  *(_QWORD *)&v70 = v15;
  *((_QWORD *)&v70 + 1) = v44;
  v16 = MEMORY[0x24261897C](0, &v69, MEMORY[0x24BDF38E8], 0);
  v17 = *(_QWORD *)(v16 - 8);
  v48 = v16;
  v49 = v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v43 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v47 = (uint64_t)v40 - v20;
  v21 = v2[3];
  v71 = v2[2];
  v72 = v21;
  v73 = *((_QWORD *)v2 + 8);
  v22 = v2[1];
  v69 = *v2;
  v70 = v22;
  v53 = v4;
  v54 = v5;
  v23 = v5;
  v24 = v7;
  v55 = v7;
  v25 = v41;
  v26 = v42;
  v56 = v42;
  v57 = v41;
  v27 = v40[0];
  v58 = v40[0];
  v59 = &v69;
  sub_23C19BCE0();
  v63 = v71;
  v64 = v72;
  v65 = v73;
  v61 = v69;
  v62 = v70;
  sub_23C15FEE4();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  swift_release();
  v60 = v61;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v4;
  *(_QWORD *)(v28 + 24) = v23;
  *(_QWORD *)(v28 + 32) = v24;
  *(_QWORD *)(v28 + 40) = v26;
  *(_QWORD *)(v28 + 48) = v25;
  *(_QWORD *)(v28 + 56) = v27;
  v29 = v72;
  *(_OWORD *)(v28 + 96) = v71;
  *(_OWORD *)(v28 + 112) = v29;
  *(_QWORD *)(v28 + 128) = v73;
  v30 = v70;
  *(_OWORD *)(v28 + 64) = v69;
  *(_OWORD *)(v28 + 80) = v30;
  sub_23C1973A8((uint64_t)&v69);
  v32 = (uint64_t)v43;
  v31 = v44;
  v33 = v45;
  v34 = v46;
  v35 = v52;
  sub_23C19BB3C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v34);
  *(_QWORD *)&v61 = v34;
  *((_QWORD *)&v61 + 1) = &type metadata for LibraryLayout;
  *(_QWORD *)&v62 = v33;
  *((_QWORD *)&v62 + 1) = v31;
  swift_getOpaqueTypeConformance2();
  v36 = v47;
  v37 = v48;
  sub_23C1515F4(v32, v48, v47);
  v38 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v38(v32, v37);
  sub_23C1502B0(v36, v37, v51);
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v36, v37);
}

void sub_23C196CC0(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _QWORD v30[11];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v35 = a8;
  v30[2] = *(_QWORD *)(a4 - 8);
  v15 = MEMORY[0x24BDAC7A8](a1);
  v30[4] = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v30[3] = (char *)v30 - v18;
  v30[1] = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v20);
  v30[6] = (char *)v30 - v21;
  v22 = sub_23C19B7DC();
  v30[8] = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v30[7] = (char *)v30 - v24;
  v30[0] = *(_QWORD *)(a2 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  MEMORY[0x24BDAC7A8](v25);
  v30[5] = (char *)v30 - v26;
  v31 = sub_23C19B7DC();
  v30[10] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v30[9] = (char *)v30 - v27;
  v28 = a1[3];
  v44 = a1[2];
  v45 = v28;
  v46 = *((_QWORD *)a1 + 8);
  v29 = a1[1];
  v42 = *a1;
  v43 = v29;
  v36 = a2;
  v37 = a3;
  v38 = a4;
  v39 = a5;
  v32 = a5;
  v33 = a6;
  v40 = a6;
  v41 = a7;
  v34 = a7;
  type metadata accessor for LibraryDispatcherView();
}

uint64_t sub_23C196EF0()
{
  uint64_t v0;
  uint64_t v1;
  void (**v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23C15FEE4();
  swift_getKeyPath();
  sub_23C19BD94();
  swift_release();
  v8 = swift_release();
  if (*(_BYTE *)(v7 - 160))
  {
    if (*(_BYTE *)(v7 - 160) == 1)
    {
      v2[5](v8);
      v9 = *(_QWORD *)(v7 - 368);
      v10 = *(_QWORD *)(v7 - 312);
      sub_23C1515F4(v5, v6, v9);
      v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 408) + 8);
      v11(v5, v6);
      sub_23C1502B0(v9, v6, v5);
      v12 = *(_QWORD *)(v7 - 360);
      v13 = *(_QWORD *)(v7 - 320);
      sub_23C1967CC(v5, v0, v6);
      v11(v5, v6);
      v14 = v11;
      *(_QWORD *)(v7 - 272) = v13;
      *(_QWORD *)(v7 - 264) = v10;
      MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v4, v7 - 272);
      v15 = *(_QWORD *)(v7 - 344);
      v16 = *(_QWORD *)(v7 - 304);
      sub_23C196708(v12, v4);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 352) + 8))(v12, v4);
      v14(*(_QWORD *)(v7 - 368), v6);
    }
    else
    {
      v20 = *(_QWORD *)(v7 - 384);
      v2[7](v8);
      v21 = *(_QWORD *)(v7 - 392);
      v16 = *(_QWORD *)(v7 - 304);
      sub_23C1515F4(v20, v3, v21);
      v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 400) + 8);
      v22(v20, v3);
      sub_23C1502B0(v21, v3, v20);
      v13 = *(_QWORD *)(v7 - 320);
      v10 = *(_QWORD *)(v7 - 312);
      *(_QWORD *)(v7 - 224) = v13;
      *(_QWORD *)(v7 - 216) = v10;
      MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v4, v7 - 224);
      v15 = *(_QWORD *)(v7 - 344);
      sub_23C1967CC(v20, v4, v3);
      v22(v20, v3);
      v22(v21, v3);
    }
  }
  else
  {
    v2[3](v8);
    v17 = *(_QWORD *)(v7 - 376);
    v13 = *(_QWORD *)(v7 - 320);
    sub_23C1515F4(v1, v0, v17);
    v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 416) + 8);
    v18(v1, v0);
    sub_23C1502B0(v17, v0, v1);
    v19 = *(_QWORD *)(v7 - 360);
    v10 = *(_QWORD *)(v7 - 312);
    sub_23C196708(v1, v0);
    v18(v1, v0);
    *(_QWORD *)(v7 - 288) = v13;
    *(_QWORD *)(v7 - 280) = v10;
    MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v4, v7 - 288);
    v15 = *(_QWORD *)(v7 - 344);
    v16 = *(_QWORD *)(v7 - 304);
    sub_23C196708(v19, v4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 352) + 8))(v19, v4);
    v18(*(_QWORD *)(v7 - 376), v0);
  }
  *(_QWORD *)(v7 - 240) = v13;
  *(_QWORD *)(v7 - 232) = v10;
  v23 = MEMORY[0x24BDEF3E0];
  *(_QWORD *)(v7 - 256) = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v4, v7 - 240);
  *(_QWORD *)(v7 - 248) = v16;
  v24 = v23;
  v25 = *(_QWORD *)(v7 - 328);
  MEMORY[0x2426189D0](v24, v25, v7 - 256);
  sub_23C1502B0(v15, v25, *(_QWORD *)(v7 - 296));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 336) + 8))(v15, v25);
}

void sub_23C1972A4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23C196CC0(*(__int128 **)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

void sub_23C1972B8()
{
  type metadata accessor for LibraryDispatcherView();
}

uint64_t sub_23C197300()
{
  sub_23C15FEE4();
  sub_23C19BDA0();
  return swift_release();
}

uint64_t sub_23C197338()
{
  sub_23C151164();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23C197378()
{
  sub_23C1972B8();
}

uint64_t sub_23C1973A8(uint64_t a1)
{
  sub_23C1511B4();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C197404()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for LibraryDispatcherView()
{
  JUMPOUT(0x242618934);
}

uint64_t sub_23C197450(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  _QWORD v10[2];
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = sub_23C19B7DC();
  v4 = sub_23C19B7DC();
  v5 = sub_23C19BCEC();
  v11 = *(_OWORD *)(a1 + 24);
  v6 = MEMORY[0x24BDEF3E0];
  v10[0] = MEMORY[0x2426189D0](MEMORY[0x24BDEF3E0], v3, &v11);
  v10[1] = v2;
  v7 = MEMORY[0x2426189D0](v6, v4, v10);
  v9[0] = MEMORY[0x24BDF5138];
  v9[1] = v7;
  v9[2] = MEMORY[0x24BDF5138];
  MEMORY[0x2426189D0](MEMORY[0x24BDF4AF8], v5, v9);
  sub_23C150A0C();
  return swift_getOpaqueTypeConformance2();
}

__n128 WorkoutPlanBannerFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t WorkoutPlanBannerFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(_QWORD);
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t result;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  unsigned int v51;
  void (*v52)(char *, _QWORD, char *);
  void (*v53)(char *, _QWORD, uint64_t);
  uint64_t v54;
  unsigned int v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  unint64_t *v62;
  uint64_t v63;
  char *v64;
  char v65;
  char v66;

  v62 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B304D8);
  v61 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v48 - v10;
  v12 = type metadata accessor for WorkoutPlanBannerAction();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v4;
  v15 = v4[1];
  v17 = v4[3];
  v63 = v4[2];
  sub_23C171E8C(a4, (uint64_t)v14);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18);
  sub_23C1664F0(a2, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerLoadState);
  if (v20 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(a2, 1, 1, v18);
    v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B30468);
    v22 = &v11[v21[16]];
    v60 = &v11[v21[20]];
    v23 = &v11[v21[24]];
    v66 = 0;
    v56 = sub_23C197A10();
    sub_23C19BF2C();
    v24 = *MEMORY[0x24BE2B580];
    v25 = sub_23C19BD88();
    v26 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104);
    v55 = v24;
    v53 = v26;
    v54 = v25;
    ((void (*)(char *, uint64_t))v26)(v22, v24);
    v27 = (_QWORD *)swift_allocObject();
    v57 = v16;
    v58 = v15;
    v27[2] = v16;
    v27[3] = v15;
    v27[4] = v63;
    v27[5] = v17;
    *(_QWORD *)v23 = &unk_256B32420;
    *((_QWORD *)v23 + 1) = v27;
    swift_retain();
    v59 = v17;
    swift_retain();
    sub_23C19BE84();
    v28 = *MEMORY[0x24BE2B558];
    v29 = sub_23C19BD7C();
    v49 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104);
    v49(v60, v28, v29);
    v30 = v61;
    v31 = *(void (**)(_QWORD))(v61 + 104);
    v51 = *MEMORY[0x24BE2B438];
    v60 = (char *)v7;
    v52 = (void (*)(char *, _QWORD, char *))v31;
    v31(v11);
    v32 = v62;
    v33 = *v62;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v33 = sub_23C15B22C(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
    v35 = *(_QWORD *)(v33 + 16);
    v34 = *(_QWORD *)(v33 + 24);
    if (v35 >= v34 >> 1)
      v33 = sub_23C15B22C(v34 > 1, v35 + 1, 1, v33);
    *(_QWORD *)(v33 + 16) = v35 + 1;
    v61 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v50 = *(_QWORD *)(v30 + 72);
    v36 = v60;
    v62 = *(unint64_t **)(v30 + 32);
    ((void (*)(unint64_t, char *, char *))v62)(v33 + v61 + v50 * v35, v11, v60);
    *v32 = v33;
    v37 = v64;
    v38 = &v64[v21[16]];
    v39 = &v64[v21[20]];
    v40 = &v64[v21[24]];
    v65 = 1;
    sub_23C19BF2C();
    sub_23C19BE84();
    v53(v38, v55, v54);
    v49(v39, *MEMORY[0x24BE2B550], v29);
    v41 = (_QWORD *)swift_allocObject();
    v42 = v58;
    v41[2] = v57;
    v41[3] = v42;
    v43 = v59;
    v41[4] = v63;
    v41[5] = v43;
    *(_QWORD *)v40 = &unk_256B32430;
    *((_QWORD *)v40 + 1) = v41;
    v52(v37, v51, v36);
    v44 = *v32;
    swift_retain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v44 = sub_23C15B22C(0, *(_QWORD *)(v44 + 16) + 1, 1, v44);
    v46 = *(_QWORD *)(v44 + 16);
    v45 = *(_QWORD *)(v44 + 24);
    if (v46 >= v45 >> 1)
      v44 = sub_23C15B22C(v45 > 1, v46 + 1, 1, v44);
    *(_QWORD *)(v44 + 16) = v46 + 1;
    result = ((uint64_t (*)(unint64_t, char *, char *))v62)(v44 + v61 + v46 * v50, v64, v36);
    *v32 = v44;
  }
  else
  {
    sub_23C156708((uint64_t)v14, a2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(a2, 0, 1, v18);
  }
  return result;
}

unint64_t sub_23C197A10()
{
  unint64_t result;

  result = qword_256B32410;
  if (!qword_256B32410)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3D50, &type metadata for WorkoutPlanBannerFeature.TaskIdentifier);
    atomic_store(result, &qword_256B32410);
  }
  return result;
}

uint64_t sub_23C197A54(uint64_t a1, int *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2[2] = a1;
  type metadata accessor for WorkoutPlanBannerAction();
  v2[3] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v2[4] = v4;
  v2[5] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v2[6] = v5;
  v2[7] = sub_23C19BE78();
  v2[8] = sub_23C19BE6C();
  v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v6 = (_QWORD *)swift_task_alloc();
  v2[9] = v6;
  *v6 = v2;
  v6[1] = sub_23C197B30;
  return v8(v5);
}

uint64_t sub_23C197B30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 88) = sub_23C19BE54();
  *(_QWORD *)(v2 + 96) = v3;
  return swift_task_switch();
}

uint64_t sub_23C197BBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = v0[3];
  v3 = v0[4];
  sub_23C156750(v0[6], v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v2, 0, 1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[13] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B32450);
  *v4 = v0;
  v4[1] = sub_23C197C4C;
  return sub_23C19BD70();
}

uint64_t sub_23C197C4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc();
  sub_23C1664F0(v1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerAction);
  return swift_task_switch();
}

uint64_t sub_23C197CAC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  sub_23C156818(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C197D00()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C197D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23C168174;
  return sub_23C197A54(a1, v4);
}

uint64_t sub_23C197DC4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *);

  v4[13] = a2;
  v4[14] = a3;
  v4[12] = a1;
  type metadata accessor for WorkoutPlanBannerAction();
  v4[15] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B302B0);
  v4[16] = v6;
  v4[17] = *(_QWORD *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = sub_23C19BE78();
  v4[20] = sub_23C19BE6C();
  v9 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v7 = (_QWORD *)swift_task_alloc();
  v4[21] = v7;
  *v7 = v4;
  v7[1] = sub_23C197EA4;
  return v9(v4 + 7);
}

uint64_t sub_23C197EA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 184) = sub_23C19BE54();
  *(_QWORD *)(v2 + 192) = v3;
  return swift_task_switch();
}

uint64_t sub_23C197F30()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[10];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_23C19BECC();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v0[25] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[26] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23C198090;
  return sub_23C19BE60();
}

uint64_t sub_23C198090()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C1980E4()
{
  uint64_t v0;
  _QWORD *v2;
  uint64_t (*v3)(_QWORD);

  if (*(_BYTE *)(v0 + 240) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (uint64_t (*)(_QWORD))(**(int **)(v0 + 104) + *(_QWORD *)(v0 + 104));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v2;
    *v2 = v0;
    v2[1] = sub_23C1981A0;
    return v3(*(_QWORD *)(v0 + 144));
  }
}

uint64_t sub_23C1981A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C198200()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[17];
  v2 = v0[15];
  v3 = v0[16];
  sub_23C156750(v0[18], v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v2, 0, 1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[29] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B32450);
  *v4 = v0;
  v4[1] = sub_23C198294;
  return sub_23C19BD70();
}

uint64_t sub_23C198294()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  swift_task_dealloc();
  sub_23C1664F0(v1, (uint64_t (*)(_QWORD))type metadata accessor for WorkoutPlanBannerAction);
  return swift_task_switch();
}

uint64_t sub_23C1982F4()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_23C156818(v0[18]);
  v0[25] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[26] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C198090;
  return sub_23C19BE60();
}

uint64_t sub_23C1983A0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C1983E8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C198474(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23C15AB44;
  return sub_23C197DC4(a1, v4, v5, v6);
}

uint64_t sub_23C1984E8()
{
  return sub_23C153930(&qword_256B32438, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanBannerAction, (uint64_t)&protocol conformance descriptor for WorkoutPlanBannerAction);
}

uint64_t sub_23C198514()
{
  return sub_23C153930(&qword_256B32440, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanBannerAction, (uint64_t)&protocol conformance descriptor for WorkoutPlanBannerAction);
}

uint64_t sub_23C198540()
{
  return sub_23C153930(&qword_256B302B8, (uint64_t (*)(uint64_t))type metadata accessor for WorkoutPlanBannerState, (uint64_t)&protocol conformance descriptor for WorkoutPlanBannerState);
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerFeature()
{
  return &type metadata for WorkoutPlanBannerFeature;
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C1985C8 + 4 * byte_23C1A3C85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C1985FC + 4 * byte_23C1A3C80[v4]))();
}

uint64_t sub_23C1985FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C198604(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C19860CLL);
  return result;
}

uint64_t sub_23C198618(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C198620);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C198624(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C19862C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerFeature.TaskIdentifier()
{
  return &type metadata for WorkoutPlanBannerFeature.TaskIdentifier;
}

unint64_t sub_23C19864C()
{
  unint64_t result;

  result = qword_256B32448;
  if (!qword_256B32448)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3D28, &type metadata for WorkoutPlanBannerFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B32448);
  }
  return result;
}

__n128 LibraryCanvasContentFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  result = *(__n128 *)(a1 + 64);
  v5 = *(_OWORD *)(a1 + 80);
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v5;
  return result;
}

void sub_23C1986AC(uint64_t a1, unsigned __int8 a2)
{
  if (a2 >> 6)
  {
    if (a2 >> 6 == 1)
    {
      sub_23C19C0B8();
      __asm { BR              X10 }
    }
    __asm { BR              X10 }
  }
  sub_23C19C0B8();
  __asm { BR              X10 }
}

uint64_t sub_23C198784()
{
  return sub_23C19C0B8();
}

uint64_t sub_23C19878C()
{
  uint64_t v0;

  sub_23C19BE00(v0, 0x736B63617473, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

uint64_t sub_23C1987A0()
{
  uint64_t v0;

  sub_23C19BE00(v0, 0x5074756F6B726F77, 0xEC000000736E616CLL);
  return swift_bridgeObjectRelease(0xEC000000736E616CLL);
}

uint64_t sub_23C1987C0()
{
  uint64_t v0;
  uint64_t v1;

  sub_23C19BE00(v0, 0x736D6172676F7270, v1);
  return swift_bridgeObjectRelease(v1);
}

uint64_t sub_23C1987D4()
{
  uint64_t v0;

  sub_23C19BE00(v0, 0x64616F6C6E776F64, 0xEA00000000006465);
  return swift_bridgeObjectRelease(0xEA00000000006465);
}

void sub_23C1987F0()
{
  JUMPOUT(0x23C198810);
}

uint64_t sub_23C198834()
{
  return ((uint64_t (*)(uint64_t))sub_23C19C0B8)(2);
}

uint64_t sub_23C19883C()
{
  return ((uint64_t (*)(uint64_t))sub_23C19C0B8)(3);
}

uint64_t sub_23C19885C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23C19C0AC();
  sub_23C1986AC((uint64_t)v3, v1);
  return sub_23C19C0D0();
}

void sub_23C1988A0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_23C1986AC(a1, *v1);
}

uint64_t sub_23C1988A8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23C19C0AC();
  sub_23C1986AC((uint64_t)v3, v1);
  return sub_23C19C0D0();
}

void sub_23C1988E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_23C19B3C0(*a1, *a2);
}

uint64_t LibraryCanvasContentFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, _BYTE *a2, unint64_t *a3, uint64_t *a4)
{
  __int128 *v4;
  uint64_t State;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  int *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t (*v51)(unint64_t, char *, uint64_t);
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  int *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, _QWORD, uint64_t);
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  void (*v77)(char *, _QWORD, uint64_t);
  unint64_t v78;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  char v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  unint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  _BYTE *v104;
  uint64_t v105;
  unint64_t v106;
  unsigned int v107;
  void (*v108)(uint64_t, _QWORD, uint64_t);
  void (*v109)(char *, uint64_t, uint64_t);
  unsigned int v110;
  void (*v111)(uint64_t, _QWORD, uint64_t);
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t *v119;
  uint64_t v120;
  _OWORD v121[6];
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;

  v119 = a3;
  v114 = a1;
  State = type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x24BDAC7A8](State);
  v9 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_23C19B524();
  v116 = *(_QWORD *)(v115 - 8);
  v10 = MEMORY[0x24BDAC7A8](v115);
  v113 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v103 - v12;
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B304C8);
  v117 = *(_QWORD *)(v118 - 8);
  v14 = MEMORY[0x24BDAC7A8](v118);
  v16 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v103 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v22 = MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v103 - v26;
  v28 = *a4;
  v29 = v4[3];
  v124 = v4[2];
  v125 = v29;
  v30 = v4[5];
  v126 = v4[4];
  v127 = v30;
  v31 = v4[1];
  v122 = *v4;
  v123 = v31;
  switch(v28)
  {
    case 0:
      v32 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B30468);
      v33 = &v27[v32[16]];
      v34 = &v27[v32[20]];
      v35 = &v27[v32[24]];
      LOBYTE(v121[0]) = 0x80;
      sub_23C1997AC();
      sub_23C19BF2C();
      sub_23C19BE84();
      v36 = *MEMORY[0x24BE2B570];
      v37 = sub_23C19BD88();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v33, v36, v37);
      v38 = (_OWORD *)swift_allocObject();
      v39 = v125;
      v38[3] = v124;
      v38[4] = v39;
      v40 = v127;
      v38[5] = v126;
      v38[6] = v40;
      v41 = v123;
      v38[1] = v122;
      v38[2] = v41;
      *(_QWORD *)v35 = &unk_256B324A8;
      *((_QWORD *)v35 + 1) = v38;
      v42 = *MEMORY[0x24BE2B558];
      v43 = sub_23C19BD7C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v34, v42, v43);
      v44 = v117;
      v45 = v118;
      (*(void (**)(char *, _QWORD, uint64_t))(v117 + 104))(v27, *MEMORY[0x24BE2B438], v118);
      v46 = v119;
      v47 = *v119;
      sub_23C19A82C((uint64_t)&v122);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v47 = sub_23C15B240(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
      v49 = *(_QWORD *)(v47 + 16);
      v48 = *(_QWORD *)(v47 + 24);
      if (v49 >= v48 >> 1)
        v47 = sub_23C15B240(v48 > 1, v49 + 1, 1, v47);
      *(_QWORD *)(v47 + 16) = v49 + 1;
      v50 = v47
          + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))
          + *(_QWORD *)(v44 + 72) * v49;
      v51 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v44 + 32);
      v52 = v27;
      goto LABEL_25;
    case 1:
      *(_QWORD *)&v121[0] = 4;
      return LibraryCanvasContentFeature.reduce(localState:sharedState:sideEffects:action:)(v114, a2, v119, v121);
    case 2:
      LODWORD(v115) = a2[10];
      v116 = v23;
      v63 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B30468);
      v64 = &v20[v63[16]];
      v65 = &v20[v63[20]];
      v66 = &v20[v63[24]];
      LOBYTE(v121[0]) = -126;
      sub_23C1997AC();
      sub_23C19BF2C();
      sub_23C19BE9C();
      v67 = *MEMORY[0x24BE2B580];
      v68 = sub_23C19BD88();
      v69 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v68 - 8) + 104);
      LODWORD(v113) = v67;
      v112 = v68;
      v111 = v69;
      ((void (*)(char *, uint64_t))v69)(v64, v67);
      v70 = *MEMORY[0x24BE2B550];
      v71 = sub_23C19BD7C();
      v109 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 104);
      v109(v65, v70, v71);
      v72 = (_OWORD *)swift_allocObject();
      v73 = v125;
      v72[3] = v124;
      v72[4] = v73;
      v74 = v127;
      v72[5] = v126;
      v72[6] = v74;
      v75 = v123;
      v72[1] = v122;
      v72[2] = v75;
      *(_QWORD *)v66 = &unk_256B32468;
      *((_QWORD *)v66 + 1) = v72;
      LODWORD(v66) = *MEMORY[0x24BE2B438];
      v76 = v117;
      v77 = *(void (**)(char *, _QWORD, uint64_t))(v117 + 104);
      v77(v20, *MEMORY[0x24BE2B438], v118);
      v78 = *v119;
      sub_23C19A82C((uint64_t)&v122);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v110 = v70;
      v107 = v66;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v78 = sub_23C15B240(0, *(_QWORD *)(v78 + 16) + 1, 1, v78);
      v104 = a2;
      v81 = *(_QWORD *)(v78 + 16);
      v80 = *(_QWORD *)(v78 + 24);
      v108 = (void (*)(uint64_t, _QWORD, uint64_t))v77;
      if (v81 >= v80 >> 1)
        v78 = sub_23C15B240(v80 > 1, v81 + 1, 1, v78);
      *(_QWORD *)(v78 + 16) = v81 + 1;
      v106 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
      v105 = *(_QWORD *)(v76 + 72);
      v82 = v118;
      v117 = *(_QWORD *)(v76 + 32);
      ((void (*)(unint64_t, char *, uint64_t))v117)(v78 + v106 + v105 * v81, v20, v118);
      v83 = v119;
      *v119 = v78;
      v84 = v116;
      v85 = v116 + v63[16];
      v86 = (char *)(v116 + v63[20]);
      v87 = (_QWORD *)(v116 + v63[24]);
      v88 = v115;
      LOBYTE(v121[0]) = v115 | 0x40;
      sub_23C19BF2C();
      sub_23C19BE9C();
      v111(v85, v113, v112);
      v109(v86, v110, v71);
      v89 = swift_allocObject();
      v90 = v125;
      *(_OWORD *)(v89 + 48) = v124;
      *(_OWORD *)(v89 + 64) = v90;
      v91 = v127;
      *(_OWORD *)(v89 + 80) = v126;
      *(_OWORD *)(v89 + 96) = v91;
      v92 = v123;
      *(_OWORD *)(v89 + 16) = v122;
      *(_OWORD *)(v89 + 32) = v92;
      *(_BYTE *)(v89 + 112) = v88;
      *v87 = &unk_256B32478;
      v87[1] = v89;
      v108(v84, v107, v82);
      v93 = *v83;
      sub_23C19A82C((uint64_t)&v122);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v93 = sub_23C15B240(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
      v94 = v114;
      v95 = v104;
      v97 = *(_QWORD *)(v93 + 16);
      v96 = *(_QWORD *)(v93 + 24);
      if (v97 >= v96 >> 1)
        v93 = sub_23C15B240(v96 > 1, v97 + 1, 1, v93);
      *(_QWORD *)(v93 + 16) = v97 + 1;
      ((void (*)(unint64_t, uint64_t, uint64_t))v117)(v93 + v106 + v97 * v105, v116, v82);
      *v83 = v93;
      v121[2] = v124;
      v121[3] = v125;
      v121[4] = v126;
      v121[5] = v127;
      v121[0] = v122;
      v121[1] = v123;
      v120 = 4;
      return LibraryCanvasContentFeature.reduce(localState:sharedState:sideEffects:action:)(v94, v95, v83, &v120);
    case 3:
      LOBYTE(v121[0]) = a2[10] | 0x40;
      sub_23C1997AC();
      sub_23C19BF2C();
      v98 = v117;
      v45 = v118;
      (*(void (**)(char *, _QWORD, uint64_t))(v117 + 104))(v16, *MEMORY[0x24BE2B448], v118);
      v46 = v119;
      v47 = *v119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v47 = sub_23C15B240(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
      v100 = *(_QWORD *)(v47 + 16);
      v99 = *(_QWORD *)(v47 + 24);
      if (v100 >= v99 >> 1)
        v47 = sub_23C15B240(v99 > 1, v100 + 1, 1, v47);
      *(_QWORD *)(v47 + 16) = v100 + 1;
      v50 = v47
          + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))
          + *(_QWORD *)(v98 + 72) * v100;
      v51 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v98 + 32);
      v52 = v16;
LABEL_25:
      result = v51(v50, v52, v45);
      *v46 = v47;
      break;
    case 4:
      v112 = v25;
      v114 = v24;
      v101 = type metadata accessor for LibraryCanvasContentState();
      sub_23C180468((uint64_t)&a2[*(int *)(v101 + 28)], (uint64_t)v9);
      v102 = (char *)&loc_23C1991C8 + 4 * byte_23C1A3DAC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    default:
      v53 = type metadata accessor for LibraryCanvasContentState();
      v54 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
      v55 = v115;
      v54(v13, &a2[*(int *)(v53 + 32)], v115);
      v57 = a2[9];
      v58 = (uint64_t)&a2[*(int *)(v53 + 28)];
      LOBYTE(v121[0]) = a2[8];
      v56 = v121[0];
      BYTE1(v121[0]) = v57;
      v59 = swift_bridgeObjectRetain();
      LOBYTE(v53) = sub_23C1800B4(v59, (unsigned __int8 *)v121, v13);
      sub_23C191B38(v58);
      v60 = v58 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B30F18) + 64);
      *(_QWORD *)v58 = v28;
      *(_BYTE *)(v58 + 8) = v56;
      *(_BYTE *)(v58 + 9) = v57;
      v54((char *)v60, v13, v55);
      v61 = swift_storeEnumTagMultiPayload();
      if ((v53 & 1) != 0)
        ((void (*)(uint64_t))v126)(v61);
      result = (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v13, v55);
      break;
  }
  return result;
}

unint64_t sub_23C1997AC()
{
  unint64_t result;

  result = qword_256B32458;
  if (!qword_256B32458)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3E84, &type metadata for LibraryCanvasContentFeature.TaskIdentifier);
    atomic_store(result, &qword_256B32458);
  }
  return result;
}

uint64_t sub_23C1997F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[2] = sub_23C19BE78();
  v2[3] = sub_23C19BE6C();
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_23C15A9C8;
  return v6();
}

uint64_t sub_23C199864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = sub_23C19BE78();
  *(_QWORD *)(v2 + 40) = sub_23C19BE6C();
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a2;
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 80) + *(_QWORD *)(a2 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v4;
  *v4 = v2;
  v4[1] = sub_23C1998E4;
  return v6();
}

uint64_t sub_23C1998E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    MEMORY[0x2426188D4](v0);
  v6 = (uint64_t (*)(void))(**(int **)(v2 + 48) + *(_QWORD *)(v2 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 72) = v4;
  *v4 = v3;
  v4[1] = sub_23C199968;
  return v6();
}

uint64_t sub_23C199968(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;

  v4 = (_QWORD *)*v2;
  v4[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23C19BE54();
    return swift_task_switch();
  }
  else
  {
    v4[2] = a1;
    v4[11] = a1;
    v6 = (_QWORD *)swift_task_alloc();
    v4[12] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B324D0);
    *v6 = v4;
    v6[1] = sub_23C199A40;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C199A40()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23C19BE54();
  return swift_task_switch();
}

uint64_t sub_23C199AC0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C199AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = sub_23C19BE78();
  *(_QWORD *)(v2 + 40) = sub_23C19BE6C();
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a2;
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 80) + *(_QWORD *)(a2 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v4;
  *v4 = v2;
  v4[1] = sub_23C199B74;
  return v6();
}

uint64_t sub_23C199B74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    MEMORY[0x2426188D4](v0);
  v6 = (uint64_t (*)(void))(**(int **)(v2 + 48) + *(_QWORD *)(v2 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 72) = v4;
  *v4 = v3;
  v4[1] = sub_23C199BF8;
  return v6();
}

uint64_t sub_23C199BF8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v6;

  v4 = (_QWORD *)*v2;
  v4[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23C19BE54();
    return swift_task_switch();
  }
  else
  {
    v4[2] = a1;
    v4[11] = a1;
    v6 = (_QWORD *)swift_task_alloc();
    v4[12] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B324D0);
    *v6 = v4;
    v6[1] = sub_23C199CD0;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C199CD0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23C19BE54();
  return swift_task_switch();
}

uint64_t sub_23C199D50(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD *);

  v2[13] = a1;
  v2[14] = sub_23C19BE78();
  v2[15] = sub_23C19BE6C();
  v6 = (uint64_t (*)(_QWORD *))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v2[16] = v4;
  *v4 = v2;
  v4[1] = sub_23C199DD8;
  return v6(v2 + 2);
}

uint64_t sub_23C199DD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 144) = sub_23C19BE54();
  *(_QWORD *)(v2 + 152) = v3;
  return swift_task_switch();
}

uint64_t sub_23C199E64()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23C19BECC();
  swift_task_dealloc();
  v0[20] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[21] = v5;
  *v5 = v0;
  v5[1] = sub_23C199FB8;
  return sub_23C19BE60();
}

uint64_t sub_23C199FB8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C19A00C()
{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 184) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 96) = 4;
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B324D0);
    *v2 = v0;
    v2[1] = sub_23C19A0CC;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C19A0CC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C19A118()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[20] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C199FB8;
  return sub_23C19BE60();
}

uint64_t sub_23C19A1BC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C19A1F0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_BYTE *)(v3 + 194) = a3;
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = sub_23C19BE78();
  *(_QWORD *)(v3 + 128) = sub_23C19BE6C();
  v7 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 136) = v5;
  *v5 = v3;
  v5[1] = sub_23C19A27C;
  return v7(v3 + 16);
}

uint64_t sub_23C19A27C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 152) = sub_23C19BE54();
  *(_QWORD *)(v2 + 160) = v3;
  return swift_task_switch();
}

uint64_t sub_23C19A308()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[5];
  v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_23C19BECC();
  swift_task_dealloc();
  v0[21] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v5 = (_QWORD *)swift_task_alloc();
  v0[22] = v5;
  *v5 = v0;
  v5[1] = sub_23C19A45C;
  return sub_23C19BE60();
}

uint64_t sub_23C19A45C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23C19A4B0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  char v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v10;
  uint64_t v11;

  if (*(_BYTE *)(v0 + 192) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    if (qword_256B2FCF0 != -1)
      swift_once();
    v1 = sub_23C19B578();
    __swift_project_value_buffer(v1, (uint64_t)qword_256B404C0);
    v2 = sub_23C19B560();
    v3 = sub_23C19BEF0();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = *(_BYTE *)(v0 + 194);
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v11 = v6;
      *(_DWORD *)v5 = 136315138;
      *(_BYTE *)(v0 + 193) = v4;
      v7 = sub_23C19BDE8();
      *(_QWORD *)(v0 + 96) = sub_23C19AD80(v7, v8, &v11);
      sub_23C19BF08();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23C14B000, v2, v3, "finished items updated observation for %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242618A48](v6, -1, -1);
      MEMORY[0x242618A48](v5, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 104) = 4;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B324D0);
    *v10 = v0;
    v10[1] = sub_23C19A6D8;
    return sub_23C19BD70();
  }
}

uint64_t sub_23C19A6D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C19A724()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[21] = sub_23C19BE6C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[22] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23C19A45C;
  return sub_23C19BE60();
}

uint64_t sub_23C19A7D0()
{
  return objectdestroyTm_3();
}

uint64_t sub_23C19A7D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C199D50(a1, v1 + 16);
}

uint64_t sub_23C19A82C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C19A8A0()
{
  return objectdestroyTm_3();
}

uint64_t sub_23C19A8A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  v4 = v1 + 16;
  v5 = *(_BYTE *)(v1 + 112);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23C168174;
  return sub_23C19A1F0(a1, v4, v5);
}

uint64_t sub_23C19A90C()
{
  return objectdestroyTm_3();
}

uint64_t sub_23C19A914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C199AF4(a1, v1 + 16);
}

uint64_t sub_23C19A968()
{
  return objectdestroyTm_3();
}

uint64_t sub_23C19A970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C15AB44;
  return sub_23C199864(a1, v1 + 16);
}

uint64_t sub_23C19A9C4()
{
  return objectdestroyTm_3();
}

uint64_t objectdestroyTm_3()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C19AA24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C168174;
  return sub_23C1997F0(a1, v1 + 16);
}

unint64_t sub_23C19AA7C()
{
  unint64_t result;

  result = qword_256B324B0;
  if (!qword_256B324B0)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasContentAction, &type metadata for LibraryCanvasContentAction);
    atomic_store(result, (unint64_t *)&qword_256B324B0);
  }
  return result;
}

unint64_t sub_23C19AAC4()
{
  unint64_t result;

  result = qword_256B324B8;
  if (!qword_256B324B8)
  {
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasContentAction, &type metadata for LibraryCanvasContentAction);
    atomic_store(result, (unint64_t *)&qword_256B324B8);
  }
  return result;
}

unint64_t sub_23C19AB0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B324C0;
  if (!qword_256B324C0)
  {
    v1 = type metadata accessor for LibraryCanvasContentState();
    result = MEMORY[0x2426189D0](&protocol conformance descriptor for LibraryCanvasContentState, v1);
    atomic_store(result, (unint64_t *)&qword_256B324C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentFeature()
{
  return &type metadata for LibraryCanvasContentFeature;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasContentFeature.TaskIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1E)
    goto LABEL_17;
  if (a2 + 226 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 226) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 226;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 226;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 226;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 226 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 226) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1D)
    return ((uint64_t (*)(void))((char *)&loc_23C19AC50 + 4 * byte_23C1A3DB5[v4]))();
  *a1 = a2 - 30;
  return ((uint64_t (*)(void))((char *)sub_23C19AC84 + 4 * byte_23C1A3DB0[v4]))();
}

uint64_t sub_23C19AC84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C19AC8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C19AC94);
  return result;
}

uint64_t sub_23C19ACAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C19ACB4);
  *(_BYTE *)result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
  return result;
}

uint64_t sub_23C19ACB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C19ACC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C19ACCC(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return (v1 & 7u) + 2;
}

_BYTE *sub_23C19ACE8(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_23C19ACF8(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 7 | ((_BYTE)a2 << 6);
  else
    *result = (a2 + 6) & 7 | 0x80;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentFeature.TaskIdentifier()
{
  return &type metadata for LibraryCanvasContentFeature.TaskIdentifier;
}

unint64_t sub_23C19AD3C()
{
  unint64_t result;

  result = qword_256B324C8;
  if (!qword_256B324C8)
  {
    result = MEMORY[0x2426189D0](&unk_23C1A3E5C, &type metadata for LibraryCanvasContentFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B324C8);
  }
  return result;
}

uint64_t sub_23C19AD80(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23C19AE50(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23C19B470((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23C19B470((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23C19AE50(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23C19BF14();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23C19B008(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23C19BF5C();
  if (!v8)
  {
    sub_23C19BF74();
    __break(1u);
LABEL_17:
    result = sub_23C19BFA4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23C19B008(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23C19B09C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23C19B274(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23C19B274(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23C19B09C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23C19B210(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23C19BF38();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23C19BF74();
      __break(1u);
LABEL_10:
      v2 = sub_23C19BE18();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23C19BFA4();
    __break(1u);
LABEL_14:
    result = sub_23C19BF74();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23C19B210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B324D8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23C19B274(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B324D8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23C19BFA4();
  __break(1u);
  return result;
}

void sub_23C19B3C0(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) != 0x40)
        return;
      a1 &= 0x3Fu;
      goto LABEL_5;
    }
    ((void (*)(void))((char *)&loc_23C19B418 + 4 * byte_23C1A3DBA[a1 - 128]))();
  }
  else if (a2 <= 0x3Fu)
  {
LABEL_5:
    sub_23C16BDD0(a1);
  }
}

uint64_t sub_23C19B470(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t OfflineEnvironment.init(fetchSectionDescriptor:makeAssetBundleUpdatedStream:refreshCanvas:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

ValueMetadata *type metadata accessor for OfflineEnvironment()
{
  return &type metadata for OfflineEnvironment;
}

uint64_t sub_23C19B4D0()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23C19B4DC()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23C19B4E8()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23C19B4F4()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23C19B500()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23C19B50C()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_23C19B518()
{
  return MEMORY[0x24BDCECD8]();
}

uint64_t sub_23C19B524()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23C19B530()
{
  return MEMORY[0x24BE34F98]();
}

uint64_t sub_23C19B53C()
{
  return MEMORY[0x24BE34FA0]();
}

uint64_t sub_23C19B548()
{
  return MEMORY[0x24BE34C00]();
}

uint64_t sub_23C19B554()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_23C19B560()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23C19B56C()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23C19B578()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23C19B584()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_23C19B590()
{
  return MEMORY[0x24BDEB0B8]();
}

uint64_t sub_23C19B59C()
{
  return MEMORY[0x24BDEB0E8]();
}

uint64_t sub_23C19B5A8()
{
  return MEMORY[0x24BDEB210]();
}

uint64_t sub_23C19B5B4()
{
  return MEMORY[0x24BDEB230]();
}

uint64_t sub_23C19B5C0()
{
  return MEMORY[0x24BDEB418]();
}

uint64_t sub_23C19B5CC()
{
  return MEMORY[0x24BDEB560]();
}

uint64_t sub_23C19B5D8()
{
  return MEMORY[0x24BDEB790]();
}

uint64_t sub_23C19B5E4()
{
  return MEMORY[0x24BDEBBC8]();
}

uint64_t sub_23C19B5F0()
{
  return MEMORY[0x24BDEBC28]();
}

uint64_t sub_23C19B5FC()
{
  return MEMORY[0x24BDEBC38]();
}

uint64_t sub_23C19B608()
{
  return MEMORY[0x24BDEBC40]();
}

uint64_t sub_23C19B614()
{
  return MEMORY[0x24BDEBED0]();
}

uint64_t sub_23C19B620()
{
  return MEMORY[0x24BDEC120]();
}

uint64_t sub_23C19B62C()
{
  return MEMORY[0x24BDEC158]();
}

uint64_t sub_23C19B638()
{
  return MEMORY[0x24BDEC348]();
}

uint64_t sub_23C19B644()
{
  return MEMORY[0x24BDEC358]();
}

uint64_t sub_23C19B650()
{
  return MEMORY[0x24BDEC5A0]();
}

uint64_t sub_23C19B65C()
{
  return MEMORY[0x24BDEC6D8]();
}

uint64_t sub_23C19B668()
{
  return MEMORY[0x24BDEC6E0]();
}

uint64_t sub_23C19B674()
{
  return MEMORY[0x24BDEC7B0]();
}

uint64_t sub_23C19B680()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t sub_23C19B68C()
{
  return MEMORY[0x24BDED3B0]();
}

uint64_t sub_23C19B698()
{
  return MEMORY[0x24BDED408]();
}

uint64_t sub_23C19B6A4()
{
  return MEMORY[0x24BDED420]();
}

uint64_t sub_23C19B6B0()
{
  return MEMORY[0x24BDED918]();
}

uint64_t sub_23C19B6BC()
{
  return MEMORY[0x24BDED930]();
}

uint64_t sub_23C19B6C8()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_23C19B6D4()
{
  return MEMORY[0x24BDEDBF0]();
}

uint64_t sub_23C19B6E0()
{
  return MEMORY[0x24BDEDE90]();
}

uint64_t sub_23C19B6EC()
{
  return MEMORY[0x24BDEDE98]();
}

uint64_t sub_23C19B6F8()
{
  return MEMORY[0x24BDEDEA0]();
}

uint64_t sub_23C19B704()
{
  return MEMORY[0x24BDEDEE8]();
}

uint64_t sub_23C19B710()
{
  return MEMORY[0x24BDEDEF8]();
}

uint64_t sub_23C19B71C()
{
  return MEMORY[0x24BDEDF78]();
}

uint64_t sub_23C19B728()
{
  return MEMORY[0x24BDEE340]();
}

uint64_t sub_23C19B734()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t sub_23C19B740()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t sub_23C19B74C()
{
  return MEMORY[0x24BDEE468]();
}

uint64_t sub_23C19B758()
{
  return MEMORY[0x24BDEE478]();
}

uint64_t sub_23C19B764()
{
  return MEMORY[0x24BDEE488]();
}

uint64_t sub_23C19B770()
{
  return MEMORY[0x24BDEE490]();
}

uint64_t sub_23C19B77C()
{
  return MEMORY[0x24BDEE4A0]();
}

uint64_t sub_23C19B788()
{
  return MEMORY[0x24BDEE718]();
}

uint64_t sub_23C19B794()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t sub_23C19B7A0()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_23C19B7AC()
{
  return MEMORY[0x24BDEEF78]();
}

uint64_t sub_23C19B7B8()
{
  return MEMORY[0x24BDEF358]();
}

uint64_t sub_23C19B7C4()
{
  return MEMORY[0x24BDEF380]();
}

uint64_t sub_23C19B7D0()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t sub_23C19B7DC()
{
  return MEMORY[0x24BDEF3B8]();
}

uint64_t sub_23C19B7E8()
{
  return MEMORY[0x24BDEF5C8]();
}

uint64_t sub_23C19B7F4()
{
  return MEMORY[0x24BDEF5D8]();
}

uint64_t sub_23C19B800()
{
  return MEMORY[0x24BDEFBF0]();
}

uint64_t sub_23C19B80C()
{
  return MEMORY[0x24BDEFCA8]();
}

uint64_t sub_23C19B818()
{
  return MEMORY[0x24BDEFCC8]();
}

uint64_t sub_23C19B824()
{
  return MEMORY[0x24BDF02E8]();
}

uint64_t sub_23C19B830()
{
  return MEMORY[0x24BDF02F8]();
}

uint64_t sub_23C19B83C()
{
  return MEMORY[0x24BDF0440]();
}

uint64_t sub_23C19B848()
{
  return MEMORY[0x24BDF0468]();
}

uint64_t sub_23C19B854()
{
  return MEMORY[0x24BDF0478]();
}

uint64_t sub_23C19B860()
{
  return MEMORY[0x24BDF0998]();
}

uint64_t sub_23C19B86C()
{
  return MEMORY[0x24BDF0B78]();
}

uint64_t sub_23C19B878()
{
  return MEMORY[0x24BDF0F68]();
}

uint64_t sub_23C19B884()
{
  return MEMORY[0x24BDF0F78]();
}

uint64_t sub_23C19B890()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_23C19B89C()
{
  return MEMORY[0x24BDF1450]();
}

uint64_t sub_23C19B8A8()
{
  return MEMORY[0x24BDF1458]();
}

uint64_t sub_23C19B8B4()
{
  return MEMORY[0x24BDF1468]();
}

uint64_t sub_23C19B8C0()
{
  return MEMORY[0x24BDF14A0]();
}

uint64_t sub_23C19B8CC()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t sub_23C19B8D8()
{
  return MEMORY[0x24BDF14C0]();
}

uint64_t sub_23C19B8E4()
{
  return MEMORY[0x24BDF14C8]();
}

uint64_t sub_23C19B8F0()
{
  return MEMORY[0x24BDF14E0]();
}

uint64_t sub_23C19B8FC()
{
  return MEMORY[0x24BDF14E8]();
}

uint64_t sub_23C19B908()
{
  return MEMORY[0x24BDF14F8]();
}

uint64_t sub_23C19B914()
{
  return MEMORY[0x24BDF1510]();
}

uint64_t sub_23C19B920()
{
  return MEMORY[0x24BDF15F8]();
}

uint64_t sub_23C19B92C()
{
  return MEMORY[0x24BDF16A8]();
}

uint64_t sub_23C19B938()
{
  return MEMORY[0x24BDF16D0]();
}

uint64_t sub_23C19B944()
{
  return MEMORY[0x24BDF1700]();
}

uint64_t sub_23C19B950()
{
  return MEMORY[0x24BDF1790]();
}

uint64_t sub_23C19B95C()
{
  return MEMORY[0x24BDF1798]();
}

uint64_t sub_23C19B968()
{
  return MEMORY[0x24BDF17D8]();
}

uint64_t sub_23C19B974()
{
  return MEMORY[0x24BDF17F8]();
}

uint64_t sub_23C19B980()
{
  return MEMORY[0x24BDF1818]();
}

uint64_t sub_23C19B98C()
{
  return MEMORY[0x24BDF1828]();
}

uint64_t sub_23C19B998()
{
  return MEMORY[0x24BDF1BE8]();
}

uint64_t sub_23C19B9A4()
{
  return MEMORY[0x24BDF1D18]();
}

uint64_t sub_23C19B9B0()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_23C19B9BC()
{
  return MEMORY[0x24BE35198]();
}

uint64_t sub_23C19B9C8()
{
  return MEMORY[0x24BE37BF8]();
}

uint64_t sub_23C19B9D4()
{
  return MEMORY[0x24BE37C18]();
}

uint64_t sub_23C19B9E0()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_23C19B9EC()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_23C19B9F8()
{
  return MEMORY[0x24BDF2100]();
}

uint64_t sub_23C19BA04()
{
  return MEMORY[0x24BDF2138]();
}

uint64_t sub_23C19BA10()
{
  return MEMORY[0x24BDF21B0]();
}

uint64_t sub_23C19BA1C()
{
  return MEMORY[0x24BDF2228]();
}

uint64_t sub_23C19BA28()
{
  return MEMORY[0x24BDF22A0]();
}

uint64_t sub_23C19BA34()
{
  return MEMORY[0x24BDF22C8]();
}

uint64_t sub_23C19BA40()
{
  return MEMORY[0x24BDF23D8]();
}

uint64_t sub_23C19BA4C()
{
  return MEMORY[0x24BDF24B8]();
}

uint64_t sub_23C19BA58()
{
  return MEMORY[0x24BDF24C0]();
}

uint64_t sub_23C19BA64()
{
  return MEMORY[0x24BDF2650]();
}

uint64_t sub_23C19BA70()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_23C19BA7C()
{
  return MEMORY[0x24BDF2858]();
}

uint64_t sub_23C19BA88()
{
  return MEMORY[0x24BDF28B8]();
}

uint64_t sub_23C19BA94()
{
  return MEMORY[0x24BDF2CD8]();
}

uint64_t sub_23C19BAA0()
{
  return MEMORY[0x24BDF2D30]();
}

uint64_t sub_23C19BAAC()
{
  return MEMORY[0x24BDF2D50]();
}

uint64_t sub_23C19BAB8()
{
  return MEMORY[0x24BDF2D60]();
}

uint64_t sub_23C19BAC4()
{
  return MEMORY[0x24BDF2FD8]();
}

uint64_t sub_23C19BAD0()
{
  return MEMORY[0x24BDF30F8]();
}

uint64_t sub_23C19BADC()
{
  return MEMORY[0x24BDF3628]();
}

uint64_t sub_23C19BAE8()
{
  return MEMORY[0x24BDF3630]();
}

uint64_t sub_23C19BAF4()
{
  return MEMORY[0x24BDF3740]();
}

uint64_t sub_23C19BB00()
{
  return MEMORY[0x24BDF37B0]();
}

uint64_t sub_23C19BB0C()
{
  return MEMORY[0x24BDF37D8]();
}

uint64_t sub_23C19BB18()
{
  return MEMORY[0x24BDF37E0]();
}

uint64_t sub_23C19BB24()
{
  return MEMORY[0x24BDF38C0]();
}

uint64_t sub_23C19BB30()
{
  return MEMORY[0x24BDF38C8]();
}

uint64_t sub_23C19BB3C()
{
  return MEMORY[0x24BDF38E0]();
}

uint64_t sub_23C19BB48()
{
  return MEMORY[0x24BDF3900]();
}

uint64_t sub_23C19BB54()
{
  return MEMORY[0x24BDF3940]();
}

uint64_t sub_23C19BB60()
{
  return MEMORY[0x24BDF3C40]();
}

uint64_t sub_23C19BB6C()
{
  return MEMORY[0x24BDF3CA8]();
}

uint64_t sub_23C19BB78()
{
  return MEMORY[0x24BDF3CF0]();
}

uint64_t sub_23C19BB84()
{
  return MEMORY[0x24BDF3D10]();
}

uint64_t sub_23C19BB90()
{
  return MEMORY[0x24BDF3D30]();
}

uint64_t sub_23C19BB9C()
{
  return MEMORY[0x24BDF3D78]();
}

uint64_t sub_23C19BBA8()
{
  return MEMORY[0x24BDF3E70]();
}

uint64_t sub_23C19BBB4()
{
  return MEMORY[0x24BDF3F18]();
}

uint64_t sub_23C19BBC0()
{
  return MEMORY[0x24BDF3F28]();
}

uint64_t sub_23C19BBCC()
{
  return MEMORY[0x24BDF3F80]();
}

uint64_t sub_23C19BBD8()
{
  return MEMORY[0x24BDF4048]();
}

uint64_t sub_23C19BBE4()
{
  return MEMORY[0x24BDF40C0]();
}

uint64_t sub_23C19BBF0()
{
  return MEMORY[0x24BDF4150]();
}

uint64_t sub_23C19BBFC()
{
  return MEMORY[0x24BDF4280]();
}

uint64_t sub_23C19BC08()
{
  return MEMORY[0x24BDF4290]();
}

uint64_t sub_23C19BC14()
{
  return MEMORY[0x24BDF42A8]();
}

uint64_t sub_23C19BC20()
{
  return MEMORY[0x24BDF42B0]();
}

uint64_t sub_23C19BC2C()
{
  return MEMORY[0x24BDF4300]();
}

uint64_t sub_23C19BC38()
{
  return MEMORY[0x24BDF4340]();
}

uint64_t sub_23C19BC44()
{
  return MEMORY[0x24BDF4470]();
}

uint64_t sub_23C19BC50()
{
  return MEMORY[0x24BDF4480]();
}

uint64_t sub_23C19BC5C()
{
  return MEMORY[0x24BDF46D8]();
}

uint64_t sub_23C19BC68()
{
  return MEMORY[0x24BDF46E0]();
}

uint64_t sub_23C19BC74()
{
  return MEMORY[0x24BDF4728]();
}

uint64_t sub_23C19BC80()
{
  return MEMORY[0x24BDF4730]();
}

uint64_t sub_23C19BC8C()
{
  return MEMORY[0x24BDF47B0]();
}

uint64_t sub_23C19BC98()
{
  return MEMORY[0x24BDF47B8]();
}

uint64_t sub_23C19BCA4()
{
  return MEMORY[0x24BE2B3B8]();
}

uint64_t sub_23C19BCB0()
{
  return MEMORY[0x24BDF4908]();
}

uint64_t sub_23C19BCBC()
{
  return MEMORY[0x24BDF4918]();
}

uint64_t sub_23C19BCC8()
{
  return MEMORY[0x24BDF49A0]();
}

uint64_t sub_23C19BCD4()
{
  return MEMORY[0x24BDF49B8]();
}

uint64_t sub_23C19BCE0()
{
  return MEMORY[0x24BDF4AC8]();
}

uint64_t sub_23C19BCEC()
{
  return MEMORY[0x24BDF4AE0]();
}

uint64_t sub_23C19BCF8()
{
  return MEMORY[0x24BDF4D08]();
}

uint64_t sub_23C19BD04()
{
  return MEMORY[0x24BDF4EF0]();
}

uint64_t sub_23C19BD10()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_23C19BD1C()
{
  return MEMORY[0x24BDF4F20]();
}

uint64_t sub_23C19BD28()
{
  return MEMORY[0x24BDF4FE0]();
}

uint64_t sub_23C19BD34()
{
  return MEMORY[0x24BDF53F0]();
}

uint64_t sub_23C19BD40()
{
  return MEMORY[0x24BDF5418]();
}

uint64_t sub_23C19BD4C()
{
  return MEMORY[0x24BDF54A0]();
}

uint64_t sub_23C19BD58()
{
  return MEMORY[0x24BDF54A8]();
}

uint64_t sub_23C19BD64()
{
  return MEMORY[0x24BDF54B0]();
}

uint64_t sub_23C19BD70()
{
  return MEMORY[0x24BE2B460]();
}

uint64_t sub_23C19BD7C()
{
  return MEMORY[0x24BE2B560]();
}

uint64_t sub_23C19BD88()
{
  return MEMORY[0x24BE2B588]();
}

uint64_t sub_23C19BD94()
{
  return MEMORY[0x24BE2B598]();
}

uint64_t sub_23C19BDA0()
{
  return MEMORY[0x24BE2B5A8]();
}

uint64_t sub_23C19BDAC()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23C19BDB8()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23C19BDC4()
{
  return MEMORY[0x24BDCF8D8]();
}

uint64_t sub_23C19BDD0()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_23C19BDDC()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23C19BDE8()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23C19BDF4()
{
  return MEMORY[0x24BE37C28]();
}

uint64_t sub_23C19BE00()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23C19BE0C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23C19BE18()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23C19BE24()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_23C19BE30()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23C19BE3C()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23C19BE48()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23C19BE54()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23C19BE60()
{
  return MEMORY[0x24BEE68D8]();
}

uint64_t sub_23C19BE6C()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_23C19BE78()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_23C19BE84()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_23C19BE90()
{
  return MEMORY[0x24BEE6970]();
}

uint64_t sub_23C19BE9C()
{
  return MEMORY[0x24BEE6980]();
}

uint64_t sub_23C19BEA8()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23C19BEB4()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23C19BEC0()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_23C19BECC()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_23C19BED8()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_23C19BEE4()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23C19BEF0()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23C19BEFC()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23C19BF08()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23C19BF14()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23C19BF20()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23C19BF2C()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_23C19BF38()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23C19BF44()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23C19BF50()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23C19BF5C()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23C19BF68()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23C19BF74()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23C19BF80()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23C19BF8C()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23C19BF98()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23C19BFA4()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23C19BFB0()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23C19BFBC()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_23C19BFC8()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23C19BFD4()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23C19BFE0()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23C19BFEC()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23C19BFF8()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23C19C004()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23C19C010()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_23C19C01C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23C19C028()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23C19C034()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23C19C040()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23C19C04C()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23C19C058()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23C19C064()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23C19C070()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_23C19C07C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23C19C088()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23C19C094()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23C19C0A0()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_23C19C0AC()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23C19C0B8()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23C19C0C4()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23C19C0D0()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23C19C0DC()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23C19C0E8()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23C19C0F4()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23C19C100()
{
  return MEMORY[0x24BEE4A10]();
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFF0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x24BEE4DC8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

