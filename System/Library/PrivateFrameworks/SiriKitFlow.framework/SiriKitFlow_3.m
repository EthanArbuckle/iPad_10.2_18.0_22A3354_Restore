void sub_1C2A27BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  char v10;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_5_36();
    sub_1C2CFDCF8();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_36();
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_7_36();
      v6 = v6 && v5 == v3;
      if (!v6 && (OUTLINED_FUNCTION_42_0() & 1) == 0)
      {
        OUTLINED_FUNCTION_2_36();
        if ((v7 & 1) != 0)
        {
          do
          {
            OUTLINED_FUNCTION_7_36();
            if (v6 && v8 == v3)
              break;
            if ((OUTLINED_FUNCTION_42_0() & 1) != 0)
              break;
            OUTLINED_FUNCTION_2_36();
          }
          while ((v10 & 1) != 0);
        }
      }
    }
  }
  OUTLINED_FUNCTION_8_32();
}

void sub_1C2A27C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  char v10;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_5_36();
    sub_1C2CFDCF8();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_3_36();
    if ((v4 & 1) != 0)
    {
      OUTLINED_FUNCTION_7_36();
      v6 = v6 && v5 == v3;
      if (!v6 && (OUTLINED_FUNCTION_42_0() & 1) == 0)
      {
        OUTLINED_FUNCTION_2_36();
        if ((v7 & 1) != 0)
        {
          do
          {
            OUTLINED_FUNCTION_7_36();
            if (v6 && v8 == v3)
              break;
            if ((OUTLINED_FUNCTION_42_0() & 1) != 0)
              break;
            OUTLINED_FUNCTION_2_36();
          }
          while ((v10 & 1) != 0);
        }
      }
    }
  }
  OUTLINED_FUNCTION_8_32();
}

void sub_1C2A27D50(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t *v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  char v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;

  if (!a2)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v11 = sub_1C2CFD878();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED7AA1B0);
    v12 = sub_1C2CFD86C();
    v13 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1C28B6000, v12, v13, "Provided DialogPhase text is nil", v14, 2u);
      OUTLINED_FUNCTION_11_0();
    }

    goto LABEL_13;
  }
  v6 = sub_1C2CFDDC4();
  if (v6 != 0x656C776F6E6B6361 || v7 != 0xEF746E656D656764)
  {
    v9 = v6;
    v10 = v7;
    if ((OUTLINED_FUNCTION_1_30() & 1) == 0)
    {
      v17 = v9 == 0x64656C65636E6163 && v10 == 0xE800000000000000;
      if (v17 || (OUTLINED_FUNCTION_1_30() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED7A7FE0 != -1)
          swift_once();
        v15 = &qword_1ED7A7FD0;
        goto LABEL_17;
      }
      v18 = v9 == 0x6369666972616C63 && v10 == 0xED00006E6F697461;
      if (v18 || (OUTLINED_FUNCTION_1_30() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED7A7F80 != -1)
          swift_once();
        v15 = &qword_1ED7A7F68;
        goto LABEL_17;
      }
      v19 = v9 == 0x6974656C706D6F63 && v10 == 0xEA00000000006E6FLL;
      if (v19 || (OUTLINED_FUNCTION_1_30() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED7A93B8 != -1)
          swift_once();
        v15 = &qword_1ED7A93A8;
        goto LABEL_17;
      }
      v20 = v9 == 0x616D7269666E6F63 && v10 == 0xEC0000006E6F6974;
      if (v20 || (OUTLINED_FUNCTION_1_30() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED7A7F60 != -1)
          swift_once();
        v15 = &qword_1ED7A7F50;
        goto LABEL_17;
      }
      v21 = v9 == 0x656D7269666E6F63 && v10 == 0xE900000000000064;
      if (v21 || (OUTLINED_FUNCTION_1_30() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED7A7FF8 != -1)
          swift_once();
        v15 = &qword_1ED7A7FE8;
        goto LABEL_17;
      }
      v22 = v9 == 0x726F727265 && v10 == 0xE500000000000000;
      if (v22 || (OUTLINED_FUNCTION_1_30() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED7A7FB0 != -1)
          swift_once();
        v15 = &qword_1ED7A7FA0;
        goto LABEL_17;
      }
      v23 = v9 == 0x697463656C666572 && v10 == 0xEA00000000006E6FLL;
      if (v23 || (OUTLINED_FUNCTION_1_30() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED7A7F40 != -1)
          swift_once();
        v15 = &qword_1ED7A7F30;
        goto LABEL_17;
      }
      v24 = v9 == 0x737574617473 && v10 == 0xE600000000000000;
      if (v24 || (OUTLINED_FUNCTION_1_30() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED7A7FC8 != -1)
          swift_once();
        v15 = &qword_1ED7A7FB8;
        goto LABEL_17;
      }
      v25 = v9 == 0x7972616D6D7573 && v10 == 0xE700000000000000;
      if (v25 || (v26 = OUTLINED_FUNCTION_1_30(), OUTLINED_FUNCTION_50_0(), OUTLINED_FUNCTION_32_0(), (v26 & 1) != 0))
      {
        swift_bridgeObjectRelease();
        if (qword_1ED7A93D8 != -1)
          swift_once();
        v15 = &qword_1ED7A93C0;
        goto LABEL_17;
      }
      if (qword_1ED7AA040 != -1)
        swift_once();
      v27 = sub_1C2CFD878();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED7AA1B0);
      OUTLINED_FUNCTION_50_0();
      v28 = sub_1C2CFD86C();
      v29 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        v31 = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v30 = 136315138;
        OUTLINED_FUNCTION_50_0();
        sub_1C28BB120(a1, a2, &v31);
        sub_1C2CFE4D8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C28B6000, v28, v29, "Cannot convert text '%s' into a valid DialogPhase", v30, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }

      swift_bridgeObjectRelease_n();
LABEL_13:
      *a3 = 0;
      a3[1] = 0;
      return;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1ED7A7F98 != -1)
    swift_once();
  v15 = &qword_1ED7A7F88;
LABEL_17:
  v16 = v15[1];
  *a3 = *v15;
  a3[1] = v16;
  swift_bridgeObjectRetain();
}

uint64_t sub_1C2A28518()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDD58();
  qword_1ED7A7F88 = result;
  unk_1ED7A7F90 = v1;
  return result;
}

uint64_t static DialogPhase.acknowledgement.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1ED7A7F98, &qword_1ED7A7F88, a1);
}

uint64_t sub_1C2A28560()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDD58();
  qword_1ED7A7F30 = result;
  *(_QWORD *)algn_1ED7A7F38 = v1;
  return result;
}

uint64_t static DialogPhase.reflection.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1ED7A7F40, &qword_1ED7A7F30, a1);
}

uint64_t sub_1C2A285A8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDD58();
  qword_1ED7A7FB8 = result;
  unk_1ED7A7FC0 = v1;
  return result;
}

uint64_t static DialogPhase.status.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1ED7A7FC8, &qword_1ED7A7FB8, a1);
}

uint64_t sub_1C2A285F0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDD58();
  qword_1ED7A7F68 = result;
  *(_QWORD *)algn_1ED7A7F70 = v1;
  return result;
}

uint64_t sub_1C2A2861C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDD58();
  qword_1ED7A7F50 = result;
  *(_QWORD *)algn_1ED7A7F58 = v1;
  return result;
}

uint64_t sub_1C2A28648()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDD58();
  qword_1ED7A93A8 = result;
  unk_1ED7A93B0 = v1;
  return result;
}

uint64_t sub_1C2A28674()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDD58();
  qword_1ED7A7FA0 = result;
  *(_QWORD *)algn_1ED7A7FA8 = v1;
  return result;
}

uint64_t static DialogPhase.error.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1ED7A7FB0, &qword_1ED7A7FA0, a1);
}

uint64_t sub_1C2A286BC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDD58();
  qword_1ED7A7FE8 = result;
  unk_1ED7A7FF0 = v1;
  return result;
}

uint64_t static DialogPhase.confirmed.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1ED7A7FF8, &qword_1ED7A7FE8, a1);
}

uint64_t sub_1C2A28704()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDD58();
  qword_1ED7A7FD0 = result;
  *(_QWORD *)algn_1ED7A7FD8 = v1;
  return result;
}

uint64_t static DialogPhase.canceled.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1ED7A7FE0, &qword_1ED7A7FD0, a1);
}

uint64_t sub_1C2A2874C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;

  if (*a1 != -1)
    swift_once();
  v7 = *a3;
  *a4 = *a2;
  a4[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2A2879C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A80C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D07C30;
  if (qword_1ED7A7F98 != -1)
    swift_once();
  v1 = unk_1ED7A7F90;
  *(_QWORD *)(inited + 32) = qword_1ED7A7F88;
  *(_QWORD *)(inited + 40) = v1;
  v2 = qword_1ED7A7F40;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)algn_1ED7A7F38;
  *(_QWORD *)(inited + 48) = qword_1ED7A7F30;
  *(_QWORD *)(inited + 56) = v3;
  v4 = qword_1ED7A7FC8;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = unk_1ED7A7FC0;
  *(_QWORD *)(inited + 64) = qword_1ED7A7FB8;
  *(_QWORD *)(inited + 72) = v5;
  v6 = qword_1ED7A7F80;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = *(_QWORD *)algn_1ED7A7F70;
  *(_QWORD *)(inited + 80) = qword_1ED7A7F68;
  *(_QWORD *)(inited + 88) = v7;
  v8 = qword_1ED7A93D8;
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  v9 = unk_1ED7A93C8;
  *(_QWORD *)(inited + 96) = qword_1ED7A93C0;
  *(_QWORD *)(inited + 104) = v9;
  v10 = qword_1ED7A7F60;
  swift_bridgeObjectRetain();
  if (v10 != -1)
    swift_once();
  v11 = *(_QWORD *)algn_1ED7A7F58;
  *(_QWORD *)(inited + 112) = qword_1ED7A7F50;
  *(_QWORD *)(inited + 120) = v11;
  v12 = qword_1ED7A93B8;
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  v13 = unk_1ED7A93B0;
  *(_QWORD *)(inited + 128) = qword_1ED7A93A8;
  *(_QWORD *)(inited + 136) = v13;
  v14 = qword_1ED7A7FB0;
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once();
  v15 = *(_QWORD *)algn_1ED7A7FA8;
  *(_QWORD *)(inited + 144) = qword_1ED7A7FA0;
  *(_QWORD *)(inited + 152) = v15;
  v16 = qword_1ED7A7FF8;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = unk_1ED7A7FF0;
  *(_QWORD *)(inited + 160) = qword_1ED7A7FE8;
  *(_QWORD *)(inited + 168) = v17;
  v18 = qword_1ED7A7FE0;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = *(_QWORD *)algn_1ED7A7FD8;
  *(_QWORD *)(inited + 176) = qword_1ED7A7FD0;
  *(_QWORD *)(inited + 184) = v19;
  swift_bridgeObjectRetain();
  v20 = sub_1C2A279E4(inited);
  swift_bridgeObjectRelease();
  result = sub_1C2AB0C80(v20);
  qword_1ED7A7F48 = result;
  return result;
}

SiriKitFlow::DialogPhase_optional __swiftcall DialogPhase.init(aceValue:)(SiriKitFlow::DialogPhase_optional aceValue)
{
  uint64_t *v1;
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;

  v2 = v1;
  if (aceValue.value.aceValue._object)
  {
    object = aceValue.value.aceValue._object;
    countAndFlagsBits = aceValue.value.aceValue._countAndFlagsBits;
    if (qword_1ED7A6428 != -1)
      swift_once();
    sub_1C2A27BD0(countAndFlagsBits, (uint64_t)object, qword_1ED7A7F48);
    if ((aceValue.value.aceValue._countAndFlagsBits & 1) != 0)
    {
      *v2 = countAndFlagsBits;
      v2[1] = (uint64_t)object;
      return aceValue;
    }
    aceValue.value.aceValue._countAndFlagsBits = OUTLINED_FUNCTION_32_0();
  }
  *v2 = 0;
  v2[1] = 0;
  return aceValue;
}

uint64_t DialogPhase.hash(into:)()
{
  OUTLINED_FUNCTION_12();
  sub_1C2CFDCF8();
  return swift_bridgeObjectRelease();
}

uint64_t DialogPhase.hashValue.getter()
{
  sub_1C2CFEAB4();
  OUTLINED_FUNCTION_12();
  sub_1C2CFDCF8();
  OUTLINED_FUNCTION_32_0();
  return OUTLINED_FUNCTION_2();
}

uint64_t sub_1C2A28B80()
{
  sub_1C2CFEAB4();
  swift_bridgeObjectRetain();
  sub_1C2CFDCF8();
  swift_bridgeObjectRelease();
  return sub_1C2CFEAD8();
}

unint64_t sub_1C2A28BD8()
{
  unint64_t result;

  result = qword_1EF78F858;
  if (!qword_1EF78F858)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for DialogPhase, &type metadata for DialogPhase);
    atomic_store(result, (unint64_t *)&qword_1EF78F858);
  }
  return result;
}

unint64_t sub_1C2A28C14()
{
  unint64_t result;

  result = qword_1ED7A6158;
  if (!qword_1ED7A6158)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED7A6158);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_30()
{
  return sub_1C2CFE9DC();
}

uint64_t OUTLINED_FUNCTION_5_36()
{
  return sub_1C2CFEAB4();
}

uint64_t OUTLINED_FUNCTION_7_36()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + 16 * v1);
}

id OUTLINED_FUNCTION_12_32()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v0 + 48) + 8 * v1);
}

void sub_1C2A28CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[88];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  OUTLINED_FUNCTION_11_31();
  v68 = v1;
  v69 = v4;
  v34 = v5;
  v36 = v6;
  v32 = v7;
  v8 = v3 - v2;
  if (__OFSUB__(v3, v2))
    goto LABEL_18;
  if (v8)
  {
    v9 = v3;
    v10 = v2;
    v67 = MEMORY[0x1E0DEE9D8];
    sub_1C28E98D4();
    if (v8 < 0)
    {
LABEL_19:
      __break(1u);
      return;
    }
    v19 = v67;
    OUTLINED_FUNCTION_14_36(v11, v12, v13, v14, v15, v16, v17, v18, v30, v32, v34, v36, v38, v39, v40, v41, v42, v43, v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v10,
      SHIDWORD(v10),
      v66[0]);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_34_1();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    for (i = v10 + 1; ; ++i)
    {
      OUTLINED_FUNCTION_34_20(&v38, v66);
      v67 = v19;
      v21 = *(_QWORD *)(v19 + 16);
      if (v21 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_1C28E98D4();
        v19 = v67;
      }
      *(_QWORD *)(v19 + 16) = v21 + 1;
      v22 = OUTLINED_FUNCTION_34_20((void *)(v19 + 224 * v21 + 32), &v38);
      if (v9 < v10)
        break;
      if (i - 1 >= v9)
        goto LABEL_17;
      if (v9 == i)
      {
        OUTLINED_FUNCTION_34_1();
        goto LABEL_15;
      }
      OUTLINED_FUNCTION_14_36((uint64_t)v22, v23, v24, v25, v26, v27, v28, v29, v31, v33, v35, v37, v38, v39, v40, v41, v42, v43, v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        i,
        SHIDWORD(i),
        v66[0]);
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_34_1();
LABEL_15:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(Swift::Bool defaultBehavior)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  if (v2 != 2)
    return v2 != 1;
  return defaultBehavior;
}

uint64_t TemplatingResult.meta.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TemplatingResult.dialogIdentifier.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2A28EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  if (a3 < 0)
  {
    result = sub_1C2CFE7F0();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v6 = (_QWORD *)sub_1C2CFE028();
      v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *v9 = a2;
            OUTLINED_FUNCTION_33_0();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        OUTLINED_FUNCTION_33_0();
      }
    }
    else
    {
      OUTLINED_FUNCTION_8();
      return MEMORY[0x1E0DEE9D8];
    }
    return (uint64_t)v7;
  }
  return result;
}

void TemplatingResult.init(templateIdentifier:speak:print:meta:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_41_15();
  v15 = OUTLINED_FUNCTION_20_31(v11, v12, v13, v14);
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_12();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_57_1();
  OUTLINED_FUNCTION_38_19();
  OUTLINED_FUNCTION_36_22();
  *(_QWORD *)v9 = v8;
  *(_QWORD *)(v9 + 8) = v7;
  *(_QWORD *)(v9 + 16) = v16;
  *(_QWORD *)(v9 + 24) = a5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v5;
  *(_OWORD *)(v9 + 48) = xmmword_1C2D00820;
  *(_QWORD *)(v9 + 64) = v15;
  OUTLINED_FUNCTION_26_23();
}

void TemplatingResult.init(templateIdentifier:speak:print:behaviorAfterSpeaking:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_42_16();
  OUTLINED_FUNCTION_45_14();
  v6 = *v5;
  v7 = v5[1];
  v12 = OUTLINED_FUNCTION_20_31(v8, v9, v10, v11);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_8_33();
  *v4 = v3;
  v4[1] = v2;
  v13 = MEMORY[0x1E0DEE9E0];
  v4[2] = v14;
  v4[3] = v13;
  v4[4] = v1;
  v4[5] = v0;
  v4[6] = v6;
  v4[7] = v7;
  v4[8] = v12;
  OUTLINED_FUNCTION_7_0();
}

void TemplatingResult.init(templateIdentifier:sections:behaviorAfterSpeaking:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = *a4;
  v10 = a4[1];
  OUTLINED_FUNCTION_39_17();
  v11 = sub_1C28F8E80(a3);
  v13 = v12;
  v15 = v14;
  OUTLINED_FUNCTION_8();
  *a5 = a1;
  a5[1] = a2;
  v16 = MEMORY[0x1E0DEE9E0];
  a5[2] = a3;
  a5[3] = v16;
  a5[4] = v15;
  a5[5] = v13;
  a5[6] = v9;
  a5[7] = v10;
  a5[8] = v11;
  OUTLINED_FUNCTION_1();
}

void TemplatingSection.id.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

uint64_t TemplatingSection.content.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[3];
  v4 = v1[4];
  v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t TemplatingSection.caption.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_3_37(v1[6], v1[7], v1[8], v1[9], a1);
}

uint64_t TemplatingSection.spokenOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t TemplatingSection.unfilteredContent.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_3_37(v1[11], v1[12], v1[13], v1[14], a1);
}

uint64_t TemplatingSection.unfilteredCaption.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_3_37(v1[15], v1[16], v1[17], v1[18], a1);
}

uint64_t TemplatingSection.redactedContent.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_3_37(v1[19], v1[20], v1[21], v1[22], a1);
}

uint64_t TemplatingSection.redactedCaption.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_3_37(v1[23], v1[24], v1[25], v1[26], a1);
}

uint64_t TemplatingSection.isApprovedForGrading.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 216);
}

void __swiftcall TemplatingSection.init(id:content:caption:spokenOnly:unfilteredContent:unfilteredCaption:redactedContent:redactedCaption:isApprovedForGrading:)(SiriKitFlow::TemplatingSection *__return_ptr retstr, Swift::String id, SiriKitFlow::TemplatingText content, SiriKitFlow::TemplatingText_optional caption, Swift::Bool spokenOnly, SiriKitFlow::TemplatingText_optional unfilteredContent, SiriKitFlow::TemplatingText_optional unfilteredCaption, SiriKitFlow::TemplatingText_optional redactedContent, SiriKitFlow::TemplatingText_optional redactedCaption, Swift::Bool isApprovedForGrading)
{
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String_optional v12;
  Swift::String_optional v13;
  Swift::String_optional v14;
  Swift::String_optional v15;
  uint64_t v16;
  void *v17;

  v10 = *(Swift::String *)content.text._object;
  v11 = (Swift::String_optional)*((_OWORD *)content.text._object + 1);
  retstr->content.speakableTextOverride = *(Swift::String_optional *)(content.text._countAndFlagsBits + 16);
  retstr->caption.value.text = v10;
  retstr->caption.value.speakableTextOverride = v11;
  v12 = (Swift::String_optional)*((_OWORD *)content.speakableTextOverride.value._object + 1);
  retstr->unfilteredContent.value.text = *(Swift::String *)content.speakableTextOverride.value._object;
  retstr->unfilteredContent.value.speakableTextOverride = v12;
  v13 = *(Swift::String_optional *)(caption.value.text._countAndFlagsBits + 16);
  retstr->unfilteredCaption.value.text = *(Swift::String *)caption.value.text._countAndFlagsBits;
  retstr->unfilteredCaption.value.speakableTextOverride = v13;
  v14 = (Swift::String_optional)*((_OWORD *)caption.value.text._object + 1);
  retstr->redactedContent.value.text = *(Swift::String *)caption.value.text._object;
  retstr->redactedContent.value.speakableTextOverride = v14;
  v15 = *(Swift::String_optional *)(caption.value.speakableTextOverride.value._countAndFlagsBits + 16);
  retstr->redactedCaption.value.text = *(Swift::String *)caption.value.speakableTextOverride.value._countAndFlagsBits;
  v16 = *(_QWORD *)content.text._countAndFlagsBits;
  v17 = *(void **)(content.text._countAndFlagsBits + 8);
  retstr->id = id;
  retstr->content.text._countAndFlagsBits = v16;
  retstr->content.text._object = v17;
  retstr->spokenOnly = content.speakableTextOverride.value._countAndFlagsBits;
  retstr->redactedCaption.value.speakableTextOverride = v15;
  retstr->isApprovedForGrading = (Swift::Bool)caption.value.speakableTextOverride.value._object;
}

void __swiftcall TemplatingSection.init(id:content:caption:spokenOnly:unfilteredContent:unfilteredCaption:)(SiriKitFlow::TemplatingSection *__return_ptr retstr, Swift::String id, SiriKitFlow::TemplatingText content, SiriKitFlow::TemplatingText_optional caption, Swift::Bool spokenOnly, SiriKitFlow::TemplatingText_optional unfilteredContent, SiriKitFlow::TemplatingText_optional unfilteredCaption)
{
  __int128 v7;
  uint64_t v8;

  *(double *)&v7 = OUTLINED_FUNCTION_10_40(id._countAndFlagsBits, (uint64_t)id._object, (uint64_t *)content.text._countAndFlagsBits, (__int128 *)content.text._object, content.speakableTextOverride.value._countAndFlagsBits, (_OWORD *)content.speakableTextOverride.value._object, caption.value.text._countAndFlagsBits, (uint64_t)retstr);
  *(_OWORD *)(v8 + 152) = v7;
  *(_OWORD *)(v8 + 168) = v7;
  *(_OWORD *)(v8 + 184) = v7;
  *(_OWORD *)(v8 + 200) = v7;
  *(_BYTE *)(v8 + 216) = 0;
}

void __swiftcall TemplatingSection.init(id:content:caption:spokenOnly:unfilteredContent:unfilteredCaption:isApprovedForGrading:)(SiriKitFlow::TemplatingSection *__return_ptr retstr, Swift::String id, SiriKitFlow::TemplatingText content, SiriKitFlow::TemplatingText_optional caption, Swift::Bool spokenOnly, SiriKitFlow::TemplatingText_optional unfilteredContent, SiriKitFlow::TemplatingText_optional unfilteredCaption, Swift::Bool isApprovedForGrading)
{
  __int128 v8;
  uint64_t v9;
  char v10;

  *(double *)&v8 = OUTLINED_FUNCTION_10_40(id._countAndFlagsBits, (uint64_t)id._object, (uint64_t *)content.text._countAndFlagsBits, (__int128 *)content.text._object, content.speakableTextOverride.value._countAndFlagsBits, (_OWORD *)content.speakableTextOverride.value._object, caption.value.text._countAndFlagsBits, (uint64_t)retstr);
  *(_OWORD *)(v9 + 200) = v8;
  *(_OWORD *)(v9 + 184) = v8;
  *(_OWORD *)(v9 + 168) = v8;
  *(_OWORD *)(v9 + 152) = v8;
  *(_BYTE *)(v9 + 216) = v10;
}

uint64_t TemplatingSection.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 48);
  sub_1C2CFE670();
  OUTLINED_FUNCTION_128();
  swift_bridgeObjectRetain();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_30();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_3_1();
  TemplatingText.description.getter();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_30();
  sub_1C28F8B20(v3, v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A6450);
  sub_1C2CFDDAC();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_59_14();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_128();
  OUTLINED_FUNCTION_59_14();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_72_6();
  return 0;
}

uint64_t sub_1C2A29400(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v11;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C2CFE9DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C2CFE9DC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000;
      if (v7 || (sub_1C2CFE9DC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E4F6E656B6F7073 && a2 == 0xEA0000000000796CLL;
        if (v8 || (sub_1C2CFE9DC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x80000001C2D2E800 || (sub_1C2CFE9DC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x80000001C2D2E820 || (sub_1C2CFE9DC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 0x6465746361646572 && a2 == 0xEF746E65746E6F43;
          if (v9 || (sub_1C2CFE9DC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v10 = a1 == 0x6465746361646572 && a2 == 0xEF6E6F6974706143;
            if (v10 || (sub_1C2CFE9DC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x80000001C2D2E840)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              v11 = sub_1C2CFE9DC();
              swift_bridgeObjectRelease();
              if ((v11 & 1) != 0)
                return 8;
              else
                return 9;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C2A297B8()
{
  return 9;
}

uint64_t sub_1C2A297C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C2A297E8 + 4 * a2[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1C2A297E8()
{
  return 0x746E65746E6F63;
}

uint64_t sub_1C2A29800()
{
  return 0x6E6F6974706163;
}

uint64_t sub_1C2A29818()
{
  return 0x6E4F6E656B6F7073;
}

unint64_t sub_1C2A29834()
{
  return 0xD000000000000011;
}

uint64_t sub_1C2A2985C()
{
  return 0x6465746361646572;
}

unint64_t sub_1C2A29894()
{
  return 0xD000000000000014;
}

void sub_1C2A298B4()
{
  sub_1C2A2AB48();
}

uint64_t sub_1C2A298D0()
{
  unsigned __int8 *v0;

  return sub_1C2A297C0(*v0);
}

uint64_t sub_1C2A298D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A29400(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A298FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C2A297B8();
  *a1 = result;
  return result;
}

uint64_t sub_1C2A29920()
{
  sub_1C2A2AD08();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A29948()
{
  sub_1C2A2AD08();
  return sub_1C2CFEB2C();
}

void TemplatingSection.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_11_31();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F860);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  OUTLINED_FUNCTION_4();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C2A2AD08();
  sub_1C2CFEB08();
  sub_1C2CFE928();
  if (!v0)
  {
    sub_1C2A2AD44();
    sub_1C2CFE958();
    OUTLINED_FUNCTION_2_37();
    OUTLINED_FUNCTION_40_14();
    OUTLINED_FUNCTION_2_37();
    OUTLINED_FUNCTION_2_37();
    OUTLINED_FUNCTION_2_37();
    OUTLINED_FUNCTION_2_37();
    OUTLINED_FUNCTION_40_14();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  OUTLINED_FUNCTION_44();
}

void TemplatingSection.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[10];
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  _BYTE v78[7];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  _DWORD v97[3];

  OUTLINED_FUNCTION_11_31();
  v2 = v1;
  v4 = v3;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F878);
  MEMORY[0x1E0C80A78](v44, v5);
  OUTLINED_FUNCTION_4();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C2A2AD08();
  sub_1C2CFEAFC();
  if (v0)
  {
    OUTLINED_FUNCTION_232_0();
    OUTLINED_FUNCTION_54_16();
    OUTLINED_FUNCTION_44_16();
  }
  else
  {
    LOBYTE(v67) = 0;
    v6 = sub_1C2CFE8B0();
    LOBYTE(v48[0]) = 1;
    v8 = v7;
    sub_1C2A2AD80();
    OUTLINED_FUNCTION_57_1();
    OUTLINED_FUNCTION_31_20();
    sub_1C2CFE8E0();
    v30 = v8;
    v26 = v6;
    v27 = v67;
    v10 = v68;
    v9 = v69;
    v11 = v70;
    LOBYTE(v48[0]) = 2;
    OUTLINED_FUNCTION_57_1();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_31_20();
    sub_1C2CFE8A4();
    v28 = v10;
    v29 = v11;
    v25 = v9;
    v12 = v67;
    v13 = v70;
    LOBYTE(v67) = 3;
    v14 = v68;
    v15 = v69;
    sub_1C28F8B20(v12, v68);
    v24 = OUTLINED_FUNCTION_66_7();
    v45 = v12;
    v46 = v14;
    v47 = v15;
    LOBYTE(v48[0]) = 4;
    sub_1C2CFE8A4();
    v16 = v70;
    LOBYTE(v48[0]) = 5;
    v23 = v67;
    v43 = v68;
    v17 = v69;
    OUTLINED_FUNCTION_65_10(v67, v68);
    OUTLINED_FUNCTION_4_40();
    v41 = v16;
    v42 = v17;
    v18 = v67;
    v19 = v70;
    LOBYTE(v48[0]) = 6;
    v39 = v68;
    v40 = v69;
    OUTLINED_FUNCTION_65_10(v67, v68);
    OUTLINED_FUNCTION_4_40();
    v37 = v18;
    v38 = v19;
    v20 = v67;
    v21 = v70;
    LOBYTE(v48[0]) = 7;
    v35 = v68;
    v36 = v69;
    OUTLINED_FUNCTION_65_10(v67, v68);
    OUTLINED_FUNCTION_4_40();
    v34 = v21;
    v22 = v68;
    v96 = 8;
    v32 = v69;
    v33 = v67;
    v31 = v70;
    sub_1C28F8B20(v67, v68);
    LOBYTE(v12) = OUTLINED_FUNCTION_66_7();
    OUTLINED_FUNCTION_0_41();
    v48[0] = v26;
    v48[1] = v30;
    v48[2] = v27;
    v48[3] = v28;
    v48[4] = v25;
    v48[5] = v29;
    v48[6] = v45;
    v48[7] = v46;
    v48[8] = v47;
    v48[9] = v13;
    v49 = v24 & 1;
    v50 = v23;
    v51 = v43;
    v52 = v42;
    v53 = v41;
    v54 = v37;
    v55 = v39;
    v56 = v40;
    v57 = v38;
    v58 = v20;
    v59 = v35;
    v60 = v36;
    v61 = v34;
    v62 = v33;
    v63 = v22;
    v64 = v32;
    v65 = v31;
    v66 = v12 & 1;
    sub_1C2A262C0(v48);
    sub_1C28F8B50(v33, v22);
    sub_1C28F8B50(v20, v35);
    OUTLINED_FUNCTION_33_13();
    OUTLINED_FUNCTION_32_25(v23);
    sub_1C28F8B50(v45, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_20(v4, v48);
    OUTLINED_FUNCTION_232_0();
    v67 = v26;
    v68 = v30;
    v69 = v27;
    v70 = v28;
    v71 = v25;
    v72 = v29;
    v73 = v45;
    v74 = v46;
    v75 = v47;
    v76 = v13;
    v77 = v24 & 1;
    *(_DWORD *)v78 = v97[0];
    *(_DWORD *)&v78[3] = *(_DWORD *)((char *)v97 + 3);
    v79 = v23;
    v80 = v43;
    v81 = v42;
    v82 = v41;
    v83 = v37;
    v84 = v39;
    v85 = v40;
    v86 = v38;
    v87 = v20;
    v88 = v35;
    v89 = v36;
    v90 = v34;
    v91 = v33;
    v92 = v22;
    v93 = v32;
    v94 = v31;
    v95 = v12 & 1;
    sub_1C2A263D8(&v67);
  }
  OUTLINED_FUNCTION_44();
}

void sub_1C2A2A42C()
{
  TemplatingSection.init(from:)();
}

void sub_1C2A2A440()
{
  TemplatingSection.encode(to:)();
}

void TemplatingText.text.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

void TemplatingText.speakableTextOverride.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

uint64_t TemplatingText.description.getter()
{
  sub_1C2CFE670();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_1_18();
  swift_bridgeObjectRelease();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_1_18();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_72_6();
  return 0;
}

uint64_t sub_1C2A2A574(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C2CFE9DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C2D2E860)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1C2CFE9DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C2A2A650(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 1954047348;
}

uint64_t sub_1C2A2A684()
{
  char *v0;

  return sub_1C2A2A650(*v0);
}

uint64_t sub_1C2A2A68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A2A574(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A2A6B0()
{
  sub_1C2A2ADBC();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A2A6D8()
{
  sub_1C2A2ADBC();
  return sub_1C2CFEB2C();
}

void TemplatingText.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_11_31();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F888);
  v9 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_10();
  v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C2A2ADBC();
  sub_1C2CFEB08();
  sub_1C2CFE928();
  if (!v0)
    sub_1C2CFE910();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v3);
  OUTLINED_FUNCTION_44();
}

void TemplatingText.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;

  OUTLINED_FUNCTION_11_31();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F898);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  OUTLINED_FUNCTION_72_4();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C2A2ADBC();
  sub_1C2CFEAFC();
  if (v0)
  {
    OUTLINED_FUNCTION_353();
  }
  else
  {
    v8 = sub_1C2CFE8B0();
    v10 = v9;
    swift_bridgeObjectRetain();
    v11 = sub_1C2CFE898();
    v13 = v12;
    v14 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v15 = v11;
    OUTLINED_FUNCTION_19_24(v14);
    *v4 = v8;
    v4[1] = v10;
    v4[2] = v15;
    v4[3] = v13;
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_353();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_1C2A2A958(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E657473696CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1C2CFE9DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C2D2E880 || (sub_1C2CFE9DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x42746C7561666564 && a2 == 0xEF726F6976616865;
    if (v6 || (sub_1C2CFE9DC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x4C646E41676E6964 && a2 == 0xED00006E65747369)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v8 = sub_1C2CFE9DC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_1C2A2AB40()
{
  return 4;
}

void sub_1C2A2AB48()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  sub_1C2CFEAD8();
  OUTLINED_FUNCTION_0_3();
}

uint64_t sub_1C2A2AB84(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C2A2ABB4 + 4 * byte_1C2D07CC9[a1]))(0x6E657473696CLL, 0xE600000000000000);
}

unint64_t sub_1C2A2ABB4()
{
  return 0xD000000000000018;
}

uint64_t sub_1C2A2ABD0()
{
  return 0x42746C7561666564;
}

uint64_t sub_1C2A2ABF4()
{
  return 0x4C646E41676E6964;
}

uint64_t sub_1C2A2AC18()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1C2A2AC34()
{
  return 0;
}

uint64_t sub_1C2A2AC40(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6449646E756F73 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C2CFE9DC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C2A2ACC4()
{
  return 0x6449646E756F73;
}

void sub_1C2A2ACDC()
{
  TemplatingText.init(from:)();
}

void sub_1C2A2ACF0()
{
  TemplatingText.encode(to:)();
}

unint64_t sub_1C2A2AD08()
{
  unint64_t result;

  result = qword_1EF78F868;
  if (!qword_1EF78F868)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08598, &type metadata for TemplatingSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F868);
  }
  return result;
}

unint64_t sub_1C2A2AD44()
{
  unint64_t result;

  result = qword_1EF78F870;
  if (!qword_1EF78F870)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for TemplatingText, &type metadata for TemplatingText);
    atomic_store(result, (unint64_t *)&qword_1EF78F870);
  }
  return result;
}

unint64_t sub_1C2A2AD80()
{
  unint64_t result;

  result = qword_1EF78F880;
  if (!qword_1EF78F880)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for TemplatingText, &type metadata for TemplatingText);
    atomic_store(result, (unint64_t *)&qword_1EF78F880);
  }
  return result;
}

unint64_t sub_1C2A2ADBC()
{
  unint64_t result;

  result = qword_1EF78F890;
  if (!qword_1EF78F890)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08548, &type metadata for TemplatingText.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F890);
  }
  return result;
}

void sub_1C2A2ADF8()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  sub_1C2CFEAD8();
  OUTLINED_FUNCTION_0_3();
}

uint64_t sub_1C2A2AE30()
{
  unsigned __int8 *v0;

  return sub_1C2A2AB84(*v0);
}

uint64_t sub_1C2A2AE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A2A958(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A2AE5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C2A2AB40();
  *a1 = result;
  return result;
}

uint64_t sub_1C2A2AE80()
{
  sub_1C2A2B334();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A2AEA8()
{
  sub_1C2A2B334();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A2AED4()
{
  sub_1C2A2B3E8();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A2AEFC()
{
  sub_1C2A2B3E8();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A2AF24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C2A2AC18();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C2A2AF4C()
{
  return sub_1C29C38D8();
}

uint64_t sub_1C2A2AF64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_11_13();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C2A2AF8C()
{
  sub_1C2A2B3AC();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A2AFB4()
{
  sub_1C2A2B3AC();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A2AFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A2AC40(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C2A2B00C()
{
  sub_1C2A2B370();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A2B034()
{
  sub_1C2A2B370();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A2B05C()
{
  sub_1C2A2B424();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A2B084()
{
  sub_1C2A2B424();
  return sub_1C2CFEB2C();
}

void BehaviorAfterSpeaking.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_11_31();
  v3 = v0;
  v5 = v4;
  v38 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F8A0) - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_35_17(v8, v32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F8A8);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_79_5();
  v35 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F8B0);
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_10();
  v18 = v17 - v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F8B8);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19, v21);
  OUTLINED_FUNCTION_72_4();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F8C0);
  v39 = *(_QWORD *)(v22 - 8);
  v40 = v22;
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_332();
  v25 = *(_QWORD *)(v3 + 8);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1C2A2B334();
  sub_1C2CFEB08();
  if (v25)
  {
    if (v25 == 1)
    {
      OUTLINED_FUNCTION_58_13();
      OUTLINED_FUNCTION_16_27();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v18, v34);
      v27 = OUTLINED_FUNCTION_70_6();
      v29(v27, v28);
      goto LABEL_9;
    }
    if (v25 != 2)
    {
      OUTLINED_FUNCTION_57_10();
      OUTLINED_FUNCTION_16_27();
      sub_1C2CFE928();
      OUTLINED_FUNCTION_19_24(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
      v30 = OUTLINED_FUNCTION_70_6();
      v31(v30);
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_60_12();
    v26 = v40;
    OUTLINED_FUNCTION_16_27();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
  }
  else
  {
    sub_1C2A2B424();
    v26 = v40;
    OUTLINED_FUNCTION_16_27();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, v19);
  }
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v1, v26);
LABEL_9:
  OUTLINED_FUNCTION_44();
}

unint64_t sub_1C2A2B334()
{
  unint64_t result;

  result = qword_1EF78F8C8;
  if (!qword_1EF78F8C8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D084F8, &type metadata for BehaviorAfterSpeaking.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F8C8);
  }
  return result;
}

unint64_t sub_1C2A2B370()
{
  unint64_t result;

  result = qword_1EF78F8D0;
  if (!qword_1EF78F8D0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D084A8, &type metadata for BehaviorAfterSpeaking.DingAndListenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F8D0);
  }
  return result;
}

unint64_t sub_1C2A2B3AC()
{
  unint64_t result;

  result = qword_1EF78F8D8;
  if (!qword_1EF78F8D8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08458, &type metadata for BehaviorAfterSpeaking.DefaultBehaviorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F8D8);
  }
  return result;
}

unint64_t sub_1C2A2B3E8()
{
  unint64_t result;

  result = qword_1EF78F8E0;
  if (!qword_1EF78F8E0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08408, &type metadata for BehaviorAfterSpeaking.ContinueWithoutListeningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F8E0);
  }
  return result;
}

unint64_t sub_1C2A2B424()
{
  unint64_t result;

  result = qword_1EF78F8E8;
  if (!qword_1EF78F8E8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D083B8, &type metadata for BehaviorAfterSpeaking.ListenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F8E8);
  }
  return result;
}

void BehaviorAfterSpeaking.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_11_31();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F8F0);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_35_17(v5, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F8F8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_79_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F900);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_79_5();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F908);
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_332();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F910);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  OUTLINED_FUNCTION_10();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C2A2B334();
  sub_1C2CFEAFC();
  if (!v0)
  {
    v26 = v13;
    v15 = sub_1C2CFE8EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = *(unsigned __int8 *)(v15 + 32);
      sub_1C28C5A84(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
      v19 = v18;
      v21 = v20;
      swift_bridgeObjectRelease();
      if (v19 == v21 >> 1)
        __asm { BR              X9 }
    }
    v22 = sub_1C2CFE6E8();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F918);
    *v24 = &type metadata for BehaviorAfterSpeaking;
    sub_1C2CFE88C();
    sub_1C2CFE6D0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v22);
    swift_willThrow();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_13_30(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_44();
}

void sub_1C2A2B870()
{
  BehaviorAfterSpeaking.init(from:)();
}

void sub_1C2A2B884()
{
  BehaviorAfterSpeaking.encode(to:)();
}

uint64_t DialogTemplating.makeIntentConfirmationCancelledDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 80))(a1, a4, a5, a6, a7);
}

uint64_t sub_1C2A2B8BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *))
{
  return DialogTemplating.makeSuggestAppDialog(app:intent:_:)(a1, a2, a3);
}

uint64_t DialogTemplating.makeSuggestAppDialog(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *))
{
  _OWORD v4[5];

  memset(v4, 0, 73);
  return a3(v4);
}

uint64_t DialogTemplating.makeAppNotFoundOnDeviceDialog(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 312))(a1, a3, a4, a5, a6);
}

_QWORD *assignWithCopy for TemplatingResult(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[7];
  if (a1[7] >= 3uLL)
  {
    if (v4 >= 3)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C2A2BA64((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    goto LABEL_8;
  }
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
LABEL_8:
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2A2BA64(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F920);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *assignWithTake for TemplatingResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  v5 = a2 + 6;
  if (a1[7] >= 3uLL)
  {
    v6 = a2[7];
    if (v6 >= 3)
    {
      a1[6] = *v5;
      a1[7] = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C2A2BA64((uint64_t)(a1 + 6));
  }
  *((_OWORD *)a1 + 3) = *(_OWORD *)v5;
LABEL_6:
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithCopy for TemplatingSection(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 48);
  v5 = (_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A2BF5C(a1 + 48);
      v7 = *(_OWORD *)(a2 + 64);
      *v4 = *v5;
      *(_OWORD *)(a1 + 64) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 64);
    *v4 = *v5;
    *(_OWORD *)(a1 + 64) = v8;
  }
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = (_OWORD *)(a1 + 88);
  v10 = (_OWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A2BF5C(a1 + 88);
      v12 = *(_OWORD *)(a2 + 104);
      *v9 = *v10;
      *(_OWORD *)(a1 + 104) = v12;
    }
  }
  else if (v11)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 104);
    *v9 = *v10;
    *(_OWORD *)(a1 + 104) = v13;
  }
  v14 = (_OWORD *)(a1 + 120);
  v15 = (_OWORD *)(a2 + 120);
  v16 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128))
  {
    if (v16)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A2BF5C(a1 + 120);
      v17 = *(_OWORD *)(a2 + 136);
      *v14 = *v15;
      *(_OWORD *)(a1 + 136) = v17;
    }
  }
  else if (v16)
  {
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 136);
    *v14 = *v15;
    *(_OWORD *)(a1 + 136) = v18;
  }
  v19 = (_OWORD *)(a1 + 152);
  v20 = (_OWORD *)(a2 + 152);
  v21 = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 160))
  {
    if (v21)
    {
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A2BF5C(a1 + 152);
      v22 = *(_OWORD *)(a2 + 168);
      *v19 = *v20;
      *(_OWORD *)(a1 + 168) = v22;
    }
  }
  else if (v21)
  {
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *(_OWORD *)(a2 + 168);
    *v19 = *v20;
    *(_OWORD *)(a1 + 168) = v23;
  }
  v24 = (_OWORD *)(a1 + 184);
  v25 = (_OWORD *)(a2 + 184);
  v26 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 192))
  {
    if (v26)
    {
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A2BF5C(a1 + 184);
      v27 = *(_OWORD *)(a2 + 200);
      *v24 = *v25;
      *(_OWORD *)(a1 + 200) = v27;
    }
  }
  else if (v26)
  {
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *(_OWORD *)(a2 + 200);
    *v24 = *v25;
    *(_OWORD *)(a1 + 200) = v28;
  }
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  return a1;
}

uint64_t sub_1C2A2BF5C(uint64_t a1)
{
  destroy for TemplatingText();
  return a1;
}

void *__swift_memcpy217_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD9uLL);
}

uint64_t assignWithTake for TemplatingSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
  {
    v7 = *(_QWORD *)(a2 + 56);
    if (v7)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C2A2BF5C(a1 + 48);
  }
  v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
LABEL_6:
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (*(_QWORD *)(a1 + 96))
  {
    v10 = *(_QWORD *)(a2 + 96);
    if (v10)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1C2A2BF5C(a1 + 88);
  }
  v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v12;
LABEL_11:
  if (*(_QWORD *)(a1 + 128))
  {
    v13 = *(_QWORD *)(a2 + 128);
    if (v13)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1C2A2BF5C(a1 + 120);
  }
  v15 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v15;
LABEL_16:
  if (*(_QWORD *)(a1 + 160))
  {
    v16 = *(_QWORD *)(a2 + 160);
    if (v16)
    {
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1C2A2BF5C(a1 + 152);
  }
  v18 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v18;
LABEL_21:
  if (!*(_QWORD *)(a1 + 192))
  {
LABEL_25:
    v21 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v21;
    goto LABEL_26;
  }
  v19 = *(_QWORD *)(a2 + 192);
  if (!v19)
  {
    sub_1C2A2BF5C(a1 + 184);
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v20;
  swift_bridgeObjectRelease();
LABEL_26:
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemplatingSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 217))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplatingSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 216) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 217) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 217) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

_QWORD *assignWithCopy for TemplatingText(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for TemplatingText(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11SiriKitFlow21BehaviorAfterSpeakingOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for BehaviorAfterSpeaking(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BehaviorAfterSpeaking(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BehaviorAfterSpeaking(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BehaviorAfterSpeaking(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t dispatch thunk of DialogTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a11 + 32))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 40))();
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueConfirmationRejectedDialog(app:parameterName:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueChangeDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 64))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentConfirmationDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 72))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentConfirmationCancelledDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentConfirmationCancelledDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 88))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentConfirmationWaitToContinueDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentHandledDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 104))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentHandledContinueInAppDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentAutoHandledDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 120))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentNotHandledDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 128))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentInProgressDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentNotSupportedByAppDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 144))();
}

uint64_t dispatch thunk of DialogTemplating.makeAppDisabledByScreenTimeDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentAuthenticationDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 160))();
}

uint64_t dispatch thunk of DialogTemplating.makeInterstitialDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 168))();
}

uint64_t dispatch thunk of DialogTemplating.makeOfferIntentDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 176))();
}

uint64_t dispatch thunk of DialogTemplating.makeHandoffDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t dispatch thunk of DialogTemplating.makeNotificationMessageForHandoff(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t dispatch thunk of DialogTemplating.makeUnlockDeviceDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 200))();
}

uint64_t dispatch thunk of DialogTemplating.makeUnmuteSiriConfirmationDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 208))();
}

uint64_t dispatch thunk of DialogTemplating.makeUnmuteSiriConfirmationRejectedDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 216))();
}

uint64_t dispatch thunk of DialogTemplating.makeEnableAppConfirmationDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 224))();
}

uint64_t dispatch thunk of DialogTemplating.makeEnableAppConfirmationRejectedDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 232))();
}

uint64_t dispatch thunk of DialogTemplating.makeAppIsDisabledForSiriDialog(app:isHandsFree:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 240))();
}

uint64_t dispatch thunk of DialogTemplating.makeOpenAppDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 248))();
}

uint64_t dispatch thunk of DialogTemplating.makeSuggestAppDialog(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 256))();
}

uint64_t dispatch thunk of DialogTemplating.makeDisambiguateAppDialog(apps:disambiguationList:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 264))();
}

uint64_t dispatch thunk of DialogTemplating.makeConfirmAppDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 272))();
}

uint64_t dispatch thunk of DialogTemplating.makeNoAppsFoundDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 280))();
}

uint64_t dispatch thunk of DialogTemplating.makeFindAppButtonTitleDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 288))();
}

uint64_t dispatch thunk of DialogTemplating.commonYesDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 296))();
}

uint64_t dispatch thunk of DialogTemplating.commonNoDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 304))();
}

uint64_t dispatch thunk of DialogTemplating.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 320))();
}

uint64_t dispatch thunk of DialogTemplating.makeOpenAppFailedDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 328))();
}

uint64_t dispatch thunk of DialogTemplating.makeAppNotFoundOnDeviceDialog(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 336))();
}

uint64_t dispatch thunk of DialogTemplating.makeAppDoesNotSupportIntentDialog(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 344))();
}

uint64_t storeEnumTagSinglePayload for BehaviorAfterSpeaking.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C2A2C67C + 4 * byte_1C2D07CD6[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C2A2C6B0 + 4 * byte_1C2D07CD1[v4]))();
}

uint64_t sub_1C2A2C6B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A2C6B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A2C6C0);
  return result;
}

uint64_t sub_1C2A2C6CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A2C6D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C2A2C6D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A2C6E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.CodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.CodingKeys;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.ListenCodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.ListenCodingKeys;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.ContinueWithoutListeningCodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.ContinueWithoutListeningCodingKeys;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.DefaultBehaviorCodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.DefaultBehaviorCodingKeys;
}

uint64_t storeEnumTagSinglePayload for BehaviorAfterSpeaking.DingAndListenCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C2A2C76C + 4 * byte_1C2D07CDB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C2A2C78C + 4 * byte_1C2D07CE0[v4]))();
}

_BYTE *sub_1C2A2C76C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C2A2C78C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A2C794(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A2C79C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A2C7A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A2C7AC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.DingAndListenCodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.DingAndListenCodingKeys;
}

uint64_t storeEnumTagSinglePayload for TemplatingText.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2A2C814 + 4 * byte_1C2D07CEA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2A2C848 + 4 * byte_1C2D07CE5[v4]))();
}

uint64_t sub_1C2A2C848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A2C850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A2C858);
  return result;
}

uint64_t sub_1C2A2C864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A2C86CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2A2C870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A2C878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TemplatingText.CodingKeys()
{
  return &type metadata for TemplatingText.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TemplatingSection.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplatingSection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1C2A2C968 + 4 * byte_1C2D07CF4[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1C2A2C99C + 4 * byte_1C2D07CEF[v4]))();
}

uint64_t sub_1C2A2C99C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A2C9A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A2C9ACLL);
  return result;
}

uint64_t sub_1C2A2C9B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A2C9C0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1C2A2C9C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A2C9CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TemplatingSection.CodingKeys()
{
  return &type metadata for TemplatingSection.CodingKeys;
}

unint64_t sub_1C2A2C9EC()
{
  unint64_t result;

  result = qword_1EF78F928;
  if (!qword_1EF78F928)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08078, &type metadata for TemplatingSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F928);
  }
  return result;
}

unint64_t sub_1C2A2CA2C()
{
  unint64_t result;

  result = qword_1EF78F930;
  if (!qword_1EF78F930)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08130, &type metadata for TemplatingText.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F930);
  }
  return result;
}

unint64_t sub_1C2A2CA6C()
{
  unint64_t result;

  result = qword_1EF78F938;
  if (!qword_1EF78F938)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D081E8, &type metadata for BehaviorAfterSpeaking.DingAndListenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F938);
  }
  return result;
}

unint64_t sub_1C2A2CAAC()
{
  unint64_t result;

  result = qword_1EF78F940;
  if (!qword_1EF78F940)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08390, &type metadata for BehaviorAfterSpeaking.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F940);
  }
  return result;
}

unint64_t sub_1C2A2CAEC()
{
  unint64_t result;

  result = qword_1EF78F948;
  if (!qword_1EF78F948)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D082B0, &type metadata for BehaviorAfterSpeaking.ListenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F948);
  }
  return result;
}

unint64_t sub_1C2A2CB2C()
{
  unint64_t result;

  result = qword_1EF78F950;
  if (!qword_1EF78F950)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D082D8, &type metadata for BehaviorAfterSpeaking.ListenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F950);
  }
  return result;
}

unint64_t sub_1C2A2CB6C()
{
  unint64_t result;

  result = qword_1EF78F958;
  if (!qword_1EF78F958)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08260, &type metadata for BehaviorAfterSpeaking.ContinueWithoutListeningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F958);
  }
  return result;
}

unint64_t sub_1C2A2CBAC()
{
  unint64_t result;

  result = qword_1EF78F960;
  if (!qword_1EF78F960)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08288, &type metadata for BehaviorAfterSpeaking.ContinueWithoutListeningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F960);
  }
  return result;
}

unint64_t sub_1C2A2CBEC()
{
  unint64_t result;

  result = qword_1EF78F968;
  if (!qword_1EF78F968)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08210, &type metadata for BehaviorAfterSpeaking.DefaultBehaviorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F968);
  }
  return result;
}

unint64_t sub_1C2A2CC2C()
{
  unint64_t result;

  result = qword_1EF78F970;
  if (!qword_1EF78F970)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08238, &type metadata for BehaviorAfterSpeaking.DefaultBehaviorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F970);
  }
  return result;
}

unint64_t sub_1C2A2CC6C()
{
  unint64_t result;

  result = qword_1EF78F978;
  if (!qword_1EF78F978)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08158, &type metadata for BehaviorAfterSpeaking.DingAndListenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F978);
  }
  return result;
}

unint64_t sub_1C2A2CCAC()
{
  unint64_t result;

  result = qword_1EF78F980;
  if (!qword_1EF78F980)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08180, &type metadata for BehaviorAfterSpeaking.DingAndListenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F980);
  }
  return result;
}

unint64_t sub_1C2A2CCEC()
{
  unint64_t result;

  result = qword_1EF78F988;
  if (!qword_1EF78F988)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08300, &type metadata for BehaviorAfterSpeaking.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F988);
  }
  return result;
}

unint64_t sub_1C2A2CD2C()
{
  unint64_t result;

  result = qword_1EF78F990;
  if (!qword_1EF78F990)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08328, &type metadata for BehaviorAfterSpeaking.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F990);
  }
  return result;
}

unint64_t sub_1C2A2CD6C()
{
  unint64_t result;

  result = qword_1EF78F998;
  if (!qword_1EF78F998)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D080A0, &type metadata for TemplatingText.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F998);
  }
  return result;
}

unint64_t sub_1C2A2CDAC()
{
  unint64_t result;

  result = qword_1EF78F9A0;
  if (!qword_1EF78F9A0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D080C8, &type metadata for TemplatingText.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F9A0);
  }
  return result;
}

unint64_t sub_1C2A2CDEC()
{
  unint64_t result;

  result = qword_1EF78F9A8;
  if (!qword_1EF78F9A8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D07FE8, &type metadata for TemplatingSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F9A8);
  }
  return result;
}

unint64_t sub_1C2A2CE2C()
{
  unint64_t result;

  result = qword_1EF78F9B0;
  if (!qword_1EF78F9B0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08010, &type metadata for TemplatingSection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF78F9B0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_41()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_2_37()
{
  return sub_1C2CFE91C();
}

uint64_t OUTLINED_FUNCTION_3_37@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return sub_1C28F8B20(a1, a2);
}

uint64_t OUTLINED_FUNCTION_4_40()
{
  return sub_1C2CFE8A4();
}

uint64_t OUTLINED_FUNCTION_5_37()
{
  return sub_1C2CFE880();
}

uint64_t OUTLINED_FUNCTION_6_34()
{
  uint64_t v0;

  return sub_1C28F8B50(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
}

void OUTLINED_FUNCTION_8_33()
{
  sub_1C2A28CEC();
}

double OUTLINED_FUNCTION_10_40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, char a5@<W4>, _OWORD *a6@<X5>, _OWORD *a7@<X6>, uint64_t a8@<X8>)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v8 = *a4;
  v9 = a4[1];
  *(_OWORD *)(a8 + 32) = *((_OWORD *)a3 + 1);
  *(_OWORD *)(a8 + 48) = v8;
  *(_OWORD *)(a8 + 64) = v9;
  v10 = a6[1];
  *(_OWORD *)(a8 + 88) = *a6;
  *(_OWORD *)(a8 + 104) = v10;
  v11 = a7[1];
  *(_OWORD *)(a8 + 120) = *a7;
  v12 = *a3;
  v13 = a3[1];
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = v12;
  *(_QWORD *)(a8 + 24) = v13;
  *(_BYTE *)(a8 + 80) = a5;
  *(_OWORD *)(a8 + 136) = v11;
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_12_33()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_13_30@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,int a42,char a43)
{
  uint64_t v43;
  uint64_t v44;

  return sub_1C290D024((uint64_t)&a41, v44, a11, a10, v43, a12, (uint64_t)&a43);
}

uint64_t OUTLINED_FUNCTION_16_27()
{
  return sub_1C2CFE904();
}

uint64_t OUTLINED_FUNCTION_17_25()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_24@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_20_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2A28EB4(0, 0xE000000000000000, *(_QWORD *)(a4 + 16));
}

uint64_t OUTLINED_FUNCTION_23_30()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_24_25()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_29_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_32_25(uint64_t a1)
{
  uint64_t v1;

  return sub_1C28F8B50(a1, *(_QWORD *)(v1 + 200));
}

uint64_t OUTLINED_FUNCTION_33_13()
{
  uint64_t v0;

  return sub_1C28F8B50(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 168));
}

void OUTLINED_FUNCTION_36_22()
{
  sub_1C2A28CEC();
}

uint64_t OUTLINED_FUNCTION_38_19()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_39_17()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_40_14()
{
  return sub_1C2CFE934();
}

uint64_t OUTLINED_FUNCTION_47_14(uint64_t a1, uint64_t a2)
{
  return sub_1C28F8B50(a1, a2);
}

uint64_t OUTLINED_FUNCTION_54_16()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_57_10()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1C2A2B370();
}

unint64_t OUTLINED_FUNCTION_58_13()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_1C2A2B3E8();
}

uint64_t OUTLINED_FUNCTION_59_14()
{
  return sub_1C2CFDE54();
}

unint64_t OUTLINED_FUNCTION_60_12()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_1C2A2B3AC();
}

uint64_t OUTLINED_FUNCTION_65_10(uint64_t a1, uint64_t a2)
{
  return sub_1C28F8B20(a1, a2);
}

uint64_t DialogResult.sections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DialogResult.meta.getter()
{
  return swift_bridgeObjectRetain();
}

void DialogSection.id.getter()
{
  OUTLINED_FUNCTION_4_41();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

uint64_t DialogSection.content.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[3];
  v4 = v1[4];
  v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t DialogSection.caption.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[6];
  v3 = v1[7];
  v4 = v1[8];
  v5 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C28F8B20(v2, v3);
}

uint64_t DialogSection.spokenOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

void __swiftcall DialogSection.init(id:content:caption:spokenOnly:)(SiriKitFlow::DialogSection *__return_ptr retstr, Swift::String id, SiriKitFlow::DialogText content, SiriKitFlow::DialogText_optional caption, Swift::Bool spokenOnly)
{
  Swift::String v5;
  Swift::String_optional v6;
  uint64_t v7;
  void *v8;

  v5 = *(Swift::String *)content.text._object;
  v6 = (Swift::String_optional)*((_OWORD *)content.text._object + 1);
  retstr->content.speakableTextOverride = *(Swift::String_optional *)(content.text._countAndFlagsBits + 16);
  retstr->caption.value.text = v5;
  v7 = *(_QWORD *)content.text._countAndFlagsBits;
  v8 = *(void **)(content.text._countAndFlagsBits + 8);
  retstr->id = id;
  retstr->content.text._countAndFlagsBits = v7;
  retstr->content.text._object = v8;
  retstr->caption.value.speakableTextOverride = v6;
  retstr->spokenOnly = content.speakableTextOverride.value._countAndFlagsBits;
}

void DialogText.text.getter()
{
  OUTLINED_FUNCTION_4_41();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

void DialogText.speakableTextOverride.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

void VisualResult.data.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_194();
  sub_1C28C50CC(v0, v1);
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

uint64_t DialogVisualResult.dialog.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C2A2D250(v2, v3);
}

uint64_t sub_1C2A2D250(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t DialogVisualResult.visual.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C2A2D2A0(v2, v3, v4, v5);
}

uint64_t sub_1C2A2D2A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return sub_1C28C50CC(a3, a4);
  }
  return result;
}

__n128 DialogVisualResult.init(dialog:visual:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v3;
  __n128 result;
  __int128 v5;

  v3 = a1[1];
  *a3 = *a1;
  a3[1] = v3;
  result = *(__n128 *)a2;
  v5 = *(_OWORD *)(a2 + 16);
  a3[2] = *(_OWORD *)a2;
  a3[3] = v5;
  return result;
}

uint64_t destroy for DialogResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DialogResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DialogResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DialogResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for DialogResult()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t destroy for DialogSection(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 56);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DialogSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
  }
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for DialogSection(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 48);
  v5 = (_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A2D684(a1 + 48);
      v7 = *(_OWORD *)(a2 + 64);
      *v4 = *v5;
      *(_OWORD *)(a1 + 64) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 64);
    *v4 = *v5;
    *(_OWORD *)(a1 + 64) = v8;
  }
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t sub_1C2A2D684(uint64_t a1)
{
  destroy for TemplatingText();
  return a1;
}

uint64_t assignWithTake for DialogSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 56))
    goto LABEL_5;
  v7 = *(_QWORD *)(a2 + 56);
  if (!v7)
  {
    sub_1C2A2D684(a1 + 48);
LABEL_5:
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for DialogSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 81))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DialogSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DialogSection()
{
  OUTLINED_FUNCTION_22_2();
}

void type metadata accessor for DialogText()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t destroy for VisualResult(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1C28C516C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for VisualResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_1C28C50CC(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

_QWORD *assignWithCopy for VisualResult(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[2];
  v4 = a2[3];
  sub_1C28C50CC(v5, v4);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_1C28C516C(v6, v7);
  return a1;
}

_QWORD *assignWithTake for VisualResult(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1C28C516C(v5, v6);
  return a1;
}

void type metadata accessor for VisualResult()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t destroy for DialogVisualResult(_QWORD *a1)
{
  uint64_t result;

  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[5];
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1C28C516C(a1[6], a1[7]);
  }
  return result;
}

_QWORD *initializeWithCopy for DialogVisualResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = a2[1];
  if (v4)
  {
    *a1 = *a2;
    a1[1] = v4;
    v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
  }
  v7 = a2[5];
  if (v7)
  {
    a1[4] = a2[4];
    a1[5] = v7;
    v9 = a2[6];
    v8 = a2[7];
    swift_bridgeObjectRetain();
    sub_1C28C50CC(v9, v8);
    a1[6] = v9;
    a1[7] = v8;
  }
  else
  {
    v10 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v10;
  }
  return a1;
}

_QWORD *assignWithCopy for DialogVisualResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  v4 = a2[1];
  if (a1[1])
  {
    if (v4)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A2DBB4((uint64_t)a1);
      v5 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v5;
    }
  }
  else if (v4)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
  }
  v7 = a1 + 4;
  v8 = a2 + 4;
  v9 = a2[5];
  if (a1[5])
  {
    if (v9)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11 = a2[6];
      v10 = a2[7];
      sub_1C28C50CC(v11, v10);
      v12 = a1[6];
      v13 = a1[7];
      a1[6] = v11;
      a1[7] = v10;
      sub_1C28C516C(v12, v13);
    }
    else
    {
      sub_1C2A2DBE0((uint64_t)(a1 + 4));
      v16 = *((_OWORD *)a2 + 3);
      *v7 = *v8;
      *((_OWORD *)a1 + 3) = v16;
    }
  }
  else if (v9)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    v15 = a2[6];
    v14 = a2[7];
    swift_bridgeObjectRetain();
    sub_1C28C50CC(v15, v14);
    a1[6] = v15;
    a1[7] = v14;
  }
  else
  {
    v17 = *((_OWORD *)a2 + 3);
    *v7 = *v8;
    *((_OWORD *)a1 + 3) = v17;
  }
  return a1;
}

uint64_t sub_1C2A2DBB4(uint64_t a1)
{
  destroy for DialogResult();
  return a1;
}

uint64_t sub_1C2A2DBE0(uint64_t a1)
{
  destroy for VisualResult(a1);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DialogVisualResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)(a2 + 8);
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C2A2DBB4(a1);
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_6:
  if (!*(_QWORD *)(a1 + 40))
  {
LABEL_10:
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    return a1;
  }
  v6 = *(_QWORD *)(a2 + 40);
  if (!v6)
  {
    sub_1C2A2DBE0(a1 + 32);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  sub_1C28C516C(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DialogVisualResult(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DialogVisualResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for DialogVisualResult()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t OUTLINED_FUNCTION_1_31@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_41()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2A2DDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2A2DDE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 56);
  type metadata accessor for ParameterWrapper();
  *(_QWORD *)(swift_initStackObject() + 16) = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_32();
  v2 = sub_1C2CD9414();
  v4 = v3;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v5 = sub_1C2CFD878();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED7AA1B0);
  swift_bridgeObjectRetain_n();
  v6 = sub_1C2CFD86C();
  v7 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_1C28BB120(v2, v4, &v12);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C28B6000, v6, v7, "Sending direct invocation %s", v8, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }
  swift_bridgeObjectRelease_n();

  v9 = *(_QWORD *)(v0 + 48);
  v10 = sub_1C29BF720(0x6174614472657375, 0xE800000000000000);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  *(_QWORD *)v9 = v2;
  *(_QWORD *)(v9 + 8) = v4;
  *(_QWORD *)(v9 + 16) = v10;
  *(_BYTE *)(v9 + 40) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for DirectInvocationBehaviorResponseHandler()
{
  return objc_opt_self();
}

uint64_t sub_1C2A2E030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28C33A0;
  return sub_1C2A2DDC8(a1, a2);
}

uint64_t OUTLINED_FUNCTION_1_32()
{
  return 0x696669746E656469;
}

double sub_1C2A2E0A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v8 = type metadata accessor for Parse(0);
  MEMORY[0x1E0C80A78](v8, v8);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  swift_storeEnumTagMultiPayload();
  v11 = qword_1ED7A9B38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once();
  sub_1C2A611A0();
  v13 = v12;
  sub_1C29E8F24((uint64_t)v10, type metadata accessor for Parse);
  if (v13)
  {
    *(_QWORD *)(a4 + 24) = type metadata accessor for AnyFlow();
    *(_QWORD *)(a4 + 32) = &protocol witness table for AnyFlow;
    *(_QWORD *)a4 = v13;
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t type metadata accessor for FlowLocatorWrapper()
{
  return objc_opt_self();
}

uint64_t sub_1C2A2E1E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[19] = a1;
  v2[20] = v1;
  v3 = sub_1C2CFBCAC();
  v2[21] = v3;
  v2[22] = *(_QWORD *)(v3 - 8);
  v2[23] = OUTLINED_FUNCTION_7();
  v2[24] = type metadata accessor for Parse(0);
  v2[25] = OUTLINED_FUNCTION_7();
  v2[26] = type metadata accessor for Input(0);
  v2[27] = OUTLINED_FUNCTION_7();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A2E25C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD, uint64_t, uint64_t);
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 160);
  if (*(_BYTE *)(v1 + 96) == 1)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 80));
    v2 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v0 + 224) = v2;
    v3 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v0 + 232) = v3;
    v4 = *(_QWORD *)(v1 + 48);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_33_0();
    sub_1C2A2E0A4(v2, v3, v4, v0 + 56);
    OUTLINED_FUNCTION_8();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 80))
    {
      v6 = *(int **)(v0 + 208);
      v5 = *(_QWORD *)(v0 + 216);
      v7 = *(uint64_t **)(v0 + 200);
      v24 = *(_QWORD *)(v0 + 184);
      v25 = *(_QWORD *)(v0 + 176);
      v27 = *(_QWORD *)(v0 + 168);
      sub_1C28B99EC((__int128 *)(v0 + 56), v0 + 16);
      v8 = *(_QWORD *)(v0 + 40);
      v26 = *(_QWORD *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v8);
      *v7 = v2;
      v7[1] = v3;
      v7[2] = v4;
      swift_storeEnumTagMultiPayload();
      v9 = v5 + v6[7];
      *(_QWORD *)(v9 + 32) = 0;
      *(_OWORD *)v9 = 0u;
      *(_OWORD *)(v9 + 16) = 0u;
      sub_1C2A15858((uint64_t)v7, v5 + v6[5]);
      *(_QWORD *)(v5 + v6[6]) = MEMORY[0x1E0DEE9D8];
      OUTLINED_FUNCTION_33_0();
      swift_bridgeObjectRetain();
      sub_1C2CFBCA0();
      sub_1C29E8F24((uint64_t)v7, type metadata accessor for Parse);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v5, v24, v27);
      *(_BYTE *)(v5 + v6[8]) = 0;
      v28 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v26 + 24) + *(_QWORD *)(v26 + 24));
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 240) = v10;
      *v10 = v0;
      v10[1] = sub_1C2A2E694;
      return v28(*(_QWORD *)(v0 + 216), v8, v26);
    }
    sub_1C2A2EBA4(v0 + 56);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v16 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED7AA1B0);
    sub_1C2CFD350();
    v17 = sub_1C2CFD86C();
    v18 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v29 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v19 = 136315138;
      OUTLINED_FUNCTION_33_0();
      *(_QWORD *)(v0 + 136) = sub_1C28BB120(v2, v3, &v29);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_8();
      swift_release();
      _os_log_impl(&dword_1C28B6000, v17, v18, "Could not find a flow for invocation: %s", v19, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }
    swift_release();

    v20 = *(_QWORD *)(v0 + 160);
    sub_1C29B62D4();
    v21 = OUTLINED_FUNCTION_14();
    *v22 = 1;
    v23 = *(void **)(v20 + 16);
    *(_QWORD *)(v20 + 16) = v21;
    LOBYTE(v22) = *(_BYTE *)(v20 + 24);
    *(_BYTE *)(v20 + 24) = 64;
    sub_1C29B84A0(v23, v22);
  }
  else
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v12 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED7AA1B0);
    v13 = sub_1C2CFD86C();
    v14 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C28B6000, v13, v14, "Invocation sent exiting as complete.", v15, 2u);
      OUTLINED_FUNCTION_11_0();
    }

  }
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_5_38();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2A2E694(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  *(_BYTE *)(*(_QWORD *)v1 + 248) = a1;
  swift_task_dealloc();
  sub_1C29E8F24(v2, type metadata accessor for Input);
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A2E6FC()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  unint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  uint64_t v15;

  if (*(_BYTE *)(v0 + 248) == 1)
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 160) + 96) = 0;
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
    sub_1C2971FB0(v2, v3, (uint64_t *)(v0 + 96));
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    sub_1C2CFD350();
    static ExecuteResponse.ongoing<A>(next:childCompletion:)();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  else
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED7AA1B0);
    sub_1C2CFD350();
    v5 = sub_1C2CFD86C();
    v6 = sub_1C2CFE2B0();
    if (OUTLINED_FUNCTION_10_1(v6))
    {
      v8 = *(_QWORD *)(v0 + 224);
      v7 = *(_QWORD *)(v0 + 232);
      v9 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v15 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 144) = sub_1C28BB120(v8, v7, &v15);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_1C28B6000, v5, v1, "Provided flow opted to not handle invocation: %s", v9, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }
    swift_release();

    v10 = *(_QWORD *)(v0 + 160);
    sub_1C29B62D4();
    v11 = OUTLINED_FUNCTION_14();
    *v12 = 2;
    v13 = *(void **)(v10 + 16);
    *(_QWORD *)(v10 + 16) = v11;
    LOBYTE(v12) = *(_BYTE *)(v10 + 24);
    *(_BYTE *)(v10 + 24) = 64;
    sub_1C29B84A0(v13, v12);
    static ExecuteResponse.complete()();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_5_38();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C2A2E978(uint64_t *a1)
{
  char v1;
  uint64_t v2;
  char v3;

  v1 = *((_BYTE *)a1 + 8);
  v2 = *a1;
  v3 = v1;
  sub_1C2A2E9B4((uint64_t)&v2);
}

void sub_1C2A2E9B4(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  unsigned __int8 v11;

  v3 = v1;
  v4 = *(void **)a1;
  v5 = *(_BYTE *)(a1 + 8);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v6 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED7AA1B0);
  v7 = sub_1C2CFD86C();
  v8 = sub_1C2CFE2A4();
  if (OUTLINED_FUNCTION_10_1(v8))
  {
    v9 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1C28B6000, v7, v2, "Child flow returned with an exitValue.", v9, 2u);
    OUTLINED_FUNCTION_11_0();
  }

  v10 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v4;
  v11 = *(_BYTE *)(v3 + 24);
  *(_BYTE *)(v3 + 24) = v5;
  sub_1C29B8484(v4, v5);
  sub_1C29B84A0(v10, v11);
}

uint64_t sub_1C2A2EA9C()
{
  uint64_t v0;

  sub_1C29B84A0(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t sub_1C2A2EAD8()
{
  sub_1C2A2EA9C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DirectInvocationExecutingFlow()
{
  return objc_opt_self();
}

uint64_t sub_1C2A2EB18()
{
  return sub_1C2A2E1DC();
}

uint64_t sub_1C2A2EB38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28C33A0;
  return sub_1C2A2E1E0(a1);
}

id sub_1C2A2EB8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  v2 = *v1;
  v3 = *(void **)(*v1 + 16);
  *(_QWORD *)a1 = v3;
  v4 = *(_BYTE *)(v2 + 24);
  *(_BYTE *)(a1 + 8) = v4;
  return sub_1C29B8484(v3, v4);
}

uint64_t sub_1C2A2EBA4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78FC60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2A2EBE4(uint64_t *a1)
{
  sub_1C2A2E978(a1);
}

uint64_t storeEnumTagSinglePayload for DirectInvocationExecutingFlow.DirectInvocationFlowError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C2A2EC38 + 4 * byte_1C2D086E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C2A2EC6C + 4 * byte_1C2D086E0[v4]))();
}

uint64_t sub_1C2A2EC6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A2EC74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A2EC7CLL);
  return result;
}

uint64_t sub_1C2A2EC88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A2EC90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C2A2EC94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A2EC9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DirectInvocationExecutingFlow.DirectInvocationFlowError()
{
  return &type metadata for DirectInvocationExecutingFlow.DirectInvocationFlowError;
}

unint64_t sub_1C2A2ECC0()
{
  unint64_t result;

  result = qword_1EF78FC68;
  if (!qword_1EF78FC68)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08834, &type metadata for DirectInvocationExecutingFlow.DirectInvocationFlowError);
    atomic_store(result, (unint64_t *)&qword_1EF78FC68);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_38()
{
  return swift_task_dealloc();
}

void *sub_1C2A2ED0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  BOOL v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  BOOL v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  const char *v66;
  void *result;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  _QWORD v73[2];
  __int128 v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[2];

  v4 = type metadata accessor for Parse(0);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (_QWORD *)((char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Input(0);
  sub_1C2A15858(a1 + *(int *)(v8 + 20), (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1C2A2F8C4((uint64_t)v7);
    OUTLINED_FUNCTION_10_41();
    if (v50)
      goto LABEL_49;
    goto LABEL_60;
  }
  v9 = v7[1];
  v84 = *v7;
  v10 = v7[2];
  v11 = *(_QWORD *)(a2 + 64);
  v77 = a2 + 64;
  v12 = 1 << *(_BYTE *)(a2 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v15 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain();
  v16 = 0;
  v88 = 0;
  v17 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v18 = 136315138;
  v74 = v18;
  v73[1] = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v18 = 136315394;
  v81 = v18;
  *(_QWORD *)&v18 = 136315650;
  v82 = v18;
  v89 = v10;
  v76 = a2;
  v75 = v15;
  while (1)
  {
LABEL_5:
    if (v14)
    {
      v78 = (v14 - 1) & v14;
      v79 = v16;
      v19 = __clz(__rbit64(v14)) | (v16 << 6);
      goto LABEL_18;
    }
    v20 = __OFADD__(v16, 1);
    v21 = v16 + 1;
    if (v20)
    {
      __break(1u);
LABEL_60:
      swift_once();
LABEL_49:
      v61 = OUTLINED_FUNCTION_118();
      v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1ED7AA1B0);
      v63 = sub_1C2CFD86C();
      v64 = sub_1C2CFE2A4();
      if (OUTLINED_FUNCTION_48_7(v64))
      {
        v65 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_WORD *)v65 = 0;
        v66 = "Provided input is not a direct invocation with identifier. Will not process.";
        goto LABEL_51;
      }
LABEL_52:

      return 0;
    }
    if (v21 >= v15)
      goto LABEL_55;
    v22 = *(_QWORD *)(v77 + 8 * v21);
    if (v22)
      goto LABEL_17;
    if (v21 + 1 >= v15)
      goto LABEL_55;
    OUTLINED_FUNCTION_9_42();
    if (!v22)
    {
      if (v24 + 2 >= v15)
        goto LABEL_55;
      OUTLINED_FUNCTION_9_42();
      if (!v22)
      {
        if (v25 + 3 >= v15)
        {
LABEL_55:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          OUTLINED_FUNCTION_10_41();
          if (!v50)
            goto LABEL_62;
        }
        else
        {
          OUTLINED_FUNCTION_9_42();
          if (v22)
            goto LABEL_16;
          while (1)
          {
            v21 = v23 + 1;
            if (__OFADD__(v23, 1))
              break;
            if (v21 >= v15)
              goto LABEL_55;
            v22 = *(_QWORD *)(v77 + 8 * v21);
            ++v23;
            if (v22)
              goto LABEL_17;
          }
          __break(1u);
LABEL_62:
          swift_once();
        }
        v71 = OUTLINED_FUNCTION_118();
        v62 = __swift_project_value_buffer(v71, (uint64_t)qword_1ED7AA1B0);
        v63 = sub_1C2CFD86C();
        v72 = sub_1C2CFE2A4();
        if (OUTLINED_FUNCTION_48_7(v72))
        {
          v65 = (uint8_t *)OUTLINED_FUNCTION_6_0();
          *(_WORD *)v65 = 0;
          v66 = "Could not match DirectInvocation to any provided configuration. Will not process";
LABEL_51:
          _os_log_impl(&dword_1C28B6000, v63, v62, v66, v65, 2u);
          OUTLINED_FUNCTION_11_0();
        }
        goto LABEL_52;
      }
    }
LABEL_16:
    v21 = v23;
LABEL_17:
    v78 = (v22 - 1) & v22;
    v79 = v21;
    v19 = __clz(__rbit64(v22)) + (v21 << 6);
LABEL_18:
    v26 = *(_QWORD *)(a2 + 56);
    v27 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v19);
    v28 = v27[1];
    v83 = *v27;
    v29 = *(_QWORD *)(v26 + 8 * v19);
    v91 = type metadata accessor for ParameterWrapper();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v29;
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_33_0();
    v80 = inited;
    v31 = sub_1C29BFB5C(0x697461636F766E69, 0xEB00000000736E6FLL, v17);
    v32 = v31;
    v90 = *(_QWORD *)(v31 + 16);
    if (v90)
      break;
    OUTLINED_FUNCTION_97();
    OUTLINED_FUNCTION_10_41();
    if (!v50)
      swift_once();
    v56 = OUTLINED_FUNCTION_118();
    v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_19_0();
    v58 = sub_1C2CFD86C();
    v59 = sub_1C2CFE2B0();
    if (OUTLINED_FUNCTION_48_7(v59))
    {
      v60 = OUTLINED_FUNCTION_6_0();
      v93[0] = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v60 = v74;
      OUTLINED_FUNCTION_19_0();
      *(_QWORD *)(v60 + 4) = sub_1C28BB120(v83, v28, v93);
      OUTLINED_FUNCTION_26_10();
      _os_log_impl(&dword_1C28B6000, v58, v57, "No invocation configurations provided for eventId: %s", (uint8_t *)v60, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_29_2();
    swift_release();
    v14 = v78;
    v16 = v79;
  }
  v86 = v31;
  v87 = v28;
  v33 = 0;
  v35 = v88;
  v34 = v89;
  while (1)
  {
    v36 = *(_QWORD *)(v32 + 8 * v33 + 32);
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v36;
    OUTLINED_FUNCTION_31_9();
    v92 = v37;
    sub_1C2A48A44();
    if (v35)
    {
      OUTLINED_FUNCTION_10_41();
      if (!v50)
        swift_once();
      v40 = OUTLINED_FUNCTION_118();
      __swift_project_value_buffer(v40, (uint64_t)qword_1ED7AA1B0);
      v41 = v87;
      OUTLINED_FUNCTION_31_9();
      OUTLINED_FUNCTION_57_1();
      v42 = sub_1C2CFD86C();
      v43 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = v41;
        v45 = OUTLINED_FUNCTION_6_0();
        v85 = OUTLINED_FUNCTION_6_0();
        v93[0] = v85;
        *(_DWORD *)v45 = v82;
        OUTLINED_FUNCTION_33_0();
        *(_QWORD *)(v45 + 4) = sub_1C28BB120(v83, v44, v93);
        OUTLINED_FUNCTION_26_10();
        *(_WORD *)(v45 + 12) = 2080;
        *(_QWORD *)(v45 + 14) = sub_1C28BB120(0x696669746E656469, 0xEA00000000007265, v93);
        *(_WORD *)(v45 + 22) = 2080;
        OUTLINED_FUNCTION_57_1();
        v46 = sub_1C2CFDC74();
        v88 = v35;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v45 + 24) = OUTLINED_FUNCTION_211_0(v46, v47, v93);
        OUTLINED_FUNCTION_29_2();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C28B6000, v42, v43, "Configuration for eventId '%s' is invalid. Parameter %s is required: %s", (uint8_t *)v45, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }
      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_8_34();

      v35 = 0;
      goto LABEL_36;
    }
    v48 = v38;
    v49 = v39;
    swift_bridgeObjectRelease();
    v50 = v48 == v84 && v49 == v9;
    if (v50 || (sub_1C2CFE9DC() & 1) != 0)
      break;
    OUTLINED_FUNCTION_10_41();
    if (!v50)
      swift_once();
    v51 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v51, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_31_9();
    OUTLINED_FUNCTION_31_9();
    OUTLINED_FUNCTION_19_0();
    v52 = sub_1C2CFD86C();
    v53 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = OUTLINED_FUNCTION_6_0();
      v93[0] = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v54 = v81;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v54 + 4) = OUTLINED_FUNCTION_211_0(v84, v55, v93);
      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_26_10();
      *(_WORD *)(v54 + 12) = 2080;
      OUTLINED_FUNCTION_19_0();
      *(_QWORD *)(v54 + 14) = sub_1C28BB120(v48, v49, v93);
      OUTLINED_FUNCTION_26_10();
      _os_log_impl(&dword_1C28B6000, v52, v53, "Input DI identifier '%s' is not a match for desired identifier '%s'. Continuing", (uint8_t *)v54, 0x16u);
      OUTLINED_FUNCTION_102_3();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_8_34();
    OUTLINED_FUNCTION_29_2();
    OUTLINED_FUNCTION_29_2();
    OUTLINED_FUNCTION_29_2();
    v32 = v86;
LABEL_36:
    if (v90 == ++v33)
    {
      v88 = 0;
      OUTLINED_FUNCTION_97();
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v76;
      v15 = v75;
      v17 = MEMORY[0x1E0DEE9D8];
      v16 = v79;
      v14 = v78;
      goto LABEL_5;
    }
  }
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_97();
  swift_bridgeObjectRelease();
  v68 = (_QWORD *)swift_allocObject();
  v68[2] = v84;
  v68[3] = v9;
  v69 = v83;
  v68[4] = v34;
  v68[5] = v69;
  result = &unk_1EF78FD20;
  v70 = v92;
  v68[6] = v87;
  v68[7] = v70;
  return result;
}

uint64_t sub_1C2A2F63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2A2F660()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_31_9();
  OUTLINED_FUNCTION_31_9();
  OUTLINED_FUNCTION_31_9();
  v2 = sub_1C2CFD86C();
  v3 = sub_1C2CFE2A4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[8];
  if (v4)
  {
    v14 = v0[7];
    v6 = v0[4];
    v7 = OUTLINED_FUNCTION_6_0();
    v16 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v7 = 136315394;
    swift_bridgeObjectRetain();
    v0[2] = OUTLINED_FUNCTION_211_0(v6, v8, &v16);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_29_2();
    *(_WORD *)(v7 + 12) = 2080;
    OUTLINED_FUNCTION_57_1();
    v0[2] = sub_1C28BB120(v14, v5, &v16);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_26_10();
    _os_log_impl(&dword_1C28B6000, v2, v3, "Matched invocation identifier: %s to eventId: %s", (uint8_t *)v7, 0x16u);
    OUTLINED_FUNCTION_102_3();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_29_2();

  v9 = v0[8];
  v10 = v0[7];
  v11 = v0[3];
  v12 = sub_1C29BFC2C(0x6174614472657375, 0xE800000000000000, MEMORY[0x1E0DEE9E0]);
  *(_QWORD *)v11 = v10;
  *(_QWORD *)(v11 + 8) = v9;
  *(_QWORD *)(v11 + 16) = v12;
  *(_BYTE *)(v11 + 24) = 0;
  v15 = (uint64_t (*)(void))v0[1];
  OUTLINED_FUNCTION_33_0();
  return v15();
}

uint64_t type metadata accessor for DirectInvocationUserInputParser()
{
  return objc_opt_self();
}

void *sub_1C2A2F8B0(uint64_t a1, uint64_t a2)
{
  return sub_1C2A2ED0C(a1, a2);
}

uint64_t sub_1C2A2F8C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Parse(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2A2F900()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A2F93C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1C28C33A0;
  return sub_1C2A2F63C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t OUTLINED_FUNCTION_8_34()
{
  return swift_release();
}

uint64_t BasicDisambiguationItemContainer.__allocating_init(_:_:)(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 24) = a1;
  *(_BYTE *)(result + 16) = a2;
  return result;
}

uint64_t sub_1C2A2FA2C()
{
  return swift_bridgeObjectRetain();
}

uint64_t BasicDisambiguationItemContainer.init(_:_:)(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_BYTE *)(v2 + 16) = a2;
  return v2;
}

uint64_t sub_1C2A2FA44()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BasicDisambiguationItemContainer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BasicDisambiguationItemContainer.__deallocating_deinit()
{
  BasicDisambiguationItemContainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A2FA88()
{
  return sub_1C2A2FA2C();
}

uint64_t sub_1C2A2FAA8()
{
  return sub_1C2A2FA44() & 1;
}

uint64_t dispatch thunk of DisambiguationItemContaining.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DisambiguationItemContaining.shouldRequestUnlockForDisambiguation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1C2A2FADC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BasicDisambiguationItemContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BasicDisambiguationItemContainer);
}

uint64_t method lookup function for BasicDisambiguationItemContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BasicDisambiguationItemContainer.items.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of BasicDisambiguationItemContainer.__allocating_init(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of BasicDisambiguationItemContainer.shouldRequestUnlockForDisambiguation()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_1C2A2FB60(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  char *v32;
  char *v33;
  void (*v34)(char *, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56[40];
  uint64_t v57;

  v44 = a5;
  v45 = a8;
  v51 = a1;
  v52 = a2;
  v43 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_79_5();
  v53 = v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v15);
  v48 = (char *)&v39 - v16;
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_79_5();
  v47 = v19;
  v20 = swift_getAssociatedTypeWitness();
  v46 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_2_2();
  v42 = v23;
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v39 - v26;
  v49 = v8;
  v28 = a6;
  v29 = sub_1C2CFE1E4();
  if (!v29)
    return sub_1C2CFE01C();
  v30 = v29;
  v40 = v20;
  v57 = sub_1C2CFDC44();
  v50 = sub_1C2CFE76C();
  sub_1C2CFE724();
  v41 = v27;
  result = sub_1C2CFE1D8();
  if (v30 < 0)
  {
    __break(1u);
  }
  else
  {
    v54 = v28;
    v32 = v48;
    v33 = v41;
    while (1)
    {
      v34 = (void (*)(char *, _QWORD))sub_1C2CFE250();
      (*(void (**)(char *))(v14 + 16))(v32);
      v34(v56, 0);
      v35 = v55;
      v51(v32, v53);
      if (v35)
        break;
      v55 = 0;
      OUTLINED_FUNCTION_26_24();
      sub_1C2CFE754();
      sub_1C2CFE220();
      if (!--v30)
      {
        v36 = v46;
        v37 = v42;
        v38 = v40;
        (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v42, v33, v40);
        sub_1C2CFE610();
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
        return v57;
      }
    }
    OUTLINED_FUNCTION_26_24();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v40);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v45, v53, v44);
  }
  return result;
}

void sub_1C2A2FE54()
{
  OUTLINED_FUNCTION_29_19();
  swift_beginAccess();
  type metadata accessor for DisambiguationPrompt.State();
}

void sub_1C2A2FE90(uint64_t a1)
{
  OUTLINED_FUNCTION_45_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16));
  OUTLINED_FUNCTION_126_2();
}

void sub_1C2A2FEA8()
{
  OUTLINED_FUNCTION_29_19();
  swift_beginAccess();
  type metadata accessor for DisambiguationPrompt.State();
}

void sub_1C2A2FEE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 40))(v2, v1, a1);
  swift_endAccess();
  OUTLINED_FUNCTION_126_2();
}

void DisambiguationPrompt.__allocating_init(choices:usoKeyPath:responseBundleProducer:itemToEntityMapper:responseFactory:)()
{
  swift_allocObject();
  OUTLINED_FUNCTION_7_37();
  DisambiguationPrompt.init(choices:usoKeyPath:responseBundleProducer:itemToEntityMapper:responseFactory:)();
}

uint64_t sub_1C2A2FF64()
{
  uint64_t v0;

  return v0;
}

void DisambiguationPrompt.init(choices:usoKeyPath:responseBundleProducer:itemToEntityMapper:responseFactory:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[26];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_9();
  v23[15] = v1;
  v3 = v2;
  v23[9] = v2;
  v5 = v4;
  v23[8] = v4;
  v23[14] = v6;
  v23[12] = v7;
  v9 = v8;
  v23[10] = v8;
  v10 = (_QWORD *)*v0;
  v12 = v10[11];
  v11 = v10[12];
  v13 = v10[13];
  OUTLINED_FUNCTION_7_37();
  v18 = type metadata accessor for USOKeyPath(v14, v15, v16, v17);
  v19 = *(_QWORD *)(v18 - 8);
  v23[4] = v18;
  v23[11] = *(_QWORD *)(v19 + 64);
  v23[7] = v19;
  MEMORY[0x1E0C80A78](v18, v20);
  v23[2] = (char *)v23 - v21;
  v34 = v9;
  v24 = v10[10];
  v22 = v24;
  v25 = v12;
  v26 = v11;
  v27 = v13;
  v28 = v5;
  v29 = v3;
  sub_1C2CFE088();
  v30 = v22;
  v31 = v12;
  v23[13] = v22;
  v32 = v11;
  v33 = v13;
  type metadata accessor for DisambiguationPrompt.Choice();
}

void sub_1C2A3007C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v11 = MEMORY[0x1E0DEAF50];
  *(_QWORD *)(v9 - 360) = v5;
  v12 = MEMORY[0x1C3BC9CD4](v11, v5);
  *(_QWORD *)(v9 - 352) = v12;
  v1[2] = sub_1C2A2FB60((void (*)(char *, uint64_t))sub_1C2A3046C, v9 - 208, v5, a1, MEMORY[0x1E0DEDCE8], v12, MEMORY[0x1E0DEDD18], v13);
  v16 = type metadata accessor for InputResolverAdapter(0, v3, v14, v15);
  v17 = *(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 16);
  *(_QWORD *)(v9 - 376) = v17;
  v18 = *(_QWORD *)(v9 - 384);
  v17(v18, *(_QWORD *)(v9 - 304), v8);
  OUTLINED_FUNCTION_7_37();
  v23 = type metadata accessor for PromptInputResolver(v19, v20, v21, v22);
  *(_QWORD *)(v9 - 120) = v23;
  *(_QWORD *)(v9 - 112) = MEMORY[0x1C3BC9CD4](&unk_1C2D16A78, v23);
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v9 - 144));
  OUTLINED_FUNCTION_7_37();
  *(_QWORD *)(v9 - 392) = v2;
  sub_1C2B5F45C(v24, v25, v26, v27, v28);
  v29 = sub_1C2A30530((__int128 *)(v9 - 144));
  v1[18] = v16;
  v1[19] = MEMORY[0x1C3BC9CD4](&unk_1C2D08C2C, v16);
  v1[15] = v29;
  sub_1C28B9A48(*(_QWORD *)(v9 - 288), (uint64_t)(v1 + 3));
  sub_1C28B9A48(*(_QWORD *)(v9 - 280), (uint64_t)(v1 + 8));
  *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 320);
  *(_QWORD *)(v9 - 256) = v6;
  *(_QWORD *)(v9 - 248) = v4;
  *(_QWORD *)(v9 - 240) = v3;
  *(_QWORD *)(v9 - 232) = v2;
  v30 = *(_QWORD *)(v9 - 328);
  *(_QWORD *)(v9 - 224) = *(_QWORD *)(v9 - 336);
  *(_QWORD *)(v9 - 216) = v30;
  v32 = sub_1C2A2FB60((void (*)(char *, uint64_t))sub_1C2A30570, v9 - 272, *(_QWORD *)(v9 - 360), v3, MEMORY[0x1E0DEDCE8], *(_QWORD *)(v9 - 352), MEMORY[0x1E0DEDD18], v31);
  swift_bridgeObjectRelease();
  v33 = v18;
  v34 = *(_QWORD *)(v9 - 304);
  v35 = *(_QWORD *)(v9 - 368);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 376))(v18, v34, v35);
  v36 = *(_QWORD *)(v9 - 344);
  v37 = (*(unsigned __int8 *)(v36 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v38 = (_QWORD *)swift_allocObject();
  v38[2] = *(_QWORD *)(v9 - 296);
  v38[3] = v4;
  *(_QWORD *)(v9 - 312) = v4;
  v39 = *(_QWORD *)(v9 - 392);
  v38[4] = v3;
  v38[5] = v39;
  v38[6] = v32;
  OUTLINED_FUNCTION_31_14((uint64_t)v38 + v37, v33, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32));
  v1[13] = sub_1C2A3086C;
  v1[14] = v38;
  if (*(_QWORD *)(v34 + 24))
  {
    v40 = *(_QWORD *)(v34 + 16);
    v41 = *(_QWORD *)(v34 + 24);
  }
  else
  {
    v40 = 0;
    v41 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v9 - 280));
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v9 - 288));
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
  v1[20] = v40;
  v1[21] = v41;
  v42 = *(_QWORD *)(v9 - 312);
  *(_QWORD *)(v9 - 144) = *(_QWORD *)(v9 - 296);
  *(_QWORD *)(v9 - 136) = v42;
  *(_QWORD *)(v9 - 128) = v3;
  *(_QWORD *)(v9 - 120) = v39;
  type metadata accessor for DisambiguationPrompt.Response();
}

void sub_1C2A3032C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  sub_1C2CFEAF0();
  v0 = OUTLINED_FUNCTION_34_22();
  __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
  OUTLINED_FUNCTION_1();
}

void sub_1C2A3036C(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v15[1] = a4;
  v9 = MEMORY[0x1E0C80A78](a1, a2);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, a1, v14);
  a2(a1);
  sub_1C2A304A8((uint64_t)v12, a3, a5);
}

void sub_1C2A3046C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C2A3036C(a1, *(void (**)(uint64_t))(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40), a2);
}

void type metadata accessor for DisambiguationPrompt.Choice()
{
  JUMPOUT(0x1C3BC9C14);
}

uint64_t type metadata accessor for InputResolverAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InputResolverAdapter);
}

void sub_1C2A304A8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for DisambiguationPrompt.Choice();
}

uint64_t sub_1C2A30500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return OUTLINED_FUNCTION_91_7(v3 + *(int *)(a1 + 52), v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
}

uint64_t sub_1C2A30530(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1C28B99EC(a1, v2 + 16);
  return v2;
}

uint64_t sub_1C2A30570()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

void sub_1C2A30598(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33 = a2;
  v38 = a6;
  v10 = sub_1C2CFE478();
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v29 - v12;
  v14 = sub_1C2CFC438();
  v36 = *(_QWORD *)(v14 - 8);
  v37 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v30 = a5;
  v31 = (char *)&v29 - v16;
  v29 = a3;
  v17 = type metadata accessor for USOKeyPath(0, a3, a4, a5);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v21 = (char *)&v29 - v20;
  v22 = type metadata accessor for SystemGaveOptionsDialogActGenerator(0, a3, a4, a5);
  v32 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (uint64_t *)((char *)&v29 - v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v33, v17);
  v26 = (uint64_t)v21;
  v27 = v29;
  sub_1C2C61E40(a1, v26, v29, a4, v30, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, a4);
  swift_bridgeObjectRetain();
  v28 = (uint64_t)v31;
  USOKeyPath.createTask(with:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  sub_1C2C61EC4(v28, v22, v27, v38);
}

uint64_t sub_1C2A3076C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 104) + 8))(v1, *(_QWORD *)(v3 - 96));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v2, v0);
}

uint64_t sub_1C2A307B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[4];
  v2 = type metadata accessor for USOKeyPath(0, v0[3], v1, v0[5]);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 56) & ~v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v1 - 8) + 8))((char *)v0 + v4 + *(int *)(v2 + 52), v1);
  OUTLINED_FUNCTION_47_15();
  OUTLINED_FUNCTION_47_15();
  return swift_deallocObject();
}

void sub_1C2A3086C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for USOKeyPath(0, v3, v4, v5) - 8) + 80);
  sub_1C2A30598(v1[6], (uint64_t)v1 + ((v6 + 56) & ~v6), v3, v4, v5, a1);
}

void type metadata accessor for DisambiguationPrompt.Response()
{
  JUMPOUT(0x1C3BC9C14);
}

void sub_1C2A308F8()
{
  OUTLINED_FUNCTION_9();
  type metadata accessor for DisambiguationPrompt.Response();
}

void sub_1C2A3093C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v0 - 352) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v1 = sub_1C2CFEAF0();
  v4 = type metadata accessor for Conclude(0, v1, v2, v3);
  *(_QWORD *)(v0 - 360) = v4;
  *(_QWORD *)(v0 - 368) = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v5, v6);
  *(_QWORD *)(v0 - 376) = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_39_18();
  type metadata accessor for DisambiguationPrompt.State();
}

void sub_1C2A309DC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v0, v1);
  sub_1C2A2FE54();
}

void sub_1C2A30A04()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_35_18(v3, 1, v4);
  if (!v9)
  {
    OUTLINED_FUNCTION_91_7(v7, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 376) + 32));
    OUTLINED_FUNCTION_39_18();
    type metadata accessor for DisambiguationPrompt();
  }
  v10 = v2;
  *(_QWORD *)(v8 - 368) = v6;
  sub_1C28B9A48((uint64_t)(v1 + 3), v8 - 288);
  sub_1C28B9A48((uint64_t)(v1 + 8), v8 - 240);
  v11 = v1[13];
  v12 = v1[14];
  v13 = qword_1ED7A7F80;
  sub_1C2CFD350();
  if (v13 != -1)
    swift_once();
  v14 = *(_QWORD *)algn_1ED7A7F70;
  *(_QWORD *)(v8 - 336) = qword_1ED7A7F68;
  *(_QWORD *)(v8 - 328) = v14;
  sub_1C2B60404((__int128 *)(v8 - 288), (__int128 *)(v8 - 240), v11, v12, (uint64_t *)(v8 - 336), (_QWORD *)(v8 - 200));
  v15 = v1[2];
  sub_1C28B9A48((uint64_t)(v1 + 15), v8 - 240);
  *(_QWORD *)(v8 - 288) = v15;
  sub_1C28B99EC((__int128 *)(v8 - 240), v8 - 280);
  type metadata accessor for Prompt(0, v4, v16, v17);
  v18 = type metadata accessor for PromptOutputGenerator(0, v5, v10, v0);
  *(_QWORD *)(v8 - 216) = v18;
  *(_QWORD *)(v8 - 208) = &off_1E7C916A0;
  v19 = swift_allocObject();
  *(_QWORD *)(v8 - 240) = v19;
  *(_QWORD *)(v8 - 360) = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19 + 16, v8 - 200, v18);
  *(_QWORD *)(v8 - 336) = *(_QWORD *)(v8 - 368);
  *(_QWORD *)(v8 - 328) = v10;
  *(_QWORD *)(v8 - 320) = v5;
  *(_QWORD *)(v8 - 312) = v0;
  type metadata accessor for ChoiceResolver();
}

void type metadata accessor for DisambiguationPrompt.State()
{
  JUMPOUT(0x1C3BC9C14);
}

void type metadata accessor for DisambiguationPrompt()
{
  JUMPOUT(0x1C3BC9C14);
}

uint64_t sub_1C2A30ED4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void type metadata accessor for ChoiceResolver()
{
  JUMPOUT(0x1C3BC9C14);
}

uint64_t sub_1C2A30F1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void sub_1C2A30F48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C2A314E8(a1, a2, v2);
}

void sub_1C2A30F60()
{
  type metadata accessor for DisambiguationPrompt.State();
}

void sub_1C2A30FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x1E0C80A78](a1, a2);
  *(_QWORD *)(v13 - 128) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v11;
  *(_QWORD *)(v13 - 88) = v12;
  type metadata accessor for DisambiguationPrompt.Response();
}

void sub_1C2A30FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[96];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v3 = sub_1C2CFEAF0();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x1E0C80A78](v3, v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6, v9);
  v11 = &v23[-v10];
  if (qword_1ED7AA040 != -1)
    swift_once();
  v12 = sub_1C2CFD878();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED7AA1B0);
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16);
  v13(v11, v1, v3);
  v14 = sub_1C2CFD86C();
  v15 = sub_1C2CFE298();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_QWORD *)(v2 - 144) = v1;
    v18 = v17;
    *(_QWORD *)(v2 - 112) = v17;
    *(_QWORD *)(v2 - 136) = v0;
    *(_DWORD *)v16 = 136315138;
    *(_QWORD *)(v2 - 152) = v16 + 4;
    v13(v8, (uint64_t)v11, v3);
    v19 = sub_1C2CFDDAC();
    *(_QWORD *)(v2 - 120) = sub_1C28BB120(v19, v20, (uint64_t *)(v2 - 112));
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v11, v3);
    _os_log_impl(&dword_1C28B6000, v14, v15, "[DisambiguationPrompt] received response %s)", v16, 0xCu);
    swift_arrayDestroy();
    v21 = v18;
    v1 = *(_QWORD *)(v2 - 144);
    MEMORY[0x1C3BC9DE8](v21, -1, -1);
    MEMORY[0x1C3BC9DE8](v16, -1, -1);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v11, v3);
  }

  v22 = *(_QWORD *)(v2 - 128);
  v13((_BYTE *)v22, v1, v3);
  __swift_storeEnumTagSinglePayload(v22, 0, 1, v3);
  sub_1C2A2FEA8();
}

void sub_1C2A31244()
{
  sub_1C2A30F60();
}

void sub_1C2A3124C()
{
  type metadata accessor for DisambiguationPrompt.State();
}

void sub_1C2A31294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (uint64_t *)((char *)&v23 - v9);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v11 = sub_1C2CFD878();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED7AA1B0);
  v12 = v3;
  v13 = v3;
  v14 = sub_1C2CFD86C();
  v15 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v14, v15))
  {
    *(_QWORD *)(v8 - 144) = v7;
    v16 = swift_slowAlloc();
    *(_QWORD *)(v8 - 120) = v4;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    *(_QWORD *)(v8 - 128) = v5;
    v19 = (_QWORD *)v18;
    *(_QWORD *)(v8 - 136) = v2;
    *(_DWORD *)v17 = 138412290;
    v20 = v3;
    v21 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v8 - 112) = v21;
    v7 = *(_QWORD *)(v8 - 144);
    v2 = *(_QWORD *)(v8 - 136);
    sub_1C2CFE4D8();
    *v19 = v21;

    _os_log_impl(&dword_1C28B6000, v14, v15, "[DisambiguationPrompt] received unexpected failure %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79AEF0);
    swift_arrayDestroy();
    v22 = v19;
    v5 = *(_QWORD *)(v8 - 128);
    MEMORY[0x1C3BC9DE8](v22, -1, -1);
    MEMORY[0x1C3BC9DE8](v17, -1, -1);
  }
  else
  {

  }
  *v10 = v3;
  *(_QWORD *)(v8 - 112) = v2;
  *(_QWORD *)(v8 - 104) = v5;
  *(_QWORD *)(v8 - 96) = v6;
  *(_QWORD *)(v8 - 88) = v7;
  type metadata accessor for DisambiguationPrompt.Response();
}

void sub_1C2A314E0()
{
  sub_1C2A3124C();
}

void sub_1C2A314E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;
  _OWORD v15[2];

  type metadata accessor for SiriKitEventPayload(0);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v9 = 56;
  *((_QWORD *)v9 + 1) = a1;
  *((_QWORD *)v9 + 2) = a2;
  *((_QWORD *)v9 + 4) = 0;
  *((_QWORD *)v9 + 5) = 0;
  *((_QWORD *)v9 + 3) = 0;
  memset(v15, 0, sizeof(v15));
  sub_1C2A37434((uint64_t)v15, (uint64_t)(v9 + 48), &qword_1ED7A8480);
  *((_QWORD *)v9 + 10) = 0;
  *((_QWORD *)v9 + 11) = 0;
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_1C2A37434((uint64_t)v13, (uint64_t)(v9 + 96), (uint64_t *)&unk_1ED7A8750);
  v11 = *(_QWORD *)(a3 + 160);
  v10 = *(_QWORD *)(a3 + 168);
  v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v12 = v11 & 0xFFFFFFFFFFFFLL;
  if (v12)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = 0;
    v10 = 0;
  }
  type metadata accessor for SiriKitEvent(0);
  *((_QWORD *)v9 + 17) = v11;
  *((_QWORD *)v9 + 18) = v10;
  *(_OWORD *)(v9 + 152) = 0u;
  *(_OWORD *)(v9 + 168) = 0u;
  v9[184] = 29;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v9, 0);
}

void sub_1C2A31628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[14];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v26 = a3;
  v24[11] = a1;
  v24[12] = a2;
  v24[13] = a4;
  v4 = *(_QWORD **)a4;
  v5 = *(_QWORD *)(*(_QWORD *)a4 + 96);
  v24[3] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v24[2] = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SiriKitEventPayload(0);
  v8 = MEMORY[0x1E0C80A78](v25, v7);
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v24[5] = (char *)v24 - v15;
  v17 = MEMORY[0x1E0C80A78](v14, v16);
  v24[6] = (char *)v24 - v18;
  v24[1] = *(_QWORD *)(v4[10] - 8);
  MEMORY[0x1E0C80A78](v17, v19);
  v24[4] = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v4[11];
  v22 = v4[13];
  v24[9] = v23;
  v27 = v23;
  v28 = v21;
  v24[7] = v21;
  v24[10] = v5;
  v29 = v5;
  v30 = v22;
  v24[8] = v22;
  type metadata accessor for DisambiguationPrompt.Response();
}

uint64_t sub_1C2A317C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v53[96];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x1E0C80A78](a1, a2);
  v10 = &v53[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = &v53[-v12];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v14 = sub_1C2CFEAF0();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (void **)&v53[-v16];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v18 + 16))(&v53[-v16], *(_QWORD *)(v5 - 216), v14);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(_BYTE *, void **, uint64_t))(v7 + 32))(v13, v17, a1);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v13, a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)(v5 - 216) = v7;
        v27 = *(_QWORD *)(v5 - 312);
        v28 = v10;
        v29 = *(_QWORD *)(v5 - 256);
        (*(void (**)(_QWORD, _BYTE *, uint64_t))(v27 + 32))(*(_QWORD *)(v5 - 320), v28, v29);
        v30 = *(_QWORD *)(v5 - 296);
        *(_BYTE *)v30 = 57;
        v31 = *(_QWORD *)(v5 - 240);
        *(_QWORD *)(v30 + 8) = *(_QWORD *)(v5 - 248);
        *(_QWORD *)(v30 + 16) = v31;
        *(_QWORD *)(v30 + 32) = 0;
        *(_QWORD *)(v30 + 40) = 0;
        *(_QWORD *)(v30 + 24) = 0;
        *(_QWORD *)(v30 + 72) = v29;
        __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v30 + 48));
        (*(void (**)(void))(v27 + 16))();
        swift_bridgeObjectRetain();
        v32 = *(_QWORD *)(v5 - 280);
        *(_QWORD *)(v5 - 176) = *(_QWORD *)(v5 - 264);
        *(_QWORD *)(v5 - 168) = v32;
        v33 = *(_QWORD *)(v5 - 272);
        *(_QWORD *)(v5 - 160) = v29;
        *(_QWORD *)(v5 - 152) = v33;
        type metadata accessor for DisambiguationPrompt.Choice();
      }
      *(_BYTE *)v3 = 57;
      v45 = *(_QWORD *)(v5 - 240);
      *(_QWORD *)(v3 + 8) = *(_QWORD *)(v5 - 248);
      *(_QWORD *)(v3 + 16) = v45;
      *(_OWORD *)(v3 + 24) = 0u;
      *(_OWORD *)(v3 + 40) = 0u;
      *(_OWORD *)(v3 + 56) = 0u;
      *(_QWORD *)(v3 + 72) = 0;
      swift_bridgeObjectRetain();
      v46 = *(_QWORD *)(v5 - 280);
      *(_QWORD *)(v5 - 176) = *(_QWORD *)(v5 - 264);
      *(_QWORD *)(v5 - 168) = v46;
      v47 = *(_QWORD *)(v5 - 272);
      *(_QWORD *)(v5 - 160) = *(_QWORD *)(v5 - 256);
      *(_QWORD *)(v5 - 152) = v47;
      type metadata accessor for DisambiguationPrompt.Choice();
    }
    *(_QWORD *)(v5 - 216) = v13;
    v39 = *(_QWORD *)(v5 - 264);
    swift_getTupleTypeMetadata2();
    v40 = *(_QWORD *)(v5 - 328);
    (*(void (**)(_QWORD, _BYTE *, uint64_t))(v40 + 32))(*(_QWORD *)(v5 - 304), v10, v39);
    v41 = *(_QWORD *)(v5 - 288);
    *(_BYTE *)v41 = 57;
    v42 = *(_QWORD *)(v5 - 240);
    *(_QWORD *)(v41 + 8) = *(_QWORD *)(v5 - 248);
    *(_QWORD *)(v41 + 16) = v42;
    *(_QWORD *)(v41 + 32) = 0;
    *(_QWORD *)(v41 + 40) = 0;
    *(_QWORD *)(v41 + 24) = 0;
    *(_QWORD *)(v41 + 72) = v39;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v41 + 48));
    (*(void (**)(void))(v40 + 16))();
    swift_bridgeObjectRetain();
    v43 = *(_QWORD *)(v5 - 280);
    *(_QWORD *)(v5 - 176) = v39;
    *(_QWORD *)(v5 - 168) = v43;
    v44 = *(_QWORD *)(v5 - 272);
    *(_QWORD *)(v5 - 160) = *(_QWORD *)(v5 - 256);
    *(_QWORD *)(v5 - 152) = v44;
    type metadata accessor for DisambiguationPrompt.Choice();
  }
  v19 = *v17;
  *(_QWORD *)(v5 - 176) = v19;
  v20 = v19;
  if (swift_dynamicCast())
  {
    *(_BYTE *)v2 = 5;
    v21 = *(_QWORD *)(v5 - 240);
    *(_QWORD *)(v2 + 8) = *(_QWORD *)(v5 - 248);
    *(_QWORD *)(v2 + 16) = v21;
    *(_QWORD *)(v2 + 32) = 0;
    *(_QWORD *)(v2 + 40) = 0;
    *(_QWORD *)(v2 + 24) = 0;
    *(_OWORD *)(v5 - 128) = 0u;
    *(_OWORD *)(v5 - 112) = 0u;
    sub_1C2A37434(v5 - 128, v2 + 48, &qword_1ED7A8480);
    *(_QWORD *)(v2 + 80) = 0;
    *(_QWORD *)(v2 + 88) = 0;
    *(_QWORD *)(v5 - 144) = 0;
    *(_OWORD *)(v5 - 176) = 0u;
    *(_OWORD *)(v5 - 160) = 0u;
    sub_1C2A37434(v5 - 176, v2 + 96, (uint64_t *)&unk_1ED7A8750);
    v22 = *(_QWORD *)(v5 - 232);
    v24 = *(_QWORD *)(v22 + 160);
    v23 = *(_QWORD *)(v22 + 168);
    v25 = HIBYTE(v23) & 0xF;
    if ((v23 & 0x2000000000000000) == 0)
      v25 = v24 & 0xFFFFFFFFFFFFLL;
    if (v25)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = 0;
      v23 = 0;
    }
    type metadata accessor for SiriKitEvent(0);
    *(_QWORD *)(v2 + 136) = v24;
    *(_QWORD *)(v2 + 144) = v23;
    *(_OWORD *)(v2 + 152) = 0u;
    *(_OWORD *)(v2 + 168) = 0u;
    *(_BYTE *)(v2 + 184) = 87;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v48 = v2;
  }
  else
  {
    *(_BYTE *)v4 = 6;
    v34 = *(_QWORD *)(v5 - 240);
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(v5 - 248);
    *(_QWORD *)(v4 + 16) = v34;
    *(_QWORD *)(v4 + 32) = 0;
    *(_QWORD *)(v4 + 40) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *(_OWORD *)(v5 - 128) = 0u;
    *(_OWORD *)(v5 - 112) = 0u;
    sub_1C2A37434(v5 - 128, v4 + 48, &qword_1ED7A8480);
    *(_QWORD *)(v4 + 80) = 0;
    *(_QWORD *)(v4 + 88) = 0;
    *(_QWORD *)(v5 - 144) = 0;
    *(_OWORD *)(v5 - 176) = 0u;
    *(_OWORD *)(v5 - 160) = 0u;
    sub_1C2A37434(v5 - 176, v4 + 96, (uint64_t *)&unk_1ED7A8750);
    v35 = *(_QWORD *)(v5 - 232);
    v37 = *(_QWORD *)(v35 + 160);
    v36 = *(_QWORD *)(v35 + 168);
    v38 = HIBYTE(v36) & 0xF;
    if ((v36 & 0x2000000000000000) == 0)
      v38 = v37 & 0xFFFFFFFFFFFFLL;
    if (v38)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v37 = 0;
      v36 = 0;
    }
    type metadata accessor for SiriKitEvent(0);
    *(_QWORD *)(v4 + 136) = v37;
    *(_QWORD *)(v4 + 144) = v36;
    *(_QWORD *)(v4 + 152) = 0;
    *(_QWORD *)(v4 + 160) = 0;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v4 + 168) = sub_1C2CFEA78();
    *(_QWORD *)(v4 + 176) = v49;
    *(_BYTE *)(v4 + 184) = 91;
    swift_storeEnumTagMultiPayload();
    v48 = v4;
  }
  SiriKitEvent.__allocating_init(_:builder:)(v48, 0);
  v51 = v50;

  return v51;
}

void sub_1C2A31F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1C2A31628(a1, a2, a3, v3);
}

void sub_1C2A31F98(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[3];

  v34 = a1;
  v7 = type metadata accessor for SiriKitEventPayload(0);
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v12);
  v14 = (char *)&v31 - v13;
  if (qword_1ED7A91D8 != -1)
    swift_once();
  v15 = sub_1C2CFD878();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED7AA150);
  swift_bridgeObjectRetain();
  v16 = a3;
  swift_bridgeObjectRetain();
  v17 = a3;
  v18 = sub_1C2CFD86C();
  v19 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    *(_QWORD *)&v35[0] = v31;
    *(_DWORD *)v20 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v37[0] = sub_1C28BB120(v34, a2, (uint64_t *)v35);
    v32 = a4;
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2080;
    v33 = a2;
    swift_getErrorValue();
    v21 = sub_1C2CFEA78();
    *(_QWORD *)&v37[0] = sub_1C28BB120(v21, v22, (uint64_t *)v35);
    a4 = v32;
    a2 = v33;
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C28B6000, v18, v19, "[DisambiguationPrompt#instrumentOnFailure(%s)]: %s", (uint8_t *)v20, 0x16u);
    v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v23, -1, -1);
    MEMORY[0x1C3BC9DE8](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  *(_QWORD *)&v35[0] = a3;
  v24 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  if (swift_dynamicCast())
  {
    type metadata accessor for SiriKitEvent(0);
    *v14 = 5;
    *((_QWORD *)v14 + 1) = v34;
    *((_QWORD *)v14 + 2) = a2;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 40) = 0u;
    *(_OWORD *)(v14 + 56) = 0u;
    *(_OWORD *)(v14 + 72) = 0u;
    *(_OWORD *)(v14 + 88) = 0u;
    *(_OWORD *)(v14 + 104) = 0u;
    *(_OWORD *)(v14 + 120) = 0u;
    v25 = *(_QWORD *)(a4 + 168);
    *((_QWORD *)v14 + 17) = *(_QWORD *)(a4 + 160);
    *((_QWORD *)v14 + 18) = v25;
    *(_OWORD *)(v14 + 152) = 0u;
    *(_OWORD *)(v14 + 168) = 0u;
    v14[184] = 87;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = (uint64_t)v14;
  }
  else
  {
    *v11 = 6;
    *((_QWORD *)v11 + 1) = v34;
    *((_QWORD *)v11 + 2) = a2;
    *((_QWORD *)v11 + 4) = 0;
    *((_QWORD *)v11 + 5) = 0;
    *((_QWORD *)v11 + 3) = 0;
    memset(v37, 0, 32);
    sub_1C2A37434((uint64_t)v37, (uint64_t)(v11 + 48), &qword_1ED7A8480);
    *((_QWORD *)v11 + 10) = 0;
    *((_QWORD *)v11 + 11) = 0;
    v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_1C2A37434((uint64_t)v35, (uint64_t)(v11 + 96), (uint64_t *)&unk_1ED7A8750);
    v28 = *(_QWORD *)(a4 + 160);
    v27 = *(_QWORD *)(a4 + 168);
    v29 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0)
      v29 = v28 & 0xFFFFFFFFFFFFLL;
    if (v29)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = 0;
      v27 = 0;
    }
    type metadata accessor for SiriKitEvent(0);
    *((_QWORD *)v11 + 17) = v28;
    *((_QWORD *)v11 + 18) = v27;
    *((_QWORD *)v11 + 19) = 0;
    *((_QWORD *)v11 + 20) = 0;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    *((_QWORD *)v11 + 21) = sub_1C2CFEA78();
    *((_QWORD *)v11 + 22) = v30;
    v11[184] = 91;
    swift_storeEnumTagMultiPayload();
    v26 = (uint64_t)v11;
  }
  SiriKitEvent.__allocating_init(_:builder:)(v26, 0);
}

void sub_1C2A323EC(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1C2A31F98(a1, a2, a3, v3);
}

unint64_t DisambiguationPrompt.Response.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  unint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_9();
  v30 = v2;
  v31 = v3;
  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v4, v0);
  OUTLINED_FUNCTION_332();
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v7, v10);
  OUTLINED_FUNCTION_125_2();
  v13 = v11 - v12;
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)v27 - v17;
  MEMORY[0x1E0C80A78](v16, v19);
  v21 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      OUTLINED_FUNCTION_31_14(v1, (uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
      v28 = 0;
      v29 = 0xE000000000000000;
      sub_1C2CFE670();
      sub_1C2CFDE54();
      sub_1C2CFDE54();
      sub_1C2CFE9B8();
      sub_1C2CFDE54();
      v24 = v28;
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
    }
    else
    {
      return 0xD000000000000027;
    }
  }
  else
  {
    v25 = *(_QWORD *)&v21[*(int *)(OUTLINED_FUNCTION_5_3() + 48)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v21, v8);
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_1C2CFE670();
    swift_bridgeObjectRelease();
    v28 = 0xD000000000000032;
    v29 = 0x80000001C2D2EAA0;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v13, v18, v8);
    sub_1C2CFDDAC();
    sub_1C2CFDE54();
    swift_bridgeObjectRelease();
    sub_1C2CFDE54();
    v27[1] = v25;
    sub_1C2CFE988();
    sub_1C2CFDE54();
    swift_bridgeObjectRelease();
    v24 = v28;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  }
  return v24;
}

void DisambiguationPrompt.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_bridgeObjectRelease();
  type metadata accessor for DisambiguationPrompt.State();
}

uint64_t sub_1C2A32708(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_33_1(a1);
  return v1;
}

void DisambiguationPrompt.__deallocating_deinit()
{
  DisambiguationPrompt.deinit();
}

uint64_t sub_1C2A32730()
{
  return swift_deallocClassInstance();
}

void sub_1C2A32748()
{
  sub_1C2A308F8();
}

void sub_1C2A32768()
{
  type metadata accessor for DisambiguationPrompt.State();
}

uint64_t method lookup function for DisambiguationPrompt()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DisambiguationPrompt.__allocating_init(choices:usoKeyPath:responseBundleProducer:itemToEntityMapper:responseFactory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DisambiguationPrompt.action.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t sub_1C2A32834()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1C2A3283C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      v3[5] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1C2A328DC(_QWORD *__dst, unsigned __int8 *__src, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;

  v4 = __dst;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_QWORD *)(v8 + 64) <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v9 = *(_QWORD *)(v8 + 64);
  v10 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80);
  if (v9 + 1 <= 0x18 && (v10 & 0x1000F8) == 0)
  {
    v13 = __src[v9];
    if (v13 >= 2)
    {
      if (v9 <= 3)
        v14 = v9;
      else
        v14 = 4;
      __asm { BR              X16 }
    }
    if (v13 == 1)
    {
      (*(void (**)(_QWORD *, unsigned __int8 *, uint64_t))(v8 + 16))(__dst, __src, v7);
      *((_BYTE *)v4 + v9) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v4 + v9) = 0;
    }
  }
  else
  {
    v12 = *(_QWORD *)__src;
    *v4 = *(_QWORD *)__src;
    v4 = (_QWORD *)(v12 + (((v10 & 0xF8 | 7u) + 16) & ~(unint64_t)(v10 & 0xF8 | 7u)));
    sub_1C2CFD350();
  }
  return v4;
}

uint64_t sub_1C2A32A64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = ((*(_QWORD *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v5 + 64) > v3)
    v3 = *(_QWORD *)(v5 + 64);
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
  {
    if (*(_BYTE *)(a1 + v3))
      v2 = *(_QWORD *)(v4 - 8);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v6 = v3;
    else
      v6 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1C2A32AC4 + 4 * byte_1C2D08995[v6]))();
  }
}

_BYTE *sub_1C2A32B24(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_QWORD *)(v8 + 64) <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v9 = *(_QWORD *)(v8 + 64);
  v10 = __src[v9];
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X15 }
  }
  if (v10 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v8 + 16))(__dst, __src, v7);
    __dst[v9] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v9] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C2A32C64(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(_QWORD *)(a3 + 32);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_QWORD *)(v9 + 64) <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
      v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    else
      v10 = *(_QWORD *)(v9 + 64);
    if (__dst[v10] >= 2u)
    {
      if (v10 <= 3)
        v11 = v10;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    v12 = *(_QWORD *)(v5 - 8);
    v13 = *(_QWORD *)(a3 + 16);
    if (__dst[v10])
    {
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(_QWORD *)(a3 + 32);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(__dst, v13);
    v14 = __src[v10];
    if (v14 >= 2)
    {
      if (v10 <= 3)
        v15 = v10;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(__dst, __src, v8);
      __dst[v10] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v10] = 0;
    }
  }
  return __dst;
}

_BYTE *sub_1C2A32E58(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_QWORD *)(v8 + 64) <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v9 = *(_QWORD *)(v8 + 64);
  v10 = __src[v9];
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X15 }
  }
  if (v10 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v8 + 32))(__dst, __src, v7);
    __dst[v9] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(_QWORD *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v9] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C2A32F98(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(_QWORD *)(a3 + 32);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_QWORD *)(v9 + 64) <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
      v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    else
      v10 = *(_QWORD *)(v9 + 64);
    if (__dst[v10] >= 2u)
    {
      if (v10 <= 3)
        v11 = v10;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    v12 = *(_QWORD *)(v5 - 8);
    v13 = *(_QWORD *)(a3 + 16);
    if (__dst[v10])
    {
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(_QWORD *)(a3 + 32);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(__dst, v13);
    v14 = __src[v10];
    if (v14 >= 2)
    {
      if (v10 <= 3)
        v15 = v10;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(__dst, __src, v8);
      __dst[v10] = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
      __dst[v10] = 0;
    }
  }
  return __dst;
}

uint64_t sub_1C2A3318C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 32) - 8) + 64);
  if (v3 <= ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v3 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2A33264 + 4 * byte_1C2D089B8[(v4 - 1)]))();
}

void sub_1C2A332B0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 32) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 32) - 8) + 64);
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2A33468(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 64);
  if (v2 <= ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v2 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2A334C4 + 4 * byte_1C2D089C6[v3]))();
}

void sub_1C2A3350C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 32) - 8) + 64) <= ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16)
                                                                                              - 8)
                                                                                  + 64)
                                                                      + 7) & 0xFFFFFFFFFFFFFFF8)
                                                                    + 8)
    v4 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 32) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1C2A335E8()
{
  return swift_initClassMetadata2();
}

void sub_1C2A33628()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[22];

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v14[15] = v2;
  v3 = v0[3];
  v4 = sub_1C2CFE478();
  v14[6] = *(_QWORD *)(v4 - 8);
  v14[7] = v4;
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v5, v6);
  v14[8] = (char *)v14 - v7;
  v14[4] = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_79_5();
  v14[5] = v10;
  v11 = v1[2];
  v13 = v1[4];
  v12 = v1[5];
  v14[11] = v1;
  v14[12] = v11;
  v14[17] = v11;
  v14[18] = v13;
  v14[13] = v13;
  v14[14] = v12;
  v14[16] = v3;
  v14[19] = v3;
  v14[20] = v12;
  type metadata accessor for DisambiguationPrompt.Choice();
}

void sub_1C2A336D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v10 - 184) = OUTLINED_FUNCTION_5_3();
  v12 = sub_1C2CFE478();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_125_2();
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v17 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  OUTLINED_FUNCTION_125_2();
  v21 = v19 - v20;
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&a9 - v24;
  type metadata accessor for Input(0);
  if ((sub_1C2B17E7C() & 1) != 0)
  {
    sub_1C29E8F60();
    **(_QWORD **)(v10 - 136) = swift_allocError();
    v26 = *(_QWORD *)(v10 - 152);
    *(_QWORD *)(v10 - 120) = *(_QWORD *)(v10 - 160);
    *(_QWORD *)(v10 - 112) = v26;
    v27 = *(_QWORD *)(v10 - 144);
    *(_QWORD *)(v10 - 104) = *(_QWORD *)(v10 - 128);
    *(_QWORD *)(v10 - 96) = v27;
    type metadata accessor for DisambiguationPrompt.Response();
  }
  *(_QWORD *)(v10 - 248) = v21;
  *(_QWORD *)(v10 - 240) = v25;
  *(_QWORD *)(v10 - 232) = v17;
  sub_1C2A33AB8(v9, *(_QWORD *)(v10 - 168));
}

void sub_1C2A33A80()
{
  OUTLINED_FUNCTION_32_26();
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  OUTLINED_FUNCTION_49_7();
  JUMPOUT(0x1C2A33808);
}

void sub_1C2A33AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, uint64_t, uint64_t);
  void (*v15)(uint64_t *, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v24;
  uint64_t v25;
  uint64_t v26;

  type metadata accessor for Input(0);
  v4 = sub_1C2A346B4();
  if ((v5 & 1) == 0)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      v6 = v4 - 1;
      v26 = v4 - 1;
      v13 = *(_QWORD *)(a2 - 8);
      v14 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16);
      v14(&v23, v2, a2);
      if ((v6 & 0x8000000000000000) == 0)
        type metadata accessor for DisambiguationPrompt.Choice();
      v15 = *(void (**)(uint64_t *, uint64_t))(v13 + 8);
      v15(&v23, a2);
      if (qword_1ED7AA040 != -1)
        swift_once();
      v16 = sub_1C2CFD878();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED7AA1B0);
      v14(&v23, v2, a2);
      v17 = sub_1C2CFD86C();
      v18 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        *(_DWORD *)v19 = 134218240;
        swift_beginAccess();
        sub_1C2CFE4D8();
        *(_WORD *)(v19 + 12) = 2048;
        type metadata accessor for DisambiguationPrompt.Choice();
      }
      v15(&v23, a2);

      v20 = *(_QWORD *)(a2 + 24);
      v21 = *(_QWORD *)(a2 + 32);
      v22 = *(_QWORD *)(a2 + 40);
      v23 = *(_QWORD *)(a2 + 16);
      v24.i64[0] = v21;
      v24.i64[1] = v20;
      v25 = v22;
      type metadata accessor for DisambiguationPrompt.Choice();
    }
    v12 = *(_QWORD *)(a2 + 40);
    v23 = *(_QWORD *)(a2 + 16);
    v24 = vextq_s8(*(int8x16_t *)(a2 + 24), *(int8x16_t *)(a2 + 24), 8uLL);
    v25 = v12;
    type metadata accessor for DisambiguationPrompt.Choice();
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v7 = sub_1C2CFD878();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED7AA1B0);
  v8 = sub_1C2CFD86C();
  v9 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C28B6000, v8, v9, "ChoiceResolver: No positional reference found in parse", v10, 2u);
    MEMORY[0x1C3BC9DE8](v10, -1, -1);
  }

  v11 = *(_QWORD *)(a2 + 40);
  v23 = *(_QWORD *)(a2 + 16);
  v24 = vextq_s8(*(int8x16_t *)(a2 + 24), *(int8x16_t *)(a2 + 24), 8uLL);
  v25 = v11;
  type metadata accessor for DisambiguationPrompt.Choice();
}

void sub_1C2A34020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_OWORD *, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int8x16_t v36;
  uint64_t v37;
  _OWORD v38[3];

  v3 = v2;
  v6 = type metadata accessor for Parse(0);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (uint64_t *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for Input(0);
  sub_1C2A15858(a1 + *(int *)(v10 + 20), (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v11 = *v9;
    v12 = v9[1];
    v13 = v9[2];
    if ((v11 != 0xD00000000000002ELL || v12 != 0x80000001C2D2EB20) && (sub_1C2CFE9DC() & 1) == 0)
    {
      v19 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)&v38[0] = *(_QWORD *)(a2 + 16);
      *(int8x16_t *)((char *)v38 + 8) = vextq_s8(*(int8x16_t *)(a2 + 24), *(int8x16_t *)(a2 + 24), 8uLL);
      *((_QWORD *)&v38[1] + 1) = v19;
      type metadata accessor for DisambiguationPrompt.Choice();
    }
    if (v13)
    {
      sub_1C28C1A54();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v38[1] + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v14 = v35;
          v15 = *(_QWORD *)(a2 - 8);
          v16 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v15 + 16);
          v16(v38, v3, a2);
          if ((v14 & 0x8000000000000000) == 0)
          {
            v17 = *(_QWORD *)(a2 + 40);
            v35 = *(_QWORD *)(a2 + 16);
            v36 = vextq_s8(*(int8x16_t *)(a2 + 24), *(int8x16_t *)(a2 + 24), 8uLL);
            v37 = v17;
            type metadata accessor for DisambiguationPrompt.Choice();
          }
          v20 = *(void (**)(_OWORD *, uint64_t))(v15 + 8);
          v20(v38, a2);
          if (qword_1ED7AA040 != -1)
            swift_once();
          v21 = sub_1C2CFD878();
          __swift_project_value_buffer(v21, (uint64_t)qword_1ED7AA1B0);
          v16(v38, v3, a2);
          v22 = sub_1C2CFD86C();
          v23 = sub_1C2CFE2B0();
          v24 = v23;
          if (os_log_type_enabled(v22, v23))
          {
            v25 = swift_slowAlloc();
            *(_DWORD *)v25 = 134218240;
            v35 = v14;
            sub_1C2CFE4D8();
            *(_WORD *)(v25 + 12) = 2048;
            v33 = v25 + 14;
            v26 = *(_QWORD *)(a2 + 16);
            v27 = *(_QWORD *)(a2 + 24);
            v34 = v24;
            v29 = *(_QWORD *)(a2 + 32);
            v28 = *(_QWORD *)(a2 + 40);
            v35 = v26;
            v36.i64[0] = v29;
            v36.i64[1] = v27;
            v37 = v28;
            type metadata accessor for DisambiguationPrompt.Choice();
          }
          v20(v38, a2);

          v30 = *(_QWORD *)(a2 + 24);
          v32 = *(_QWORD *)(a2 + 32);
          v31 = *(_QWORD *)(a2 + 40);
          *(_QWORD *)&v38[0] = *(_QWORD *)(a2 + 16);
          *((_QWORD *)&v38[0] + 1) = v32;
          *(_QWORD *)&v38[1] = v30;
          *((_QWORD *)&v38[1] + 1) = v31;
LABEL_14:
          type metadata accessor for DisambiguationPrompt.Choice();
        }
LABEL_13:
        v18 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)&v38[0] = *(_QWORD *)(a2 + 16);
        *(int8x16_t *)((char *)v38 + 8) = vextq_s8(*(int8x16_t *)(a2 + 24), *(int8x16_t *)(a2 + 24), 8uLL);
        *((_QWORD *)&v38[1] + 1) = v18;
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      memset(v38, 0, 32);
    }
    sub_1C28BB37C((uint64_t)v38, &qword_1ED7A8480);
    goto LABEL_13;
  }
  sub_1C28C9F68((uint64_t)v9, type metadata accessor for Parse);
  goto LABEL_13;
}

uint64_t sub_1C2A345AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8 = *(_QWORD *)(a2 + 24);
  v9 = type metadata accessor for Interpretable(0, v8, a3, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  v13 = (char *)&v18 - v12;
  v14 = v5[4];
  v15 = v5[5];
  __swift_project_boxed_opaque_existential_1(v5 + 1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a1, v14, v15);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a5, v13, v8);
    v16 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a5, v16, 1, v8);
}

uint64_t sub_1C2A346B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  _DWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18[4];

  sub_1C2A34A50();
  if (!v0)
    return 0;
  sub_1C2CFD350();
  sub_1C2CFC690();
  OUTLINED_FUNCTION_147();
  if (!v18[3])
  {
    sub_1C28BB37C((uint64_t)v18, &qword_1ED7A8480);
    goto LABEL_8;
  }
  sub_1C2CFC774();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    if (qword_1ED7AA040 != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_118();
    v4 = (void *)__swift_project_value_buffer(v3, (uint64_t)qword_1ED7AA1B0);
    swift_retain_n();
    sub_1C2CFD86C();
    v5 = OUTLINED_FUNCTION_123();
    if (OUTLINED_FUNCTION_56(v5))
    {
      v6 = (_DWORD *)OUTLINED_FUNCTION_6_0();
      v18[0] = OUTLINED_FUNCTION_6_0();
      *v6 = 136315138;
      sub_1C2CFCD08();
      sub_1C2CFD350();
      v7 = sub_1C2CFDDAC();
      sub_1C28BB120(v7, v8, v18);
      OUTLINED_FUNCTION_41_0();
      swift_release_n();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_26(&dword_1C28B6000, v9, v10, "Could not extract the usoNoEntity from the usoTask=%s");
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    swift_release_n();
    return 0;
  }
  OUTLINED_FUNCTION_52_4();
  sub_1C2CFC354();
  OUTLINED_FUNCTION_374();
  if (!v18[0] || (v1 = sub_1C2CFC528(), swift_release(), !v1))
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_118();
    v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED7AA1B0);
    swift_retain_n();
    sub_1C2CFD86C();
    v13 = OUTLINED_FUNCTION_123();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v18[0] = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v14 = 136315138;
      OUTLINED_FUNCTION_52_4();
      v15 = sub_1C2CFDDAC();
      sub_1C28BB120(v15, v16, v18);
      sub_1C2CFE4D8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C28B6000, v12, v13, "Could not extract the listPosition from the usoNoEntity=%s", v14, 0xCu);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    swift_release_n();
    OUTLINED_FUNCTION_147();
    return 0;
  }
  v2 = sub_1C2A35050();
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_374();
  swift_release();
  return v2;
}

void sub_1C2A34A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  void (*v52)(char *, char *, uint64_t);
  os_log_type_t v53;
  _DWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[3];
  char *v72;
  char *v73;
  uint64_t v74;

  OUTLINED_FUNCTION_9();
  v3 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A91F0);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_20_32();
  v6 = sub_1C2CFC090();
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_2_2();
  v72 = v10;
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v73 = (char *)v71 - v14;
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)v71 - v16;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_125_2();
  v22 = v20 - v21;
  v25 = MEMORY[0x1E0C80A78](v23, v24);
  v27 = (char *)v71 - v26;
  MEMORY[0x1E0C80A78](v25, v28);
  v30 = (char *)v71 - v29;
  type metadata accessor for USOParse();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v31, v32);
  OUTLINED_FUNCTION_332();
  sub_1C2A15858(v3, (uint64_t)v30);
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_1C28CAC04((uint64_t)v30, v2);
    v33 = sub_1C2CFBF88();
    sub_1C28CAD64(v33);
    OUTLINED_FUNCTION_32_0();
    v34 = OUTLINED_FUNCTION_35_18(v1, 1, v6);
    if (!v35)
    {
      v43 = v6;
      v44 = v7;
      v45 = v17;
      v46 = v17;
      v47 = v43;
      (*(void (**)(char *, uint64_t))(v7 + 32))(v46, v1);
      v48 = sub_1C2CFC018();
      if ((v48 & 1) != 0)
      {
        v49 = sub_1C2CFC228();
        v67 = v49;
        v68 = v73;
        if (v49 >> 62)
        {
          swift_bridgeObjectRetain();
          v70 = sub_1C2CFE820();
          OUTLINED_FUNCTION_32_0();
          if (v70)
            goto LABEL_27;
        }
        else if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_27:
          sub_1C2979BD4(0, (v67 & 0xC000000000000001) == 0, v67);
          if ((v67 & 0xC000000000000001) != 0)
            MEMORY[0x1C3BC9170](0, v67);
          else
            OUTLINED_FUNCTION_52_4();
          OUTLINED_FUNCTION_32_0();
          v69 = OUTLINED_FUNCTION_25_23();
          OUTLINED_FUNCTION_46_10(v69, (uint64_t (*)(_QWORD))type metadata accessor for USOParse);
          goto LABEL_24;
        }
        OUTLINED_FUNCTION_32_0();
        if (qword_1ED7AA040 != -1)
          swift_once();
        v50 = OUTLINED_FUNCTION_118();
        v51 = (void *)__swift_project_value_buffer(v50, (uint64_t)qword_1ED7AA1B0);
        v52 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v52(v68, v45, v47);
        sub_1C2CFD86C();
        v53 = OUTLINED_FUNCTION_123();
        if (OUTLINED_FUNCTION_56(v53))
        {
          v54 = (_DWORD *)OUTLINED_FUNCTION_6_0();
          v55 = OUTLINED_FUNCTION_6_0();
          v73 = v45;
          v71[2] = v55;
          v74 = v55;
          *v54 = 136315138;
          v71[1] = v54 + 1;
          v52(v72, v68, v47);
          v56 = sub_1C2CFDDAC();
          v58 = sub_1C28BB120(v56, v57, &v74);
          OUTLINED_FUNCTION_44_2(v58);
          sub_1C2CFE4D8();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v68, v47);
          OUTLINED_FUNCTION_22_26(&dword_1C28B6000, v59, v60, "Cannot extract task: UDA -> Task conversion failed. %s");
          OUTLINED_FUNCTION_107_1();
          OUTLINED_FUNCTION_11_0();
        }

        v66 = *(void (**)(char *, uint64_t))(v44 + 8);
        v66(v68, v47);
        v65 = ((uint64_t (*)(char *, uint64_t))v66)(v45, v47);
      }
      else
      {
        if (qword_1ED7AA040 != -1)
          swift_once();
        v61 = OUTLINED_FUNCTION_118();
        v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1ED7AA1B0);
        sub_1C2CFD86C();
        v63 = OUTLINED_FUNCTION_123();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = (uint8_t *)OUTLINED_FUNCTION_6_0();
          *(_WORD *)v64 = 0;
          _os_log_impl(&dword_1C28B6000, v62, v63, "User dialog act does not have a user stated task", v64, 2u);
          OUTLINED_FUNCTION_11_0();
        }

        v65 = OUTLINED_FUNCTION_25_23();
      }
      OUTLINED_FUNCTION_46_10(v65, (uint64_t (*)(_QWORD))type metadata accessor for USOParse);
      goto LABEL_24;
    }
    OUTLINED_FUNCTION_46_10(v34, (uint64_t (*)(_QWORD))type metadata accessor for USOParse);
    sub_1C28BB37C(v1, &qword_1ED7A91F0);
  }
  else
  {
    sub_1C28C9F68((uint64_t)v30, type metadata accessor for Parse);
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v36 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v36, (uint64_t)qword_1ED7AA1B0);
  sub_1C2A15858(v3, (uint64_t)v27);
  v37 = sub_1C2CFD86C();
  v38 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v74 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v39 = 136315138;
    sub_1C2A15858((uint64_t)v27, v22);
    v40 = sub_1C2CFDDAC();
    v42 = sub_1C28BB120(v40, v41, &v74);
    OUTLINED_FUNCTION_44_2(v42);
    OUTLINED_FUNCTION_41_0();
    swift_bridgeObjectRelease();
    sub_1C28C9F68((uint64_t)v27, type metadata accessor for Parse);
    _os_log_impl(&dword_1C28B6000, v37, v38, "Cannot extract task: USO parse has no UDAs. %s", v39, 0xCu);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  sub_1C28C9F68((uint64_t)v27, type metadata accessor for Parse);

LABEL_24:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A35050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78C6E8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_20_32();
  v3 = sub_1C2CFC870();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  OUTLINED_FUNCTION_125_2();
  v8 = (char *)(v6 - v7);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v17 - v11;
  sub_1C2CFC648();
  OUTLINED_FUNCTION_35_18(v0, 1, v3);
  if (v13)
  {
    sub_1C28BB37C(v0, &qword_1EF78C6E8);
    return 0;
  }
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  v15(v12, v0, v3);
  v15(v8, (uint64_t)v12, v3);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v8, v3);
  if (v16 == *MEMORY[0x1E0DA1A80])
    return 4;
  if (v16 == *MEMORY[0x1E0DA1A88])
    return 2;
  if (v16 == *MEMORY[0x1E0DA19B0])
    return 1;
  if (v16 == *MEMORY[0x1E0DA1A20])
    return 24;
  if (v16 == *MEMORY[0x1E0DA19F0])
    return 17;
  if (v16 == *MEMORY[0x1E0DA1A78])
    return 8;
  if (v16 == *MEMORY[0x1E0DA19F8])
    return -3;
  if (v16 == *MEMORY[0x1E0DA1A60])
    return 6;
  if (v16 == *MEMORY[0x1E0DA19E0])
    return 19;
  if (v16 == *MEMORY[0x1E0DA1A00])
    return 25;
  if (v16 == *MEMORY[0x1E0DA1A58])
    return 9;
  if (v16 == *MEMORY[0x1E0DA1AA8])
    return 11;
  if (v16 == *MEMORY[0x1E0DA1A30])
    return -1;
  if (v16 == *MEMORY[0x1E0DA19D8])
    return 14;
  if (v16 == *MEMORY[0x1E0DA1A18])
    return -2;
  if (v16 == *MEMORY[0x1E0DA1A08])
    return 21;
  if (v16 == *MEMORY[0x1E0DA19E8])
    return 13;
  if (v16 == *MEMORY[0x1E0DA1A38])
    return -1;
  if (v16 == *MEMORY[0x1E0DA1A28])
    return 22;
  if (v16 == *MEMORY[0x1E0DA19B8])
    return 15;
  if (v16 == *MEMORY[0x1E0DA19C8])
    return 20;
  if (v16 == *MEMORY[0x1E0DA1A48])
    return 5;
  if (v16 == *MEMORY[0x1E0DA19C0])
    return 16;
  if (v16 == *MEMORY[0x1E0DA1A50])
    return 1;
  if (v16 == *MEMORY[0x1E0DA1A98])
    return 7;
  if (v16 == *MEMORY[0x1E0DA19D0])
    return 18;
  if (v16 == *MEMORY[0x1E0DA1A10])
    return 23;
  if (v16 == *MEMORY[0x1E0DA1AA0])
    return 12;
  if (v16 == *MEMORY[0x1E0DA1A70])
    return 3;
  if (v16 != *MEMORY[0x1E0DA1A68])
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
    return 0;
  }
  return 10;
}

uint64_t sub_1C2A3550C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  int EnumCaseMultiPayload;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint8_t *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a2;
  v4 = *(_QWORD *)(*v2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v5 = sub_1C2CFEAF0();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5, v7);
  v49 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8, v10);
  v50 = (char *)&v46 - v12;
  v14 = MEMORY[0x1E0C80A78](v11, v13);
  v16 = (char *)&v46 - v15;
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)&v46 - v18;
  v22 = type metadata accessor for Interpretable(0, v5, v20, v21);
  MEMORY[0x1E0C80A78](v22, v23);
  v25 = (char *)&v46 - v24;
  v27 = v2[5];
  v26 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v27);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  v29 = v26;
  v30 = v4;
  v31 = v51;
  v28(a1, v27, v29);
  v32 = 1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v19, v25, v5);
    v33 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v33(v16, v19, v5);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v35 = *(void (**)(char *, uint64_t))(v6 + 8);
    if (EnumCaseMultiPayload == 1)
    {
      v35(v16, v5);
      if (qword_1ED7AA040 != -1)
        swift_once();
      v36 = sub_1C2CFD878();
      __swift_project_value_buffer(v36, (uint64_t)qword_1ED7AA1B0);
      v37 = v50;
      v33(v50, v19, v5);
      v38 = sub_1C2CFD86C();
      v39 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        v53 = v47;
        v48 = v19;
        *(_DWORD *)v40 = 136315138;
        v46 = v40 + 4;
        v41 = v50;
        v33(v49, v50, v5);
        v42 = sub_1C2CFDDAC();
        v52 = sub_1C28BB120(v42, v43, &v53);
        v31 = v51;
        sub_1C2CFE4D8();
        swift_bridgeObjectRelease();
        v35(v41, v5);
        _os_log_impl(&dword_1C28B6000, v38, v39, "[DisambiguationPrompt] ChoiceResolver's inner entity resolver returned unexpected result %s", v40, 0xCu);
        v32 = 1;
        v44 = v47;
        swift_arrayDestroy();
        MEMORY[0x1C3BC9DE8](v44, -1, -1);
        MEMORY[0x1C3BC9DE8](v40, -1, -1);

        v35(v48, v5);
      }
      else
      {

        v35(v37, v5);
        v35(v19, v5);
        v32 = 1;
      }
    }
    else
    {
      v35(v19, v5);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v31, v16, v30);
      v32 = 0;
    }
  }
  return __swift_storeEnumTagSinglePayload(v31, v32, 1, v30);
}

uint64_t sub_1C2A358D4(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 8;
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t sub_1C2A358FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a2 + 8;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = v4;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

_QWORD *sub_1C2A35964(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t sub_1C2A359B8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

void sub_1C2A35A0C()
{
  type metadata accessor for DisambiguationPrompt.Response();
}

uint64_t sub_1C2A35A34()
{
  uint64_t result;
  unint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  result = sub_1C2CFEAF0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_1C2A35A9C(char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  char *v13;
  unsigned int v14;
  char *v15;
  id v16;
  unsigned int v17;
  uint64_t v18;

  v4 = __dst;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_QWORD *)(v8 + 64) <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v9 = *(_QWORD *)(v8 + 64);
  if (v9 + 1 > 8)
    v10 = v9 + 1;
  else
    v10 = 8;
  v11 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80);
  if ((v11 & 0x1000F8) != 0 || (unint64_t)(v10 + 1) > 0x18)
  {
    v13 = *(char **)__src;
    *(_QWORD *)v4 = *(_QWORD *)__src;
    v4 = &v13[((v11 & 0xF8 | 7u) + 16) & ~(unint64_t)(v11 & 0xF8 | 7u)];
    sub_1C2CFD350();
  }
  else
  {
    v14 = __src[v10];
    if (v14 > 1)
    {
      memcpy(__dst, __src, v10 + 1);
    }
    else if (v14 == 1)
    {
      v15 = *(char **)__src;
      v16 = *(id *)__src;
      *(_QWORD *)v4 = v15;
      v4[v10] = 1;
    }
    else
    {
      v17 = __src[v9];
      if (v17 >= 2)
      {
        if (v9 <= 3)
          v18 = v9;
        else
          v18 = 4;
        __asm { BR              X16 }
      }
      if (v17 == 1)
      {
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 16))(__dst, __src, v7);
        v4[v9] = 1;
      }
      else
      {
        (*(void (**)(char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
        *(_QWORD *)((unint64_t)&v4[v6 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
        v4[v9] = 0;
      }
      v4[v10] = 0;
    }
  }
  return v4;
}

void sub_1C2A35C80(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = ((*(_QWORD *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 32) - 8);
  if (*(_QWORD *)(v4 + 64) > v3)
    v3 = *(_QWORD *)(v4 + 64);
  v5 = 8;
  if (v3 + 1 > 8)
    v5 = v3 + 1;
  v6 = *((unsigned __int8 *)a1 + v5);
  if (v6 <= 1)
  {
    if (v6 == 1)
    {

    }
    else
    {
      v7 = *((unsigned __int8 *)a1 + v3);
      if (v7 < 2)
      {
        if (v7 == 1)
          (*(void (**)(void))(v4 + 8))();
        else
          (*(void (**)(void))(v2 + 8))();
      }
      else
      {
        if (v3 <= 3)
          v8 = v3;
        else
          v8 = 4;
        ((void (*)(void))((char *)&loc_1C2A35D08 + 4 * byte_1C2D089D0[v8]))();
      }
    }
  }
}

_QWORD *sub_1C2A35D6C(_QWORD *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  id v12;
  id v13;
  unsigned int v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_QWORD *)(v8 + 64) <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v9 = *(_QWORD *)(v8 + 64);
  if (v9 + 1 > 8)
    v10 = v9 + 1;
  else
    v10 = 8;
  v11 = __src[v10];
  if (v11 > 1)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else if (v11 == 1)
  {
    v12 = *(id *)__src;
    v13 = *(id *)__src;
    *__dst = v12;
    *((_BYTE *)__dst + v10) = 1;
  }
  else
  {
    v14 = __src[v9];
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X16 }
    }
    if (v14 == 1)
    {
      (*(void (**)(_QWORD *, unsigned __int8 *, uint64_t))(v8 + 16))(__dst, __src, v7);
      *((_BYTE *)__dst + v9) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(_QWORD *)(((unint64_t)__dst + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)__dst + v9) = 0;
    }
    *((_BYTE *)__dst + v10) = 0;
  }
  return __dst;
}

void **sub_1C2A35F08(void **__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  void (*v20)(void);
  void (*v21)(void);
  unsigned int v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v28;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v10 = *(_QWORD *)(v9 + 64);
  if (v10 + 1 > 8)
    v11 = v10 + 1;
  else
    v11 = 8;
  v12 = *((unsigned __int8 *)__dst + v11);
  v13 = *((unsigned __int8 *)__src + v11);
  if (v12 > 1)
  {
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
LABEL_46:
        v24 = *__src;
        v25 = v24;
        *__dst = v24;
        *((_BYTE *)__dst + v11) = 1;
        return __dst;
      }
      v14 = *((unsigned __int8 *)__src + v10);
      if (v14 >= 2)
      {
        if (v10 <= 3)
          v15 = v10;
        else
          v15 = 4;
        __asm { BR              X12 }
      }
      goto LABEL_52;
    }
LABEL_35:
    memcpy(__dst, __src, v11 + 1);
    return __dst;
  }
  if (v13 > 1)
  {
    if (v12 == 1)
    {

    }
    else
    {
      v16 = *((unsigned __int8 *)__dst + v10);
      if (v16 >= 2)
      {
        if (v10 <= 3)
          v17 = v10;
        else
          v17 = 4;
        __asm { BR              X12 }
      }
      if (v16 == 1)
        v20 = *(void (**)(void))(v9 + 8);
      else
        v20 = *(void (**)(void))(v6 + 8);
      v20();
    }
    goto LABEL_35;
  }
  if (__dst == __src)
    return __dst;
  if (v12 == 1)
  {
    v28 = *(_QWORD *)(v8 - 8);

    v9 = v28;
  }
  else
  {
    v18 = *((unsigned __int8 *)__dst + v10);
    if (v18 >= 2)
    {
      if (v10 <= 3)
        v19 = v10;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
    if (v18 == 1)
      v21 = *(void (**)(void))(v9 + 8);
    else
      v21 = *(void (**)(void))(v6 + 8);
    v21();
  }
  v22 = *((unsigned __int8 *)__src + v11);
  if (v22 >= 2)
  {
    if (v11 <= 3)
      v23 = v11;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  if (v22 == 1)
    goto LABEL_46;
  v14 = *((unsigned __int8 *)__src + v10);
  if (v14 >= 2)
  {
    if (v10 <= 3)
      v26 = v10;
    else
      v26 = 4;
    __asm { BR              X12 }
  }
LABEL_52:
  if (v14 == 1)
  {
    (*(void (**)(void **, void **, uint64_t))(v9 + 16))(__dst, __src, v8);
    *((_BYTE *)__dst + v10) = 1;
  }
  else
  {
    (*(void (**)(void **, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
    *(_QWORD *)(((unint64_t)__dst + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)__src + v7 + 7) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)__dst + v10) = 0;
  }
  *((_BYTE *)__dst + v11) = 0;
  return __dst;
}

_QWORD *sub_1C2A36350(_QWORD *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_QWORD *)(v8 + 64) <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v9 = *(_QWORD *)(v8 + 64);
  if (v9 + 1 > 8)
    v10 = v9 + 1;
  else
    v10 = 8;
  v11 = __src[v10];
  if (v11 > 1)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else if (v11 == 1)
  {
    *__dst = *(_QWORD *)__src;
    *((_BYTE *)__dst + v10) = 1;
  }
  else
  {
    v12 = __src[v9];
    if (v12 >= 2)
    {
      if (v9 <= 3)
        v13 = v9;
      else
        v13 = 4;
      __asm { BR              X16 }
    }
    if (v12 == 1)
    {
      (*(void (**)(_QWORD *, unsigned __int8 *, uint64_t))(v8 + 32))(__dst, __src, v7);
      *((_BYTE *)__dst + v9) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, unsigned __int8 *))(v5 + 32))(__dst, __src);
      *(_QWORD *)(((unint64_t)__dst + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)__dst + v9) = 0;
    }
    *((_BYTE *)__dst + v10) = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C2A364E4(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  void (*v20)(void);
  void (*v21)(void);
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v10 = *(_QWORD *)(v9 + 64);
  if (v10 + 1 > 8)
    v11 = v10 + 1;
  else
    v11 = 8;
  v12 = __dst[v11];
  v13 = __src[v11];
  if (v12 > 1)
  {
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
LABEL_46:
        *(_QWORD *)__dst = *(_QWORD *)__src;
        __dst[v11] = 1;
        return __dst;
      }
      v14 = __src[v10];
      if (v14 >= 2)
      {
        if (v10 <= 3)
          v15 = v10;
        else
          v15 = 4;
        __asm { BR              X12 }
      }
      goto LABEL_52;
    }
LABEL_35:
    memcpy(__dst, __src, v11 + 1);
    return __dst;
  }
  if (v13 > 1)
  {
    if (v12 == 1)
    {

    }
    else
    {
      v16 = __dst[v10];
      if (v16 >= 2)
      {
        if (v10 <= 3)
          v17 = v10;
        else
          v17 = 4;
        __asm { BR              X12 }
      }
      if (v16 == 1)
        v20 = *(void (**)(void))(v9 + 8);
      else
        v20 = *(void (**)(void))(v6 + 8);
      v20();
    }
    goto LABEL_35;
  }
  if (__dst == __src)
    return __dst;
  if (v12 == 1)
  {
    v26 = *(_QWORD *)(v8 - 8);

    v9 = v26;
  }
  else
  {
    v18 = __dst[v10];
    if (v18 >= 2)
    {
      if (v10 <= 3)
        v19 = v10;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
    if (v18 == 1)
      v21 = *(void (**)(void))(v9 + 8);
    else
      v21 = *(void (**)(void))(v6 + 8);
    v21();
  }
  v22 = __src[v11];
  if (v22 >= 2)
  {
    if (v11 <= 3)
      v23 = v11;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  if (v22 == 1)
    goto LABEL_46;
  v14 = __src[v10];
  if (v14 >= 2)
  {
    if (v10 <= 3)
      v24 = v10;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
LABEL_52:
  if (v14 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(__dst, __src, v8);
    __dst[v10] = 1;
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    *(_QWORD *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFF8);
    __dst[v10] = 0;
  }
  __dst[v11] = 0;
  return __dst;
}

uint64_t sub_1C2A36924(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 32) - 8) + 64) > v3)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 32) - 8) + 64);
  v4 = 8;
  if (v3 + 1 > 8)
    v4 = v3 + 1;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_23;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) > 3)
    goto LABEL_8;
  v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
  if (HIWORD(v9))
  {
    v7 = *(_DWORD *)(a1 + v5);
    if (v7)
      goto LABEL_16;
LABEL_23:
    v11 = *(unsigned __int8 *)(a1 + v4);
    if (v11 >= 2)
      v12 = (v11 ^ 0xFF) + 1;
    else
      v12 = 0;
    if (v12 >= 2)
      return v12 - 1;
    else
      return 0;
  }
  if (v9 > 0xFF)
  {
    v7 = *(unsigned __int16 *)(a1 + v5);
    if (*(_WORD *)(a1 + v5))
      goto LABEL_16;
    goto LABEL_23;
  }
  if (v9 < 2)
    goto LABEL_23;
LABEL_8:
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_23;
LABEL_16:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 254);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2A36A0C + 4 * byte_1C2D08A11[(v5 - 1)]))();
}

void sub_1C2A36A64(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 32) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 32) - 8) + 64);
  if (v5 + 1 > 8)
    v6 = v5 + 1;
  else
    v6 = 8;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if (a3 < 0xFE)
  {
    v9 = 0u;
  }
  else if (v7 <= 3)
  {
    v11 = ((a3 + ~(-1 << v8) - 253) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v10 = a2 - 254;
  if (v7 < 4)
  {
    if ((_DWORD)v6 != -1)
    {
      v12 = v10 & ~(-1 << v8);
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *a1 = v12;
        *((_BYTE *)a1 + 2) = BYTE2(v12);
      }
      else if ((_DWORD)v7 == 2)
      {
        *a1 = v12;
      }
      else
      {
        *(_BYTE *)a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v6 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2A36C2C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;

  v2 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 64) > v2)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 64);
  if (v2 + 1 > 8)
    v3 = v2 + 1;
  else
    v3 = 8;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 >= 2)
    return (v4 ^ 0xFF) + 1;
  else
    return 0;
}

void *sub_1C2A36C7C(void *result, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  size_t v5;
  int v6;

  v3 = ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 32) - 8) + 64) > v3)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 32) - 8) + 64);
  if (v3 + 1 > 8)
    v4 = v3 + 1;
  else
    v4 = 8;
  if (a2 > 0xFE)
  {
    v5 = (v4 + 1);
    if ((_DWORD)v5)
    {
      if (v5 <= 3)
        v6 = v5;
      else
        v6 = 4;
      bzero(result, v5);
      __asm { BR              X10 }
    }
  }
  else if (a2)
  {
    *((_BYTE *)result + v4) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C2A36D70()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C2A36DFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v5 + 64) + v8;
  v11 = *(_DWORD *)(v5 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    sub_1C2CFD350();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v6);
  }
  return v4;
}

uint64_t sub_1C2A36ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80));
}

uint64_t sub_1C2A36F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C2A36F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C2A36FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C2A37068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C2A370D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = *(_DWORD *)(v6 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v6 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v7 < v10)
        {
          a1 = (v14 + a1) & ~v13;
          v7 = v10;
          v5 = v8;
        }
        return __swift_getEnumTagSinglePayload(a1, v7, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2A371B0 + 4 * byte_1C2D08A23[v21 - 1]))();
}

void sub_1C2A37220(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_1C2A37414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2A3550C(a1, a2);
}

void sub_1C2A37434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_45_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_1_0();
}

uint64_t OUTLINED_FUNCTION_16_28()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_20_32()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_21_25()
{
  return swift_release();
}

void OUTLINED_FUNCTION_22_26(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_25_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_26_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_29_19()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
}

uint64_t OUTLINED_FUNCTION_32_26()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_33_14@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_34_22()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_38_20()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 296) = *(_QWORD *)(v0 - 336);
}

uint64_t OUTLINED_FUNCTION_39_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 200) = v3;
  *(_QWORD *)(v4 - 192) = v2;
  *(_QWORD *)(v4 - 184) = v1;
  *(_QWORD *)(v4 - 176) = v0;
  return 0;
}

void OUTLINED_FUNCTION_46_10(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1C28C9F68(v2, a2);
}

uint64_t OUTLINED_FUNCTION_47_15()
{
  return swift_release();
}

uint64_t sub_1C2A37584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(_QWORD *))
{
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9D30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  v12 = swift_bridgeObjectRetain();
  sub_1C2A37610(v12, v13, v14, v15, v16, v17, a8);
  swift_setDeallocating();
  return sub_1C28BA7CC();
}

void sub_1C2A37610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD *))
{
  void *v8;
  _QWORD v9[4];
  char v10;

  sub_1C2A37694();
  v8 = (void *)swift_allocError();
  v9[0] = v8;
  memset(&v9[1], 0, 24);
  v10 = 1;
  a7(v9);

}

uint64_t DucTemplateExecutor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DucTemplateExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1C2A37694()
{
  unint64_t result;

  result = qword_1EF790110;
  if (!qword_1EF790110)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08F64, &type metadata for DucFailure);
    atomic_store(result, (unint64_t *)&qword_1EF790110);
  }
  return result;
}

uint64_t type metadata accessor for DucTemplateExecutor()
{
  return objc_opt_self();
}

uint64_t method lookup function for DucTemplateExecutor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DucTemplateExecutor.execute(ducFamily:ducId:parameters:locale:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

void DucTemplatingResult.asTemplatingResult()()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TemplatingResult.init(templateIdentifier:speak:print:)();
}

uint64_t DucTemplatingLocalContext.countryCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void DucTemplatingLocalContext.countryCode.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*DucTemplatingLocalContext.countryCode.modify())(_QWORD)
{
  return nullsub_1;
}

void DucTemplatingLocalContext.meCard.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3[22];

  sub_1C2A37830(v1 + 16, (uint64_t)v3);
  sub_1C2A37830((uint64_t)v3, a1);
  sub_1C2A378D4(v3, (void (*)(void))sub_1C28F8B20, (uint64_t (*)(uint64_t, uint64_t))sub_1C293DA88);
  OUTLINED_FUNCTION_2_38();
}

uint64_t sub_1C2A37830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7901C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DucTemplatingLocalContext.meCard.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[176];
  uint64_t v4[23];

  sub_1C2A37830(a1, (uint64_t)v3);
  sub_1C2A37830(v1 + 16, (uint64_t)v4);
  sub_1C2A378D4(v4, (void (*)(void))sub_1C28F8B50, (uint64_t (*)(uint64_t, uint64_t))sub_1C28EC278);
  return sub_1C2A37830((uint64_t)v3, v1 + 16);
}

uint64_t *sub_1C2A378D4(uint64_t *a1, void (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  sub_1C2A37940(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a2,
    a3);
  return a1;
}

uint64_t sub_1C2A37940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(void),uint64_t (*a24)(uint64_t, uint64_t))
{
  uint64_t result;

  if (a2 != 1)
  {
    a23();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a23)(a5, a6, a7, a8);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a23)(a9, a10, a11, a12);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a23)(a13, a14, a15, a16);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a23)(a17, a18, a19, a20);
    return a24(a21, a22);
  }
  return result;
}

uint64_t (*DucTemplatingLocalContext.meCard.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t DucTemplatingLocalContext.nlIntent.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DucTemplatingLocalContext.nlIntent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 192) = a1;
  return result;
}

uint64_t (*DucTemplatingLocalContext.nlIntent.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t DucTemplatingLocalContext.requestStartTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_42() + 28);
  return sub_1C28C6DBC(v3, a1);
}

uint64_t DucTemplatingLocalContext.requestStartTime.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_42() + 28);
  return sub_1C2A37AF0(a1, v3);
}

uint64_t sub_1C2A37AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DucTemplatingLocalContext.requestStartTime.modify())(_QWORD)
{
  OUTLINED_FUNCTION_0_42();
  return nullsub_1;
}

void DucTemplatingLocalContext.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD v5[11];

  v2 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  sub_1C2A37BC0(v5);
  sub_1C2A37830((uint64_t)v5, v2);
  a1[24] = 0;
  v3 = (uint64_t)a1 + *(int *)(OUTLINED_FUNCTION_0_42() + 28);
  v4 = sub_1C2CFBC58();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  OUTLINED_FUNCTION_2_38();
}

void sub_1C2A37BC0(_OWORD *a1)
{
  *a1 = xmmword_1C2D00830;
  bzero(a1 + 1, 0xA0uLL);
}

uint64_t initializeBufferWithCopyOfBuffer for DucTemplatingLocalContext(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    sub_1C2CFD350();
    return a1;
  }
  v7 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = a2 + 2;
  v9 = a2[3];
  swift_bridgeObjectRetain();
  if (!v9)
  {
    v11 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *v8;
    *(_OWORD *)(a1 + 32) = v11;
LABEL_8:
    v13 = a2[7];
    if (v13)
    {
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v13;
      v14 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v15;
    }
    v16 = a2[11];
    if (v16)
    {
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v16;
      v17 = a2[13];
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_QWORD *)(a1 + 104) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v18;
    }
    v19 = a2[15];
    if (v19)
    {
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = v19;
      v20 = a2[17];
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v21;
    }
    v22 = a2[19];
    if (v22)
    {
      *(_QWORD *)(a1 + 144) = a2[18];
      *(_QWORD *)(a1 + 152) = v22;
      v23 = a2[21];
      *(_QWORD *)(a1 + 160) = a2[20];
      *(_QWORD *)(a1 + 168) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v24;
    }
    v25 = a2 + 22;
    v26 = a2[23];
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 176) = *(_OWORD *)v25;
    }
    else
    {
      v27 = *v25;
      sub_1C28C50CC(*v25, a2[23]);
      *(_QWORD *)(a1 + 176) = v27;
      *(_QWORD *)(a1 + 184) = v26;
    }
    goto LABEL_23;
  }
  if (v9 != 1)
  {
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v9;
    v12 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  memcpy((void *)(a1 + 16), a2 + 2, 0xB0uLL);
LABEL_23:
  *(_QWORD *)(a1 + 192) = a2[24];
  v28 = *(int *)(a3 + 28);
  v29 = (void *)(a1 + v28);
  v30 = (char *)a2 + v28;
  v31 = sub_1C2CFBC58();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4240);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
  }
  return a1;
}

uint64_t destroy for DucTemplatingLocalContext(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1[3];
  if (v4)
  {
    if (v4 == 1)
      goto LABEL_14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[15])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5 = a1[23];
  if (v5 >> 60 != 15)
    sub_1C28C516C(a1[22], v5);
LABEL_14:
  swift_bridgeObjectRelease();
  v6 = (uint64_t)a1 + *(int *)(a2 + 28);
  v7 = sub_1C2CFBC58();
  result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return result;
}

uint64_t initializeWithCopy for DucTemplatingLocalContext(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 2;
  v8 = a2[3];
  swift_bridgeObjectRetain();
  if (v8)
  {
    if (v8 == 1)
    {
      memcpy((void *)(a1 + 16), v7, 0xB0uLL);
      goto LABEL_21;
    }
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v10 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = v7[1];
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v9;
  }
  v11 = a2[7];
  if (v11)
  {
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v11;
    v12 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v13;
  }
  v14 = a2[11];
  if (v14)
  {
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v14;
    v15 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v16;
  }
  v17 = a2[15];
  if (v17)
  {
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v17;
    v18 = a2[17];
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v19;
  }
  v20 = a2[19];
  if (v20)
  {
    *(_QWORD *)(a1 + 144) = a2[18];
    *(_QWORD *)(a1 + 152) = v20;
    v21 = a2[21];
    *(_QWORD *)(a1 + 160) = a2[20];
    *(_QWORD *)(a1 + 168) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v22;
  }
  v23 = a2 + 22;
  v24 = a2[23];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)v23;
  }
  else
  {
    v25 = *v23;
    sub_1C28C50CC(*v23, a2[23]);
    *(_QWORD *)(a1 + 176) = v25;
    *(_QWORD *)(a1 + 184) = v24;
  }
LABEL_21:
  *(_QWORD *)(a1 + 192) = a2[24];
  v26 = *(int *)(a3 + 28);
  v27 = (void *)(a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = sub_1C2CFBC58();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4240);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  return a1;
}

uint64_t assignWithCopy for DucTemplatingLocalContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  _OWORD *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  int EnumTagSinglePayload;
  int v49;
  uint64_t v50;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 16);
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a2 + 24);
  if (v8 == 1)
  {
    if (!v9)
    {
      v10 = *(_OWORD *)(a2 + 32);
      *v6 = *v7;
      *(_OWORD *)(a1 + 32) = v10;
      goto LABEL_12;
    }
    if (v9 != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      if (*(_QWORD *)(a2 + 56))
      {
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v11 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v11;
      }
      if (*(_QWORD *)(a2 + 88))
      {
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v12 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v12;
      }
      if (*(_QWORD *)(a2 + 120))
      {
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v13 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v13;
      }
      if (*(_QWORD *)(a2 + 152))
      {
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v14 = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 160) = v14;
      }
      v15 = (_OWORD *)(a2 + 176);
      v16 = *(_QWORD *)(a2 + 184);
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 176) = *v15;
        goto LABEL_67;
      }
      v17 = *(_QWORD *)v15;
      goto LABEL_62;
    }
LABEL_7:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0xB0uLL);
    goto LABEL_67;
  }
  if (v9 == 1)
  {
    sub_1C2A38894((_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  if (v8)
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A3882C(a1 + 16);
      v18 = *(_OWORD *)(a2 + 32);
      *v6 = *v7;
      *(_OWORD *)(a1 + 32) = v18;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 32);
    *v6 = *v7;
    *(_OWORD *)(a1 + 32) = v19;
  }
  v20 = (_OWORD *)(a1 + 48);
  v21 = (_OWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v22)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A3882C(a1 + 48);
      v23 = *(_OWORD *)(a2 + 64);
      *v20 = *v21;
      *(_OWORD *)(a1 + 64) = v23;
    }
  }
  else if (v22)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v24 = *(_OWORD *)(a2 + 64);
    *v20 = *v21;
    *(_OWORD *)(a1 + 64) = v24;
  }
  v25 = (_OWORD *)(a1 + 80);
  v26 = (_OWORD *)(a2 + 80);
  v27 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v27)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A3882C(a1 + 80);
      v28 = *(_OWORD *)(a2 + 96);
      *v25 = *v26;
      *(_OWORD *)(a1 + 96) = v28;
    }
  }
  else if (v27)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *(_OWORD *)(a2 + 96);
    *v25 = *v26;
    *(_OWORD *)(a1 + 96) = v29;
  }
  v30 = (_OWORD *)(a1 + 112);
  v31 = (_OWORD *)(a2 + 112);
  v32 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (v32)
    {
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A3882C(a1 + 112);
      v33 = *(_OWORD *)(a2 + 128);
      *v30 = *v31;
      *(_OWORD *)(a1 + 128) = v33;
    }
  }
  else if (v32)
  {
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = *(_OWORD *)(a2 + 128);
    *v30 = *v31;
    *(_OWORD *)(a1 + 128) = v34;
  }
  v35 = (_OWORD *)(a1 + 144);
  v36 = (_OWORD *)(a2 + 144);
  v37 = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 152))
  {
    if (v37)
    {
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2A3882C(a1 + 144);
      v38 = *(_OWORD *)(a2 + 160);
      *v35 = *v36;
      *(_OWORD *)(a1 + 160) = v38;
    }
  }
  else if (v37)
  {
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v39 = *(_OWORD *)(a2 + 160);
    *v35 = *v36;
    *(_OWORD *)(a1 + 160) = v39;
  }
  v40 = (uint64_t *)(a2 + 176);
  v16 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184) >> 60 == 15)
  {
    if (v16 >> 60 != 15)
    {
      v17 = *v40;
LABEL_62:
      sub_1C28C50CC(v17, v16);
      *(_QWORD *)(a1 + 176) = v17;
      *(_QWORD *)(a1 + 184) = v16;
      goto LABEL_67;
    }
    goto LABEL_65;
  }
  if (v16 >> 60 == 15)
  {
    sub_1C2A38860(a1 + 176);
LABEL_65:
    *(_OWORD *)(a1 + 176) = *(_OWORD *)v40;
    goto LABEL_67;
  }
  v41 = *v40;
  sub_1C28C50CC(*v40, *(_QWORD *)(a2 + 184));
  v42 = *(_QWORD *)(a1 + 176);
  v43 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = v41;
  *(_QWORD *)(a1 + 184) = v16;
  sub_1C28C516C(v42, v43);
LABEL_67:
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = *(int *)(a3 + 28);
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  v47 = sub_1C2CFBC58();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v47);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47);
  if (!EnumTagSinglePayload)
  {
    v50 = *(_QWORD *)(v47 - 8);
    if (!v49)
    {
      (*(void (**)(void *, const void *, uint64_t))(v50 + 24))(v45, v46, v47);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v50 + 8))(v45, v47);
    goto LABEL_72;
  }
  if (v49)
  {
LABEL_72:
    v51 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4240);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
  return a1;
}

uint64_t sub_1C2A3882C(uint64_t a1)
{
  destroy for TemplatingText();
  return a1;
}

uint64_t sub_1C2A38860(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

_QWORD *sub_1C2A38894(_QWORD *a1)
{
  destroy for UserCard(a1);
  return a1;
}

uint64_t initializeWithTake for DucTemplatingLocalContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0xB0uLL);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1C2CFBC58();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4240);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithTake for DucTemplatingLocalContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a1[3];
  if (v7 == 1)
    goto LABEL_4;
  v8 = a2[3];
  if (v8 == 1)
  {
    sub_1C2A38894(a1 + 2);
LABEL_4:
    memcpy(a1 + 2, a2 + 2, 0xB0uLL);
    goto LABEL_5;
  }
  if (v7)
  {
    if (v8)
    {
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRelease();
      v18 = a2[5];
      a1[4] = a2[4];
      a1[5] = v18;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_1C2A3882C((uint64_t)(a1 + 2));
  }
  v19 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = v19;
LABEL_18:
  if (a1[7])
  {
    v20 = a2[7];
    if (v20)
    {
      a1[6] = a2[6];
      a1[7] = v20;
      swift_bridgeObjectRelease();
      v21 = a2[9];
      a1[8] = a2[8];
      a1[9] = v21;
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_1C2A3882C((uint64_t)(a1 + 6));
  }
  v22 = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 4) = v22;
LABEL_23:
  if (a1[11])
  {
    v23 = a2[11];
    if (v23)
    {
      a1[10] = a2[10];
      a1[11] = v23;
      swift_bridgeObjectRelease();
      v24 = a2[13];
      a1[12] = a2[12];
      a1[13] = v24;
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    sub_1C2A3882C((uint64_t)(a1 + 10));
  }
  v25 = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 6) = v25;
LABEL_28:
  if (a1[15])
  {
    v26 = a2[15];
    if (v26)
    {
      a1[14] = a2[14];
      a1[15] = v26;
      swift_bridgeObjectRelease();
      v27 = a2[17];
      a1[16] = a2[16];
      a1[17] = v27;
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    sub_1C2A3882C((uint64_t)(a1 + 14));
  }
  v28 = *((_OWORD *)a2 + 8);
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  *((_OWORD *)a1 + 8) = v28;
LABEL_33:
  if (a1[19])
  {
    v29 = a2[19];
    if (v29)
    {
      a1[18] = a2[18];
      a1[19] = v29;
      swift_bridgeObjectRelease();
      v30 = a2[21];
      a1[20] = a2[20];
      a1[21] = v30;
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
    sub_1C2A3882C((uint64_t)(a1 + 18));
  }
  v31 = *((_OWORD *)a2 + 10);
  *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  *((_OWORD *)a1 + 10) = v31;
LABEL_38:
  v32 = a2 + 22;
  v33 = a1[23];
  if (v33 >> 60 == 15)
  {
LABEL_41:
    *((_OWORD *)a1 + 11) = *v32;
    goto LABEL_5;
  }
  v34 = a2[23];
  if (v34 >> 60 == 15)
  {
    sub_1C2A38860((uint64_t)(a1 + 22));
    goto LABEL_41;
  }
  v35 = a1[22];
  a1[22] = *(_QWORD *)v32;
  a1[23] = v34;
  sub_1C28C516C(v35, v33);
LABEL_5:
  a1[24] = a2[24];
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1C2CFBC58();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    v15 = *(_QWORD *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_10;
  }
  if (v14)
  {
LABEL_10:
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4240);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1C2A38C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4240);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 28), a2, v9);
  }
}

void sub_1C2A38D0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 2147483646)
  {
    *(_QWORD *)(a1 + 8) = a2;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4240);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t OUTLINED_FUNCTION_0_42()
{
  return type metadata accessor for DucTemplatingLocalContext();
}

unint64_t DucParameterCodingError.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  sub_1C2A38EA8(v0, (uint64_t)&v8);
  if (!v9)
    return 0xD000000000000037;
  sub_1C28B99EC(&v8, (uint64_t)v5);
  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  v1 = v6;
  v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  sub_1C2CFDE54();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  v3 = 0xD000000000000022;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t sub_1C2A38EA8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DucParameterCodingError(a2, a1);
  return a2;
}

uint64_t destroy for DucParameterCodingError(uint64_t result)
{
  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    __swift_destroy_boxed_opaque_existential_1(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DucParameterCodingError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for DucParameterCodingError(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    v7 = a2[2];
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DucParameterCodingError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    return a1;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DucParameterCodingError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DucParameterCodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

double sub_1C2A391BC(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DucParameterCodingError()
{
  return &type metadata for DucParameterCodingError;
}

uint64_t dispatch thunk of DucTemplatingParameter.conceptType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DucTemplatingParameter.encode(protoJsonCoding:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for DucTemplatingResult()
{
  return &type metadata for DucTemplatingResult;
}

uint64_t sub_1C2A3921C()
{
  uint64_t result;

  sub_1C2934360(0, (unint64_t *)&qword_1ED7AA048);
  result = sub_1C2CFE460();
  qword_1EF7CBEF8 = result;
  return result;
}

void DucTemplatingService.locale.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
}

void DucTemplatingService.ducFamily.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
}

uint64_t DucTemplatingService.ducExecutor.getter()
{
  return sub_1C2CFD350();
}

uint64_t DucTemplatingService.extensionValueTypeNamesByValueType.getter()
{
  return swift_bridgeObjectRetain();
}

void DucTemplatingService.synapseAppLaunchDucs.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
}

uint64_t DucTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = OUTLINED_FUNCTION_5_2();
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

_QWORD *DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  _UNKNOWN **v15;

  v7 = v6;
  v6[8] = 0xD000000000000014;
  v6[9] = 0x80000001C2D2EBF0;
  v6[2] = a3;
  v6[3] = a4;
  v6[4] = a1;
  v6[5] = a2;
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    a1 = swift_once();
  OUTLINED_FUNCTION_30_21(a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  type metadata accessor for DucTemplateExecutor();
  v10 = OUTLINED_FUNCTION_5_2();
  v6[6] = v10;
  v6[7] = a5;
  OUTLINED_FUNCTION_30_21(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  v11 = qword_1ED7A4228;
  v14 = type metadata accessor for RefreshableDeviceState();
  v15 = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)&v13 = v11;
  sub_1C2CFD350();
  __swift_destroy_boxed_opaque_existential_1(a6);
  sub_1C28B99EC(&v13, (uint64_t)(v7 + 10));
  return v7;
}

uint64_t DucTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_24();
  v0 = OUTLINED_FUNCTION_5_2();
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)();
  return v0;
}

_QWORD *DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)()
{
  uint64_t v0;
  _QWORD *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_25_24();
  v1[8] = 0xD000000000000014;
  v1[9] = 0x80000001C2D2EBF0;
  v1[2] = v5;
  v1[3] = v6;
  v1[4] = v7;
  v1[5] = v8;
  type metadata accessor for DucTemplateExecutor();
  v9 = OUTLINED_FUNCTION_5_2();
  sub_1C28BA958(v0, &qword_1EF790260);
  __swift_destroy_boxed_opaque_existential_1(v3);
  v1[6] = v9;
  v1[7] = v4;
  sub_1C28B99EC(v2, (uint64_t)(v1 + 10));
  return v1;
}

void sub_1C2A3959C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  sub_1C2A37694();
  v1 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_43(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_1_33(v0);
}

void sub_1C2A395E4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  sub_1C2A37694();
  v1 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_43(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_1_33(v0);
}

uint64_t sub_1C2A39624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v17 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v17 + 16) = a8;
  *(_QWORD *)(v17 + 24) = a9;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = a5;
  *(_QWORD *)(v17 + 48) = a1;
  *(_QWORD *)(v17 + 56) = a7;
  *(_QWORD *)(v17 + 64) = a2;
  *(_QWORD *)(v17 + 72) = a3;
  *(_BYTE *)(v17 + 80) = a6;
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  v18 = a7;
  v19 = OUTLINED_FUNCTION_3_1();
  sub_1C2A395DC(v19);
  return swift_release();
}

uint64_t sub_1C2A396E0(uint64_t a1, uint64_t (*a2)(_BYTE *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  _BYTE v14[80];
  _BYTE v15[80];
  _BYTE __dst[72];
  _BYTE __src[88];

  sub_1C2A3C16C(a1, (uint64_t)v15);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 48);
  sub_1C2A3C16C((uint64_t)v15, (uint64_t)__src);
  if (__src[72] == 1)
  {
    sub_1C2A3C16C((uint64_t)v15, (uint64_t)v14);
  }
  else
  {
    memcpy(__dst, __src, sizeof(__dst));
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 104));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C28F8E6C(v13, v12);
    swift_bridgeObjectRetain();
    if ((DeviceState.isVox.getter() & 1) != 0 && *(_BYTE *)(a5 + 32) == 1)
    {
      v10 = (_QWORD *)swift_allocObject();
      v10[2] = a2;
      v10[3] = a3;
      sub_1C2A3C16C((uint64_t)v15, (uint64_t)(v10 + 4));
      v10[14] = a4;
      memcpy(v10 + 15, __dst, 0x48uLL);
      sub_1C2A3C25C((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1C29E6C74);
      sub_1C2CFD350();
      sub_1C2CFD350();
      sub_1C2A3AC94();
      return swift_release();
    }
    sub_1C2A3C25C((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1C290D288);
    sub_1C2A3C16C((uint64_t)v15, (uint64_t)v14);
  }
  return a2(v14);
}

uint64_t sub_1C2A398B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13_1();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2A398F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A396E0(a1, *(uint64_t (**)(_BYTE *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_1C2A39930(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[8];
  char v23;

  v7 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v9 = *(id *)a1;
    v20 = *(_QWORD *)(a1 + 16);
    v21 = *(_QWORD *)(a1 + 8);
    v18 = *(_QWORD *)(a1 + 40);
    v19 = *(_QWORD *)(a1 + 24);
    v16 = *(_QWORD *)(a1 + 56);
    v17 = *(_QWORD *)(a1 + 48);
    v15 = *(_QWORD *)(a1 + 64);
    v10 = *(id *)a1;
    if (qword_1EF786D20 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C2D002E0;
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    sub_1C2CFE7C0();
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v11 + 32) = 0;
    *(_QWORD *)(v11 + 40) = 0xE000000000000000;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    sub_1C2A3C16C(a4, (uint64_t)v22);
    a2(v22);
    sub_1C290D288(v9, v21, v20, v19, v7, v18, v17, v16, v15, 1);
  }
  else if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1C2A3AA2C(a6);
    swift_bridgeObjectRelease();
    v13 = v22[6];
    v14 = v22[7];
    v23 = 0;
    a2(v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C28F90E8(v13, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2A39B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static ResponseTemplates.taskAborted(_:)(a2, a3);
}

void sub_1C2A39BA0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_19_25();
  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_6_35();
}

void sub_1C2A39BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_18();
  v1 = OUTLINED_FUNCTION_36_23();
  static ResponseTemplates.continueInApp(appDisplayInfo:deviceState:_:)(v1, v2, v3, v4);
  sub_1C28BA958(v0 - 104, &qword_1ED7A8760);
  OUTLINED_FUNCTION_14_37();
  OUTLINED_FUNCTION_11();
}

void sub_1C2A39C0C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1C2CFBCE8();
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 152))(v4, v5);
  sub_1C2CFD3EC();
  if (v6)
  {
    sub_1C28BFDE4();
    sub_1C28BFD6C();
    sub_1C2CFDD04();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for AppInformationResolver();
  swift_initStackObject();
  v7 = sub_1C2CFD350();
  AppInformationResolver.init(app:)(v7);
}

uint64_t sub_1C2A39D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C29270D8(v1);
  v5 = v4;
  swift_release();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1C2CFD428();
    v6 = sub_1C2CFD44C();
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_1C2CFD44C();
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v7);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
}

void sub_1C2A39DD4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  OUTLINED_FUNCTION_35_19();
  v1 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_43(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_1_33(v0);
}

void sub_1C2A39E0C()
{
  sub_1C2A39E24();
}

void sub_1C2A39E18()
{
  sub_1C2A39E24();
}

void sub_1C2A39E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v1, v2);
  sub_1C2A39C0C((_QWORD *)(v0 + 80));
}

void sub_1C2A39E90()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_27_17(v1);
  sub_1C28BA958(v1, v0);
  OUTLINED_FUNCTION_11();
}

void sub_1C2A39EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  static ResponseTemplates.appDisabledByScreenTime(_:)(a2, a3);
}

void sub_1C2A39EBC()
{
  double v0;
  void (*v1)(double);

  v0 = OUTLINED_FUNCTION_20_33();
  v1(v0);
  OUTLINED_FUNCTION_0_3();
}

void sub_1C2A39EE0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  sub_1C2A37694();
  v1 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_43(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_1_33(v0);
}

void sub_1C2A39F20()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_6_35();
}

void sub_1C2A39F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_18();
  v1 = OUTLINED_FUNCTION_36_23();
  static TCCTemplates.promptToEnableApp(appDisplayInfo:deviceState:_:)(v1, v2, v3, v4);
  sub_1C28BA958(v0 - 104, &qword_1ED7A8760);
  OUTLINED_FUNCTION_14_37();
  OUTLINED_FUNCTION_11();
}

void sub_1C2A39F94()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_19_25();
  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_9_43();
}

void sub_1C2A39FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v0;
  sub_1C2CFD350();
  static LabelTemplates.openApp(appDisplayInfo:_:)(v2, (uint64_t)sub_1C2A3AB78, v3);
  swift_release();
  OUTLINED_FUNCTION_14_37();
  OUTLINED_FUNCTION_8_0();
}

double sub_1C2A3A018@<D0>(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  if ((a5 & 1) != 0)
  {
    v17 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    v18 = sub_1C2CFE9AC();
    if (v18)
    {
      v19 = v18;
      sub_1C2A3C15C(a1, a4, 1);
    }
    else
    {
      v19 = swift_allocError();
      *v20 = a1;
    }
    *(_QWORD *)a6 = v19;
    result = 0.0;
    *(_OWORD *)(a6 + 8) = 0u;
    *(_OWORD *)(a6 + 24) = 0u;
    *(_OWORD *)(a6 + 40) = 0u;
    *(_OWORD *)(a6 + 56) = 0u;
    *(_BYTE *)(a6 + 72) = 1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9D30);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)(v11 + 32) = a1;
    *(_QWORD *)(v11 + 40) = a4;
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)(v12 + 32) = a1;
    *(_QWORD *)(v12 + 40) = a4;
    sub_1C29FAC10(a1, a4, 0);
    sub_1C29FAC10(a1, a4, 0);
    swift_bridgeObjectRetain();
    v13 = sub_1C2A28EB4(0, 0xE000000000000000, 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C2A28CEC();
    *(_QWORD *)a6 = a2;
    *(_QWORD *)(a6 + 8) = a3;
    v14 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)(a6 + 16) = v15;
    *(_QWORD *)(a6 + 24) = v14;
    *(_QWORD *)(a6 + 32) = v11;
    *(_QWORD *)(a6 + 40) = v12;
    result = 0.0;
    *(_OWORD *)(a6 + 48) = xmmword_1C2D00820;
    *(_QWORD *)(a6 + 64) = v13;
    *(_BYTE *)(a6 + 72) = 0;
  }
  return result;
}

void sub_1C2A3A1FC()
{
  sub_1C2A3A2F8();
}

uint64_t sub_1C2A3A208(uint64_t a1, uint64_t a2)
{
  return sub_1C2A3A814(a1, a2, (uint64_t)&unk_1E7C823E8, (uint64_t)sub_1C2A3ABAC, (void (*)(uint64_t, uint64_t))static NotificationTemplates.genericHandoffNotification(_:));
}

void sub_1C2A3A224(id a1, uint64_t a2, char a3, void (*a4)(_QWORD *, double), int a5, uint64_t a6, uint64_t a7)
{
  double v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[9];
  char v20;
  _QWORD v21[6];
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;

  v7 = sub_1C2A3A018(a1, a6, a7, a2, a3 & 1, (uint64_t)v21);
  v8 = v22;
  v9 = v23;
  v10 = v24;
  v11 = v25;
  v19[0] = v21[0];
  v19[1] = v21[1];
  v19[2] = v21[2];
  v19[3] = v21[3];
  v19[4] = v21[4];
  v19[5] = v21[5];
  v19[6] = v22;
  v19[7] = v23;
  v19[8] = v24;
  v20 = v25;
  a4(v19, v7);
  OUTLINED_FUNCTION_38_21();
  sub_1C290D288(v12, v13, v14, v15, v16, v17, v8, v9, v10, v11);
}

void sub_1C2A3A2EC()
{
  sub_1C2A3A2F8();
}

void sub_1C2A3A2F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[40];

  OUTLINED_FUNCTION_19_25();
  OUTLINED_FUNCTION_17_26(v0);
  v1 = OUTLINED_FUNCTION_27_17((uint64_t)v3);
  OUTLINED_FUNCTION_29_20(v1, &qword_1ED7A8760, v2);
  OUTLINED_FUNCTION_61_2();
}

void sub_1C2A3A338()
{
  double v0;
  void (*v1)(double);

  v0 = OUTLINED_FUNCTION_20_33();
  v1(v0);
  OUTLINED_FUNCTION_0_3();
}

void sub_1C2A3A35C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  sub_1C2A37694();
  v1 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_43(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_1_33(v0);
}

void sub_1C2A3A39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[40];

  OUTLINED_FUNCTION_17_26(a1);
  static ErrorTemplates.noAppsFound(deviceState:shouldSuggestStoreSearch:_:)((uint64_t)v6, 0, a1, a2);
  OUTLINED_FUNCTION_29_20(v4, &qword_1ED7A8760, v5);
  OUTLINED_FUNCTION_61_2();
}

void sub_1C2A3A3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C2CFE10C();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  v9 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  v9[6] = &unk_1EF790270;
  v9[7] = 0;
  LODWORD(a1) = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  sub_1C2CFD350();
  if ((_DWORD)a1 == 1)
  {
    sub_1C28BA958((uint64_t)v7, &qword_1ED7A7240);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_1C2CFE100();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_1C2CFE0B8();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v13 + 16) = &unk_1EF790278;
  *(_QWORD *)(v13 + 24) = v9;
  if (v11 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v11;
  }
  swift_task_create();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A3A5A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1C2A3A5E8;
  return sub_1C29A1C30();
}

uint64_t sub_1C2A3A5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 32) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 40) = a2;
    *(_QWORD *)(v6 + 48) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1C2A3A660()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32) != 0;
  v4 = OUTLINED_FUNCTION_22_27();
  sub_1C2A3A018(v6, v4, v5, v1, v3, v7);
  sub_1C2A3C15C(v2, v1, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2A3A6CC()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 32);
  v2 = OUTLINED_FUNCTION_22_27();
  sub_1C2A3A018(v4, v2, v3, 0, v1 != 0, v5);
  sub_1C2A3C15C(v1, 0, v1 != 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2A3A72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ErrorTemplates.genericError(_:)(a2, a3);
}

void sub_1C2A3A738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[40];

  OUTLINED_FUNCTION_17_26(a1);
  static ErrorTemplates.appNotFoundOnDevice(deviceState:_:)((uint64_t)v8, a3, a4);
  OUTLINED_FUNCTION_29_20(v6, &qword_1ED7A8760, v7);
  OUTLINED_FUNCTION_61_2();
}

void sub_1C2A3A77C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_9_43();
}

void sub_1C2A3A7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  static ErrorTemplates.appDoesNotSupportIntent(appDisplayInfo:_:)(v2, v1, v0);
  OUTLINED_FUNCTION_14_37();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A3A7DC(uint64_t a1, uint64_t a2)
{
  return sub_1C2A3A814(a1, a2, (uint64_t)&unk_1E7C82460, (uint64_t)sub_1C2A3C2C0, (void (*)(uint64_t, uint64_t))static LabelTemplates.yes(_:));
}

uint64_t sub_1C2A3A7F8(uint64_t a1, uint64_t a2)
{
  return sub_1C2A3A814(a1, a2, (uint64_t)&unk_1E7C82488, (uint64_t)sub_1C2A3B85C, (void (*)(uint64_t, uint64_t))static LabelTemplates.no(_:));
}

uint64_t sub_1C2A3A814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_1C2CFD350();
  a5(a4, v9);
  return swift_release();
}

void sub_1C2A3A878(id a1, uint64_t a2, char a3, void (*a4)(_QWORD *))
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  _QWORD v18[9];
  char v19;

  v5 = a1;
  if ((a3 & 1) != 0)
  {
    v6 = a1;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9D30);
    v10 = OUTLINED_FUNCTION_5_2();
    *(_OWORD *)(v10 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)(v10 + 32) = v5;
    *(_QWORD *)(v10 + 40) = a2;
    v11 = OUTLINED_FUNCTION_5_2();
    *(_OWORD *)(v11 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)(v11 + 32) = v5;
    *(_QWORD *)(v11 + 40) = a2;
    OUTLINED_FUNCTION_21_26();
    OUTLINED_FUNCTION_21_26();
    v13 = sub_1C2A28EB4(0, 0xE000000000000000, 1);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_3_1();
    swift_bridgeObjectRetain();
    v7 = 0x80000001C2D2ED50;
    sub_1C2A28CEC();
    v8 = v15;
    v9 = MEMORY[0x1E0DEE9E0];
    v12 = 2;
    v5 = (id)0xD000000000000010;
  }
  v16 = a3 & 1;
  v18[0] = v5;
  v18[1] = v7;
  v18[2] = v8;
  v18[3] = v9;
  v18[4] = v10;
  v18[5] = v11;
  v18[6] = 0;
  v18[7] = v12;
  v18[8] = v13;
  v19 = v16;
  a4(v18);
  sub_1C290D288(v5, v7, v8, v9, v10, v11, 0, v12, v13, v16);
}

uint64_t sub_1C2A3AA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ErrorTemplates.genericError(_:)(a4, a5);
}

void sub_1C2A3AA2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(a1 + 32);
  if (v1[2])
  {
    v3 = v1[4];
    v2 = v1[5];
    swift_bridgeObjectRetain();
    sub_1C2CFDE54();
    swift_bridgeObjectRetain();
    sub_1C2CFDE54();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9D30);
    v4 = OUTLINED_FUNCTION_5_2();
    *(_OWORD *)(v4 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)(v4 + 32) = v3;
    *(_QWORD *)(v4 + 40) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    TemplatingResult.init(templateIdentifier:speak:print:)();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2A3AB38()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  sub_1C2A37694();
  v1 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_43(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_1_33(v0);
}

void sub_1C2A3AB78(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_1C2A3A224(a1, a2, a3 & 1, *(void (**)(_QWORD *, double))(v3 + 16), *(_QWORD *)(v3 + 24), 0xD00000000000001FLL, 0x80000001C2D2EDE0);
}

void sub_1C2A3ABAC(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_1C2A3A224(a1, a2, a3 & 1, *(void (**)(_QWORD *, double))(v3 + 16), *(_QWORD *)(v3 + 24), 0xD000000000000036, 0x80000001C2D2EDA0);
}

uint64_t sub_1C2A3ABE0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A3AC14()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28F6E90;
  OUTLINED_FUNCTION_38_21();
  return sub_1C2A00FE8();
}

void sub_1C2A3AC94()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  sub_1C2A37694();
  v1 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_0_43(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_1_33(v0);
}

unint64_t sub_1C2A3ACD4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40[16];
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a3;
  v45 = a4;
  v41 = &v44;
  swift_bridgeObjectRetain();
  v6 = sub_1C2A3B878(0x7FFFFFFFFFFFFFFFLL, 1u, sub_1C299BBB0, (uint64_t)v40, a1, a2);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v48 = MEMORY[0x1E0DEE9D8];
    sub_1C28E990C();
    v8 = v48;
    v9 = v6 + 56;
    while (1)
    {
      v10 = *(_QWORD *)(v9 - 24);
      v11 = *(_QWORD *)(v9 - 16);
      swift_bridgeObjectRetain_n();
      result = OUTLINED_FUNCTION_11_32();
      v14 = (v13 & 1) != 0 ? v11 : result;
      if (v14 >> 14 < v10 >> 14)
        break;
      v38 = v8;
      v39 = v7;
      v15 = OUTLINED_FUNCTION_18_24();
      v17 = v16;
      v19 = v18;
      v21 = v20;
      OUTLINED_FUNCTION_29();
      v44 = v15;
      v45 = v17;
      v46 = v19;
      v47 = v21;
      sub_1C2907324();
      v22 = sub_1C2CFE508();
      v24 = v23;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_3_1();
      result = OUTLINED_FUNCTION_11_32();
      if ((v25 & 1) != 0)
        result = v11;
      if (v11 >> 14 < result >> 14)
        goto LABEL_17;
      v26 = OUTLINED_FUNCTION_18_24();
      v28 = v27;
      v30 = v29;
      v32 = v31;
      OUTLINED_FUNCTION_29();
      v42 = v22;
      v43 = v24;
      v44 = v26;
      v45 = v28;
      v46 = v30;
      v47 = v32;
      sub_1C29072E8();
      swift_bridgeObjectRetain();
      sub_1C2CFDE48();
      OUTLINED_FUNCTION_29();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = v42;
      v34 = v43;
      v8 = v38;
      v48 = v38;
      v35 = *(_QWORD *)(v38 + 16);
      if (v35 >= *(_QWORD *)(v38 + 24) >> 1)
      {
        sub_1C28E990C();
        v8 = v48;
      }
      *(_QWORD *)(v8 + 16) = v35 + 1;
      v36 = v8 + 16 * v35;
      *(_QWORD *)(v36 + 32) = v33;
      *(_QWORD *)(v36 + 40) = v34;
      v9 += 32;
      v7 = v39 - 1;
      if (v39 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    v44 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8468);
    sub_1C28EA4F8();
    v37 = sub_1C2CFDD1C();
    swift_bridgeObjectRelease();
    return v37;
  }
  return result;
}

uint64_t DucTemplatingService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return v0;
}

uint64_t DucTemplatingService.__deallocating_deinit()
{
  DucTemplatingService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A3AFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(**(_QWORD **)v7
                                                                                                 + 168))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t sub_1C2A3AFF0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(**(_QWORD **)v1 + 200))(a1);
}

uint64_t sub_1C2A3B028()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 224))();
}

uint64_t sub_1C2A3B050()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 232))();
}

uint64_t sub_1C2A3B078()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 240))();
}

uint64_t sub_1C2A3B0A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 248))();
}

uint64_t sub_1C2A3B0C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 256))();
}

uint64_t sub_1C2A3B0F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 264))();
}

uint64_t sub_1C2A3B118()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 272))();
}

uint64_t sub_1C2A3B140()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 280))();
}

uint64_t sub_1C2A3B168()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 288))();
}

uint64_t sub_1C2A3B190()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 296))();
}

uint64_t sub_1C2A3B1B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 304))();
}

uint64_t sub_1C2A3B1E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 312))();
}

uint64_t sub_1C2A3B208()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 344))();
}

uint64_t sub_1C2A3B230()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 352))();
}

uint64_t sub_1C2A3B258()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 360))();
}

uint64_t sub_1C2A3B280()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 368))();
}

uint64_t sub_1C2A3B2A8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 376))();
}

uint64_t sub_1C2A3B2D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 384))();
}

uint64_t sub_1C2A3B2F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 392))();
}

uint64_t sub_1C2A3B320()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 320))();
}

uint64_t sub_1C2A3B348()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 328))();
}

uint64_t sub_1C2A3B370()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 400))();
}

uint64_t sub_1C2A3B398()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 408))();
}

uint64_t sub_1C2A3B3C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 416))();
}

uint64_t sub_1C2A3B3E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 424))();
}

uint64_t sub_1C2A3B410()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 432))();
}

uint64_t sub_1C2A3B438()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 464))();
}

uint64_t sub_1C2A3B460()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 472))();
}

uint64_t sub_1C2A3B488()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 440))();
}

uint64_t sub_1C2A3B4B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 480))();
}

uint64_t sub_1C2A3B4D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 336))();
}

uint64_t sub_1C2A3B500()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 448))();
}

uint64_t sub_1C2A3B528()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 456))();
}

uint64_t sub_1C2A3B550@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A72C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  *(_QWORD *)(inited + 32) = 0x65756C6176;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_1C28BB340(v1 + 32, inited + 48);
  v4 = sub_1C2CFDC8C();
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
  *(_QWORD *)(a1 + 24) = result;
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_1C2A3B600()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A3B62C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A3B550(a1);
}

void sub_1C2A3B64C(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_5_39();
    OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790528);
      *(_QWORD *)(OUTLINED_FUNCTION_26_25() + 16) = a1;
    }
    OUTLINED_FUNCTION_84_3();
  }
}

void sub_1C2A3B6B8(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_5_39();
    OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_1C2CFE028() + 16) = a1;
    OUTLINED_FUNCTION_84_3();
  }
}

void sub_1C2A3B724(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_5_39();
    OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_1C2934360(0, &qword_1ED7A6120);
      *(_QWORD *)((OUTLINED_FUNCTION_26_25() & 0xFFFFFFFFFFFFF8) + 0x10) = a1;
    }
    OUTLINED_FUNCTION_84_3();
  }
}

void sub_1C2A3B7A4(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_5_39();
    OUTLINED_FUNCTION_2_39();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78AB08);
      *(_QWORD *)(sub_1C2CFE028() + 16) = a1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78AB08);
    OUTLINED_FUNCTION_84_3();
  }
}

uint64_t sub_1C2A3B83C()
{
  OUTLINED_FUNCTION_13_1();
  return swift_deallocObject();
}

void sub_1C2A3B85C(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_1C2A3A878(a1, a2, a3 & 1, *(void (**)(_QWORD *))(v3 + 16));
}

uint64_t sub_1C2A3B878(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_38;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v42 = v10 + 16;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1C2A3BCC0(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_36;
  }
  v41 = a1;
  v48 = 4 * v12;
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1C2CFDEC0();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v14 = sub_1C2CFDE24();
      goto LABEL_21;
    }
    v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14)
        goto LABEL_38;
      v21 = sub_1C2CFDED8();
      v43 = v23;
      v44 = v22;
      v45 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C28FD4C0();
        v13 = v28;
      }
      v25 = *(_QWORD *)(v13 + 16);
      if (v25 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_1C28FD4C0();
        v13 = v29;
      }
      *(_QWORD *)(v13 + 16) = v25 + 1;
      v26 = (_QWORD *)(v13 + 32 * v25);
      v26[4] = v21;
      v26[5] = v45;
      v26[6] = v44;
      v26[7] = v43;
      *(_QWORD *)v42 = v13;
    }
    v27 = sub_1C2CFDE24();
    v14 = v27;
    *(_QWORD *)(v47 + 16) = v27;
    if ((v20 & 1) == 0 && *(_QWORD *)(v13 + 16) == v41)
      break;
    v15 = v27;
    v16 = v27;
LABEL_21:
    if (v48 == v14 >> 14)
      goto LABEL_30;
  }
  v16 = v27;
  v15 = v27;
LABEL_30:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v48 < v16 >> 14)
  {
LABEL_38:
    result = sub_1C2CFE7F0();
    __break(1u);
    return result;
  }
  v31 = sub_1C2CFDED8();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRelease();
  sub_1C2A70C40();
  v38 = *(_QWORD *)(*(_QWORD *)v42 + 16);
  sub_1C2942A24(v38);
  v13 = *(_QWORD *)v42;
  *(_QWORD *)(v13 + 16) = v38 + 1;
  v39 = (_QWORD *)(v13 + 32 * v38);
  v39[4] = v31;
  v39[5] = v33;
  v39[6] = v35;
  v39[7] = v37;
  *(_QWORD *)v42 = v13;
LABEL_35:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_36:
  swift_release();
  return v13;
}

uint64_t sub_1C2A3BCC0(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1C2CFDED8();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    sub_1C2A70C40();
    v14 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
    sub_1C2942A24(v14);
    v15 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)(v15 + 16) = v14 + 1;
    v16 = (_QWORD *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1C2CFE7F0();
  __break(1u);
  return result;
}

void sub_1C2A3BDC4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C2987954();
  *v0 = v1;
}

uint64_t method lookup function for DucTemplatingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DucTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DucTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterPromptDialog(app:parameterName:intent:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v7 + 168))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueConfirmationRejectedDialog(app:parameterName:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueChangeDialog(app:parameterName:intent:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentConfirmationDialog(app:intent:intentResponse:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentConfirmationCancelledDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentConfirmationCancelledDialog(app:intent:intentResponse:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentConfirmationWaitToContinueDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentHandledContinueInAppDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentAutoHandledDialog(app:intent:intentResponse:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentNotHandledDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentInProgressDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentNotSupportedByAppDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppDisabledByScreenTimeDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentAuthenticationDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DucTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DucTemplatingService.makeOfferIntentDialog(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppIsDisabledForSiriDialog(app:isHandsFree:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DucTemplatingService.makeOpenAppDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DucTemplatingService.makeOpenAppFailedDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DucTemplatingService.makeHandoffDialog(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DucTemplatingService.makeNotificationMessageForHandoff(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DucTemplatingService.makeUnlockDeviceDialog(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DucTemplatingService.makeUnmuteSiriConfirmationDialog(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DucTemplatingService.makeUnmuteSiriConfirmationRejectedDialog(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DucTemplatingService.makeEnableAppConfirmationDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DucTemplatingService.makeEnableAppConfirmationRejectedDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DucTemplatingService.makeSuggestAppDialog(app:intent:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DucTemplatingService.makeDisambiguateAppDialog(apps:disambiguationList:intent:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DucTemplatingService.makeConfirmAppDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DucTemplatingService.makeNoAppsFoundDialog(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DucTemplatingService.makeFindAppButtonTitleDialog(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DucTemplatingService.makeGenericErrorDialog(app:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppNotFoundOnDeviceDialog(app:intent:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppDoesNotSupportIntentDialog(app:intent:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DucTemplatingService.commonYesDialog(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DucTemplatingService.commonNoDialog(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DucTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppLaunchFailed(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueDisambiguationTemplatingResult(app:parameterName:intentResolutionResult:intent:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of DucTemplatingService.makeSpeakableDisambiguationItemList(app:intent:parameterName:disambiguationList:deviceIsLocked:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of DucTemplatingService.convertStringToTitleCase(string:separator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t type metadata accessor for StringListTemplatingParameter()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for DucFailure(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C2A3C08C + 4 * asc_1C2D08DE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C2A3C0AC + 4 * byte_1C2D08DE5[v4]))();
}

_BYTE *sub_1C2A3C08C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C2A3C0AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A3C0B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A3C0BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A3C0C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A3C0CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DucFailure()
{
  return &type metadata for DucFailure;
}

unint64_t sub_1C2A3C0EC()
{
  unint64_t result;

  result = qword_1EF790518;
  if (!qword_1EF790518)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D08F2C, &type metadata for DucFailure);
    atomic_store(result, (unint64_t *)&qword_1EF790518);
  }
  return result;
}

uint64_t sub_1C2A3C128()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2A3C14C()
{
  return swift_deallocObject();
}

void sub_1C2A3C15C(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1C2A3C16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79C4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A3C1B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13_1();
  sub_1C290D288(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 176) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C2A3C248(uint64_t a1)
{
  uint64_t v1;

  sub_1C2A39930(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32, *(_QWORD *)(v1 + 112), v1 + 120);
}

uint64_t sub_1C2A3C25C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 72);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v4);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, __int128 a11, __int128 a12, __int128 a13, char a14)
{
  uint64_t (*v14)(uint64_t *);

  a9 = a1;
  a10 = 0u;
  a11 = 0u;
  a12 = 0u;
  a13 = 0u;
  a14 = 1;
  return v14(&a9);
}

void OUTLINED_FUNCTION_1_33(id a1)
{

}

uint64_t OUTLINED_FUNCTION_2_39()
{
  return sub_1C2CFE7F0();
}

void OUTLINED_FUNCTION_6_35()
{
  uint64_t v0;

  sub_1C2A39C0C((_QWORD *)(v0 + 80));
}

void OUTLINED_FUNCTION_9_43()
{
  uint64_t v0;

  sub_1C2A39C0C((_QWORD *)(v0 + 80));
}

uint64_t OUTLINED_FUNCTION_11_32()
{
  return sub_1C2CFE49C();
}

uint64_t OUTLINED_FUNCTION_14_37()
{
  uint64_t *v0;
  uint64_t v1;

  return sub_1C28BA958(v1, v0);
}

void OUTLINED_FUNCTION_16_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  static ResponseTemplates.taskAborted(_:)(a4, a5);
}

uint64_t OUTLINED_FUNCTION_17_26(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_1C28B9A04(v1 + 80, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_18_24()
{
  return sub_1C2CFE4B4();
}

double OUTLINED_FUNCTION_20_33()
{
  return 0.0;
}

id OUTLINED_FUNCTION_21_26()
{
  uint64_t v0;
  void *v1;

  return sub_1C29FAC10(v1, v0, 0);
}

unint64_t OUTLINED_FUNCTION_22_27()
{
  return 0xD000000000000029;
}

uint64_t OUTLINED_FUNCTION_26_25()
{
  return sub_1C2CFE028();
}

uint64_t OUTLINED_FUNCTION_27_17(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_29_20(uint64_t a1, uint64_t *a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_1C28BA958((uint64_t)va, a2);
}

void OUTLINED_FUNCTION_30_21(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_1C28C72CC((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_36_23()
{
  uint64_t v0;

  return v0;
}

BOOL static EnableTCCAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EnableTCCAction.hash(into:)()
{
  return sub_1C2CFEAC0();
}

uint64_t EnableTCCAction.hashValue.getter()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  return sub_1C2CFEAD8();
}

unint64_t sub_1C2A3C51C()
{
  unint64_t result;

  result = qword_1EF790530;
  if (!qword_1EF790530)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for EnableTCCAction, &type metadata for EnableTCCAction);
    atomic_store(result, &qword_1EF790530);
  }
  return result;
}

uint64_t dispatch thunk of EntitlementControlling.executeTCCChecks<A>(delegate:intent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t storeEnumTagSinglePayload for EnableTCCAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C2A3C5AC + 4 * byte_1C2D08FD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C2A3C5E0 + 4 * byte_1C2D08FD0[v4]))();
}

uint64_t sub_1C2A3C5E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A3C5E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A3C5F0);
  return result;
}

uint64_t sub_1C2A3C5FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A3C604);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C2A3C608(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A3C610(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EnableTCCAction()
{
  return &type metadata for EnableTCCAction;
}

unint64_t sub_1C2A3C62C()
{
  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  sub_1C2CFEA78();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t sub_1C2A3C6BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  return sub_1C2A3C730(v2, v1);
}

uint64_t sub_1C2A3C6F4()
{
  OUTLINED_FUNCTION_21_0();
  return swift_unknownObjectRetain();
}

uint64_t sub_1C2A3C730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1C2A3C77C())()
{
  OUTLINED_FUNCTION_21_0();
  return j__swift_endAccess;
}

void ErrorAction.error.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 32);
  OUTLINED_FUNCTION_1_0();
}

void ErrorAction.__allocating_init(_:)(uint64_t a1)
{
  _QWORD *v2;

  v2 = (_QWORD *)swift_allocObject();
  v2[2] = 0;
  v2[3] = 0;
  v2[4] = a1;
  OUTLINED_FUNCTION_1_0();
}

_QWORD *ErrorAction.init(_:)(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = 0;
  v1[3] = 0;
  v1[4] = a1;
  return v1;
}

uint64_t sub_1C2A3C818()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C2A3C830()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)(v0 + 16) + 32);
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ErrorAction.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return v0;
}

uint64_t ErrorAction.__deallocating_deinit()
{
  ErrorAction.deinit();
  return swift_deallocClassInstance();
}

uint64_t (*sub_1C2A3C8C0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1C2A3C8FC(uint64_t a1)
{
  uint64_t v2;

  sub_1C2A3C9CC((unint64_t *)&unk_1EF790540, (uint64_t)&protocol conformance descriptor for ErrorAction);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t type metadata accessor for ErrorAction()
{
  return objc_opt_self();
}

uint64_t sub_1C2A3C954()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28CC838;
  return sub_1C2A3C818();
}

void sub_1C2A3C998(uint64_t a1)
{
  uint64_t v2;

  sub_1C2A3C9CC(&qword_1EF790550, (uint64_t)&protocol conformance descriptor for ErrorAction);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C2A3C9CC(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for ErrorAction();
    atomic_store(MEMORY[0x1C3BC9CD4](a2, v4), a1);
  }
  OUTLINED_FUNCTION_1_0();
}

unint64_t sub_1C2A3CA04()
{
  return sub_1C2A3C62C();
}

uint64_t sub_1C2A3CA24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1C2A3C6F4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for ErrorAction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ErrorAction.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ErrorAction.nextAction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ErrorAction.nextAction.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ErrorAction.nextAction.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ErrorAction.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ErrorAction.run()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 136) + *(_QWORD *)(*(_QWORD *)v0 + 136));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1C28CC838;
  return OUTLINED_FUNCTION_24(v4);
}

uint64_t sub_1C2A3CAE4()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3CAF0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  if (qword_1EF786CE8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = qword_1EF7CBEC8;
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1EF78F548 + dword_1EF78F548);
  sub_1C2CFD350();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1C2A3CB90;
  return v3(1);
}

uint64_t sub_1C2A3CB90(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 32) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_1C2A3CC04()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_126_1(*(_QWORD *)(v0 + 40), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A3CC34(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3CC44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v2 = v1[12];
  sub_1C2CFDC8C();
  OUTLINED_FUNCTION_8_36();
  if (v1[10])
  {
    OUTLINED_FUNCTION_0_44();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
    OUTLINED_FUNCTION_3_38();
    __swift_destroy_boxed_opaque_existential_1(v2);
    v0 = v5;
  }
  else
  {
    sub_1C28BA918((uint64_t)(v1 + 7));
  }
  v1[13] = v0;
  if (qword_1EF786CE8 != -1)
    swift_once();
  v1[14] = qword_1EF7CBEC8;
  sub_1C2CFD350();
  v3 = (_QWORD *)swift_task_alloc();
  v1[15] = v3;
  *v3 = v1;
  v3[1] = sub_1C2A3CD40;
  return OUTLINED_FUNCTION_4_42(0, v0);
}

uint64_t sub_1C2A3CD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_40();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v2 + 136) = v0;
  return OUTLINED_FUNCTION_5_40();
}

uint64_t sub_1C2A3CD90()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_126_1(*(_QWORD *)(v0 + 136), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A3CDC0()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A3CDEC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3CDFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v2 = v1[12];
  sub_1C2CFDC8C();
  OUTLINED_FUNCTION_8_36();
  if (v1[10])
  {
    OUTLINED_FUNCTION_0_44();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
    OUTLINED_FUNCTION_3_38();
    __swift_destroy_boxed_opaque_existential_1(v2);
    v0 = v5;
  }
  else
  {
    sub_1C28BA918((uint64_t)(v1 + 7));
  }
  v1[13] = v0;
  if (qword_1EF786CE8 != -1)
    swift_once();
  v1[14] = qword_1EF7CBEC8;
  sub_1C2CFD350();
  v3 = (_QWORD *)swift_task_alloc();
  v1[15] = v3;
  *v3 = v1;
  v3[1] = sub_1C2A3CEF8;
  return OUTLINED_FUNCTION_4_42(2, v0);
}

uint64_t sub_1C2A3CEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_40();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v2 + 136) = v0;
  return OUTLINED_FUNCTION_5_40();
}

void OUTLINED_FUNCTION_0_44()
{
  __int128 *v0;
  uint64_t v1;

  sub_1C28B99EC(v0, v1 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1C2A19FD8();
}

uint64_t OUTLINED_FUNCTION_2_40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_3_38()
{
  sub_1C2A3D1B8();
}

uint64_t OUTLINED_FUNCTION_4_42(char a1, uint64_t a2)
{
  return sub_1C29C5664(a1, a2);
}

uint64_t OUTLINED_FUNCTION_5_40()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_8_36()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C28BA828(v1, v0);
}

void sub_1C2A3D00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8, v9);
  v10 = OUTLINED_FUNCTION_21_27();
  type metadata accessor for Input(v10);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_2_6();
  if (__swift_getEnumTagSinglePayload(a1, 1, v13) == 1)
  {
    OUTLINED_FUNCTION_62_14(a1);
    sub_1C2A3F498(a2, a3, v3);
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_62_14(v3);
  }
  else
  {
    sub_1C2992AB4(a1, v4);
    OUTLINED_FUNCTION_41_16();
    sub_1C2BF9CF8(v14, v15, v16);
    OUTLINED_FUNCTION_8();
  }
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A3D0D4()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[40];

  OUTLINED_FUNCTION_34_23();
  if (v1)
  {
    sub_1C28B99EC(v0, (uint64_t)v8);
    OUTLINED_FUNCTION_41_16();
    sub_1C2BF9D10(v2, v3, v4);
    OUTLINED_FUNCTION_8();
  }
  else
  {
    OUTLINED_FUNCTION_24_26((uint64_t)v0);
    OUTLINED_FUNCTION_23_31(v5, v6, &qword_1EF790768, (void (*)(unint64_t, uint64_t))sub_1C28B99EC, &qword_1ED7A4208, v7);
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_24_26((uint64_t)v8);
  }
  OUTLINED_FUNCTION_61_2();
}

void sub_1C2A3D148(uint64_t a1, uint64_t a2)
{
  _OWORD v3[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1C28E9790((_OWORD *)a1, v3);
    sub_1C2BF9D1C(v3, a2);
    sub_1C29BA780(a2);
  }
  else
  {
    OUTLINED_FUNCTION_72_7(a1);
    sub_1C2A3F68C(a2, v3);
    sub_1C29BA780(a2);
    OUTLINED_FUNCTION_72_7((uint64_t)v3);
  }
  OUTLINED_FUNCTION_21_1();
}

void sub_1C2A3D1B8()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  _OWORD v4[2];

  OUTLINED_FUNCTION_34_23();
  if (v3)
  {
    sub_1C28E9790(v2, v4);
    OUTLINED_FUNCTION_41_16();
    sub_1C2BF9D60();
    OUTLINED_FUNCTION_8();
  }
  else
  {
    OUTLINED_FUNCTION_24_26((uint64_t)v2);
    sub_1C2A3F7A8(v1, v0, v4);
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_24_26((uint64_t)v4);
  }
  OUTLINED_FUNCTION_21_1();
}

void sub_1C2A3D220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_21_27();
  v10 = sub_1C2CFBC58();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  OUTLINED_FUNCTION_72_4();
  if (__swift_getEnumTagSinglePayload(a1, 1, v10) == 1)
  {
    OUTLINED_FUNCTION_62_14(a1);
    sub_1C2A3F8B8(a2, a3, v3);
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_62_14(v3);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v4, a1, v10);
    OUTLINED_FUNCTION_41_16();
    sub_1C2BF9DAC(v13, v14, v15);
    OUTLINED_FUNCTION_8();
  }
  OUTLINED_FUNCTION_11();
}

void sub_1C2A3D300()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[40];

  OUTLINED_FUNCTION_34_23();
  if (v1)
  {
    sub_1C28B99EC(v0, (uint64_t)v8);
    OUTLINED_FUNCTION_41_16();
    sub_1C2BF9E5C(v2, v3, v4);
    OUTLINED_FUNCTION_8();
  }
  else
  {
    OUTLINED_FUNCTION_24_26((uint64_t)v0);
    OUTLINED_FUNCTION_23_31(v5, v6, &qword_1EF790778, (void (*)(unint64_t, uint64_t))sub_1C28B99EC, &qword_1EF78BC78, v7);
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_24_26((uint64_t)v8);
  }
  OUTLINED_FUNCTION_61_2();
}

void sub_1C2A3D374()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[40];

  OUTLINED_FUNCTION_34_23();
  if (v1)
  {
    sub_1C28B99EC(v0, (uint64_t)v8);
    OUTLINED_FUNCTION_41_16();
    sub_1C2BF9E68(v2, v3, v4);
    OUTLINED_FUNCTION_8();
  }
  else
  {
    OUTLINED_FUNCTION_24_26((uint64_t)v0);
    OUTLINED_FUNCTION_23_31(v5, v6, &qword_1EF790780, (void (*)(unint64_t, uint64_t))sub_1C28B99EC, &qword_1EF78BC88, v7);
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_24_26((uint64_t)v8);
  }
  OUTLINED_FUNCTION_61_2();
}

void sub_1C2A3D3E8()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[40];

  OUTLINED_FUNCTION_34_23();
  if (v1)
  {
    sub_1C28B99EC(v0, (uint64_t)v8);
    OUTLINED_FUNCTION_41_16();
    sub_1C2BF9E74(v2, v3, v4);
    OUTLINED_FUNCTION_8();
  }
  else
  {
    OUTLINED_FUNCTION_24_26((uint64_t)v0);
    OUTLINED_FUNCTION_23_31(v5, v6, &qword_1EF790788, (void (*)(unint64_t, uint64_t))sub_1C28B99EC, &qword_1EF78BC98, v7);
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_24_26((uint64_t)v8);
  }
  OUTLINED_FUNCTION_61_2();
}

void sub_1C2A3D45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A3D4A4(a1, a2, a3, (void (*)(_OWORD *, uint64_t, uint64_t))sub_1C2BF9E80, &qword_1EF790738, &qword_1EF790740);
}

void sub_1C2A3D480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A3D4A4(a1, a2, a3, (void (*)(_OWORD *, uint64_t, uint64_t))sub_1C2BF9E8C, &qword_1EF790748, &qword_1EF790750);
}

void sub_1C2A3D4A4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *, uint64_t, uint64_t), uint64_t *a5, uint64_t *a6)
{
  __int128 v8;
  _OWORD v10[3];

  if (*(_QWORD *)(a1 + 24))
  {
    v8 = *(_OWORD *)(a1 + 16);
    v10[0] = *(_OWORD *)a1;
    v10[1] = v8;
    v10[2] = *(_OWORD *)(a1 + 32);
    a4(v10, a2, a3);
    OUTLINED_FUNCTION_8();
  }
  else
  {
    sub_1C28B9D6C(a1, a5);
    sub_1C2A3FBEC(a2, a3, a6, v10);
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_72_7((uint64_t)v10);
  }
}

uint64_t sub_1C2A3D544(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 56) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3D558()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = sub_1C2CFDC8C();
  *(_QWORD *)(v0 + 32) = v1;
  v4 = &aTE[*(int *)aTE];
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_1C2A3D5F8;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))v4)(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 56), v1, 0);
}

uint64_t sub_1C2A3D5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v0 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1C2A3D650()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

void static ErrorTemplates.appDoesNotSupportIntent(appDisplayInfo:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_72_4();
  v13 = OUTLINED_FUNCTION_69_5();
  OUTLINED_FUNCTION_30_0(v3, v14, v15, v13);
  sub_1C28D3304(a1, (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EF790268);
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  sub_1C2921AEC((uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, &qword_1EF790268);
  v18 = (_QWORD *)(v17 + ((v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v18 = a2;
  v18[1] = a3;
  OUTLINED_FUNCTION_221();
  sub_1C2948F68();
  swift_release();
  OUTLINED_FUNCTION_11();
}

void static ErrorTemplates.noAppsFound(deviceState:shouldSuggestStoreSearch:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[40];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_21_27();
  v11 = sub_1C2CFE10C();
  OUTLINED_FUNCTION_30_0(v4, v12, v13, v11);
  sub_1C28D3304(a1, (uint64_t)v15, &qword_1ED7A8760);
  v14 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  sub_1C2921AEC((uint64_t)v15, v14 + 32, &qword_1ED7A8760);
  *(_BYTE *)(v14 + 72) = a2;
  *(_QWORD *)(v14 + 80) = a3;
  *(_QWORD *)(v14 + 88) = a4;
  OUTLINED_FUNCTION_221();
  sub_1C2948F68();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

uint64_t static ErrorTemplates.genericError(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C2A3DB7C(a1, a2, (uint64_t)&unk_1E7C828B0, (uint64_t)&unk_1E7C828D8, (uint64_t)&unk_1EF790678);
}

void static ErrorTemplates.appNotFoundOnDevice(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A3E110(a1, a2, a3);
}

uint64_t sub_1C2A3D890()
{
  uint64_t inited;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A72C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  strcpy((char *)(inited + 32), "responseMode");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0xE000000000000000;
  result = sub_1C2CFDC8C();
  qword_1EF790648 = result;
  return result;
}

uint64_t sub_1C2A3D91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[12] = a4;
  v5[13] = a5;
  v6 = (_QWORD *)swift_task_alloc();
  v5[14] = v6;
  *v6 = v5;
  v6[1] = sub_1C2A3D970;
  return static ErrorTemplates.genericError()((uint64_t)(v5 + 2));
}

uint64_t sub_1C2A3D970()
{
  OUTLINED_FUNCTION_142_1();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A3D9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;

  OUTLINED_FUNCTION_52_15();
  v1 = OUTLINED_FUNCTION_18_25(*(_QWORD *)(v0 + 120), v10, v12, v14, v16, v18, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  OUTLINED_FUNCTION_19_26(v1, v2, v3, v4, v5, v6, v7, v8, v11, v13, v15, v17, v19);
  return OUTLINED_FUNCTION_114_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A3D9EC()
{
  uint64_t v0;
  double v1;
  void (*v2)(double);

  v1 = OUTLINED_FUNCTION_43_13();
  v2(v1);
  OUTLINED_FUNCTION_17_27();
  return OUTLINED_FUNCTION_37_19(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static ErrorTemplates.genericError()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3DA38()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void);

  if (qword_1EF786CE8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 24) = qword_1EF7CBEC8;
  v5 = (uint64_t (*)(void))((char *)&dword_1EF790698 + dword_1EF790698);
  OUTLINED_FUNCTION_38_0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = OUTLINED_FUNCTION_75_9(v1);
  return OUTLINED_FUNCTION_54_1(v2, v3, v5);
}

uint64_t sub_1C2A3DAC8()
{
  OUTLINED_FUNCTION_143_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A3DB04()
{
  uint64_t (*v0)(void);

  swift_release();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_24(v0);
}

uint64_t sub_1C2A3DB2C()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static ErrorTemplates.genericErrorLegacy(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C2A3DB7C(a1, a2, (uint64_t)&unk_1E7C82928, (uint64_t)&unk_1E7C82950, (uint64_t)&unk_1EF7906A8);
}

uint64_t sub_1C2A3DB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_69_5();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v12);
  v13 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  v13[5] = a2;
  LODWORD(a1) = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  v14 = sub_1C2CFD350();
  if ((_DWORD)a1 == 1)
  {
    OUTLINED_FUNCTION_60_0(v14, &qword_1ED7A7240);
    v15 = 0;
    v16 = 0;
  }
  else
  {
    sub_1C2CFE100();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    if (v13[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v15 = sub_1C2CFE0B8();
      v16 = v17;
      swift_unknownObjectRelease();
    }
    else
    {
      v15 = 0;
      v16 = 0;
    }
  }
  v18 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v18 + 16) = a5;
  *(_QWORD *)(v18 + 24) = v13;
  if (v16 | v15)
  {
    v20[0] = 0;
    v20[1] = 0;
    v20[2] = v15;
    v20[3] = v16;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C2A3DD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 96) = a4;
  *(_QWORD *)(v5 + 104) = a5;
  return swift_task_switch();
}

uint64_t sub_1C2A3DD54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (qword_1EF786CE8 != -1)
    swift_once();
  v0[14] = qword_1EF7CBEC8;
  OUTLINED_FUNCTION_221();
  v1 = sub_1C2CFDC8C();
  v0[15] = v1;
  if (qword_1EF786D28 != -1)
    swift_once();
  v2 = qword_1EF790648;
  v0[16] = qword_1EF790648;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[17] = v3;
  *v3 = v0;
  v3[1] = sub_1C2A3DE70;
  return sub_1C290AE28((uint64_t)(v0 + 2), 20, v1, 0, v2);
}

uint64_t sub_1C2A3DE70()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 144) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_0();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A3DEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;

  swift_release();
  OUTLINED_FUNCTION_52_15();
  v1 = OUTLINED_FUNCTION_18_25(*(_QWORD *)(v0 + 144), v10, v12, v14, v16, v18, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  OUTLINED_FUNCTION_19_26(v1, v2, v3, v4, v5, v6, v7, v8, v11, v13, v15, v17, v19);
  return OUTLINED_FUNCTION_114_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A3DF10()
{
  uint64_t v0;
  double v1;
  void (*v2)(double);

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_0();
  swift_release();
  v1 = OUTLINED_FUNCTION_43_13();
  v2(v1);
  OUTLINED_FUNCTION_17_27();
  return OUTLINED_FUNCTION_37_19(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static ErrorTemplates.genericErrorLegacy()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3DF78()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1EF786CE8 != -1)
    swift_once();
  v0[3] = qword_1EF7CBEC8;
  OUTLINED_FUNCTION_38_0();
  v0[4] = sub_1C2CFDC8C();
  if (qword_1EF786D28 != -1)
    swift_once();
  v0[5] = qword_1EF790648;
  OUTLINED_FUNCTION_50_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_35_20();
  v0[6] = v1;
  OUTLINED_FUNCTION_75_9(v1);
  OUTLINED_FUNCTION_14_38();
  return sub_1C290AE28(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2A3E068()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_0();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A3E0C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_147();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

void static ErrorTemplates.errorInApp(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A3E110(a1, a2, a3);
}

void sub_1C2A3E110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE v13[40];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_2_6();
  v9 = OUTLINED_FUNCTION_69_5();
  OUTLINED_FUNCTION_30_0(v3, v10, v11, v9);
  sub_1C28D3304(a1, (uint64_t)v13, &qword_1ED7A8760);
  v12 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v12[2] = 0;
  v12[3] = 0;
  sub_1C2921AEC((uint64_t)v13, (uint64_t)(v12 + 4), &qword_1ED7A8760);
  v12[9] = a2;
  v12[10] = a3;
  OUTLINED_FUNCTION_38_0();
  sub_1C2948F68();
  swift_release();
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1C2A3E1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[12] = a5;
  v6[13] = a6;
  v8 = (_QWORD *)swift_task_alloc();
  v6[14] = v8;
  *v8 = v6;
  v8[1] = sub_1C2A3E230;
  return static ErrorTemplates.errorInApp(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t sub_1C2A3E230()
{
  OUTLINED_FUNCTION_142_1();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t static ErrorTemplates.errorInApp(deviceState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3E27C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1C2CFDC8C();
  v3 = OUTLINED_FUNCTION_31_21(v2);
  OUTLINED_FUNCTION_175_0(v3, v4, &qword_1ED7A8760);
  if (*(_QWORD *)(v0 - 16))
  {
    OUTLINED_FUNCTION_0_45();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
    OUTLINED_FUNCTION_5_41();
    OUTLINED_FUNCTION_48_17();
  }
  else
  {
    OUTLINED_FUNCTION_60_0(v5, &qword_1ED7A8760);
  }
  if (qword_1EF786CE8 != -1)
    swift_once();
  OUTLINED_FUNCTION_55_8();
  v6 = qword_1EF786D28;
  OUTLINED_FUNCTION_38_0();
  if (v6 != -1)
    swift_once();
  *(_QWORD *)(v1 + 136) = qword_1EF790648;
  OUTLINED_FUNCTION_50_0();
  v7 = OUTLINED_FUNCTION_35_20();
  v8 = (_QWORD *)OUTLINED_FUNCTION_60_13(v7);
  OUTLINED_FUNCTION_30_22(v8);
  OUTLINED_FUNCTION_14_38();
  return OUTLINED_FUNCTION_7_38(v9, v10, v11, v12, v13);
}

uint64_t sub_1C2A3E3A4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_36();
  if (!v0)
  {
    OUTLINED_FUNCTION_54_17();
    OUTLINED_FUNCTION_32_0();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A3E3E8()
{
  uint64_t (*v0)(void);

  swift_release();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_24(v0);
}

uint64_t sub_1C2A3E410()
{
  uint64_t v0;

  OUTLINED_FUNCTION_76_12();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_147();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

void static ErrorTemplates.appLaunchFailed(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A3E110(a1, a2, a3);
}

uint64_t sub_1C2A3E458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[12] = a5;
  v6[13] = a6;
  v8 = (_QWORD *)swift_task_alloc();
  v6[14] = v8;
  *v8 = v6;
  v8[1] = sub_1C2A3E230;
  return static ErrorTemplates.appLaunchFailed(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ErrorTemplates.appLaunchFailed(deviceState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3E4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1C2CFDC8C();
  v3 = OUTLINED_FUNCTION_31_21(v2);
  OUTLINED_FUNCTION_175_0(v3, v4, &qword_1ED7A8760);
  if (*(_QWORD *)(v0 - 16))
  {
    OUTLINED_FUNCTION_0_45();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
    OUTLINED_FUNCTION_5_41();
    OUTLINED_FUNCTION_48_17();
  }
  else
  {
    OUTLINED_FUNCTION_60_0(v5, &qword_1ED7A8760);
  }
  if (qword_1EF786CE8 != -1)
    swift_once();
  OUTLINED_FUNCTION_55_8();
  v6 = qword_1EF786D28;
  OUTLINED_FUNCTION_38_0();
  if (v6 != -1)
    swift_once();
  *(_QWORD *)(v1 + 136) = qword_1EF790648;
  OUTLINED_FUNCTION_50_0();
  v7 = OUTLINED_FUNCTION_35_20();
  v8 = (_QWORD *)OUTLINED_FUNCTION_60_13(v7);
  OUTLINED_FUNCTION_30_22(v8);
  OUTLINED_FUNCTION_14_38();
  return OUTLINED_FUNCTION_7_38(v9, v10, v11, v12, v13);
}

uint64_t sub_1C2A3E5EC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_36();
  if (!v0)
  {
    OUTLINED_FUNCTION_54_17();
    OUTLINED_FUNCTION_32_0();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A3E630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v10;

  v7[12] = a6;
  v7[13] = a7;
  v10 = (_QWORD *)swift_task_alloc();
  v7[14] = v10;
  *v10 = v7;
  v10[1] = sub_1C2A3E230;
  return static ErrorTemplates.noAppsFound(deviceState:shouldSuggestStoreSearch:)((uint64_t)(v7 + 2), a4, a5);
}

uint64_t static ErrorTemplates.noAppsFound(deviceState:shouldSuggestStoreSearch:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 160) = a3;
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = a2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3E6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1C2CFDC8C();
  v3 = OUTLINED_FUNCTION_31_21(v2);
  OUTLINED_FUNCTION_175_0(v3, v4, &qword_1ED7A8760);
  if (*(_QWORD *)(v0 - 16))
  {
    OUTLINED_FUNCTION_0_45();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
    OUTLINED_FUNCTION_5_41();
    OUTLINED_FUNCTION_48_17();
  }
  else
  {
    OUTLINED_FUNCTION_60_0(v5, &qword_1ED7A8760);
  }
  sub_1C2A3D1B8();
  if (qword_1EF786CE8 != -1)
    swift_once();
  OUTLINED_FUNCTION_55_8();
  v6 = qword_1EF786D28;
  OUTLINED_FUNCTION_38_0();
  if (v6 != -1)
    swift_once();
  *(_QWORD *)(v1 + 136) = qword_1EF790648;
  OUTLINED_FUNCTION_50_0();
  v7 = OUTLINED_FUNCTION_35_20();
  v8 = (_QWORD *)OUTLINED_FUNCTION_60_13(v7);
  OUTLINED_FUNCTION_30_22(v8);
  OUTLINED_FUNCTION_14_38();
  return OUTLINED_FUNCTION_7_38(v9, v10, v11, v12, v13);
}

uint64_t sub_1C2A3E810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[12] = a5;
  v6[13] = a6;
  v8 = (_QWORD *)swift_task_alloc();
  v6[14] = v8;
  *v8 = v6;
  v8[1] = sub_1C2A3E230;
  return static ErrorTemplates.appDoesNotSupportIntent(appDisplayInfo:)((uint64_t)(v6 + 2), a4);
}

uint64_t sub_1C2A3E86C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_143_0();
  v3 = sub_1C2CFD44C();
  if (!__swift_getEnumTagSinglePayload(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A3E91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  v2 = *(_QWORD *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8)
                 + 8);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_86(v3);
  v5 = OUTLINED_FUNCTION_165(v4);
  return sub_1C2A3E810(v5, v6, v7, v8, v9, v2);
}

uint64_t sub_1C2A3E9B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_143_0();
  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A3E9E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = v1 + 32;
  v7 = *(_BYTE *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  v8 = *(_QWORD *)(v1 + 88);
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_86(v10);
  *v11 = v2;
  v11[1] = sub_1C2929AA8;
  return sub_1C2A3E630(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1C2A3EA78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_165(v1);
  return sub_1C2A3D91C(v2, v3, v4, v5, v6);
}

uint64_t static ErrorTemplates.appDoesNotSupportIntent(appDisplayInfo:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  v2[5] = OUTLINED_FUNCTION_7();
  v3 = sub_1C2CFD44C();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A3EB34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v0[5];
  v1 = v0[6];
  v3 = v0[4];
  v0[2] = sub_1C2CFDC8C();
  sub_1C28D3304(v3, v2, &qword_1EF790268);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_1C28B9D6C(v0[5], &qword_1EF790268);
  }
  else
  {
    v5 = v0[7];
    v4 = v0[8];
    v6 = v0[6];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 32))(v4, v0[5], v6);
    sub_1C2CFD434();
    sub_1C2A3D1B8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  if (qword_1EF786CE8 != -1)
    swift_once();
  v7 = v0[2];
  v0[9] = qword_1EF7CBEC8;
  v0[10] = v7;
  v8 = qword_1EF786D28;
  OUTLINED_FUNCTION_38_0();
  if (v8 != -1)
    swift_once();
  v0[11] = qword_1EF790648;
  OUTLINED_FUNCTION_50_0();
  v9 = (_QWORD *)OUTLINED_FUNCTION_35_20();
  v0[12] = v9;
  *v9 = v0;
  v9[1] = sub_1C2A3ECE8;
  OUTLINED_FUNCTION_14_38();
  return sub_1C290AE28(v10, v11, v12, v13, v14);
}

uint64_t sub_1C2A3ECE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_0();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A3ED40()
{
  uint64_t (*v0)(void);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_5(v0);
}

uint64_t sub_1C2A3ED80()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_147();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A3EDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[12] = a5;
  v6[13] = a6;
  v8 = (_QWORD *)swift_task_alloc();
  v6[14] = v8;
  *v8 = v6;
  v8[1] = sub_1C2A3E230;
  return static ErrorTemplates.appNotFoundOnDevice(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ErrorTemplates.appNotFoundOnDevice(deviceState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3EE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1C2CFDC8C();
  v3 = OUTLINED_FUNCTION_31_21(v2);
  OUTLINED_FUNCTION_175_0(v3, v4, &qword_1ED7A8760);
  if (*(_QWORD *)(v0 - 16))
  {
    OUTLINED_FUNCTION_0_45();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
    OUTLINED_FUNCTION_5_41();
    OUTLINED_FUNCTION_48_17();
  }
  else
  {
    OUTLINED_FUNCTION_60_0(v5, &qword_1ED7A8760);
  }
  if (qword_1EF786CE8 != -1)
    swift_once();
  OUTLINED_FUNCTION_55_8();
  v6 = qword_1EF786D28;
  OUTLINED_FUNCTION_38_0();
  if (v6 != -1)
    swift_once();
  *(_QWORD *)(v1 + 136) = qword_1EF790648;
  OUTLINED_FUNCTION_50_0();
  v7 = OUTLINED_FUNCTION_35_20();
  v8 = (_QWORD *)OUTLINED_FUNCTION_60_13(v7);
  OUTLINED_FUNCTION_30_22(v8);
  OUTLINED_FUNCTION_14_38();
  return OUTLINED_FUNCTION_7_38(v9, v10, v11, v12, v13);
}

void static ErrorTemplates.targetDeviceIncompatible(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A3E110(a1, a2, a3);
}

uint64_t sub_1C2A3EF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[12] = a5;
  v6[13] = a6;
  v8 = (_QWORD *)swift_task_alloc();
  v6[14] = v8;
  *v8 = v6;
  v8[1] = sub_1C2A3E230;
  return static ErrorTemplates.targetDeviceIncompatible(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ErrorTemplates.targetDeviceIncompatible(deviceState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3EFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1C2CFDC8C();
  v3 = OUTLINED_FUNCTION_31_21(v2);
  OUTLINED_FUNCTION_175_0(v3, v4, &qword_1ED7A8760);
  if (*(_QWORD *)(v0 - 16))
  {
    OUTLINED_FUNCTION_0_45();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
    OUTLINED_FUNCTION_5_41();
    OUTLINED_FUNCTION_48_17();
  }
  else
  {
    OUTLINED_FUNCTION_60_0(v5, &qword_1ED7A8760);
  }
  if (qword_1EF786CE8 != -1)
    swift_once();
  OUTLINED_FUNCTION_55_8();
  v6 = qword_1EF786D28;
  OUTLINED_FUNCTION_38_0();
  if (v6 != -1)
    swift_once();
  *(_QWORD *)(v1 + 136) = qword_1EF790648;
  OUTLINED_FUNCTION_50_0();
  v7 = OUTLINED_FUNCTION_35_20();
  v8 = (_QWORD *)OUTLINED_FUNCTION_60_13(v7);
  OUTLINED_FUNCTION_30_22(v8);
  OUTLINED_FUNCTION_14_38();
  return OUTLINED_FUNCTION_7_38(v9, v10, v11, v12, v13);
}

uint64_t static ErrorTemplates.pommesTimeout()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A3F124()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  if (qword_1EF786CE8 != -1)
    swift_once();
  v0[3] = qword_1EF7CBEC8;
  v3 = (uint64_t (*)(void))((char *)&dword_1EF790698 + dword_1EF790698);
  OUTLINED_FUNCTION_38_0();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C2A3F1C0;
  return OUTLINED_FUNCTION_54_1(v0[2], 23, v3);
}

uint64_t sub_1C2A3F1C0()
{
  OUTLINED_FUNCTION_143_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A3F1FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A3F224()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_28_2();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_98_1(v1);
  return sub_1C2A3EDD8(v2, v3, v4, v5, v6, v7);
}

uint64_t objectdestroy_7Tm()
{
  OUTLINED_FUNCTION_143_0();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A3F2A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_165(v1);
  return sub_1C2A3DD3C(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2A3F300()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_111_0(v1);
  return OUTLINED_FUNCTION_101(v2, v3, v4, v5);
}

uint64_t sub_1C2A3F34C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_28_2();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_98_1(v1);
  return sub_1C2A3E1D4(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2A3F3A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_28_2();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_98_1(v1);
  return sub_1C2A3E458(v2, v3, v4, v5, v6, v7);
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_143_0();
  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A3F434()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_28_2();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_98_1(v1);
  return sub_1C2A3EF80(v2, v3, v4, v5, v6, v7);
}

ValueMetadata *type metadata accessor for ErrorTemplates()
{
  return &type metadata for ErrorTemplates;
}

uint64_t sub_1C2A3F498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1C28BFFFC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v14 = *v4;
    *v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790758);
    sub_1C2CFE7CC();
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v14 + 56);
    v11 = type metadata accessor for Input(0);
    sub_1C2992AB4(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v8, a3);
    sub_1C2CFE7E4();
    *v4 = v14;
    swift_bridgeObjectRelease();
    return __swift_storeEnumTagSinglePayload(a3, 0, 1, v11);
  }
  else
  {
    v13 = type metadata accessor for Input(0);
    return __swift_storeEnumTagSinglePayload(a3, 1, 1, v13);
  }
}

uint64_t sub_1C2A3F5D8()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_46_11();
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_56_12();
  if ((v1 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_51_15();
  OUTLINED_FUNCTION_49_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790730);
  OUTLINED_FUNCTION_53_12();
  OUTLINED_FUNCTION_47_16();
  v3 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79F8F0);
  sub_1C2CFE7E4();
  *v0 = v5;
  swift_bridgeObjectRelease();
  return v3;
}

double sub_1C2A3F68C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  double result;
  uint64_t v9;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1C28C0054(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    *v3 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790770);
    sub_1C2CFE7CC();
    sub_1C29BA780(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_1C28E9790((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1C2CFE7E4();
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_1C2A3F7A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v8;
  char v9;
  double result;
  uint64_t v11;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1C28BFFFC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_51_15();
    OUTLINED_FUNCTION_45_15();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7288);
    sub_1C2CFE7CC();
    OUTLINED_FUNCTION_47_16();
    sub_1C28E9790((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1C2CFE7E4();
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1C2A3F8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1C28BFFFC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v14 = *v4;
    *v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790728);
    sub_1C2CFE7CC();
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v14 + 56);
    v11 = sub_1C2CFBC58();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v8, v11);
    sub_1C2CFE7E4();
    *v4 = v14;
    swift_bridgeObjectRelease();
    return __swift_storeEnumTagSinglePayload(a3, 0, 1, v11);
  }
  else
  {
    v13 = sub_1C2CFBC58();
    return __swift_storeEnumTagSinglePayload(a3, 1, 1, v13);
  }
}

double sub_1C2A3FA00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  _QWORD *v10;
  unint64_t v14;
  char v15;
  double result;
  uint64_t v17;

  v10 = v6;
  swift_bridgeObjectRetain();
  v14 = sub_1C28BFFFC(a1, a2);
  LOBYTE(a2) = v15;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_51_15();
    OUTLINED_FUNCTION_45_15();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_1C2CFE7CC();
    OUTLINED_FUNCTION_47_16();
    a4(*(_QWORD *)(v17 + 56) + 40 * v14, a6);
    __swift_instantiateConcreteTypeFromMangledName(a5);
    sub_1C2CFE7E4();
    *v10 = v17;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a6 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C2A3FB38()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_46_11();
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_56_12();
  if ((v1 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_51_15();
  OUTLINED_FUNCTION_49_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790760);
  OUTLINED_FUNCTION_53_12();
  OUTLINED_FUNCTION_47_16();
  v3 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v2);
  sub_1C2CFE7E4();
  *v0 = v5;
  swift_bridgeObjectRelease();
  return v3;
}

double sub_1C2A3FBEC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v6;
  unint64_t v10;
  char v11;
  _OWORD *v12;
  __int128 v13;
  double result;
  uint64_t v15;

  v6 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_1C28BFFFC(a1, a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_51_15();
    OUTLINED_FUNCTION_45_15();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_1C2CFE7CC();
    OUTLINED_FUNCTION_47_16();
    v12 = (_OWORD *)(*(_QWORD *)(v15 + 56) + 48 * v10);
    v13 = v12[1];
    *a4 = *v12;
    a4[1] = v13;
    a4[2] = v12[2];
    sub_1C2CFE7E4();
    *v6 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    a4[1] = 0u;
    a4[2] = 0u;
    *a4 = 0u;
  }
  return result;
}

void OUTLINED_FUNCTION_0_45()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;

  sub_1C28B99EC(v1, v0 - 80);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 80), *(_QWORD *)(v2 + 40));
  sub_1C2A19FD8();
}

void OUTLINED_FUNCTION_5_41()
{
  sub_1C2A3D1B8();
}

uint64_t OUTLINED_FUNCTION_6_36()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_7_38(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C290AE28(a1, a2, a3, a4, a5);
}

void OUTLINED_FUNCTION_17_27()
{
  void *v0;
  char v1;

  sub_1C290D288(v0, 0, 0, 0, 0, 0, 0, 0, 0, v1);
}

uint64_t OUTLINED_FUNCTION_18_25@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, BOOL a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t *);

  v26 = *(uint64_t (**)(uint64_t *))(v19 + 96);
  a7 = v16;
  a8 = v17;
  a9 = v20;
  a10 = v21;
  a11 = v22;
  a12 = v23;
  a13 = v24;
  a14 = v25;
  a15 = v18;
  a16 = a1 != 0;
  return v26(&a7);
}

void OUTLINED_FUNCTION_19_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  sub_1C290D288(a13, a12, v15, v16, v17, v18, v19, v20, v13, v14);
}

uint64_t OUTLINED_FUNCTION_21_27()
{
  return 0;
}

double OUTLINED_FUNCTION_23_31(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(unint64_t, uint64_t), uint64_t *a5, uint64_t a6, ...)
{
  uint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  return sub_1C2A3FA00(v7, v6, a3, a4, a5, (uint64_t)va);
}

void OUTLINED_FUNCTION_24_26(uint64_t a1)
{
  uint64_t *v1;

  sub_1C28B9D6C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_30_22(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 104);
}

uint64_t OUTLINED_FUNCTION_31_21(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = result;
  return result;
}

void OUTLINED_FUNCTION_45_15()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_46_11()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_47_16()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_49_10()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_51_15()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_54_17()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_55_8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[12];
  v1[15] = v0;
  v1[16] = v2;
}

uint64_t OUTLINED_FUNCTION_56_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_60_13(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = result;
  return result;
}

unint64_t OUTLINED_FUNCTION_61_9()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C28BFFFC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_75_9(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_76_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A3FF7C()
{
  uint64_t DynamicType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  char v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  id v20;

  swift_getErrorValue();
  DynamicType = swift_getDynamicType();
  swift_getErrorValue();
  if (DynamicType != swift_getDynamicType())
    goto LABEL_19;
  swift_getErrorValue();
  v1 = sub_1C2CFEA78();
  v3 = v2;
  swift_getErrorValue();
  if (v1 == sub_1C2CFEA78() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_42_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = 0;
    if ((v6 & 1) == 0)
      return v7 & 1;
  }
  v8 = (void *)sub_1C2CFBAF0();
  v9 = (void *)sub_1C2CFBAF0();
  v10 = objc_msgSend(v8, sel_domain);
  v11 = sub_1C2CFDD58();
  v13 = v12;

  v14 = objc_msgSend(v9, sel_domain);
  v15 = sub_1C2CFDD58();
  v17 = v16;

  if (v11 == v15 && v13 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v19 = OUTLINED_FUNCTION_42_0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
      goto LABEL_18;
  }
  v20 = objc_msgSend(v8, sel_code);
  if (v20 != objc_msgSend(v9, sel_code))
  {
LABEL_18:

LABEL_19:
    v7 = 0;
    return v7 & 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  OUTLINED_FUNCTION_0_46();
  OUTLINED_FUNCTION_0_46();
  v7 = 1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t OUTLINED_FUNCTION_0_46()
{
  return sub_1C2CFE7C0();
}

uint64_t ErrorWithCodeConcept.conceptType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *ErrorWithCodeConcept.__allocating_init(app:errorCode:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[7] = 0xD000000000000013;
  result[8] = 0x80000001C2D2EEF0;
  result[6] = a5;
  return result;
}

_QWORD *ErrorWithCodeConcept.init(app:errorCode:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[7] = 0xD000000000000013;
  v5[8] = 0x80000001C2D2EEF0;
  v5[6] = a5;
  return v5;
}

uint64_t ErrorWithCodeConcept.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ErrorWithCodeConcept.__deallocating_deinit()
{
  ErrorWithCodeConcept.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A4034C()
{
  return ErrorWithCodeConcept.conceptType.getter();
}

uint64_t type metadata accessor for ErrorWithCodeConcept()
{
  return objc_opt_self();
}

uint64_t method lookup function for ErrorWithCodeConcept()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ErrorWithCodeConcept.__allocating_init(app:errorCode:intent:intentResponse:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ErrorWithCodeConcept.encode(protoJsonCoding:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

BOOL static InterruptionPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t InterruptionPolicy.hash(into:)()
{
  return sub_1C2CFEAC0();
}

uint64_t InterruptionPolicy.hashValue.getter()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  return sub_1C2CFEAD8();
}

uint64_t ExecutionContext.init(outputPublisher:aceServiceInvoker:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C28B99EC(a1, a3);
  return sub_1C28B99EC(a2, a3 + 40);
}

unint64_t sub_1C2A4046C()
{
  unint64_t result;

  result = qword_1EF790858;
  if (!qword_1EF790858)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for InterruptionPolicy, &type metadata for InterruptionPolicy);
    atomic_store(result, (unint64_t *)&qword_1EF790858);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InterruptionPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C2A404F4 + 4 * byte_1C2D091A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C2A40528 + 4 * byte_1C2D091A0[v4]))();
}

uint64_t sub_1C2A40528(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A40530(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A40538);
  return result;
}

uint64_t sub_1C2A40544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A4054CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C2A40550(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A40558(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterruptionPolicy()
{
  return &type metadata for InterruptionPolicy;
}

ValueMetadata *type metadata accessor for ExecutionContext()
{
  return &type metadata for ExecutionContext;
}

uint64_t dispatch thunk of Executable.interruptionPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Executable.withSideEffect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Executable.execute(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28C33A0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of Executable.cancel(error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t SiriEnvironment.aceServiceContext.getter()
{
  uint64_t v0;

  type metadata accessor for AceServiceContextProvider();
  sub_1C28C3364(&qword_1EF790868, v0, (uint64_t (*)(uint64_t))type metadata accessor for AceServiceContextProvider, (uint64_t)&protocol conformance descriptor for AceServiceContextProvider);
  return sub_1C2CFCF90();
}

uint64_t type metadata accessor for AceServiceContextProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C2A4067C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_21_0();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1C2A406A8(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_21_0();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_1C2A406E0())()
{
  OUTLINED_FUNCTION_28_1();
  return j__swift_endAccess;
}

uint64_t AceServiceContextProvider.__allocating_init(storage:)()
{
  uint64_t result;

  swift_release();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 1;
  return result;
}

uint64_t AceServiceContextProvider.init(storage:)()
{
  uint64_t v0;

  swift_release();
  *(_BYTE *)(v0 + 16) = 1;
  return v0;
}

uint64_t AceServiceContextProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AceServiceContextProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A4077C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AceServiceContextProvider();
  result = sub_1C2CFD9F8();
  *a1 = result;
  return result;
}

void sub_1C2A407B4(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  char v4;

  v3 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = a1;
  v4 = *(_BYTE *)(v2 + 24);
  *(_BYTE *)(v2 + 24) = a2;
  sub_1C2A40AEC(v3, v4);
}

uint64_t sub_1C2A407D0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790878);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2CFD350();
  sub_1C2CFCFC0();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2A40874()
{
  uint64_t v0;
  void *v1;
  char v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  sub_1C2A40AB8(v1, v2);
  sub_1C2A408C4((uint64_t)v1, v2);
  sub_1C2A40AEC(v1, v2);
}

void sub_1C2A408C4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

id sub_1C2A40908(uint64_t a1)
{
  uint64_t v1;
  id v2;

  *(_QWORD *)v1 = a1;
  *(_BYTE *)(v1 + 8) = 1;
  OUTLINED_FUNCTION_98();
  return v2;
}

id sub_1C2A40934(uint64_t a1)
{
  uint64_t v1;
  id v2;

  *(_QWORD *)v1 = a1;
  *(_BYTE *)(v1 + 8) = 0;
  OUTLINED_FUNCTION_98();
  return v2;
}

#error "1C2A40A78: call analysis failed (funcsize=81)"

id sub_1C2A40AB8(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C2A40AEC(id a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

void ExecuteOnRemoteFlow.__allocating_init(device:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = swift_allocObject();
  ExecuteOnRemoteFlow.init(device:outputPublisher:)(v3, a2);
  OUTLINED_FUNCTION_1_0();
}

_QWORD *ExecuteOnRemoteFlow.init(device:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;

  v3 = v2;
  OUTLINED_FUNCTION_49_11();
  v5 = (uint64_t)v2 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  v6 = OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_30_0(v5, v7, v8, v6);
  v9 = OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow__multiUserState;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790878);
  OUTLINED_FUNCTION_27();
  *(_QWORD *)((char *)v3 + v9) = OUTLINED_FUNCTION_18_26();
  sub_1C28B9A48(a2, (uint64_t)v3 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_outputPublisher);
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)&v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v10 = qword_1ED7A4228;
  v3[7] = OUTLINED_FUNCTION_124_5();
  v3[8] = &protocol witness table for RefreshableDeviceState;
  v3[4] = v10;
  v11 = qword_1ED7A4220;
  OUTLINED_FUNCTION_38_0();
  if (v11 != -1)
    swift_once();
  sub_1C28C73A4((uint64_t)&v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v12 = qword_1ED7AA050;
  v3[12] = OUTLINED_FUNCTION_123_3();
  v3[13] = &protocol witness table for RefreshableAceServiceInvoker;
  v3[9] = v12;
  v13 = qword_1EF786CE8;
  OUTLINED_FUNCTION_38_0();
  if (v13 != -1)
    swift_once();
  v14 = qword_1EF7CBEC8;
  v15 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor);
  v15[3] = OUTLINED_FUNCTION_25_9();
  v15[4] = (uint64_t)&off_1E7C77EF8;
  *v15 = v14;
  v16 = OUTLINED_FUNCTION_11_33((uint64_t)v3 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag);
  OUTLINED_FUNCTION_38_0();
  v17 = sub_1C2CFD77C();
  v20 = v16;
  v21 = &protocol witness table for ReferenceResolutionClient;
  *(_QWORD *)&v19 = v17;
  __swift_destroy_boxed_opaque_existential_1(a2);
  sub_1C28B99EC(&v19, (uint64_t)v3 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_referenceResolutionClient);
  *((_BYTE *)v3 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_shouldFallbackOnAWDL) = 1;
  return v3;
}

void ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  OUTLINED_FUNCTION_134_0();
  ExecuteOnRemoteFlow.init(inputToExecute:device:outputPublisher:)(a1, v5, a3);
  OUTLINED_FUNCTION_18();
}

void ExecuteOnRemoteFlow.init(inputToExecute:device:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];

  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_10();
  v11 = v10 - v9;
  OUTLINED_FUNCTION_49_11();
  v12 = (uint64_t)v3 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  v13 = OUTLINED_FUNCTION_31_3();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  v14 = OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow__multiUserState;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790878);
  OUTLINED_FUNCTION_27();
  *(_QWORD *)((char *)v3 + v14) = OUTLINED_FUNCTION_18_26();
  OUTLINED_FUNCTION_104_5(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_outputPublisher);
  sub_1C28DD638(a1, v11, type metadata accessor for Input);
  OUTLINED_FUNCTION_93_5();
  __swift_storeEnumTagSinglePayload(v15, v16, v17, v13);
  OUTLINED_FUNCTION_28_1();
  sub_1C2A43DF0(v11, v12);
  OUTLINED_FUNCTION_119_5();
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v26);
  OUTLINED_FUNCTION_92_10();
  v18 = qword_1ED7A4228;
  v4[7] = OUTLINED_FUNCTION_124_5();
  v4[8] = &protocol witness table for RefreshableDeviceState;
  v4[4] = v18;
  v19 = qword_1ED7A4220;
  OUTLINED_FUNCTION_38_0();
  if (v19 != -1)
    swift_once();
  sub_1C28C73A4((uint64_t)v26);
  OUTLINED_FUNCTION_92_10();
  v20 = qword_1ED7AA050;
  v4[12] = OUTLINED_FUNCTION_123_3();
  v4[13] = &protocol witness table for RefreshableAceServiceInvoker;
  v4[9] = v20;
  v21 = qword_1EF786CE8;
  OUTLINED_FUNCTION_38_0();
  if (v21 != -1)
    swift_once();
  v22 = qword_1EF7CBEC8;
  v23 = (_QWORD *)((char *)v4 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor);
  v23[3] = OUTLINED_FUNCTION_25_9();
  v23[4] = (uint64_t)&off_1E7C77EF8;
  *v23 = v22;
  v24 = OUTLINED_FUNCTION_11_33((uint64_t)v4 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag);
  OUTLINED_FUNCTION_38_0();
  v25 = sub_1C2CFD77C();
  v26[3] = v24;
  v26[4] = &protocol witness table for ReferenceResolutionClient;
  v26[0] = v25;
  __swift_destroy_boxed_opaque_existential_1(a3);
  sub_1C28C9F68(a1, type metadata accessor for Input);
  OUTLINED_FUNCTION_63_10(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_referenceResolutionClient);
  OUTLINED_FUNCTION_96_6(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_shouldFallbackOnAWDL);
  OUTLINED_FUNCTION_1();
}

void ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:shouldFallbackOnAWDL:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  OUTLINED_FUNCTION_134_0();
  ExecuteOnRemoteFlow.init(inputToExecute:device:shouldFallbackOnAWDL:outputPublisher:)(a1, v7, a3, a4);
  OUTLINED_FUNCTION_18();
}

void ExecuteOnRemoteFlow.init(inputToExecute:device:shouldFallbackOnAWDL:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];

  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_10();
  v12 = v11 - v10;
  OUTLINED_FUNCTION_49_11();
  v13 = (uint64_t)v4 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  v14 = OUTLINED_FUNCTION_31_3();
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
  v15 = OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow__multiUserState;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790878);
  OUTLINED_FUNCTION_27();
  *(_QWORD *)((char *)v4 + v15) = OUTLINED_FUNCTION_18_26();
  sub_1C28B9A48(a4, (uint64_t)v4 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_outputPublisher);
  sub_1C28DD638(a1, v12, type metadata accessor for Input);
  OUTLINED_FUNCTION_93_5();
  __swift_storeEnumTagSinglePayload(v16, v17, v18, v14);
  OUTLINED_FUNCTION_28_1();
  v19 = OUTLINED_FUNCTION_113_3();
  sub_1C2A43DF0(v19, v20);
  OUTLINED_FUNCTION_119_5();
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v29);
  OUTLINED_FUNCTION_92_10();
  v21 = qword_1ED7A4228;
  v5[7] = OUTLINED_FUNCTION_124_5();
  v5[8] = &protocol witness table for RefreshableDeviceState;
  v5[4] = v21;
  v22 = qword_1ED7A4220;
  OUTLINED_FUNCTION_38_0();
  if (v22 != -1)
    swift_once();
  sub_1C28C73A4((uint64_t)v29);
  OUTLINED_FUNCTION_92_10();
  v23 = qword_1ED7AA050;
  v5[12] = OUTLINED_FUNCTION_123_3();
  v5[13] = &protocol witness table for RefreshableAceServiceInvoker;
  v5[9] = v23;
  v24 = qword_1EF786CE8;
  OUTLINED_FUNCTION_38_0();
  if (v24 != -1)
    swift_once();
  v25 = qword_1EF7CBEC8;
  v26 = (_QWORD *)((char *)v5 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor);
  v26[3] = OUTLINED_FUNCTION_25_9();
  v26[4] = (uint64_t)&off_1E7C77EF8;
  *v26 = v25;
  v27 = OUTLINED_FUNCTION_11_33((uint64_t)v5 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag);
  OUTLINED_FUNCTION_38_0();
  v28 = sub_1C2CFD77C();
  v29[3] = v27;
  v29[4] = &protocol witness table for ReferenceResolutionClient;
  v29[0] = v28;
  __swift_destroy_boxed_opaque_existential_1(a4);
  sub_1C28C9F68(a1, type metadata accessor for Input);
  OUTLINED_FUNCTION_63_10(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_referenceResolutionClient);
  OUTLINED_FUNCTION_96_6(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_shouldFallbackOnAWDL);
  OUTLINED_FUNCTION_1();
}

uint64_t ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:outputPublisher:aceService:deviceState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;

  v9 = OUTLINED_FUNCTION_134_0();
  ExecuteOnRemoteFlow.init(inputToExecute:device:outputPublisher:aceService:deviceState:)(a1, v10, a3, a4, a5);
  return v9;
}

void ExecuteOnRemoteFlow.init(inputToExecute:device:outputPublisher:aceService:deviceState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_10();
  v15 = v14 - v13;
  OUTLINED_FUNCTION_49_11();
  v16 = v5 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  v17 = OUTLINED_FUNCTION_31_3();
  __swift_storeEnumTagSinglePayload(v16, 1, 1, v17);
  v18 = OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow__multiUserState;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790878);
  OUTLINED_FUNCTION_27();
  *(_QWORD *)(v5 + v18) = OUTLINED_FUNCTION_18_26();
  OUTLINED_FUNCTION_104_5(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_outputPublisher);
  sub_1C28DD638(a1, v15, type metadata accessor for Input);
  OUTLINED_FUNCTION_93_5();
  __swift_storeEnumTagSinglePayload(v19, v20, v21, v17);
  OUTLINED_FUNCTION_28_1();
  v22 = OUTLINED_FUNCTION_111_6();
  sub_1C2A43DF0(v22, v23);
  OUTLINED_FUNCTION_119_5();
  sub_1C28B9A48(a4, v5 + 72);
  sub_1C28B9A48(a5, v5 + 32);
  if (qword_1EF786CE8 != -1)
    swift_once();
  v24 = qword_1EF7CBEC8;
  v25 = (uint64_t *)(v6 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor);
  v25[3] = OUTLINED_FUNCTION_25_9();
  v25[4] = (uint64_t)&off_1E7C77EF8;
  *v25 = v24;
  OUTLINED_FUNCTION_11_33(v6 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag);
  OUTLINED_FUNCTION_38_0();
  sub_1C2CFD77C();
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  sub_1C28C9F68(a1, type metadata accessor for Input);
  OUTLINED_FUNCTION_63_10(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_referenceResolutionClient);
  OUTLINED_FUNCTION_96_6(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_shouldFallbackOnAWDL);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A41528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_10();
  v5 = v4 - v3;
  v6 = *(unsigned __int8 *)(v0 + 24);
  if (v6 != 2 && (v6 != 4 || *(_QWORD *)(v0 + 16)))
    return 0;
  v8 = OUTLINED_FUNCTION_149_1();
  sub_1C28DD638(v8, v9, v10);
  OUTLINED_FUNCTION_31_3();
  v7 = 1;
  OUTLINED_FUNCTION_93_5();
  __swift_storeEnumTagSinglePayload(v11, v12, v13, v14);
  v15 = v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  OUTLINED_FUNCTION_28_1();
  sub_1C2A43DF0(v5, v15);
  swift_endAccess();
  return v7;
}

uint64_t sub_1C2A415F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = v1;
  v2[17] = type metadata accessor for ExecuteOnRemotePayload();
  v2[18] = OUTLINED_FUNCTION_1_3();
  sub_1C2CFD5E4();
  v2[19] = OUTLINED_FUNCTION_1_3();
  v3 = sub_1C2CFD614();
  v2[20] = v3;
  v2[21] = *(_QWORD *)(v3 - 8);
  v2[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C8);
  v2[23] = OUTLINED_FUNCTION_1_3();
  v2[24] = OUTLINED_FUNCTION_31_3();
  v2[25] = OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A41694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  os_log_type_t v23;
  _WORD *v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  _QWORD *v50;

  v1 = *(_QWORD *)(v0 + 184);
  OUTLINED_FUNCTION_21_0();
  v2 = OUTLINED_FUNCTION_149_1();
  sub_1C28C3750(v2, v3, v4);
  if (OUTLINED_FUNCTION_107_7(v1) == 1)
  {
    sub_1C28BB37C(*(_QWORD *)(v0 + 184), &qword_1EF7880C8);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED7AA1B0);
    v6 = OUTLINED_FUNCTION_104();
    v7 = sub_1C2CFE2B0();
    if (OUTLINED_FUNCTION_86_1(v6))
    {
      v8 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v8);
      OUTLINED_FUNCTION_87(&dword_1C28B6000, v6, v7, "execute() called with no input to execute? If you are pushing this flow from an existing flow, you must provide an initialInput. If this flow was returned as a main flow from makeFlowFor, something has gone wrong and you should file a radar.");
      OUTLINED_FUNCTION_11_0();
    }

    sub_1C2A407B4(1, 4);
    goto LABEL_7;
  }
  v11 = *(_QWORD *)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 160);
  v12 = *(NSObject **)(v0 + 128);
  sub_1C2992AB4(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 200));
  sub_1C2A407D0();
  if (__swift_getEnumTagSinglePayload(v11, 1, v10) == 1)
  {
    sub_1C28C9F68(*(_QWORD *)(v0 + 152), (uint64_t (*)(_QWORD))off_1E7C6C270);
  }
  else
  {
    v12 = *(NSObject **)(v0 + 176);
    (*(void (**)(NSObject *, _QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 32))(v12, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
    v13 = sub_1C2CFD608();
    if (v14)
    {
      v15 = v13;
      v16 = v14;
      v17 = *(_QWORD *)(v0 + 128);
      v18 = *(unsigned __int8 *)(v17 + 24);
      if (v18 == 2 || v18 == 4 && !*(_QWORD *)(v17 + 16))
      {
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v17 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_referenceResolutionClient), *(_QWORD *)(v17 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_referenceResolutionClient + 24));
        v27 = OUTLINED_FUNCTION_113_3();
        v29 = v28(v27);
        v31 = v30;
        *(_QWORD *)(v0 + 208) = v29;
        *(_QWORD *)(v0 + 216) = v30;
        v32 = *(_QWORD *)(v0 + 136);
        v33 = *(_QWORD *)(v0 + 144);
        v34 = *(_QWORD *)(v0 + 128);
        sub_1C28DD638(*(_QWORD *)(v0 + 200), v33, type metadata accessor for Input);
        v35 = (uint64_t *)(v33 + *(int *)(v32 + 20));
        *v35 = v29;
        v35[1] = v31;
        sub_1C293DA88(v29, v31);
        type metadata accessor for ExecuteOnRemoteFlow();
        sub_1C28C3364(&qword_1EF790898, 255, (uint64_t (*)(uint64_t))type metadata accessor for ExecuteOnRemoteFlow, (uint64_t)&protocol conformance descriptor for ExecuteOnRemoteFlow);
        OUTLINED_FUNCTION_103_6();
        sub_1C2CFCFFC();
        v36 = sub_1C2CFCF24();
        OUTLINED_FUNCTION_36_0();
        v37 = ExecuteOnRemotePayload.makeExecuteOnRemoteRequest(targetDeviceId:currentRequest:device:)(v15, v16, v36, (_QWORD *)(v34 + 32));
        *(_QWORD *)(v0 + 224) = v37;
        swift_release();
        swift_bridgeObjectRelease();
        if (qword_1ED7AA040 != -1)
          swift_once();
        v38 = OUTLINED_FUNCTION_118();
        v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1ED7AA1B0);
        *(_QWORD *)(v0 + 232) = v39;
        OUTLINED_FUNCTION_38_0();
        v40 = sub_1C2CFD86C();
        v41 = sub_1C2CFE2C8();
        v42 = OUTLINED_FUNCTION_10_1(v41);
        v43 = *(_QWORD *)(v0 + 128);
        if (v42)
        {
          v44 = (uint8_t *)OUTLINED_FUNCTION_6_0();
          *(_DWORD *)v44 = 67109120;
          *(_DWORD *)(v0 + 76) = *(unsigned __int8 *)(v43
                                                    + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_shouldFallbackOnAWDL);
          sub_1C2CFE4D8();
          swift_release();
          _os_log_impl(&dword_1C28B6000, v40, (os_log_type_t)v39, "ExecuteOnRemoteFlow setting SiriEnvironment shouldFallbacktoAWDL to %{BOOL}d", v44, 8u);
          OUTLINED_FUNCTION_11_0();
        }
        swift_release();

        v45 = *(_QWORD *)(v0 + 128);
        OUTLINED_FUNCTION_103_6();
        sub_1C2CFCFFC();
        type metadata accessor for AceServiceContextProvider();
        sub_1C28C3364(&qword_1EF790868, v46, (uint64_t (*)(uint64_t))type metadata accessor for AceServiceContextProvider, (uint64_t)&protocol conformance descriptor for AceServiceContextProvider);
        v47 = sub_1C2CFCF90();
        OUTLINED_FUNCTION_36_0();
        v48 = *(_BYTE *)(v45 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_shouldFallbackOnAWDL);
        OUTLINED_FUNCTION_21_0();
        *(_BYTE *)(v47 + 16) = v48;
        swift_release();
        sub_1C2CFD350();
        v49 = v37;
        v50 = (_QWORD *)OUTLINED_FUNCTION_78();
        *(_QWORD *)(v0 + 240) = v50;
        *v50 = v0;
        v50[1] = sub_1C2A41C40;
        OUTLINED_FUNCTION_32_4();
        __asm { BR              X2 }
      }
      v19 = *(_QWORD *)(v0 + 200);
      swift_bridgeObjectRelease();
      v20 = OUTLINED_FUNCTION_103_6();
      v21(v20);
      sub_1C28C9F68(v19, type metadata accessor for Input);
LABEL_7:
      static ExecuteResponse.complete()();
      OUTLINED_FUNCTION_10_42();
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_32_4();
      __asm { BR              X0 }
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v22 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_104();
  v23 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_86_1(v12))
  {
    v24 = (_WORD *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_91(v24);
    OUTLINED_FUNCTION_87(&dword_1C28B6000, v12, v23, "Could not build ExecuteOnRemoteRequest: multiUserContext.handoffTargetDeviceID is nil");
    OUTLINED_FUNCTION_11_0();
  }

  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v25;
  OUTLINED_FUNCTION_76_13(v25, (uint64_t)sub_1C2A425E4);
  OUTLINED_FUNCTION_32_4();
  return sub_1C2A42A60();
}

uint64_t sub_1C2A41C40(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 248) = a1;
  *(_BYTE *)(v3 + 73) = a2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A41C94()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  id v3;
  os_log_type_t v4;
  void *v5;
  BOOL v6;
  void *v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  int v14;
  NSObject *v15;
  id v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  NSObject *v22;
  uint64_t v23;
  _WORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  _WORD *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD *v78;
  void *v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  int v108;
  NSObject *v109;
  os_log_type_t v110;
  _BOOL4 v111;
  void *v112;
  uint8_t *v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  _QWORD *v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  id v152;
  uint64_t v153;

  v1 = *(void **)(v0 + 248);
  if ((*(_BYTE *)(v0 + 73) & 1) == 0)
  {
    v2 = *(NSObject **)(v0 + 232);
    v3 = v1;
    sub_1C2CFD86C();
    v4 = OUTLINED_FUNCTION_30();
    v5 = (void *)v4;
    v6 = os_log_type_enabled(v2, v4);
    v7 = *(void **)(v0 + 248);
    if (v6)
    {
      v8 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v153 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v8 = 136315138;
      v9 = objc_msgSend(v3, sel_description);
      v10 = sub_1C2CFDD58();
      v12 = v11;

      OUTLINED_FUNCTION_67_8();
      *(_QWORD *)(v0 + 88) = sub_1C28BB120(v10, v12, &v153);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      sub_1C29E6D18(v7);
      OUTLINED_FUNCTION_67_8();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v2, (os_log_type_t)v5, "ExecuteOnRemoteFlow: Got response from SAExecuteOnRemoteRequest: %s", v8);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }
    sub_1C29E6D18(*(id *)(v0 + 248));
    OUTLINED_FUNCTION_67_8();

    v151 = v3;
    if (objc_msgSend(v3, sel_needsUserInput))
    {
      v22 = sub_1C2CFD86C();
      v23 = sub_1C2CFE2A4();
      if (OUTLINED_FUNCTION_86_1(v22))
      {
        v24 = (_WORD *)OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_91(v24);
        OUTLINED_FUNCTION_87(&dword_1C28B6000, v22, (os_log_type_t)v23, "ExecuteOnRemoteFlow: remote request is waiting on user input. Will return .ongoing(requireInput: true)");
        OUTLINED_FUNCTION_11_0();
      }
      OUTLINED_FUNCTION_20_34();
      OUTLINED_FUNCTION_120_5(v25, v26, v27, v28, v29, v30, v31, v32, v121, v127, v133, v140, v146, v3);
      sub_1C2A407B4(v23, 2);

      v33 = OUTLINED_FUNCTION_32_27();
      OUTLINED_FUNCTION_90_5(v33, (uint64_t (*)(_QWORD))type metadata accessor for ExecuteOnRemotePayload);
      v42 = OUTLINED_FUNCTION_78_8(v34, v35, v36, v37, v38, v39, v40, v41, v122, v128, v134);
      OUTLINED_FUNCTION_115_3(v42, type metadata accessor for Input, v43, v44, v45, v46, v47, v48, v123, v129, v135, v141, v147);
      static ExecuteResponse.ongoing(requireInput:)(1, v142);
    }
    else
    {
      v49 = objc_msgSend(v3, sel_needsServerExecution);
      v50 = sub_1C2CFD86C();
      v51 = sub_1C2CFE2A4();
      v52 = os_log_type_enabled(v50, v51);
      if (v49)
      {
        if (v52)
        {
          v53 = (_WORD *)OUTLINED_FUNCTION_6_0();
          OUTLINED_FUNCTION_91(v53);
          OUTLINED_FUNCTION_87(&dword_1C28B6000, v50, v51, "ExecuteOnRemoteFlow: remote request redirected to the server. Will return .unhandled(reason: .needsServerExecution)");
          OUTLINED_FUNCTION_11_0();
        }
        v54 = *(void **)(v0 + 224);
        v55 = *(_QWORD *)(v0 + 168);
        v143 = *(_QWORD *)(v0 + 176);
        v148 = *(_QWORD *)(v0 + 200);
        v136 = *(_QWORD *)(v0 + 160);
        v56 = *(_QWORD *)(v0 + 120);

        OUTLINED_FUNCTION_120_5(v57, v58, v59, v60, v61, v62, v63, v64, v121, v127, v136, v143, v148, v151);
        OUTLINED_FUNCTION_128_4();

        v65 = OUTLINED_FUNCTION_32_27();
        OUTLINED_FUNCTION_90_5(v65, (uint64_t (*)(_QWORD))type metadata accessor for ExecuteOnRemotePayload);
        v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v144, v137);
        OUTLINED_FUNCTION_115_3(v66, type metadata accessor for Input, v67, v68, v69, v70, v71, v72, v124, v130, v137, v144, v149);
        v73 = type metadata accessor for ExecuteResponse(0);
        v74 = v56 + *(int *)(v73 + 36);
        v75 = type metadata accessor for PluginAction();
        OUTLINED_FUNCTION_30_0(v74, v76, v77, v75);
        *(_BYTE *)v56 = 3;
        *(_QWORD *)(v56 + 8) = 0;
        *(_QWORD *)(v56 + 24) = 0;
        *(_BYTE *)(v56 + 16) = 0;
        *(_WORD *)(v56 + 32) = 256;
        *(_BYTE *)(v56 + 34) = 0;
        v78 = (_OWORD *)(v56 + *(int *)(v73 + 40));
        *v78 = 0u;
        v78[1] = 0u;
      }
      else
      {
        if (v52)
        {
          v80 = (uint8_t *)OUTLINED_FUNCTION_6_0();
          *(_WORD *)v80 = 0;
          _os_log_impl(&dword_1C28B6000, v50, v51, "ExecuteOnRemoteFlow: remote request is not waiting on user input. Will return .complete", v80, 2u);
          OUTLINED_FUNCTION_11_0();
        }
        OUTLINED_FUNCTION_20_34();
        OUTLINED_FUNCTION_120_5(v81, v82, v83, v84, v85, v86, v87, v88, v121, v127, v133, v140, v146, v3);
        OUTLINED_FUNCTION_128_4();

        v89 = OUTLINED_FUNCTION_32_27();
        OUTLINED_FUNCTION_90_5(v89, (uint64_t (*)(_QWORD))type metadata accessor for ExecuteOnRemotePayload);
        v98 = OUTLINED_FUNCTION_78_8(v90, v91, v92, v93, v94, v95, v96, v97, v125, v131, v138);
        OUTLINED_FUNCTION_115_3(v98, type metadata accessor for Input, v99, v100, v101, v102, v103, v104, v126, v132, v139, v145, v150);
        static ExecuteResponse.complete()();
      }
    }
    OUTLINED_FUNCTION_10_42();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_51_7();
    __asm { BR              X0 }
  }
  *(_QWORD *)(v0 + 80) = v1;
  OUTLINED_FUNCTION_87_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_29;
  v13 = *(void **)(v0 + 64);
  *(_QWORD *)(v0 + 256) = v13;
  v14 = *(unsigned __int8 *)(v0 + 72);
  if (v14 != 1)
  {
    v79 = v13;
LABEL_28:
    sub_1C29435E8(v79, v14);
    goto LABEL_29;
  }
  v15 = *(NSObject **)(v0 + 232);
  sub_1C294B204(v13, 1u);
  sub_1C294B204(v13, 1u);
  v16 = v13;
  sub_1C2CFD86C();
  v17 = OUTLINED_FUNCTION_123();
  if (os_log_type_enabled(v15, v17))
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v153 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v18 = 136315138;
    v19 = sub_1C2A43F08(v16);
    if (v20)
    {
      v21 = v20;
    }
    else
    {
      v19 = 0x3E6C696E3CLL;
      v21 = 0xE500000000000000;
    }
    *(_QWORD *)(v0 + 112) = sub_1C28BB120(v19, v21, &v153);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24_27();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v15, v17, "ExecuteOnRemoteFlow: Error submitting SAExecuteOnRemoteRequest: Received SACommandFailed: reason='%s'", v18);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_24_27();

  v106 = sub_1C2A43F08(v16);
  if (!v107)
  {
    sub_1C29435E8(v13, 1u);
    v79 = v13;
    LOBYTE(v14) = 1;
    goto LABEL_28;
  }
  v108 = sub_1C2943920(v106, v107);
  swift_bridgeObjectRelease();
  if (v108 != 5)
  {
    OUTLINED_FUNCTION_87_1();
    OUTLINED_FUNCTION_126_5();
    v119 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v119;
    OUTLINED_FUNCTION_76_13(v119, (uint64_t)sub_1C2A42420);
    OUTLINED_FUNCTION_51_7();
    return sub_1C2A43238(v120);
  }
  OUTLINED_FUNCTION_24_27();
LABEL_29:
  v109 = *(NSObject **)(v0 + 232);
  sub_1C29EE14C(*(id *)(v0 + 248));
  OUTLINED_FUNCTION_87_1();
  sub_1C2CFD86C();
  v110 = OUTLINED_FUNCTION_123();
  v111 = os_log_type_enabled(v109, v110);
  v112 = *(void **)(v0 + 248);
  if (v111)
  {
    v152 = v1;
    v113 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v153 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v113 = 136315138;
    *(_QWORD *)(v0 + 96) = v152;
    v114 = v152;
    v115 = sub_1C2CFDDAC();
    *(_QWORD *)(v0 + 104) = sub_1C28BB120(v115, v116, &v153);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_70();
    sub_1C29E6D18(v112);
    OUTLINED_FUNCTION_81_5(v112);
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v109, v110, "ExecuteOnRemoteFlow: Error submitting SAExecuteOnRemoteRequest: %s", v113);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  sub_1C29E6D18(*(id *)(v0 + 248));
  OUTLINED_FUNCTION_81_5(v112);

  OUTLINED_FUNCTION_87_1();
  OUTLINED_FUNCTION_126_5();
  v117 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v117;
  OUTLINED_FUNCTION_76_13(v117, (uint64_t)sub_1C2A42508);
  OUTLINED_FUNCTION_51_7();
  return sub_1C2A42A60();
}

uint64_t sub_1C2A42420()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A42454()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v8;

  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 200);

  OUTLINED_FUNCTION_118_3();
  OUTLINED_FUNCTION_118_3();
  OUTLINED_FUNCTION_81_5(v1);
  v4 = sub_1C28EC278(v3, v2);
  OUTLINED_FUNCTION_90_5(v4, (uint64_t (*)(_QWORD))type metadata accessor for ExecuteOnRemotePayload);
  v5 = OUTLINED_FUNCTION_111_6();
  v6(v5);
  sub_1C28C9F68(v8, type metadata accessor for Input);
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_10_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_19_12(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A42508()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A4253C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 144);

  OUTLINED_FUNCTION_81_5(v1);
  v4 = OUTLINED_FUNCTION_149_1();
  sub_1C28EC278(v4, v5);
  sub_1C28C9F68(v3, (uint64_t (*)(_QWORD))type metadata accessor for ExecuteOnRemotePayload);
  v6 = OUTLINED_FUNCTION_113_3();
  v7(v6);
  sub_1C28C9F68(v2, type metadata accessor for Input);
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_10_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_19_12(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A425E4()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A42618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 200);
  sub_1C2A43E94();
  v2 = swift_allocError();
  sub_1C2A407B4(v2, 0);
  sub_1C28C9F68(v1, type metadata accessor for Input);
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_10_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C2A426A0(void **a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  v1 = *a1;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v2 = sub_1C2CFD878();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED7AA1B0);
  v3 = v1;
  v4 = v1;
  oslog = sub_1C2CFD86C();
  v5 = sub_1C2CFE2B0();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    v9 = sub_1C2CFDDAC();
    sub_1C28BB120(v9, v10, &v12);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C28B6000, oslog, v5, "ExecuteOnRemoteFlow: Could not retrieve reference resolution entities: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v7, -1, -1);
    MEMORY[0x1C3BC9DE8](v6, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1C2A4287C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  OUTLINED_FUNCTION_36_2();
  return swift_task_switch();
}

id sub_1C2A4289C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v11 = (void *)v10[9];
  sub_1C28B9A48(v10[8] + 72, (uint64_t)(v10 + 2));
  v12 = v10[5];
  v13 = v10[6];
  v14 = (_QWORD *)OUTLINED_FUNCTION_149_1();
  __swift_project_boxed_opaque_existential_1(v14, v15);
  result = objc_msgSend(v11, sel_remoteExecution);
  if (result)
  {
    result = (id)sub_1C2A444F0(result);
    v10[10] = v17;
    if (v17)
    {
      v18 = (uint64_t)result;
      v19 = v17;
      v20 = (_QWORD *)swift_task_alloc();
      v10[11] = v20;
      v21 = sub_1C2A4455C();
      *v20 = v10;
      v20[1] = sub_1C2A42978;
      return (id)AceServiceInvokerAsync.submitToRemote<A>(_:_:)(v10[9], v18, v19, v12, v21, v13, v22, v23, a9, a10);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2A42978(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 104) = a1;
  }
  OUTLINED_FUNCTION_36_2();
  return swift_task_switch();
}

uint64_t sub_1C2A429F0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 56) = *(_QWORD *)(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A42A28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_116_4();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A42A60()
{
  uint64_t v0;
  _QWORD *v1;

  v1[52] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v1[53] = OUTLINED_FUNCTION_39();
  v1[54] = OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v1[55] = OUTLINED_FUNCTION_1_3();
  v1[56] = type metadata accessor for AceOutput();
  v1[57] = OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A42AD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *inited;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(_QWORD *, uint64_t, uint64_t, _QWORD);

  v1 = v0[52];
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag + 24);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag), v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor), *(_QWORD *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor + 24));
  if ((v4 & 1) != 0)
  {
    v5 = sub_1C2CFDC8C();
    v0[58] = v5;
    v6 = (_QWORD *)OUTLINED_FUNCTION_9_6();
    v0[59] = v6;
    *v6 = v0;
    v6[1] = sub_1C2A42C90;
    v7 = v0 + 21;
    v8 = 20;
    v9 = v5;
  }
  else
  {
    v10 = v0[52];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A72C0);
    inited = (__n128 *)swift_initStackObject();
    v12 = (_QWORD *)OUTLINED_FUNCTION_58_14(inited, (__n128)xmmword_1C2D002E0);
    __swift_project_boxed_opaque_existential_1(v12, *(_QWORD *)(v10 + 56));
    sub_1C2A19FD8();
    v14 = v13;
    inited[4].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
    inited[3].n128_u64[0] = v14;
    v15 = sub_1C2CFDC8C();
    v0[60] = v15;
    v16 = (_QWORD *)OUTLINED_FUNCTION_9_6();
    v0[61] = v16;
    *v16 = v0;
    v16[1] = sub_1C2A43000;
    v7 = v0 + 12;
    v8 = 98;
    v9 = v15;
  }
  return v18(v7, v8, v9, 0);
}

uint64_t sub_1C2A42C90()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v1);
  if (v0)
    OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

#error "1C2A42D9C: call analysis failed (funcsize=60)"

void sub_1C2A42DE8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = *(void **)(v0 + 432);
  v2 = OUTLINED_FUNCTION_118();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_50_14(v3);
  v4 = OUTLINED_FUNCTION_73_9();
  OUTLINED_FUNCTION_117_7(v4, v5, &qword_1ED7A9EC0);
  v6 = OUTLINED_FUNCTION_102_7();
  if (v7 == 1)
  {
    sub_1C28BB37C(v6, &qword_1ED7A9EC0);
  }
  else
  {
    OUTLINED_FUNCTION_104();
    v8 = OUTLINED_FUNCTION_123();
    if (OUTLINED_FUNCTION_126_0(v8))
    {
      v9 = OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v9 = 136315650;
      v10 = OUTLINED_FUNCTION_59_15();
      v12 = OUTLINED_FUNCTION_129_0(v10, v11);
      OUTLINED_FUNCTION_47_17(v12);
      OUTLINED_FUNCTION_34_1();
      OUTLINED_FUNCTION_46_12();
      sub_1C2CFE4D8();
      *(_WORD *)(v9 + 22) = 2080;
      v13 = OUTLINED_FUNCTION_13_31();
      OUTLINED_FUNCTION_55_9(v13);
      OUTLINED_FUNCTION_69_9(&dword_1C28B6000, v14, v15, "FatalError at %s:%lu - %s");
      OUTLINED_FUNCTION_20_6();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_77_10();
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  *(_OWORD *)(v0 + 240) = 0u;
  v16 = v0 + 240;
  *(_OWORD *)(v16 + 120) = 0u;
  *(_OWORD *)(v16 + 136) = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_QWORD *)(v16 + 32) = 0;
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_4_6(v17, v18, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,
    v38,
    v39,
    v40,
    v41,
    v42);
  OUTLINED_FUNCTION_108_6(v19, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_40_2(v20, &qword_1ED7A8480);
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_8_37();
  OUTLINED_FUNCTION_34_3();
}

uint64_t sub_1C2A43000()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v1);
  if (v0)
    OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

#error "1C2A4310C: call analysis failed (funcsize=60)"

uint64_t sub_1C2A43158()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v2);
  if (v1)
    OUTLINED_FUNCTION_291();
  else
    __swift_destroy_boxed_opaque_existential_1(v0 + 280);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A431A8()
{
  uint64_t v0;

  sub_1C28C9F68(*(_QWORD *)(v0 + 456), (uint64_t (*)(_QWORD))type metadata accessor for AceOutput);
  OUTLINED_FUNCTION_82_5();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A431EC()
{
  uint64_t v0;

  sub_1C28C9F68(*(_QWORD *)(v0 + 456), (uint64_t (*)(_QWORD))type metadata accessor for AceOutput);
  OUTLINED_FUNCTION_116_4();
  OUTLINED_FUNCTION_82_5();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A43238(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 336) = v1;
  *(_BYTE *)(v2 + 425) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  *(_QWORD *)(v2 + 344) = OUTLINED_FUNCTION_39();
  *(_QWORD *)(v2 + 352) = OUTLINED_FUNCTION_78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  *(_QWORD *)(v2 + 360) = OUTLINED_FUNCTION_1_3();
  *(_QWORD *)(v2 + 368) = type metadata accessor for AceOutput();
  *(_QWORD *)(v2 + 376) = OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A432AC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *inited;
  _QWORD *v3;
  unint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, char, uint64_t, uint64_t);
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 336);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790A90);
  inited = (__n128 *)swift_initStackObject();
  v3 = (_QWORD *)OUTLINED_FUNCTION_58_14(inited, (__n128)xmmword_1C2D002E0);
  __swift_project_boxed_opaque_existential_1(v3, *(_QWORD *)(v1 + 56));
  sub_1C2A19FD8();
  inited[3].n128_u64[0] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
  v6 = sub_1C2CFDC8C();
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag + 24);
  v8 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag), v7);
  v9 = OUTLINED_FUNCTION_103_6();
  if ((v10(v9) & 1) != 0)
    __asm { BR              X10 }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_104();
  v12 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_126_0(v12))
  {
    v13 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1C28B6000, v8, (os_log_type_t)v7, "PersonalDomains/defined_error_dialogs feature flag is disabled", v13, 2u);
    OUTLINED_FUNCTION_11_0();
  }

  if (qword_1ED7AA040 != -1)
    swift_once();
  v14 = OUTLINED_FUNCTION_118();
  *(_QWORD *)(v0 + 384) = v14;
  *(_QWORD *)(v0 + 392) = __swift_project_value_buffer(v14, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_104();
  v15 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_10_1(v15))
  {
    v23 = *(char *)(v0 + 425);
    v16 = OUTLINED_FUNCTION_6_0();
    v25 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v16 = 136315394;
    *(_BYTE *)(v0 + 424) = 98;
    v17 = sub_1C2CFDDAC();
    *(_QWORD *)(v0 + 320) = sub_1C28BB120(v17, v18, &v25);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_8();
    *(_WORD *)(v16 + 12) = 2048;
    *(_QWORD *)(v0 + 328) = qword_1C2D09590[v23];
    sub_1C2CFE4D8();
    _os_log_impl(&dword_1C28B6000, v8, v5, "Submitting %s for error: %ld", (uint8_t *)v16, 0x16u);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 336) + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor), *(_QWORD *)(*(_QWORD *)(v0 + 336) + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor + 24));
  sub_1C290C8F0(v6);
  v20 = v19;
  *(_QWORD *)(v0 + 400) = v19;
  OUTLINED_FUNCTION_34_1();
  v24 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t))&aTE[*(int *)aTE];
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v21;
  *v21 = v0;
  v21[1] = sub_1C2A43650;
  return v24(v0 + 16, 98, v20, 0);
}

uint64_t sub_1C2A43650()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v1);
  if (v0)
    OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

#error "1C2A437B0: call analysis failed (funcsize=84)"

uint64_t sub_1C2A43808()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v2);
  if (v1)
    OUTLINED_FUNCTION_291();
  else
    __swift_destroy_boxed_opaque_existential_1(v0 + 184);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A43858()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v1 = *(NSObject **)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  isa = v1[-1].isa;
  (*((void (**)(uint64_t, _QWORD, NSObject *))isa + 2))(v2, *(_QWORD *)(v0 + 392), v1);
  OUTLINED_FUNCTION_93_5();
  __swift_storeEnumTagSinglePayload(v5, v6, v7, (uint64_t)v1);
  sub_1C28C3750(v2, v3, &qword_1ED7A9EC0);
  if (OUTLINED_FUNCTION_107_7(v3) == 1)
  {
    sub_1C28BB37C(*(_QWORD *)(v0 + 344), &qword_1ED7A9EC0);
  }
  else
  {
    OUTLINED_FUNCTION_104();
    v8 = OUTLINED_FUNCTION_123();
    if (OUTLINED_FUNCTION_86_1(v1))
    {
      v9 = OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v9 = 136315650;
      v10 = OUTLINED_FUNCTION_59_15();
      *(_QWORD *)(v0 + 312) = OUTLINED_FUNCTION_129_0(v10, v11);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2048;
      *(_QWORD *)(v0 + 304) = 307;
      OUTLINED_FUNCTION_111_6();
      sub_1C2CFE4D8();
      *(_WORD *)(v9 + 22) = 2080;
      *(_QWORD *)(v0 + 296) = OUTLINED_FUNCTION_13_31();
      sub_1C2CFE4D8();
      _os_log_impl(&dword_1C28B6000, v1, v8, "FatalError at %s:%lu - %s", (uint8_t *)v9, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    (*((void (**)(_QWORD, _QWORD))isa + 1))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 384));
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  *(_OWORD *)(v0 + 144) = 0u;
  v12 = v0 + 144;
  *(_OWORD *)(v12 + 120) = 0u;
  *(_OWORD *)(v12 + 136) = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_QWORD *)(v12 + 32) = 0;
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_19_27();
  OUTLINED_FUNCTION_4_6(v13, v14, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34,
    v35,
    v36,
    v37,
    v38,
    v39);
  OUTLINED_FUNCTION_108_6(v15, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_40_2(v16, &qword_1ED7A8480);
  OUTLINED_FUNCTION_36_0();
  return OUTLINED_FUNCTION_8_37();
}

uint64_t sub_1C2A43AF0()
{
  uint64_t v0;

  sub_1C28C9F68(*(_QWORD *)(v0 + 376), (uint64_t (*)(_QWORD))type metadata accessor for AceOutput);
  OUTLINED_FUNCTION_75_10();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A43B34()
{
  uint64_t v0;

  sub_1C28C9F68(*(_QWORD *)(v0 + 376), (uint64_t (*)(_QWORD))type metadata accessor for AceOutput);
  OUTLINED_FUNCTION_116_4();
  OUTLINED_FUNCTION_75_10();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ExecuteOnRemoteFlow.deinit()
{
  uint64_t v0;

  sub_1C2A40AEC(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  sub_1C28BB37C(v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute, &qword_1EF7880C8);
  OUTLINED_FUNCTION_99_5(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_outputPublisher);
  OUTLINED_FUNCTION_99_5(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_referenceResolutionClient);
  OUTLINED_FUNCTION_99_5(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor);
  OUTLINED_FUNCTION_99_5(OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_featureFlag);
  swift_release();
  return v0;
}

uint64_t ExecuteOnRemoteFlow.__deallocating_deinit()
{
  ExecuteOnRemoteFlow.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A43C2C()
{
  return sub_1C2A41528() & 1;
}

uint64_t sub_1C2A43C50()
{
  return sub_1C2A42A5C();
}

uint64_t sub_1C2A43C70(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C29DE2EC;
  return sub_1C2A415F8(a1);
}

void sub_1C2A43CC4()
{
  sub_1C2A40874();
}

uint64_t static ExecuteOnRemoteDeviceSpecification.== infix(_:_:)()
{
  return 1;
}

void ExecuteOnRemoteDeviceSpecification.hash(into:)()
{
  sub_1C2CFEAC0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t ExecuteOnRemoteDeviceSpecification.hashValue.getter()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  return sub_1C2CFEAD8();
}

uint64_t sub_1C2A43D4C()
{
  return ExecuteOnRemoteDeviceSpecification.hashValue.getter();
}

void sub_1C2A43D60()
{
  ExecuteOnRemoteDeviceSpecification.hash(into:)();
}

void sub_1C2A43D74()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_105_5();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A43D90()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_105_5();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A43DAC()
{
  sub_1C2CFD350();
  sub_1C2CFCF30();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A43DD4()
{
  sub_1C2CFD578();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A43DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A43E38(uint64_t (*a1)(void))
{
  return OUTLINED_FUNCTION_106_4(a1) & 1;
}

uint64_t sub_1C2A43E58(uint64_t (*a1)(void))
{
  return OUTLINED_FUNCTION_106_4(a1);
}

void sub_1C2A43E74(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  *a2 = OUTLINED_FUNCTION_106_4(a1);
  OUTLINED_FUNCTION_1_0();
}

unint64_t sub_1C2A43E94()
{
  unint64_t result;

  result = qword_1EF790890;
  if (!qword_1EF790890)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError, &type metadata for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError);
    atomic_store(result, (unint64_t *)&qword_1EF790890);
  }
  return result;
}

uint64_t type metadata accessor for ExecuteOnRemoteFlow()
{
  uint64_t result;

  result = qword_1EF790920;
  if (!qword_1EF790920)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C2A43F08(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_reason);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C2CFDD58();

  return v3;
}

void sub_1C2A43F68(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_1C28EC278((uint64_t)a1, a2);
}

void sub_1C2A43F74(uint64_t a1, uint64_t a2)
{
  sub_1C28C3364((unint64_t *)&unk_1ED7A71D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AceServiceContextProvider, (uint64_t)&protocol conformance descriptor for AceServiceContextProvider);
}

void sub_1C2A43FA0(uint64_t a1)
{
  uint64_t v2;

  sub_1C28C3364(&qword_1EF790898, 255, (uint64_t (*)(uint64_t))type metadata accessor for ExecuteOnRemoteFlow, (uint64_t)&protocol conformance descriptor for ExecuteOnRemoteFlow);
  *(_QWORD *)(a1 + 16) = v2;
}

unint64_t sub_1C2A43FE4()
{
  unint64_t result;

  result = qword_1EF7908F0;
  if (!qword_1EF7908F0)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for ExecuteOnRemoteDeviceSpecification, &type metadata for ExecuteOnRemoteDeviceSpecification);
    atomic_store(result, (unint64_t *)&qword_1EF7908F0);
  }
  return result;
}

void sub_1C2A44020(_BYTE *a1@<X8>)
{
  *a1 = sub_1C2A4067C() & 1;
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A44048(char *a1)
{
  sub_1C2A406A8(*a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t method lookup function for AceServiceContextProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AceServiceContextProvider.shouldFallbacktoAWDL.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of AceServiceContextProvider.shouldFallbacktoAWDL.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of AceServiceContextProvider.shouldFallbacktoAWDL.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of AceServiceContextProvider.__allocating_init(storage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C2A440A0()
{
  return type metadata accessor for ExecuteOnRemoteFlow();
}

void sub_1C2A440A8()
{
  unint64_t v0;

  sub_1C2A44210();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ExecuteOnRemoteFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.exitValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.__allocating_init(device:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:shouldFallbackOnAWDL:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:outputPublisher:aceService:deviceState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.execute()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 280) + *(_QWORD *)(*(_QWORD *)v1 + 280));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C29DDC8C;
  return v6(a1);
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

void sub_1C2A44210()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF790938[0])
  {
    type metadata accessor for Input(255);
    v0 = sub_1C2CFE478();
    if (!v1)
      atomic_store(v0, qword_1EF790938);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ExecuteOnRemoteFlowResult(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1C2A442A8(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1C2A442A8(id result, unsigned __int8 a2)
{
  if (a2 <= 2u)
    return result;
  return result;
}

void destroy for ExecuteOnRemoteFlowResult(uint64_t a1)
{
  sub_1C2A442DC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1C2A442DC(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u)

}

void assignWithCopy for ExecuteOnRemoteFlowResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1C2A4445C(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_1C2A442A8, (void (*)(uint64_t, uint64_t))sub_1C2A442DC);
}

uint64_t assignWithTake for ExecuteOnRemoteFlowResult(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1C2A442DC(v4, v5);
  return a1;
}

void type metadata accessor for ExecuteOnRemoteFlowResult()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t storeEnumTagSinglePayload for ExecuteOnRemoteDeviceSpecification(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C2A4439C + 4 * byte_1C2D09272[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C2A443BC + 4 * byte_1C2D09277[v4]))();
}

_BYTE *sub_1C2A4439C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C2A443BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A443C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A443CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A443D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A443DC(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for ExecuteOnRemoteDeviceSpecification()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t sub_1C2A443F4(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1C2A40AB8(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void sub_1C2A44438(uint64_t a1)
{
  sub_1C2A40AEC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1C2A44448(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1C2A4445C(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_1C2A40AB8, (void (*)(uint64_t, uint64_t))sub_1C2A40AEC);
}

void sub_1C2A4445C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *a2;
  v8 = *((_BYTE *)a2 + 8);
  a4(*a2, v8);
  v9 = *a1;
  *a1 = v7;
  v10 = *((unsigned __int8 *)a1 + 8);
  *((_BYTE *)a1 + 8) = v8;
  a5(v9, v10);
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A444A8(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1C2A40AEC(v4, v5);
  return a1;
}

void type metadata accessor for ExecuteOnRemoteFlow.State()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t sub_1C2A444F0(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_executionDeviceAssistantId);

  if (!v2)
    return 0;
  v3 = sub_1C2CFDD58();

  return v3;
}

unint64_t sub_1C2A4455C()
{
  unint64_t result;

  result = qword_1EF790AA0;
  if (!qword_1EF790AA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF790AA0);
  }
  return result;
}

void sub_1C2A44598()
{
  sub_1C2A407D0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t OUTLINED_FUNCTION_6_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_8_37()
{
  return sub_1C2CFE7FC();
}

uint64_t OUTLINED_FUNCTION_10_42()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_33@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)a1 = 2;
  return sub_1C2CFD788();
}

uint64_t OUTLINED_FUNCTION_12_34()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_13_31()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C28BB120(0xD000000000000034, (v0 - 32) | 0x8000000000000000, (uint64_t *)(v1 - 80));
}

uint64_t OUTLINED_FUNCTION_16_30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_18_26()
{
  return sub_1C2CFCFCC();
}

void OUTLINED_FUNCTION_20_34()
{
  void *v0;

}

void OUTLINED_FUNCTION_24_27()
{
  void *v0;

  sub_1C29435E8(v0, 1u);
  sub_1C29435E8(v0, 1u);
}

void OUTLINED_FUNCTION_25_25()
{
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t OUTLINED_FUNCTION_32_27()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;

  sub_1C29E6D18(v0);
  return sub_1C28EC278(v2, v1);
}

uint64_t OUTLINED_FUNCTION_33_15()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[7];
  v2 = v0[8];
  __swift_project_boxed_opaque_existential_1(v0 + 4, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v2);
}

double OUTLINED_FUNCTION_38_22(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  __swift_storeEnumTagSinglePayload(v2, 1, 1, a1);
  *(_QWORD *)(v1 + 352) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 320) = 0u;
  *(_OWORD *)(v1 + 336) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_46_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + 12) = 2048;
  *(_QWORD *)(v0 + 408) = 274;
  return v2;
}

uint64_t OUTLINED_FUNCTION_47_17(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 400) = a1;
  return sub_1C2CFE4D8();
}

void OUTLINED_FUNCTION_49_11()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 4;
}

uint64_t OUTLINED_FUNCTION_50_14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v2, a1, v1);
}

uint64_t OUTLINED_FUNCTION_55_9(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 392) = a1;
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_58_14(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  a1[2].n128_u64[0] = 0x656369766564;
  a1[2].n128_u64[1] = 0xE600000000000000;
  return v2 + 32;
}

uint64_t OUTLINED_FUNCTION_59_15()
{
  return sub_1C2CFE694();
}

uint64_t OUTLINED_FUNCTION_63_10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1C28B99EC((__int128 *)(v2 - 120), v1 + a1);
}

void OUTLINED_FUNCTION_67_8()
{
  void *v0;

  sub_1C29E6D18(v0);
}

uint64_t OUTLINED_FUNCTION_73_9()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_75_10()
{
  return swift_task_dealloc();
}

_QWORD *OUTLINED_FUNCTION_76_13@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_78_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a11, v12);
}

_QWORD *OUTLINED_FUNCTION_80_8(_QWORD *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, a1[3]);
}

uint64_t *OUTLINED_FUNCTION_84_10@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11)
{
  uint64_t v11;

  *(_QWORD *)(v11 + 304) = a10;
  *(_QWORD *)(v11 + 312) = a1;
  return __swift_allocate_boxed_opaque_existential_0(a11);
}

void OUTLINED_FUNCTION_90_5(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1C28C9F68(v2, a2);
}

uint64_t OUTLINED_FUNCTION_92_10()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 120);
}

void OUTLINED_FUNCTION_94_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  char v9;

  sub_1C2A40AEC(a9, v9);
  sub_1C2A40AEC(a9, v9);
}

uint64_t OUTLINED_FUNCTION_96_6@<X0>(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 + a1) = v1;
  return v2;
}

void OUTLINED_FUNCTION_100_10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C28DD638(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_102_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v1, 1, v0);
  return *(_QWORD *)(v2 + 424);
}

uint64_t OUTLINED_FUNCTION_103_6()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_104_5(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_1C28B9A48(v2, v1 + a1);
}

uint64_t OUTLINED_FUNCTION_106_4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_107_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_108_6(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1C28BB37C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_111_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_113_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_114_6()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_115_3(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  sub_1C28C9F68(a13, a2);
}

id OUTLINED_FUNCTION_120_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  return a14;
}

id OUTLINED_FUNCTION_121_3(void *a1)
{
  char v1;

  return sub_1C2A40AB8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_123_3()
{
  return type metadata accessor for RefreshableAceServiceInvoker();
}

uint64_t OUTLINED_FUNCTION_124_5()
{
  return type metadata accessor for RefreshableDeviceState();
}

void OUTLINED_FUNCTION_126_5()
{
  uint64_t v0;

  sub_1C2A407B4(v0, 1);
}

void OUTLINED_FUNCTION_128_4()
{
  uint64_t v0;

  sub_1C2A407B4(v0, 3);
}

void ExecuteOnRemotePayload.init(input:rrData:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v7;

  sub_1C2992AB4(a1, a4);
  v7 = (_QWORD *)(a4 + *(int *)(OUTLINED_FUNCTION_14_39() + 20));
  *v7 = a2;
  v7[1] = a3;
  OUTLINED_FUNCTION_18();
}

uint64_t type metadata accessor for ExecuteOnRemotePayload()
{
  uint64_t result;

  result = qword_1EF790B38;
  if (!qword_1EF790B38)
    return swift_getSingletonMetadata();
  return result;
}

id ExecuteOnRemotePayload.makeExecuteOnRemoteRequest(targetDeviceId:currentRequest:device:)(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69[4];

  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  OUTLINED_FUNCTION_0_1();
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  MEMORY[0x1E0C80A78](v9, v10);
  v65 = sub_1C2CFD614();
  v58 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65, v11);
  OUTLINED_FUNCTION_79_5();
  OUTLINED_FUNCTION_15_34(v12);
  sub_1C2CFD5E4();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_79_5();
  OUTLINED_FUNCTION_15_34(v15);
  v63 = sub_1C2CFD0E0();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63, v16);
  OUTLINED_FUNCTION_79_5();
  OUTLINED_FUNCTION_15_34(v17);
  sub_1C2CFBA18();
  swift_allocObject();
  sub_1C2CFBA0C();
  OUTLINED_FUNCTION_31_3();
  sub_1C2A46BF0(&qword_1EF790AA8, (uint64_t)&protocol conformance descriptor for Input);
  v18 = sub_1C2CFBA00();
  v20 = v19;
  sub_1C28BF798(0, (unint64_t *)&qword_1EF790AB0);
  v21 = sub_1C2A455B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79AF20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  v66 = 0x7461447475706E69;
  v67 = 0xE900000000000061;
  sub_1C2CFE634();
  v23 = MEMORY[0x1E0CB0338];
  *(_QWORD *)(inited + 96) = MEMORY[0x1E0CB0338];
  *(_QWORD *)(inited + 72) = v18;
  *(_QWORD *)(inited + 80) = v20;
  sub_1C28C50CC(v18, v20);
  sub_1C2CFDC8C();
  v24 = (uint64_t *)(v5 + *(int *)(OUTLINED_FUNCTION_14_39() + 20));
  v25 = v24[1];
  if (v25 >> 60 != 15)
  {
    v26 = *v24;
    sub_1C293DA88(*v24, v25);
    sub_1C2CFE634();
    v69[3] = v23;
    v69[0] = v26;
    v69[1] = v25;
    sub_1C2A3D148((uint64_t)v69, (uint64_t)&v66);
  }
  v27 = swift_bridgeObjectRetain();
  sub_1C2A46A04(v27, v21);
  v28 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_1(a4, a4[3]);
  DeviceState.asInvocationContext.getter();
  v30 = v29;
  v31 = objc_msgSend(v28, sel_runSiriKitExecutorCommandWithContext_payload_, v29, v21);

  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D881A0]), sel_init);
  sub_1C2A46A6C(a1, a2, v32);
  v33 = sub_1C2CFD5A8();
  sub_1C2A46AB0(v33, v34, v32, (SEL *)&selRef_setInvocationDeviceAssistantId_);
  v35 = sub_1C2CFDD58();
  sub_1C2A46AB0(v35, v36, v32, (SEL *)&selRef_setRunLocation_);
  v37 = v32;
  sub_1C2CFD5B4();
  if (v38)
  {
    v39 = (void *)sub_1C2CFDD34();
    OUTLINED_FUNCTION_32_0();
  }
  else
  {
    v39 = 0;
  }
  objc_msgSend(v37, sel_setRefId_, v39);

  objc_msgSend(v31, sel_setRemoteExecution_, v37);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v40 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v40, (uint64_t)qword_1ED7AA1B0);
  swift_retain_n();
  v41 = sub_1C2CFD86C();
  v42 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v69[0] = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v43 = 136315138;
    v66 = sub_1C2CFD5B4();
    v67 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8AE0);
    v45 = sub_1C2CFDDAC();
    v66 = sub_1C28BB120(v45, v46, v69);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_5_29();
    OUTLINED_FUNCTION_32_0();
    _os_log_impl(&dword_1C28B6000, v41, v42, "Setting refID for RSKE to %s", v43, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_5_29();
  v47 = v31;
  v48 = sub_1C2CFD5B4();
  if (v49)
  {
    v50 = (void *)sub_1C2CFDD34();
    v48 = swift_bridgeObjectRelease();
  }
  else
  {
    v50 = 0;
  }
  OUTLINED_FUNCTION_157_2(v48, sel_setRefId_);

  sub_1C2CFD56C();
  v51 = sub_1C2CFD0C8();
  v53 = v52;
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
  sub_1C2A46AB0(v51, v53, v47, (SEL *)&selRef_setMode_);
  sub_1C2CFD578();
  if (__swift_getEnumTagSinglePayload(v64, 1, v65) == 1)
  {
    OUTLINED_FUNCTION_17_28();
    objc_msgSend(v47, sel_setMultiUser_, 0);
    OUTLINED_FUNCTION_19_28();
    swift_release();
    OUTLINED_FUNCTION_16_31();

  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v57, v64, v65);
    objc_msgSend(v47, sel_setMultiUser_, 1);
    sub_1C2CFD5FC();
    v54 = v68;
    if (v68)
    {
      __swift_project_boxed_opaque_existential_1(&v66, (uint64_t)v68);
      v54 = (void *)sub_1C2CFD50C();
      if (v54)
      {
        sub_1C28BF798(0, &qword_1EF78E5B8);
        v54 = sub_1C2BFB0F8(v54);
      }
      OUTLINED_FUNCTION_17_28();
      v55 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
    }
    else
    {
      OUTLINED_FUNCTION_17_28();
      sub_1C28BB37C((uint64_t)&v66, &qword_1EF78F840);
    }
    OUTLINED_FUNCTION_157_2(v55, sel_setIdentifiedUserMeCard_);

    objc_msgSend(v47, sel_setRequiresConditionalMultiUserGrounding_, sub_1C2CFD5F0() & 1);
    swift_release();
    OUTLINED_FUNCTION_16_31();
    OUTLINED_FUNCTION_19_28();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v65);
  }
  return v47;
}

void ExecuteOnRemotePayload.input.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C28DD5FC(v1, a1, (void (*)(_QWORD))type metadata accessor for Input);
}

uint64_t ExecuteOnRemotePayload.rrData.getter()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_14_39();
  v0 = OUTLINED_FUNCTION_194();
  sub_1C293DA88(v0, v1);
  return OUTLINED_FUNCTION_194();
}

id sub_1C2A455B4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1C2CFDD34();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithIdentifier_, v1);

  return v2;
}

unint64_t ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.description.getter()
{
  return 0xD00000000000003CLL;
}

uint64_t static ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.== infix(_:_:)()
{
  return 1;
}

uint64_t ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.hash(into:)()
{
  return sub_1C2CFEAC0();
}

uint64_t ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.hashValue.getter()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  return sub_1C2CFEAD8();
}

uint64_t sub_1C2A456AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2CFE9DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461447272 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C2CFE9DC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C2A45788(char a1)
{
  if ((a1 & 1) != 0)
    return 0x617461447272;
  else
    return 0x7475706E69;
}

uint64_t sub_1C2A457B8()
{
  return ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.hashValue.getter();
}

uint64_t sub_1C2A457CC()
{
  return ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.hash(into:)();
}

unint64_t sub_1C2A457E0()
{
  ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.description.getter();
  return 0xD00000000000003CLL;
}

uint64_t sub_1C2A457FC()
{
  char *v0;

  return sub_1C2A45788(*v0);
}

uint64_t sub_1C2A45804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A456AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A45828()
{
  sub_1C2A46BB4();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A45850()
{
  sub_1C2A46BB4();
  return sub_1C2CFEB2C();
}

uint64_t ExecuteOnRemotePayload.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790AB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  OUTLINED_FUNCTION_10();
  v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A46BB4();
  sub_1C2CFEB08();
  type metadata accessor for Input(0);
  sub_1C2A46BF0(&qword_1EF790AA8, (uint64_t)&protocol conformance descriptor for Input);
  sub_1C2CFE958();
  if (!v1)
  {
    type metadata accessor for ExecuteOnRemotePayload();
    sub_1C2920868();
    sub_1C2CFE91C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
}

void ExecuteOnRemotePayload.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  type metadata accessor for Input(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_79_5();
  v15 = v6;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790AC8);
  MEMORY[0x1E0C80A78](v16, v7);
  OUTLINED_FUNCTION_10();
  v8 = type metadata accessor for ExecuteOnRemotePayload();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_10();
  v13 = v12 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A46BB4();
  sub_1C2CFEAFC();
  if (v2)
  {
    OUTLINED_FUNCTION_353();
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_1C2A46BF0(&qword_1EF790AD0, (uint64_t)&protocol conformance descriptor for Input);
    OUTLINED_FUNCTION_18_27();
    sub_1C2CFE8E0();
    sub_1C2992AB4(v15, v13);
    sub_1C29208E0();
    OUTLINED_FUNCTION_18_27();
    sub_1C2CFE8A4();
    OUTLINED_FUNCTION_12_35();
    *(_OWORD *)(v13 + *(int *)(v8 + 20)) = v17;
    sub_1C28DD5FC(v13, a2, (void (*)(_QWORD))type metadata accessor for ExecuteOnRemotePayload);
    OUTLINED_FUNCTION_353();
    sub_1C28C9F68(v13, (uint64_t (*)(_QWORD))type metadata accessor for ExecuteOnRemotePayload);
  }
}

void sub_1C2A45BC4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ExecuteOnRemotePayload.init(from:)(a1, a2);
}

uint64_t sub_1C2A45BD8(_QWORD *a1)
{
  return ExecuteOnRemotePayload.encode(to:)(a1);
}

uint64_t SAIntentGroupRunSiriKitExecutor.hasExecuteOnRemotePayload.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = objc_msgSend(v0, sel_parse);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1C2A46AFC(v1, (SEL *)&selRef_type);
    if (v4)
    {
      v5 = v4;
      if (v3 == sub_1C2CFDD58() && v5 == v6)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_32_0();
      }
      else
      {
        v8 = sub_1C2CFE9DC();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_32_0();
        if ((v8 & 1) == 0)
          goto LABEL_8;
      }
      v10 = objc_msgSend(v2, sel_directInvocation);
      if (v10)
      {
        v11 = v10;
        v9 = sub_1C2A45D74();
        v12 = v2;
        v2 = v11;
      }
      else
      {
        if (qword_1ED7AA040 != -1)
          swift_once();
        v13 = OUTLINED_FUNCTION_118();
        __swift_project_value_buffer(v13, (uint64_t)qword_1ED7AA1B0);
        v12 = (void *)OUTLINED_FUNCTION_104();
        v14 = sub_1C2CFE2B0();
        if (OUTLINED_FUNCTION_126_0(v14))
        {
          *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
          OUTLINED_FUNCTION_9_7(&dword_1C28B6000, v15, v16, "Could not extract ExecuteOnRemotePayload: Parse is type directInvocation but directInvocation is nil");
          OUTLINED_FUNCTION_11_0();
        }
        v9 = 0;
      }

      goto LABEL_19;
    }
LABEL_8:
    v9 = 0;
LABEL_19:

    return v9 & 1;
  }
  v9 = 0;
  return v9 & 1;
}

uint64_t sub_1C2A45D74()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = sub_1C2A46AFC(v0, (SEL *)&selRef_invocationIdentifier);
  if (v2)
  {
    if (v1 == 0xD000000000000025 && v2 == 0x80000001C2D2F1B0)
      v3 = 1;
    else
      v3 = sub_1C2CFE9DC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

void SAIntentGroupRunSiriKitExecutor.executeOnRemotePayload()(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v3 = objc_msgSend(v1, sel_parse);
  if (v3
    && (v4 = v3, v16 = objc_msgSend(v3, sel_directInvocation), v4, v16))
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED7AA1B0);
    v6 = (void *)OUTLINED_FUNCTION_104();
    v7 = sub_1C2CFE2A4();
    if (OUTLINED_FUNCTION_126_0(v7))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_9_7(&dword_1C28B6000, v8, v9, "Extracting ExecuteOnRemotePayload from RSKE command");
      OUTLINED_FUNCTION_11_0();
    }

    sub_1C2A45F9C(a1);
    OUTLINED_FUNCTION_10_36(v16);
  }
  else
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v10 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED7AA1B0);
    v11 = (void *)OUTLINED_FUNCTION_104();
    v12 = sub_1C2CFE2B0();
    if (OUTLINED_FUNCTION_126_0(v12))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_9_7(&dword_1C28B6000, v13, v14, "Could not extract ExecuteOnRemotePayload: Parse has no directInvocation");
      OUTLINED_FUNCTION_11_0();
    }

    v15 = OUTLINED_FUNCTION_14_39();
    __swift_storeEnumTagSinglePayload(a1, 1, 1, v15);
  }
}

uint64_t sub_1C2A45F9C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint8_t *v48;
  void *v49;
  uint8_t *v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59[3];
  uint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v3 = type metadata accessor for Input(0);
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v53 - v9;
  v11 = sub_1C2A46B54(v1);
  if (v12 >> 60 != 15)
  {
    v19 = v11;
    v20 = v12;
    v21 = (void *)objc_opt_self();
    v22 = (void *)sub_1C2CFBBB0();
    v59[0] = 0;
    v23 = objc_msgSend(v21, sel_propertyListWithData_options_format_error_, v22, 0, 0, v59);

    if (!v23)
    {
      v27 = v59[0];
      v28 = (void *)sub_1C2CFBAFC();

      swift_willThrow();
      if (qword_1ED7AA040 != -1)
        swift_once();
      v29 = sub_1C2CFD878();
      __swift_project_value_buffer(v29, (uint64_t)qword_1ED7AA1B0);
      v30 = sub_1C2CFD86C();
      v31 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_1C28B6000, v30, v31, "SAExecuteOnRemoteRequest Direct Invocation data is not a valid serialized property list", v32, 2u);
        MEMORY[0x1C3BC9DE8](v32, -1, -1);
      }
      sub_1C28EC278(v19, v20);

      goto LABEL_31;
    }
    v24 = v59[0];
    sub_1C2CFE538();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
    if (swift_dynamicCast())
    {
      sub_1C28C1A54();
      if (v60)
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v25 = v57;
          v26 = v58;
          sub_1C28C1A54();
          swift_bridgeObjectRelease();
          v56 = v25;
          if (v60)
          {
            if (swift_dynamicCast())
            {
              v54 = v58;
              v55 = (void *)v57;
LABEL_39:
              sub_1C2CFB9E8();
              swift_allocObject();
              sub_1C2CFB9DC();
              sub_1C2A46BF0(&qword_1EF790AD0, (uint64_t)&protocol conformance descriptor for Input);
              sub_1C2CFB9D0();
              sub_1C28EC278(v19, v20);
              sub_1C28C516C(v25, v26);
              swift_release();
              sub_1C2992AB4((uint64_t)v7, (uint64_t)v10);
              sub_1C2992AB4((uint64_t)v10, a1);
              v41 = type metadata accessor for ExecuteOnRemotePayload();
              v51 = (_QWORD *)(a1 + *(int *)(v41 + 20));
              v52 = v54;
              *v51 = v55;
              v51[1] = v52;
              v42 = a1;
              v43 = 0;
              return __swift_storeEnumTagSinglePayload(v42, v43, 1, v41);
            }
          }
          else
          {
            sub_1C28BB37C((uint64_t)v59, &qword_1ED7A8480);
          }
          if (qword_1ED7AA040 != -1)
            swift_once();
          v44 = sub_1C2CFD878();
          __swift_project_value_buffer(v44, (uint64_t)qword_1ED7AA1B0);
          v45 = sub_1C2CFD86C();
          v46 = sub_1C2CFE2B0();
          if (os_log_type_enabled(v45, v46))
          {
            v47 = swift_slowAlloc();
            v53 = v26;
            v48 = (uint8_t *)v47;
            v55 = (void *)swift_slowAlloc();
            v59[0] = v55;
            *(_DWORD *)v48 = 136315138;
            v54 = (unint64_t)(v48 + 4);
            v57 = sub_1C28BB120(0x617461447272, 0xE600000000000000, (uint64_t *)v59);
            sub_1C2CFE4D8();
            _os_log_impl(&dword_1C28B6000, v45, v46, "SAExecuteOnRemoteRequest Direct Invocation userData has nil value for %s: Understanding device out of date? No reference resolution entities will be scoped for this turn.", v48, 0xCu);
            v49 = v55;
            swift_arrayDestroy();
            MEMORY[0x1C3BC9DE8](v49, -1, -1);
            v50 = v48;
            v26 = v53;
            MEMORY[0x1C3BC9DE8](v50, -1, -1);
          }

          v54 = 0xF000000000000000;
          v55 = 0;
          v25 = v56;
          goto LABEL_39;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C28BB37C((uint64_t)v59, &qword_1ED7A8480);
      }
      if (qword_1ED7AA040 != -1)
        swift_once();
      v37 = sub_1C2CFD878();
      __swift_project_value_buffer(v37, (uint64_t)qword_1ED7AA1B0);
      v30 = sub_1C2CFD86C();
      v38 = sub_1C2CFE2B0();
      if (!os_log_type_enabled(v30, v38))
        goto LABEL_30;
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = (void *)swift_slowAlloc();
      v59[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v57 = sub_1C28BB120(0x7461447475706E69, 0xE900000000000061, (uint64_t *)v59);
      sub_1C2CFE4D8();
      _os_log_impl(&dword_1C28B6000, v30, v38, "SAExecuteOnRemoteRequest Direct Invocation userData has no value for %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v40, -1, -1);
      v36 = v39;
    }
    else
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v33 = sub_1C2CFD878();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED7AA1B0);
      v30 = sub_1C2CFD86C();
      v34 = sub_1C2CFE2B0();
      if (!os_log_type_enabled(v30, v34))
        goto LABEL_30;
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1C28B6000, v30, v34, "SAExecuteOnRemoteRequest Direct Invocation has invalid data", v35, 2u);
      v36 = v35;
    }
    MEMORY[0x1C3BC9DE8](v36, -1, -1);
LABEL_30:
    sub_1C28EC278(v19, v20);
LABEL_31:

    v41 = type metadata accessor for ExecuteOnRemotePayload();
    v42 = a1;
    v43 = 1;
    return __swift_storeEnumTagSinglePayload(v42, v43, 1, v41);
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v13 = sub_1C2CFD878();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED7AA1B0);
  v14 = sub_1C2CFD86C();
  v15 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1C28B6000, v14, v15, "SAExecuteOnRemoteRequest Direct Invocation has no data", v16, 2u);
    MEMORY[0x1C3BC9DE8](v16, -1, -1);
  }

  v17 = type metadata accessor for ExecuteOnRemotePayload();
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v17);
}

void sub_1C2A46A04(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)sub_1C2CFDC50();
  OUTLINED_FUNCTION_32_0();
  objc_msgSend(a2, sel_setUserData_, v3);

}

void sub_1C2A46A6C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C2CFDD34();
  objc_msgSend(a3, sel_setExecutionDeviceAssistantId_, v4);

}

void sub_1C2A46AB0(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  void *v6;

  v6 = (void *)sub_1C2CFDD34();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
  OUTLINED_FUNCTION_10_36(v6);
}

uint64_t sub_1C2A46AFC(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    sub_1C2CFDD58();

  }
  return OUTLINED_FUNCTION_194();
}

uint64_t sub_1C2A46B54(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_data);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C2CFBBD4();

  return v3;
}

unint64_t sub_1C2A46BB4()
{
  unint64_t result;

  result = qword_1EF790AC0;
  if (!qword_1EF790AC0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D09854, &type metadata for ExecuteOnRemotePayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF790AC0);
  }
  return result;
}

void sub_1C2A46BF0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for Input(255);
    atomic_store(MEMORY[0x1C3BC9CD4](a2, v4), a1);
  }
  OUTLINED_FUNCTION_1_0();
}

unint64_t sub_1C2A46C30()
{
  unint64_t result;

  result = qword_1EF790AD8;
  if (!qword_1EF790AD8)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError, &type metadata for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError);
    atomic_store(result, (unint64_t *)&qword_1EF790AD8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ExecuteOnRemotePayload(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  char *__dst;
  char *__dsta;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C2CFD350();
  }
  else
  {
    v7 = sub_1C2CFBCAC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for Input(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v13 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
        goto LABEL_19;
      case 1u:
        v15 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v10, v11, v15);
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)((char *)v10 + *(int *)(v16 + 48)) = *(_QWORD *)((char *)v11 + *(int *)(v16 + 48));
        sub_1C2CFD350();
        goto LABEL_19;
      case 2u:
        v17 = v11[1];
        *v10 = *v11;
        v10[1] = v17;
        v10[2] = v11[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 3u:
        *v10 = *v11;
        swift_unknownObjectRetain();
        goto LABEL_19;
      case 4u:
        v18 = sub_1C2CFBD9C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
        goto LABEL_19;
      case 5u:
        v19 = (void *)*v11;
        *v10 = *v11;
        v20 = v19;
        goto LABEL_19;
      case 6u:
        v21 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v10, v11, v21);
        v22 = (int *)type metadata accessor for USOParse();
        v23 = v22[5];
        __dst = (char *)v10 + v23;
        v24 = (char *)v11 + v23;
        v25 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(__dst, v24, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v25);
        }
        v33 = v22[6];
        v34 = (_QWORD *)((char *)v10 + v33);
        v35 = (_QWORD *)((char *)v11 + v33);
        v36 = v35[1];
        *v34 = *v35;
        v34[1] = v36;
        v37 = v22[7];
        v38 = (char *)v10 + v37;
        v39 = (char *)v11 + v37;
        v38[4] = v39[4];
        *(_DWORD *)v38 = *(_DWORD *)v39;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 7u:
        v27 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v10, v11, v27);
        v28 = (int *)type metadata accessor for USOParse();
        v29 = v28[5];
        __dsta = (char *)v10 + v29;
        v30 = (char *)v11 + v29;
        v31 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dsta, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(__dsta, v30, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v31);
        }
        v40 = v28[6];
        v41 = (_QWORD *)((char *)v10 + v40);
        v42 = (_QWORD *)((char *)v11 + v40);
        v43 = v42[1];
        *v41 = *v42;
        v41[1] = v43;
        v44 = v28[7];
        v45 = (char *)v10 + v44;
        v46 = (char *)v11 + v44;
        v45[4] = v46[4];
        *(_DWORD *)v45 = *(_DWORD *)v46;
        v47 = (int *)type metadata accessor for LinkParse();
        v48 = v47[5];
        v49 = (_QWORD *)((char *)v10 + v48);
        v50 = (_QWORD *)((char *)v11 + v48);
        v51 = v50[1];
        *v49 = *v50;
        v49[1] = v51;
        v52 = v47[6];
        v53 = (_QWORD *)((char *)v10 + v52);
        v54 = (_QWORD *)((char *)v11 + v52);
        v55 = v54[1];
        *v53 = *v54;
        v53[1] = v55;
        v56 = v47[7];
        v57 = (_QWORD *)((char *)v10 + v56);
        v58 = (_QWORD *)((char *)v11 + v56);
        v59 = v58[1];
        *v57 = *v58;
        v57[1] = v59;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
    v60 = v8[7];
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    v63 = *(_QWORD *)((char *)a2 + v60 + 24);
    swift_bridgeObjectRetain();
    if (v63)
    {
      v64 = *((_QWORD *)v62 + 4);
      *((_QWORD *)v61 + 3) = v63;
      *((_QWORD *)v61 + 4) = v64;
      (**(void (***)(char *, char *, uint64_t))(v63 - 8))(v61, v62, v63);
    }
    else
    {
      v65 = *((_OWORD *)v62 + 1);
      *(_OWORD *)v61 = *(_OWORD *)v62;
      *((_OWORD *)v61 + 1) = v65;
      *((_QWORD *)v61 + 4) = *((_QWORD *)v62 + 4);
    }
    *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    v66 = *(int *)(a3 + 20);
    v67 = (char *)a1 + v66;
    v68 = (char *)a2 + v66;
    v69 = *((_QWORD *)v68 + 1);
    if (v69 >> 60 == 15)
    {
      *(_OWORD *)v67 = *(_OWORD *)v68;
    }
    else
    {
      v70 = *(_QWORD *)v68;
      sub_1C28C50CC(*(_QWORD *)v68, *((_QWORD *)v68 + 1));
      *(_QWORD *)v67 = v70;
      *((_QWORD *)v67 + 1) = v69;
    }
  }
  return a1;
}

uint64_t destroy for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t *v16;
  unint64_t v17;

  v4 = sub_1C2CFBCAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for Input(0);
  v6 = (id *)(a1 + *(int *)(v5 + 20));
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = sub_1C2CFCD44();
      goto LABEL_7;
    case 1u:
      v8 = sub_1C2CFCD44();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      v7 = sub_1C2CFBD9C();
LABEL_7:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      break;
    case 5u:

      break;
    case 6u:
      v9 = sub_1C2CFBFD0();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
      v10 = (uint64_t)v6 + *(int *)(type metadata accessor for USOParse() + 20);
      v11 = sub_1C2CFBF28();
      if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      goto LABEL_15;
    case 7u:
      v12 = sub_1C2CFBFD0();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v6, v12);
      v13 = (uint64_t)v6 + *(int *)(type metadata accessor for USOParse() + 20);
      v14 = sub_1C2CFBF28();
      if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      swift_bridgeObjectRelease();
      type metadata accessor for LinkParse();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  result = a1 + *(int *)(v5 + 28);
  if (*(_QWORD *)(result + 24))
    result = __swift_destroy_boxed_opaque_existential_1(result);
  v16 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  v17 = v16[1];
  if (v17 >> 60 != 15)
    return sub_1C28C516C(*v16, v17);
  return result;
}

uint64_t initializeWithCopy for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  char *__dst;
  char *__dsta;

  v6 = sub_1C2CFBCAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for Input(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v12 = sub_1C2CFCD44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      goto LABEL_17;
    case 1u:
      v13 = sub_1C2CFCD44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      *(_QWORD *)((char *)v9 + *(int *)(v14 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v14 + 48));
      sub_1C2CFD350();
      goto LABEL_17;
    case 2u:
      v15 = v10[1];
      *v9 = *v10;
      v9[1] = v15;
      v9[2] = v10[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 3u:
      *v9 = *v10;
      swift_unknownObjectRetain();
      goto LABEL_17;
    case 4u:
      v16 = sub_1C2CFBD9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      goto LABEL_17;
    case 5u:
      v17 = (void *)*v10;
      *v9 = *v10;
      v18 = v17;
      goto LABEL_17;
    case 6u:
      v19 = sub_1C2CFBFD0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, v10, v19);
      v20 = (int *)type metadata accessor for USOParse();
      v21 = v20[5];
      __dst = (char *)v9 + v21;
      v22 = (char *)v10 + v21;
      v23 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(__dst, v22, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v23);
      }
      v31 = v20[6];
      v32 = (_QWORD *)((char *)v9 + v31);
      v33 = (_QWORD *)((char *)v10 + v31);
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      v35 = v20[7];
      v36 = (char *)v9 + v35;
      v37 = (char *)v10 + v35;
      v36[4] = v37[4];
      *(_DWORD *)v36 = *(_DWORD *)v37;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 7u:
      v25 = sub_1C2CFBFD0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v9, v10, v25);
      v26 = (int *)type metadata accessor for USOParse();
      v27 = v26[5];
      __dsta = (char *)v9 + v27;
      v28 = (char *)v10 + v27;
      v29 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(__dsta, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dsta, v28, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v29);
      }
      v38 = v26[6];
      v39 = (_QWORD *)((char *)v9 + v38);
      v40 = (_QWORD *)((char *)v10 + v38);
      v41 = v40[1];
      *v39 = *v40;
      v39[1] = v41;
      v42 = v26[7];
      v43 = (char *)v9 + v42;
      v44 = (char *)v10 + v42;
      v43[4] = v44[4];
      *(_DWORD *)v43 = *(_DWORD *)v44;
      v45 = (int *)type metadata accessor for LinkParse();
      v46 = v45[5];
      v47 = (_QWORD *)((char *)v9 + v46);
      v48 = (_QWORD *)((char *)v10 + v46);
      v49 = v48[1];
      *v47 = *v48;
      v47[1] = v49;
      v50 = v45[6];
      v51 = (_QWORD *)((char *)v9 + v50);
      v52 = (_QWORD *)((char *)v10 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = v45[7];
      v55 = (_QWORD *)((char *)v9 + v54);
      v56 = (_QWORD *)((char *)v10 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v58 = v7[7];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = *(_QWORD *)(a2 + v58 + 24);
  swift_bridgeObjectRetain();
  if (v61)
  {
    v62 = *(_QWORD *)(v60 + 32);
    *(_QWORD *)(v59 + 24) = v61;
    *(_QWORD *)(v59 + 32) = v62;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v61 - 8))(v59, v60, v61);
  }
  else
  {
    v63 = *(_OWORD *)(v60 + 16);
    *(_OWORD *)v59 = *(_OWORD *)v60;
    *(_OWORD *)(v59 + 16) = v63;
    *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  }
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  v64 = *(int *)(a3 + 20);
  v65 = a1 + v64;
  v66 = (uint64_t *)(a2 + v64);
  v67 = v66[1];
  if (v67 >> 60 == 15)
  {
    *(_OWORD *)v65 = *(_OWORD *)v66;
  }
  else
  {
    v68 = *v66;
    sub_1C28C50CC(*v66, v66[1]);
    *(_QWORD *)v65 = v68;
    *(_QWORD *)(v65 + 8) = v67;
  }
  return a1;
}

uint64_t assignWithCopy for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *__dst;
  char *__dsta;

  v6 = sub_1C2CFBCAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for Input(0);
  v8 = (int *)v7;
  if (a1 != a2)
  {
    v9 = *(int *)(v7 + 20);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    sub_1C28C9F68(a1 + v9, type metadata accessor for Parse);
    v12 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v13 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
        goto LABEL_18;
      case 1u:
        v14 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, v11, v14);
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)((char *)v10 + *(int *)(v15 + 48)) = *(_QWORD *)((char *)v11 + *(int *)(v15 + 48));
        sub_1C2CFD350();
        goto LABEL_18;
      case 2u:
        *v10 = *v11;
        v10[1] = v11[1];
        v10[2] = v11[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 3u:
        *v10 = *v11;
        swift_unknownObjectRetain();
        goto LABEL_18;
      case 4u:
        v16 = sub_1C2CFBD9C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
        goto LABEL_18;
      case 5u:
        v17 = (void *)*v11;
        *v10 = *v11;
        v18 = v17;
        goto LABEL_18;
      case 6u:
        v19 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v10, v11, v19);
        v20 = (int *)type metadata accessor for USOParse();
        v21 = v20[5];
        __dst = (char *)v10 + v21;
        v22 = (char *)v11 + v21;
        v23 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(__dst, v22, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v23);
        }
        v31 = v20[6];
        v32 = (_QWORD *)((char *)v10 + v31);
        v33 = (_QWORD *)((char *)v11 + v31);
        *v32 = *v33;
        v32[1] = v33[1];
        v34 = v20[7];
        v35 = (char *)v10 + v34;
        v36 = (char *)v11 + v34;
        v37 = *(_DWORD *)v36;
        v35[4] = v36[4];
        *(_DWORD *)v35 = v37;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 7u:
        v25 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v10, v11, v25);
        v26 = (int *)type metadata accessor for USOParse();
        v27 = v26[5];
        __dsta = (char *)v10 + v27;
        v28 = (char *)v11 + v27;
        v29 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dsta, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dsta, v28, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v29);
        }
        v38 = v26[6];
        v39 = (_QWORD *)((char *)v10 + v38);
        v40 = (_QWORD *)((char *)v11 + v38);
        *v39 = *v40;
        v39[1] = v40[1];
        v41 = v26[7];
        v42 = (char *)v10 + v41;
        v43 = (char *)v11 + v41;
        v44 = *(_DWORD *)v43;
        v42[4] = v43[4];
        *(_DWORD *)v42 = v44;
        v45 = (int *)type metadata accessor for LinkParse();
        v46 = v45[5];
        v47 = (_QWORD *)((char *)v10 + v46);
        v48 = (_QWORD *)((char *)v11 + v46);
        *v47 = *v48;
        v47[1] = v48[1];
        v49 = v45[6];
        v50 = (_QWORD *)((char *)v10 + v49);
        v51 = (_QWORD *)((char *)v11 + v49);
        *v50 = *v51;
        v50[1] = v51[1];
        v52 = v45[7];
        v53 = (_QWORD *)((char *)v10 + v52);
        v54 = (_QWORD *)((char *)v11 + v52);
        *v53 = *v54;
        v53[1] = v54[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55 = v8[7];
  v56 = a1 + v55;
  v57 = (uint64_t *)(a2 + v55);
  v58 = *(_QWORD *)(a2 + v55 + 24);
  if (*(_QWORD *)(a1 + v55 + 24))
  {
    if (v58)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v56, v57);
      goto LABEL_26;
    }
    __swift_destroy_boxed_opaque_existential_1(v56);
  }
  else if (v58)
  {
    *(_QWORD *)(v56 + 24) = v58;
    *(_QWORD *)(v56 + 32) = v57[4];
    (**(void (***)(uint64_t, __int128 *))(v58 - 8))(v56, (__int128 *)v57);
    goto LABEL_26;
  }
  v59 = *(_OWORD *)v57;
  v60 = *((_OWORD *)v57 + 1);
  *(_QWORD *)(v56 + 32) = v57[4];
  *(_OWORD *)v56 = v59;
  *(_OWORD *)(v56 + 16) = v60;
LABEL_26:
  *(_BYTE *)(a1 + v8[8]) = *(_BYTE *)(a2 + v8[8]);
  v61 = *(int *)(a3 + 20);
  v62 = (uint64_t *)(a1 + v61);
  v63 = (uint64_t *)(a2 + v61);
  v64 = *(_QWORD *)(a2 + v61 + 8);
  if (*(_QWORD *)(a1 + v61 + 8) >> 60 != 15)
  {
    if (v64 >> 60 != 15)
    {
      v66 = *v63;
      sub_1C28C50CC(v66, v64);
      v67 = *v62;
      v68 = v62[1];
      *v62 = v66;
      v62[1] = v64;
      sub_1C28C516C(v67, v68);
      return a1;
    }
    sub_1C2A38860((uint64_t)v62);
    goto LABEL_31;
  }
  if (v64 >> 60 == 15)
  {
LABEL_31:
    *(_OWORD *)v62 = *(_OWORD *)v63;
    return a1;
  }
  v65 = *v63;
  sub_1C28C50CC(v65, v64);
  *v62 = v65;
  v62[1] = v64;
  return a1;
}

uint64_t initializeWithTake for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v42;

  v6 = sub_1C2CFBCAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for Input(0);
  v8 = v7[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v12 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      goto LABEL_6;
    case 1u:
      v13 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v9, v10, v13);
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      *(_QWORD *)&v9[*(int *)(v14 + 48)] = *(_QWORD *)&v10[*(int *)(v14 + 48)];
      goto LABEL_6;
    case 4u:
      v15 = sub_1C2CFBD9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v9, v10, v15);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    case 6u:
      v42 = a3;
      v16 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
      v17 = (int *)type metadata accessor for USOParse();
      v18 = v17[5];
      v19 = &v9[v18];
      v20 = &v10[v18];
      v21 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      *(_OWORD *)&v9[v17[6]] = *(_OWORD *)&v10[v17[6]];
      v30 = v17[7];
      v31 = &v9[v30];
      v32 = &v10[v30];
      v31[4] = v32[4];
      *(_DWORD *)v31 = *(_DWORD *)v32;
      goto LABEL_15;
    case 7u:
      v42 = a3;
      v23 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v9, v10, v23);
      v24 = (int *)type metadata accessor for USOParse();
      v25 = v24[5];
      v26 = &v9[v25];
      v27 = &v10[v25];
      v28 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
        __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
      }
      *(_OWORD *)&v9[v24[6]] = *(_OWORD *)&v10[v24[6]];
      v33 = v24[7];
      v34 = &v9[v33];
      v35 = &v10[v33];
      v34[4] = v35[4];
      *(_DWORD *)v34 = *(_DWORD *)v35;
      v36 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v9[v36[5]] = *(_OWORD *)&v10[v36[5]];
      *(_OWORD *)&v9[v36[6]] = *(_OWORD *)&v10[v36[6]];
      *(_OWORD *)&v9[v36[7]] = *(_OWORD *)&v10[v36[7]];
LABEL_15:
      swift_storeEnumTagMultiPayload();
      a3 = v42;
      break;
    default:
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      break;
  }
  *(_QWORD *)(a1 + v7[6]) = *(_QWORD *)(a2 + v7[6]);
  v37 = v7[7];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *__dst;
  char *__dsta;

  v6 = sub_1C2CFBCAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Input(0);
  v8 = (int *)v7;
  if (a1 != a2)
  {
    v9 = *(int *)(v7 + 20);
    v10 = (char *)(a1 + v9);
    v11 = (char *)(a2 + v9);
    sub_1C28C9F68(a1 + v9, type metadata accessor for Parse);
    v12 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v13 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
        goto LABEL_15;
      case 1u:
        v14 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v10[*(int *)(v15 + 48)] = *(_QWORD *)&v11[*(int *)(v15 + 48)];
        goto LABEL_15;
      case 4u:
        v16 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v10, v11, v16);
        goto LABEL_15;
      case 6u:
        v17 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
        v18 = (int *)type metadata accessor for USOParse();
        v19 = v18[5];
        __dst = &v10[v19];
        v20 = &v11[v19];
        v21 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(__dst, v20, v21);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v21);
        }
        *(_OWORD *)&v10[v18[6]] = *(_OWORD *)&v11[v18[6]];
        v29 = v18[7];
        v30 = &v10[v29];
        v31 = &v11[v29];
        v30[4] = v31[4];
        *(_DWORD *)v30 = *(_DWORD *)v31;
        goto LABEL_15;
      case 7u:
        v23 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v10, v11, v23);
        v24 = (int *)type metadata accessor for USOParse();
        v25 = v24[5];
        __dsta = &v10[v25];
        v26 = &v11[v25];
        v27 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dsta, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(__dsta, v26, v27);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v27);
        }
        *(_OWORD *)&v10[v24[6]] = *(_OWORD *)&v11[v24[6]];
        v32 = v24[7];
        v33 = &v10[v32];
        v34 = &v11[v32];
        v33[4] = v34[4];
        *(_DWORD *)v33 = *(_DWORD *)v34;
        v35 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v10[v35[5]] = *(_OWORD *)&v11[v35[5]];
        *(_OWORD *)&v10[v35[6]] = *(_OWORD *)&v11[v35[6]];
        *(_OWORD *)&v10[v35[7]] = *(_OWORD *)&v11[v35[7]];
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_bridgeObjectRelease();
  v36 = v8[7];
  v37 = a1 + v36;
  v38 = a2 + v36;
  if (*(_QWORD *)(a1 + v36 + 24))
    __swift_destroy_boxed_opaque_existential_1(v37);
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
  *(_BYTE *)(a1 + v8[8]) = *(_BYTE *)(a2 + v8[8]);
  v40 = *(int *)(a3 + 20);
  v41 = (uint64_t *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v43 = *(_QWORD *)(a1 + v40 + 8);
  if (v43 >> 60 != 15)
  {
    v44 = v42[1];
    if (v44 >> 60 != 15)
    {
      v45 = *v41;
      *v41 = *v42;
      v41[1] = v44;
      sub_1C28C516C(v45, v43);
      return a1;
    }
    sub_1C2A38860((uint64_t)v41);
  }
  *(_OWORD *)v41 = *(_OWORD *)v42;
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecuteOnRemotePayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2A4864C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  unsigned int v10;

  v6 = OUTLINED_FUNCTION_31_3();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  v9 = ((4 * (_DWORD)v8) & 0xC) == 0;
  v10 = ((4 * v8) & 0xC | (v8 >> 2)) ^ 0xF;
  if (v9)
    return 0;
  else
    return v10;
}

uint64_t storeEnumTagSinglePayload for ExecuteOnRemotePayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C2A486D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = OUTLINED_FUNCTION_31_3();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    v9 = (_QWORD *)(a1 + *(int *)(a4 + 20));
    *v9 = 0;
    v9[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
    OUTLINED_FUNCTION_18();
  }
}

uint64_t sub_1C2A48750()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Input(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C2A48800 + 4 * byte_1C2D095F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C2A48820 + 4 * byte_1C2D095F5[v4]))();
}

_BYTE *sub_1C2A48800(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C2A48820(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A48828(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A48830(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A48838(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A48840(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError()
{
  return &type metadata for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError;
}

uint64_t storeEnumTagSinglePayload for ExecuteOnRemotePayload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2A488A8 + 4 * byte_1C2D095FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2A488DC + 4 * byte_1C2D095FA[v4]))();
}

uint64_t sub_1C2A488DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A488E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A488ECLL);
  return result;
}

uint64_t sub_1C2A488F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A48900);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2A48904(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A4890C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExecuteOnRemotePayload.CodingKeys()
{
  return &type metadata for ExecuteOnRemotePayload.CodingKeys;
}

unint64_t sub_1C2A4892C()
{
  unint64_t result;

  result = qword_1EF790B70;
  if (!qword_1EF790B70)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0982C, &type metadata for ExecuteOnRemotePayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF790B70);
  }
  return result;
}

unint64_t sub_1C2A4896C()
{
  unint64_t result;

  result = qword_1EF790B78;
  if (!qword_1EF790B78)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0979C, &type metadata for ExecuteOnRemotePayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF790B78);
  }
  return result;
}

unint64_t sub_1C2A489AC()
{
  unint64_t result;

  result = qword_1EF790B80;
  if (!qword_1EF790B80)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D097C4, &type metadata for ExecuteOnRemotePayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF790B80);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_12_35()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_14_39()
{
  return type metadata accessor for ExecuteOnRemotePayload();
}

uint64_t OUTLINED_FUNCTION_15_34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

void OUTLINED_FUNCTION_16_31()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_17_28()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_28()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1C28C516C(v0, v1);
}

void sub_1C2A48A44()
{
  OUTLINED_FUNCTION_25_26();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_12_36();
  OUTLINED_FUNCTION_10_43();
}

void sub_1C2A48AC8()
{
  OUTLINED_FUNCTION_25_26();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_12_36();
  OUTLINED_FUNCTION_10_43();
}

uint64_t sub_1C2A48B48()
{
  uint64_t v0;

  v0 = sub_1C2CD9414();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1C2A48BE8(char a1)
{
  __asm { BR              X10 }
}

void sub_1C2A48C34()
{
  OUTLINED_FUNCTION_25_26();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_12_36();
  OUTLINED_FUNCTION_10_43();
}

id sub_1C2A48CA0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1C29BF420();
  if (v4)
  {
    OUTLINED_FUNCTION_21_28();
    OUTLINED_FUNCTION_24_28();
    v5 = sub_1C2A498FC();
    if (!v5)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v6 = OUTLINED_FUNCTION_118();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED7AA1B0);
      OUTLINED_FUNCTION_13_32();
      v7 = (void *)sub_1C2CFD86C();
      v8 = sub_1C2CFE2B0();
      if (OUTLINED_FUNCTION_116_2(v8))
      {
        OUTLINED_FUNCTION_6_0();
        v28 = OUTLINED_FUNCTION_6_0();
        v9 = OUTLINED_FUNCTION_8_38(4.8149e-34);
        OUTLINED_FUNCTION_20_35(v9);
        OUTLINED_FUNCTION_5_42();
        OUTLINED_FUNCTION_14_22();
        OUTLINED_FUNCTION_9_44(&dword_1C28B6000, v10, v11, "Could not load bundle by identifier: '%s'");
        OUTLINED_FUNCTION_49_2();
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_156_2();
      sub_1C2A499F8();
      OUTLINED_FUNCTION_14();
      *(_QWORD *)v21 = v2;
      v22 = 2;
LABEL_21:
      *(_QWORD *)(v21 + 8) = v1;
      *(_BYTE *)(v21 + 16) = v22;
      swift_willThrow();
      return v7;
    }
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_6_38();
  sub_1C29BF420();
  if (v12)
  {
    OUTLINED_FUNCTION_21_28();
    OUTLINED_FUNCTION_24_28();
    v5 = sub_1C2A4988C();
    if (!v5)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v23 = OUTLINED_FUNCTION_118();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED7AA1B0);
      OUTLINED_FUNCTION_13_32();
      v7 = (void *)sub_1C2CFD86C();
      v24 = sub_1C2CFE2B0();
      if (OUTLINED_FUNCTION_116_2(v24))
      {
        OUTLINED_FUNCTION_6_0();
        v28 = OUTLINED_FUNCTION_6_0();
        v25 = OUTLINED_FUNCTION_8_38(4.8149e-34);
        OUTLINED_FUNCTION_20_35(v25);
        OUTLINED_FUNCTION_5_42();
        OUTLINED_FUNCTION_14_22();
        OUTLINED_FUNCTION_9_44(&dword_1C28B6000, v26, v27, "Could not load bundle by libraryPath: '%s'");
        OUTLINED_FUNCTION_49_2();
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_156_2();
      sub_1C2A499F8();
      OUTLINED_FUNCTION_14();
      *(_QWORD *)v21 = v2;
      v22 = 1;
      goto LABEL_21;
    }
LABEL_9:
    v7 = v5;
    OUTLINED_FUNCTION_8();
    return v7;
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED7AA1B0);
  v14 = sub_1C2CFD86C();
  v15 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = OUTLINED_FUNCTION_6_0();
    v28 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v16 = 136315394;
    sub_1C28BB120(0xD000000000000010, 0x80000001C2D29890, &v28);
    OUTLINED_FUNCTION_16_32();
    *(_WORD *)(v16 + 12) = 2080;
    v17 = OUTLINED_FUNCTION_6_38();
    sub_1C28BB120(v17, v18, v19);
    OUTLINED_FUNCTION_16_32();
    _os_log_impl(&dword_1C28B6000, v14, v15, "Neither %s nor %s are specified. Using default Bundle.", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }

  return a1;
}

uint64_t sub_1C2A49060(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2A4907C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_0;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 128);
  type metadata accessor for ParameterWrapper();
  *(_QWORD *)(swift_initStackObject() + 16) = v1;
  swift_bridgeObjectRetain();
  sub_1C2A4917C();
  v2 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v3);
  *(_OWORD *)(v0 + 80) = v7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 56));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, v4, v3);
  sub_1C28B9A04(v0 + 56, v2);
  *(_BYTE *)(v2 + 40) = 1;
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C2A4917C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  NSString *v16;
  Class v17;
  uint64_t ObjCClassMetadata;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  __int128 v30;
  _OWORD *v31;
  NSObject *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  void *v37;

  v2 = sub_1C2A48B48();
  if (!v1)
  {
    v4 = v2;
    v5 = v3;
    v6 = sub_1C2A48B48();
    v8 = v7;
    v9 = sub_1C2A48CA0(*(void **)(v0 + 32));
    if (!objc_msgSend(v9, sel_load))
    {
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_254();
      sub_1C2CFE670();
      OUTLINED_FUNCTION_190();
      *(_QWORD *)&v33 = 0xD000000000000014;
      *((_QWORD *)&v33 + 1) = 0x80000001C2D2F280;
      v15 = objc_msgSend(v9, sel_description);
LABEL_20:
      v27 = v15;
      v28 = v9;
LABEL_21:
      v29 = v27;
      sub_1C2CFDD58();

      sub_1C2CFDE54();
      OUTLINED_FUNCTION_254();
      v30 = v33;
      sub_1C2A49850();
      OUTLINED_FUNCTION_14();
      *v31 = v30;
      swift_willThrow();

      return;
    }
    v37 = v9;
    if (qword_1ED7AA040 != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED7AA1B0);
    swift_bridgeObjectRetain_n();
    v12 = sub_1C2CFD86C();
    v13 = sub_1C2CFE2A4();
    v32 = v12;
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v33 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v36 = sub_1C28BB120(v4, v5, (uint64_t *)&v33);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C28B6000, v32, v13, "Attempting to load %s using Bundle", v14, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    swift_bridgeObjectRelease_n();
    if (sub_1C2A4995C(v37))
    {
      sub_1C28C1A54();
      OUTLINED_FUNCTION_8();
      if (*((_QWORD *)&v34 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v33 = v36;
          swift_bridgeObjectRetain();
          OUTLINED_FUNCTION_18_28();
          OUTLINED_FUNCTION_17_29();
          v16 = (NSString *)sub_1C2CFDD34();
          OUTLINED_FUNCTION_8();
          v17 = NSClassFromString(v16);

          if (v17)
          {
            ObjCClassMetadata = swift_getObjCClassMetadata();
            v19 = dynamic_cast_existential_1_conditional(ObjCClassMetadata);
            if (v19)
            {
              v21 = v19;
              v22 = v20;
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_254();
              v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
              *((_QWORD *)&v34 + 1) = v21;
              v35 = v22;
              __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v33);
              v23(v21, v22);
              v24 = sub_1C29BFB68(0xD000000000000011, 0x80000001C2D2F310, MEMORY[0x1E0DEE9E0]);
              sub_1C290C630(v24);
              v26 = v25;
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(v6, v8, v26, v21, v22);
              OUTLINED_FUNCTION_254();
              OUTLINED_FUNCTION_29();

              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
              return;
            }
          }
          OUTLINED_FUNCTION_29();
          sub_1C2CFE670();
          OUTLINED_FUNCTION_190();
          *(_QWORD *)&v33 = 0xD000000000000012;
          *((_QWORD *)&v33 + 1) = 0x80000001C2D2F2F0;
          sub_1C2CFDE54();
          OUTLINED_FUNCTION_8();
          OUTLINED_FUNCTION_18_28();
          OUTLINED_FUNCTION_17_29();
          OUTLINED_FUNCTION_254();
          sub_1C2CFDE54();
          v28 = v37;
          v27 = objc_msgSend(v37, sel_description);
          goto LABEL_21;
        }
        OUTLINED_FUNCTION_254();
        OUTLINED_FUNCTION_29();
        goto LABEL_19;
      }
    }
    else
    {
      v33 = 0u;
      v34 = 0u;
    }
    OUTLINED_FUNCTION_254();
    OUTLINED_FUNCTION_29();
    sub_1C29D967C((uint64_t)&v33);
LABEL_19:
    v9 = v37;
    *(_QWORD *)&v33 = 0;
    *((_QWORD *)&v33 + 1) = 0xE000000000000000;
    sub_1C2CFE670();
    OUTLINED_FUNCTION_190();
    *(_QWORD *)&v33 = 0xD00000000000002BLL;
    *((_QWORD *)&v33 + 1) = 0x80000001C2D2F2A0;
    v15 = objc_msgSend(v9, sel_description);
    goto LABEL_20;
  }
}

unint64_t sub_1C2A496F4()
{
  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  sub_1C2CFDE54();
  sub_1C2CFDE54();
  return 0xD000000000000017;
}

unint64_t sub_1C2A49780()
{
  return sub_1C2A496F4();
}

uint64_t sub_1C2A49788()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1C2A497AC()
{
  sub_1C2A49788();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExternalFlowBehaviorResponseHandler()
{
  return objc_opt_self();
}

uint64_t sub_1C2A497EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28C33A0;
  return sub_1C2A49060(a1, a2);
}

unint64_t sub_1C2A49850()
{
  unint64_t result;

  result = qword_1EF790C50;
  if (!qword_1EF790C50)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0996C, &type metadata for ExternalFlowBehaviorResponseHandler.ExecuteFlowError);
    atomic_store(result, (unint64_t *)&qword_1EF790C50);
  }
  return result;
}

id sub_1C2A4988C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1C2CFDD34();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithPath_, v1);

  return v2;
}

id sub_1C2A498FC()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1C2CFDD34();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleWithIdentifier_, v0);

  return v1;
}

uint64_t sub_1C2A4995C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_infoDictionary);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C2CFDC68();

  return v3;
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2())
    return a1;
  else
    return 0;
}

unint64_t sub_1C2A499F8()
{
  unint64_t result;

  result = qword_1EF790C58;
  if (!qword_1EF790C58)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D1364C, &type metadata for ParameterError);
    atomic_store(result, (unint64_t *)&qword_1EF790C58);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalFlowBehaviorResponseHandler.ExecuteFlowError()
{
  return &type metadata for ExternalFlowBehaviorResponseHandler.ExecuteFlowError;
}

uint64_t OUTLINED_FUNCTION_1_34()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_42()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_6_38()
{
  return 0x507972617262696CLL;
}

uint64_t OUTLINED_FUNCTION_8_38(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_9_44(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_12_36()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_13_32()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_16_32()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_17_29()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_18_28()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_20_35(uint64_t a1, ...)
{
  unint64_t v1;
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return sub_1C28BB120(v2, v1, (uint64_t *)va);
}

unint64_t OUTLINED_FUNCTION_21_28()
{
  return sub_1C2A28C14();
}

uint64_t OUTLINED_FUNCTION_24_28()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_25_26()
{
  return sub_1C2CD9414();
}

uint64_t sub_1C2A49B50()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeatureChecker()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for FeatureFlagDefinitions.PersonalDomains(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C2A49BCC + 4 * byte_1C2D099F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C2A49C00 + 4 * byte_1C2D099F0[v4]))();
}

uint64_t sub_1C2A49C00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A49C08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A49C10);
  return result;
}

uint64_t sub_1C2A49C1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A49C24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C2A49C28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A49C30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlagDefinitions.PersonalDomains()
{
  return &type metadata for FeatureFlagDefinitions.PersonalDomains;
}

uint64_t storeEnumTagSinglePayload for FeatureFlagDefinitions.Core(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C2A49C98 + 4 * byte_1C2D099FF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C2A49CCC + 4 * byte_1C2D099FA[v4]))();
}

uint64_t sub_1C2A49CCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A49CD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A49CDCLL);
  return result;
}

uint64_t sub_1C2A49CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A49CF0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C2A49CF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A49CFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlagDefinitions.Core()
{
  return &type metadata for FeatureFlagDefinitions.Core;
}

void sub_1C2A49D18()
{
  OUTLINED_FUNCTION_0_47();
}

const char *sub_1C2A49D58()
{
  return "SiriPersonalDomains";
}

void sub_1C2A49D6C()
{
  sub_1C2A49D18();
}

uint64_t sub_1C2A49D88()
{
  char *v0;

  return sub_1C2950340(*v0);
}

uint64_t sub_1C2A49D90(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1C2A49DBC + 4 * byte_1C2D09A04[a1]))("flexible_unlock", 15);
}

void sub_1C2A49DBC()
{
  OUTLINED_FUNCTION_0_47();
}

const char *sub_1C2A49DFC()
{
  return "SiriKitFlow";
}

uint64_t sub_1C2A49E10()
{
  unsigned __int8 *v0;

  return sub_1C2A49D90(*v0);
}

unint64_t sub_1C2A49E30()
{
  unint64_t result;

  result = qword_1EF790C60;
  if (!qword_1EF790C60)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D09AC8, &type metadata for FeatureFlagDefinitions.Core);
    atomic_store(result, (unint64_t *)&qword_1EF790C60);
  }
  return result;
}

unint64_t sub_1C2A49E70()
{
  unint64_t result;

  result = qword_1EF790C68;
  if (!qword_1EF790C68)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D09B60, &type metadata for FeatureFlagDefinitions.PersonalDomains);
    atomic_store(result, &qword_1EF790C68);
  }
  return result;
}

uint64_t sub_1C2A49EAC()
{
  char *v0;

  return sub_1C2950354(*v0);
}

uint64_t sub_1C2A49EBC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  const char *v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  NSObject *v42;
  unint64_t v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  ValueMetadata *v67;
  unint64_t v68;

  v8 = sub_1C2CFBCE8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = 0;
  if (!AFIsInternalInstall())
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v27 = OUTLINED_FUNCTION_118();
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_31_9();
    OUTLINED_FUNCTION_31_9();
    sub_1C2CFD86C();
    v29 = OUTLINED_FUNCTION_30();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = OUTLINED_FUNCTION_6_0();
      v65 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v30 = 136315394;
      swift_bridgeObjectRetain();
      v63 = sub_1C28BB120(a1, a2, &v65);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_26_10();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      v63 = sub_1C28BB120(a3, a4, &v65);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_26_10();
      _os_log_impl(&dword_1C28B6000, v28, v29, "not an internal build. Skipping AutoBugCapture for \"%s\"/\"%s\"", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_29_2();
    OUTLINED_FUNCTION_29_2();
    goto LABEL_34;
  }
  v67 = &type metadata for FeatureFlagDefinitions.PersonalDomains;
  v68 = sub_1C296546C();
  LOBYTE(v65) = 1;
  v14 = sub_1C2CFBE20();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  if ((v14 & 1) != 0)
  {
    v58 = a4;
    v60 = a1;
    v15 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v16 = sub_1C2A4A77C(v15);
    if (!v17)
      goto LABEL_5;
    v65 = v16;
    v66 = v17;
    v63 = 46;
    v64 = 0xE100000000000000;
    sub_1C28BFDA8();
    v18 = sub_1C2CFE4F0();
    OUTLINED_FUNCTION_34_1();
    a4 = sub_1C2904E78(v18);
    v20 = v19;
    swift_bridgeObjectRelease();
    if (!v20)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      a4 = 0;
      v20 = 0xE000000000000000;
    }
    v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0)
      v21 = a4 & 0xFFFFFFFFFFFFLL;
    if (v21)
    {
      v57 = a4;
      v59 = v20;
      v55 = a3;
      sub_1C2CFCF84();
      sub_1C2CFCF78();
      sub_1C2CFCF3C();
      swift_release();
      v22 = sub_1C2CFD188();
      v24 = v23;
      swift_release();
      if (v24)
      {
        v65 = v22;
        v66 = v24;
        v63 = 45;
        v64 = 0xE100000000000000;
        v61 = 95;
        v62 = 0xE100000000000000;
        sub_1C28BFDA8();
        v56 = sub_1C2CFE514();
        v26 = v25;
        OUTLINED_FUNCTION_34_1();
      }
      else
      {
        _s11SiriKitFlow11DeviceStatePAAE10siriLocale10Foundation0G0Vvg_0();
        v56 = sub_1C2CFBCC4();
        v26 = v39;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      }
      v40 = v59;
      if (qword_1ED7AA040 != -1)
        swift_once();
      v41 = OUTLINED_FUNCTION_118();
      v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED7AA1B0);
      OUTLINED_FUNCTION_31_9();
      OUTLINED_FUNCTION_31_9();
      v43 = v58;
      OUTLINED_FUNCTION_31_9();
      OUTLINED_FUNCTION_31_9();
      v54 = v42;
      sub_1C2CFD86C();
      v44 = OUTLINED_FUNCTION_30();
      v45 = v44;
      if (os_log_type_enabled(v42, v44))
      {
        v46 = OUTLINED_FUNCTION_6_0();
        HIDWORD(v52) = v45;
        v47 = v46;
        v53 = OUTLINED_FUNCTION_6_0();
        v65 = v53;
        *(_DWORD *)v47 = 136315906;
        swift_bridgeObjectRetain();
        v63 = sub_1C28BB120(v57, v40, &v65);
        OUTLINED_FUNCTION_3_39();
        OUTLINED_FUNCTION_26_10();
        *(_WORD *)(v47 + 12) = 2080;
        swift_bridgeObjectRetain();
        v63 = sub_1C28BB120(v60, a2, &v65);
        OUTLINED_FUNCTION_3_39();
        OUTLINED_FUNCTION_26_10();
        *(_WORD *)(v47 + 22) = 2080;
        swift_bridgeObjectRetain();
        v63 = sub_1C28BB120(v55, v43, &v65);
        OUTLINED_FUNCTION_3_39();
        OUTLINED_FUNCTION_26_10();
        *(_WORD *)(v47 + 32) = 2080;
        swift_bridgeObjectRetain();
        v63 = sub_1C28BB120(v56, v26, &v65);
        sub_1C2CFE4D8();
        OUTLINED_FUNCTION_26_10();
        _os_log_impl(&dword_1C28B6000, v42, BYTE4(v52), "Filing AutoBugCapture for domain [\"%s\"], errorType[\"%s\"], errorSubType[\"%s\"], subTypeContext[\"%s\"] ..", (uint8_t *)v47, 0x2Au);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_29_2();
      sub_1C2CFD320();
      swift_allocObject();
      sub_1C2CFD314();
      sub_1C2CFD350();
      sub_1C2CFD308();
      OUTLINED_FUNCTION_147();
      swift_bridgeObjectRelease();
      sub_1C2CFD350();
      v48 = sub_1C2CFD86C();
      v49 = sub_1C2CFE2C8();
      if (OUTLINED_FUNCTION_126_0(v49))
      {
        v50 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v50 = 67109120;
        OUTLINED_FUNCTION_9_45();
        LODWORD(v65) = *(unsigned __int8 *)(v13 + 16);
        sub_1C2CFE4D8();
        OUTLINED_FUNCTION_147();
        _os_log_impl(&dword_1C28B6000, v48, (os_log_type_t)v26, "AutoBugCapture result: %{BOOL}d", v50, 8u);
        OUTLINED_FUNCTION_11_0();
      }

      swift_release();
      swift_release();
      OUTLINED_FUNCTION_9_45();
LABEL_34:
      v38 = *(unsigned __int8 *)(v13 + 16);
      OUTLINED_FUNCTION_147();
      return v38;
    }
    OUTLINED_FUNCTION_34_1();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v36 = OUTLINED_FUNCTION_118();
    v32 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED7AA1B0);
    sub_1C2CFD86C();
    v37 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_126_0(v37))
    {
      v34 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v34 = 0;
      v35 = "no domain name found. Skipping AutoBugCapture";
LABEL_24:
      _os_log_impl(&dword_1C28B6000, v32, (os_log_type_t)a4, v35, v34, 2u);
      OUTLINED_FUNCTION_11_0();
    }
  }
  else
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v31 = OUTLINED_FUNCTION_118();
    v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED7AA1B0);
    sub_1C2CFD86C();
    v33 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_126_0(v33))
    {
      v34 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v34 = 0;
      v35 = "AutoBugCapture is disabled";
      goto LABEL_24;
    }
  }
  OUTLINED_FUNCTION_147();

  return 0;
}

uint64_t sub_1C2A4A72C(char a1, uint64_t a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a2 + 16) = a1;
  return result;
}

uint64_t sub_1C2A4A76C()
{
  return swift_deallocObject();
}

uint64_t sub_1C2A4A77C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2)
    return 0;
  v3 = sub_1C2CFDD58();

  return v3;
}

uint64_t sub_1C2A4A7E8(char a1)
{
  uint64_t v1;

  return sub_1C2A4A72C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_3_39()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_9_45()
{
  return swift_beginAccess();
}

void Flow.deferToExecuteAsync(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD v28[5];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_9();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v8, v6);
  v31 = v11;
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_16_3();
  v30 = v0;
  v33 = OUTLINED_FUNCTION_84_11();
  OUTLINED_FUNCTION_125_4();
  v29 = sub_1C2CFDDAC();
  v16 = v15;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v17 = sub_1C2CFD878();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED7AA1B0);
  swift_bridgeObjectRetain();
  v18 = sub_1C2CFD86C();
  v19 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v18, v19))
  {
    v28[3] = v9;
    v20 = OUTLINED_FUNCTION_6_0();
    v28[4] = v7;
    v21 = (uint8_t *)v20;
    v22 = OUTLINED_FUNCTION_6_0();
    v28[1] = v1;
    v33 = v22;
    v28[2] = v10;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain();
    v32 = sub_1C28BB120(v29, v16, &v33);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }

  swift_bridgeObjectRelease_n();
  v23 = sub_1C2CFE10C();
  OUTLINED_FUNCTION_30_0(v1, v24, v25, v23);
  OUTLINED_FUNCTION_45((uint64_t)v12, v30, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  v26 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = 0;
  v27[3] = 0;
  v27[4] = v5;
  v27[5] = v3;
  v27[6] = v9;
  v27[7] = v7;
  OUTLINED_FUNCTION_45((uint64_t)v27 + v26, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
  sub_1C2CFD350();
  sub_1C2948F68();
  swift_release();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A4AAB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_42_17();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C28CD890);
  return OUTLINED_FUNCTION_259(v2, v3);
}

void sub_1C2A4AAF4(uint64_t a1)
{
  sub_1C294FBC0(a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A4AB10()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_42_17();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C28CD890);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t sub_1C2A4AB50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_42_17();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C28CD890);
  return OUTLINED_FUNCTION_259(v2, v3);
}

void static ExecuteResponse.unhandled(reason:)(uint64_t a1@<X8>)
{
  __int16 v2;
  __int16 v3;
  char v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_117_8();
  if (v4)
    v3 = 0;
  v5 = v3 | v2;
  v6 = type metadata accessor for ExecuteResponse(0);
  v7 = a1 + *(int *)(v6 + 36);
  v8 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_30_0(v7, v9, v10, v8);
  *(_BYTE *)a1 = 3;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 34) = 0;
  OUTLINED_FUNCTION_26_26((_OWORD *)(a1 + *(int *)(v6 + 40)));
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A4AC04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_2_41();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_86(v1);
  *v2 = v0;
  v2[1] = sub_1C28E1BA0;
  OUTLINED_FUNCTION_41_16();
  return Flow.execute()(v3, v4, v5);
}

uint64_t sub_1C2A4AC5C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A4AC6C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 24) = swift_task_alloc();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  type metadata accessor for ExecuteResponse(0);
  *v1 = v0;
  v1[1] = sub_1C2A4ACD8;
  OUTLINED_FUNCTION_39_19();
  return OUTLINED_FUNCTION_55_10();
}

uint64_t sub_1C2A4ACD8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A4AD0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2, v5);
  v7 = (char *)&v30 - v6;
  *(_QWORD *)&v32 = &type metadata for SentinalFlow;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF788B88);
  v8 = sub_1C2CFDDAC();
  v10 = v9;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v11 = sub_1C2CFD878();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED7AA1B0);
  swift_bridgeObjectRetain();
  v31 = v12;
  v13 = sub_1C2CFD86C();
  v14 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v13, v14))
  {
    v30 = v4;
    v15 = v11;
    v16 = v8;
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_QWORD *)&v32 = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    v19 = v16;
    v11 = v15;
    *(_QWORD *)&v36 = sub_1C28BB120(v19, v10, (uint64_t *)&v32);
    v4 = v30;
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v18, -1, -1);
    MEMORY[0x1C3BC9DE8](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v20 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v7, v31, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
  sub_1C28C3750((uint64_t)v7, (uint64_t)v4, &qword_1ED7A9EC0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v11) == 1)
  {
    sub_1C28BB37C((uint64_t)v4, &qword_1ED7A9EC0);
  }
  else
  {
    v21 = sub_1C2CFD86C();
    v22 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_QWORD *)&v32 = v24;
      *(_DWORD *)v23 = 136315650;
      v30 = v4;
      v25 = sub_1C2CFE694();
      *(_QWORD *)&v36 = sub_1C28BB120(v25, v26, (uint64_t *)&v32);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2048;
      *(_QWORD *)&v36 = 191;
      sub_1C2CFE4D8();
      *(_WORD *)(v23 + 22) = 2080;
      *(_QWORD *)&v36 = sub_1C28BB120(0xD000000000000022, 0x80000001C2D2F5A0, (uint64_t *)&v32);
      v4 = v30;
      sub_1C2CFE4D8();
      _os_log_impl(&dword_1C28B6000, v21, v22, "FatalError at %s:%lu - %s", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v24, -1, -1);
      MEMORY[0x1C3BC9DE8](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v11);
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v36 = 0u;
  v37 = 0u;
  v34 = 0;
  v32 = 0u;
  v33 = 0u;
  v27 = sub_1C2CFD350();
  LOBYTE(v29) = 44;
  sub_1C2AFA880(v27, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)&v36, 0, 0, (uint64_t)&v32, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, 0xD000000000000022, 0x80000001C2D2F5A0, v29, (uint64_t)v30,
    v31,
    v32,
    *((void **)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    v35,
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    SBYTE8(v37));
  sub_1C28BB37C((uint64_t)&v32, (uint64_t *)&unk_1ED7A8750);
  sub_1C28BB37C((uint64_t)&v36, &qword_1ED7A8480);
  swift_release();
  result = sub_1C2CFE7FC();
  __break(1u);
  return result;
}

void sub_1C2A4B254(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for ExecuteResponse(0);
  MEMORY[0x1E0C80A78](v2, v3);
  sub_1C28DD638(a1, (uint64_t)&v5 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ExecuteResponse);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791188);
  sub_1C2CFE0D0();
  sub_1C28C9F68(a1, type metadata accessor for ExecuteResponse);
}

SiriKitFlow::FlexibleExecutionSupportOptions __swiftcall FlexibleExecutionSupportOptions.init(rawValue:)(SiriKitFlow::FlexibleExecutionSupportOptions rawValue)
{
  SiriKitFlow::FlexibleExecutionSupportOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FlexibleExecutionSupportOptions.executeBeforeEndpoint.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FlexibleExecutionSupportOptions.inputContinuation.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

SiriKitFlow::FlexibleExecutionSupportOptions sub_1C2A4B310(Swift::Int *a1)
{
  return FlexibleExecutionSupportOptions.init(rawValue:)(*a1);
}

uint64_t sub_1C2A4B318(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1C293D138(*a1, *v1);
}

uint64_t sub_1C2A4B324(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1C2AFAB44(*a1, *v1);
}

uint64_t sub_1C2A4B330(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1C293D140(*a1, *v1);
}

uint64_t sub_1C2A4B33C(_QWORD *a1)
{
  return j_j__OUTLINED_FUNCTION_12_17(*a1);
}

uint64_t sub_1C2A4B344(_QWORD *a1)
{
  return j_j__OUTLINED_FUNCTION_58_24(*a1);
}

uint64_t sub_1C2A4B34C(uint64_t *a1)
{
  return sub_1C293D130(*a1);
}

uint64_t sub_1C2A4B354(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1C293D148(*a1, *v1);
}

BOOL sub_1C2A4B360(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1C293D134(*a1, *v1);
}

uint64_t sub_1C2A4B36C(uint64_t *a1)
{
  return sub_1C293D12C(*a1);
}

SiriKitFlow::FlexibleExecutionSupportOptions sub_1C2A4B374@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  SiriKitFlow::FlexibleExecutionSupportOptions result;

  result.rawValue = FlexibleExecutionSupportOptions.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1C2A4B39C(uint64_t *a1@<X8>)
{
  *a1 = FlexibleExecutionSupportOptions.rawValue.getter();
  OUTLINED_FUNCTION_1_0();
}

void Input.init(parse:alternatives:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;

  OUTLINED_FUNCTION_37_2();
  a17 = v18;
  a18 = v19;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v26 = OUTLINED_FUNCTION_70_0();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26, v28);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = (int *)OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_54_18(v25 + v31[7]);
  sub_1C28DD638(v23, v25 + v32, type metadata accessor for Parse);
  *(_QWORD *)(v25 + v31[6]) = v21;
  sub_1C2CFBCA0();
  sub_1C28C9F68(v23, type metadata accessor for Parse);
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v25, v30, v26);
  *(_BYTE *)(v25 + v31[8]) = 0;
  OUTLINED_FUNCTION_11();
}

void Input.init(parse:alternatives:continuationState:)()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_9();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_70_0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  OUTLINED_FUNCTION_2_6();
  v12 = *v2;
  v13 = (int *)OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_54_18(v8 + v13[7]);
  sub_1C28DD638(v6, v8 + v14, type metadata accessor for Parse);
  *(_QWORD *)(v8 + v13[6]) = v4;
  sub_1C2CFBCA0();
  sub_1C28C9F68(v6, type metadata accessor for Parse);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v0, v9);
  *(_BYTE *)(v8 + v13[8]) = v12;
  OUTLINED_FUNCTION_1();
}

void Input.appResolutionState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_66_9();
  sub_1C28C3750(v1 + *(int *)(v2 + 28), v0, &qword_1EF790C90);
  OUTLINED_FUNCTION_1_0();
}

uint64_t Input.appResolutionState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Input(0) + 28);
  return sub_1C2A4CAA4(a1, v3);
}

uint64_t (*Input.appResolutionState.modify())(_QWORD)
{
  type metadata accessor for Input(0);
  return nullsub_1;
}

uint64_t Input.withReformedParse(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = (int *)type metadata accessor for Input(0);
  sub_1C28DD638(a1, a2 + v5[5], type metadata accessor for Parse);
  v6 = *(_QWORD *)(v2 + v5[6]);
  v7 = OUTLINED_FUNCTION_70_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, v2, v7);
  v8 = a2 + v5[7];
  *(_QWORD *)(v8 + 32) = 0;
  OUTLINED_FUNCTION_26_26((_OWORD *)v8);
  *(_QWORD *)(a2 + v5[6]) = v6;
  *(_BYTE *)(a2 + v5[8]) = 0;
  return swift_bridgeObjectRetain();
}

void Input.continuationState.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_66_9() + 32));
  OUTLINED_FUNCTION_1_0();
}

void Input.continuationState.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for Input(0) + 32)) = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*Input.continuationState.modify())(_QWORD)
{
  type metadata accessor for Input(0);
  return nullsub_1;
}

void sub_1C2A4B6CC()
{
  sub_1C2CFE868();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A4B714(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_44_17_0
                                                            + 4 * byte_1C2D09BB0[a1]))(0x6573726170, 0xE500000000000000);
}

unint64_t sub_1C2A4B74C()
{
  return 0xD000000000000011;
}

void sub_1C2A4B768(char *a1)
{
  sub_1C2AF8530(*a1);
}

void sub_1C2A4B774()
{
  sub_1C293B4F0();
}

void sub_1C2A4B77C(uint64_t a1)
{
  char *v1;

  sub_1C2AB006C(a1, *v1);
}

void sub_1C2A4B784()
{
  sub_1C293BBD4();
}

void sub_1C2A4B78C(_BYTE *a1@<X8>)
{
  char v2;

  sub_1C2A4B6CC();
  *a1 = v2;
}

void sub_1C2A4B7B8(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1C2A4B714(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A4B7DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C2A4B710();
  *a1 = result;
  return result;
}

void sub_1C2A4B800(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C2A4B80C()
{
  sub_1C28C3DD0();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A4B834()
{
  sub_1C28C3DD0();
  return sub_1C2CFEB2C();
}

uint64_t LoadedFlowInfo.flow.getter()
{
  return sub_1C2CFD350();
}

void LoadedFlowInfo.actingFlow.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C28B9A48(v1 + 8, a1);
}

void LoadedFlowInfo.parse.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_106_5();
  sub_1C28DD638(v1 + *(int *)(v2 + 24), v0, type metadata accessor for Parse);
  OUTLINED_FUNCTION_1_0();
}

uint64_t LoadedFlowInfo.activeTasks.getter()
{
  type metadata accessor for LoadedFlowInfo(0);
  return swift_bridgeObjectRetain();
}

void LoadedFlowInfo.fromBundle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_106_5();
  sub_1C28B9A48(v1 + *(int *)(v2 + 32), v0);
  OUTLINED_FUNCTION_1_0();
}

uint64_t LoadedFlowInfo.init(flow:parse:activeTasks:fromBundle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  int *v10;

  *a5 = a1;
  a5[4] = type metadata accessor for FlowToActingFlowAdapter(0);
  a5[5] = &off_1EF791908;
  swift_allocObject();
  v9 = sub_1C2CFD350();
  a5[1] = sub_1C28C8F94(v9);
  v10 = (int *)type metadata accessor for LoadedFlowInfo(0);
  sub_1C28C53CC(a2, (uint64_t)a5 + v10[6]);
  *(_QWORD *)((char *)a5 + v10[7]) = a3;
  return sub_1C28B99EC(a4, (uint64_t)a5 + v10[8]);
}

uint64_t LoadedFlowInfo.init<A>(actingFlow:parse:activeTasks:fromBundle:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;

  OUTLINED_FUNCTION_37_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  type metadata accessor for AnyFlow();
  OUTLINED_FUNCTION_5_2();
  sub_1C2950638();
  *v11 = v12;
  v11[4] = v3;
  v11[5] = v1;
  __swift_allocate_boxed_opaque_existential_1Tm(v11 + 1);
  (*(void (**)(void))(*(_QWORD *)(v3 - 8) + 32))();
  v13 = (int *)type metadata accessor for LoadedFlowInfo(0);
  sub_1C28C53CC(v9, (uint64_t)v11 + v13[6]);
  *(_QWORD *)((char *)v11 + v13[7]) = v7;
  return sub_1C28B99EC(v5, (uint64_t)v11 + v13[8]);
}

BOOL static InputContinuationState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void InputContinuationState.hash(into:)()
{
  OUTLINED_FUNCTION_90_6();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A4BA84()
{
  sub_1C28C584C();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A4BAAC()
{
  sub_1C28C584C();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A4BAD4()
{
  sub_1C2A4CB00();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A4BAFC()
{
  sub_1C2A4CB00();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A4BB24()
{
  sub_1C28C5AFC();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A4BB4C()
{
  sub_1C28C5AFC();
  return sub_1C2CFEB2C();
}

void InputContinuationState.hashValue.getter()
{
  OUTLINED_FUNCTION_95_8();
  OUTLINED_FUNCTION_68_13();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_3();
}

void sub_1C2A4BBA4()
{
  sub_1C2CFEAB4();
  OUTLINED_FUNCTION_68_13();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_3();
}

BOOL static ExecuteResponseType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void ExecuteResponseType.hash(into:)()
{
  OUTLINED_FUNCTION_90_6();
  OUTLINED_FUNCTION_1_0();
}

void ExecuteResponseType.hashValue.getter()
{
  OUTLINED_FUNCTION_95_8();
  OUTLINED_FUNCTION_68_13();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_3();
}

uint64_t static PrescribedTool.== infix(_:_:)()
{
  return 1;
}

void AnyChildCompletion.__allocating_init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_136_1();
  v2 = OUTLINED_FUNCTION_38_8();
  v3 = OUTLINED_FUNCTION_38_8();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(v2 + 16) = sub_1C28D0C70;
  *(_QWORD *)(v2 + 24) = v3;
  OUTLINED_FUNCTION_18();
}

void AnyChildCompletion.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_136_1();
  v3 = OUTLINED_FUNCTION_38_8();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(v1 + 16) = sub_1C2A52DD0;
  *(_QWORD *)(v1 + 24) = v3;
  OUTLINED_FUNCTION_18();
}

uint64_t AnyChildCompletion.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13_1();
  return v0;
}

void static ExecuteResponse.ongoing<A>(next:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_15();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_5_43();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v4);
  *(_BYTE *)v0 = 0;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 24) = 0;
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_8_0();
}

uint64_t static ExecuteResponse.ongoing<A>(next:)@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_5_43();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  *a1 = 0;
  OUTLINED_FUNCTION_20_36();
  return OUTLINED_FUNCTION_8_39();
}

uint64_t static ExecuteResponse.ongoing(next:childCompletion:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_67_9();
  v3 = OUTLINED_FUNCTION_38_8();
  v4 = OUTLINED_FUNCTION_38_8();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v0;
  *(_QWORD *)(v3 + 16) = sub_1C2A52DD0;
  *(_QWORD *)(v3 + 24) = v4;
  v5 = (uint64_t)&v2[*(int *)(type metadata accessor for ExecuteResponse(0) + 36)];
  v6 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_30_0(v5, v7, v8, v6);
  *v2 = 0;
  OUTLINED_FUNCTION_33_16();
  return OUTLINED_FUNCTION_16_33();
}

uint64_t static ExecuteResponse.ongoing(next:)()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_11_34();
  OUTLINED_FUNCTION_91_12(v0);
  OUTLINED_FUNCTION_19_29();
  return OUTLINED_FUNCTION_8_39();
}

uint64_t static ExecuteResponse.ongoing(retrigger:as:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  OUTLINED_FUNCTION_37_2();
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_110_5();
  v7 = v6;
  v8 = type metadata accessor for ExecuteResponse(0);
  v9 = v7 + *(int *)(v8 + 36);
  v10 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_30_0(v9, v11, v12, v10);
  *(_BYTE *)v7 = 0;
  *(_QWORD *)(v7 + 8) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_BYTE *)(v7 + 16) = 1;
  *(_WORD *)(v7 + 32) = 0;
  *(_BYTE *)(v7 + 34) = 1;
  v13 = (_QWORD *)(v7 + *(int *)(v8 + 40));
  *v13 = v1;
  v13[1] = v0;
  v13[2] = v5;
  v13[3] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void static ExecuteResponse.complete<A>(next:childCompletion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_22_28();
  OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_41_17();
  OUTLINED_FUNCTION_64_10();
  OUTLINED_FUNCTION_52_16();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_5_43();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v5);
  *(_BYTE *)v0 = 1;
  *(_QWORD *)(v0 + 8) = v2;
  *(_QWORD *)(v0 + 24) = v4;
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_11();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_58_15();
  OUTLINED_FUNCTION_87_8();
  OUTLINED_FUNCTION_221();
  OUTLINED_FUNCTION_85_8();
  v3 = v2;
  v4 = type metadata accessor for ExecuteResponse(0);
  v5 = v0 + *(int *)(v4 + 36);
  v6 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_30_0(v5, v7, v8, v6);
  *(_BYTE *)v0 = 1;
  *(_QWORD *)(v0 + 8) = v1;
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 16) = 0;
  *(_WORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 34) = 1;
  OUTLINED_FUNCTION_26_26((_OWORD *)(v0 + *(int *)(v4 + 40)));
  OUTLINED_FUNCTION_8_0();
}

uint64_t static ExecuteResponse.complete(next:childCompletion:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_67_9();
  v3 = OUTLINED_FUNCTION_38_8();
  v4 = OUTLINED_FUNCTION_38_8();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v0;
  *(_QWORD *)(v3 + 16) = sub_1C2A52DD0;
  *(_QWORD *)(v3 + 24) = v4;
  v5 = (uint64_t)&v2[*(int *)(type metadata accessor for ExecuteResponse(0) + 36)];
  v6 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_30_0(v5, v7, v8, v6);
  *v2 = 1;
  OUTLINED_FUNCTION_33_16();
  return OUTLINED_FUNCTION_16_33();
}

void static ExecuteResponse.replan<A>(next:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_40_15();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_5_43();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v4);
  *(_BYTE *)v0 = 2;
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 24) = 0;
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_8_0();
}

void static ExecuteResponse.replan<A>(next:childCompletion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_22_28();
  OUTLINED_FUNCTION_128_5();
  OUTLINED_FUNCTION_41_17();
  OUTLINED_FUNCTION_64_10();
  OUTLINED_FUNCTION_52_16();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_5_43();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v5);
  *(_BYTE *)v0 = 2;
  *(_QWORD *)(v0 + 8) = v2;
  *(_QWORD *)(v0 + 24) = v4;
  OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_11();
}

uint64_t static ExecuteResponse.replan<A>(next:childCompletion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_37_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = *(_QWORD *)(v6 + 32);
  type metadata accessor for AnyChildCompletion();
  v8 = OUTLINED_FUNCTION_38_8();
  v9 = OUTLINED_FUNCTION_38_8();
  *(_QWORD *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v1;
  *(_QWORD *)(v8 + 16) = sub_1C2A52DD0;
  *(_QWORD *)(v8 + 24) = v9;
  type metadata accessor for ExecuteResponse(0);
  v10 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_70_7(v10);
  *(_QWORD *)(v5 + 8) = v7;
  OUTLINED_FUNCTION_36_24();
  return OUTLINED_FUNCTION_16_33();
}

uint64_t static ExecuteResponse.replan<A>(next:)@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_5_43();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  *a1 = 2;
  OUTLINED_FUNCTION_20_36();
  return OUTLINED_FUNCTION_8_39();
}

uint64_t static ExecuteResponse.replan(next:childCompletion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_37_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  type metadata accessor for AnyChildCompletion();
  v8 = OUTLINED_FUNCTION_38_8();
  v9 = OUTLINED_FUNCTION_38_8();
  *(_QWORD *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v1;
  *(_QWORD *)(v8 + 16) = sub_1C2A52DD0;
  *(_QWORD *)(v8 + 24) = v9;
  type metadata accessor for ExecuteResponse(0);
  v10 = OUTLINED_FUNCTION_12_37();
  OUTLINED_FUNCTION_70_7(v10);
  *(_QWORD *)(v7 + 8) = v5;
  OUTLINED_FUNCTION_36_24();
  return OUTLINED_FUNCTION_16_33();
}

uint64_t static ExecuteResponse.replan(next:)()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_11_34();
  OUTLINED_FUNCTION_69_10(v0);
  OUTLINED_FUNCTION_19_29();
  return OUTLINED_FUNCTION_8_39();
}

void static ExecuteResponse.redirect(nextPluginAction:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for ExecuteResponse(0);
  v5 = a2 + *(int *)(v4 + 36);
  sub_1C28DD638(a1, v5, (uint64_t (*)(_QWORD))type metadata accessor for PluginAction);
  v6 = OUTLINED_FUNCTION_12_37();
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v6);
  *(_BYTE *)a2 = 1;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_WORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 34) = 1;
  OUTLINED_FUNCTION_26_26((_OWORD *)(a2 + *(int *)(v4 + 40)));
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A4C2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for ExecuteResponse(0);
  v11 = swift_task_alloc();
  v8[4] = v11;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 40) + *(_QWORD *)(a8 + 40));
  v12 = (_QWORD *)swift_task_alloc();
  v8[5] = v12;
  *v12 = v8;
  v12[1] = sub_1C2A4C370;
  return v14(v11, a7, a8);
}

uint64_t sub_1C2A4C370()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  return swift_task_switch();
}

uint64_t sub_1C2A4C3B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_1C28C9F68(v1, type metadata accessor for ExecuteResponse);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2A4C400()
{
  return sub_1C28D4964();
}

void sub_1C2A4C42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  OUTLINED_FUNCTION_73_10(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  v8 = OUTLINED_FUNCTION_62_15();
  OUTLINED_FUNCTION_72_8(v8);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_1C2A4C464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;

  OUTLINED_FUNCTION_73_10(a1, a2, a3, a4, a5, a6, a7, a8, v9);
  return swift_dynamicCast();
}

uint64_t sub_1C2A4C4A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1C2CFD350();
  return sub_1C28CC554(v0, v1, v2, v3, v4);
}

void sub_1C2A4C4C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a1[1] = v5;
  *a1 = sub_1C28CCF54((uint64_t)a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A4C4F8(uint64_t *a1, char a2)
{
  sub_1C2A4C6DC(a1, a2, (void (*)(uint64_t))sub_1C28CC554);
}

void (*sub_1C2A4C504(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  a1[1] = *v5;
  *a1 = sub_1C28CCF54((uint64_t)a1, a2, a3, a4, a5);
  return sub_1C2A4C53C;
}

void sub_1C2A4C53C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((a2 & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_221();
    sub_1C28CC554(v5, v6, v7, v8, v9);
    swift_release();
  }
  else
  {
    sub_1C28CC554(*a1, a2, a3, a4, a5);
    OUTLINED_FUNCTION_1_0();
  }
}

void sub_1C2A4C578()
{
  sub_1C2927088();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A4C598()
{
  return sub_1C2A4C428();
}

void sub_1C2A4C5B8()
{
  sub_1C2909BEC();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A4C5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_136_1();
  v3 = type metadata accessor for AnyValueFlow(0, *(_QWORD *)(*(_QWORD *)v0 + 80), v1, v2);
  MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyValueFlow<A>, v3);
  Flow.deferToExecuteAsync(_:)();
}

void sub_1C2A4C640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1C2A4C42C(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A4C65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1C28CC198(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A4C678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1C2CFD350();
  sub_1C290FC18(v0, v1, v2, v3, v4);
}

void sub_1C2A4C6A0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;

  a1[1] = v5;
  sub_1C290FC54((uint64_t)a1, a2, a3, a4, a5);
  *a1 = v7;
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A4C6D0(uint64_t *a1, char a2)
{
  sub_1C2A4C6DC(a1, a2, (void (*)(uint64_t))sub_1C290FC18);
}

void sub_1C2A4C6DC(uint64_t *a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    v4 = sub_1C2CFD350();
    a3(v4);
    swift_release();
  }
  else
  {
    a3(*a1);
    OUTLINED_FUNCTION_18();
  }
}

void (*sub_1C2A4C728(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C2A4C6A0(v2, v3, v4, v5, v6);
  v2[4] = v7;
  return sub_1C294AB94;
}

void sub_1C2A4C770()
{
  sub_1C2A4C5D4();
}

uint64_t sub_1C2A4C790(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v3 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28CD890;
  return v5(a1);
}

uint64_t sub_1C2A4C7E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = OUTLINED_FUNCTION_9_6();
  v4 = (_QWORD *)OUTLINED_FUNCTION_86(v3);
  *v4 = v1;
  v4[1] = sub_1C28BCB84;
  return v6(a1);
}

uint64_t sub_1C2A4C830()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_2_41();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_1_35(v1, (uint64_t)sub_1C2964298);
  return OUTLINED_FUNCTION_0_48(v2, v3, v4);
}

uint64_t sub_1C2A4C870()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_42_17();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C28CD890);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t sub_1C2A4C8B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_42_17();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C28CD890);
  return OUTLINED_FUNCTION_259(v2, v3);
}

void sub_1C2A4C8F0(uint64_t a1)
{
  nullsub_1(a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A4C90C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_42_17();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C28CD890);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t sub_1C2A4C94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C2A4C9C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = v0[4];
  v2 = v0[5];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = v0[2];
  v5 = v0[3];
  v6 = v0[6];
  v7 = v0[7];
  v8 = (uint64_t)v0 + ((v3 + 64) & ~v3);
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_86(v9);
  v11 = OUTLINED_FUNCTION_10_0(v10);
  return sub_1C2A4C2CC(v11, v4, v5, v6, v7, v8, v1, v2);
}

uint64_t sub_1C2A4CA58()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_42_17();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C28CD890);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t sub_1C2A4CA98(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C28D3840(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1C2A4CAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LoadedFlowInfo(uint64_t a1)
{
  return sub_1C28B9018(a1, qword_1EF790E10);
}

unint64_t sub_1C2A4CB00()
{
  unint64_t result;

  result = qword_1EF790C98;
  if (!qword_1EF790C98)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0A7B8, &type metadata for InputContinuationState.ContinuationCodingKeys);
    atomic_store(result, &qword_1EF790C98);
  }
  return result;
}

uint64_t sub_1C2A4CB3C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A4CB60()
{
  OUTLINED_FUNCTION_13_1();
  return swift_deallocObject();
}

uint64_t sub_1C2A4CB80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_2(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

unint64_t sub_1C2A4CBB4()
{
  unint64_t result;

  result = qword_1EF790CC0;
  if (!qword_1EF790CC0)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for FlexibleExecutionSupportOptions, &type metadata for FlexibleExecutionSupportOptions);
    atomic_store(result, (unint64_t *)&qword_1EF790CC0);
  }
  return result;
}

unint64_t sub_1C2A4CBF4()
{
  unint64_t result;

  result = qword_1EF790CC8;
  if (!qword_1EF790CC8)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for FlexibleExecutionSupportOptions, &type metadata for FlexibleExecutionSupportOptions);
    atomic_store(result, (unint64_t *)&qword_1EF790CC8);
  }
  return result;
}

unint64_t sub_1C2A4CC30()
{
  unint64_t result;

  result = qword_1EF790CD0;
  if (!qword_1EF790CD0)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for FlexibleExecutionSupportOptions, &type metadata for FlexibleExecutionSupportOptions);
    atomic_store(result, (unint64_t *)&qword_1EF790CD0);
  }
  return result;
}

unint64_t sub_1C2A4CC6C()
{
  unint64_t result;

  result = qword_1EF790CD8;
  if (!qword_1EF790CD8)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for FlexibleExecutionSupportOptions, &type metadata for FlexibleExecutionSupportOptions);
    atomic_store(result, (unint64_t *)&qword_1EF790CD8);
  }
  return result;
}

unint64_t sub_1C2A4CCB0()
{
  unint64_t result;

  result = qword_1EF790CE8;
  if (!qword_1EF790CE8)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for ExecuteResponseType, &type metadata for ExecuteResponseType);
    atomic_store(result, (unint64_t *)&qword_1EF790CE8);
  }
  return result;
}

void sub_1C2A4CCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1C28C3364(&qword_1EF790CF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for AnyFlow, (uint64_t)&protocol conformance descriptor for AnyFlow);
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t sub_1C2A4CD28(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyValueFlow<A>);
  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyValueFlow<A>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_1C2A4CD6C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  *a6 = sub_1C28CCF54(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A4CD94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;

  sub_1C290FC54(a1, a2, a3, a4, a5);
  *a6 = v7;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A4CDBC()
{
  return 8;
}

_QWORD *sub_1C2A4CDC8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t dispatch thunk of Flow.on(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Flow.onAsync(input:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_2_41();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_1_35(v1, (uint64_t)sub_1C28CD890);
  return v4(v2);
}

uint64_t dispatch thunk of Flow.execute(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of Flow.execute()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_2_41();
  v4 = OUTLINED_FUNCTION_12_0();
  v5 = (_QWORD *)OUTLINED_FUNCTION_86(v4);
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return v7(v3, v1, v0);
}

uint64_t dispatch thunk of Flow.exitValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Flow.flexibleExecutionSupport.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

_QWORD *initializeBufferWithCopyOfBuffer for Input(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C2CFD350();
  }
  else
  {
    v7 = sub_1C2CFBCAC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v12 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
        goto LABEL_19;
      case 1u:
        v14 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)((char *)v9 + *(int *)(v15 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v15 + 48));
        sub_1C2CFD350();
        goto LABEL_19;
      case 2u:
        v16 = v10[1];
        *v9 = *v10;
        v9[1] = v16;
        v9[2] = v10[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 3u:
        *v9 = *v10;
        swift_unknownObjectRetain();
        goto LABEL_19;
      case 4u:
        v17 = sub_1C2CFBD9C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
        goto LABEL_19;
      case 5u:
        v18 = (void *)*v10;
        *v9 = *v10;
        v19 = v18;
        goto LABEL_19;
      case 6u:
        v20 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v9, v10, v20);
        v21 = (int *)type metadata accessor for USOParse();
        v22 = v21[5];
        v23 = (char *)v9 + v22;
        v24 = (char *)v10 + v22;
        v25 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
        }
        v34 = v21[6];
        v35 = (_QWORD *)((char *)v9 + v34);
        v36 = (_QWORD *)((char *)v10 + v34);
        v37 = v36[1];
        *v35 = *v36;
        v35[1] = v37;
        v38 = v21[7];
        v39 = (char *)v9 + v38;
        v40 = (char *)v10 + v38;
        v39[4] = v40[4];
        *(_DWORD *)v39 = *(_DWORD *)v40;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 7u:
        v27 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v9, v10, v27);
        v28 = (int *)type metadata accessor for USOParse();
        v29 = v28[5];
        v30 = (char *)v9 + v29;
        v31 = (char *)v10 + v29;
        v32 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
          __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
        }
        v41 = v28[6];
        v42 = (_QWORD *)((char *)v9 + v41);
        v43 = (_QWORD *)((char *)v10 + v41);
        v44 = v43[1];
        *v42 = *v43;
        v42[1] = v44;
        v45 = v28[7];
        v46 = (char *)v9 + v45;
        v47 = (char *)v10 + v45;
        v46[4] = v47[4];
        *(_DWORD *)v46 = *(_DWORD *)v47;
        v48 = (int *)type metadata accessor for LinkParse();
        v49 = v48[5];
        v50 = (_QWORD *)((char *)v9 + v49);
        v51 = (_QWORD *)((char *)v10 + v49);
        v52 = v51[1];
        *v50 = *v51;
        v50[1] = v52;
        v53 = v48[6];
        v54 = (_QWORD *)((char *)v9 + v53);
        v55 = (_QWORD *)((char *)v10 + v53);
        v56 = v55[1];
        *v54 = *v55;
        v54[1] = v56;
        v57 = v48[7];
        v58 = (_QWORD *)((char *)v9 + v57);
        v59 = (_QWORD *)((char *)v10 + v57);
        v60 = v59[1];
        *v58 = *v59;
        v58[1] = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        break;
    }
    v61 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v62 = (char *)a1 + v61;
    v63 = (char *)a2 + v61;
    v64 = *(_QWORD *)((char *)a2 + v61 + 24);
    swift_bridgeObjectRetain();
    if (v64)
    {
      v65 = *((_QWORD *)v63 + 4);
      *((_QWORD *)v62 + 3) = v64;
      *((_QWORD *)v62 + 4) = v65;
      (**(void (***)(char *, char *, uint64_t))(v64 - 8))(v62, v63, v64);
    }
    else
    {
      v66 = *((_OWORD *)v63 + 1);
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v66;
      *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
    }
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return a1;
}

uint64_t assignWithCopy for Input(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 *v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;

  v6 = sub_1C2CFBCAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_1C28C9F68(a1 + v7, type metadata accessor for Parse);
    v10 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v11 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
        goto LABEL_18;
      case 1u:
        v12 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)((char *)v8 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)v9 + *(int *)(v13 + 48));
        sub_1C2CFD350();
        goto LABEL_18;
      case 2u:
        *v8 = *v9;
        v8[1] = v9[1];
        v8[2] = v9[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 3u:
        *v8 = *v9;
        swift_unknownObjectRetain();
        goto LABEL_18;
      case 4u:
        v14 = sub_1C2CFBD9C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
        goto LABEL_18;
      case 5u:
        v15 = (void *)*v9;
        *v8 = *v9;
        v16 = v15;
        goto LABEL_18;
      case 6u:
        v17 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v9, v17);
        v18 = (int *)type metadata accessor for USOParse();
        v19 = v18[5];
        v20 = (char *)v8 + v19;
        v21 = (char *)v9 + v19;
        v22 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
        }
        v31 = v18[6];
        v32 = (_QWORD *)((char *)v8 + v31);
        v33 = (_QWORD *)((char *)v9 + v31);
        *v32 = *v33;
        v32[1] = v33[1];
        v34 = v18[7];
        v35 = (char *)v8 + v34;
        v36 = (char *)v9 + v34;
        v37 = *(_DWORD *)v36;
        v35[4] = v36[4];
        *(_DWORD *)v35 = v37;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 7u:
        v24 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v9, v24);
        v25 = (int *)type metadata accessor for USOParse();
        v26 = v25[5];
        v27 = (char *)v8 + v26;
        v28 = (char *)v9 + v26;
        v29 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
        }
        v38 = v25[6];
        v39 = (_QWORD *)((char *)v8 + v38);
        v40 = (_QWORD *)((char *)v9 + v38);
        *v39 = *v40;
        v39[1] = v40[1];
        v41 = v25[7];
        v42 = (char *)v8 + v41;
        v43 = (char *)v9 + v41;
        v44 = *(_DWORD *)v43;
        v42[4] = v43[4];
        *(_DWORD *)v42 = v44;
        v45 = (int *)type metadata accessor for LinkParse();
        v46 = v45[5];
        v47 = (_QWORD *)((char *)v8 + v46);
        v48 = (_QWORD *)((char *)v9 + v46);
        *v47 = *v48;
        v47[1] = v48[1];
        v49 = v45[6];
        v50 = (_QWORD *)((char *)v8 + v49);
        v51 = (_QWORD *)((char *)v9 + v49);
        *v50 = *v51;
        v50[1] = v51[1];
        v52 = v45[7];
        v53 = (_QWORD *)((char *)v8 + v52);
        v54 = (_QWORD *)((char *)v9 + v52);
        *v53 = *v54;
        v53[1] = v54[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55 = a3[7];
  v56 = a1 + v55;
  v57 = (__int128 *)(a2 + v55);
  v58 = *(_QWORD *)(a2 + v55 + 24);
  if (!*(_QWORD *)(a1 + v55 + 24))
  {
    if (v58)
    {
      *(_QWORD *)(v56 + 24) = v58;
      *(_QWORD *)(v56 + 32) = *((_QWORD *)v57 + 4);
      (**(void (***)(uint64_t, __int128 *))(v58 - 8))(v56, v57);
      goto LABEL_26;
    }
LABEL_25:
    v59 = *v57;
    v60 = v57[1];
    *(_QWORD *)(v56 + 32) = *((_QWORD *)v57 + 4);
    *(_OWORD *)v56 = v59;
    *(_OWORD *)(v56 + 16) = v60;
    goto LABEL_26;
  }
  if (!v58)
  {
    __swift_destroy_boxed_opaque_existential_1(v56);
    goto LABEL_25;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v56, (uint64_t *)v57);
LABEL_26:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for Input(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;

  v6 = sub_1C2CFBCAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v11 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      goto LABEL_14;
    case 1u:
      v12 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      *(_QWORD *)&v8[*(int *)(v13 + 48)] = *(_QWORD *)&v9[*(int *)(v13 + 48)];
      goto LABEL_14;
    case 4u:
      v14 = sub_1C2CFBD9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v8, v9, v14);
      goto LABEL_14;
    case 6u:
      v15 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
      v16 = (int *)type metadata accessor for USOParse();
      v17 = v16[5];
      v18 = &v8[v17];
      v19 = &v9[v17];
      v20 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      }
      *(_OWORD *)&v8[v16[6]] = *(_OWORD *)&v9[v16[6]];
      v29 = v16[7];
      v30 = &v8[v29];
      v31 = &v9[v29];
      v30[4] = v31[4];
      *(_DWORD *)v30 = *(_DWORD *)v31;
      goto LABEL_14;
    case 7u:
      v22 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v8, v9, v22);
      v23 = (int *)type metadata accessor for USOParse();
      v24 = v23[5];
      v25 = &v8[v24];
      v26 = &v9[v24];
      v27 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
      }
      *(_OWORD *)&v8[v23[6]] = *(_OWORD *)&v9[v23[6]];
      v32 = v23[7];
      v33 = &v8[v32];
      v34 = &v9[v32];
      v33[4] = v34[4];
      *(_DWORD *)v33 = *(_DWORD *)v34;
      v35 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v8[v35[5]] = *(_OWORD *)&v9[v35[5]];
      *(_OWORD *)&v8[v35[6]] = *(_OWORD *)&v9[v35[6]];
      *(_OWORD *)&v8[v35[7]] = *(_OWORD *)&v9[v35[7]];
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      break;
  }
  v36 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for Input(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;

  v6 = sub_1C2CFBCAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)(a1 + v7);
    v9 = (char *)(a2 + v7);
    sub_1C28C9F68(a1 + v7, type metadata accessor for Parse);
    v10 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v11 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
        goto LABEL_15;
      case 1u:
        v12 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v8[*(int *)(v13 + 48)] = *(_QWORD *)&v9[*(int *)(v13 + 48)];
        goto LABEL_15;
      case 4u:
        v14 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v8, v9, v14);
        goto LABEL_15;
      case 6u:
        v15 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
        v16 = (int *)type metadata accessor for USOParse();
        v17 = v16[5];
        v18 = &v8[v17];
        v19 = &v9[v17];
        v20 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
          __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
        }
        *(_OWORD *)&v8[v16[6]] = *(_OWORD *)&v9[v16[6]];
        v29 = v16[7];
        v30 = &v8[v29];
        v31 = &v9[v29];
        v30[4] = v31[4];
        *(_DWORD *)v30 = *(_DWORD *)v31;
        goto LABEL_15;
      case 7u:
        v22 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v8, v9, v22);
        v23 = (int *)type metadata accessor for USOParse();
        v24 = v23[5];
        v25 = &v8[v24];
        v26 = &v9[v24];
        v27 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
        }
        *(_OWORD *)&v8[v23[6]] = *(_OWORD *)&v9[v23[6]];
        v32 = v23[7];
        v33 = &v8[v32];
        v34 = &v9[v32];
        v33[4] = v34[4];
        *(_DWORD *)v33 = *(_DWORD *)v34;
        v35 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v8[v35[5]] = *(_OWORD *)&v9[v35[5]];
        *(_OWORD *)&v8[v35[6]] = *(_OWORD *)&v9[v35[6]];
        *(_OWORD *)&v8[v35[7]] = *(_OWORD *)&v9[v35[7]];
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v36 = a3[7];
  v37 = a1 + v36;
  if (*(_QWORD *)(a1 + v36 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1 + v36);
  v38 = *(_OWORD *)(a2 + v36 + 16);
  *(_OWORD *)v37 = *(_OWORD *)(a2 + v36);
  *(_OWORD *)(v37 + 16) = v38;
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(a2 + v36 + 32);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

void sub_1C2A4DF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_70_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
LABEL_5:
    OUTLINED_FUNCTION_8_10(v8, a2, v7);
    return;
  }
  v9 = OUTLINED_FUNCTION_73();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_32_2(*(_QWORD *)(a1 + *(int *)(a3 + 24)));
  OUTLINED_FUNCTION_18();
}

void sub_1C2A4DFF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_70_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
LABEL_5:
    OUTLINED_FUNCTION_7_8(v10, a2, a2, v9);
    return;
  }
  v11 = OUTLINED_FUNCTION_73();
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a1 + *(int *)(a4 + 20);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A4E078()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C2CFBCAC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Parse(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LoadedFlowInfo(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    sub_1C2CFD350();
  }
  else
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    sub_1C2CFD350();
    v11(a1 + 8, v8, v10);
    v12 = a3[6];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v16 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
        goto LABEL_19;
      case 1u:
        v17 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v13, v14, v17);
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)((char *)v13 + *(int *)(v18 + 48)) = *(_QWORD *)((char *)v14 + *(int *)(v18 + 48));
        sub_1C2CFD350();
        goto LABEL_19;
      case 2u:
        v19 = v14[1];
        *v13 = *v14;
        v13[1] = v19;
        v13[2] = v14[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 3u:
        *v13 = *v14;
        swift_unknownObjectRetain();
        goto LABEL_19;
      case 4u:
        v20 = sub_1C2CFBD9C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v13, v14, v20);
        goto LABEL_19;
      case 5u:
        v21 = (void *)*v14;
        *v13 = *v14;
        v22 = v21;
        goto LABEL_19;
      case 6u:
        v23 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v13, v14, v23);
        v24 = (int *)type metadata accessor for USOParse();
        v25 = v24[5];
        v26 = (char *)v13 + v25;
        v27 = (char *)v14 + v25;
        v28 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
          __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
        }
        v37 = v24[6];
        v38 = (_QWORD *)((char *)v13 + v37);
        v39 = (_QWORD *)((char *)v14 + v37);
        v40 = v39[1];
        *v38 = *v39;
        v38[1] = v40;
        v41 = v24[7];
        v42 = (char *)v13 + v41;
        v43 = (char *)v14 + v41;
        v42[4] = v43[4];
        *(_DWORD *)v42 = *(_DWORD *)v43;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 7u:
        v30 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v13, v14, v30);
        v31 = (int *)type metadata accessor for USOParse();
        v32 = v31[5];
        v33 = (char *)v13 + v32;
        v34 = (char *)v14 + v32;
        v35 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
        }
        v44 = v31[6];
        v45 = (_QWORD *)((char *)v13 + v44);
        v46 = (_QWORD *)((char *)v14 + v44);
        v47 = v46[1];
        *v45 = *v46;
        v45[1] = v47;
        v48 = v31[7];
        v49 = (char *)v13 + v48;
        v50 = (char *)v14 + v48;
        v49[4] = v50[4];
        *(_DWORD *)v49 = *(_DWORD *)v50;
        v51 = (int *)type metadata accessor for LinkParse();
        v52 = v51[5];
        v53 = (_QWORD *)((char *)v13 + v52);
        v54 = (_QWORD *)((char *)v14 + v52);
        v55 = v54[1];
        *v53 = *v54;
        v53[1] = v55;
        v56 = v51[6];
        v57 = (_QWORD *)((char *)v13 + v56);
        v58 = (_QWORD *)((char *)v14 + v56);
        v59 = v58[1];
        *v57 = *v58;
        v57[1] = v59;
        v60 = v51[7];
        v61 = (_QWORD *)((char *)v13 + v60);
        v62 = (_QWORD *)((char *)v14 + v60);
        v63 = v62[1];
        *v61 = *v62;
        v61[1] = v63;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        break;
    }
    v64 = a3[8];
    *(_QWORD *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v65 = a1 + v64;
    v66 = (uint64_t)a2 + v64;
    v67 = *(_OWORD *)(v66 + 24);
    *(_OWORD *)(a1 + v64 + 24) = v67;
    v68 = v67;
    v69 = **(void (***)(uint64_t, uint64_t, uint64_t))(v67 - 8);
    swift_bridgeObjectRetain();
    v69(v65, v66, v68);
  }
  return a1;
}

uint64_t destroy for LoadedFlowInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1 + 8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = (id *)(a1 + *(int *)(a2 + 24));
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1C2CFCD44();
      goto LABEL_7;
    case 1u:
      v7 = sub_1C2CFCD44();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      v6 = sub_1C2CFBD9C();
LABEL_7:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    case 5u:

      break;
    case 6u:
      v8 = sub_1C2CFBFD0();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
      v9 = (uint64_t)v5 + *(int *)(type metadata accessor for USOParse() + 20);
      v10 = sub_1C2CFBF28();
      if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      goto LABEL_15;
    case 7u:
      v11 = sub_1C2CFBFD0();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v5, v11);
      v12 = (uint64_t)v5 + *(int *)(type metadata accessor for USOParse() + 20);
      v13 = sub_1C2CFBF28();
      if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      swift_bridgeObjectRelease();
      type metadata accessor for LinkParse();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 32));
}

uint64_t initializeWithCopy for LoadedFlowInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  sub_1C2CFD350();
  v9(a1 + 8, v6, v8);
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v14 = sub_1C2CFCD44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      goto LABEL_17;
    case 1u:
      v15 = sub_1C2CFCD44();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, v12, v15);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      *(_QWORD *)((char *)v11 + *(int *)(v16 + 48)) = *(_QWORD *)((char *)v12 + *(int *)(v16 + 48));
      sub_1C2CFD350();
      goto LABEL_17;
    case 2u:
      v17 = v12[1];
      *v11 = *v12;
      v11[1] = v17;
      v11[2] = v12[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 3u:
      *v11 = *v12;
      swift_unknownObjectRetain();
      goto LABEL_17;
    case 4u:
      v18 = sub_1C2CFBD9C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
      goto LABEL_17;
    case 5u:
      v19 = (void *)*v12;
      *v11 = *v12;
      v20 = v19;
      goto LABEL_17;
    case 6u:
      v21 = sub_1C2CFBFD0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v11, v12, v21);
      v22 = (int *)type metadata accessor for USOParse();
      v23 = v22[5];
      v24 = (char *)v11 + v23;
      v25 = (char *)v12 + v23;
      v26 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      v35 = v22[6];
      v36 = (_QWORD *)((char *)v11 + v35);
      v37 = (_QWORD *)((char *)v12 + v35);
      v38 = v37[1];
      *v36 = *v37;
      v36[1] = v38;
      v39 = v22[7];
      v40 = (char *)v11 + v39;
      v41 = (char *)v12 + v39;
      v40[4] = v41[4];
      *(_DWORD *)v40 = *(_DWORD *)v41;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 7u:
      v28 = sub_1C2CFBFD0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v12, v28);
      v29 = (int *)type metadata accessor for USOParse();
      v30 = v29[5];
      v31 = (char *)v11 + v30;
      v32 = (char *)v12 + v30;
      v33 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
        __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
      }
      v42 = v29[6];
      v43 = (_QWORD *)((char *)v11 + v42);
      v44 = (_QWORD *)((char *)v12 + v42);
      v45 = v44[1];
      *v43 = *v44;
      v43[1] = v45;
      v46 = v29[7];
      v47 = (char *)v11 + v46;
      v48 = (char *)v12 + v46;
      v47[4] = v48[4];
      *(_DWORD *)v47 = *(_DWORD *)v48;
      v49 = (int *)type metadata accessor for LinkParse();
      v50 = v49[5];
      v51 = (_QWORD *)((char *)v11 + v50);
      v52 = (_QWORD *)((char *)v12 + v50);
      v53 = v52[1];
      *v51 = *v52;
      v51[1] = v53;
      v54 = v49[6];
      v55 = (_QWORD *)((char *)v11 + v54);
      v56 = (_QWORD *)((char *)v12 + v54);
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      v58 = v49[7];
      v59 = (_QWORD *)((char *)v11 + v58);
      v60 = (_QWORD *)((char *)v12 + v58);
      v61 = v60[1];
      *v59 = *v60;
      v59[1] = v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      break;
  }
  v62 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v63 = a1 + v62;
  v64 = a2 + v62;
  v65 = *(_OWORD *)(v64 + 24);
  *(_OWORD *)(a1 + v62 + 24) = v65;
  v66 = v65;
  v67 = **(void (***)(uint64_t, uint64_t, uint64_t))(v65 - 8);
  swift_bridgeObjectRetain();
  v67(v63, v64, v66);
  return a1;
}

_QWORD *assignWithCopy for LoadedFlowInfo(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;

  v6 = a2 + 1;
  *a1 = *a2;
  sub_1C2CFD350();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  if (a1 != a2)
  {
    v7 = a3[6];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_1C28C9F68((uint64_t)a1 + v7, type metadata accessor for Parse);
    v10 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v11 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
        goto LABEL_18;
      case 1u:
        v12 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)((char *)v8 + *(int *)(v13 + 48)) = *(_QWORD *)((char *)v9 + *(int *)(v13 + 48));
        sub_1C2CFD350();
        goto LABEL_18;
      case 2u:
        *v8 = *v9;
        v8[1] = v9[1];
        v8[2] = v9[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 3u:
        *v8 = *v9;
        swift_unknownObjectRetain();
        goto LABEL_18;
      case 4u:
        v14 = sub_1C2CFBD9C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
        goto LABEL_18;
      case 5u:
        v15 = (void *)*v9;
        *v8 = *v9;
        v16 = v15;
        goto LABEL_18;
      case 6u:
        v17 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v9, v17);
        v18 = (int *)type metadata accessor for USOParse();
        v19 = v18[5];
        v20 = (char *)v8 + v19;
        v21 = (char *)v9 + v19;
        v22 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
        }
        v31 = v18[6];
        v32 = (_QWORD *)((char *)v8 + v31);
        v33 = (_QWORD *)((char *)v9 + v31);
        *v32 = *v33;
        v32[1] = v33[1];
        v34 = v18[7];
        v35 = (char *)v8 + v34;
        v36 = (char *)v9 + v34;
        v37 = *(_DWORD *)v36;
        v35[4] = v36[4];
        *(_DWORD *)v35 = v37;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 7u:
        v24 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v9, v24);
        v25 = (int *)type metadata accessor for USOParse();
        v26 = v25[5];
        v27 = (char *)v8 + v26;
        v28 = (char *)v9 + v26;
        v29 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
        {
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
        }
        v38 = v25[6];
        v39 = (_QWORD *)((char *)v8 + v38);
        v40 = (_QWORD *)((char *)v9 + v38);
        *v39 = *v40;
        v39[1] = v40[1];
        v41 = v25[7];
        v42 = (char *)v8 + v41;
        v43 = (char *)v9 + v41;
        v44 = *(_DWORD *)v43;
        v42[4] = v43[4];
        *(_DWORD *)v42 = v44;
        v45 = (int *)type metadata accessor for LinkParse();
        v46 = v45[5];
        v47 = (_QWORD *)((char *)v8 + v46);
        v48 = (_QWORD *)((char *)v9 + v46);
        *v47 = *v48;
        v47[1] = v48[1];
        v49 = v45[6];
        v50 = (_QWORD *)((char *)v8 + v49);
        v51 = (_QWORD *)((char *)v9 + v49);
        *v50 = *v51;
        v50[1] = v51[1];
        v52 = v45[7];
        v53 = (_QWORD *)((char *)v8 + v52);
        v54 = (_QWORD *)((char *)v9 + v52);
        *v53 = *v54;
        v53[1] = v54[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + a3[8]), (_QWORD *)((char *)a2 + a3[8]));
  return a1;
}

uint64_t initializeWithTake for LoadedFlowInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[6];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v10 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      goto LABEL_14;
    case 1u:
      v11 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      *(_QWORD *)&v7[*(int *)(v12 + 48)] = *(_QWORD *)&v8[*(int *)(v12 + 48)];
      goto LABEL_14;
    case 4u:
      v13 = sub_1C2CFBD9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
      goto LABEL_14;
    case 6u:
      v14 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
      v15 = (int *)type metadata accessor for USOParse();
      v16 = v15[5];
      v17 = &v7[v16];
      v18 = &v8[v16];
      v19 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      *(_OWORD *)&v7[v15[6]] = *(_OWORD *)&v8[v15[6]];
      v28 = v15[7];
      v29 = &v7[v28];
      v30 = &v8[v28];
      v29[4] = v30[4];
      *(_DWORD *)v29 = *(_DWORD *)v30;
      goto LABEL_14;
    case 7u:
      v21 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v7, v8, v21);
      v22 = (int *)type metadata accessor for USOParse();
      v23 = v22[5];
      v24 = &v7[v23];
      v25 = &v8[v23];
      v26 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      *(_OWORD *)&v7[v22[6]] = *(_OWORD *)&v8[v22[6]];
      v31 = v22[7];
      v32 = &v7[v31];
      v33 = &v8[v31];
      v32[4] = v33[4];
      *(_DWORD *)v32 = *(_DWORD *)v33;
      v34 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v7[v34[5]] = *(_OWORD *)&v8[v34[5]];
      *(_OWORD *)&v7[v34[6]] = *(_OWORD *)&v8[v34[6]];
      *(_OWORD *)&v7[v34[7]] = *(_OWORD *)&v8[v34[7]];
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  v35 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  return a1;
}

uint64_t assignWithTake for LoadedFlowInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (char *)(a1 + v6);
    v8 = (char *)(a2 + v6);
    sub_1C28C9F68(a1 + v6, type metadata accessor for Parse);
    v9 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v10 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
        goto LABEL_15;
      case 1u:
        v11 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v7[*(int *)(v12 + 48)] = *(_QWORD *)&v8[*(int *)(v12 + 48)];
        goto LABEL_15;
      case 4u:
        v13 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
        goto LABEL_15;
      case 6u:
        v14 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
        v15 = (int *)type metadata accessor for USOParse();
        v16 = v15[5];
        v17 = &v7[v16];
        v18 = &v8[v16];
        v19 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
        }
        *(_OWORD *)&v7[v15[6]] = *(_OWORD *)&v8[v15[6]];
        v28 = v15[7];
        v29 = &v7[v28];
        v30 = &v8[v28];
        v29[4] = v30[4];
        *(_DWORD *)v29 = *(_DWORD *)v30;
        goto LABEL_15;
      case 7u:
        v21 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v7, v8, v21);
        v22 = (int *)type metadata accessor for USOParse();
        v23 = v22[5];
        v24 = &v7[v23];
        v25 = &v8[v23];
        v26 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
          __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
        }
        *(_OWORD *)&v7[v22[6]] = *(_OWORD *)&v8[v22[6]];
        v31 = v22[7];
        v32 = &v7[v31];
        v33 = &v8[v31];
        v32[4] = v33[4];
        *(_DWORD *)v32 = *(_DWORD *)v33;
        v34 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v7[v34[5]] = *(_OWORD *)&v8[v34[5]];
        *(_OWORD *)&v7[v34[6]] = *(_OWORD *)&v8[v34[6]];
        *(_OWORD *)&v7[v34[7]] = *(_OWORD *)&v8[v34[7]];
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v35 = a3[8];
  v36 = a1 + v35;
  v37 = a2 + v35;
  __swift_destroy_boxed_opaque_existential_1(a1 + v35);
  v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for LoadedFlowInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C2A4F824(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_32_2(*a1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_8_10((uint64_t)a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for LoadedFlowInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C2A4F884(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_7_8((uint64_t)a1 + *(int *)(a4 + 24), a2, a2, v7);
  }
}

uint64_t sub_1C2A4F8DC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Parse(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for InputContinuationState()
{
  OUTLINED_FUNCTION_22_2();
}

void type metadata accessor for PrescribedTool()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t storeEnumTagSinglePayload for FlowUnhandledReason(_WORD *a1, int a2, int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 0xFFFF;
  if ((a3 + 0xFFFF) <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3)
    v5 = v5;
  else
    v5 = 0;
  if (!a2)
    return ((uint64_t (*)(void))((char *)sub_1C2A4FA08 + 4 * byte_1C2D09C22[v5]))();
  *a1 = a2 - 1;
  return ((uint64_t (*)(void))((char *)sub_1C2A4F9E8 + 4 * byte_1C2D09C1D[v5]))();
}

uint64_t sub_1C2A4F9E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C2A4FA08(uint64_t result)
{
  *(_BYTE *)(result + 2) = 0;
  return result;
}

uint64_t sub_1C2A4FA10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C2A4FA18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1C2A4FA20(uint64_t result)
{
  *(_WORD *)(result + 2) = 0;
  return result;
}

uint64_t sub_1C2A4FA28(uint64_t result)
{
  *(_DWORD *)(result + 2) = 0;
  return result;
}

uint64_t method lookup function for AnyChildCompletion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyChildCompletion.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AnyChildCompletion.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

_QWORD *initializeBufferWithCopyOfBuffer for ExecuteResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(void *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  void *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  char *v112;
  char *v113;
  const void *v114;
  const void *v115;
  int *v116;
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  void (*v121)(void *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C2CFD350();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = a2[3];
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    *(_BYTE *)(a1 + 34) = *((_BYTE *)a2 + 34);
    v8 = *(int *)(a3 + 36);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 24) = v7;
    v11 = (int *)type metadata accessor for PluginAction();
    sub_1C2CFD350();
    sub_1C2CFD350();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = v10[1];
      *v9 = *v10;
      v9[1] = v14;
      v15 = v11[5];
      v128 = (uint64_t)v9;
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_1C2CFBCAC();
      v19 = *(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v121 = v19;
      v19(v16, v17, v18);
      v122 = type metadata accessor for Input(0);
      v20 = *(int *)(v122 + 20);
      v126 = v16;
      v21 = &v16[v20];
      v22 = &v17[v20];
      v23 = type metadata accessor for Parse(0);
      v125 = v18;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v24 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
          goto LABEL_13;
        case 1u:
          v25 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v21, v22, v25);
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v21[*(int *)(v26 + 48)] = *(_QWORD *)&v22[*(int *)(v26 + 48)];
          sub_1C2CFD350();
          goto LABEL_13;
        case 2u:
          v27 = *((_QWORD *)v22 + 1);
          *(_QWORD *)v21 = *(_QWORD *)v22;
          *((_QWORD *)v21 + 1) = v27;
          *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 3u:
          *(_QWORD *)v21 = *(_QWORD *)v22;
          swift_unknownObjectRetain();
          goto LABEL_13;
        case 4u:
          v28 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v22, v28);
          goto LABEL_13;
        case 5u:
          v29 = *(void **)v22;
          *(_QWORD *)v21 = *(_QWORD *)v22;
          v30 = v29;
LABEL_13:
          swift_storeEnumTagMultiPayload();
          goto LABEL_14;
        case 6u:
          v32 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v21, v22, v32);
          v116 = (int *)type metadata accessor for USOParse();
          v33 = v116[5];
          v112 = &v21[v33];
          v34 = &v22[v33];
          v35 = sub_1C2CFBF28();
          v114 = v34;
          v36 = (uint64_t)v34;
          v37 = v35;
          if (__swift_getEnumTagSinglePayload(v36, 1, v35))
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v112, v114, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v112, v114, v37);
            __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v37);
          }
          v31 = (int *)v122;
          v46 = v116[6];
          v47 = &v21[v46];
          v48 = &v22[v46];
          v49 = *((_QWORD *)v48 + 1);
          *(_QWORD *)v47 = *(_QWORD *)v48;
          *((_QWORD *)v47 + 1) = v49;
          v50 = v116[7];
          v51 = &v21[v50];
          v52 = &v22[v50];
          v51[4] = v52[4];
          *(_DWORD *)v51 = *(_DWORD *)v52;
          swift_bridgeObjectRetain();
          goto LABEL_23;
        case 7u:
          v39 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v21, v22, v39);
          v117 = (int *)type metadata accessor for USOParse();
          v40 = v117[5];
          v113 = &v21[v40];
          v41 = &v22[v40];
          v42 = sub_1C2CFBF28();
          v115 = v41;
          v43 = (uint64_t)v41;
          v44 = v42;
          if (__swift_getEnumTagSinglePayload(v43, 1, v42))
          {
            v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v113, v115, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v113, v115, v44);
            __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v44);
          }
          v31 = (int *)v122;
          v53 = v117[6];
          v54 = &v21[v53];
          v55 = &v22[v53];
          v123 = *((_QWORD *)v55 + 1);
          *(_QWORD *)v54 = *(_QWORD *)v55;
          *((_QWORD *)v54 + 1) = v123;
          v56 = v117[7];
          v57 = &v21[v56];
          v58 = &v22[v56];
          v57[4] = v58[4];
          *(_DWORD *)v57 = *(_DWORD *)v58;
          v59 = (int *)type metadata accessor for LinkParse();
          v60 = v59[5];
          v61 = &v21[v60];
          v62 = &v22[v60];
          v118 = *((_QWORD *)v62 + 1);
          *(_QWORD *)v61 = *(_QWORD *)v62;
          *((_QWORD *)v61 + 1) = v118;
          v63 = v59[6];
          v64 = &v21[v63];
          v65 = &v22[v63];
          v66 = *((_QWORD *)v65 + 1);
          *(_QWORD *)v64 = *(_QWORD *)v65;
          *((_QWORD *)v64 + 1) = v66;
          v67 = v59[7];
          v68 = &v21[v67];
          v69 = &v22[v67];
          v70 = *((_QWORD *)v69 + 1);
          *(_QWORD *)v68 = *(_QWORD *)v69;
          *((_QWORD *)v68 + 1) = v70;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_23:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_14:
          v31 = (int *)v122;
          break;
      }
      *(_QWORD *)&v126[v31[6]] = *(_QWORD *)&v17[v31[6]];
      v71 = v31[7];
      v72 = &v126[v71];
      v73 = &v17[v71];
      v74 = *(_QWORD *)&v17[v71 + 24];
      swift_bridgeObjectRetain();
      if (v74)
      {
        v75 = *((_QWORD *)v73 + 4);
        *((_QWORD *)v72 + 3) = v74;
        *((_QWORD *)v72 + 4) = v75;
        (**(void (***)(char *, char *, uint64_t))(v74 - 8))(v72, v73, v74);
      }
      else
      {
        v76 = *((_OWORD *)v73 + 1);
        *(_OWORD *)v72 = *(_OWORD *)v73;
        *((_OWORD *)v72 + 1) = v76;
        *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
      }
      v126[v31[8]] = v17[v31[8]];
      *(_QWORD *)(v128 + v11[6]) = *(_QWORD *)((char *)v10 + v11[6]);
      v77 = v11[7];
      v78 = *(void **)((char *)v10 + v77);
      *(_QWORD *)(v128 + v77) = v78;
      v79 = v11[8];
      v80 = (_QWORD *)(v128 + v79);
      v81 = (_QWORD *)((char *)v10 + v79);
      v82 = v11;
      v83 = v81[1];
      *v80 = *v81;
      v80[1] = v83;
      v127 = (uint64_t)v82;
      v84 = v82[9];
      v85 = (_QWORD *)(v128 + v84);
      v86 = (_QWORD *)((char *)v10 + v84);
      v87 = type metadata accessor for ActionParaphrase(0);
      swift_bridgeObjectRetain();
      v88 = v78;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
      {
        v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
      }
      else
      {
        v90 = v86[1];
        *v85 = *v86;
        v85[1] = v90;
        v91 = *(int *)(v87 + 20);
        v92 = (_QWORD *)((char *)v85 + v91);
        v93 = (_QWORD *)((char *)v86 + v91);
        v94 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v94))
        {
          v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
          v96 = v93[1];
          *v92 = *v93;
          v92[1] = v96;
          v97 = v93[3];
          v92[2] = v93[2];
          v92[3] = v97;
          v98 = *(int *)(v94 + 24);
          v119 = (char *)v93 + v98;
          v120 = (char *)v92 + v98;
          v99 = sub_1C2CFC114();
          v124 = v94;
          v100 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v100(v120, v119, v99);
          __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v124);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v87);
      }
      v101 = *(int *)(v127 + 40);
      v102 = (void *)(v128 + v101);
      v103 = (char *)v10 + v101;
      if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v125))
      {
        v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        v121(v102, v103, v125);
        __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v125);
      }
      __swift_storeEnumTagSinglePayload(v128, 0, 1, v127);
    }
    v105 = *(int *)(a3 + 40);
    v106 = (_QWORD *)((char *)v4 + v105);
    v107 = (uint64_t *)((char *)a2 + v105);
    v108 = v107[1];
    if (v108)
    {
      *v106 = *v107;
      v106[1] = v108;
      v109 = v107[3];
      v106[2] = v107[2];
      v106[3] = v109;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v110 = *((_OWORD *)v107 + 1);
      *(_OWORD *)v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v110;
    }
  }
  return v4;
}

uint64_t assignWithCopy for ExecuteResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  int v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  int v124;
  int *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  void *v142;
  void *v143;
  id v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  int v152;
  int v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  size_t v159;
  void *v160;
  const void *v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  int v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, char *, uint64_t);
  uint64_t v176;
  char *v177;
  char *v178;
  int v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  __int128 v187;
  __int128 v188;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  void (*v206)(char *, char *, uint64_t);
  uint64_t v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  void (*v214)(char *, char *, uint64_t);
  void (*v215)(char *, char *);
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  int *v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  int *v228;
  int *v229;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1C2CFD350();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1C2CFD350();
  swift_release();
  v6 = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_WORD *)(a1 + 32) = v6;
  v7 = *(int *)(a3 + 36);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for PluginAction();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (v12)
    {
      sub_1C28C9F68((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for PluginAction);
      goto LABEL_7;
    }
    *v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v229 = (int *)v10;
    v23 = *(int *)(v10 + 20);
    v24 = (char *)v8 + v23;
    v25 = (char *)v9 + v23;
    v26 = sub_1C2CFBCAC();
    v222 = *(_QWORD *)(v26 - 8);
    v224 = v26;
    v215 = *(void (**)(char *, char *))(v222 + 24);
    v215(v24, v25);
    v27 = type metadata accessor for Input(0);
    v28 = (int *)v27;
    if (a1 != a2)
    {
      v29 = *(int *)(v27 + 20);
      v30 = &v24[v29];
      v31 = &v25[v29];
      sub_1C28C9F68((uint64_t)&v24[v29], type metadata accessor for Parse);
      v217 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v32 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
          goto LABEL_53;
        case 1u:
          v46 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v30, v31, v46);
          v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v30[*(int *)(v47 + 48)] = *(_QWORD *)&v31[*(int *)(v47 + 48)];
          sub_1C2CFD350();
          goto LABEL_53;
        case 2u:
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
          *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_53;
        case 3u:
          *(_QWORD *)v30 = *(_QWORD *)v31;
          swift_unknownObjectRetain();
          goto LABEL_53;
        case 4u:
          v48 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v30, v31, v48);
          goto LABEL_53;
        case 5u:
          v49 = *(void **)v31;
          *(_QWORD *)v30 = *(_QWORD *)v31;
          v50 = v49;
          goto LABEL_53;
        case 6u:
          v51 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v30, v31, v51);
          v52 = type metadata accessor for USOParse();
          v53 = *(int *)(v52 + 20);
          v200 = v52;
          v204 = &v30[v53];
          v210 = &v31[v53];
          v196 = sub_1C2CFBF28();
          if (__swift_getEnumTagSinglePayload((uint64_t)v210, 1, v196))
          {
            v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v204, v210, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *))(*(_QWORD *)(v196 - 8) + 16))(v204, v210);
            __swift_storeEnumTagSinglePayload((uint64_t)v204, 0, 1, v196);
          }
          v111 = *(int *)(v200 + 24);
          v112 = &v30[v111];
          v113 = &v31[v111];
          *(_QWORD *)v112 = *(_QWORD *)v113;
          *((_QWORD *)v112 + 1) = *((_QWORD *)v113 + 1);
          v114 = *(int *)(v200 + 28);
          v115 = &v30[v114];
          v116 = &v31[v114];
          v117 = *(_DWORD *)v116;
          v115[4] = v116[4];
          *(_DWORD *)v115 = v117;
          swift_bridgeObjectRetain();
          goto LABEL_53;
        case 7u:
          v55 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v30, v31, v55);
          v56 = type metadata accessor for USOParse();
          v57 = *(int *)(v56 + 20);
          v201 = v56;
          v205 = &v30[v57];
          v211 = &v31[v57];
          v197 = sub_1C2CFBF28();
          if (__swift_getEnumTagSinglePayload((uint64_t)v211, 1, v197))
          {
            v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v205, v211, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *))(*(_QWORD *)(v197 - 8) + 16))(v205, v211);
            __swift_storeEnumTagSinglePayload((uint64_t)v205, 0, 1, v197);
          }
          v118 = *(int *)(v201 + 24);
          v119 = &v30[v118];
          v120 = &v31[v118];
          *(_QWORD *)v119 = *(_QWORD *)v120;
          *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
          v121 = *(int *)(v201 + 28);
          v122 = &v30[v121];
          v123 = &v31[v121];
          v124 = *(_DWORD *)v123;
          v122[4] = v123[4];
          *(_DWORD *)v122 = v124;
          v125 = (int *)type metadata accessor for LinkParse();
          v126 = v125[5];
          v127 = &v30[v126];
          v128 = &v31[v126];
          *(_QWORD *)v127 = *(_QWORD *)v128;
          *((_QWORD *)v127 + 1) = *((_QWORD *)v128 + 1);
          v129 = v125[6];
          v130 = &v30[v129];
          v131 = &v31[v129];
          *(_QWORD *)v130 = *(_QWORD *)v131;
          *((_QWORD *)v130 + 1) = *((_QWORD *)v131 + 1);
          v132 = v125[7];
          v133 = &v30[v132];
          v134 = &v31[v132];
          *(_QWORD *)v133 = *(_QWORD *)v134;
          *((_QWORD *)v133 + 1) = *((_QWORD *)v134 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_53:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
          break;
      }
    }
    *(_QWORD *)&v24[v28[6]] = *(_QWORD *)&v25[v28[6]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v135 = v28[7];
    v136 = (uint64_t)&v24[v135];
    v137 = &v25[v135];
    v138 = *(_QWORD *)&v25[v135 + 24];
    if (*(_QWORD *)&v24[v135 + 24])
    {
      if (v138)
      {
        __swift_assign_boxed_opaque_existential_1((uint64_t *)v136, (uint64_t *)v137);
        goto LABEL_61;
      }
      __swift_destroy_boxed_opaque_existential_1(v136);
    }
    else if (v138)
    {
      *(_QWORD *)(v136 + 24) = v138;
      *(_QWORD *)(v136 + 32) = *((_QWORD *)v137 + 4);
      (**(void (***)(uint64_t, char *))(v138 - 8))(v136, v137);
      goto LABEL_61;
    }
    v139 = *(_OWORD *)v137;
    v140 = *((_OWORD *)v137 + 1);
    *(_QWORD *)(v136 + 32) = *((_QWORD *)v137 + 4);
    *(_OWORD *)v136 = v139;
    *(_OWORD *)(v136 + 16) = v140;
LABEL_61:
    v24[v28[8]] = v25[v28[8]];
    *(_QWORD *)((char *)v8 + v229[6]) = *(_QWORD *)((char *)v9 + v229[6]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v141 = v229[7];
    v142 = *(void **)((char *)v8 + v141);
    v143 = *(void **)((char *)v9 + v141);
    *(_QWORD *)((char *)v8 + v141) = v143;
    v144 = v143;

    v145 = v229[8];
    v146 = (_QWORD *)((char *)v8 + v145);
    v147 = (_QWORD *)((char *)v9 + v145);
    *v146 = *v147;
    v146[1] = v147[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v148 = v229[9];
    v149 = (_QWORD *)((char *)v8 + v148);
    v150 = (_QWORD *)((char *)v9 + v148);
    v151 = type metadata accessor for ActionParaphrase(0);
    v152 = __swift_getEnumTagSinglePayload((uint64_t)v149, 1, v151);
    v153 = __swift_getEnumTagSinglePayload((uint64_t)v150, 1, v151);
    v227 = a3;
    if (v152)
    {
      if (!v153)
      {
        *v149 = *v150;
        v149[1] = v150[1];
        v154 = *(int *)(v151 + 20);
        v155 = (_QWORD *)((char *)v149 + v154);
        v156 = (_QWORD *)((char *)v150 + v154);
        v157 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, v157))
        {
          v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
          memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        else
        {
          *v155 = *v156;
          v155[1] = v156[1];
          v155[2] = v156[2];
          v155[3] = v156[3];
          v173 = *(int *)(v157 + 24);
          v220 = (char *)v155 + v173;
          v213 = (char *)v156 + v173;
          v174 = sub_1C2CFC114();
          v207 = (uint64_t)v155;
          v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v175(v220, v213, v174);
          __swift_storeEnumTagSinglePayload(v207, 0, 1, v157);
        }
        v171 = (uint64_t)v149;
        v172 = v151;
        goto LABEL_74;
      }
    }
    else
    {
      if (!v153)
      {
        *v149 = *v150;
        v149[1] = v150[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v162 = *(int *)(v151 + 20);
        v163 = (_QWORD *)((char *)v149 + v162);
        v164 = (_QWORD *)((char *)v150 + v162);
        v165 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        v166 = __swift_getEnumTagSinglePayload((uint64_t)v163, 1, v165);
        v167 = __swift_getEnumTagSinglePayload((uint64_t)v164, 1, v165);
        if (v166)
        {
          if (!v167)
          {
            *v163 = *v164;
            v163[1] = v164[1];
            v163[2] = v164[2];
            v163[3] = v164[3];
            v168 = *(int *)(v165 + 24);
            v219 = (char *)v163 + v168;
            v212 = (char *)v164 + v168;
            v169 = sub_1C2CFC114();
            v170 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v170(v219, v212, v169);
            v171 = (uint64_t)v163;
            v172 = v165;
LABEL_74:
            __swift_storeEnumTagSinglePayload(v171, 0, 1, v172);
            goto LABEL_75;
          }
        }
        else
        {
          if (!v167)
          {
            *v163 = *v164;
            v163[1] = v164[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v163[2] = v164[2];
            v163[3] = v164[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v190 = *(int *)(v165 + 24);
            v191 = (char *)v163 + v190;
            v192 = (char *)v164 + v190;
            v193 = sub_1C2CFC114();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 24))(v191, v192, v193);
LABEL_75:
            v176 = v229[10];
            v177 = (char *)v8 + v176;
            v178 = (char *)v9 + v176;
            v179 = __swift_getEnumTagSinglePayload((uint64_t)v177, 1, v224);
            v180 = __swift_getEnumTagSinglePayload((uint64_t)v178, 1, v224);
            if (v179)
            {
              if (!v180)
              {
                (*(void (**)(char *, char *, uint64_t))(v222 + 16))(v177, v178, v224);
                __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, v224);
LABEL_81:
                a3 = v227;
                goto LABEL_82;
              }
            }
            else
            {
              if (!v180)
              {
                ((void (*)(char *, char *, uint64_t))v215)(v177, v178, v224);
                goto LABEL_81;
              }
              (*(void (**)(char *, uint64_t))(v222 + 8))(v177, v224);
            }
            v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
            memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
            goto LABEL_81;
          }
          sub_1C28C9F68((uint64_t)v163, type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
        }
        v159 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58) - 8) + 64);
        v160 = v163;
        v161 = v164;
LABEL_68:
        memcpy(v160, v161, v159);
        goto LABEL_75;
      }
      sub_1C28C9F68((uint64_t)v149, type metadata accessor for ActionParaphrase);
    }
    v159 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80) - 8) + 64);
    v160 = v149;
    v161 = v150;
    goto LABEL_68;
  }
  if (v12)
  {
LABEL_7:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_82;
  }
  *v8 = *v9;
  v8[1] = v9[1];
  v228 = (int *)v10;
  v13 = *(int *)(v10 + 20);
  v14 = (char *)v8 + v13;
  v15 = (char *)v9 + v13;
  v16 = sub_1C2CFBCAC();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v214 = v17;
  v17(v14, v15, v16);
  v223 = (int *)type metadata accessor for Input(0);
  v18 = v223[5];
  v19 = &v14[v18];
  v20 = &v15[v18];
  v216 = type metadata accessor for Parse(0);
  v221 = v16;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v21 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      goto LABEL_35;
    case 1u:
      v33 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v19, v20, v33);
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      *(_QWORD *)&v19[*(int *)(v34 + 48)] = *(_QWORD *)&v20[*(int *)(v34 + 48)];
      sub_1C2CFD350();
      goto LABEL_35;
    case 2u:
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
      *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_35;
    case 3u:
      *(_QWORD *)v19 = *(_QWORD *)v20;
      swift_unknownObjectRetain();
      goto LABEL_35;
    case 4u:
      v35 = sub_1C2CFBD9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v19, v20, v35);
      goto LABEL_35;
    case 5u:
      v36 = *(void **)v20;
      *(_QWORD *)v19 = *(_QWORD *)v20;
      v37 = v36;
      goto LABEL_35;
    case 6u:
      v38 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v19, v20, v38);
      v39 = type metadata accessor for USOParse();
      v40 = *(int *)(v39 + 20);
      v198 = v39;
      v202 = &v19[v40];
      v208 = &v20[v40];
      v194 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v208, 1, v194))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v202, v208, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v202, v208, v194);
        __swift_storeEnumTagSinglePayload((uint64_t)v202, 0, 1, v194);
      }
      v59 = *(int *)(v198 + 24);
      v60 = &v19[v59];
      v61 = &v20[v59];
      *(_QWORD *)v60 = *(_QWORD *)v61;
      *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
      v62 = *(int *)(v198 + 28);
      v63 = &v19[v62];
      v64 = &v20[v62];
      v65 = *(_DWORD *)v64;
      v63[4] = v64[4];
      *(_DWORD *)v63 = v65;
      swift_bridgeObjectRetain();
      goto LABEL_35;
    case 7u:
      v42 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v19, v20, v42);
      v43 = type metadata accessor for USOParse();
      v44 = *(int *)(v43 + 20);
      v199 = v43;
      v203 = &v19[v44];
      v209 = &v20[v44];
      v195 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v209, 1, v195))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v203, v209, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v203, v209, v195);
        __swift_storeEnumTagSinglePayload((uint64_t)v203, 0, 1, v195);
      }
      v66 = *(int *)(v199 + 24);
      v67 = &v19[v66];
      v68 = &v20[v66];
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *((_QWORD *)v67 + 1) = *((_QWORD *)v68 + 1);
      v69 = *(int *)(v199 + 28);
      v70 = &v19[v69];
      v71 = &v20[v69];
      v72 = *(_DWORD *)v71;
      v70[4] = v71[4];
      *(_DWORD *)v70 = v72;
      v73 = (int *)type metadata accessor for LinkParse();
      v74 = v73[5];
      v75 = &v19[v74];
      v76 = &v20[v74];
      *(_QWORD *)v75 = *(_QWORD *)v76;
      *((_QWORD *)v75 + 1) = *((_QWORD *)v76 + 1);
      v77 = v73[6];
      v78 = &v19[v77];
      v79 = &v20[v77];
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = *((_QWORD *)v79 + 1);
      v80 = v73[7];
      v81 = &v19[v80];
      v82 = &v20[v80];
      *(_QWORD *)v81 = *(_QWORD *)v82;
      *((_QWORD *)v81 + 1) = *((_QWORD *)v82 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_35:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
      break;
  }
  *(_QWORD *)&v14[v223[6]] = *(_QWORD *)&v15[v223[6]];
  v83 = v223[7];
  v84 = &v14[v83];
  v85 = &v15[v83];
  v86 = *(_QWORD *)&v15[v83 + 24];
  swift_bridgeObjectRetain();
  v226 = a3;
  if (v86)
  {
    *((_QWORD *)v84 + 3) = v86;
    *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
    (**(void (***)(char *, char *, uint64_t))(v86 - 8))(v84, v85, v86);
  }
  else
  {
    v87 = *(_OWORD *)v85;
    v88 = *((_OWORD *)v85 + 1);
    *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
    *(_OWORD *)v84 = v87;
    *((_OWORD *)v84 + 1) = v88;
  }
  v14[v223[8]] = v15[v223[8]];
  *(_QWORD *)((char *)v8 + v228[6]) = *(_QWORD *)((char *)v9 + v228[6]);
  v89 = v228[7];
  v90 = *(void **)((char *)v9 + v89);
  *(_QWORD *)((char *)v8 + v89) = v90;
  v91 = v228[8];
  v92 = (_QWORD *)((char *)v8 + v91);
  v93 = (_QWORD *)((char *)v9 + v91);
  *v92 = *v93;
  v92[1] = v93[1];
  v94 = v228[9];
  v95 = (_QWORD *)((char *)v8 + v94);
  v96 = (_QWORD *)((char *)v9 + v94);
  v97 = type metadata accessor for ActionParaphrase(0);
  swift_bridgeObjectRetain();
  v98 = v90;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v97))
  {
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    a3 = v226;
  }
  else
  {
    *v95 = *v96;
    v95[1] = v96[1];
    v100 = *(int *)(v97 + 20);
    v101 = (_QWORD *)((char *)v95 + v100);
    v102 = (_QWORD *)((char *)v96 + v100);
    v103 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v103))
    {
      v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
      memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      *v101 = *v102;
      v101[1] = v102[1];
      v101[2] = v102[2];
      v101[3] = v102[3];
      v105 = *(int *)(v103 + 24);
      v225 = (char *)v101 + v105;
      v218 = (char *)v102 + v105;
      v106 = sub_1C2CFC114();
      v206 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v206(v225, v218, v106);
      __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v103);
    }
    a3 = v226;
    __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v97);
  }
  v107 = v228[10];
  v108 = (char *)v8 + v107;
  v109 = (char *)v9 + v107;
  if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v221))
  {
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
    memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
  }
  else
  {
    v214(v108, v109, v221);
    __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v221);
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v228);
LABEL_82:
  v182 = *(int *)(a3 + 40);
  v183 = (_QWORD *)(a1 + v182);
  v184 = (_QWORD *)(a2 + v182);
  v185 = *(_QWORD *)(a1 + v182 + 8);
  v186 = v184[1];
  if (v185)
  {
    if (v186)
    {
      *v183 = *v184;
      v183[1] = v184[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v183[2] = v184[2];
      v183[3] = v184[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C28BB37C((uint64_t)v183, &qword_1EF790E60);
      v187 = *((_OWORD *)v184 + 1);
      *(_OWORD *)v183 = *(_OWORD *)v184;
      *((_OWORD *)v183 + 1) = v187;
    }
  }
  else if (v186)
  {
    *v183 = *v184;
    v183[1] = v184[1];
    v183[2] = v184[2];
    v183[3] = v184[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v188 = *((_OWORD *)v184 + 1);
    *(_OWORD *)v183 = *(_OWORD *)v184;
    *((_OWORD *)v183 + 1) = v188;
  }
  return a1;
}

uint64_t initializeWithTake for ExecuteResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  __int128 v66;
  int *v68;
  uint64_t v69;
  char *__src;
  int *__srca;
  uint64_t v72;
  char *v73;
  char *__dst;
  char *__dsta;
  void (*v76)(char *, char *);
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v3 = a3;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v6 = *(int *)(a3 + 36);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for PluginAction();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v80 = v3;
    *v7 = *v8;
    v11 = v9[5];
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v79 = sub_1C2CFBCAC();
    v76 = *(void (**)(char *, char *))(*(_QWORD *)(v79 - 8) + 32);
    v76(v12, v13);
    v14 = (int *)type metadata accessor for Input(0);
    v15 = v14[5];
    v16 = &v12[v15];
    v17 = &v13[v15];
    v77 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v18 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        goto LABEL_16;
      case 1u:
        v19 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v16[*(int *)(v20 + 48)] = *(_QWORD *)&v17[*(int *)(v20 + 48)];
        goto LABEL_16;
      case 4u:
        v21 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
        goto LABEL_16;
      case 6u:
        v68 = v14;
        v22 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v16, v17, v22);
        v23 = type metadata accessor for USOParse();
        v24 = *(int *)(v23 + 20);
        v72 = v23;
        __dst = &v16[v24];
        v25 = &v17[v24];
        v26 = sub_1C2CFBF28();
        __src = v25;
        v27 = (uint64_t)v25;
        v28 = v26;
        if (__swift_getEnumTagSinglePayload(v27, 1, v26))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(__dst, __src, v28);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
        }
        *(_OWORD *)&v16[*(int *)(v72 + 24)] = *(_OWORD *)&v17[*(int *)(v72 + 24)];
        v34 = *(int *)(v72 + 28);
        v35 = &v16[v34];
        v36 = &v17[v34];
        v35[4] = v36[4];
        *(_DWORD *)v35 = *(_DWORD *)v36;
        swift_storeEnumTagMultiPayload();
        v14 = v68;
        break;
      case 7u:
        v30 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v16, v17, v30);
        v31 = type metadata accessor for USOParse();
        v32 = *(int *)(v31 + 20);
        __srca = (int *)v31;
        v73 = &v16[v32];
        __dsta = &v17[v32];
        v69 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)__dsta, 1, v69))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v73, __dsta, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(_QWORD *)(v69 - 8) + 32))(v73, __dsta);
          __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v69);
        }
        *(_OWORD *)&v16[__srca[6]] = *(_OWORD *)&v17[__srca[6]];
        v37 = __srca[7];
        v38 = &v16[v37];
        v39 = &v17[v37];
        v38[4] = v39[4];
        *(_DWORD *)v38 = *(_DWORD *)v39;
        v40 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v16[v40[5]] = *(_OWORD *)&v17[v40[5]];
        *(_OWORD *)&v16[v40[6]] = *(_OWORD *)&v17[v40[6]];
        *(_OWORD *)&v16[v40[7]] = *(_OWORD *)&v17[v40[7]];
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        break;
    }
    *(_QWORD *)&v12[v14[6]] = *(_QWORD *)&v13[v14[6]];
    v41 = v14[7];
    v42 = &v12[v41];
    v43 = &v13[v41];
    v44 = *((_OWORD *)v43 + 1);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v44;
    *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
    v12[v14[8]] = v13[v14[8]];
    *(_QWORD *)((char *)v7 + v9[6]) = *(_QWORD *)((char *)v8 + v9[6]);
    *(_QWORD *)((char *)v7 + v9[7]) = *(_QWORD *)((char *)v8 + v9[7]);
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    v45 = v9[9];
    v46 = (_OWORD *)((char *)v7 + v45);
    v47 = (_OWORD *)((char *)v8 + v45);
    v48 = type metadata accessor for ActionParaphrase(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      *v46 = *v47;
      v50 = *(int *)(v48 + 20);
      v51 = (_OWORD *)((char *)v46 + v50);
      v52 = (_OWORD *)((char *)v47 + v50);
      v53 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        v55 = v52[1];
        *v51 = *v52;
        v51[1] = v55;
        v56 = *(int *)(v53 + 24);
        v78 = (char *)v51 + v56;
        v57 = (char *)v52 + v56;
        v58 = sub_1C2CFC114();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v78, v57, v58);
        __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, v53);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
    }
    v59 = v9[10];
    v60 = (char *)v7 + v59;
    v61 = (char *)v8 + v59;
    if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v79))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v76)(v60, v61, v79);
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v79);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
    v3 = v80;
  }
  v63 = *(int *)(v3 + 40);
  v64 = (_OWORD *)(a1 + v63);
  v65 = (_OWORD *)(a2 + v63);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  return a1;
}

uint64_t assignWithTake for ExecuteResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  size_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  _OWORD *v76;
  _OWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  _OWORD *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  const void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  int v124;
  int v125;
  uint64_t v126;
  _OWORD *v127;
  _OWORD *v128;
  uint64_t v129;
  uint64_t v130;
  size_t v131;
  void *v132;
  const void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  int v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *__src;
  char *__srca;
  char *__srcb;
  char *__srcc;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  void (*__dst)(uint64_t, uint64_t);
  char *__dsta;
  char *__dstb;
  void (*v179)(uint64_t, uint64_t);
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = (int *)type metadata accessor for PluginAction();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v9);
  v11 = __swift_getEnumTagSinglePayload(v8, 1, (uint64_t)v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      v187 = a3;
      *(_OWORD *)v7 = *(_OWORD *)v8;
      v12 = v9[5];
      v13 = v7 + v12;
      v14 = v8 + v12;
      v185 = sub_1C2CFBCAC();
      v179 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 32);
      v179(v13, v14);
      v15 = (int *)type metadata accessor for Input(0);
      v16 = v15[5];
      v17 = (char *)(v13 + v16);
      v18 = (char *)(v14 + v16);
      v182 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v19 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
          goto LABEL_30;
        case 1u:
          v34 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v17, v18, v34);
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v17[*(int *)(v35 + 48)] = *(_QWORD *)&v18[*(int *)(v35 + 48)];
          goto LABEL_30;
        case 4u:
          v36 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v17, v18, v36);
          goto LABEL_30;
        case 6u:
          v164 = v15;
          v37 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v17, v18, v37);
          v38 = type metadata accessor for USOParse();
          v39 = *(int *)(v38 + 20);
          v172 = v38;
          __dsta = &v17[v39];
          v40 = &v18[v39];
          v41 = sub_1C2CFBF28();
          __src = v40;
          v42 = (uint64_t)v40;
          v43 = v41;
          if (__swift_getEnumTagSinglePayload(v42, 1, v41))
          {
            v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(__dsta, __src, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(__dsta, __src, v43);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v43);
          }
          *(_OWORD *)&v17[*(int *)(v172 + 24)] = *(_OWORD *)&v18[*(int *)(v172 + 24)];
          v64 = *(int *)(v172 + 28);
          v65 = &v17[v64];
          v66 = &v18[v64];
          v65[4] = v66[4];
          *(_DWORD *)v65 = *(_DWORD *)v66;
          swift_storeEnumTagMultiPayload();
          v15 = v164;
          break;
        case 7u:
          v45 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v17, v18, v45);
          v46 = type metadata accessor for USOParse();
          v47 = *(int *)(v46 + 20);
          v165 = v17;
          v173 = v46;
          __dstb = &v17[v47];
          v48 = &v18[v47];
          v49 = sub_1C2CFBF28();
          __srca = v48;
          v50 = (uint64_t)v48;
          v51 = v49;
          if (__swift_getEnumTagSinglePayload(v50, 1, v49))
          {
            v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(__dstb, __srca, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(__dstb, __srca, v51);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v51);
          }
          *(_OWORD *)&v165[*(int *)(v173 + 24)] = *(_OWORD *)&v18[*(int *)(v173 + 24)];
          v67 = *(int *)(v173 + 28);
          v68 = &v165[v67];
          v69 = &v18[v67];
          v68[4] = v69[4];
          *(_DWORD *)v68 = *(_DWORD *)v69;
          v70 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v165[v70[5]] = *(_OWORD *)&v18[v70[5]];
          *(_OWORD *)&v165[v70[6]] = *(_OWORD *)&v18[v70[6]];
          *(_OWORD *)&v165[v70[7]] = *(_OWORD *)&v18[v70[7]];
LABEL_30:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
          break;
      }
      *(_QWORD *)(v13 + v15[6]) = *(_QWORD *)(v14 + v15[6]);
      v71 = v15[7];
      v72 = v13 + v71;
      v73 = v14 + v71;
      v74 = *(_OWORD *)(v73 + 16);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *(_OWORD *)(v72 + 16) = v74;
      *(_QWORD *)(v72 + 32) = *(_QWORD *)(v73 + 32);
      *(_BYTE *)(v13 + v15[8]) = *(_BYTE *)(v14 + v15[8]);
      *(_QWORD *)(v7 + v9[6]) = *(_QWORD *)(v8 + v9[6]);
      *(_QWORD *)(v7 + v9[7]) = *(_QWORD *)(v8 + v9[7]);
      *(_OWORD *)(v7 + v9[8]) = *(_OWORD *)(v8 + v9[8]);
      v75 = v9[9];
      v76 = (_OWORD *)(v7 + v75);
      v77 = (_OWORD *)(v8 + v75);
      v78 = type metadata accessor for ActionParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
      {
        v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        *v76 = *v77;
        v80 = *(int *)(v78 + 20);
        v81 = (_OWORD *)((char *)v76 + v80);
        v82 = (_OWORD *)((char *)v77 + v80);
        v83 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
        {
          v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          v85 = v82[1];
          *v81 = *v82;
          v81[1] = v85;
          v86 = *(int *)(v83 + 24);
          v184 = (char *)v81 + v86;
          v87 = (char *)v82 + v86;
          v88 = sub_1C2CFC114();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v184, v87, v88);
          __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
      }
      a3 = v187;
      v89 = v9[10];
      v90 = (void *)(v7 + v89);
      v91 = (const void *)(v8 + v89);
      if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v185))
      {
        v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        ((void (*)(void *, const void *, uint64_t))v179)(v90, v91, v185);
        __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v185);
      }
      v93 = v7;
      v94 = (uint64_t)v9;
      goto LABEL_41;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_1C28C9F68(v7, (uint64_t (*)(_QWORD))type metadata accessor for PluginAction);
LABEL_7:
    v20 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948) - 8) + 64);
    v21 = (void *)v7;
    v22 = (const void *)v8;
LABEL_8:
    memcpy(v21, v22, v20);
    goto LABEL_42;
  }
  v188 = a3;
  v23 = *(_QWORD *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = v23;
  swift_bridgeObjectRelease();
  v24 = v9[5];
  v25 = v7 + v24;
  v26 = v8 + v24;
  v27 = sub_1C2CFBCAC();
  v183 = *(_QWORD *)(v27 - 8);
  v186 = v27;
  __dst = *(void (**)(uint64_t, uint64_t))(v183 + 40);
  __dst(v25, v26);
  v28 = type metadata accessor for Input(0);
  v29 = (int *)v28;
  if (a1 != a2)
  {
    v30 = *(int *)(v28 + 20);
    v31 = (char *)(v25 + v30);
    v32 = (char *)(v26 + v30);
    sub_1C28C9F68(v25 + v30, type metadata accessor for Parse);
    v180 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v33 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
        goto LABEL_52;
      case 1u:
        v53 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v31, v32, v53);
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v31[*(int *)(v54 + 48)] = *(_QWORD *)&v32[*(int *)(v54 + 48)];
        goto LABEL_52;
      case 4u:
        v55 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v31, v32, v55);
        goto LABEL_52;
      case 6u:
        v56 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v31, v32, v56);
        v57 = type metadata accessor for USOParse();
        v58 = *(int *)(v57 + 20);
        v166 = v57;
        __srcb = &v31[v58];
        v174 = &v32[v58];
        v162 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v174, 1, v162))
        {
          v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__srcb, v174, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(_QWORD *)(v162 - 8) + 32))(__srcb, v174);
          __swift_storeEnumTagSinglePayload((uint64_t)__srcb, 0, 1, v162);
        }
        *(_OWORD *)&v31[*(int *)(v166 + 24)] = *(_OWORD *)&v32[*(int *)(v166 + 24)];
        v102 = *(int *)(v166 + 28);
        v103 = &v31[v102];
        v104 = &v32[v102];
        v103[4] = v104[4];
        *(_DWORD *)v103 = *(_DWORD *)v104;
        goto LABEL_52;
      case 7u:
        v60 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v31, v32, v60);
        v61 = type metadata accessor for USOParse();
        v62 = *(int *)(v61 + 20);
        v167 = v61;
        __srcc = &v31[v62];
        v175 = &v32[v62];
        v163 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v175, 1, v163))
        {
          v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__srcc, v175, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(_QWORD *)(v163 - 8) + 32))(__srcc, v175);
          __swift_storeEnumTagSinglePayload((uint64_t)__srcc, 0, 1, v163);
        }
        *(_OWORD *)&v31[*(int *)(v167 + 24)] = *(_OWORD *)&v32[*(int *)(v167 + 24)];
        v105 = *(int *)(v167 + 28);
        v106 = &v31[v105];
        v107 = &v32[v105];
        v106[4] = v107[4];
        *(_DWORD *)v106 = *(_DWORD *)v107;
        v108 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v31[v108[5]] = *(_OWORD *)&v32[v108[5]];
        *(_OWORD *)&v31[v108[6]] = *(_OWORD *)&v32[v108[6]];
        *(_OWORD *)&v31[v108[7]] = *(_OWORD *)&v32[v108[7]];
LABEL_52:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
        break;
    }
  }
  *(_QWORD *)(v25 + v29[6]) = *(_QWORD *)(v26 + v29[6]);
  swift_bridgeObjectRelease();
  v109 = v29[7];
  v110 = v25 + v109;
  v111 = v26 + v109;
  if (*(_QWORD *)(v25 + v109 + 24))
    __swift_destroy_boxed_opaque_existential_1(v110);
  v112 = *(_OWORD *)(v111 + 16);
  *(_OWORD *)v110 = *(_OWORD *)v111;
  *(_OWORD *)(v110 + 16) = v112;
  *(_QWORD *)(v110 + 32) = *(_QWORD *)(v111 + 32);
  *(_BYTE *)(v25 + v29[8]) = *(_BYTE *)(v26 + v29[8]);
  *(_QWORD *)(v7 + v9[6]) = *(_QWORD *)(v8 + v9[6]);
  swift_bridgeObjectRelease();
  v113 = v9[7];
  v114 = *(void **)(v7 + v113);
  *(_QWORD *)(v7 + v113) = *(_QWORD *)(v8 + v113);

  v115 = v9[8];
  v116 = (_QWORD *)(v7 + v115);
  v117 = (uint64_t *)(v8 + v115);
  v119 = *v117;
  v118 = v117[1];
  *v116 = v119;
  v116[1] = v118;
  swift_bridgeObjectRelease();
  v120 = v9[9];
  v121 = (_QWORD *)(v7 + v120);
  v122 = (_QWORD *)(v8 + v120);
  v123 = type metadata accessor for ActionParaphrase(0);
  v124 = __swift_getEnumTagSinglePayload((uint64_t)v121, 1, v123);
  v125 = __swift_getEnumTagSinglePayload((uint64_t)v122, 1, v123);
  if (!v124)
  {
    if (!v125)
    {
      v135 = v122[1];
      *v121 = *v122;
      v121[1] = v135;
      swift_bridgeObjectRelease();
      v136 = *(int *)(v123 + 20);
      v137 = (uint64_t)v121 + v136;
      v138 = (uint64_t)v122 + v136;
      v139 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      v140 = __swift_getEnumTagSinglePayload(v137, 1, v139);
      v141 = __swift_getEnumTagSinglePayload(v138, 1, v139);
      if (v140)
      {
        if (!v141)
        {
          v142 = *(_OWORD *)(v138 + 16);
          *(_OWORD *)v137 = *(_OWORD *)v138;
          *(_OWORD *)(v137 + 16) = v142;
          v143 = *(int *)(v139 + 24);
          v144 = v137 + v143;
          v145 = v138 + v143;
          v146 = sub_1C2CFC114();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v144, v145, v146);
          __swift_storeEnumTagSinglePayload(v137, 0, 1, v139);
          goto LABEL_63;
        }
      }
      else
      {
        if (!v141)
        {
          v156 = *(_QWORD *)(v138 + 8);
          *(_QWORD *)v137 = *(_QWORD *)v138;
          *(_QWORD *)(v137 + 8) = v156;
          swift_bridgeObjectRelease();
          v157 = *(_QWORD *)(v138 + 24);
          *(_QWORD *)(v137 + 16) = *(_QWORD *)(v138 + 16);
          *(_QWORD *)(v137 + 24) = v157;
          swift_bridgeObjectRelease();
          v158 = *(int *)(v139 + 24);
          v159 = v137 + v158;
          v160 = v138 + v158;
          v161 = sub_1C2CFC114();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 40))(v159, v160, v161);
          goto LABEL_63;
        }
        sub_1C28C9F68(v137, type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
      }
      v131 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58) - 8) + 64);
      v132 = (void *)v137;
      v133 = (const void *)v138;
LABEL_62:
      memcpy(v132, v133, v131);
LABEL_63:
      v134 = v186;
      a3 = v188;
      goto LABEL_69;
    }
    sub_1C28C9F68((uint64_t)v121, type metadata accessor for ActionParaphrase);
LABEL_61:
    v131 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80) - 8) + 64);
    v132 = v121;
    v133 = v122;
    goto LABEL_62;
  }
  if (v125)
    goto LABEL_61;
  *(_OWORD *)v121 = *(_OWORD *)v122;
  v126 = *(int *)(v123 + 20);
  v127 = (_OWORD *)((char *)v121 + v126);
  v128 = (_OWORD *)((char *)v122 + v126);
  v129 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v128, 1, v129))
  {
    v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
  }
  else
  {
    v147 = v128[1];
    *v127 = *v128;
    v127[1] = v147;
    v148 = *(int *)(v129 + 24);
    v181 = (char *)v127 + v148;
    v149 = (char *)v128 + v148;
    v150 = sub_1C2CFC114();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v181, v149, v150);
    __swift_storeEnumTagSinglePayload((uint64_t)v127, 0, 1, v129);
  }
  v134 = v186;
  __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v123);
  a3 = v188;
LABEL_69:
  v151 = v9[10];
  v152 = v7 + v151;
  v153 = v8 + v151;
  v154 = __swift_getEnumTagSinglePayload(v152, 1, v134);
  v155 = __swift_getEnumTagSinglePayload(v153, 1, v134);
  if (v154)
  {
    if (!v155)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 32))(v152, v153, v134);
      v93 = v152;
      v94 = v134;
LABEL_41:
      __swift_storeEnumTagSinglePayload(v93, 0, 1, v94);
      goto LABEL_42;
    }
    goto LABEL_74;
  }
  if (v155)
  {
    (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v152, v134);
LABEL_74:
    v20 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228) - 8) + 64);
    v21 = (void *)v152;
    v22 = (const void *)v153;
    goto LABEL_8;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t))__dst)(v152, v153, v134);
LABEL_42:
  v95 = *(int *)(a3 + 40);
  v96 = a1 + v95;
  v97 = a2 + v95;
  if (!*(_QWORD *)(a1 + v95 + 8))
  {
LABEL_46:
    v100 = *(_OWORD *)(v97 + 16);
    *(_OWORD *)v96 = *(_OWORD *)v97;
    *(_OWORD *)(v96 + 16) = v100;
    return a1;
  }
  v98 = *(_QWORD *)(v97 + 8);
  if (!v98)
  {
    sub_1C28BB37C(v96, &qword_1EF790E60);
    goto LABEL_46;
  }
  *(_QWORD *)v96 = *(_QWORD *)v97;
  *(_QWORD *)(v96 + 8) = v98;
  swift_bridgeObjectRelease();
  v99 = *(_QWORD *)(v97 + 24);
  *(_QWORD *)(v96 + 16) = *(_QWORD *)(v97 + 16);
  *(_QWORD *)(v96 + 24) = v99;
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1C2A52810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 2147483646)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
    OUTLINED_FUNCTION_8_10(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

void sub_1C2A52884(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 2147483646)
  {
    *(_QWORD *)(a1 + 8) = a2;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
    OUTLINED_FUNCTION_7_8(a1 + *(int *)(a4 + 36), a2, a2, v7);
  }
}

void sub_1C2A528E4()
{
  unint64_t v0;

  sub_1C2A52980();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C2A52980()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED7A7950)
  {
    type metadata accessor for PluginAction();
    v0 = sub_1C2CFE478();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED7A7950);
  }
}

uint64_t method lookup function for AnyFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyFlow.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AnyFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of AnyFlow.unbox<A>()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of AnyFlow.isAdaptedFlow.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of AnyFlow.siriEnvironment.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t method lookup function for AnyValueFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyValueFlow.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of AnyValueFlow.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AnyValueFlow.onAsync(input:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_115_4();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C28CD890);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t dispatch thunk of AnyValueFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AnyValueFlow.exitValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AnyValueFlow.unbox<A>()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AnyValueFlow.unbox<A>(as:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AnyValueFlow.siriEnvironment.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of AnyValueFlow.siriEnvironment.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AnyValueFlow.siriEnvironment.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t storeEnumTagSinglePayload for PrescribedTool._PrescribedTool(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C2A52B0C + 4 * byte_1C2D09C67[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C2A52B2C + 4 * byte_1C2D09C6C[v4]))();
}

_BYTE *sub_1C2A52B0C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C2A52B2C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A52B34(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A52B3C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A52B44(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A52B4C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PrescribedTool._PrescribedTool()
{
  return &type metadata for PrescribedTool._PrescribedTool;
}

uint64_t _s11SiriKitFlow19ExecuteResponseTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C2A52BB4 + 4 * byte_1C2D09C80[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C2A52BE8 + 4 * byte_1C2D09C7B[v4]))();
}

uint64_t sub_1C2A52BE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A52BF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A52BF8);
  return result;
}

uint64_t sub_1C2A52C04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A52C0CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C2A52C10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A52C18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1C2A52C30()
{
  unint64_t result;

  result = qword_1EF790F18;
  if (!qword_1EF790F18)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0A740, &type metadata for PrescribedTool._PrescribedTool);
    atomic_store(result, (unint64_t *)&qword_1EF790F18);
  }
  return result;
}

unint64_t sub_1C2A52C78()
{
  unint64_t result;

  result = qword_1ED7A9180;
  if (!qword_1ED7A9180)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0A5A8, &type metadata for InputContinuationState.ContinuationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7A9180);
  }
  return result;
}

unint64_t sub_1C2A52CB8()
{
  unint64_t result;

  result = qword_1ED7A9178;
  if (!qword_1ED7A9178)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0A5D0, &type metadata for InputContinuationState.ContinuationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7A9178);
  }
  return result;
}

uint64_t objectdestroy_128Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_2(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2A52D4C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791188);
  OUTLINED_FUNCTION_11_2(*(_QWORD *)(v0 - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

void sub_1C2A52D88(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791188);
  sub_1C2A4B254(a1);
}

void sub_1C2A52DC8(uint64_t a1)
{
  uint64_t v1;

  sub_1C2C2C924(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t OUTLINED_FUNCTION_0_48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_1_35@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_5_43()
{
  type metadata accessor for ExecuteResponse(0);
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_8_39()
{
  return sub_1C2CFD350();
}

double OUTLINED_FUNCTION_10_44()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _OWORD *v3;
  double result;

  *(_BYTE *)(v0 + 16) = 0;
  *(_WORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 34) = v2;
  v3 = (_OWORD *)(v0 + *(int *)(v1 + 40));
  result = 0.0;
  *v3 = 0u;
  v3[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_34()
{
  type metadata accessor for ExecuteResponse(0);
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_12_37()
{
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_16_33()
{
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_19_29()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _OWORD *v4;

  *(_QWORD *)(v1 + 8) = v0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 34) = v3;
  v4 = (_OWORD *)(v1 + *(int *)(v2 + 40));
  *v4 = 0u;
  v4[1] = 0u;
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_36()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _OWORD *v4;

  *(_QWORD *)(v0 + 8) = v1;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 16) = 0;
  *(_WORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 34) = v3;
  v4 = (_OWORD *)(v0 + *(int *)(v2 + 40));
  *v4 = 0u;
  v4[1] = 0u;
  return v1;
}

void OUTLINED_FUNCTION_22_28()
{
  Flow.eraseToAnyFlow()();
}

double OUTLINED_FUNCTION_26_26@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_33_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;

  *(_QWORD *)(v2 + 8) = v0;
  *(_QWORD *)(v2 + 24) = v3;
  *(_BYTE *)(v2 + 16) = 0;
  *(_WORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 34) = v4;
  v5 = (_OWORD *)(v2 + *(int *)(v1 + 40));
  *v5 = 0u;
  v5[1] = 0u;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_36_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _OWORD *v4;

  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 16) = 0;
  *(_WORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 34) = v3;
  v4 = (_OWORD *)(v0 + *(int *)(v1 + 40));
  *v4 = 0u;
  v4[1] = 0u;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_38_23()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 128), *(_QWORD *)(v1 - 120));
}

void OUTLINED_FUNCTION_40_15()
{
  Flow.eraseToAnyFlow()();
}

uint64_t OUTLINED_FUNCTION_41_17()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_49_12()
{
  return 0x696669746E656469;
}

double OUTLINED_FUNCTION_54_18@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_55_10()
{
  return sub_1C2CFE9A0();
}

uint64_t OUTLINED_FUNCTION_58_15()
{
  return type metadata accessor for AnyChildCompletion();
}

uint64_t OUTLINED_FUNCTION_59_16()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_64_10()
{
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_67_9()
{
  return type metadata accessor for AnyChildCompletion();
}

uint64_t OUTLINED_FUNCTION_71_12()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_73_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_1C28BB340(v9 + 32, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_84_11()
{
  return swift_getDynamicType();
}

void OUTLINED_FUNCTION_85_8()
{
  AnyChildCompletion.__allocating_init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_86_7()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_87_8()
{
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_90_6()
{
  return sub_1C2CFEAC0();
}

uint64_t OUTLINED_FUNCTION_91_12(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t result;

  result = __swift_storeEnumTagSinglePayload(v2, 1, 1, a1);
  *v1 = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_92_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_95_8()
{
  return sub_1C2CFEAB4();
}

uint64_t OUTLINED_FUNCTION_100_11()
{
  return sub_1C2CFE904();
}

uint64_t OUTLINED_FUNCTION_106_5()
{
  return type metadata accessor for LoadedFlowInfo(0);
}

uint64_t OUTLINED_FUNCTION_107_8()
{
  return type metadata accessor for ExecuteResponse(0);
}

uint64_t OUTLINED_FUNCTION_108_7()
{
  return sub_1C2CFE8E0();
}

uint64_t OUTLINED_FUNCTION_109_6@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_113_4()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_123_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_124_6()
{
  return sub_1C2CFDDAC();
}

unint64_t OUTLINED_FUNCTION_126_6()
{
  _QWORD *v0;
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(v0, v1);
  return sub_1C28C3DD0();
}

uint64_t OUTLINED_FUNCTION_128_5()
{
  return type metadata accessor for AnyChildCompletion();
}

uint64_t Abort.init(reason:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;

  sub_1C294EEAC();
  v6 = swift_allocError();
  *v7 = a1;
  v7[1] = a2;
  *a3 = v6;
  type metadata accessor for FlowActionType(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t Abort.init(reason:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  OUTLINED_FUNCTION_62_16();
  return OUTLINED_FUNCTION_50_15();
}

uint64_t Yield.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = nullsub_1;
  a1[1] = 0;
  OUTLINED_FUNCTION_62_16();
  return OUTLINED_FUNCTION_50_15();
}

uint64_t Delegate.init(to:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C28B99EC(a1, a2);
  OUTLINED_FUNCTION_62_16();
  return OUTLINED_FUNCTION_50_15();
}

void Conclude.init(with:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_10();
  v9 = v8 - v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8 - v7, a1, a2);
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  sub_1C2A5342C(v9, (uint64_t)v10, 0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  OUTLINED_FUNCTION_8_0();
}

void Conclude.init<A>()(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  v2 = type metadata accessor for FlowActionType(0);
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_10();
  v6 = v5 - v4;
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF787D38);
  v8 = a1 + *(int *)(v7 + 32);
  sub_1C294F0E4((uint64_t)v9, v8);
  *(_BYTE *)(a1 + *(int *)(v7 + 36)) = 0;
  *(_QWORD *)(v6 + 24) = MEMORY[0x1E0DEE9C0] + 8;
  sub_1C294F12C((uint64_t)v9);
  sub_1C294F0E4(v8, v6 + 32);
  *(_BYTE *)(v6 + 72) = 0;
  swift_storeEnumTagMultiPayload();
  sub_1C294F16C(v6, a1);
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A5342C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  v23 = a3;
  v7 = a1;
  v22 = a1;
  v24 = type metadata accessor for FlowActionType(0);
  MEMORY[0x1E0C80A78](v24, v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for Conclude(0, a4, v12, v13);
  v15 = a5 + v14[7];
  v16 = *(_QWORD *)(a4 - 8);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v17(v15, v7, a4);
  v18 = a5 + v14[8];
  sub_1C294F0E4(a2, v18);
  LOBYTE(v7) = v23;
  *(_BYTE *)(a5 + v14[9]) = v23;
  *((_QWORD *)v11 + 3) = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v11);
  v17((uint64_t)boxed_opaque_existential_0, v15, a4);
  sub_1C294F12C(a2);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v22, a4);
  sub_1C294F0E4(v18, (uint64_t)(v11 + 32));
  v11[72] = v7;
  swift_storeEnumTagMultiPayload();
  return sub_1C294F16C((uint64_t)v11, a5);
}

void Conclude.followedBy(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];

  v7 = *(_QWORD *)(a2 + 16);
  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_10();
  v10 = v9 - v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9 - v8, v3 + *(int *)(v11 + 28), v7);
  sub_1C28B9A04(a1, (uint64_t)v13);
  sub_1C2A5342C(v10, (uint64_t)v13, *(unsigned __int8 *)(v3 + *(int *)(a2 + 36)), v7, a3);
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A53604(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[40];

  v6 = *(_QWORD *)(a1 + 16);
  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_10();
  v9 = v8 - v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8 - v7, v3 + *(int *)(v10 + 28), v6);
  sub_1C294F0E4(v3 + *(int *)(a1 + 32), (uint64_t)v12);
  sub_1C2A5342C(v9, (uint64_t)v12, 1, v6, a3);
  OUTLINED_FUNCTION_8_0();
}

uint64_t type metadata accessor for FlowActionType(uint64_t a1)
{
  return sub_1C28B9018(a1, qword_1EF791208);
}

uint64_t sub_1C2A536B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Yield.onYield(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for FlowActionType(0);
  swift_storeEnumTagMultiPayload();
  return sub_1C2CFD350();
}

char *initializeBufferWithCopyOfBuffer for FlowActionType(char *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  __int128 v7;
  char *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  _QWORD *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  int *v116;
  int *v117;
  void (*v118)(char *, char *, uint64_t);
  const void *v119;
  const void *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  void (*v127)(char *, char *, uint64_t);
  uint64_t v128;
  _QWORD *v129;
  int *v130;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v8[(v6 + 16) & ~(unint64_t)v6];
    sub_1C2CFD350();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)(a1 + 24) = v7;
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        goto LABEL_42;
      case 1u:
        v9 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v9;
        (**(void (***)(void *, const void *))(v9 - 8))(a1, a2);
        v10 = a1 + 32;
        v11 = a2 + 2;
        v12 = *((_QWORD *)a2 + 7);
        if (v12)
        {
          v13 = *((_QWORD *)a2 + 8);
          *((_QWORD *)a1 + 7) = v12;
          *((_QWORD *)a1 + 8) = v13;
          (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
        }
        else
        {
          v36 = a2[3];
          *v10 = *v11;
          *((_OWORD *)a1 + 3) = v36;
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        }
        a1[72] = *((_BYTE *)a2 + 72);
        goto LABEL_42;
      case 2u:
        v14 = *(void **)a2;
        v15 = v14;
        *(_QWORD *)a1 = v14;
        goto LABEL_42;
      case 3u:
        v16 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v16;
        sub_1C2CFD350();
        goto LABEL_42;
      case 5u:
        v17 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v17;
        (**(void (***)(void *, const void *))(v17 - 8))(a1, a2);
        v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF791190) + 48);
        v19 = &a1[v18];
        v20 = (_QWORD *)((char *)a2 + v18);
        v21 = v20[1];
        *(_QWORD *)v19 = *v20;
        *((_QWORD *)v19 + 1) = v21;
        v129 = v20;
        v130 = (int *)type metadata accessor for PluginAction();
        v22 = v130[5];
        v23 = &v19[v22];
        v24 = (char *)v20 + v22;
        v25 = sub_1C2CFBCAC();
        v26 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v127 = (void (*)(char *, char *, uint64_t))v26;
        v128 = v25;
        v26(v23, v24, v25);
        v27 = (int *)type metadata accessor for Input(0);
        v28 = v27[5];
        v29 = &v23[v28];
        v30 = &v24[v28];
        v31 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v32 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
            goto LABEL_29;
          case 1u:
            v37 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v29, v30, v37);
            v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            *(_QWORD *)&v29[*(int *)(v38 + 48)] = *(_QWORD *)&v30[*(int *)(v38 + 48)];
            sub_1C2CFD350();
            goto LABEL_29;
          case 2u:
            v39 = *((_QWORD *)v30 + 1);
            *(_QWORD *)v29 = *(_QWORD *)v30;
            *((_QWORD *)v29 + 1) = v39;
            *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 3u:
            *(_QWORD *)v29 = *(_QWORD *)v30;
            swift_unknownObjectRetain();
            goto LABEL_29;
          case 4u:
            v40 = sub_1C2CFBD9C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v29, v30, v40);
            goto LABEL_29;
          case 5u:
            v41 = *(void **)v30;
            *(_QWORD *)v29 = *(_QWORD *)v30;
            v42 = v41;
            goto LABEL_29;
          case 6u:
            v43 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v29, v30, v43);
            v116 = (int *)type metadata accessor for USOParse();
            v44 = v116[5];
            v123 = &v29[v44];
            v45 = &v30[v44];
            v46 = sub_1C2CFBF28();
            v119 = v45;
            v47 = (uint64_t)v45;
            v48 = v46;
            if (__swift_getEnumTagSinglePayload(v47, 1, v46))
            {
              v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v123, v119, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v123, v119, v48);
              __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v48);
            }
            v57 = v116[6];
            v58 = &v29[v57];
            v59 = &v30[v57];
            v60 = *((_QWORD *)v59 + 1);
            *(_QWORD *)v58 = *(_QWORD *)v59;
            *((_QWORD *)v58 + 1) = v60;
            v61 = v116[7];
            v62 = &v29[v61];
            v63 = &v30[v61];
            v62[4] = v63[4];
            *(_DWORD *)v62 = *(_DWORD *)v63;
            swift_bridgeObjectRetain();
            goto LABEL_29;
          case 7u:
            v50 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v29, v30, v50);
            v117 = (int *)type metadata accessor for USOParse();
            v51 = v117[5];
            v124 = &v29[v51];
            v52 = &v30[v51];
            v53 = sub_1C2CFBF28();
            v120 = v52;
            v54 = (uint64_t)v52;
            v55 = v53;
            if (__swift_getEnumTagSinglePayload(v54, 1, v53))
            {
              v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v124, v120, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v124, v120, v55);
              __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v55);
            }
            v64 = v117[6];
            v65 = &v29[v64];
            v66 = &v30[v64];
            v125 = *((_QWORD *)v66 + 1);
            *(_QWORD *)v65 = *(_QWORD *)v66;
            *((_QWORD *)v65 + 1) = v125;
            v67 = v117[7];
            v68 = &v29[v67];
            v69 = &v30[v67];
            v68[4] = v69[4];
            *(_DWORD *)v68 = *(_DWORD *)v69;
            v70 = (int *)type metadata accessor for LinkParse();
            v71 = v70[5];
            v72 = &v29[v71];
            v73 = &v30[v71];
            v121 = *((_QWORD *)v73 + 1);
            *(_QWORD *)v72 = *(_QWORD *)v73;
            *((_QWORD *)v72 + 1) = v121;
            v74 = v70[6];
            v75 = &v29[v74];
            v76 = &v30[v74];
            v77 = *((_QWORD *)v76 + 1);
            *(_QWORD *)v75 = *(_QWORD *)v76;
            *((_QWORD *)v75 + 1) = v77;
            v78 = v70[7];
            v79 = &v29[v78];
            v80 = &v30[v78];
            v81 = *((_QWORD *)v80 + 1);
            *(_QWORD *)v79 = *(_QWORD *)v80;
            *((_QWORD *)v79 + 1) = v81;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_29:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
            break;
        }
        *(_QWORD *)&v23[v27[6]] = *(_QWORD *)&v24[v27[6]];
        v82 = v27[7];
        v83 = &v23[v82];
        v84 = &v24[v82];
        v85 = *(_QWORD *)&v24[v82 + 24];
        swift_bridgeObjectRetain();
        if (v85)
        {
          v86 = *((_QWORD *)v84 + 4);
          *((_QWORD *)v83 + 3) = v85;
          *((_QWORD *)v83 + 4) = v86;
          (**(void (***)(char *, char *, uint64_t))(v85 - 8))(v83, v84, v85);
        }
        else
        {
          v87 = *((_OWORD *)v84 + 1);
          *(_OWORD *)v83 = *(_OWORD *)v84;
          *((_OWORD *)v83 + 1) = v87;
          *((_QWORD *)v83 + 4) = *((_QWORD *)v84 + 4);
        }
        v23[v27[8]] = v24[v27[8]];
        v88 = v129;
        *(_QWORD *)&v19[v130[6]] = *(_QWORD *)((char *)v129 + v130[6]);
        v89 = v130[7];
        v90 = *(void **)((char *)v129 + v89);
        *(_QWORD *)&v19[v89] = v90;
        v91 = v130[8];
        v92 = &v19[v91];
        v93 = (_QWORD *)((char *)v129 + v91);
        v94 = v93[1];
        *(_QWORD *)v92 = *v93;
        *((_QWORD *)v92 + 1) = v94;
        v95 = v130[9];
        v96 = &v19[v95];
        v97 = (_QWORD *)((char *)v129 + v95);
        v98 = type metadata accessor for ActionParaphrase(0);
        swift_bridgeObjectRetain();
        v99 = v90;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v98))
        {
          v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          v101 = v97[1];
          *(_QWORD *)v96 = *v97;
          *((_QWORD *)v96 + 1) = v101;
          v102 = *(int *)(v98 + 20);
          v103 = &v96[v102];
          v104 = (_QWORD *)((char *)v97 + v102);
          v105 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105))
          {
            v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
            memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
          }
          else
          {
            v107 = v104[1];
            *(_QWORD *)v103 = *v104;
            *((_QWORD *)v103 + 1) = v107;
            v108 = v104[3];
            *((_QWORD *)v103 + 2) = v104[2];
            *((_QWORD *)v103 + 3) = v108;
            v109 = *(int *)(v105 + 24);
            v122 = (char *)v104 + v109;
            v126 = &v103[v109];
            v110 = sub_1C2CFC114();
            v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
            swift_bridgeObjectRetain();
            v88 = v129;
            swift_bridgeObjectRetain();
            v118(v126, v122, v110);
            __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v105);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v98);
        }
        v111 = v130[10];
        v112 = &v19[v111];
        v113 = (char *)v88 + v111;
        if (__swift_getEnumTagSinglePayload((uint64_t)v88 + v111, 1, v128))
        {
          v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
          memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          v127(v112, v113, v128);
          __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v128);
        }
        goto LABEL_42;
      case 6u:
        v33 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v33;
        v34 = *((_QWORD *)a2 + 2);
        v35 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = v34;
        *((_QWORD *)a1 + 3) = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_42:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for FlowActionType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v2 = a1;
      goto LABEL_5;
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      if (*(_QWORD *)(a1 + 56))
      {
        v2 = a1 + 32;
LABEL_5:
        __swift_destroy_boxed_opaque_existential_1(v2);
      }
      break;
    case 2u:

      break;
    case 3u:
      swift_release();
      break;
    case 5u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF791190) + 48);
      swift_bridgeObjectRelease();
      v4 = (int *)type metadata accessor for PluginAction();
      v5 = v3 + v4[5];
      v6 = sub_1C2CFBCAC();
      v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v25(v5, v6);
      v7 = type metadata accessor for Input(0);
      v8 = (id *)(v5 + *(int *)(v7 + 20));
      type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v9 = sub_1C2CFCD44();
          goto LABEL_15;
        case 1u:
          v10 = sub_1C2CFCD44();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          swift_release();
          break;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_23;
        case 3u:
          swift_unknownObjectRelease();
          break;
        case 4u:
          v9 = sub_1C2CFBD9C();
LABEL_15:
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
          break;
        case 5u:

          break;
        case 6u:
          v11 = sub_1C2CFBFD0();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);
          v12 = (uint64_t)v8 + *(int *)(type metadata accessor for USOParse() + 20);
          v13 = sub_1C2CFBF28();
          if (!__swift_getEnumTagSinglePayload(v12, 1, v13))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
          goto LABEL_23;
        case 7u:
          v14 = sub_1C2CFBFD0();
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v8, v14);
          v15 = (uint64_t)v8 + *(int *)(type metadata accessor for USOParse() + 20);
          v16 = sub_1C2CFBF28();
          if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
          swift_bridgeObjectRelease();
          type metadata accessor for LinkParse();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_23:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      v17 = v5 + *(int *)(v7 + 28);
      if (*(_QWORD *)(v17 + 24))
        __swift_destroy_boxed_opaque_existential_1(v17);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v18 = v3 + v4[9];
      v19 = type metadata accessor for ActionParaphrase(0);
      if (!__swift_getEnumTagSinglePayload(v18, 1, v19))
      {
        swift_bridgeObjectRelease();
        v20 = v18 + *(int *)(v19 + 20);
        v21 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v22 = v20 + *(int *)(v21 + 24);
          v23 = sub_1C2CFC114();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
        }
      }
      v24 = v3 + v4[10];
      if (!__swift_getEnumTagSinglePayload(v24, 1, v6))
        v25(v24, v6);
      break;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

_OWORD *initializeWithCopy for FlowActionType(_OWORD *a1, void **a2, uint64_t a3)
{
  __int128 v6;
  void (***v7)(void *, const void *);
  _OWORD *v8;
  _OWORD *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void (***v15)(void *, const void *);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  _QWORD *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  int *v114;
  int *v115;
  void (*v116)(char *, char *, uint64_t);
  const void *v117;
  const void *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  _QWORD *v127;
  int *v128;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)((char *)a1 + 24) = v6;
      (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
      goto LABEL_40;
    case 1u:
      v7 = (void (***)(void *, const void *))a2[3];
      *((_QWORD *)a1 + 3) = v7;
      (**(v7 - 1))(a1, a2);
      v8 = a1 + 2;
      v9 = a2 + 4;
      v10 = a2[7];
      if (v10)
      {
        v11 = a2[8];
        *((_QWORD *)a1 + 7) = v10;
        *((_QWORD *)a1 + 8) = v11;
        (**((void (***)(_OWORD *, _OWORD *))v10 - 1))(v8, v9);
      }
      else
      {
        v34 = *((_OWORD *)a2 + 3);
        *v8 = *v9;
        a1[3] = v34;
        *((_QWORD *)a1 + 8) = a2[8];
      }
      *((_BYTE *)a1 + 72) = *((_BYTE *)a2 + 72);
      goto LABEL_40;
    case 2u:
      v12 = *a2;
      v13 = v12;
      *(_QWORD *)a1 = v12;
      goto LABEL_40;
    case 3u:
      v14 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v14;
      sub_1C2CFD350();
      goto LABEL_40;
    case 5u:
      v15 = (void (***)(void *, const void *))a2[3];
      *((_QWORD *)a1 + 3) = v15;
      (**(v15 - 1))(a1, a2);
      v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF791190) + 48);
      v17 = (_QWORD *)((char *)a1 + v16);
      v18 = (void **)((char *)a2 + v16);
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      v127 = v18;
      v128 = (int *)type metadata accessor for PluginAction();
      v20 = v128[5];
      v21 = (char *)v17 + v20;
      v22 = (char *)v18 + v20;
      v23 = sub_1C2CFBCAC();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v125 = v24;
      v126 = v23;
      v24(v21, v22, v23);
      v25 = (int *)type metadata accessor for Input(0);
      v26 = v25[5];
      v27 = &v21[v26];
      v28 = &v22[v26];
      v29 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v30 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
          goto LABEL_27;
        case 1u:
          v35 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v27, v28, v35);
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v27[*(int *)(v36 + 48)] = *(_QWORD *)&v28[*(int *)(v36 + 48)];
          sub_1C2CFD350();
          goto LABEL_27;
        case 2u:
          v37 = *((_QWORD *)v28 + 1);
          *(_QWORD *)v27 = *(_QWORD *)v28;
          *((_QWORD *)v27 + 1) = v37;
          *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_27;
        case 3u:
          *(_QWORD *)v27 = *(_QWORD *)v28;
          swift_unknownObjectRetain();
          goto LABEL_27;
        case 4u:
          v38 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v27, v28, v38);
          goto LABEL_27;
        case 5u:
          v39 = *(void **)v28;
          *(_QWORD *)v27 = *(_QWORD *)v28;
          v40 = v39;
          goto LABEL_27;
        case 6u:
          v41 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v27, v28, v41);
          v114 = (int *)type metadata accessor for USOParse();
          v42 = v114[5];
          v121 = &v27[v42];
          v43 = &v28[v42];
          v44 = sub_1C2CFBF28();
          v117 = v43;
          v45 = (uint64_t)v43;
          v46 = v44;
          if (__swift_getEnumTagSinglePayload(v45, 1, v44))
          {
            v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v121, v117, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v121, v117, v46);
            __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v46);
          }
          v55 = v114[6];
          v56 = &v27[v55];
          v57 = &v28[v55];
          v58 = *((_QWORD *)v57 + 1);
          *(_QWORD *)v56 = *(_QWORD *)v57;
          *((_QWORD *)v56 + 1) = v58;
          v59 = v114[7];
          v60 = &v27[v59];
          v61 = &v28[v59];
          v60[4] = v61[4];
          *(_DWORD *)v60 = *(_DWORD *)v61;
          swift_bridgeObjectRetain();
          goto LABEL_27;
        case 7u:
          v48 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v27, v28, v48);
          v115 = (int *)type metadata accessor for USOParse();
          v49 = v115[5];
          v122 = &v27[v49];
          v50 = &v28[v49];
          v51 = sub_1C2CFBF28();
          v118 = v50;
          v52 = (uint64_t)v50;
          v53 = v51;
          if (__swift_getEnumTagSinglePayload(v52, 1, v51))
          {
            v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v122, v118, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v122, v118, v53);
            __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v53);
          }
          v62 = v115[6];
          v63 = &v27[v62];
          v64 = &v28[v62];
          v123 = *((_QWORD *)v64 + 1);
          *(_QWORD *)v63 = *(_QWORD *)v64;
          *((_QWORD *)v63 + 1) = v123;
          v65 = v115[7];
          v66 = &v27[v65];
          v67 = &v28[v65];
          v66[4] = v67[4];
          *(_DWORD *)v66 = *(_DWORD *)v67;
          v68 = (int *)type metadata accessor for LinkParse();
          v69 = v68[5];
          v70 = &v27[v69];
          v71 = &v28[v69];
          v119 = *((_QWORD *)v71 + 1);
          *(_QWORD *)v70 = *(_QWORD *)v71;
          *((_QWORD *)v70 + 1) = v119;
          v72 = v68[6];
          v73 = &v27[v72];
          v74 = &v28[v72];
          v75 = *((_QWORD *)v74 + 1);
          *(_QWORD *)v73 = *(_QWORD *)v74;
          *((_QWORD *)v73 + 1) = v75;
          v76 = v68[7];
          v77 = &v27[v76];
          v78 = &v28[v76];
          v79 = *((_QWORD *)v78 + 1);
          *(_QWORD *)v77 = *(_QWORD *)v78;
          *((_QWORD *)v77 + 1) = v79;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_27:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          break;
      }
      *(_QWORD *)&v21[v25[6]] = *(_QWORD *)&v22[v25[6]];
      v80 = v25[7];
      v81 = &v21[v80];
      v82 = &v22[v80];
      v83 = *(_QWORD *)&v22[v80 + 24];
      swift_bridgeObjectRetain();
      if (v83)
      {
        v84 = *((_QWORD *)v82 + 4);
        *((_QWORD *)v81 + 3) = v83;
        *((_QWORD *)v81 + 4) = v84;
        (**(void (***)(char *, char *, uint64_t))(v83 - 8))(v81, v82, v83);
      }
      else
      {
        v85 = *((_OWORD *)v82 + 1);
        *(_OWORD *)v81 = *(_OWORD *)v82;
        *((_OWORD *)v81 + 1) = v85;
        *((_QWORD *)v81 + 4) = *((_QWORD *)v82 + 4);
      }
      v21[v25[8]] = v22[v25[8]];
      v86 = v127;
      *(_QWORD *)((char *)v17 + v128[6]) = *(_QWORD *)((char *)v127 + v128[6]);
      v87 = v128[7];
      v88 = *(void **)((char *)v127 + v87);
      *(_QWORD *)((char *)v17 + v87) = v88;
      v89 = v128[8];
      v90 = (_QWORD *)((char *)v17 + v89);
      v91 = (_QWORD *)((char *)v127 + v89);
      v92 = v91[1];
      *v90 = *v91;
      v90[1] = v92;
      v93 = v128[9];
      v94 = (_QWORD *)((char *)v17 + v93);
      v95 = (_QWORD *)((char *)v127 + v93);
      v96 = type metadata accessor for ActionParaphrase(0);
      swift_bridgeObjectRetain();
      v97 = v88;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v96))
      {
        v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      }
      else
      {
        v99 = v95[1];
        *v94 = *v95;
        v94[1] = v99;
        v100 = *(int *)(v96 + 20);
        v101 = (_QWORD *)((char *)v94 + v100);
        v102 = (_QWORD *)((char *)v95 + v100);
        v103 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v103))
        {
          v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
          memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          v105 = v102[1];
          *v101 = *v102;
          v101[1] = v105;
          v106 = v102[3];
          v101[2] = v102[2];
          v101[3] = v106;
          v107 = *(int *)(v103 + 24);
          v120 = (char *)v102 + v107;
          v124 = (char *)v101 + v107;
          v108 = sub_1C2CFC114();
          v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
          swift_bridgeObjectRetain();
          v86 = v127;
          swift_bridgeObjectRetain();
          v116(v124, v120, v108);
          __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v103);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v96);
      }
      v109 = v128[10];
      v110 = (char *)v17 + v109;
      v111 = (char *)v86 + v109;
      if (__swift_getEnumTagSinglePayload((uint64_t)v86 + v109, 1, v126))
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        v125(v110, v111, v126);
        __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v126);
      }
      goto LABEL_40;
    case 6u:
      v31 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v31;
      v32 = a2[2];
      v33 = a2[3];
      *((_QWORD *)a1 + 2) = v32;
      *((_QWORD *)a1 + 3) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_40:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for FlowActionType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  _QWORD *v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  _QWORD *v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  int *v104;
  int *v105;
  void (*v106)(char *, char *, uint64_t);
  const void *v107;
  const void *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  _QWORD *v115;
  int *v116;

  if (a1 != a2)
  {
    sub_1C2A55538((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v6;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
        goto LABEL_41;
      case 1u:
        v7 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v7;
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        v8 = a1 + 32;
        v9 = (__int128 *)(a2 + 32);
        v10 = *((_QWORD *)a2 + 7);
        if (v10)
        {
          *((_QWORD *)a1 + 7) = v10;
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          (**(void (***)(_OWORD *, __int128 *))(v10 - 8))(v8, v9);
        }
        else
        {
          v29 = *v9;
          v30 = *((_OWORD *)a2 + 3);
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          *v8 = v29;
          *((_OWORD *)a1 + 3) = v30;
        }
        a1[72] = a2[72];
        goto LABEL_41;
      case 2u:
        v11 = *(void **)a2;
        v12 = v11;
        *(_QWORD *)a1 = v11;
        goto LABEL_41;
      case 3u:
        v13 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v13;
        sub_1C2CFD350();
        goto LABEL_41;
      case 5u:
        v14 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 3) = v14;
        (**(void (***)(void *, const void *))(v14 - 8))(a1, a2);
        v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF791190) + 48);
        v16 = &a1[v15];
        v17 = &a2[v15];
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
        v115 = v17;
        v116 = (int *)type metadata accessor for PluginAction();
        v18 = v116[5];
        v19 = &v16[v18];
        v20 = &v17[v18];
        v21 = sub_1C2CFBCAC();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v113 = v22;
        v114 = v21;
        v22(v19, v20, v21);
        v23 = (int *)type metadata accessor for Input(0);
        v24 = v23[5];
        v25 = &v19[v24];
        v26 = &v20[v24];
        v27 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v28 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v25, v26, v28);
            goto LABEL_28;
          case 1u:
            v31 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v25, v26, v31);
            v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            *(_QWORD *)&v25[*(int *)(v32 + 48)] = *(_QWORD *)&v26[*(int *)(v32 + 48)];
            sub_1C2CFD350();
            goto LABEL_28;
          case 2u:
            *(_QWORD *)v25 = *(_QWORD *)v26;
            *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
            *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_28;
          case 3u:
            *(_QWORD *)v25 = *(_QWORD *)v26;
            swift_unknownObjectRetain();
            goto LABEL_28;
          case 4u:
            v33 = sub_1C2CFBD9C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v25, v26, v33);
            goto LABEL_28;
          case 5u:
            v34 = *(void **)v26;
            *(_QWORD *)v25 = *(_QWORD *)v26;
            v35 = v34;
            goto LABEL_28;
          case 6u:
            v36 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v25, v26, v36);
            v104 = (int *)type metadata accessor for USOParse();
            v37 = v104[5];
            v110 = &v25[v37];
            v38 = &v26[v37];
            v39 = sub_1C2CFBF28();
            v107 = v38;
            v40 = (uint64_t)v38;
            v41 = v39;
            if (__swift_getEnumTagSinglePayload(v40, 1, v39))
            {
              v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v110, v107, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v110, v107, v41);
              __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v41);
            }
            v50 = v104[6];
            v51 = &v25[v50];
            v52 = &v26[v50];
            *(_QWORD *)v51 = *(_QWORD *)v52;
            *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
            v53 = v104[7];
            v54 = &v25[v53];
            v55 = &v26[v53];
            v56 = *(_DWORD *)v55;
            v54[4] = v55[4];
            *(_DWORD *)v54 = v56;
            swift_bridgeObjectRetain();
            goto LABEL_28;
          case 7u:
            v43 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v25, v26, v43);
            v105 = (int *)type metadata accessor for USOParse();
            v44 = v105[5];
            v111 = &v25[v44];
            v45 = &v26[v44];
            v46 = sub_1C2CFBF28();
            v108 = v45;
            v47 = (uint64_t)v45;
            v48 = v46;
            if (__swift_getEnumTagSinglePayload(v47, 1, v46))
            {
              v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v111, v108, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v111, v108, v48);
              __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v48);
            }
            v57 = v105[6];
            v58 = &v25[v57];
            v59 = &v26[v57];
            *(_QWORD *)v58 = *(_QWORD *)v59;
            *((_QWORD *)v58 + 1) = *((_QWORD *)v59 + 1);
            v60 = v105[7];
            v61 = &v25[v60];
            v62 = &v26[v60];
            v63 = *(_DWORD *)v62;
            v61[4] = v62[4];
            *(_DWORD *)v61 = v63;
            v64 = (int *)type metadata accessor for LinkParse();
            v65 = v64[5];
            v66 = &v25[v65];
            v67 = &v26[v65];
            *(_QWORD *)v66 = *(_QWORD *)v67;
            *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
            v68 = v64[6];
            v69 = &v25[v68];
            v70 = &v26[v68];
            *(_QWORD *)v69 = *(_QWORD *)v70;
            *((_QWORD *)v69 + 1) = *((_QWORD *)v70 + 1);
            v71 = v64[7];
            v72 = &v25[v71];
            v73 = &v26[v71];
            *(_QWORD *)v72 = *(_QWORD *)v73;
            *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_28:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
            break;
        }
        *(_QWORD *)&v19[v23[6]] = *(_QWORD *)&v20[v23[6]];
        v74 = v23[7];
        v75 = &v19[v74];
        v76 = &v20[v74];
        v77 = *(_QWORD *)&v20[v74 + 24];
        swift_bridgeObjectRetain();
        if (v77)
        {
          *((_QWORD *)v75 + 3) = v77;
          *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
          (**(void (***)(char *, char *, uint64_t))(v77 - 8))(v75, v76, v77);
        }
        else
        {
          v78 = *(_OWORD *)v76;
          v79 = *((_OWORD *)v76 + 1);
          *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
          *(_OWORD *)v75 = v78;
          *((_OWORD *)v75 + 1) = v79;
        }
        v19[v23[8]] = v20[v23[8]];
        v80 = v115;
        *(_QWORD *)&v16[v116[6]] = *(_QWORD *)((char *)v115 + v116[6]);
        v81 = v116[7];
        v82 = *(void **)((char *)v115 + v81);
        *(_QWORD *)&v16[v81] = v82;
        v83 = v116[8];
        v84 = &v16[v83];
        v85 = (_QWORD *)((char *)v115 + v83);
        *(_QWORD *)v84 = *v85;
        *((_QWORD *)v84 + 1) = v85[1];
        v86 = v116[9];
        v87 = &v16[v86];
        v88 = (_QWORD *)((char *)v115 + v86);
        v89 = type metadata accessor for ActionParaphrase(0);
        swift_bridgeObjectRetain();
        v90 = v82;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, v89))
        {
          v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v87 = *v88;
          *((_QWORD *)v87 + 1) = v88[1];
          v92 = *(int *)(v89 + 20);
          v93 = &v87[v92];
          v94 = (_QWORD *)((char *)v88 + v92);
          v95 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v95))
          {
            v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
            memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v93 = *v94;
            *((_QWORD *)v93 + 1) = v94[1];
            *((_QWORD *)v93 + 2) = v94[2];
            *((_QWORD *)v93 + 3) = v94[3];
            v97 = *(int *)(v95 + 24);
            v109 = (char *)v94 + v97;
            v112 = &v93[v97];
            v98 = sub_1C2CFC114();
            v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16);
            swift_bridgeObjectRetain();
            v80 = v115;
            swift_bridgeObjectRetain();
            v106(v112, v109, v98);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v95);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v89);
        }
        v99 = v116[10];
        v100 = &v16[v99];
        v101 = (char *)v80 + v99;
        if (__swift_getEnumTagSinglePayload((uint64_t)v80 + v99, 1, v114))
        {
          v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          v113(v100, v101, v114);
          __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v114);
        }
        goto LABEL_41;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_41:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C2A55538(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FlowActionType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for FlowActionType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _OWORD *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  int *v71;
  char *__src;
  char *__srca;
  uint64_t v74;
  uint64_t v75;
  char *__dst;
  char *__dsta;
  void (*v78)(char *, char *);
  uint64_t v79;

  if (swift_getEnumCaseMultiPayload() == 5)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF791190) + 48);
    v8 = (char *)a1 + v7;
    v9 = (_OWORD *)((char *)a2 + v7);
    *(_OWORD *)((char *)a1 + v7) = *v9;
    v10 = (int *)type metadata accessor for PluginAction();
    v11 = v10[5];
    v12 = &v8[v11];
    v13 = (char *)v9 + v11;
    v14 = sub_1C2CFBCAC();
    v78 = *(void (**)(char *, char *))(*(_QWORD *)(v14 - 8) + 32);
    v79 = v14;
    v78(v12, v13);
    v15 = (int *)type metadata accessor for Input(0);
    v16 = v15[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    v19 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v20 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
        goto LABEL_14;
      case 1u:
        v21 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v17, v18, v21);
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v17[*(int *)(v22 + 48)] = *(_QWORD *)&v18[*(int *)(v22 + 48)];
        goto LABEL_14;
      case 4u:
        v23 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v17, v18, v23);
        goto LABEL_14;
      case 6u:
        v24 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v17, v18, v24);
        v25 = type metadata accessor for USOParse();
        v26 = *(int *)(v25 + 20);
        v74 = v25;
        __dst = &v17[v26];
        v27 = &v18[v26];
        v28 = sub_1C2CFBF28();
        __src = v27;
        v29 = (uint64_t)v27;
        v30 = v28;
        if (__swift_getEnumTagSinglePayload(v29, 1, v28))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(__dst, __src, v30);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v30);
        }
        *(_OWORD *)&v17[*(int *)(v74 + 24)] = *(_OWORD *)&v18[*(int *)(v74 + 24)];
        v40 = *(int *)(v74 + 28);
        v41 = &v17[v40];
        v42 = &v18[v40];
        v41[4] = v42[4];
        *(_DWORD *)v41 = *(_DWORD *)v42;
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v71 = v10;
        v32 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v17, v18, v32);
        v33 = type metadata accessor for USOParse();
        v34 = *(int *)(v33 + 20);
        v75 = v33;
        __dsta = &v17[v34];
        v35 = &v18[v34];
        v36 = sub_1C2CFBF28();
        __srca = v35;
        v37 = (uint64_t)v35;
        v38 = v36;
        if (__swift_getEnumTagSinglePayload(v37, 1, v36))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dsta, __srca, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(__dsta, __srca, v38);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v38);
        }
        *(_OWORD *)&v17[*(int *)(v75 + 24)] = *(_OWORD *)&v18[*(int *)(v75 + 24)];
        v43 = *(int *)(v75 + 28);
        v44 = &v17[v43];
        v45 = &v18[v43];
        v44[4] = v45[4];
        *(_DWORD *)v44 = *(_DWORD *)v45;
        v46 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v17[v46[5]] = *(_OWORD *)&v18[v46[5]];
        *(_OWORD *)&v17[v46[6]] = *(_OWORD *)&v18[v46[6]];
        *(_OWORD *)&v17[v46[7]] = *(_OWORD *)&v18[v46[7]];
        swift_storeEnumTagMultiPayload();
        v10 = v71;
        break;
      default:
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        break;
    }
    *(_QWORD *)&v12[v15[6]] = *(_QWORD *)&v13[v15[6]];
    v47 = v15[7];
    v48 = &v12[v47];
    v49 = &v13[v47];
    v50 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v50;
    *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
    v12[v15[8]] = v13[v15[8]];
    *(_QWORD *)&v8[v10[6]] = *(_QWORD *)((char *)v9 + v10[6]);
    *(_QWORD *)&v8[v10[7]] = *(_QWORD *)((char *)v9 + v10[7]);
    *(_OWORD *)&v8[v10[8]] = *(_OWORD *)((char *)v9 + v10[8]);
    v51 = v10[9];
    v52 = &v8[v51];
    v53 = (_OWORD *)((char *)v9 + v51);
    v54 = type metadata accessor for ActionParaphrase(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v52 = *v53;
      v56 = *(int *)(v54 + 20);
      v57 = &v52[v56];
      v58 = (_OWORD *)((char *)v53 + v56);
      v59 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        v61 = v58[1];
        *(_OWORD *)v57 = *v58;
        *((_OWORD *)v57 + 1) = v61;
        v62 = *(int *)(v59 + 24);
        v63 = &v57[v62];
        v64 = (char *)v58 + v62;
        v65 = sub_1C2CFC114();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
        __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
    }
    v66 = v10[10];
    v67 = &v8[v66];
    v68 = (char *)v9 + v66;
    if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v66, 1, v79))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v78)(v67, v68, v79);
      __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v79);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for FlowActionType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _OWORD *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  int *v71;
  char *__src;
  char *__srca;
  uint64_t v74;
  uint64_t v75;
  char *__dst;
  char *__dsta;
  void (*v78)(char *, char *);
  uint64_t v79;

  if (a1 != a2)
  {
    sub_1C2A55538((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF791190) + 48);
      v8 = (char *)a1 + v7;
      v9 = (_OWORD *)((char *)a2 + v7);
      *(_OWORD *)((char *)a1 + v7) = *v9;
      v10 = (int *)type metadata accessor for PluginAction();
      v11 = v10[5];
      v12 = &v8[v11];
      v13 = (char *)v9 + v11;
      v14 = sub_1C2CFBCAC();
      v78 = *(void (**)(char *, char *))(*(_QWORD *)(v14 - 8) + 32);
      v79 = v14;
      v78(v12, v13);
      v15 = (int *)type metadata accessor for Input(0);
      v16 = v15[5];
      v17 = &v12[v16];
      v18 = &v13[v16];
      v19 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v20 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
          goto LABEL_15;
        case 1u:
          v21 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v17, v18, v21);
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v17[*(int *)(v22 + 48)] = *(_QWORD *)&v18[*(int *)(v22 + 48)];
          goto LABEL_15;
        case 4u:
          v23 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v17, v18, v23);
          goto LABEL_15;
        case 6u:
          v24 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v17, v18, v24);
          v25 = type metadata accessor for USOParse();
          v26 = *(int *)(v25 + 20);
          v74 = v25;
          __dst = &v17[v26];
          v27 = &v18[v26];
          v28 = sub_1C2CFBF28();
          __src = v27;
          v29 = (uint64_t)v27;
          v30 = v28;
          if (__swift_getEnumTagSinglePayload(v29, 1, v28))
          {
            v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(__dst, __src, v30);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v30);
          }
          *(_OWORD *)&v17[*(int *)(v74 + 24)] = *(_OWORD *)&v18[*(int *)(v74 + 24)];
          v40 = *(int *)(v74 + 28);
          v41 = &v17[v40];
          v42 = &v18[v40];
          v41[4] = v42[4];
          *(_DWORD *)v41 = *(_DWORD *)v42;
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        case 7u:
          v71 = v10;
          v32 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v17, v18, v32);
          v33 = type metadata accessor for USOParse();
          v34 = *(int *)(v33 + 20);
          v75 = v33;
          __dsta = &v17[v34];
          v35 = &v18[v34];
          v36 = sub_1C2CFBF28();
          __srca = v35;
          v37 = (uint64_t)v35;
          v38 = v36;
          if (__swift_getEnumTagSinglePayload(v37, 1, v36))
          {
            v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(__dsta, __srca, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(__dsta, __srca, v38);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v38);
          }
          *(_OWORD *)&v17[*(int *)(v75 + 24)] = *(_OWORD *)&v18[*(int *)(v75 + 24)];
          v43 = *(int *)(v75 + 28);
          v44 = &v17[v43];
          v45 = &v18[v43];
          v44[4] = v45[4];
          *(_DWORD *)v44 = *(_DWORD *)v45;
          v46 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v17[v46[5]] = *(_OWORD *)&v18[v46[5]];
          *(_OWORD *)&v17[v46[6]] = *(_OWORD *)&v18[v46[6]];
          *(_OWORD *)&v17[v46[7]] = *(_OWORD *)&v18[v46[7]];
          swift_storeEnumTagMultiPayload();
          v10 = v71;
          break;
        default:
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          break;
      }
      *(_QWORD *)&v12[v15[6]] = *(_QWORD *)&v13[v15[6]];
      v47 = v15[7];
      v48 = &v12[v47];
      v49 = &v13[v47];
      v50 = *((_OWORD *)v49 + 1);
      *(_OWORD *)v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v50;
      *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
      v12[v15[8]] = v13[v15[8]];
      *(_QWORD *)&v8[v10[6]] = *(_QWORD *)((char *)v9 + v10[6]);
      *(_QWORD *)&v8[v10[7]] = *(_QWORD *)((char *)v9 + v10[7]);
      *(_OWORD *)&v8[v10[8]] = *(_OWORD *)((char *)v9 + v10[8]);
      v51 = v10[9];
      v52 = &v8[v51];
      v53 = (_OWORD *)((char *)v9 + v51);
      v54 = type metadata accessor for ActionParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v52 = *v53;
        v56 = *(int *)(v54 + 20);
        v57 = &v52[v56];
        v58 = (_OWORD *)((char *)v53 + v56);
        v59 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          v61 = v58[1];
          *(_OWORD *)v57 = *v58;
          *((_OWORD *)v57 + 1) = v61;
          v62 = *(int *)(v59 + 24);
          v63 = &v57[v62];
          v64 = (char *)v58 + v62;
          v65 = sub_1C2CFC114();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
          __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
      }
      v66 = v10[10];
      v67 = &v8[v66];
      v68 = (char *)v9 + v66;
      if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v66, 1, v79))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v78)(v67, v68, v79);
        __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v79);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C2A56154()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  const char *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  void *v9;

  v3 = "(";
  v4 = &unk_1C2D0AB08;
  v5 = &unk_1C2D0AB20;
  v6 = MEMORY[0x1E0DEE9D0] + 64;
  v7 = &unk_1C2D0AB38;
  result = type metadata accessor for PluginAction();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v8 = &v2;
    v9 = &unk_1C2D0AB50;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FlowAction.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for Delegate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2A5623C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_100_12();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for Delegate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2A56270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_100_12();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for Delegate(uint64_t a1)
{
  return sub_1C28B9018(a1, qword_1EF791298);
}

uint64_t sub_1C2A562B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FlowActionType(319);
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_1C2A56350(char *a1, char **a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  size_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  size_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char **v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _OWORD *v58;
  _OWORD *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  void (*v78)(unint64_t, unint64_t, uint64_t);
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  unint64_t v84;
  uint64_t v85;
  __int128 v86;
  unint64_t v87;
  void *v88;
  id v89;
  unint64_t v90;
  void *v91;
  const void *v92;
  unint64_t v93;
  void *v94;
  const void *v95;
  _QWORD *v96;
  _QWORD *v97;
  unint64_t v98;
  unint64_t v99;
  int v100;
  _QWORD *v101;
  _QWORD *v102;
  unint64_t v103;
  unint64_t v104;
  int v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  __int128 v117;
  __int128 v118;
  _QWORD *v119;
  _QWORD *v120;
  _QWORD *v121;
  void **v122;
  void *v123;
  _QWORD *v124;
  _QWORD *v125;
  _QWORD *v126;
  _QWORD *v127;
  id v128;
  unint64_t v129;
  size_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  _QWORD *v134;
  unint64_t v135;
  unsigned int EnumTagSinglePayload;
  _QWORD *v137;
  uint64_t v138;
  unint64_t v139;
  int v140;
  void *v141;
  const void *v142;
  void *v143;
  const void *v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  __int128 v150;
  __int128 v151;
  char *result;
  _QWORD *v153;
  _QWORD *v154;
  unint64_t v155;
  unint64_t v156;
  void (*v157)(unint64_t, unint64_t, uint64_t);
  uint64_t v158;
  unint64_t v159;
  size_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  size_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  size_t v170;
  size_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  unint64_t v185;
  uint64_t v186;
  void (*v187)(void *, const void *, uint64_t);
  int v188;
  unsigned int v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  int v193;
  uint64_t v194;
  int v195;
  unint64_t v196;
  uint64_t v198;

  v190 = sub_1C2CFBCAC();
  v3 = *(_QWORD *)(v190 - 8);
  v4 = *(_DWORD *)(v3 + 80);
  v194 = v4;
  v195 = *(_DWORD *)(v3 + 80);
  v179 = sub_1C2CFCD44();
  v5 = *(_QWORD *)(v179 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v175 = sub_1C2CFBD9C();
  v7 = *(_QWORD *)(v175 - 8);
  v8 = *(_DWORD *)(v7 + 80) | v6;
  v177 = sub_1C2CFBFD0();
  v9 = *(_QWORD *)(v177 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v180 = sub_1C2CFBF28();
  v11 = *(_QWORD *)(v180 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12;
  v193 = v8 | v10;
  v14 = (v8 | v10) & 0xF8 | v12 | 7u;
  v15 = v14 | v4;
  v181 = sub_1C2CFC114();
  v16 = *(_QWORD *)(v181 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = v14 | v4 | v17;
  v182 = v15 + 16;
  v19 = *(_QWORD *)(v3 + 64);
  v183 = v19 + v14;
  v178 = v5;
  v20 = *(_QWORD *)(v5 + 64);
  v173 = v20 + 7;
  v174 = v7;
  if (((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v20)
    v20 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= *(_QWORD *)(v7 + 64))
    v20 = *(_QWORD *)(v7 + 64);
  v176 = v9;
  v21 = *(_QWORD *)(v9 + 64) + v12;
  v172 = v11;
  if (*(_DWORD *)(v11 + 84))
    v22 = *(_QWORD *)(v11 + 64);
  else
    v22 = *(_QWORD *)(v11 + 64) + 1;
  v23 = (v22 + 7 + (v21 & ~(unint64_t)v12)) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v20 <= v24)
    v20 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v25 = ((((((v23 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v20 <= v25)
    v20 = v25;
  if (v20 <= 0x18)
    v20 = 24;
  v192 = v20;
  v26 = (((v20 + ((v19 + v14) & ~v14) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v28 = v17 + 16;
  v189 = *(_DWORD *)(v16 + 84);
  if (v189 <= 0x7FFFFFFF)
    v29 = 0x7FFFFFFF;
  else
    v29 = *(_DWORD *)(v16 + 84);
  v188 = v29;
  v30 = *(_QWORD *)(v16 + 64) + ((v17 + 32) & ~(unint64_t)v17) + (v28 & v27);
  v31 = v30 + v195;
  v186 = v3;
  if (*(_DWORD *)(v3 + 84))
    v32 = *(_QWORD *)(v3 + 64);
  else
    v32 = v19 + 1;
  if (v32
     + (((v15 | v17) + 32) & ~(v15 | v17))
     + ((v31
       + ((v17
         + 16
         + ((((v26 + ((v15 + 16) & ~v15) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v27)) & ~v194) <= 0x49)
    v33 = 73;
  else
    v33 = v32
        + (((v15 | v17) + 32) & ~(v15 | v17))
        + ((v31
          + ((v17
            + 16
            + ((((v26 + ((v15 + 16) & ~v15) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v27)) & ~v194);
  v34 = *(_QWORD *)(a3 + 16);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(_DWORD *)(v35 + 80);
  if ((v18 | v36) != 7
    || ((v193 | v195 | v12 | v17 | v36) & 0x100000) != 0
    || (v37 = v33 + v36 + 1,
        ((*(_QWORD *)(v35 + 64) + 7 + (v37 & ~(unint64_t)v36)) & 0xFFFFFFFFFFFFFFF8) + 41 > 0x18))
  {
    v40 = *a2;
    *(_QWORD *)a1 = *a2;
    v41 = &v40[((v18 | v36) + 16) & ~(v18 | v36)];
    sub_1C2CFD350();
    return v41;
  }
  v196 = v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v198 = *(_QWORD *)(v35 + 64) + 7;
  v38 = a2;
  v171 = *(_QWORD *)(v16 + 64) + ((v17 + 32) & ~(unint64_t)v17);
  v169 = v21;
  v170 = v22 + 7;
  v42 = ~v18;
  v43 = ~v15;
  v44 = ~v14;
  v45 = ~v13;
  v46 = ~(unint64_t)v36;
  v41 = a1;
  switch(*((_BYTE *)a2 + v33))
  {
    case 0:
      v47 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v47;
      v48 = v34;
      v49 = v35;
      v50 = v33 + v36 + 1;
      v51 = ~(unint64_t)v36;
      v52 = v33;
      (**(void (***)(char *, char **))(v47 - 8))(a1, a2);
      v37 = v50;
      v35 = v49;
      v34 = v48;
      v38 = a2;
      a1[v52] = 0;
      goto LABEL_48;
    case 1:
      v51 = ~(unint64_t)v36;
      v53 = v33;
      v54 = v33 + v36 + 1;
      v55 = *(_QWORD *)(v34 - 8);
      v56 = v34;
      v57 = a2[3];
      *((_QWORD *)a1 + 3) = v57;
      (**((void (***)(char *, char **))v57 - 1))(a1, a2);
      v38 = a2;
      v58 = a1 + 32;
      v59 = a2 + 4;
      v60 = a2[7];
      if (v60)
      {
        v61 = a2[8];
        *((_QWORD *)a1 + 7) = v60;
        *((_QWORD *)a1 + 8) = v61;
        (**((void (***)(_OWORD *, _OWORD *))v60 - 1))(v58, v59);
        v38 = a2;
      }
      else
      {
        v86 = *((_OWORD *)a2 + 3);
        *v58 = *v59;
        *((_OWORD *)a1 + 3) = v86;
        *((_QWORD *)a1 + 8) = a2[8];
      }
      v34 = v56;
      a1[72] = *((_BYTE *)v38 + 72);
      a1[v53] = 1;
      v35 = v55;
      v37 = v54;
LABEL_48:
      v46 = v51;
      goto LABEL_93;
    case 2:
      v62 = *a2;
      v63 = *(_QWORD *)(v34 - 8);
      v64 = v34;
      v65 = ~(unint64_t)v36;
      v66 = v33 + v36 + 1;
      v67 = v33;
      v68 = *a2;
      v37 = v66;
      v46 = v65;
      v35 = v63;
      v34 = v64;
      v38 = a2;
      *(_QWORD *)a1 = v62;
      a1[v67] = 2;
      goto LABEL_93;
    case 3:
      v69 = a2[1];
      v70 = *(_QWORD *)(v34 - 8);
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v69;
      a1[v33] = 3;
      v71 = v34;
      v72 = v33 + v36 + 1;
      sub_1C2CFD350();
      v37 = v72;
      goto LABEL_45;
    case 4:
      *(_WORD *)a1 = *(_WORD *)a2;
      a1[v33] = 4;
      goto LABEL_93;
    case 5:
      v162 = v26 + 41;
      v163 = ~v194;
      v159 = ~(unint64_t)v17;
      v164 = v30;
      v165 = v31;
      v166 = v33;
      v160 = v32;
      v158 = *(_QWORD *)(v181 - 8);
      v167 = v33 + v36 + 1;
      v168 = *(_QWORD *)(v34 - 8);
      v191 = v34;
      v73 = a2[3];
      *((_QWORD *)a1 + 3) = v73;
      (**((void (***)(char *, char **))v73 - 1))(a1, a2);
      v74 = (_QWORD *)((unint64_t)&a1[v18 + 32] & v42);
      v75 = (_QWORD *)(((unint64_t)a2 + v18 + 32) & v42);
      *v74 = *v75;
      v74[1] = v75[1];
      v76 = ((unint64_t)v74 + v182) & v43;
      v77 = ((unint64_t)v75 + v182) & v43;
      v78 = *(void (**)(unint64_t, unint64_t, uint64_t))(v186 + 16);
      swift_bridgeObjectRetain();
      v78(v76, v77, v190);
      v79 = (v183 + v76) & v44;
      v80 = (v183 + v77) & v44;
      if (*(unsigned __int8 *)(v80 + v192) >= 8u)
      {
        if (v192 <= 3)
          v81 = v192;
        else
          v81 = 4;
        __asm { BR              X12 }
      }
      v187 = (void (*)(void *, const void *, uint64_t))v78;
      v161 = v46;
      switch(*(_BYTE *)(v80 + v192))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v178 + 16))(v79, v80, v179);
          *(_BYTE *)(v79 + v192) = 0;
          goto LABEL_65;
        case 1:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v178 + 16))(v79, v80, v179);
          *(_QWORD *)((v173 + v79) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v173 + v80) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v79 + v192) = 1;
          sub_1C2CFD350();
          goto LABEL_65;
        case 2:
          *(_QWORD *)v79 = *(_QWORD *)v80;
          *(_QWORD *)(v79 + 8) = *(_QWORD *)(v80 + 8);
          *(_QWORD *)(v79 + 16) = *(_QWORD *)(v80 + 16);
          *(_BYTE *)(v79 + v192) = 2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_65;
        case 3:
          *(_QWORD *)v79 = *(_QWORD *)v80;
          *(_BYTE *)(v79 + v192) = 3;
          swift_unknownObjectRetain();
          goto LABEL_65;
        case 4:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v174 + 16))(v79, v80, v175);
          *(_BYTE *)(v79 + v192) = 4;
          goto LABEL_65;
        case 5:
          v88 = *(void **)v80;
          *(_QWORD *)v79 = *(_QWORD *)v80;
          *(_BYTE *)(v79 + v192) = 5;
          v89 = v88;
          goto LABEL_65;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v176 + 16))(v79, v80, v177);
          v90 = v80;
          v91 = (void *)((v169 + v79) & v45);
          v184 = (_QWORD *)v90;
          v92 = (const void *)((v169 + v90) & v45);
          if (__swift_getEnumTagSinglePayload((uint64_t)v92, 1, v180))
          {
            memcpy(v91, v92, v22);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v172 + 16))(v91, v92, v180);
            __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v180);
          }
          v87 = v192 + 1;
          v96 = (_QWORD *)(((unint64_t)v91 + v170) & 0xFFFFFFFFFFFFFFF8);
          v97 = (_QWORD *)(((unint64_t)v92 + v170) & 0xFFFFFFFFFFFFFFF8);
          *v96 = *v97;
          v96[1] = v97[1];
          v98 = ((unint64_t)v96 + 19) & 0xFFFFFFFFFFFFFFF8;
          v99 = ((unint64_t)v97 + 19) & 0xFFFFFFFFFFFFFFF8;
          v100 = *(_DWORD *)v99;
          *(_BYTE *)(v98 + 4) = *(_BYTE *)(v99 + 4);
          *(_DWORD *)v98 = v100;
          *(_BYTE *)(v79 + v192) = 6;
          swift_bridgeObjectRetain();
          v80 = (unint64_t)v184;
          break;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v176 + 16))(v79, v80, v177);
          v93 = v80;
          v94 = (void *)((v169 + v79) & v45);
          v185 = v93;
          v95 = (const void *)((v169 + v93) & v45);
          if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v180))
          {
            memcpy(v94, v95, v22);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v172 + 16))(v94, v95, v180);
            __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v180);
          }
          v101 = (_QWORD *)(((unint64_t)v94 + v170) & 0xFFFFFFFFFFFFFFF8);
          v102 = (_QWORD *)(((unint64_t)v95 + v170) & 0xFFFFFFFFFFFFFFF8);
          *v101 = *v102;
          v101[1] = v102[1];
          v103 = ((unint64_t)v101 + 19) & 0xFFFFFFFFFFFFFFF8;
          v104 = ((unint64_t)v102 + 19) & 0xFFFFFFFFFFFFFFF8;
          v105 = *(_DWORD *)v104;
          *(_BYTE *)(v103 + 4) = *(_BYTE *)(v104 + 4);
          *(_DWORD *)v103 = v105;
          v106 = (_QWORD *)(((v79 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          v107 = (_QWORD *)(((v185 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          *v106 = *v107;
          v106[1] = v107[1];
          v108 = (_QWORD *)(((unint64_t)v106 + 23) & 0xFFFFFFFFFFFFFFF8);
          v109 = (_QWORD *)(((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v108 = *v109;
          v108[1] = v109[1];
          v110 = (_QWORD *)(((unint64_t)v108 + 23) & 0xFFFFFFFFFFFFFFF8);
          v111 = (_QWORD *)(((unint64_t)v109 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v110 = *v111;
          v110[1] = v111[1];
          *(_BYTE *)(v79 + v192) = 7;
          swift_bridgeObjectRetain();
          v80 = v185;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_65:
          v87 = v192 + 1;
          break;
        default:
          v87 = v192 + 1;
          memcpy((void *)v79, (const void *)v80, v192 + 1);
          break;
      }
      v112 = (_QWORD *)(((v80 | 7) + v87) & 0xFFFFFFFFFFFFFFF8);
      v113 = (_QWORD *)(((v79 | 7) + v87) & 0xFFFFFFFFFFFFF8);
      *v113 = *v112;
      v114 = ((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8;
      v115 = ((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8;
      v116 = *(_QWORD *)(v115 + 24);
      swift_bridgeObjectRetain();
      if (v116 < 0xFFFFFFFF)
      {
        v117 = *(_OWORD *)v115;
        v118 = *(_OWORD *)(v115 + 16);
        *(_QWORD *)(v114 + 32) = *(_QWORD *)(v115 + 32);
        *(_OWORD *)v114 = v117;
        *(_OWORD *)(v114 + 16) = v118;
      }
      else
      {
        *(_QWORD *)(v114 + 24) = v116;
        *(_QWORD *)(v114 + 32) = *(_QWORD *)(v115 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v116 - 8))(v114, v115, v116);
      }
      *(_BYTE *)(v114 + 40) = *(_BYTE *)(v115 + 40);
      v119 = (_QWORD *)((v76 | 7) + v162);
      v120 = (_QWORD *)((v77 | 7) + v162);
      *v119 = *v120;
      v121 = (_QWORD *)(((unint64_t)v119 + 15) & 0xFFFFFFFFFFFFF8);
      v122 = (void **)(((unint64_t)v120 + 15) & 0xFFFFFFFFFFFFFFF8);
      v123 = *v122;
      *v121 = *v122;
      v124 = (_QWORD *)(((unint64_t)v121 + 15) & 0xFFFFFFFFFFFFFFF8);
      v125 = (_QWORD *)(((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v124 = *v125;
      v124[1] = v125[1];
      v126 = (_QWORD *)(((unint64_t)v124 + v28) & v196);
      v127 = (_QWORD *)(((unint64_t)v125 + v28) & v196);
      swift_bridgeObjectRetain();
      v128 = v123;
      swift_bridgeObjectRetain();
      if (v188 < 1)
      {
        v134 = (_QWORD *)(((unint64_t)v127 + v28) & v196);
        v132 = v28;
        v131 = v189;
        if ((v189 & 0x80000000) != 0)
        {
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v28 + (((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8)) & v159, v189, v181);
          v132 = v28;
          v133 = v196;
        }
        else
        {
          v133 = v196;
          v135 = *(_QWORD *)((((unint64_t)v127 + v28) & v196) + 8);
          if (v135 >= 0xFFFFFFFF)
            LODWORD(v135) = -1;
          EnumTagSinglePayload = v135 + 1;
        }
        v130 = v164;
        if (EnumTagSinglePayload <= 1)
          goto LABEL_80;
LABEL_84:
        v141 = v126;
        v142 = v127;
LABEL_88:
        memcpy(v141, v142, v130);
        goto LABEL_89;
      }
      v129 = v127[1];
      if (v129 >= 0xFFFFFFFF)
        LODWORD(v129) = -1;
      v130 = v164;
      v131 = v189;
      if ((v129 + 1) > 1)
        goto LABEL_84;
      v132 = v28;
      v133 = v196;
      v134 = (_QWORD *)(((unint64_t)v127 + v28) & v196);
LABEL_80:
      *v126 = *v127;
      v126[1] = v127[1];
      v137 = (_QWORD *)(((unint64_t)v126 + v132) & v133);
      v138 = v132;
      swift_bridgeObjectRetain();
      if ((v131 & 0x80000000) != 0)
      {
        v140 = __swift_getEnumTagSinglePayload((v138 + (((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8)) & v159, v131, v181);
      }
      else
      {
        v139 = v134[1];
        if (v139 >= 0xFFFFFFFF)
          LODWORD(v139) = -1;
        v140 = v139 + 1;
      }
      v130 = v171;
      if (v140)
      {
        v141 = v137;
        v142 = v134;
        goto LABEL_88;
      }
      *v137 = *v134;
      v137[1] = v134[1];
      v153 = (_QWORD *)(((unint64_t)v137 + 23) & 0xFFFFFFFFFFFFFFF8);
      v154 = (_QWORD *)(((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v153 = *v154;
      v153[1] = v154[1];
      v155 = ((unint64_t)v153 + v28) & v159;
      v156 = ((unint64_t)v154 + v28) & v159;
      v157 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v157(v155, v156, v181);
LABEL_89:
      v143 = (void *)(((unint64_t)v126 + v165) & v163);
      v144 = (const void *)(((unint64_t)v127 + v165) & v163);
      v41 = a1;
      if (__swift_getEnumTagSinglePayload((uint64_t)v144, 1, v190))
      {
        memcpy(v143, v144, v160);
      }
      else
      {
        v187(v143, v144, v190);
        __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, v190);
      }
      v37 = v167;
      a1[v166] = 5;
      v38 = a2;
      v34 = v191;
      v35 = v168;
      v46 = v161;
LABEL_93:
      v145 = (unint64_t)&v41[v37] & v46;
      v146 = ((unint64_t)v38 + v37) & v46;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v35 + 16))(v145, v146, v34);
      v147 = (v198 + v145) & 0xFFFFFFFFFFFFFFF8;
      v148 = (v198 + v146) & 0xFFFFFFFFFFFFFFF8;
      v149 = *(_QWORD *)(v148 + 24);
      if (v149 < 0xFFFFFFFF)
      {
        v150 = *(_OWORD *)v148;
        v151 = *(_OWORD *)(v148 + 16);
        *(_QWORD *)(v147 + 32) = *(_QWORD *)(v148 + 32);
        *(_OWORD *)v147 = v150;
        *(_OWORD *)(v147 + 16) = v151;
      }
      else
      {
        *(_QWORD *)(v147 + 24) = v149;
        *(_QWORD *)(v147 + 32) = *(_QWORD *)(v148 + 32);
        (**(void (***)(unint64_t, unint64_t))(v149 - 8))(v147, (v198 + v146) & 0xFFFFFFFFFFFFFFF8);
      }
      *(_BYTE *)(v147 + 40) = *(_BYTE *)(v148 + 40);
      return v41;
    case 6:
      v82 = a2[1];
      v70 = *(_QWORD *)(v34 - 8);
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v82;
      v83 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v83;
      a1[v33] = 6;
      v71 = v34;
      v84 = ~(unint64_t)v36;
      v85 = v33 + v36 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = v85;
      v46 = v84;
LABEL_45:
      v35 = v70;
      v34 = v71;
      v38 = a2;
      goto LABEL_93;
    default:
      if (v33 <= 3)
        v39 = v33;
      else
        v39 = 4;
      __asm { BR              X15 }
      return result;
  }
}

unint64_t sub_1C2A570F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  id *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id *v46;
  unint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unsigned int EnumTagSinglePayload;
  unint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t result;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unint64_t v67;
  int v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;

  v80 = sub_1C2CFBCAC();
  v2 = *(_QWORD *)(v80 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v82 = v3;
  v78 = sub_1C2CFCD44();
  v4 = *(_QWORD *)(v78 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v74 = sub_1C2CFBD9C();
  v6 = *(_QWORD *)(v74 - 8);
  v7 = *(_DWORD *)(v6 + 80) | v5;
  v77 = sub_1C2CFBFD0();
  v8 = *(_QWORD *)(v77 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v79 = sub_1C2CFBF28();
  v10 = *(_QWORD *)(v79 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 | v9) & 0xF8 | v11 | 7;
  v13 = v12 | v3;
  v14 = sub_1C2CFC114();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = v16;
  v18 = v12 | v3 | v16;
  v19 = *(_QWORD *)(v2 + 64);
  v20 = *(_QWORD *)(v4 + 64);
  if (((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v20)
    v20 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v73 = v6;
  if (v20 <= *(_QWORD *)(v6 + 64))
    v20 = *(_QWORD *)(v6 + 64);
  v75 = v8;
  v76 = *(_QWORD *)(v8 + 64) + v11;
  if (*(_DWORD *)(v10 + 84))
    v21 = *(_QWORD *)(v10 + 64);
  else
    v21 = *(_QWORD *)(v10 + 64) + 1;
  v22 = ((v76 & ~v11) + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8;
  if (v20 <= (v23 | 5))
    v20 = v23 | 5;
  v24 = ((((((v22 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v20 <= v24)
    v20 = v24;
  if (v20 <= 0x18)
    v25 = 24;
  else
    v25 = v20;
  v26 = v16 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v27 = v16 + 16;
  if (*(_DWORD *)(v15 + 84) <= 0x7FFFFFFFu)
    v28 = 0x7FFFFFFF;
  else
    v28 = *(_DWORD *)(v15 + 84);
  v29 = (v27 & v26)
      + ((v16 + 32) & ~(unint64_t)v16)
      + *(_QWORD *)(v15 + 64)
      + v82;
  v30 = v19 + v12;
  v31 = (((v25 + ((v19 + v12) & ~v12) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v32 = (((v13 | v17) + 32) & ~(v13 | v17)) + v19;
  if (!*(_DWORD *)(v2 + 84))
    ++v32;
  v33 = v32
      + ((v29 + ((v27 + ((((v31 + ((v13 + 16) & ~v13) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v26)) & ~v82);
  if (v33 <= 0x49)
    v34 = 73;
  else
    v34 = v33;
  v36 = ~v11;
  v37 = ~v82;
  v83 = v34;
  switch(*(_BYTE *)(a1 + v34))
  {
    case 0:
      v38 = a1;
      goto LABEL_31;
    case 1:
      __swift_destroy_boxed_opaque_existential_1(a1);
      if (!*(_QWORD *)(a1 + 56))
        goto LABEL_75;
      v38 = a1 + 32;
LABEL_31:
      __swift_destroy_boxed_opaque_existential_1(v38);
      goto LABEL_75;
    case 2:

      goto LABEL_75;
    case 3:
      swift_release();
      goto LABEL_75;
    case 4:
      goto LABEL_75;
    case 5:
      v67 = v31 + 41;
      v68 = v28;
      v69 = v26;
      v70 = v37;
      v63 = *(_QWORD *)(v14 - 8);
      v64 = ~v17;
      v66 = *(_DWORD *)(v15 + 84);
      v71 = v17 + 16;
      v72 = v29;
      v65 = v14;
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      v39 = (v13 + 16 + ((a1 + v18 + 32) & ~v18)) & ~v13;
      v40 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
      v40(v39, v80);
      v41 = (id *)((v30 + v39) & ~v12);
      if (*((unsigned __int8 *)v41 + v25) >= 8u)
      {
        if (v25 <= 3)
          v42 = v25;
        else
          v42 = 4;
        __asm { BR              X12 }
      }
      switch(*((_BYTE *)v41 + v25))
      {
        case 0:
          v44 = v4;
          v43 = v78;
          goto LABEL_46;
        case 1:
          (*(void (**)(id *, uint64_t))(v4 + 8))(v41, v78);
          swift_release();
          break;
        case 2:
          swift_bridgeObjectRelease();
          goto LABEL_54;
        case 3:
          swift_unknownObjectRelease();
          break;
        case 4:
          v44 = v73;
          v43 = v74;
LABEL_46:
          (*(void (**)(id *, uint64_t))(v44 + 8))(v41, v43);
          break;
        case 5:

          break;
        case 6:
          (*(void (**)(id *, uint64_t))(v75 + 8))(v41, v77);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v41 + v76) & v36, 1, v79))
            (*(void (**)(unint64_t, uint64_t))(v10 + 8))(((unint64_t)v41 + v76) & v36, v79);
          goto LABEL_54;
        case 7:
          (*(void (**)(id *, uint64_t))(v75 + 8))(v41, v77);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v41 + v76) & v36, 1, v79))
            (*(void (**)(unint64_t, uint64_t))(v10 + 8))(((unint64_t)v41 + v76) & v36, v79);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_54:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      v45 = (((((unint64_t)v41 | 7) + v25 + 1) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v45 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v45);
      swift_bridgeObjectRelease();
      v46 = (id *)(((v39 | 7) + v67 + 15) & 0xFFFFFFFFFFFFF8);

      swift_bridgeObjectRelease();
      v47 = (v71 + (((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8)) & v69;
      if (v68 < 1)
      {
        v51 = (v71 + v47) & v69;
        if ((v66 & 0x80000000) != 0)
        {
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v71 + ((v51 + 23) & 0xFFFFFFFFFFFFFFF8)) & v64, v66, v65);
        }
        else
        {
          v52 = *(_QWORD *)(((v71 + v47) & v69) + 8);
          if (v52 >= 0xFFFFFFFF)
            LODWORD(v52) = -1;
          EnumTagSinglePayload = v52 + 1;
        }
        v50 = v72;
        if (EnumTagSinglePayload > 1)
          goto LABEL_73;
      }
      else
      {
        LODWORD(v48) = -1;
        if (*(_QWORD *)(v47 + 8) < 0xFFFFFFFFuLL)
          v48 = *(_QWORD *)(v47 + 8);
        v49 = (v48 + 1) > 1;
        v50 = v72;
        if (v49)
          goto LABEL_73;
        v51 = (v71 + v47) & v69;
      }
      swift_bridgeObjectRelease();
      if ((v66 & 0x80000000) != 0)
      {
        v62 = __swift_getEnumTagSinglePayload((v71 + ((v51 + 23) & 0xFFFFFFFFFFFFFFF8)) & v64, v66, v65);
        v56 = v71;
        v50 = v72;
        if (!v62)
        {
LABEL_72:
          v57 = v56;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v63 + 8))((v57 + ((v51 + 23) & 0xFFFFFFFFFFFFFFF8)) & v64, v65);
          v50 = v72;
        }
      }
      else
      {
        v54 = *(_QWORD *)(v51 + 8);
        if (v54 >= 0xFFFFFFFF)
          LODWORD(v54) = -1;
        v55 = v54 + 1;
        v56 = v71;
        v50 = v72;
        if (!v55)
          goto LABEL_72;
      }
LABEL_73:
      v58 = (v50 + v47) & v70;
      if (!__swift_getEnumTagSinglePayload(v58, 1, v80))
        v40(v58, v80);
LABEL_75:
      v59 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
      v60 = (a1 + v83 + *(unsigned __int8 *)(v59 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
      (*(void (**)(unint64_t))(v59 + 8))(v60);
      result = (*(_QWORD *)(v59 + 64) + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
        return __swift_destroy_boxed_opaque_existential_1(result);
      return result;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_75;
    default:
      if (v34 <= 3)
        v35 = v34;
      else
        v35 = 4;
      __asm { BR              X14 }
      return result;
  }
}

uint64_t sub_1C2A578B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  size_t v20;
  unint64_t v21;
  int v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  size_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  unint64_t v64;
  void (*v65)(unint64_t, unint64_t, uint64_t);
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t result;
  __int128 v84;
  size_t v85;
  void *v86;
  id v87;
  void *v88;
  const void *v89;
  void *v90;
  const void *v91;
  _QWORD *v92;
  _QWORD *v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  _QWORD *v108;
  _QWORD *v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  __int128 v113;
  __int128 v114;
  _QWORD *v115;
  _QWORD *v116;
  _QWORD *v117;
  void **v118;
  void *v119;
  _QWORD *v120;
  _QWORD *v121;
  _QWORD *v122;
  _QWORD *v123;
  id v124;
  unint64_t v125;
  size_t v126;
  uint64_t v127;
  unint64_t v128;
  _QWORD *v129;
  unint64_t v130;
  unsigned int EnumTagSinglePayload;
  _QWORD *v132;
  uint64_t v133;
  unint64_t v134;
  int v135;
  unint64_t v136;
  unint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  unint64_t v140;
  unint64_t v141;
  void (*v142)(unint64_t, unint64_t, uint64_t);
  unint64_t v143;
  void *v144;
  const void *v145;
  size_t v146;
  uint64_t v147;
  void (*v148)(void *, const void *, uint64_t);
  size_t v149;
  uint64_t v150;
  uint64_t v151;
  size_t v152;
  unint64_t v153;
  unsigned int v154;
  unint64_t v155;
  unint64_t v156;
  size_t __n;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  size_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;

  v177 = sub_1C2CFBCAC();
  v3 = *(_QWORD *)(v177 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v170 = sub_1C2CFCD44();
  v5 = *(_QWORD *)(v170 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v165 = sub_1C2CFBD9C();
  v7 = *(_QWORD *)(v165 - 8);
  v8 = *(_DWORD *)(v7 + 80) | v6;
  v168 = sub_1C2CFBFD0();
  v9 = *(_QWORD *)(v168 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v171 = sub_1C2CFBF28();
  v11 = *(_QWORD *)(v171 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 | v10) & 0xF8 | v12 | 7;
  v14 = v13 | v4;
  v15 = v4;
  v16 = sub_1C2CFC114();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v13 | v4 | v18;
  v173 = v14 + 16;
  v20 = *(_QWORD *)(v3 + 64);
  v175 = v20 + v13;
  v169 = v5;
  v21 = *(_QWORD *)(v5 + 64);
  v164 = v21 + 7;
  if (((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v21)
    v21 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v21 <= *(_QWORD *)(v7 + 64))
    v21 = *(_QWORD *)(v7 + 64);
  v166 = *(_QWORD *)(v9 + 64) + v12;
  v167 = v9;
  v22 = *(_DWORD *)(v11 + 84);
  v163 = v11;
  v23 = *(_QWORD *)(v11 + 64);
  v24 = v3;
  v25 = v15;
  if (v22)
    v26 = v23;
  else
    v26 = v23 + 1;
  v27 = (v26 + 7 + (v166 & ~v12)) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v21 <= v28)
    v21 = (v27 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v29 = ((((((v27 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 <= v29)
    v21 = v29;
  v30 = 24;
  if (v21 > 0x18)
    v30 = v21;
  v172 = v30 + 1;
  v176 = v30;
  v31 = (((v30 + ((v20 + v13) & ~v13) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v32 = v18 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v33 = v18 + 16;
  if (*(_DWORD *)(v17 + 84) <= 0x7FFFFFFFu)
    v34 = 0x7FFFFFFF;
  else
    v34 = *(_DWORD *)(v17 + 84);
  v35 = (v18 + 32) & ~(unint64_t)v18;
  v36 = *(_QWORD *)(v17 + 64);
  v37 = v36 + v35 + (v33 & v32);
  v38 = v37 + v25;
  if (*(_DWORD *)(v24 + 84))
    v39 = v20;
  else
    v39 = v20 + 1;
  if (v39
     + (((v14 | v18) + 32) & ~(v14 | v18))
     + ((v37
       + v25
       + ((v18
         + 16
         + ((((v31 + ((v14 + 16) & ~v14) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v32)) & ~v25) <= 0x49)
    v40 = 73;
  else
    v40 = v39
        + (((v14 | v18) + 32) & ~(v14 | v18))
        + ((v37
          + v25
          + ((v18
            + 16
            + ((((v31 + ((v14 + 16) & ~v14) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v32)) & ~v25);
  v42 = ~v19;
  v43 = ~v14;
  v44 = ~v13;
  v45 = ~v25;
  v46 = a1;
  switch(*(_BYTE *)(a2 + v40))
  {
    case 0:
      v47 = a2;
      v48 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v48;
      v49 = v40;
      (**(void (***)(uint64_t, uint64_t))(v48 - 8))(a1, a2);
      v40 = v49;
      *(_BYTE *)(a1 + v49) = 0;
      goto LABEL_42;
    case 1:
      v50 = v40;
      v47 = a2;
      v51 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v51;
      (**(void (***)(uint64_t, uint64_t))(v51 - 8))(a1, a2);
      v52 = (_OWORD *)(a1 + 32);
      v53 = (_OWORD *)(a2 + 32);
      v54 = *(_QWORD *)(a2 + 56);
      if (v54)
      {
        v55 = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = v54;
        *(_QWORD *)(a1 + 64) = v55;
        (**(void (***)(_OWORD *, _OWORD *))(v54 - 8))(v52, v53);
      }
      else
      {
        v84 = *(_OWORD *)(a2 + 48);
        *v52 = *v53;
        *(_OWORD *)(a1 + 48) = v84;
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      }
      v71 = a3;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      v40 = v50;
      *(_BYTE *)(a1 + v50) = 1;
      goto LABEL_43;
    case 2:
      v47 = a2;
      v56 = *(id *)a2;
      v57 = v40;
      v58 = *(id *)a2;
      v40 = v57;
      *(_QWORD *)a1 = v56;
      *(_BYTE *)(a1 + v57) = 2;
      goto LABEL_42;
    case 3:
      v47 = a2;
      v59 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v59;
      *(_BYTE *)(a1 + v40) = 3;
      v60 = v40;
      sub_1C2CFD350();
      goto LABEL_41;
    case 4:
      v47 = a2;
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_BYTE *)(a1 + v40) = 4;
      goto LABEL_42;
    case 5:
      v146 = v26 + 7;
      v147 = ~v12;
      v156 = v31 + 41;
      v152 = v39;
      v153 = ~(unint64_t)v18;
      __n = v36 + v35 + (v33 & v32);
      v158 = v45;
      v161 = v18 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
      v162 = v18 + 16;
      v149 = v36 + v35;
      v150 = *(_QWORD *)(v16 - 8);
      v154 = *(_DWORD *)(v17 + 84);
      v159 = v38;
      v160 = v40;
      v151 = v16;
      v61 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v61;
      (**(void (***)(uint64_t, uint64_t))(v61 - 8))(a1, a2);
      v62 = (_QWORD *)((a1 + v19 + 32) & v42);
      v63 = (_QWORD *)((a2 + v19 + 32) & v42);
      *v62 = *v63;
      v62[1] = v63[1];
      v64 = ((unint64_t)v62 + v173) & v43;
      v174 = ((unint64_t)v63 + v173) & v43;
      v65 = *(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 16);
      swift_bridgeObjectRetain();
      v65(v64, v174, v177);
      v155 = v64;
      v66 = (v175 + v64) & v44;
      v67 = (v175 + v174) & v44;
      if (*(unsigned __int8 *)(v67 + v176) >= 8u)
      {
        if (v176 <= 3)
          v68 = v176;
        else
          v68 = 4;
        __asm { BR              X12 }
      }
      v47 = a2;
      break;
    case 6:
      v47 = a2;
      v69 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v69;
      v70 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v70;
      *(_BYTE *)(a1 + v40) = 6;
      v60 = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_41:
      v40 = v60;
LABEL_42:
      v71 = a3;
      goto LABEL_43;
    default:
      if (v40 <= 3)
        v41 = v40;
      else
        v41 = 4;
      __asm { BR              X14 }
      return result;
  }
  v148 = (void (*)(void *, const void *, uint64_t))v65;
  switch(*(_BYTE *)(v67 + v176))
  {
    case 0:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v169 + 16))(v66, v67, v170);
      *(_BYTE *)(v66 + v176) = 0;
      goto LABEL_58;
    case 1:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v169 + 16))(v66, v67, v170);
      *(_QWORD *)((v164 + v66) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v164 + v67) & 0xFFFFFFFFFFFFF8);
      *(_BYTE *)(v66 + v176) = 1;
      sub_1C2CFD350();
      goto LABEL_58;
    case 2:
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *(_QWORD *)(v66 + 8) = *(_QWORD *)(((v175 + v174) & v44) + 8);
      *(_QWORD *)(v66 + 16) = *(_QWORD *)(((v175 + v174) & v44) + 0x10);
      *(_BYTE *)(v66 + v176) = 2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_58;
    case 3:
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *(_BYTE *)(v66 + v176) = 3;
      swift_unknownObjectRetain();
      goto LABEL_58;
    case 4:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v66, v67, v165);
      *(_BYTE *)(v66 + v176) = 4;
      goto LABEL_58;
    case 5:
      v86 = *(void **)v67;
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *(_BYTE *)(v66 + v176) = 5;
      v87 = v86;
LABEL_58:
      v71 = a3;
      v85 = v172;
      goto LABEL_68;
    case 6:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v167 + 16))(v66, v67, v168);
      v88 = (void *)((v166 + v66) & v147);
      v89 = (const void *)((v166 + v67) & v147);
      if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v171))
      {
        memcpy(v88, v89, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v163 + 16))(v88, v89, v171);
        __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v171);
      }
      v71 = a3;
      v85 = v172;
      v103 = (_QWORD *)(((unint64_t)v88 + v146) & 0xFFFFFFFFFFFFFFF8);
      v104 = (_QWORD *)(((unint64_t)v89 + v146) & 0xFFFFFFFFFFFFFFF8);
      *v103 = *v104;
      v103[1] = v104[1];
      v105 = ((unint64_t)v103 + 19) & 0xFFFFFFFFFFFFFFF8;
      v106 = ((unint64_t)v104 + 19) & 0xFFFFFFFFFFFFFFF8;
      v107 = *(_DWORD *)v106;
      *(_BYTE *)(v105 + 4) = *(_BYTE *)(v106 + 4);
      *(_DWORD *)v105 = v107;
      *(_BYTE *)(v66 + v176) = 6;
      swift_bridgeObjectRetain();
      goto LABEL_68;
    case 7:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v167 + 16))(v66, v67, v168);
      v90 = (void *)((v166 + v66) & v147);
      v91 = (const void *)((v166 + v67) & v147);
      if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v171))
      {
        memcpy(v90, v91, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v163 + 16))(v90, v91, v171);
        __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v171);
      }
      v85 = v172;
      v92 = (_QWORD *)(((unint64_t)v90 + v146) & 0xFFFFFFFFFFFFFFF8);
      v93 = (_QWORD *)(((unint64_t)v91 + v146) & 0xFFFFFFFFFFFFFFF8);
      *v92 = *v93;
      v92[1] = v93[1];
      v94 = ((unint64_t)v92 + 19) & 0xFFFFFFFFFFFFFFF8;
      v95 = ((unint64_t)v93 + 19) & 0xFFFFFFFFFFFFFFF8;
      v96 = *(_DWORD *)v95;
      *(_BYTE *)(v94 + 4) = *(_BYTE *)(v95 + 4);
      *(_DWORD *)v94 = v96;
      v97 = (_QWORD *)(((v66 | 7) + v28) & 0xFFFFFFFFFFFFFFF8);
      v98 = (_QWORD *)(((v67 | 7) + v28) & 0xFFFFFFFFFFFFFFF8);
      *v97 = *v98;
      v97[1] = v98[1];
      v99 = (_QWORD *)(((unint64_t)v97 + 23) & 0xFFFFFFFFFFFFFFF8);
      v100 = (_QWORD *)(((unint64_t)v98 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v99 = *v100;
      v99[1] = v100[1];
      v101 = (_QWORD *)(((unint64_t)v99 + 23) & 0xFFFFFFFFFFFFFFF8);
      v102 = (_QWORD *)(((unint64_t)v100 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v101 = *v102;
      v101[1] = v102[1];
      *(_BYTE *)(v66 + v176) = 7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46 = a1;
      goto LABEL_65;
    default:
      v85 = v172;
      memcpy((void *)v66, (const void *)v67, v172);
LABEL_65:
      v71 = a3;
LABEL_68:
      v108 = (_QWORD *)(((v67 | 7) + v85) & 0xFFFFFFFFFFFFFFF8);
      v109 = (_QWORD *)(((v66 | 7) + v85) & 0xFFFFFFFFFFFFF8);
      *v109 = *v108;
      v110 = ((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8;
      v111 = ((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8;
      v112 = *(_QWORD *)(v111 + 24);
      swift_bridgeObjectRetain();
      if (v112 < 0xFFFFFFFF)
      {
        v113 = *(_OWORD *)v111;
        v114 = *(_OWORD *)(v111 + 16);
        *(_QWORD *)(v110 + 32) = *(_QWORD *)(v111 + 32);
        *(_OWORD *)v110 = v113;
        *(_OWORD *)(v110 + 16) = v114;
      }
      else
      {
        *(_QWORD *)(v110 + 24) = v112;
        *(_QWORD *)(v110 + 32) = *(_QWORD *)(v111 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v112 - 8))(v110, v111, v112);
      }
      *(_BYTE *)(v110 + 40) = *(_BYTE *)(v111 + 40);
      v115 = (_QWORD *)((v155 | 7) + v156);
      v116 = (_QWORD *)((v174 | 7) + v156);
      *v115 = *v116;
      v117 = (_QWORD *)(((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFF8);
      v118 = (void **)(((unint64_t)v116 + 15) & 0xFFFFFFFFFFFFFFF8);
      v119 = *v118;
      *v117 = *v118;
      v120 = (_QWORD *)(((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8);
      v121 = (_QWORD *)(((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v120 = *v121;
      v120[1] = v121[1];
      v122 = (_QWORD *)(((unint64_t)v120 + v162) & v161);
      v123 = (_QWORD *)(((unint64_t)v121 + v162) & v161);
      swift_bridgeObjectRetain();
      v124 = v119;
      swift_bridgeObjectRetain();
      if (v34 >= 1)
      {
        v125 = v123[1];
        if (v125 >= 0xFFFFFFFF)
          LODWORD(v125) = -1;
        v126 = __n;
        if ((v125 + 1) <= 1)
        {
          v127 = v162;
          v128 = v161;
          v129 = (_QWORD *)(((unint64_t)v123 + v162) & v161);
          goto LABEL_82;
        }
LABEL_86:
        memcpy(v122, v123, v126);
        goto LABEL_92;
      }
      v129 = (_QWORD *)(((unint64_t)v123 + v162) & v161);
      v127 = v162;
      if ((v154 & 0x80000000) != 0)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v162 + (((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8)) & v153, v154, v151);
        v128 = v161;
        v127 = v162;
      }
      else
      {
        v128 = v161;
        v130 = *(_QWORD *)((((unint64_t)v123 + v162) & v161) + 8);
        if (v130 >= 0xFFFFFFFF)
          LODWORD(v130) = -1;
        EnumTagSinglePayload = v130 + 1;
      }
      v126 = __n;
      if (EnumTagSinglePayload > 1)
        goto LABEL_86;
LABEL_82:
      *v122 = *v123;
      v122[1] = v123[1];
      v132 = (_QWORD *)(((unint64_t)v122 + v127) & v128);
      v133 = v127;
      swift_bridgeObjectRetain();
      if ((v154 & 0x80000000) != 0)
      {
        v137 = v133 + (((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8);
        v136 = v153;
        v135 = __swift_getEnumTagSinglePayload(v137 & v153, v154, v151);
      }
      else
      {
        v134 = v129[1];
        if (v134 >= 0xFFFFFFFF)
          LODWORD(v134) = -1;
        v135 = v134 + 1;
        v136 = v153;
      }
      if (v135)
      {
        memcpy(v132, v129, v149);
      }
      else
      {
        *v132 = *v129;
        v132[1] = v129[1];
        v138 = (_QWORD *)(((unint64_t)v132 + 23) & 0xFFFFFFFFFFFFFFF8);
        v139 = (_QWORD *)(((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v138 = *v139;
        v138[1] = v139[1];
        v140 = ((unint64_t)v138 + v162) & v136;
        v141 = ((unint64_t)v139 + v162) & v136;
        v142 = *(void (**)(unint64_t, unint64_t, uint64_t))(v150 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v143 = v141;
        v47 = a2;
        v142(v140, v143, v151);
      }
      v46 = a1;
LABEL_92:
      v144 = (void *)(((unint64_t)v122 + v159) & v158);
      v145 = (const void *)(((unint64_t)v123 + v159) & v158);
      if (__swift_getEnumTagSinglePayload((uint64_t)v145, 1, v177))
      {
        memcpy(v144, v145, v152);
      }
      else
      {
        v148(v144, v145, v177);
        __swift_storeEnumTagSinglePayload((uint64_t)v144, 0, 1, v177);
      }
      v40 = v160;
      *(_BYTE *)(v46 + v160) = 5;
LABEL_43:
      v72 = *(_QWORD *)(*(_QWORD *)(v71 + 16) - 8);
      v73 = *(unsigned __int8 *)(v72 + 80);
      v74 = v40 + v73 + 1;
      v75 = (v74 + v46) & ~v73;
      v76 = (v74 + v47) & ~v73;
      (*(void (**)(uint64_t, uint64_t))(v72 + 16))(v75, v76);
      v77 = *(_QWORD *)(v72 + 64) + 7;
      v78 = (v77 + v75) & 0xFFFFFFFFFFFFFFF8;
      v79 = (v77 + v76) & 0xFFFFFFFFFFFFFFF8;
      v80 = *(_QWORD *)(v79 + 24);
      if (v80 < 0xFFFFFFFF)
      {
        v81 = *(_OWORD *)v79;
        v82 = *(_OWORD *)(v79 + 16);
        *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
        *(_OWORD *)v78 = v81;
        *(_OWORD *)(v78 + 16) = v82;
      }
      else
      {
        *(_QWORD *)(v78 + 24) = v80;
        *(_QWORD *)(v78 + 32) = *(_QWORD *)(v79 + 32);
        (**(void (***)(unint64_t, unint64_t))(v80 - 8))(v78, v79);
      }
      *(_BYTE *)(v78 + 40) = *(_BYTE *)(v79 + 40);
      return v46;
  }
}

uint64_t sub_1C2A58538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  size_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unsigned int EnumTagSinglePayload;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  void (*v63)(unint64_t, unint64_t, uint64_t);
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t result;
  void *v104;
  id v105;
  void *v106;
  const void *v107;
  unint64_t v108;
  void *v109;
  const void *v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  unint64_t v114;
  unint64_t v115;
  int v116;
  _QWORD *v117;
  _QWORD *v118;
  unint64_t v119;
  unint64_t v120;
  int v121;
  _QWORD *v122;
  _QWORD *v123;
  _QWORD *v124;
  _QWORD *v125;
  _QWORD *v126;
  _QWORD *v127;
  _QWORD *v128;
  _QWORD *v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  __int128 v133;
  __int128 v134;
  _QWORD *v135;
  _QWORD *v136;
  _QWORD *v137;
  void **v138;
  void *v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  _QWORD *v143;
  id v144;
  unint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  unint64_t v148;
  unsigned int v149;
  _QWORD *v150;
  unint64_t v151;
  void *v152;
  const void *v153;
  size_t v154;
  void *v155;
  const void *v156;
  _QWORD *v157;
  _QWORD *v158;
  unint64_t v159;
  unint64_t v160;
  void (*v161)(unint64_t, unint64_t, uint64_t);
  unint64_t v162;
  void (*v163)(uint64_t, uint64_t);
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  size_t __n;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  size_t v178;
  uint64_t v179;
  size_t v180;
  unint64_t v181;
  uint64_t v182;
  unsigned int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  unint64_t v189;
  int v190;
  uint64_t v191;
  size_t v192;
  size_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v198;

  v3 = a2;
  if (a1 == a2)
    goto LABEL_97;
  v196 = sub_1C2CFBCAC();
  v4 = *(_QWORD *)(v196 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v177 = sub_1C2CFCD44();
  v6 = *(_QWORD *)(v177 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v167 = sub_1C2CFBD9C();
  v8 = *(_QWORD *)(v167 - 8);
  v9 = *(_DWORD *)(v8 + 80) | v7;
  v175 = sub_1C2CFBFD0();
  v10 = *(_QWORD *)(v175 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v179 = sub_1C2CFBF28();
  v12 = *(_QWORD *)(v179 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v9 | v11) & 0xF8 | v13 | 7;
  v15 = v14 | v5;
  v182 = sub_1C2CFC114();
  v16 = *(_QWORD *)(v182 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = v14 | v5 | v17;
  v185 = (v14 | v5) + 16;
  v19 = *(_QWORD *)(v4 + 64);
  v186 = v19 + v14;
  v176 = v6;
  v20 = *(_QWORD *)(v6 + 64);
  v165 = v20 + 7;
  v166 = v8;
  if (((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v20)
    v20 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= *(_QWORD *)(v8 + 64))
    v20 = *(_QWORD *)(v8 + 64);
  v173 = *(_QWORD *)(v10 + 64) + v13;
  v174 = v10;
  v164 = v12;
  if (*(_DWORD *)(v12 + 84))
    v21 = *(_QWORD *)(v12 + 64);
  else
    v21 = *(_QWORD *)(v12 + 64) + 1;
  __n = v21;
  v170 = v21 + 7;
  v22 = (v21 + 7 + (v173 & ~v13)) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v20 <= v23)
    v20 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v24 = ((((((v22 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v20 <= v24)
    v20 = v24;
  v25 = 24;
  if (v20 > 0x18)
    v25 = v20;
  v193 = v25 + 1;
  v188 = v25;
  v26 = (((v25 + ((v19 + v14) & ~v14) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v183 = *(_DWORD *)(v16 + 84);
  if (v183 <= 0x7FFFFFFF)
    v28 = 0x7FFFFFFF;
  else
    v28 = *(_DWORD *)(v16 + 84);
  v190 = v28;
  v194 = v17 + 16;
  v195 = v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v171 = *(_QWORD *)(v182 - 8);
  v169 = *(_QWORD *)(v16 + 64) + ((v17 + 32) & ~(unint64_t)v17);
  v178 = v169 + (v194 & v27);
  v192 = v178 + v5;
  if (*(_DWORD *)(v4 + 84))
    v29 = *(_QWORD *)(v4 + 64);
  else
    v29 = v19 + 1;
  v180 = v29;
  if (v29
     + (((v15 | v17) + 32) & ~(v15 | v17))
     + ((v178
       + v5
       + ((v17
         + 16
         + ((((v26 + ((v15 + 16) & ~v15) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v27)) & ~v5) <= 0x49)
    v30 = 73;
  else
    v30 = v29
        + (((v15 | v17) + 32) & ~(v15 | v17))
        + ((v178
          + v5
          + ((v17
            + 16
            + ((((v26 + ((v15 + 16) & ~v15) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v27)) & ~v5);
  v32 = ~v18;
  v184 = ~v15;
  v33 = ~v14;
  v172 = ~v13;
  v189 = v26 + 41;
  v181 = ~(unint64_t)v17;
  v191 = ~v5;
  v34 = v18;
  v198 = v30;
  switch(*(_BYTE *)(a1 + v30))
  {
    case 0:
      v35 = a1;
      goto LABEL_32;
    case 1:
      __swift_destroy_boxed_opaque_existential_1(a1);
      if (!*(_QWORD *)(a1 + 56))
        break;
      v35 = a1 + 32;
LABEL_32:
      __swift_destroy_boxed_opaque_existential_1(v35);
      break;
    case 2:

      break;
    case 3:
      swift_release();
      break;
    case 4:
      break;
    case 5:
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      v36 = (v185 + ((a1 + v34 + 32) & v32)) & v184;
      v163 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v163(v36, v196);
      v37 = (id *)((v186 + v36) & v33);
      if (*((unsigned __int8 *)v37 + v188) >= 8u)
      {
        if (v188 <= 3)
          v38 = v188;
        else
          v38 = 4;
        __asm { BR              X12 }
      }
      switch(*((_BYTE *)v37 + v188))
      {
        case 0:
          v40 = v6;
          v39 = v177;
          goto LABEL_47;
        case 1:
          (*(void (**)(id *, uint64_t))(v6 + 8))(v37, v177);
          swift_release();
          break;
        case 2:
          swift_bridgeObjectRelease();
          goto LABEL_55;
        case 3:
          swift_unknownObjectRelease();
          break;
        case 4:
          v40 = v8;
          v39 = v167;
LABEL_47:
          (*(void (**)(id *, uint64_t))(v40 + 8))(v37, v39);
          break;
        case 5:

          break;
        case 6:
          (*(void (**)(id *, uint64_t))(v174 + 8))(v37, v175);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v37 + v173) & v172, 1, v179))
            (*(void (**)(unint64_t, uint64_t))(v164 + 8))(((unint64_t)v37 + v173) & v172, v179);
          goto LABEL_55;
        case 7:
          (*(void (**)(id *, uint64_t))(v174 + 8))(v37, v175);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v37 + v173) & v172, 1, v179))
            (*(void (**)(unint64_t, uint64_t))(v164 + 8))(((unint64_t)v37 + v173) & v172, v179);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_55:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      v41 = (((((unint64_t)v37 | 7) + v193) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v41 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v41);
      swift_bridgeObjectRelease();
      v42 = (id *)((((v185 + ((a1 + v34 + 32) & v32)) & v184 | 7) + v189 + 15) & 0xFFFFFFFFFFFFF8);

      swift_bridgeObjectRelease();
      v43 = (v194 + (((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8)) & v195;
      if (v190 < 1)
      {
        v45 = (v194 + v43) & v195;
        if ((v183 & 0x80000000) != 0)
        {
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v194 + ((v45 + 23) & 0xFFFFFFFFFFFFFFF8)) & v181, v183, v182);
        }
        else
        {
          v46 = *(_QWORD *)(((v194 + v43) & v195) + 8);
          if (v46 >= 0xFFFFFFFF)
            LODWORD(v46) = -1;
          EnumTagSinglePayload = v46 + 1;
        }
        if (EnumTagSinglePayload > 1)
          goto LABEL_74;
      }
      else
      {
        LODWORD(v44) = -1;
        if (*(_QWORD *)(v43 + 8) < 0xFFFFFFFFuLL)
          v44 = *(_QWORD *)(v43 + 8);
        if ((v44 + 1) > 1)
          goto LABEL_74;
        v45 = (v194 + v43) & v195;
      }
      swift_bridgeObjectRelease();
      if ((v183 & 0x80000000) != 0)
      {
        if (!__swift_getEnumTagSinglePayload((v194 + ((v45 + 23) & 0xFFFFFFFFFFFFFFF8)) & v181, v183, v182))
        {
LABEL_73:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v171 + 8))((v194 + ((v45 + 23) & 0xFFFFFFFFFFFFFFF8)) & v181, v182);
        }
      }
      else
      {
        v48 = *(_QWORD *)(v45 + 8);
        if (v48 >= 0xFFFFFFFF)
          LODWORD(v48) = -1;
        if ((_DWORD)v48 == -1)
          goto LABEL_73;
      }
LABEL_74:
      if (!__swift_getEnumTagSinglePayload((v192 + v43) & v191, 1, v196))
        v163((v192 + v43) & v191, v196);
      break;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      if (v30 <= 3)
        v31 = v30;
      else
        v31 = 4;
      __asm { BR              X14 }
      return result;
  }
  switch(*(_BYTE *)(a2 + v198))
  {
    case 0:
      v50 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v50;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v50 - 8))(a1, a2);
      *(_BYTE *)(a1 + v198) = 0;
      goto LABEL_96;
    case 1:
      v51 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v51;
      (**(void (***)(uint64_t, uint64_t))(v51 - 8))(a1, a2);
      v52 = (_OWORD *)(a1 + 32);
      v53 = (__int128 *)(a2 + 32);
      v54 = *(_QWORD *)(a2 + 56);
      if (v54)
      {
        *(_QWORD *)(a1 + 56) = v54;
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        (**(void (***)(_OWORD *, __int128 *))(v54 - 8))(v52, v53);
      }
      else
      {
        v68 = *v53;
        v69 = *(_OWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *v52 = v68;
        *(_OWORD *)(a1 + 48) = v69;
      }
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_BYTE *)(a1 + v198) = 1;
      goto LABEL_96;
    case 2:
      v55 = *(id *)a2;
      v56 = *(id *)a2;
      *(_QWORD *)a1 = v55;
      *(_BYTE *)(a1 + v198) = 2;
      goto LABEL_96;
    case 3:
      v57 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v57;
      *(_BYTE *)(a1 + v198) = 3;
      sub_1C2CFD350();
      goto LABEL_96;
    case 4:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_BYTE *)(a1 + v198) = 4;
      goto LABEL_96;
    case 5:
      v58 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v58;
      (**(void (***)(uint64_t, uint64_t))(v58 - 8))(a1, a2);
      v59 = (_QWORD *)((a1 + v34 + 32) & v32);
      v60 = (_QWORD *)((a2 + v34 + 32) & v32);
      *v59 = *v60;
      v59[1] = v60[1];
      v61 = ((unint64_t)v59 + v185) & v184;
      v62 = ((unint64_t)v60 + v185) & v184;
      v63 = *(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16);
      swift_bridgeObjectRetain();
      v64 = v196;
      v63(v61, v62, v196);
      v65 = (v186 + v61) & v33;
      v66 = (v186 + v62) & v33;
      if (*(unsigned __int8 *)(v66 + v188) >= 8u)
      {
        if (v188 <= 3)
          v67 = v188;
        else
          v67 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v66 + v188))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v176 + 16))((v186 + v61) & v33, (v186 + v62) & v33, v177);
          *(_BYTE *)(v65 + v188) = 0;
          break;
        case 1:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v176 + 16))((v186 + v61) & v33, (v186 + v62) & v33, v177);
          *(_QWORD *)((v165 + v65) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v165 + v66) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v65 + v188) = 1;
          sub_1C2CFD350();
          break;
        case 2:
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *(_QWORD *)(((v186 + v61) & v33) + 8) = *(_QWORD *)(((v186 + v62) & v33) + 8);
          *(_QWORD *)(((v186 + v61) & v33) + 0x10) = *(_QWORD *)(((v186 + v62) & v33) + 0x10);
          *(_BYTE *)(v65 + v188) = 2;
          goto LABEL_139;
        case 3:
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *(_BYTE *)(v65 + v188) = 3;
          swift_unknownObjectRetain();
          break;
        case 4:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v166 + 16))((v186 + v61) & v33, (v186 + v62) & v33, v167);
          *(_BYTE *)(v65 + v188) = 4;
          break;
        case 5:
          v104 = *(void **)v66;
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *(_BYTE *)(v65 + v188) = 5;
          v105 = v104;
          break;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v174 + 16))((v186 + v61) & v33, (v186 + v62) & v33, v175);
          v187 = (_QWORD *)((v186 + v61) & v33);
          v106 = (void *)(((unint64_t)v187 + v173) & v172);
          v107 = (const void *)((v173 + v66) & v172);
          if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, v179))
          {
            v108 = ((unint64_t)v187 + v173) & v172;
            memcpy(v106, v107, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v164 + 16))(v106, v107, v179);
            v108 = ((unint64_t)v187 + v173) & v172;
            __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v179);
          }
          v111 = v194;
          v112 = (_QWORD *)((v170 + v108) & 0xFFFFFFFFFFFFFFF8);
          v113 = (_QWORD *)(((unint64_t)v107 + v170) & 0xFFFFFFFFFFFFFFF8);
          *v112 = *v113;
          v112[1] = v113[1];
          v114 = ((unint64_t)v112 + 19) & 0xFFFFFFFFFFFFFFF8;
          v115 = ((unint64_t)v113 + 19) & 0xFFFFFFFFFFFFFFF8;
          v116 = *(_DWORD *)v115;
          *(_BYTE *)(v114 + 4) = *(_BYTE *)(v115 + 4);
          *(_DWORD *)v114 = v116;
          v65 = (unint64_t)v187;
          *((_BYTE *)v187 + v188) = 6;
          swift_bridgeObjectRetain();
          goto LABEL_141;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v174 + 16))((v186 + v61) & v33, (v186 + v62) & v33, v175);
          v109 = (void *)((v173 + v65) & v172);
          v110 = (const void *)((v173 + v66) & v172);
          if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v179))
          {
            memcpy(v109, v110, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v164 + 16))(v109, v110, v179);
            __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v179);
          }
          v117 = (_QWORD *)(((unint64_t)v109 + v170) & 0xFFFFFFFFFFFFFFF8);
          v118 = (_QWORD *)(((unint64_t)v110 + v170) & 0xFFFFFFFFFFFFFFF8);
          *v117 = *v118;
          v117[1] = v118[1];
          v119 = ((unint64_t)v117 + 19) & 0xFFFFFFFFFFFFFFF8;
          v120 = ((unint64_t)v118 + 19) & 0xFFFFFFFFFFFFFFF8;
          v121 = *(_DWORD *)v120;
          *(_BYTE *)(v119 + 4) = *(_BYTE *)(v120 + 4);
          *(_DWORD *)v119 = v121;
          v122 = (_QWORD *)(((v65 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          v123 = (_QWORD *)(((v66 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          *v122 = *v123;
          v122[1] = v123[1];
          v124 = (_QWORD *)(((unint64_t)v122 + 23) & 0xFFFFFFFFFFFFFFF8);
          v125 = (_QWORD *)(((unint64_t)v123 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v124 = *v125;
          v124[1] = v125[1];
          v126 = (_QWORD *)(((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFFFF8);
          v127 = (_QWORD *)(((unint64_t)v125 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v126 = *v127;
          v126[1] = v127[1];
          *(_BYTE *)(v65 + v188) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_139:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        default:
          memcpy((void *)((v186 + v61) & v33), (const void *)((v186 + v62) & v33), v193);
          break;
      }
      v111 = v194;
LABEL_141:
      v128 = (_QWORD *)(((v66 | 7) + v193) & 0xFFFFFFFFFFFFFFF8);
      v129 = (_QWORD *)(((v65 | 7) + v193) & 0xFFFFFFFFFFFFF8);
      *v129 = *v128;
      v130 = ((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8;
      v131 = ((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8;
      v132 = *(_QWORD *)(v131 + 24);
      swift_bridgeObjectRetain();
      if (v132 < 0xFFFFFFFF)
      {
        v133 = *(_OWORD *)v131;
        v134 = *(_OWORD *)(v131 + 16);
        *(_QWORD *)(v130 + 32) = *(_QWORD *)(v131 + 32);
        *(_OWORD *)v130 = v133;
        *(_OWORD *)(v130 + 16) = v134;
      }
      else
      {
        *(_QWORD *)(v130 + 24) = v132;
        *(_QWORD *)(v130 + 32) = *(_QWORD *)(v131 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v132 - 8))(v130, v131, v132);
      }
      *(_BYTE *)(v130 + 40) = *(_BYTE *)(v131 + 40);
      v135 = (_QWORD *)((v61 | 7) + v189);
      v136 = (_QWORD *)((v62 | 7) + v189);
      *v135 = *v136;
      v137 = (_QWORD *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFF8);
      v138 = (void **)(((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8);
      v139 = *v138;
      *v137 = *v138;
      v140 = (_QWORD *)(((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8);
      v141 = (_QWORD *)(((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v140 = *v141;
      v140[1] = v141[1];
      v142 = (_QWORD *)(((unint64_t)v140 + v111) & v195);
      v143 = (_QWORD *)(((unint64_t)v141 + v111) & v195);
      swift_bridgeObjectRetain();
      v144 = v139;
      swift_bridgeObjectRetain();
      if (v190 < 1)
      {
        v147 = (_QWORD *)(((unint64_t)v143 + v111) & v195);
        v146 = v183;
        if ((v183 & 0x80000000) != 0)
        {
          v149 = __swift_getEnumTagSinglePayload((v111 + (((unint64_t)v147 + 23) & 0xFFFFFFFFFFFFFFF8)) & v181, v183, v182);
        }
        else
        {
          v148 = *(_QWORD *)((((unint64_t)v143 + v111) & v195) + 8);
          if (v148 >= 0xFFFFFFFF)
            LODWORD(v148) = -1;
          v149 = v148 + 1;
        }
        if (v149 <= 1)
          goto LABEL_155;
LABEL_160:
        v152 = v142;
        v153 = v143;
        v154 = v178;
        goto LABEL_161;
      }
      v145 = v143[1];
      if (v145 >= 0xFFFFFFFF)
        LODWORD(v145) = -1;
      v146 = v183;
      if ((v145 + 1) > 1)
        goto LABEL_160;
      v147 = (_QWORD *)(((unint64_t)v143 + v111) & v195);
LABEL_155:
      *v142 = *v143;
      v142[1] = v143[1];
      v150 = (_QWORD *)(((unint64_t)v142 + v111) & v195);
      swift_bridgeObjectRetain();
      if ((v146 & 0x80000000) != 0)
      {
        if (__swift_getEnumTagSinglePayload((v111 + (((unint64_t)v147 + 23) & 0xFFFFFFFFFFFFFFF8)) & v181, v146, v182))
        {
LABEL_159:
          v152 = (void *)(((unint64_t)v142 + v111) & v195);
          v153 = v147;
          v154 = v169;
LABEL_161:
          memcpy(v152, v153, v154);
          goto LABEL_162;
        }
      }
      else
      {
        v151 = v147[1];
        if (v151 >= 0xFFFFFFFF)
          LODWORD(v151) = -1;
        if ((_DWORD)v151 != -1)
          goto LABEL_159;
      }
      *v150 = *v147;
      *(_QWORD *)((((unint64_t)v142 + v111) & v195) + 8) = v147[1];
      v157 = (_QWORD *)(((unint64_t)v150 + 23) & 0xFFFFFFFFFFFFFFF8);
      v158 = (_QWORD *)(((unint64_t)v147 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v157 = *v158;
      v157[1] = v158[1];
      v159 = ((unint64_t)v157 + v111) & v181;
      v160 = ((unint64_t)v158 + v111) & v181;
      v161 = *(void (**)(unint64_t, unint64_t, uint64_t))(v171 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v162 = v160;
      v64 = v196;
      v161(v159, v162, v182);
LABEL_162:
      v155 = (void *)(((unint64_t)v142 + v192) & v191);
      v156 = (const void *)(((unint64_t)v143 + v192) & v191);
      if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, v64))
      {
        memcpy(v155, v156, v180);
      }
      else
      {
        v63((unint64_t)v155, (unint64_t)v156, v64);
        __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v64);
      }
      v3 = a2;
      *(_BYTE *)(a1 + v198) = 5;
LABEL_97:
      v70 = *(_QWORD *)(sub_1C2CFBCAC() - 8);
      v71 = *(unsigned __int8 *)(v70 + 80);
      v72 = *(_QWORD *)(sub_1C2CFCD44() - 8);
      v73 = *(_DWORD *)(v72 + 80);
      v74 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
      v75 = *(_DWORD *)(v74 + 80) | v73;
      v76 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
      v77 = *(_DWORD *)(v76 + 80);
      v78 = *(_QWORD *)(sub_1C2CFBF28() - 8);
      v79 = *(unsigned __int8 *)(v78 + 80);
      v80 = (v75 | v77) & 0xF8 | v79 | 7;
      v81 = v80 | v71;
      v82 = *(_QWORD *)(sub_1C2CFC114() - 8);
      v83 = *(_DWORD *)(v82 + 80);
      v84 = *(_QWORD *)(v70 + 64);
      v85 = *(_QWORD *)(v72 + 64);
      if (((v85 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v85)
        v85 = ((v85 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
      if (v85 <= *(_QWORD *)(v74 + 64))
        v85 = *(_QWORD *)(v74 + 64);
      v86 = *(_QWORD *)(v78 + 64) + ((*(_QWORD *)(v76 + 64) + v79) & ~v79);
      if (!*(_DWORD *)(v78 + 84))
        ++v86;
      v87 = (v86 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (v85 <= ((v87 + 19) & 0xFFFFFFFFFFFFFFF8 | 5))
        v85 = (v87 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      v88 = ((((((v87 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v85 <= v88)
        v85 = v88;
      if (v85 <= 0x18)
        v85 = 24;
      v89 = (((v83 + 32) & ~(unint64_t)v83)
           + v71
           + ((v83 + 16) & (v83 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
           + *(_QWORD *)(v82 + 64)
           + ((v83
             + 16
             + ((((((((v81 + 16) & ~v81)
                   + ((((((v84 + v80) & ~v80) + v85 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 48) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)) & (v83 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))) & ~v71;
      v90 = (((v81 | v83) + 32) & ~(v81 | v83)) + v84;
      if (!*(_DWORD *)(v70 + 84))
        ++v90;
      v91 = v90 + v89;
      if (v91 <= 0x49)
        v91 = 73;
      v92 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
      v93 = *(unsigned __int8 *)(v92 + 80);
      v94 = v91 + v93 + 1;
      v95 = (v94 + a1) & ~v93;
      v96 = (v94 + v3) & ~v93;
      (*(void (**)(uint64_t, uint64_t))(v92 + 24))(v95, v96);
      v97 = *(_QWORD *)(v92 + 64) + 7;
      v98 = (v97 + v95) & 0xFFFFFFFFFFFFFFF8;
      v99 = (v97 + v96) & 0xFFFFFFFFFFFFFFF8;
      v100 = *(_QWORD *)(v99 + 24);
      if (*(_QWORD *)(v98 + 24) < 0xFFFFFFFFuLL)
      {
        if (v100 >= 0xFFFFFFFF)
        {
          *(_QWORD *)(v98 + 24) = v100;
          *(_QWORD *)(v98 + 32) = *(_QWORD *)(v99 + 32);
          (**(void (***)(unint64_t, unint64_t))(v100 - 8))(v98, v99);
          goto LABEL_120;
        }
LABEL_119:
        v101 = *(_OWORD *)v99;
        v102 = *(_OWORD *)(v99 + 16);
        *(_QWORD *)(v98 + 32) = *(_QWORD *)(v99 + 32);
        *(_OWORD *)v98 = v101;
        *(_OWORD *)(v98 + 16) = v102;
        goto LABEL_120;
      }
      if (v100 < 0xFFFFFFFF)
      {
        __swift_destroy_boxed_opaque_existential_1(v98);
        goto LABEL_119;
      }
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v98, (uint64_t *)v99);
LABEL_120:
      *(_BYTE *)(v98 + 40) = *(_BYTE *)(v99 + 40);
      return a1;
    case 6:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + v198) = 6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_96:
      v3 = a2;
      goto LABEL_97;
    default:
      if (v198 <= 3)
        v49 = v198;
      else
        v49 = 4;
      __asm { BR              X12 }
      return result;
  }
}

_OWORD *sub_1C2A59854(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  size_t v24;
  _OWORD *v25;
  size_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  size_t v34;
  uint64_t v35;
  size_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  char v45;
  __int128 v46;
  unint64_t v47;
  __int128 v48;
  _OWORD *v49;
  _OWORD *v50;
  unint64_t v51;
  unint64_t v52;
  void (*v53)(unint64_t, unint64_t, uint64_t);
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  __int128 v67;
  __int128 v68;
  _OWORD *result;
  size_t v70;
  uint64_t v71;
  uint64_t v72;
  size_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  _OWORD *v78;
  char v79;
  __int128 v80;
  char v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  unint64_t v87;
  unint64_t v88;
  __int128 v89;
  __int128 v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  _OWORD *v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  unint64_t v99;
  _QWORD *v100;
  unint64_t v101;
  unsigned int EnumTagSinglePayload;
  _OWORD *v103;
  unint64_t v104;
  int v105;
  _OWORD *v106;
  _OWORD *v107;
  void *v108;
  const void *v109;
  _OWORD *v110;
  void *v111;
  const void *v112;
  void (*v113)(unint64_t, unint64_t, uint64_t);
  unint64_t v114;
  unint64_t v115;
  void *v116;
  unint64_t v117;
  const void *v118;
  _OWORD *v119;
  _OWORD *v120;
  unint64_t v121;
  unint64_t v122;
  int v123;
  _OWORD *v124;
  _OWORD *v125;
  _OWORD *v126;
  _OWORD *v127;
  _OWORD *v128;
  _OWORD *v129;
  unint64_t v130;
  unint64_t v131;
  int v132;
  size_t v133;
  size_t __n;
  unint64_t v135;
  uint64_t v136;
  size_t v137;
  unint64_t v138;
  unsigned int v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  size_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  size_t v152;
  size_t v153;
  int v154;
  uint64_t v155;
  _OWORD *v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v161 = sub_1C2CFBCAC();
  v3 = *(_QWORD *)(v161 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v8 = *(_DWORD *)(v7 + 80) | v6;
  v9 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v151 = sub_1C2CFBF28();
  v11 = *(_QWORD *)(v151 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 | v10) & 0xF8 | v12 | 7;
  v14 = v13 | v4;
  v15 = sub_1C2CFC114();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = v13 | v4 | v17;
  v19 = (v13 | v4) + 16;
  v20 = *(_QWORD *)(v3 + 64);
  v155 = v20 + v13;
  v150 = v5;
  v21 = *(_QWORD *)(v5 + 64);
  v145 = v21 + 7;
  v146 = v7;
  if (((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v21)
    v21 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v22 = *(_QWORD *)(v7 + 64);
  v23 = v11;
  if (v21 <= v22)
    v21 = v22;
  v148 = *(_QWORD *)(v9 + 64) + v12;
  v149 = v9;
  v24 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v24;
  v25 = a2;
  v147 = v24;
  v26 = v24 + 7;
  v27 = (v24 + 7 + (v148 & ~v12)) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v21 <= v28)
    v21 = (v27 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v29 = ((((((v27 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 <= v29)
    v21 = v29;
  v30 = 24;
  if (v21 > 0x18)
    v30 = v21;
  v153 = v30 + 1;
  v160 = v30;
  v31 = (((v30 + ((v20 + v13) & ~v13) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v32 = v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  if (*(_DWORD *)(v16 + 84) <= 0x7FFFFFFFu)
    v33 = 0x7FFFFFFF;
  else
    v33 = *(_DWORD *)(v16 + 84);
  v154 = v33;
  v152 = *(_QWORD *)(v16 + 64)
       + ((v17 + 32) & ~(unint64_t)v17)
       + ((v17 + 16) & v32);
  v34 = v152 + v4;
  v35 = v4;
  v158 = v3;
  if (*(_DWORD *)(v3 + 84))
    v36 = *(_QWORD *)(v3 + 64);
  else
    v36 = v20 + 1;
  if (v36
     + (((v14 | v17) + 32) & ~(v14 | v17))
     + ((v152
       + v4
       + ((v17
         + 16
         + ((((v31 + ((v14 + 16) & ~v14) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v32)) & ~v4) <= 0x49)
    v37 = 73;
  else
    v37 = v36
        + (((v14 | v17) + 32) & ~(v14 | v17))
        + ((v152
          + v4
          + ((v17
            + 16
            + ((((v31 + ((v14 + 16) & ~v14) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v32)) & ~v4);
  v39 = ~v18;
  v40 = ~v14;
  v41 = ~v13;
  v42 = ~v12;
  v43 = ~v35;
  v44 = a1;
  switch(*((_BYTE *)a2 + v37))
  {
    case 0:
      v45 = 0;
      v46 = a2[1];
      *a1 = *a2;
      a1[1] = v46;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      goto LABEL_38;
    case 1:
      v47 = v37;
      memcpy(a1, a2, 0x49uLL);
      v37 = v47;
      v45 = 1;
      goto LABEL_38;
    case 2:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v45 = 2;
      goto LABEL_38;
    case 3:
      *a1 = *a2;
      v45 = 3;
      goto LABEL_38;
    case 4:
      *(_WORD *)a1 = *(_WORD *)a2;
      v45 = 4;
      goto LABEL_38;
    case 5:
      v133 = v26;
      __n = v36;
      v135 = v31 + 41;
      v140 = ~(unint64_t)v17;
      v141 = *(_QWORD *)(v16 + 64) + ((v17 + 32) & v140);
      v138 = v37;
      v139 = *(_DWORD *)(v16 + 84);
      v142 = v17 + 16;
      v143 = *(_QWORD *)(v15 - 8);
      v137 = v34;
      v144 = v15;
      v48 = a2[1];
      *a1 = *a2;
      a1[1] = v48;
      v49 = (_OWORD *)(((unint64_t)a1 + v18 + 32) & v39);
      v50 = (_OWORD *)(((unint64_t)a2 + v18 + 32) & v39);
      *v49 = *v50;
      v51 = ((unint64_t)v49 + v19) & v40;
      v52 = ((unint64_t)v50 + v19) & v40;
      v53 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 32);
      v53(v51, v52, v161);
      v159 = v51;
      v54 = (v155 + v51) & v41;
      v55 = (v155 + v52) & v41;
      if (*(unsigned __int8 *)(v55 + v160) >= 8u)
      {
        if (v160 <= 3)
          v56 = v160;
        else
          v56 = 4;
        __asm { BR              X12 }
      }
      return result;
    case 6:
      v57 = a2[1];
      *a1 = *a2;
      a1[1] = v57;
      v45 = 6;
LABEL_38:
      v58 = a3;
      goto LABEL_39;
    default:
      if (v37 <= 3)
        v38 = v37;
      else
        v38 = 4;
      __asm { BR              X16 }
      return result;
  }
  v136 = v43;
  switch(*(_BYTE *)(v55 + v160))
  {
    case 0:
      (*(void (**)(void))(v150 + 32))();
      v54 = (v155 + v51) & v41;
      *(_BYTE *)(v54 + v160) = 0;
      goto LABEL_50;
    case 1:
      v78 = (_OWORD *)((v155 + v51) & v41);
      (*(void (**)(void))(v150 + 32))();
      v54 = (unint64_t)v78;
      *(_QWORD *)(((unint64_t)v78 + v145) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v145 + v55) & 0xFFFFFFFFFFFFF8);
      v79 = 1;
      goto LABEL_47;
    case 2:
      v80 = *(_OWORD *)v55;
      *(_QWORD *)(((v155 + v51) & v41) + 0x10) = *(_QWORD *)(((v155 + v52) & v41) + 0x10);
      *(_OWORD *)v54 = v80;
      v81 = 2;
      goto LABEL_49;
    case 3:
      *(_QWORD *)v54 = *(_QWORD *)v55;
      v81 = 3;
      goto LABEL_49;
    case 4:
      v78 = (_OWORD *)((v155 + v51) & v41);
      (*(void (**)(void))(v146 + 32))();
      v54 = (unint64_t)v78;
      v79 = 4;
LABEL_47:
      *((_BYTE *)v78 + v160) = v79;
      goto LABEL_50;
    case 5:
      *(_QWORD *)v54 = *(_QWORD *)v55;
      v81 = 5;
LABEL_49:
      *(_BYTE *)(v54 + v160) = v81;
LABEL_50:
      v58 = a3;
      v71 = v143;
      v72 = v144;
      v73 = v141;
      v74 = v142;
      v75 = v139;
      v76 = v140;
      v77 = v154;
      v70 = v153;
      goto LABEL_51;
    case 6:
      (*(void (**)(void))(v149 + 32))();
      v110 = (_OWORD *)((v155 + v51) & v41);
      v111 = (void *)(((unint64_t)v110 + v148) & v42);
      v156 = (_OWORD *)((v155 + v52) & v41);
      v112 = (const void *)((v148 + v55) & v42);
      if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, v151))
      {
        memcpy(v111, v112, v147);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v111, v112, v151);
        __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v151);
      }
      v58 = a3;
      v71 = v143;
      v72 = v144;
      v73 = v141;
      v74 = v142;
      v75 = v139;
      v76 = v140;
      v77 = v154;
      v70 = v153;
      v82 = v135;
      v54 = (unint64_t)v110;
      v128 = (_OWORD *)(((unint64_t)v111 + v133) & 0xFFFFFFFFFFFFFFF8);
      v129 = (_OWORD *)(((unint64_t)v112 + v133) & 0xFFFFFFFFFFFFFFF8);
      *v128 = *v129;
      v130 = ((unint64_t)v128 + 19) & 0xFFFFFFFFFFFFFFF8;
      v131 = ((unint64_t)v129 + 19) & 0xFFFFFFFFFFFFFFF8;
      v132 = *(_DWORD *)v131;
      *(_BYTE *)(v130 + 4) = *(_BYTE *)(v131 + 4);
      *(_DWORD *)v130 = v132;
      *((_BYTE *)v110 + v160) = 6;
      v84 = v161;
      v55 = (unint64_t)v156;
      v83 = v159;
      goto LABEL_52;
    case 7:
      v157 = v52;
      v113 = v53;
      v114 = v54;
      (*(void (**)(void))(v149 + 32))();
      v115 = v114;
      v116 = (void *)((v148 + v114) & v42);
      v117 = v55;
      v118 = (const void *)((v148 + v55) & v42);
      if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v151))
      {
        memcpy(v116, v118, v147);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v116, v118, v151);
        __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v151);
      }
      v58 = a3;
      v70 = v153;
      v119 = (_OWORD *)(((unint64_t)v116 + v133) & 0xFFFFFFFFFFFFFFF8);
      v120 = (_OWORD *)(((unint64_t)v118 + v133) & 0xFFFFFFFFFFFFFFF8);
      *v119 = *v120;
      v121 = ((unint64_t)v119 + 19) & 0xFFFFFFFFFFFFFFF8;
      v122 = ((unint64_t)v120 + 19) & 0xFFFFFFFFFFFFFFF8;
      v123 = *(_DWORD *)v122;
      *(_BYTE *)(v121 + 4) = *(_BYTE *)(v122 + 4);
      *(_DWORD *)v121 = v123;
      v54 = v115;
      v124 = (_OWORD *)(((v115 | 7) + v28) & 0xFFFFFFFFFFFFFFF8);
      v55 = v117;
      v125 = (_OWORD *)(((v117 | 7) + v28) & 0xFFFFFFFFFFFFFFF8);
      *v124 = *v125;
      v126 = (_OWORD *)(((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFFFF8);
      v127 = (_OWORD *)(((unint64_t)v125 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v126 = *v127;
      *(_OWORD *)(((unint64_t)v126 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v127 + 23) & 0xFFFFFFFFFFFFF8);
      v83 = v159;
      *(_BYTE *)(v115 + v160) = 7;
      v71 = v143;
      v72 = v144;
      v73 = v141;
      v74 = v142;
      v75 = v139;
      v53 = v113;
      v76 = v140;
      v77 = v154;
      v82 = v135;
      v84 = v161;
      v52 = v157;
      goto LABEL_52;
    default:
      v70 = v153;
      memcpy((void *)v54, (const void *)v55, v153);
      v54 = (v155 + v51) & v41;
      v58 = a3;
      v71 = v143;
      v72 = v144;
      v73 = v141;
      v74 = v142;
      v75 = v139;
      v76 = v140;
      v77 = v154;
LABEL_51:
      v82 = v135;
      v83 = v51;
      v84 = v161;
LABEL_52:
      v85 = (_QWORD *)(((v55 | 7) + v70) & 0xFFFFFFFFFFFFFFF8);
      v86 = (_QWORD *)(((v54 | 7) + v70) & 0xFFFFFFFFFFFFF8);
      *v86 = *v85;
      v87 = ((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFFFF8;
      v88 = ((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8;
      v89 = *(_OWORD *)v88;
      v90 = *(_OWORD *)(v88 + 16);
      *(_QWORD *)(v87 + 32) = *(_QWORD *)(v88 + 32);
      *(_OWORD *)v87 = v89;
      *(_OWORD *)(v87 + 16) = v90;
      *(_BYTE *)(v87 + 40) = *(_BYTE *)(v88 + 40);
      v91 = (_QWORD *)((v52 | 7) + v82);
      v92 = (_QWORD *)((v83 | 7) + v82);
      *v92 = *v91;
      v93 = (_QWORD *)(((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFF8);
      v94 = (_QWORD *)(((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFF8);
      *v94 = *v93;
      v95 = (_OWORD *)(((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8);
      v96 = (_OWORD *)(((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v95 = *v96;
      v97 = (_OWORD *)(((unint64_t)v95 + v74) & v32);
      v98 = (_OWORD *)(((unint64_t)v96 + v74) & v32);
      if (v77 >= 1)
      {
        v99 = *(_QWORD *)((((unint64_t)v96 + v74) & v32) + 8);
        if (v99 >= 0xFFFFFFFF)
          LODWORD(v99) = -1;
        if ((v99 + 1) <= 1)
        {
          v100 = (_QWORD *)(((unint64_t)v98 + v74) & v32);
          goto LABEL_63;
        }
LABEL_68:
        memcpy(v97, v98, v152);
        goto LABEL_72;
      }
      v100 = (_QWORD *)(((unint64_t)v98 + v74) & v32);
      if ((v75 & 0x80000000) != 0)
      {
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v74 + (((unint64_t)v100 + 23) & 0xFFFFFFFFFFFFFFF8)) & v76, v75, v144);
        v76 = v140;
        v73 = v141;
        v75 = v139;
        v74 = v142;
        v71 = v143;
        v72 = v144;
      }
      else
      {
        v101 = *(_QWORD *)((((unint64_t)v98 + v74) & v32) + 8);
        if (v101 >= 0xFFFFFFFF)
          LODWORD(v101) = -1;
        EnumTagSinglePayload = v101 + 1;
      }
      if (EnumTagSinglePayload > 1)
        goto LABEL_68;
LABEL_63:
      *v97 = *v98;
      v103 = (_OWORD *)(((unint64_t)v97 + v74) & v32);
      if ((v75 & 0x80000000) != 0)
      {
        v105 = __swift_getEnumTagSinglePayload((v74 + (((unint64_t)v100 + 23) & 0xFFFFFFFFFFFFFFF8)) & v76, v75, v72);
        v73 = v141;
        v71 = v143;
        if (v105)
        {
LABEL_67:
          memcpy(v103, v100, v73);
          goto LABEL_71;
        }
      }
      else
      {
        v104 = v100[1];
        if (v104 >= 0xFFFFFFFF)
          LODWORD(v104) = -1;
        if ((_DWORD)v104 != -1)
          goto LABEL_67;
      }
      *v103 = *(_OWORD *)v100;
      v106 = (_OWORD *)(((unint64_t)v103 + 23) & 0xFFFFFFFFFFFFFFF8);
      v107 = (_OWORD *)(((unint64_t)v100 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v106 = *v107;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 32))(((unint64_t)v106 + v142) & v140, ((unint64_t)v107 + v142) & v140, v144);
LABEL_71:
      v44 = a1;
LABEL_72:
      v108 = (void *)(((unint64_t)v97 + v137) & v136);
      v109 = (const void *)(((unint64_t)v98 + v137) & v136);
      if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v84))
      {
        memcpy(v108, v109, __n);
      }
      else
      {
        v53((unint64_t)v108, (unint64_t)v109, v84);
        __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v84);
      }
      v45 = 5;
      v25 = a2;
      v37 = v138;
LABEL_39:
      *((_BYTE *)v44 + v37) = v45;
      v59 = *(_QWORD *)(*(_QWORD *)(v58 + 16) - 8);
      v60 = *(unsigned __int8 *)(v59 + 80);
      v61 = v37 + v60 + 1;
      v62 = ((unint64_t)v44 + v61) & ~v60;
      v63 = ((unint64_t)v25 + v61) & ~v60;
      (*(void (**)(uint64_t, uint64_t))(v59 + 32))(v62, v63);
      v64 = *(_QWORD *)(v59 + 64) + 7;
      v65 = (v64 + v62) & 0xFFFFFFFFFFFFFFF8;
      v66 = (v64 + v63) & 0xFFFFFFFFFFFFFFF8;
      v67 = *(_OWORD *)v66;
      v68 = *(_OWORD *)(v66 + 16);
      *(_QWORD *)(v65 + 32) = *(_QWORD *)(v66 + 32);
      *(_OWORD *)v65 = v67;
      *(_OWORD *)(v65 + 16) = v68;
      *(_BYTE *)(v65 + 40) = *(_BYTE *)(v66 + 40);
      return v44;
  }
}

uint64_t sub_1C2A5A2EC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  size_t v18;
  unint64_t v19;
  int v20;
  size_t v21;
  size_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  int v30;
  size_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unsigned int EnumTagSinglePayload;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  unint64_t v58;
  __int128 v59;
  _OWORD *v60;
  _OWORD *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __int128 v68;
  _OWORD *v69;
  unint64_t v70;
  _OWORD *v71;
  uint64_t v72;
  char v73;
  __int128 v74;
  char v75;
  void *v76;
  const void *v77;
  const void *v78;
  uint64_t v79;
  _OWORD *v80;
  _OWORD *v81;
  unint64_t v82;
  unint64_t v83;
  int v84;
  uint64_t v85;
  _OWORD *v86;
  _OWORD *v87;
  unint64_t v88;
  unint64_t v89;
  int v90;
  _OWORD *v91;
  _OWORD *v92;
  _OWORD *v93;
  _OWORD *v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  unint64_t v99;
  unint64_t v100;
  __int128 v101;
  __int128 v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _OWORD *v107;
  _OWORD *v108;
  _OWORD *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t *v112;
  unint64_t v113;
  unsigned int v114;
  _OWORD *v115;
  unint64_t v116;
  void *v117;
  unint64_t *v118;
  size_t v119;
  void *v120;
  const void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  __int128 v152;
  __int128 v153;
  uint64_t result;
  _OWORD *v155;
  _OWORD *v156;
  void (*v157)(uint64_t, uint64_t);
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  size_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  size_t __n;
  uint64_t v173;
  size_t v174;
  uint64_t v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v178;
  void *__dst;
  void *__dsta;
  uint64_t v181;
  uint64_t v182;
  _OWORD *v183;
  unint64_t v184;
  uint64_t v185;
  void (*v186)(unint64_t, unint64_t, uint64_t);
  int v187;
  size_t v188;
  size_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;

  v3 = (uint64_t)a1;
  if (a1 == a2)
    goto LABEL_138;
  v193 = sub_1C2CFBCAC();
  v194 = v3;
  v4 = *(_QWORD *)(v193 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v171 = sub_1C2CFCD44();
  v6 = *(_QWORD *)(v171 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v162 = sub_1C2CFBD9C();
  v8 = *(_QWORD *)(v162 - 8);
  v9 = *(_DWORD *)(v8 + 80) | v7;
  v169 = sub_1C2CFBFD0();
  v10 = *(_QWORD *)(v169 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v173 = sub_1C2CFBF28();
  v12 = *(_QWORD *)(v173 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v9 | v11) & 0xF8 | v13 | 7;
  v15 = v14 | v5;
  v175 = sub_1C2CFC114();
  v16 = *(_QWORD *)(v175 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v181 = (v14 | v5) + 16;
  v18 = *(_QWORD *)(v4 + 64);
  v182 = v18 + v14;
  v170 = v6;
  v19 = *(_QWORD *)(v6 + 64);
  v160 = v19 + 7;
  v161 = v8;
  if (((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
    v19 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19 <= *(_QWORD *)(v8 + 64))
    v19 = *(_QWORD *)(v8 + 64);
  v167 = *(_QWORD *)(v10 + 64) + v13;
  v168 = v10;
  v20 = *(_DWORD *)(v12 + 84);
  v159 = v12;
  v21 = *(_QWORD *)(v12 + 64);
  if (v20)
    v22 = v21;
  else
    v22 = v21 + 1;
  v164 = v22 + 7;
  v23 = (v22 + 7 + (v167 & ~v13)) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v19 <= v24)
    v19 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v25 = ((((((v23 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= v25)
    v19 = v25;
  v26 = 24;
  if (v19 > 0x18)
    v26 = v19;
  v189 = v26 + 1;
  v190 = v26;
  v27 = (((v26 + ((v18 + v14) & ~v14) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v176 = *(_DWORD *)(v16 + 84);
  if (v176 <= 0x7FFFFFFF)
    v29 = 0x7FFFFFFF;
  else
    v29 = *(_DWORD *)(v16 + 84);
  v187 = v29;
  v191 = v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v192 = v17 + 16;
  v165 = *(_QWORD *)(v175 - 8);
  v163 = *(_QWORD *)(v16 + 64) + ((v17 + 32) & ~(unint64_t)v17);
  __n = v163 + (v192 & v28);
  v188 = __n + v5;
  v185 = v4;
  v30 = *(_DWORD *)(v4 + 84);
  v3 = v194;
  if (v30)
    v31 = v18;
  else
    v31 = v18 + 1;
  v174 = v31;
  if (v31
     + (((v15 | v17) + 32) & ~(v15 | v17))
     + ((__n
       + v5
       + ((v17
         + 16
         + ((((v27 + ((v15 + 16) & ~v15) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v28)) & ~v5) <= 0x49)
    v32 = 73;
  else
    v32 = v31
        + (((v15 | v17) + 32) & ~(v15 | v17))
        + ((__n
          + v5
          + ((v17
            + 16
            + ((((v27 + ((v15 + 16) & ~v15) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v28)) & ~v5);
  v177 = ~(v14 | v5 | v17);
  v178 = ~v15;
  __dst = (void *)(v15 | v17);
  v34 = ~v14;
  v166 = ~v13;
  v35 = v27 + 41;
  v36 = ~(unint64_t)v17;
  v37 = ~v5;
  v195 = v32;
  switch(*(_BYTE *)(v194 + v32))
  {
    case 0:
      v38 = v194;
      goto LABEL_32;
    case 1:
      __swift_destroy_boxed_opaque_existential_1(v194);
      if (!*(_QWORD *)(v194 + 56))
        goto LABEL_76;
      v38 = v194 + 32;
LABEL_32:
      __swift_destroy_boxed_opaque_existential_1(v38);
      goto LABEL_76;
    case 2:

      goto LABEL_76;
    case 3:
      swift_release();
      goto LABEL_76;
    case 4:
      goto LABEL_76;
    case 5:
      v158 = ~(unint64_t)v17;
      __swift_destroy_boxed_opaque_existential_1(v194);
      swift_bridgeObjectRelease();
      v39 = (v181 + (((unint64_t)__dst + v194 + 32) & v177)) & v178;
      v157 = *(void (**)(uint64_t, uint64_t))(v185 + 8);
      v157(v39, v193);
      v40 = (id *)((v182 + v39) & v34);
      if (*((unsigned __int8 *)v40 + v190) >= 8u)
      {
        if (v190 <= 3)
          v41 = v190;
        else
          v41 = 4;
        __asm { BR              X12 }
      }
      switch(*((_BYTE *)v40 + v190))
      {
        case 0:
          v43 = v170;
          v42 = v171;
          goto LABEL_47;
        case 1:
          (*(void (**)(id *, uint64_t))(v170 + 8))(v40, v171);
          swift_release();
          break;
        case 2:
          swift_bridgeObjectRelease();
          goto LABEL_55;
        case 3:
          swift_unknownObjectRelease();
          break;
        case 4:
          v43 = v161;
          v42 = v162;
LABEL_47:
          (*(void (**)(id *, uint64_t))(v43 + 8))(v40, v42);
          break;
        case 5:

          break;
        case 6:
          (*(void (**)(id *, uint64_t))(v168 + 8))(v40, v169);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v40 + v167) & v166, 1, v173))
            (*(void (**)(unint64_t, uint64_t))(v159 + 8))(((unint64_t)v40 + v167) & v166, v173);
          goto LABEL_55;
        case 7:
          (*(void (**)(id *, uint64_t))(v168 + 8))(v40, v169);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v40 + v167) & v166, 1, v173))
            (*(void (**)(unint64_t, uint64_t))(v159 + 8))(((unint64_t)v40 + v167) & v166, v173);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_55:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      v44 = (((((unint64_t)v40 | 7) + v189) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v44 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v44);
      v45 = v35;
      swift_bridgeObjectRelease();
      v46 = (id *)((((v181 + (((unint64_t)__dst + v194 + 32) & v177)) & v178 | 7) + v35 + 15) & 0xFFFFFFFFFFFFF8);

      swift_bridgeObjectRelease();
      v47 = (v192 + (((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8)) & v191;
      if (v187 < 1)
      {
        v49 = (v192 + v47) & v191;
        if ((v176 & 0x80000000) != 0)
        {
          EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v192 + ((v49 + 23) & 0xFFFFFFFFFFFFFFF8)) & v158, v176, v175);
        }
        else
        {
          v50 = *(_QWORD *)(((v192 + v47) & v191) + 8);
          if (v50 >= 0xFFFFFFFF)
            LODWORD(v50) = -1;
          EnumTagSinglePayload = v50 + 1;
        }
        if (EnumTagSinglePayload > 1)
          goto LABEL_74;
      }
      else
      {
        LODWORD(v48) = -1;
        if (*(_QWORD *)(v47 + 8) < 0xFFFFFFFFuLL)
          v48 = *(_QWORD *)(v47 + 8);
        if ((v48 + 1) > 1)
          goto LABEL_74;
        v49 = (v192 + v47) & v191;
      }
      swift_bridgeObjectRelease();
      if ((v176 & 0x80000000) != 0)
      {
        if (!__swift_getEnumTagSinglePayload((v192 + ((v49 + 23) & 0xFFFFFFFFFFFFFFF8)) & v158, v176, v175))
        {
LABEL_73:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v165 + 8))((v192 + ((v49 + 23) & 0xFFFFFFFFFFFFFFF8)) & v158, v175);
        }
      }
      else
      {
        v52 = *(_QWORD *)(v49 + 8);
        if (v52 >= 0xFFFFFFFF)
          LODWORD(v52) = -1;
        if ((_DWORD)v52 == -1)
          goto LABEL_73;
      }
LABEL_74:
      v53 = (v188 + v47) & v37;
      v36 = v158;
      v35 = v45;
      if (!__swift_getEnumTagSinglePayload(v53, 1, v193))
        v157(v53, v193);
LABEL_76:
      v54 = v195;
      switch(*((_BYTE *)a2 + v195))
      {
        case 0:
          v56 = 0;
          v57 = a2[1];
          *(_OWORD *)v194 = *a2;
          *(_OWORD *)(v194 + 16) = v57;
          *(_QWORD *)(v194 + 32) = *((_QWORD *)a2 + 4);
          goto LABEL_137;
        case 1:
          memcpy((void *)v194, a2, 0x49uLL);
          v54 = v195;
          v56 = 1;
          goto LABEL_137;
        case 2:
          *(_QWORD *)v194 = *(_QWORD *)a2;
          v56 = 2;
          goto LABEL_137;
        case 3:
          *(_OWORD *)v194 = *a2;
          v56 = 3;
          goto LABEL_137;
        case 4:
          *(_WORD *)v194 = *(_WORD *)a2;
          v56 = 4;
          goto LABEL_137;
        case 5:
          v58 = v35;
          v59 = a2[1];
          *(_OWORD *)v194 = *a2;
          *(_OWORD *)(v194 + 16) = v59;
          v60 = (_OWORD *)(((unint64_t)__dst + v194 + 32) & v177);
          v61 = (_OWORD *)(((uint64_t)__dst + (_QWORD)a2 + 32) & v177);
          *v60 = *v61;
          v62 = ((unint64_t)v60 + v181) & v178;
          v63 = ((unint64_t)v61 + v181) & v178;
          v186 = *(void (**)(unint64_t, unint64_t, uint64_t))(v185 + 32);
          v186(v62, v63, v193);
          v64 = (v182 + v62) & v34;
          v65 = v63;
          v66 = (v182 + v63) & v34;
          if (*(unsigned __int8 *)(v66 + v190) >= 8u)
          {
            if (v190 <= 3)
              v67 = v190;
            else
              v67 = 4;
            __asm { BR              X12 }
          }
          return result;
        case 6:
          v68 = a2[1];
          *(_OWORD *)v194 = *a2;
          *(_OWORD *)(v194 + 16) = v68;
          v56 = 6;
          goto LABEL_137;
        default:
          if (v195 <= 3)
            v55 = v195;
          else
            v55 = 4;
          __asm { BR              X12 }
          return result;
      }
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_76;
    default:
      if (v32 <= 3)
        v33 = v32;
      else
        v33 = 4;
      __asm { BR              X14 }
      return result;
  }
  switch(*(_BYTE *)(v66 + v190))
  {
    case 0:
      v69 = (_OWORD *)((v182 + v62) & v34);
      v70 = v62;
      (*(void (**)(_OWORD *, unint64_t, uint64_t))(v170 + 32))(v69, v66, v171);
      v64 = (unint64_t)v69;
      *((_BYTE *)v69 + v190) = 0;
      goto LABEL_103;
    case 1:
      v71 = (_OWORD *)((v182 + v62) & v34);
      v70 = v62;
      v72 = v190;
      (*(void (**)(_OWORD *, unint64_t, uint64_t))(v170 + 32))(v71, v66, v171);
      v64 = (unint64_t)v71;
      *(_QWORD *)(((unint64_t)v71 + v160) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v160 + v66) & 0xFFFFFFFFFFFFF8);
      v73 = 1;
      goto LABEL_102;
    case 2:
      v74 = *(_OWORD *)v66;
      *(_QWORD *)(((v182 + v62) & v34) + 0x10) = *(_QWORD *)(v66 + 16);
      *(_OWORD *)v64 = v74;
      v75 = 2;
      goto LABEL_105;
    case 3:
      *(_QWORD *)v64 = *(_QWORD *)v66;
      v75 = 3;
      goto LABEL_105;
    case 4:
      v71 = (_OWORD *)((v182 + v62) & v34);
      v70 = v62;
      v72 = v190;
      (*(void (**)(_OWORD *, unint64_t, uint64_t))(v161 + 32))(v71, v66, v162);
      v64 = (unint64_t)v71;
      v73 = 4;
LABEL_102:
      *((_BYTE *)v71 + v72) = v73;
LABEL_103:
      v62 = v70;
      goto LABEL_114;
    case 5:
      *(_QWORD *)v64 = *(_QWORD *)v66;
      v75 = 5;
LABEL_105:
      *(_BYTE *)(v64 + v190) = v75;
      goto LABEL_114;
    case 6:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v168 + 32))(v64, v66, v169);
      v183 = (_OWORD *)((v182 + v62) & v34);
      v76 = (void *)(((unint64_t)v183 + v167) & v166);
      v77 = (const void *)((v167 + v66) & v166);
      if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v173))
      {
        memcpy(v76, v77, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v159 + 32))(v76, v77, v173);
        __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v173);
      }
      v79 = v176;
      v80 = (_OWORD *)(((unint64_t)v76 + v164) & 0xFFFFFFFFFFFFFFF8);
      v81 = (_OWORD *)(((unint64_t)v77 + v164) & 0xFFFFFFFFFFFFFFF8);
      *v80 = *v81;
      v82 = ((unint64_t)v80 + 19) & 0xFFFFFFFFFFFFFFF8;
      v83 = ((unint64_t)v81 + 19) & 0xFFFFFFFFFFFFFFF8;
      v84 = *(_DWORD *)v83;
      *(_BYTE *)(v82 + 4) = *(_BYTE *)(v83 + 4);
      *(_DWORD *)v82 = v84;
      v64 = (unint64_t)v183;
      *((_BYTE *)v183 + v190) = 6;
      v85 = v192;
      goto LABEL_115;
    case 7:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v168 + 32))(v64, v66, v169);
      v184 = (v182 + v62) & v34;
      __dsta = (void *)((v167 + v184) & v166);
      v78 = (const void *)((v167 + v66) & v166);
      if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v173))
      {
        memcpy(__dsta, v78, v22);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v159 + 32))(__dsta, v78, v173);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v173);
      }
      v86 = (_OWORD *)(((unint64_t)__dsta + v164) & 0xFFFFFFFFFFFFFFF8);
      v87 = (_OWORD *)(((unint64_t)v78 + v164) & 0xFFFFFFFFFFFFFFF8);
      *v86 = *v87;
      v88 = ((unint64_t)v86 + 19) & 0xFFFFFFFFFFFFFFF8;
      v89 = ((unint64_t)v87 + 19) & 0xFFFFFFFFFFFFFFF8;
      v90 = *(_DWORD *)v89;
      *(_BYTE *)(v88 + 4) = *(_BYTE *)(v89 + 4);
      *(_DWORD *)v88 = v90;
      v64 = v184;
      v91 = (_OWORD *)(((v184 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
      v92 = (_OWORD *)(((v66 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
      *v91 = *v92;
      v93 = (_OWORD *)(((unint64_t)v91 + 23) & 0xFFFFFFFFFFFFFFF8);
      v94 = (_OWORD *)(((unint64_t)v92 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v93 = *v94;
      *(_OWORD *)(((unint64_t)v93 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v94 + 23) & 0xFFFFFFFFFFFFF8);
      *(_BYTE *)(v184 + v190) = 7;
      goto LABEL_114;
    default:
      memcpy((void *)v64, (const void *)v66, v189);
      v64 = (v182 + v62) & v34;
LABEL_114:
      v85 = v192;
      v79 = v176;
LABEL_115:
      v95 = v191;
      v96 = v37;
      v97 = (_QWORD *)(((v66 | 7) + v189) & 0xFFFFFFFFFFFFFFF8);
      v98 = (_QWORD *)(((v64 | 7) + v189) & 0xFFFFFFFFFFFFF8);
      *v98 = *v97;
      v99 = ((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8;
      v100 = ((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8;
      v101 = *(_OWORD *)v100;
      v102 = *(_OWORD *)(v100 + 16);
      *(_QWORD *)(v99 + 32) = *(_QWORD *)(v100 + 32);
      *(_OWORD *)v99 = v101;
      *(_OWORD *)(v99 + 16) = v102;
      *(_BYTE *)(v99 + 40) = *(_BYTE *)(v100 + 40);
      v103 = (_QWORD *)((v65 | 7) + v58);
      v104 = (_QWORD *)((v62 | 7) + v58);
      *v104 = *v103;
      v105 = (_QWORD *)(((unint64_t)v103 + 15) & 0xFFFFFFFFFFFFF8);
      v106 = (_QWORD *)(((unint64_t)v104 + 15) & 0xFFFFFFFFFFFFF8);
      *v106 = *v105;
      v107 = (_OWORD *)(((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFFFF8);
      v108 = (_OWORD *)(((unint64_t)v105 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v107 = *v108;
      v109 = (_OWORD *)(((unint64_t)v107 + v85) & v191);
      v110 = (unint64_t *)(((unint64_t)v108 + v85) & v191);
      if (v187 < 1)
      {
        v112 = (unint64_t *)(((unint64_t)v110 + v85) & v191);
        if ((v79 & 0x80000000) != 0)
        {
          v114 = __swift_getEnumTagSinglePayload((v85 + (((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFFFF8)) & v36, v79, v175);
          v95 = v191;
          v85 = v192;
        }
        else
        {
          v113 = *(_QWORD *)((((unint64_t)v110 + v85) & v191) + 8);
          if (v113 >= 0xFFFFFFFF)
            LODWORD(v113) = -1;
          v114 = v113 + 1;
        }
        if (v114 <= 1)
          goto LABEL_126;
LABEL_131:
        v117 = v109;
        v118 = v110;
        v119 = __n;
        goto LABEL_132;
      }
      v111 = *(_QWORD *)((((unint64_t)v108 + v85) & v191) + 8);
      if (v111 >= 0xFFFFFFFF)
        LODWORD(v111) = -1;
      if ((v111 + 1) > 1)
        goto LABEL_131;
      v112 = (unint64_t *)(((unint64_t)v110 + v85) & v191);
LABEL_126:
      *v109 = *(_OWORD *)v110;
      v115 = (_OWORD *)(((unint64_t)v109 + v85) & v95);
      if ((v79 & 0x80000000) != 0)
      {
        if (__swift_getEnumTagSinglePayload((v85 + (((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFFFF8)) & v36, v79, v175))
        {
LABEL_130:
          v117 = v115;
          v118 = v112;
          v119 = v163;
LABEL_132:
          memcpy(v117, v118, v119);
          goto LABEL_133;
        }
      }
      else
      {
        v116 = v112[1];
        if (v116 >= 0xFFFFFFFF)
          LODWORD(v116) = -1;
        if ((_DWORD)v116 != -1)
          goto LABEL_130;
      }
      *v115 = *(_OWORD *)v112;
      v155 = (_OWORD *)(((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFFFF8);
      v156 = (_OWORD *)(((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v155 = *v156;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v165 + 32))(((unint64_t)v155 + v192) & v36, ((unint64_t)v156 + v192) & v36, v175);
LABEL_133:
      v120 = (void *)(((unint64_t)v109 + v188) & v96);
      v121 = (const void *)(((unint64_t)v110 + v188) & v96);
      if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v193))
      {
        memcpy(v120, v121, v174);
      }
      else
      {
        v186((unint64_t)v120, (unint64_t)v121, v193);
        __swift_storeEnumTagSinglePayload((uint64_t)v120, 0, 1, v193);
      }
      v56 = 5;
      v54 = v195;
LABEL_137:
      *(_BYTE *)(v194 + v54) = v56;
LABEL_138:
      v122 = *(_QWORD *)(sub_1C2CFBCAC() - 8);
      v123 = *(unsigned __int8 *)(v122 + 80);
      v124 = *(_QWORD *)(sub_1C2CFCD44() - 8);
      v125 = *(_DWORD *)(v124 + 80);
      v126 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
      v127 = *(_DWORD *)(v126 + 80) | v125;
      v128 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
      v129 = *(_DWORD *)(v128 + 80);
      v130 = *(_QWORD *)(sub_1C2CFBF28() - 8);
      v131 = *(unsigned __int8 *)(v130 + 80);
      v132 = (v127 | v129) & 0xF8 | v131 | 7;
      v133 = v132 | v123;
      v134 = *(_QWORD *)(sub_1C2CFC114() - 8);
      v135 = *(_DWORD *)(v134 + 80);
      v136 = *(_QWORD *)(v122 + 64);
      v137 = *(_QWORD *)(v124 + 64);
      if (((v137 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v137)
        v137 = ((v137 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
      if (v137 <= *(_QWORD *)(v126 + 64))
        v137 = *(_QWORD *)(v126 + 64);
      v138 = *(_QWORD *)(v130 + 64) + ((*(_QWORD *)(v128 + 64) + v131) & ~v131);
      if (!*(_DWORD *)(v130 + 84))
        ++v138;
      v139 = (v138 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (v137 <= ((v139 + 19) & 0xFFFFFFFFFFFFFFF8 | 5))
        v137 = (v139 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      v140 = ((((((v139 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v137 <= v140)
        v137 = v140;
      if (v137 <= 0x18)
        v137 = 24;
      v141 = (((v135 + 32) & ~(unint64_t)v135)
            + v123
            + ((v135 + 16) & (v135 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
            + *(_QWORD *)(v134 + 64)
            + ((v135
              + 16
              + ((((((((v133 + 16) & ~v133)
                    + ((((((v136 + v132) & ~v132) + v137 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 48) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)) & (v135 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))) & ~v123;
      v142 = (((v133 | v135) + 32) & ~(v133 | v135)) + v136;
      if (!*(_DWORD *)(v122 + 84))
        ++v142;
      v143 = v142 + v141;
      if (v143 <= 0x49)
        v143 = 73;
      v144 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
      v145 = *(unsigned __int8 *)(v144 + 80);
      v146 = v143 + v145 + 1;
      v147 = (v146 + v3) & ~v145;
      v148 = ((unint64_t)a2 + v146) & ~v145;
      (*(void (**)(uint64_t, unint64_t))(v144 + 40))(v147, v148);
      v149 = *(_QWORD *)(v144 + 64) + 7;
      v150 = (v149 + v147) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v150 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v150);
      v151 = (v149 + v148) & 0xFFFFFFFFFFFFFFF8;
      v152 = *(_OWORD *)v151;
      v153 = *(_OWORD *)(v151 + 16);
      *(_QWORD *)(v150 + 32) = *(_QWORD *)(v151 + 32);
      *(_OWORD *)v150 = v152;
      *(_OWORD *)(v150 + 16) = v153;
      *(_BYTE *)(v150 + 40) = *(_BYTE *)(v151 + 40);
      return v3;
  }
}

uint64_t sub_1C2A5B434(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v42;
  unint64_t v43;

  v4 = *(_QWORD *)(sub_1C2CFBCAC() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v9 = *(_DWORD *)(v8 + 80) | v7;
  v10 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v9 | v11) & 0xF8 | v13 | 7;
  v15 = v14 | v5;
  v16 = *(_QWORD *)(sub_1C2CFC114() - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = ((v15 | v17) + 32) & ~(v15 | v17);
  v19 = *(_QWORD *)(v4 + 64);
  v20 = *(_QWORD *)(v6 + 64);
  if (((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v20)
    v20 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= *(_QWORD *)(v8 + 64))
    v20 = *(_QWORD *)(v8 + 64);
  v21 = *(_QWORD *)(v12 + 64) + ((*(_QWORD *)(v10 + 64) + v13) & ~v13);
  if (!*(_DWORD *)(v12 + 84))
    ++v21;
  v22 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v20 <= ((v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5))
    v20 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v23 = ((((((v22 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v20 <= v23)
    v20 = v23;
  if (v20 <= 0x18)
    v20 = 24;
  v24 = v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v25 = v17 + 16;
  v26 = (v17 + 32) & ~(unint64_t)v17;
  v27 = *(_QWORD *)(v16 + 64);
  v28 = *(_QWORD *)(a3 + 16);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int *)(v29 + 84);
  if (v30 <= 0x7FFFFFFE)
    v31 = 2147483646;
  else
    v31 = *(_DWORD *)(v29 + 84);
  v32 = v18 + v19;
  if (!*(_DWORD *)(v4 + 84))
    ++v32;
  v33 = v32
      + ((v26
        + v5
        + (v25 & v24)
        + v27
        + ((v25
          + ((((((((v15 + 16) & ~v15)
                + ((((((v19 + v14) & ~v14) + v20 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 48) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & v24)) & ~v5);
  if (v33 <= 0x49)
    v33 = 73;
  if (!a2)
    return 0;
  v34 = *(unsigned __int8 *)(v29 + 80);
  v35 = v33 + v34 + 1;
  v36 = *(_QWORD *)(v29 + 64) + 7;
  if (v31 < a2)
  {
    v37 = ((v36 + (v35 & ~(_DWORD)v34)) & 0xFFFFFFF8) + 41;
    if (v37 < 4)
      v38 = ((a2 - v31 + 255) >> (8 * v37)) + 1;
    else
      v38 = 2;
    if (v38 >= 0x10000)
      v39 = 4;
    else
      v39 = 2;
    if (v38 < 0x100)
      v39 = 1;
    if (v38 >= 2)
      v40 = v39;
    else
      v40 = 0;
    __asm { BR              X16 }
  }
  v42 = (v35 + a1) & ~v34;
  if (v30 >= 0x7FFFFFFE)
    return __swift_getEnumTagSinglePayload(v42, v30, v28);
  v43 = *(_QWORD *)(((v36 + v42) & 0xFFFFFFFFFFFFF8) + 0x18);
  if (v43 >= 0xFFFFFFFF)
    LODWORD(v43) = -1;
  if ((v43 + 1) >= 2)
    return v43;
  else
    return 0;
}

void sub_1C2A5B788(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  size_t v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;

  v5 = *(_QWORD *)(sub_1C2CFBCAC() - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v11 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v10 | v12) & 0xF8 | v14 | 7;
  v16 = v15 | v6;
  v17 = *(_QWORD *)(sub_1C2CFC114() - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v18;
  v20 = ((v16 | v19) + 32) & ~(v16 | v19);
  v21 = *(_QWORD *)(v5 + 64);
  v22 = *(_QWORD *)(v7 + 64);
  if (((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v22)
    v22 = ((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v22 <= *(_QWORD *)(v9 + 64))
    v22 = *(_QWORD *)(v9 + 64);
  v23 = *(_QWORD *)(v13 + 64) + ((*(_QWORD *)(v11 + 64) + v14) & ~v14);
  if (!*(_DWORD *)(v13 + 84))
    ++v23;
  v24 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (v22 <= ((v24 + 19) & 0xFFFFFFFFFFFFFFF8 | 5))
    v22 = (v24 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v25 = ((((((v24 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v22 <= v25)
    v22 = v25;
  if (v22 <= 0x18)
    v22 = 24;
  v26 = v18 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v27 = v19 + 16;
  v28 = (v19 + 16) & v26;
  v29 = (v19 + 32) & ~v19;
  v30 = *(_QWORD *)(v17 + 64);
  v31 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v31 + 84) <= 0x7FFFFFFEu)
    v32 = 2147483646;
  else
    v32 = *(_DWORD *)(v31 + 84);
  v33 = v20 + v21;
  if (!*(_DWORD *)(v5 + 84))
    ++v33;
  v34 = v33
      + ((v29
        + v6
        + v28
        + v30
        + ((v27
          + ((((((((v16 + 16) & ~v16)
                + ((((((v21 + v15) & ~v15) + v22 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 48) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & v26)) & ~v6);
  if (v34 <= 0x49)
    v34 = 73;
  v35 = ((*(_QWORD *)(v31 + 64)
        + 7
        + ((v34 + *(unsigned __int8 *)(v31 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 41;
  if (v32 >= a3)
  {
    v38 = 0u;
  }
  else
  {
    if (v35 <= 3)
      v36 = ((a3 - v32 + 255) >> (8 * v35)) + 1;
    else
      v36 = 2;
    if (v36 >= 0x10000)
      v37 = 4;
    else
      v37 = 2;
    if (v36 < 0x100)
      v37 = 1;
    if (v36 >= 2)
      v38 = v37;
    else
      v38 = 0;
  }
  if (v32 < a2)
  {
    v39 = ~v32 + a2;
    v40 = (~(_BYTE)v32 + a2);
    if (v35 >= 4)
      v41 = v39;
    else
      v41 = v40;
    bzero(a1, v35);
    if ((_DWORD)v35 == 1)
      *a1 = v41;
    else
      *(_DWORD *)a1 = v41;
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_1C2A5BA88()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1C2A5BB1CLL);
}

void sub_1C2A5BA90(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1C2A5BA98);
  JUMPOUT(0x1C2A5BB1CLL);
}

void sub_1C2A5BAE8()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1C2A5BB1CLL);
}

void sub_1C2A5BAF0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1C2A5BB1CLL);
}

uint64_t sub_1C2A5BAF8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_WORD *)(v9 + v10) = 0;
  if (!(_DWORD)a1)
    goto LABEL_6;
  v4 = (v7 + v9) & v8;
  if (a2 < 0x7FFFFFFE)
  {
    v6 = (a4 + v4) & 0xFFFFFFFFFFFFFFF8;
    if (a1 > 0x7FFFFFFE)
      JUMPOUT(0x1C2A5BB04);
    *(_QWORD *)(v6 + 24) = a1;
LABEL_6:
    JUMPOUT(0x1C2A5BB1CLL);
  }
  return __swift_storeEnumTagSinglePayload(v4, a1, a2, a3);
}

uint64_t type metadata accessor for Conclude(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Conclude);
}

#error "1C2A5BD8C: call analysis failed (funcsize=213)"

void _s11SiriKitFlow8DelegateVwxx_0(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_62_16();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v2 = a1;
      goto LABEL_5;
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      if (*(_QWORD *)(a1 + 56))
      {
        v2 = a1 + 32;
LABEL_5:
        __swift_destroy_boxed_opaque_existential_1(v2);
      }
      goto LABEL_30;
    case 2u:
      OUTLINED_FUNCTION_7_0();

      return;
    case 3u:
      OUTLINED_FUNCTION_7_0();
      swift_release();
      return;
    case 5u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF791190) + 48);
      swift_bridgeObjectRelease();
      v5 = (int *)type metadata accessor for PluginAction();
      v6 = v4 + v5[5];
      v7 = sub_1C2CFBCAC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      v8 = (int *)OUTLINED_FUNCTION_31_3();
      v9 = (id *)(v6 + v8[5]);
      type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v10 = OUTLINED_FUNCTION_39_20();
          goto LABEL_15;
        case 1u:
          v11 = OUTLINED_FUNCTION_39_20();
          OUTLINED_FUNCTION_35_21(v11);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          swift_release();
          break;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_23;
        case 3u:
          swift_unknownObjectRelease();
          break;
        case 4u:
          v10 = OUTLINED_FUNCTION_70_8();
LABEL_15:
          OUTLINED_FUNCTION_35_21(v10);
          break;
        case 5u:

          break;
        case 6u:
          v12 = OUTLINED_FUNCTION_38_24();
          OUTLINED_FUNCTION_35_21(v12);
          v13 = (uint64_t)v9 + *(int *)(OUTLINED_FUNCTION_36_25() + 20);
          OUTLINED_FUNCTION_37_20();
          if (!OUTLINED_FUNCTION_31_22(v13))
            OUTLINED_FUNCTION_89_7();
          goto LABEL_23;
        case 7u:
          v14 = OUTLINED_FUNCTION_38_24();
          OUTLINED_FUNCTION_35_21(v14);
          v15 = (uint64_t)v9 + *(int *)(OUTLINED_FUNCTION_36_25() + 20);
          OUTLINED_FUNCTION_37_20();
          if (!OUTLINED_FUNCTION_31_22(v15))
            OUTLINED_FUNCTION_89_7();
          OUTLINED_FUNCTION_88_8();
          type metadata accessor for LinkParse();
          OUTLINED_FUNCTION_88_8();
          OUTLINED_FUNCTION_88_8();
LABEL_23:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      v16 = v6 + v8[7];
      if (*(_QWORD *)(v16 + 24))
        __swift_destroy_boxed_opaque_existential_1(v16);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v17 = v4 + v5[9];
      v18 = type metadata accessor for ActionParaphrase(0);
      if (!OUTLINED_FUNCTION_80_9(v18))
      {
        swift_bridgeObjectRelease();
        v19 = v17 + v8[5];
        v20 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (!OUTLINED_FUNCTION_80_9(v20))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v21 = v19 + v8[6];
          v22 = sub_1C2CFC114();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        }
      }
      if (!__swift_getEnumTagSinglePayload(v4 + v5[10], 1, v7))
      {
        OUTLINED_FUNCTION_7_0();
        __asm { BR              X2 }
      }
      goto LABEL_30;
    case 6u:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_7_0();
      swift_bridgeObjectRelease();
      return;
    default:
LABEL_30:
      OUTLINED_FUNCTION_7_0();
      return;
  }
}

#error "1C2A5C420: call analysis failed (funcsize=194)"

#error "1C2A5C7DC: call analysis failed (funcsize=273)"

#error "1C2A5CB90: call analysis failed (funcsize=155)"

#error "1C2A5CE24: call analysis failed (funcsize=157)"

uint64_t getEnumTagSinglePayload for Abort()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Abort()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Abort(uint64_t a1)
{
  return sub_1C28B9018(a1, qword_1EF7913A8);
}

uint64_t sub_1C2A5CF0C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FlowActionType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Yield()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Yield()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Yield(uint64_t a1)
{
  return sub_1C28B9018(a1, qword_1EF791438);
}

uint64_t getEnumTagSinglePayload for Unhandled()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Unhandled()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Unhandled(uint64_t a1)
{
  return sub_1C28B9018(a1, qword_1EF7914C8);
}

uint64_t sub_1C2A5CFCC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FlowActionType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2A5D034()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2A5D040()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Redirect(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Redirect);
}

uint64_t getEnumTagSinglePayload for Reparse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for Reparse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Reparse(uint64_t a1)
{
  return sub_1C28B9018(a1, qword_1EF7915D8);
}

uint64_t OUTLINED_FUNCTION_0_49(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_1_36@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_2_42(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (**(uint64_t (***)(uint64_t, uint64_t))(a3 - 8))(v3, v4);
}

uint64_t OUTLINED_FUNCTION_3_40(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_4_43()
{
  return sub_1C2CFBF28();
}

uint64_t OUTLINED_FUNCTION_5_44()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  *(_QWORD *)(v3 + v5[6]) = *(_QWORD *)(v4 + v5[6]);
  v6 = v5[7];
  v7 = v3 + v6;
  v8 = v4 + v6;
  v9 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v9;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_BYTE *)(v3 + v5[8]) = *(_BYTE *)(v4 + v5[8]);
  *(_QWORD *)(v0 + v2[6]) = *(_QWORD *)(v1 + v2[6]);
  *(_QWORD *)(v0 + v2[7]) = *(_QWORD *)(v1 + v2[7]);
  *(_OWORD *)(v0 + v2[8]) = *(_OWORD *)(v1 + v2[8]);
  return type metadata accessor for ActionParaphrase(0);
}

uint64_t OUTLINED_FUNCTION_8_40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + a1;
  v4 = v2 + a1;
  *(_BYTE *)(v3 + 4) = *(_BYTE *)(v4 + 4);
  *(_DWORD *)v3 = *(_DWORD *)v4;
  return type metadata accessor for LinkParse();
}

uint64_t OUTLINED_FUNCTION_9_46()
{
  return type metadata accessor for Parse(0);
}

uint64_t OUTLINED_FUNCTION_10_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a12, a11, v12);
}

uint64_t OUTLINED_FUNCTION_11_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int *a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  *(_BYTE *)(v17 + *(int *)(v19 + 32)) = *(_BYTE *)(v18 + *(int *)(v19 + 32));
  *(_QWORD *)(v16 + a16[6]) = *(_QWORD *)(a15 + a16[6]);
  *(_QWORD *)(v16 + a16[7]) = *(_QWORD *)(a15 + a16[7]);
  v20 = a16[8];
  v21 = (_QWORD *)(v16 + v20);
  v22 = (_QWORD *)(a15 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  return type metadata accessor for ActionParaphrase(0);
}

uint64_t OUTLINED_FUNCTION_12_38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return __swift_getEnumTagSinglePayload(a1, 1, a2);
}

uint64_t OUTLINED_FUNCTION_13_33(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;

  v3 = a1[5];
  v4 = (_QWORD *)(v1 + v3);
  v5 = (_QWORD *)(v2 + v3);
  v15 = v5[1];
  *v4 = *v5;
  v4[1] = v15;
  v6 = a1[6];
  v7 = (_QWORD *)(v1 + v6);
  v8 = (_QWORD *)(v2 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = a1[7];
  v11 = (_QWORD *)(v1 + v10);
  v12 = (_QWORD *)(v2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_14_40()
{
  return type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
}

uint64_t OUTLINED_FUNCTION_15_35()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_16_34()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

void *OUTLINED_FUNCTION_17_30(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void *OUTLINED_FUNCTION_18_29(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void *OUTLINED_FUNCTION_19_30(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_20_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;

  return __swift_getEnumTagSinglePayload(v16 + *(int *)(a16 + 40), 1, a14);
}

void *OUTLINED_FUNCTION_21_29()
{
  void *v0;
  uint64_t v1;
  const void *v2;

  return memcpy(v0, v2, *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64));
}

void *OUTLINED_FUNCTION_22_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, const void *a11, void *a12)
{
  return memcpy(a12, a11, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_24_29()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + *(int *)(v2 + 24)) = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_25_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v12 = *(int *)(a10 + 24);
  v13 = (_QWORD *)(v10 + v12);
  v14 = (_QWORD *)(v11 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = *(int *)(a10 + 28);
  v17 = v10 + v16;
  v18 = v11 + v16;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_26_27()
{
  type metadata accessor for FlowActionType(0);
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_27_18()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_28_23()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_29_21()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_30_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)(v12 + *(int *)(a12 + 24)) = *(_OWORD *)(v13 + *(int *)(a12 + 24));
  v14 = *(int *)(a12 + 28);
  v15 = v12 + v14;
  v16 = v13 + v14;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  return v12;
}

uint64_t OUTLINED_FUNCTION_31_22(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_32_28(int *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_OWORD *)(v1 + a1[5]) = *(_OWORD *)(v2 + a1[5]);
  *(_OWORD *)(v1 + a1[6]) = *(_OWORD *)(v2 + a1[6]);
  *(_OWORD *)(v1 + a1[7]) = *(_OWORD *)(v2 + a1[7]);
  return swift_storeEnumTagMultiPayload();
}

void *OUTLINED_FUNCTION_33_17()
{
  void *v0;
  uint64_t v1;
  const void *v2;

  return memcpy(v0, v2, *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64));
}

void *OUTLINED_FUNCTION_34_24(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__src, uint64_t a12, void *__dst)
{
  return memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_36_25()
{
  return type metadata accessor for USOParse();
}

uint64_t OUTLINED_FUNCTION_38_24()
{
  return sub_1C2CFBFD0();
}

uint64_t OUTLINED_FUNCTION_39_20()
{
  return sub_1C2CFCD44();
}

uint64_t OUTLINED_FUNCTION_40_16()
{
  return sub_1C2CFBCAC();
}

uint64_t OUTLINED_FUNCTION_41_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v2 - 8))(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_46_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  return a13(v14, v15, v13);
}

uint64_t OUTLINED_FUNCTION_47_18()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_49_13()
{
  return sub_1C2CFBCAC();
}

uint64_t OUTLINED_FUNCTION_50_15()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_51_16()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_54_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;

  return __swift_getEnumTagSinglePayload(v15 + *(int *)(v16 + 40), 1, a15);
}

uint64_t OUTLINED_FUNCTION_55_11()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 72) = *(_BYTE *)(v1 + 72);
  return v0;
}

uint64_t OUTLINED_FUNCTION_56_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t), uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return a10(a12, a11, v12);
}

uint64_t OUTLINED_FUNCTION_57_11(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_58_16(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + *(int *)(a1 + 48)) = *(_QWORD *)(v2 + *(int *)(a1 + 48));
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_59_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_OWORD *)(v1 + *(int *)(a1 + 48)) = *(_OWORD *)(v2 + *(int *)(a1 + 48));
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_60_14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(int *)(a1 + 48);
  v4 = (_QWORD *)(v1 + v3);
  v5 = (_QWORD *)(v2 + v3);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_61_10()
{
  _OWORD *v0;
  _OWORD *v1;
  __int128 v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return sub_1C2CFC114();
}

void OUTLINED_FUNCTION_63_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  int v6;

  v3 = *(int *)(v0 + 28);
  v4 = v1 + v3;
  v5 = (int *)(v2 + v3);
  v6 = *v5;
  *(_BYTE *)(v4 + 4) = *((_BYTE *)v5 + 4);
  *(_DWORD *)v4 = v6;
}

uint64_t OUTLINED_FUNCTION_67_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a13, a11, v13);
}

uint64_t OUTLINED_FUNCTION_73_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C2A536B4(v1, a1);
}

uint64_t OUTLINED_FUNCTION_74_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a13, a11, v13);
}

uint64_t OUTLINED_FUNCTION_75_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  return a14(v15, v16, v14);
}

uint64_t OUTLINED_FUNCTION_76_14()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_78_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  return __swift_storeEnumTagSinglePayload(a13, 0, 1, v13);
}

uint64_t OUTLINED_FUNCTION_80_9(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_83_9()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = v1[2];
  v4 = v1[3];
  v0[2] = v3;
  v0[3] = v4;
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_84_12()
{
  id *v0;

  return *v0;
}

uint64_t OUTLINED_FUNCTION_85_9()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_86_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v4 + 64);
  *(_QWORD *)(v3 + 56) = a3;
  *(_QWORD *)(v3 + 64) = v5;
  return (**(uint64_t (***)(void))(a3 - 8))();
}

uint64_t OUTLINED_FUNCTION_87_9()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_88_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_89_7()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_90_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_91_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_92_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_94_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_95_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_96_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_97_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_98_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_100_12()
{
  return type metadata accessor for FlowActionType(0);
}

uint64_t OUTLINED_FUNCTION_101_8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_102_8()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_103_7()
{
  uint64_t v0;

  return sub_1C2A55538(v0);
}

__n128 OUTLINED_FUNCTION_104_6()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  return result;
}

__n128 OUTLINED_FUNCTION_106_6(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return result;
}

uint64_t static FlowActionBuilder.buildBlock(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *boxed_opaque_existential_0;

  a2[3] = type metadata accessor for Delegate(0);
  a2[4] = (uint64_t)&protocol witness table for Delegate;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a2);
  sub_1C28B9A04(a1, (uint64_t)boxed_opaque_existential_0);
  type metadata accessor for FlowActionType(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FlowActionBuilder.buildBlock(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C28B9A04(a1, a2);
}

ValueMetadata *type metadata accessor for FlowActionBuilder()
{
  return &type metadata for FlowActionBuilder;
}

void sub_1C2A5D89C()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_84_3();
}

void sub_1C2A5D8D0()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A5D904()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_84_3();
}

void sub_1C2A5D938()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A5D96C()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_84_3();
}

void sub_1C2A5D9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_1();
}

void sub_1C2A5D9DC()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A5DA10()
{
  swift_bridgeObjectRetain();
  sub_1C28E5ABC();
}

void sub_1C2A5DA4C()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_84_3();
}

void sub_1C2A5DA80()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A5DAB4()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_84_3();
}

void sub_1C2A5DAE8()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_1_0();
}

double sub_1C2A5DB1C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_21_0();
  return *(double *)(v0 + 96);
}

void sub_1C2A5DB48()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_1_0();
}

double sub_1C2A5DB7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_21_0();
  return *(double *)(v0 + 104);
}

void sub_1C2A5DBA8(double a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_21_0();
  *(double *)(v1 + 104) = a1;
  OUTLINED_FUNCTION_23_32();
}

void sub_1C2A5DBD8()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A5DC0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

void sub_1C2A5DC4C()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_84_3();
}

void sub_1C2A5DC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v1 + 112) = v2;
  *(_QWORD *)(v1 + 120) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_1();
}

void sub_1C2A5DCBC()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t DefaultFlowActivity.__allocating_init(activityName:activityType:activityStartTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v11;
  uint64_t v12;

  v11 = a6 & 1;
  OUTLINED_FUNCTION_20_38();
  v12 = swift_allocObject();
  DefaultFlowActivity.init(activityName:activityType:activityStartTime:)(a1, a2, a3, a4, a5, v11);
  return v12;
}

uint64_t sub_1C2A5DD64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1C2CFE9DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000;
    if (v6 || (sub_1C2CFE9DC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7974697669746361 && a2 == 0xEC000000656D614ELL;
      if (v7 || (sub_1C2CFE9DC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
        if (v8 || (sub_1C2CFE9DC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6E696769726FLL && a2 == 0xE600000000000000;
          if (v9 || (sub_1C2CFE9DC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
            if (v10 || (sub_1C2CFE9DC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
              if (v11 || (sub_1C2CFE9DC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x7974697669746361 && a2 == 0xEC00000065707954)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v13 = sub_1C2CFE9DC();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 7;
                else
                  return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C2A5E0B4()
{
  return 8;
}

uint64_t sub_1C2A5E0BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A5DD64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A5E0E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C2A5E0B4();
  *a1 = result;
  return result;
}

uint64_t sub_1C2A5E104()
{
  sub_1C28E5E0C();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A5E12C()
{
  sub_1C28E5E0C();
  return sub_1C2CFEB2C();
}

uint64_t DefaultFlowActivity.__deallocating_deinit()
{
  DefaultFlowActivity.deinit();
  OUTLINED_FUNCTION_20_38();
  return swift_deallocClassInstance();
}

uint64_t DefaultFlowActivity.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_20_38();
  v2 = swift_allocObject();
  DefaultFlowActivity.init(from:)(a1);
  return v2;
}

_QWORD *DefaultFlowActivity.init(from:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v2 = v1;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791610);
  v21[3] = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_22_30();
  v25 = v2;
  OUTLINED_FUNCTION_21_30();
  v2[2] = v7;
  v2[3] = v8;
  v9 = v2 + 2;
  v9[2] = v7;
  v9[4] = 0xD000000000000013;
  v9[3] = v8;
  v9[6] = 0;
  v9[5] = 0x80000001C2D0AC40;
  v9[8] = v7;
  v9[7] = 0;
  v9[9] = v8;
  v9[11] = 0xBFF0000000000000;
  v26 = *(_QWORD **)(a1 + 32);
  v24 = a1;
  OUTLINED_FUNCTION_24_30();
  v23 = v6;
  v10 = v27;
  sub_1C2CFEAFC();
  if (v10)
  {
    v17 = v24;
    v15 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for DefaultFlowActivity();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v26 = v9 + 4;
    v27 = v9 + 2;
    v21[2] = v9 + 6;
    v21[1] = v9 + 8;
    v33 = 0;
    v12 = OUTLINED_FUNCTION_5_45();
    v14 = v13;
    OUTLINED_FUNCTION_21_0();
    v15 = v25;
    v25[2] = v12;
    v15[3] = v14;
    swift_bridgeObjectRelease();
    v32 = 1;
    OUTLINED_FUNCTION_5_45();
    OUTLINED_FUNCTION_19_31();
    OUTLINED_FUNCTION_21_0();
    v15[4] = v9;
    v15[5] = v12;
    swift_bridgeObjectRelease();
    v31 = 2;
    OUTLINED_FUNCTION_5_45();
    OUTLINED_FUNCTION_19_31();
    OUTLINED_FUNCTION_21_0();
    v15[6] = v9;
    v15[7] = v12;
    swift_bridgeObjectRelease();
    v30 = 3;
    v16 = v23;
    sub_1C2CFE898();
    OUTLINED_FUNCTION_19_31();
    OUTLINED_FUNCTION_21_0();
    v15[8] = v9;
    v15[9] = v16;
    swift_bridgeObjectRelease();
    v29 = 4;
    OUTLINED_FUNCTION_5_45();
    OUTLINED_FUNCTION_19_31();
    OUTLINED_FUNCTION_21_0();
    v15[10] = v9;
    v15[11] = v16;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_39(5);
    v17 = v24;
    v15[12] = v18;
    OUTLINED_FUNCTION_12_39(6);
    v20 = v19;
    OUTLINED_FUNCTION_21_0();
    v9[11] = v20;
    v28 = 7;
    OUTLINED_FUNCTION_5_45();
    OUTLINED_FUNCTION_19_31();
    OUTLINED_FUNCTION_8_41();
    v15[14] = v9;
    v15[15] = v16;
  }
  __swift_destroy_boxed_opaque_existential_1(v17);
  return v15;
}

void sub_1C2A5E568()
{
  sub_1C2A5D96C();
}

void sub_1C2A5E588()
{
  sub_1C2A5DA4C();
}

void sub_1C2A5E5A8()
{
  sub_1C28E5ABC();
}

uint64_t (*sub_1C2A5E5C8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1C2A5E608()
{
  sub_1C2A5DAB4();
}

void sub_1C2A5E628()
{
  sub_1C2932574();
}

uint64_t (*sub_1C2A5E648())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_1C2A5E688()
{
  return sub_1C2A5DB1C();
}

void sub_1C2A5E6A8(double a1)
{
  sub_1C28E5A60(a1);
}

uint64_t (*sub_1C2A5E6C8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_1C2A5E708()
{
  return sub_1C2A5DB7C();
}

void sub_1C2A5E728(double a1)
{
  sub_1C2A5DBA8(a1);
}

uint64_t (*sub_1C2A5E748())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1C2A5E788()
{
  sub_1C2A5DC4C();
}

void sub_1C2A5E7A8()
{
  sub_1C2A5DC80();
}

uint64_t (*sub_1C2A5E7C8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C2A5E808@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 352))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1C2A5E834(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C2A5E880(&qword_1ED7A85A0, (uint64_t)&protocol conformance descriptor for DefaultFlowActivity);
  result = sub_1C2A5E880(&qword_1ED7A8598, (uint64_t)&protocol conformance descriptor for DefaultFlowActivity);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C2A5E880(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DefaultFlowActivity();
    result = MEMORY[0x1C3BC9CD4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2A5E8BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  sub_1C2A5D89C();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A5E8DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2A5DC0C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C28DB31C);
}

void sub_1C2A5E8F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  sub_1C2A5D904();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A5E918(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2A5DC0C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C28DB358);
}

void sub_1C2A5E934()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  sub_1C2A5D96C();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A5E954(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2A5DC0C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C2A5D9A0);
}

void sub_1C2A5E970()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  sub_1C2A5DA4C();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A5E994()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  sub_1C2A5DAB4();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A5E9B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2A5DC0C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C2932574);
}

void sub_1C2A5E9D0()
{
  double *v0;

  OUTLINED_FUNCTION_20_2();
  *v0 = sub_1C2A5DB1C();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A5E9F0(double *a1)
{
  sub_1C28E5A60(*a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A5EA10()
{
  double *v0;

  OUTLINED_FUNCTION_20_2();
  *v0 = sub_1C2A5DB7C();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A5EA30(double *a1)
{
  sub_1C2A5DBA8(*a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A5EA50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  sub_1C2A5DC4C();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A5EA70(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2A5DC0C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C2A5DC80);
}

uint64_t dispatch thunk of FlowActivity.activityName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FlowActivity.message.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FlowActivity.message.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FlowActivity.message.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FlowActivity.origin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FlowActivity.origin.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of FlowActivity.origin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FlowActivity.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FlowActivity.timestamp.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FlowActivity.timestamp.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of FlowActivity.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FlowActivity.duration.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of FlowActivity.duration.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of FlowActivity.activityType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of FlowActivity.activityType.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t dispatch thunk of FlowActivity.activityType.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of DefaultFlowActivity.locale.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DefaultFlowActivity.locale.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DefaultFlowActivity.locale.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DefaultFlowActivity.platform.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DefaultFlowActivity.platform.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DefaultFlowActivity.platform.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DefaultFlowActivity.message.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DefaultFlowActivity.message.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DefaultFlowActivity.origin.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DefaultFlowActivity.origin.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DefaultFlowActivity.origin.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DefaultFlowActivity.timestamp.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DefaultFlowActivity.timestamp.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DefaultFlowActivity.duration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DefaultFlowActivity.duration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DefaultFlowActivity.duration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DefaultFlowActivity.__allocating_init(activityName:activityType:activityStartTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v6 + 336))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of DefaultFlowActivity.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DefaultFlowActivity.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

ValueMetadata *type metadata accessor for DefaultFlowActivity.CodingKeys()
{
  return &type metadata for DefaultFlowActivity.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_2_43()
{
  return sub_1C2CFE928();
}

uint64_t OUTLINED_FUNCTION_5_45()
{
  return sub_1C2CFE8B0();
}

uint64_t OUTLINED_FUNCTION_8_41()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 280), v0);
}

uint64_t OUTLINED_FUNCTION_10_46()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_39@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 232) = a1;
  return sub_1C2CFE8C8();
}

uint64_t OUTLINED_FUNCTION_18_30()
{
  return sub_1C2CFE940();
}

uint64_t OUTLINED_FUNCTION_20_38()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_24_30()
{
  _QWORD *v0;
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(v0, v1);
  return sub_1C28E5E0C();
}

uint64_t static FlowBuilder.buildBlock<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t static FlowsBuilder.buildExpression(_:)(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791620);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2D002E0;
  sub_1C28B9A04(a1, v2 + 32);
  return v2;
}

uint64_t _s11SiriKitFlow12FlowsBuilderO10buildArrayySayAA06ActingC0_pGSayAFGFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    v4 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v5 = *(_QWORD *)(a1 + 8 * v3 + 32);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = *(_QWORD *)(v4 + 16);
      if (__OFADD__(v7, v6))
        break;
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v6 > *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1C28FCE84();
        v4 = v8;
      }
      if (*(_QWORD *)(v5 + 16))
      {
        v9 = *(_QWORD *)(v4 + 16);
        if ((*(_QWORD *)(v4 + 24) >> 1) - v9 < v6)
          goto LABEL_24;
        v10 = v4 + 40 * v9 + 32;
        if (v5 + 32 < v10 + 40 * v6 && v10 < v5 + 32 + 40 * v6)
          goto LABEL_26;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791628);
        swift_arrayInitWithCopy();
        if (v6)
        {
          v12 = *(_QWORD *)(v4 + 16);
          v13 = __OFADD__(v12, v6);
          v14 = v12 + v6;
          if (v13)
            goto LABEL_25;
          *(_QWORD *)(v4 + 16) = v14;
        }
      }
      else if (v6)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      if (v1 == ++v3)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
    result = OUTLINED_FUNCTION_2_44();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t static FlowsBuilder.buildOptional(_:)(uint64_t a1)
{
  uint64_t v1;

  if (a1)
    v1 = a1;
  else
    v1 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2A5EF94(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5EFBC(a1, a2);
}

uint64_t sub_1C2A5EFA8(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5EFBC(a1, a2);
}

uint64_t sub_1C2A5EFBC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_7_40();
    if (!v6 && v5)
    {
      v5 = v4 >= v2;
      v6 = v4 == v2;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
    {
      sub_1C28BF798(0, v3);
      OUTLINED_FUNCTION_6_39();
      return OUTLINED_FUNCTION_1_37();
    }
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F050(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5EFBC(a1, a2);
}

uint64_t sub_1C2A5F064(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5EFBC(a1, a2);
}

uint64_t sub_1C2A5F078()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_9_47();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    if (v2 + 16 * v1 <= v0 || v0 + 16 * v1 <= v2)
      return OUTLINED_FUNCTION_5_46();
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F10C(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5EFBC(a1, a2);
}

uint64_t sub_1C2A5F120(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_8_42();
    if (v4 + 24 * v3 <= v2 || v2 + 24 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791638);
      OUTLINED_FUNCTION_6_39();
      return OUTLINED_FUNCTION_1_37();
    }
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F1C0()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_9_47();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    if (v2 + 224 * v1 <= v0 || v0 + 224 * v1 <= v2)
      return OUTLINED_FUNCTION_5_46();
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

void *sub_1C2A5F25C()
{
  char *v0;
  size_t v1;
  char *v2;
  uint64_t v3;
  void *result;

  OUTLINED_FUNCTION_9_47();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    if (&v2[v1] <= v0 || &v0[v1] <= v2)
      return OUTLINED_FUNCTION_10_47(v2, v0, v1);
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = (void *)OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F2E8()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_9_47();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    if (v2 + (v1 << 6) <= v0 || v0 + (v1 << 6) <= v2)
      return OUTLINED_FUNCTION_5_46();
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F37C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_9_47();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_12_40();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_5_46();
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F404(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5FA90(a1, a2);
}

uint64_t sub_1C2A5F410(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5F9F4(a1, a2);
}

uint64_t sub_1C2A5F41C(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5F9F4(a1, a2);
}

uint64_t sub_1C2A5F428()
{
  return sub_1C2A5F5FC();
}

uint64_t sub_1C2A5F434(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_7_40();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78B098);
      OUTLINED_FUNCTION_6_39();
      return OUTLINED_FUNCTION_1_37();
    }
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F4C4(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5F9F4(a1, a2);
}

uint64_t sub_1C2A5F4D0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_9_47();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_12_40();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_5_46();
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F558()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_9_47();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    if (v2 + 96 * v1 <= v0 || v0 + 96 * v1 <= v2)
      return OUTLINED_FUNCTION_5_46();
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F5F0()
{
  return sub_1C2A5F5FC();
}

uint64_t sub_1C2A5F5FC()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_9_47();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    if (v2 + 48 * v1 <= v0 || v0 + 48 * v1 <= v2)
      return OUTLINED_FUNCTION_5_46();
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F68C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_8_42();
    if (v4 + 56 * v3 <= v2 || v2 + 56 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791640);
      OUTLINED_FUNCTION_6_39();
      return OUTLINED_FUNCTION_1_37();
    }
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F730(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5F73C(a1, a2);
}

uint64_t sub_1C2A5F73C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_7_40();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      v3(0);
      OUTLINED_FUNCTION_6_39();
      return OUTLINED_FUNCTION_1_37();
    }
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F7C8()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_9_47();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    if (v2 + 32 * v1 <= v0 || v0 + 32 * v1 <= v2)
      return OUTLINED_FUNCTION_5_46();
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

void *sub_1C2A5F860(char *a1, uint64_t a2, char *a3)
{
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    if (&a3[8 * a2] <= a1 || &a1[8 * a2] <= a3)
      return OUTLINED_FUNCTION_10_47(a3, a1, 8 * a2);
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = (void *)OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5F8F4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_8_42();
    if (v4 + 40 * v3 <= v2 || v2 + 40 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791628);
      OUTLINED_FUNCTION_6_39();
      return OUTLINED_FUNCTION_1_37();
    }
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for FlowBuilder()
{
  return &type metadata for FlowBuilder;
}

ValueMetadata *type metadata accessor for FlowsBuilder()
{
  return &type metadata for FlowsBuilder;
}

uint64_t sub_1C2A5F9B4(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5EFBC(a1, a2);
}

uint64_t sub_1C2A5F9C8(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5EFBC(a1, a2);
}

uint64_t sub_1C2A5F9DC(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5F73C(a1, a2);
}

uint64_t sub_1C2A5F9E8(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5F9F4(a1, a2);
}

uint64_t sub_1C2A5F9F4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_8_42();
    v3(0);
    OUTLINED_FUNCTION_11_36();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      OUTLINED_FUNCTION_6_39();
      return OUTLINED_FUNCTION_1_37();
    }
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t sub_1C2A5FA84(uint64_t a1, uint64_t a2)
{
  return sub_1C2A5FA90(a1, a2);
}

uint64_t sub_1C2A5FA90(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_4_44();
  }
  else
  {
    OUTLINED_FUNCTION_8_42();
    __swift_instantiateConcreteTypeFromMangledName(v3);
    OUTLINED_FUNCTION_11_36();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      OUTLINED_FUNCTION_6_39();
      return OUTLINED_FUNCTION_1_37();
    }
    OUTLINED_FUNCTION_0_50();
    OUTLINED_FUNCTION_3_41();
  }
  result = OUTLINED_FUNCTION_2_44();
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_1_37()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_2_44()
{
  return sub_1C2CFE850();
}

uint64_t OUTLINED_FUNCTION_5_46()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_6_39()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_10_47(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

uint64_t sub_1C2A5FC10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(_QWORD *)(v2 + 16);
  sub_1C2CFD350();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 32));
  sub_1C2A60368((_QWORD *)(v5 + 16), a1, a2);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 32));
  return swift_release();
}

uint64_t sub_1C2A5FC84()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for RefreshableFlowContextPublisher();
  v0 = swift_allocObject();
  result = sub_1C2A603F4();
  qword_1ED7AA128 = v0;
  return result;
}

uint64_t static FlowContextPublisher.current.getter()
{
  if (qword_1ED7A75E0 != -1)
    swift_once();
  return sub_1C2CFD350();
}

uint64_t dispatch thunk of FlowContextPublishing.publish(nlContext:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_149_3(v1, (uint64_t)sub_1C28CC838);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of FlowContextPublishing.publish(dialogEngineOutput:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_149_3(v1, (uint64_t)sub_1C28CCD60);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of FlowContextPublishing.isAvailable()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for FlowContextPublisher()
{
  return &type metadata for FlowContextPublisher;
}

uint64_t sub_1C2A5FDBC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  MEMORY[0x1E0C80A78](v6, v7);
  v10 = (char *)&v26 - v9;
  if (*a1)
  {
    v11 = a1[1];
    *a2 = *a1;
    a2[1] = v11;
    return swift_unknownObjectRetain();
  }
  else
  {
    v33 = v8;
    if (qword_1ED7AA040 != -1)
      swift_once();
    v13 = sub_1C2CFD878();
    v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED7AA1B0);
    v15 = *(_QWORD *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, v14, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v13);
    v16 = (uint64_t)v10;
    v17 = v33;
    sub_1C294E19C(v16, v33);
    if (__swift_getEnumTagSinglePayload(v17, 1, v13) == 1)
    {
      sub_1C28BA958(v33, &qword_1ED7A9EC0);
    }
    else
    {
      v18 = sub_1C2CFD86C();
      v19 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v21 = swift_slowAlloc();
        *(_QWORD *)&v26 = v21;
        *(_DWORD *)v20 = 136315650;
        v22 = sub_1C2CFE694();
        *(_QWORD *)&v30 = sub_1C28BB120(v22, v23, (uint64_t *)&v26);
        sub_1C2CFE4D8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2048;
        *(_QWORD *)&v30 = 51;
        sub_1C2CFE4D8();
        *(_WORD *)(v20 + 22) = 2080;
        *(_QWORD *)&v30 = sub_1C28BB120(0xD0000000000000DBLL, 0x80000001C2D2F750, (uint64_t *)&v26);
        sub_1C2CFE4D8();
        _os_log_impl(&dword_1C28B6000, v18, v19, "FatalError at %s:%lu - %s", (uint8_t *)v20, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1C3BC9DE8](v21, -1, -1);
        MEMORY[0x1C3BC9DE8](v20, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v33, v13);
    }
    if (qword_1ED7A84D8 != -1)
      swift_once();
    v30 = 0u;
    v31 = 0u;
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
    v24 = sub_1C2CFD350();
    LOBYTE(v25) = 44;
    sub_1C2AFA880(v24, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)&v30, 0, 0, (uint64_t)&v26, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, 0xD0000000000000DBLL, 0x80000001C2D2F750, v25, v26,
      *((uint64_t *)&v26 + 1),
      v27,
      *((void **)&v27 + 1),
      v28,
      v29,
      v30,
      *((uint64_t *)&v30 + 1),
      v31,
      *((uint64_t *)&v31 + 1),
      v32,
      v33);
    sub_1C28BA958((uint64_t)&v26, (uint64_t *)&unk_1ED7A8750);
    sub_1C28BA958((uint64_t)&v30, &qword_1ED7A8480);
    swift_release();
    result = sub_1C2CFE7FC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2A601D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 104) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 120) = v3;
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 96) = v1;
  *(_OWORD *)(v2 + 152) = v4;
  *(_QWORD *)(v2 + 168) = *(_QWORD *)(a1 + 64);
  *(_BYTE *)(v2 + 89) = *(_BYTE *)(a1 + 72);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A6020C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v1 = *(_BYTE *)(v0 + 89);
  v2 = *(_QWORD *)(v0 + 168);
  v11 = *(_OWORD *)(v0 + 136);
  v12 = *(_OWORD *)(v0 + 152);
  v9 = *(_OWORD *)(v0 + 104);
  v10 = *(_OWORD *)(v0 + 120);
  v3 = sub_1C28FDAB4();
  v5 = v4;
  *(_QWORD *)(v0 + 176) = v3;
  ObjectType = swift_getObjectType();
  *(_OWORD *)(v0 + 16) = v9;
  *(_OWORD *)(v0 + 32) = v10;
  *(_OWORD *)(v0 + 48) = v11;
  *(_OWORD *)(v0 + 64) = v12;
  *(_QWORD *)(v0 + 80) = v2;
  *(_BYTE *)(v0 + 88) = v1;
  *(_QWORD *)&v12 = **(int **)(v5 + 16) + *(_QWORD *)(v5 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v7;
  *v7 = v0;
  v7[1] = sub_1C2A602E8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v0 + 16, ObjectType, v5);
}

uint64_t sub_1C2A602E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 192) = v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C2A6035C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2A60368(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return swift_unknownObjectRetain();
}

uint64_t sub_1C2A603B0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RefreshableFlowContextPublisher()
{
  return objc_opt_self();
}

uint64_t sub_1C2A603F4()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6310);
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_1C2A6042C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28CCD60;
  return sub_1C2A601D4(a1);
}

void sub_1C2A60478(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_14;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v13 = MEMORY[0x1E0DEE9D8];
      sub_1C28E97F4();
      if (v5 < 0)
        break;
      v6 = 0;
      while (v5 != v6)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x1C3BC9170](v6, a1);
        else
          v7 = *(id *)(a1 + 8 * v6 + 32);
        v8 = v7;
        v10 = *(_QWORD *)(v13 + 16);
        v9 = *(_QWORD *)(v13 + 24);
        swift_bridgeObjectRetain();
        if (v10 >= v9 >> 1)
          sub_1C28E97F4();
        ++v6;
        *(_QWORD *)(v13 + 16) = v10 + 1;
        v11 = (_QWORD *)(v13 + 24 * v10);
        v11[4] = a2;
        v11[5] = a3;
        v11[6] = v8;
        if (v5 == v6)
          goto LABEL_12;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v5 = sub_1C2CFE820();
      swift_bridgeObjectRelease();
      if (!v5)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
  }
}

uint64_t static FlowDelegatePluginLoader.sharedInstance.getter()
{
  if (qword_1ED7A9B38 != -1)
    swift_once();
  return sub_1C2CFD350();
}

uint64_t sub_1C2A60638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v8;

  v0 = sub_1C2CFBB8C();
  v1 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v0, v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v3, qword_1ED7A9B78);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED7A9B78);
  v6 = (id)MEMORY[0x1C3BC9644]();
  sub_1C2CFDD58();

  sub_1C2CFBB2C();
  swift_bridgeObjectRelease();
  sub_1C2CFBB50();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v5, v0);
}

uint64_t sub_1C2A60734()
{
  uint64_t v0;

  v0 = sub_1C2CFDBC0();
  __swift_allocate_value_buffer(v0, qword_1EF791678);
  *(_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EF791678) = 2500;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t (*sub_1C2A60794())()
{
  OUTLINED_FUNCTION_28_1();
  return j__swift_endAccess;
}

uint64_t sub_1C2A607C8()
{
  uint64_t v0;
  int v1;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 != 2)
    return v1 & 1;
  if (qword_1ED7A84B0 != -1)
    swift_once();
  result = 1;
  *(_BYTE *)(v0 + 112) = 1;
  return result;
}

uint64_t sub_1C2A6081C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  _OWORD v23[2];
  uint64_t v24;
  _QWORD v25[2];
  __int128 v26;
  uint64_t v27;

  v1 = v0;
  v2 = sub_1C2CFBB8C();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A9E20);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_QWORD *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_QWORD *)(v0 + 104) = dispatch_semaphore_create(1);
  *(_BYTE *)(v0 + 112) = 2;
  sub_1C29D531C();
  if (qword_1ED7A9BC0 != -1)
    swift_once();
  v10 = (char *)__swift_project_value_buffer(v2, (uint64_t)qword_1ED7A9B78);
  static FlowDelegatePluginLoader.getSystemPluginCachePathURL()();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v2);
  sub_1C2A60EF8(v10, (uint64_t)v9, v23);
  sub_1C28BB37C((uint64_t)v9, qword_1ED7A9E20);
  v11 = v23[1];
  *(_OWORD *)(v0 + 16) = v23[0];
  *(_OWORD *)(v0 + 32) = v11;
  *(_QWORD *)(v0 + 48) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A4208);
  *(_QWORD *)(v0 + 96) = sub_1C2CFDC8C();
  v12 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v13 = objc_msgSend(v12, sel_environment);

  v14 = sub_1C2CFDC68();
  sub_1C28C1664(0xD000000000000021, 0x80000001C2D2FAA0, v14);
  v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    sub_1C2CFBB2C();
    swift_bridgeObjectRelease();
    sub_1C2A70FE4(v5, v25);
    v17 = v25[0];
    v18 = v25[1];
    v22 = v26;
    v19 = v27;
    swift_beginAccess();
    v20 = *(_QWORD *)(v1 + 56);
    *(_QWORD *)(v1 + 56) = v17;
    *(_QWORD *)(v1 + 64) = v18;
    *(_OWORD *)(v1 + 72) = v22;
    *(_QWORD *)(v1 + 88) = v19;
    sub_1C2A6A504(v20);
  }
  return v1;
}

#error "1C2A60E84: call analysis failed (funcsize=242)"

void sub_1C2A60EF8(char *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33[5];
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];

  v32 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A9E20);
  v7 = MEMORY[0x1E0C80A78](v5, v6);
  v9 = (char *)&v33[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v10);
  v12 = (char *)&v33[-1] - v11;
  v13 = sub_1C2CFBB8C();
  v14 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x1E0C80A78](v13, v15);
  v18 = (char *)&v33[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v16, v19);
  v22 = (char *)&v33[-1] - v21;
  MEMORY[0x1E0C80A78](v20, v23);
  v25 = (char *)&v33[-1] - v24;
  sub_1C28C6BEC(a2, (uint64_t)v12, qword_1ED7A9E20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_1C28BB37C((uint64_t)v12, qword_1ED7A9E20);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v22, v32, v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v25, v12, v13);
    v26 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v26(v22, v25, v13);
    sub_1C2A7185C((uint64_t)v22, v33);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v13);
    sub_1C2A6AA34((uint64_t)v33, (uint64_t)v37);
    if (v37[0])
    {
      v27 = v37[1];
      v28 = v37[2];
      v29 = v37;
      v31 = v37[3];
      v30 = v37[4];
      goto LABEL_10;
    }
    v26(v22, v32, v13);
  }
  sub_1C2A70FE4(v22, v34);
  sub_1C28C6BEC(a2, (uint64_t)v9, qword_1ED7A9E20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13) == 1)
  {
    sub_1C28BB37C((uint64_t)v9, qword_1ED7A9E20);
    v31 = v35;
    v30 = v36;
    v29 = v34;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v9, v13);
    v29 = v34;
    sub_1C2A722D8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    v31 = v35;
    v30 = v36;
  }
  v27 = v34[1];
  v28 = v34[2];
LABEL_10:
  *a3 = *v29;
  a3[1] = v27;
  a3[2] = v28;
  a3[3] = v31;
  a3[4] = v30;
}

BOOL sub_1C2A61164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1C2A642B4(a1);
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRelease();
  return v2 != 0;
}

void sub_1C2A61190()
{
  sub_1C2A611A0();
}

void sub_1C2A611A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791690);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_10();
  v4 = v3 - v2;
  OUTLINED_FUNCTION_97_9();
  sub_1C2A61258();
  v5 = OUTLINED_FUNCTION_72_10();
  if (__swift_getEnumTagSinglePayload(v4, 1, v5) == 1)
  {
    sub_1C28BB37C(v4, &qword_1EF791690);
  }
  else
  {
    sub_1C2CFD350();
    sub_1C28C9F68(v4, type metadata accessor for LoadedFlowInfo);
  }
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A61258()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  id v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t);
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  os_log_type_t v100;
  _WORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  Swift::OpaquePointer v112;
  int *v113;
  _QWORD *v114;
  id v115;
  uint64_t v116;
  void *v117;
  void *v118;
  void *v119;
  char *v120;
  Swift::String v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  Swift::OpaquePointer v129;
  _QWORD *v130;
  uint64_t v131;
  void *v132;
  id v133;
  uint64_t v134;
  void *v135;
  void *v136;
  Swift::String v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  id v150;
  id v151;
  NSObject *v152;
  os_log_type_t v153;
  uint8_t *v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t, uint64_t);
  uint64_t v162;
  int *v163;
  uint64_t v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  _QWORD *v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD v188[9];
  __int128 v189;
  ValueMetadata *v190;
  _UNKNOWN **v191;
  __int128 v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195[6];
  void *v196;
  uint64_t v197;
  _QWORD *v198;

  OUTLINED_FUNCTION_9();
  v182 = v0;
  v2 = v1;
  v176 = v3;
  v175 = v4;
  v170 = v5;
  v178 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F70);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_79_5();
  v167 = v8;
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F68);
  v9 = *(_QWORD *)(v169 - 8);
  MEMORY[0x1E0C80A78](v169, v10);
  OUTLINED_FUNCTION_79_5();
  v173 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5530);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_79_5();
  OUTLINED_FUNCTION_15_34(v14);
  v180 = type metadata accessor for NamedParseTransformer();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_79_5();
  OUTLINED_FUNCTION_15_34(v17);
  v181 = type metadata accessor for FlowSearchResult();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_79_5();
  v183 = v20;
  v186 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF78B0C0);
  v185 = *(_QWORD *)(v186 - 8);
  MEMORY[0x1E0C80A78](v186, v21);
  OUTLINED_FUNCTION_2_2();
  v184 = v22;
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_15_34((uint64_t)&v159 - v25);
  v26 = sub_1C2CFBCAC();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26, v28);
  OUTLINED_FUNCTION_10();
  v31 = v30 - v29;
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v32, v33);
  OUTLINED_FUNCTION_2_2();
  v172 = v34;
  v37 = MEMORY[0x1E0C80A78](v35, v36);
  v39 = (char *)&v159 - v38;
  MEMORY[0x1E0C80A78](v37, v40);
  v42 = (char *)&v159 - v41;
  v43 = (int *)type metadata accessor for Input(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v44, v45);
  OUTLINED_FUNCTION_10();
  v48 = v47 - v46;
  sub_1C2A15858(v2, (uint64_t)v42);
  OUTLINED_FUNCTION_38_25(v48 + v43[7]);
  v49 = v48 + v43[5];
  sub_1C2A15858((uint64_t)v42, v49);
  *(_QWORD *)(v48 + v43[6]) = MEMORY[0x1E0DEE9D8];
  sub_1C2CFBCA0();
  v168 = v42;
  OUTLINED_FUNCTION_40_17((uint64_t)v42);
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
  v164 = v31;
  v165 = v26;
  v161 = v50;
  v50(v48, v31, v26);
  v163 = v43;
  *(_BYTE *)(v48 + v43[8]) = 0;
  OUTLINED_FUNCTION_95_10(v49);
  v188[2] = v48;
  v52 = sub_1C2993780((void (*)(_QWORD *))sub_1C2A6A4E8, (uint64_t)v188, v51);
  v171 = 0;
  OUTLINED_FUNCTION_32_0();
  v162 = v48;
  sub_1C28C9F68(v48, type metadata accessor for Input);
  v187 = 0;
  v177 = v183 + 1;
  v198 = (_QWORD *)v52;
  v195[5] = MEMORY[0x1E0DEE9E8];
  v196 = (void *)MEMORY[0x1E0DEE9E8];
  while (1)
  {
    if (!v198[2])
    {
      OUTLINED_FUNCTION_77_12();
      v98 = v196;
      OUTLINED_FUNCTION_32_0();
      goto LABEL_28;
    }
    v53 = (uint64_t)v198
        + ((*(unsigned __int8 *)(v185 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80));
    OUTLINED_FUNCTION_85_10(v53, (uint64_t)&v197);
    v54 = v186;
    v55 = (uint64_t *)((char *)v43 + *(int *)(v186 + 48));
    v56 = *v55;
    v57 = v55[1];
    v58 = (void *)v55[2];
    sub_1C28C5410((uint64_t)v43, (uint64_t)v39, type metadata accessor for Parse);
    OUTLINED_FUNCTION_85_10(v53, (uint64_t)&v198);
    sub_1C2A6A0E0(0, 1);
    v59 = (id *)((char *)v43 + *(int *)(v54 + 48));
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_40_17((uint64_t)v43);
    swift_bridgeObjectRetain();
    v60 = (uint64_t)v39;
    v61 = v58;
    LOBYTE(v59) = sub_1C2A659A0(v195, v56, v57, v61);
    swift_bridgeObjectRelease();

    if ((v59 & 1) == 0)
    {
      OUTLINED_FUNCTION_40_17(v60);

      OUTLINED_FUNCTION_97();
      v39 = (char *)v60;
      goto LABEL_7;
    }
    v62 = (uint64_t)v196;
    v63 = v61;
    swift_bridgeObjectRetain();
    v64 = sub_1C2A27AB8(v63, v62);
    OUTLINED_FUNCTION_254();
    if ((v64 & 1) == 0)
      break;
    v39 = (char *)v60;
    sub_1C28C9F68(v60, type metadata accessor for Parse);
    OUTLINED_FUNCTION_97();

LABEL_7:
    if (v187 >= 10)
    {
      OUTLINED_FUNCTION_77_12();
      OUTLINED_FUNCTION_108_8();
      v98 = v198;
LABEL_28:
      OUTLINED_FUNCTION_8();
      if (qword_1ED7AA040 != -1)
        swift_once();
      v99 = OUTLINED_FUNCTION_118();
      __swift_project_value_buffer(v99, (uint64_t)qword_1ED7AA1B0);
      OUTLINED_FUNCTION_104();
      v100 = OUTLINED_FUNCTION_249();
      if (OUTLINED_FUNCTION_48_7(v100))
      {
        v101 = (_WORD *)OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_91(v101);
        OUTLINED_FUNCTION_30_6(&dword_1C28B6000, v102, v103, "Failed to find a viable Flow plugin; giving up");
        OUTLINED_FUNCTION_11_0();
      }

      goto LABEL_33;
    }
  }
  ++v187;
  sub_1C2A637A4();
  v39 = (char *)v60;
  if (!v193)
  {
    sub_1C28C9F68(v60, type metadata accessor for Parse);
    OUTLINED_FUNCTION_97();

    sub_1C28BB37C((uint64_t)&v192, &qword_1ED7A4210);
    goto LABEL_7;
  }
  sub_1C28B99EC(&v192, (uint64_t)v195);
  v65 = v183;
  sub_1C2A622D0(v60, v195, v183);
  v66 = *v65;
  if (*v65)
  {
    sub_1C2CFD350();
    OUTLINED_FUNCTION_254();
    OUTLINED_FUNCTION_8();
    v108 = OUTLINED_FUNCTION_75_12();
    v109 = OUTLINED_FUNCTION_73_1(v108, sel_bundlePath);
    OUTLINED_FUNCTION_90_8();
    OUTLINED_FUNCTION_117_9();
    OUTLINED_FUNCTION_28_1();
    v110 = sub_1C2A717B4();
    v111 = OUTLINED_FUNCTION_45_16(v110);
    swift_endAccess();
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_8();
    if (v111)
      v112._rawValue = (void *)v111;
    else
      v112._rawValue = (void *)MEMORY[0x1E0DEE9D8];
    v113 = (int *)OUTLINED_FUNCTION_72_10();
    v114 = v170;
    sub_1C2A15858(v60, (uint64_t)v170 + v113[6]);
    v187 = Parse.usoTasks.getter();
    v115 = OUTLINED_FUNCTION_73_1(v187, sel_bundlePath);
    v116 = sub_1C2CFDD58();
    v117 = v63;
    v119 = v118;

    v120 = (char *)v114 + v113[8];
    *((_QWORD *)v120 + 3) = &type metadata for FlowPluginBundleImpl;
    *((_QWORD *)v120 + 4) = &protocol witness table for FlowPluginBundleImpl;
    v121._countAndFlagsBits = v116;
    v121._object = v119;
    FlowPluginBundleImpl.init(bundlePath:pluginCacheKeys:)(v121, v112);
    *v114 = v66;
    v114[4] = type metadata accessor for FlowToActingFlowAdapter(0);
    v114[5] = &off_1EF791908;
    OUTLINED_FUNCTION_27();
    v122 = sub_1C2CFD350();
    v123 = sub_1C28C8F94(v122);
    OUTLINED_FUNCTION_97();

    v114[1] = v123;
    *(_QWORD *)((char *)v114 + v113[7]) = v187;
    OUTLINED_FUNCTION_25_28(v124, (uint64_t (*)(_QWORD))type metadata accessor for FlowSearchResult);
    OUTLINED_FUNCTION_56_14();
    sub_1C28C9F68(v60, type metadata accessor for Parse);
    OUTLINED_FUNCTION_71_13();
    goto LABEL_34;
  }
  sub_1C28C6BEC((uint64_t)v177, (uint64_t)&v189, &qword_1ED7A70E0);
  if (!v190)
  {
    sub_1C28BB37C((uint64_t)&v189, &qword_1ED7A70E0);
    v67 = v183;
    v39 = (char *)v60;
    if (*((_BYTE *)v183 + *(int *)(v181 + 28)) == 1)
    {
      sub_1C2A65708(&v192, v63);

    }
    v68 = (uint64_t)v67 + *(int *)(v181 + 24);
    v69 = v174;
    sub_1C28C6BEC(v68, v174, &qword_1ED7A5530);
    if (__swift_getEnumTagSinglePayload(v69, 1, v180) == 1)
    {
      sub_1C28BB37C(v69, &qword_1ED7A5530);
      if (qword_1ED7AA040 != -1)
        swift_once();
      v70 = OUTLINED_FUNCTION_118();
      __swift_project_value_buffer(v70, (uint64_t)qword_1ED7AA1B0);
      v71 = OUTLINED_FUNCTION_104();
      v72 = sub_1C2CFE298();
      if (OUTLINED_FUNCTION_10_1(v72))
      {
        v73 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_WORD *)v73 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v71, (os_log_type_t)v69, "Plugin rejected flow for which it registered; still looking.",
          v73);
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_97();
      sub_1C28C9F68((uint64_t)v183, (uint64_t (*)(_QWORD))type metadata accessor for FlowSearchResult);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v195);
      OUTLINED_FUNCTION_40_17(v60);
    }
    else
    {
      sub_1C28C5410(v69, v179, (uint64_t (*)(_QWORD))type metadata accessor for NamedParseTransformer);
      if (qword_1ED7A8BB8 != -1)
        v74 = swift_once();
      v166 = v63;
      v75 = OUTLINED_FUNCTION_73_1(v74, sel_bundlePath);
      OUTLINED_FUNCTION_207_0();
      OUTLINED_FUNCTION_96_8();
      v76 = v179;
      OUTLINED_FUNCTION_21_31();
      sub_1C2A0E488();
      OUTLINED_FUNCTION_126();
      v77 = v167;
      NamedParseTransformer.resolve()(v167);
      v78 = v77;
      v79 = v77;
      v80 = v169;
      if (__swift_getEnumTagSinglePayload(v79, 1, v169) == 1)
      {
        OUTLINED_FUNCTION_77_12();
        OUTLINED_FUNCTION_108_8();
        OUTLINED_FUNCTION_75_12();
        sub_1C28BB37C(v78, &qword_1ED7A5F70);
        v141 = OUTLINED_FUNCTION_21_31();
        sub_1C2A0E530(v141, v142, 2);
        OUTLINED_FUNCTION_97();
        v143 = v166;

        sub_1C28C9F68(v76, (uint64_t (*)(_QWORD))type metadata accessor for NamedParseTransformer);
        OUTLINED_FUNCTION_25_28(v144, (uint64_t (*)(_QWORD))type metadata accessor for FlowSearchResult);
        OUTLINED_FUNCTION_56_14();
        v145 = v60;
        goto LABEL_50;
      }
      v81 = v9;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v173, v78, v80);
      v82 = (void (*)(uint64_t))sub_1C2CFD080();
      v83 = v172;
      v39 = (char *)v60;
      v84 = v60;
      v85 = v171;
      v82(v84);
      if (v85)
      {
        swift_release();
        OUTLINED_FUNCTION_77_12();
        OUTLINED_FUNCTION_108_8();
        OUTLINED_FUNCTION_75_12();
        v146 = OUTLINED_FUNCTION_21_31();
        sub_1C2A0E530(v146, v147, 0);
        if (qword_1ED7AA040 != -1)
          swift_once();
        v148 = OUTLINED_FUNCTION_118();
        v149 = (void *)__swift_project_value_buffer(v148, (uint64_t)qword_1ED7AA1B0);
        v150 = v85;
        v151 = v85;
        v152 = sub_1C2CFD86C();
        v153 = sub_1C2CFE2B0();
        if (os_log_type_enabled(v152, v153))
        {
          v154 = (uint8_t *)OUTLINED_FUNCTION_6_0();
          *(_QWORD *)&v192 = OUTLINED_FUNCTION_6_0();
          *(_DWORD *)v154 = 136315138;
          v187 = (uint64_t)v39;
          swift_getErrorValue();
          v155 = sub_1C2CFEA78();
          *(_QWORD *)&v189 = sub_1C28BB120(v155, v156, (uint64_t *)&v192);
          OUTLINED_FUNCTION_88_9();
          OUTLINED_FUNCTION_32_0();
          OUTLINED_FUNCTION_0_2();
          OUTLINED_FUNCTION_0_2();
          OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v152, v153, "Plugin provided a transformer which failed to transform the parse and threw an error: %s", v154);
          OUTLINED_FUNCTION_107_1();
          OUTLINED_FUNCTION_11_0();
        }
        OUTLINED_FUNCTION_46_14();

        OUTLINED_FUNCTION_0_2();
        OUTLINED_FUNCTION_0_2();
        OUTLINED_FUNCTION_0_2();

        OUTLINED_FUNCTION_97();
        v157 = OUTLINED_FUNCTION_53(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
        OUTLINED_FUNCTION_98_7(v157, (uint64_t (*)(_QWORD))type metadata accessor for NamedParseTransformer);
        OUTLINED_FUNCTION_25_28(v158, (uint64_t (*)(_QWORD))type metadata accessor for FlowSearchResult);
        OUTLINED_FUNCTION_56_14();
        v145 = (uint64_t)v39;
LABEL_50:
        sub_1C28C9F68(v145, type metadata accessor for Parse);
LABEL_33:
        v104 = OUTLINED_FUNCTION_72_10();
        v105 = (uint64_t)v170;
        v106 = 1;
        v107 = 1;
LABEL_34:
        __swift_storeEnumTagSinglePayload(v105, v106, v107, v104);
        goto LABEL_35;
      }
      swift_release();
      v86 = (uint64_t)v168;
      sub_1C2A15858(v83, (uint64_t)v168);
      v160 = v81;
      v87 = v163;
      v88 = v162;
      OUTLINED_FUNCTION_38_25(v162 + v163[7]);
      v89 = v88 + v87[5];
      sub_1C2A15858(v86, v89);
      *(_QWORD *)(v88 + v87[6]) = MEMORY[0x1E0DEE9D8];
      v43 = (int *)v80;
      v90 = v164;
      sub_1C2CFBCA0();
      sub_1C28C9F68(v86, type metadata accessor for Parse);
      v161(v88, v90, v165);
      *(_BYTE *)(v88 + v87[8]) = 0;
      OUTLINED_FUNCTION_95_10(v89);
      v92 = v91;
      MEMORY[0x1E0C80A78](v91, v93);
      *(&v159 - 2) = v88;
      sub_1C2993780((void (*)(_QWORD *))sub_1C2A6AA7C, (uint64_t)(&v159 - 4), v92);
      v171 = 0;
      OUTLINED_FUNCTION_32_0();
      sub_1C28C9F68(v88, type metadata accessor for Input);
      sub_1C2904FF4();
      v94 = (void *)qword_1ED7A9158;
      v95 = OUTLINED_FUNCTION_21_31();
      v96 = v172;
      sub_1C2A0E51C(v95, v97, v172);
      OUTLINED_FUNCTION_97();
      OUTLINED_FUNCTION_46_14();

      OUTLINED_FUNCTION_40_17(v96);
      v9 = v160;
      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v173, v80);
      sub_1C28C9F68(v179, (uint64_t (*)(_QWORD))type metadata accessor for NamedParseTransformer);
      sub_1C28C9F68((uint64_t)v183, (uint64_t (*)(_QWORD))type metadata accessor for FlowSearchResult);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v195);
      OUTLINED_FUNCTION_40_17((uint64_t)v39);
    }
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_75_12();
  v125 = sub_1C28B99EC(&v189, (uint64_t)&v192);
  v126 = OUTLINED_FUNCTION_73_1(v125, sel_bundlePath);
  OUTLINED_FUNCTION_90_8();
  OUTLINED_FUNCTION_117_9();
  OUTLINED_FUNCTION_28_1();
  v127 = sub_1C2A717B4();
  v128 = OUTLINED_FUNCTION_45_16(v127);
  swift_endAccess();
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_8();
  if (v128)
    v129._rawValue = (void *)v128;
  else
    v129._rawValue = (void *)MEMORY[0x1E0DEE9D8];
  v186 = v194;
  v130 = __swift_project_boxed_opaque_existential_1(&v192, v193);
  v187 = (uint64_t)&v159;
  MEMORY[0x1E0C80A78](v130, v130);
  OUTLINED_FUNCTION_332();
  (*(void (**)(uint64_t))(v131 + 16))(v62);
  sub_1C2A15858(v60, (uint64_t)v168);
  v185 = Parse.usoTasks.getter();
  v132 = v63;
  v133 = OUTLINED_FUNCTION_73_1(v185, sel_bundlePath);
  v134 = sub_1C2CFDD58();
  v136 = v135;

  v190 = &type metadata for FlowPluginBundleImpl;
  v191 = &protocol witness table for FlowPluginBundleImpl;
  v137._countAndFlagsBits = v134;
  v137._object = v136;
  FlowPluginBundleImpl.init(bundlePath:pluginCacheKeys:)(v137, v129);
  v138 = (uint64_t)v170;
  LoadedFlowInfo.init<A>(actingFlow:parse:activeTasks:fromBundle:)();
  OUTLINED_FUNCTION_97();

  OUTLINED_FUNCTION_25_28(v139, (uint64_t (*)(_QWORD))type metadata accessor for FlowSearchResult);
  OUTLINED_FUNCTION_56_14();
  sub_1C28C9F68(v60, type metadata accessor for Parse);
  v140 = OUTLINED_FUNCTION_72_10();
  __swift_storeEnumTagSinglePayload(v138, 0, 1, v140);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v192);
LABEL_35:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A622D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12[2];
  uint64_t v13;
  _BYTE v14[40];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  sub_1C28B9A04((uint64_t)a2, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A4208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A4938);
  if (swift_dynamicCast())
  {
    sub_1C28B99EC(v12, (uint64_t)v15);
    v6 = v16;
    v7 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v6, v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1C28BB37C((uint64_t)v12, &qword_1ED7A4940);
    v9 = a2[3];
    v10 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v9);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(a1, v9, v10);
    static FlowSearchResult.flow(_:)(v11, a3);
    return swift_release();
  }
}

id sub_1C2A623F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = *a1;
  v5 = a1[1];
  v7 = (void *)a1[2];
  v8 = (_QWORD *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF78B0C0) + 48));
  v9 = type metadata accessor for Input(0);
  sub_1C2A15858(a2 + *(int *)(v9 + 20), a3);
  *v8 = v6;
  v8[1] = v5;
  v8[2] = v7;
  swift_bridgeObjectRetain();
  return v7;
}

double sub_1C2A6247C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v3 = *(_BYTE *)(a1 + 1);
  v4 = *(_BYTE *)(a1 + 56);
  LOBYTE(v18) = *(_BYTE *)a1;
  BYTE1(v18) = v3;
  v19 = *(_OWORD *)(a1 + 8);
  v20 = *(_OWORD *)(a1 + 24);
  v21 = *(_OWORD *)(a1 + 40);
  v22 = v4;
  v5 = (_QWORD *)IntentTopic.makeCacheKeyAndWildcardFallbacks()();
  v6 = sub_1C2A64448(v5);
  OUTLINED_FUNCTION_53_1();
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = *(void **)(v6 + 48);
    OUTLINED_FUNCTION_19_0();
    v8 = v7;
    OUTLINED_FUNCTION_32_0();
    v9 = v8;
    sub_1C2A637A4();

    v10 = OUTLINED_FUNCTION_53_1();
    if ((_QWORD)v20)
    {
      sub_1C28B99EC((__int128 *)&v18, a2);
      return result;
    }
    OUTLINED_FUNCTION_78_10(v10, &qword_1ED7A4210, v11, v12, v13, v14, v15, v16, v18);
  }
  else
  {
    OUTLINED_FUNCTION_32_0();
  }
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1C2A62574(uint64_t a1)
{
  NSObject *v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v5;
  os_log_type_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  id v29;
  os_log_type_t v30;
  uint8_t *v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;

  v4 = *v2;
  sub_1C2A642B4(a1);
  v6 = v5;
  if (!v5[2])
  {
    OUTLINED_FUNCTION_70();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v24 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_104();
    v25 = OUTLINED_FUNCTION_73_0();
    if (OUTLINED_FUNCTION_304(v25))
    {
      v26 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v35[0] = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v26 = 136315138;
      sub_1C28BB120(4999502, 0xE300000000000000, v35);
      OUTLINED_FUNCTION_100_13();
      OUTLINED_FUNCTION_88_9();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v1, v6, "FlowDelegatePluginLoader.makeFlowFrame no bundle : %s", v26);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    return 0;
  }
  v8 = v5[4];
  v7 = v5[5];
  v9 = (void *)v5[6];
  OUTLINED_FUNCTION_33_0();
  v10 = v9;
  OUTLINED_FUNCTION_70();
  v11 = v10;
  sub_1C2A637A4();
  if (!v34)
  {
    OUTLINED_FUNCTION_78_10(v12, &qword_1ED7A4210, v13, v14, v15, v16, v17, v18, v33);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v27 = OUTLINED_FUNCTION_118();
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_31_9();
    v29 = v11;
    sub_1C2CFD86C();
    v30 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_116_2(v30))
    {
      v31 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v35[0] = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v31 = 136315138;
      OUTLINED_FUNCTION_33_0();
      sub_1C28BB120(v8, v7, v35);
      OUTLINED_FUNCTION_100_13();
      sub_1C2CFE4D8();

      OUTLINED_FUNCTION_26_10();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v28, (os_log_type_t)v4, "FlowDelegatePluginLoader.makeFlowFrame no provider : %s", v31);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_26_10();
    return 0;
  }
  sub_1C28B99EC(&v33, (uint64_t)v35);
  v19 = sub_1C2A62910(v35, a1);
  if (!v19)
  {
    v20 = v36;
    v21 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 40))(a1, v20, v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791698);
    OUTLINED_FUNCTION_5_2();
    v22 = sub_1C2A64CD8();
    type metadata accessor for AnySiriKitFlowFrame();
    OUTLINED_FUNCTION_27();
    *(_QWORD *)&v33 = v22;
    sub_1C2967C6C(&qword_1EF7916A0, &qword_1EF791698);
    v19 = sub_1C2CFBE38();
  }
  v23 = v19;

  OUTLINED_FUNCTION_8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return v23;
}

uint64_t sub_1C2A62910(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  __int128 v34[3];

  v4 = sub_1C2CFDBE4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4, v6);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Parse(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  v13 = type metadata accessor for WithDispatchSemaphoreTimeout();
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2CFE874();
  if ((v34[0] & 1) != 0)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v17 = sub_1C2CFD878();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED7AA1B0);
    v18 = sub_1C2CFD86C();
    v19 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1C28B6000, v18, v19, "Calling deprecated FlowPlugin.makeFlowFrame function. Note the time out guard previously surrounding this call was removed due to risk of deadlock (see rdar://79777131). The runtime should no longer execute through this codepath.", v20, 2u);
      MEMORY[0x1C3BC9DE8](v20, -1, -1);
    }

    v21 = a1[3];
    v22 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(a2, v21, v22);
  }
  else
  {
    if (qword_1EF786D38 != -1)
      swift_once();
    v24 = sub_1C2CFDBC0();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EF791678);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v16, v25, v24);
    sub_1C28B9A04((uint64_t)a1, (uint64_t)v34);
    sub_1C2A15858(a2, (uint64_t)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    v26 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v27 = swift_allocObject();
    sub_1C28B99EC(v34, v27 + 16);
    sub_1C28C5410((uint64_t)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, type metadata accessor for Parse);
    sub_1C28BF798(0, (unint64_t *)&qword_1ED7A60E0);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DEF530], v4);
    v28 = (void *)sub_1C2CFE340();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v23 = sub_1C2A62DA4((uint64_t)v28, (uint64_t)sub_1C2A6A954, v27);
    swift_release();

    sub_1C28C9F68((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WithDispatchSemaphoreTimeout);
    if (v23 == 1)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v29 = sub_1C2CFD878();
      __swift_project_value_buffer(v29, (uint64_t)qword_1ED7AA1B0);
      v30 = sub_1C2CFD86C();
      v31 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_1C28B6000, v30, v31, "FlowDelegatePluginLoader.makeFlowFrame provider timed out", v32, 2u);
        MEMORY[0x1C3BC9DE8](v32, -1, -1);
      }

      return 0;
    }
  }
  return v23;
}

uint64_t sub_1C2A62CF8@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1C2CFE184();
  result = __swift_getEnumTagSinglePayload(a1, 1, v4);
  *a2 = (_DWORD)result != 1;
  return result;
}

uint64_t sub_1C2A62D4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a2, v5, v6);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A62DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  dispatch_semaphore_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  NSObject *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];

  v36 = a1;
  v5 = sub_1C2CFDC2C();
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  v7 = MEMORY[0x1E0C80A78](v5, v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7, v10);
  v37 = (char *)&v32 - v11;
  v12 = sub_1C2CFDBD8();
  v13 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v35 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C2CFDC14();
  v33 = *(_QWORD *)(v17 - 8);
  v34 = v17;
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = dispatch_semaphore_create(0);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 1;
  v32 = (uint64_t *)(v22 + 16);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = a2;
  v23[4] = a3;
  v23[5] = v21;
  aBlock[4] = sub_1C2A6A9F0;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2C51184;
  aBlock[3] = &block_descriptor_5;
  v24 = _Block_copy(aBlock);
  sub_1C2CFD350();
  sub_1C2CFD350();
  v25 = v21;
  sub_1C2CFDBF0();
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1C28CB5D8(&qword_1ED7A6040, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6058);
  sub_1C2967C6C(&qword_1ED7A6060, &qword_1ED7A6058);
  sub_1C2CFE574();
  MEMORY[0x1C3BC8DE0](0, v20, v16, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v12);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v34);
  swift_release();
  sub_1C2CFDC20();
  v26 = v37;
  MEMORY[0x1C3BC86F0](v9, v40);
  v27 = v39;
  v28 = *(void (**)(char *, uint64_t))(v38 + 8);
  v28(v9, v39);
  sub_1C2CFE394();
  v29 = 1;
  v28(v26, v27);
  LOBYTE(v26) = sub_1C2CFDBCC();

  if ((v26 & 1) != 0)
  {
    v30 = v32;
    swift_beginAccess();
    v29 = *v30;
    sub_1C2A6AA14(*v30);
  }
  swift_release();
  return v29;
}

void sub_1C2A630D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v54;
  int64_t v55;
  int64_t v56;
  uint64_t v57;
  __int128 v59;
  uint64_t v60;

  if (qword_1ED7AA040 == -1)
    goto LABEL_2;
LABEL_54:
  swift_once();
LABEL_2:
  v5 = OUTLINED_FUNCTION_118();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_31_9();
  v52 = v6;
  sub_1C2CFD86C();
  v7 = OUTLINED_FUNCTION_30();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_QWORD *)&v59 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v8 = 136315138;
    v9 = OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_87_10(v9, v10, v11, v12, v13, v14, v15, v16, (uint64_t)v6);
    OUTLINED_FUNCTION_116_6();
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v6, v7, "%s being loaded...", v8);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_29_2();
  if ((sub_1C2A607C8() & 1) == 0)
  {
    sub_1C2CFD86C();
    v17 = OUTLINED_FUNCTION_123();
    if (OUTLINED_FUNCTION_115(v17))
    {
      v18 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v18 = 0;
      OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v6, (os_log_type_t)v3, "Environment should be initialized by this point", v18);
      OUTLINED_FUNCTION_11_0();
    }

  }
  OUTLINED_FUNCTION_28_1();
  sub_1C2A717FC();
  v20 = v19;
  swift_endAccess();
  v21 = 0;
  v22 = *(_QWORD *)(v20 + 64);
  v54 = v20 + 64;
  v57 = v20;
  v23 = 1 << *(_BYTE *)(v20 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v55 = (unint64_t)(v23 + 63) >> 6;
  if ((v24 & v22) != 0)
  {
LABEL_11:
    v26 = __clz(__rbit64(v25));
    v25 &= v25 - 1;
    v27 = v26 | (v21 << 6);
    goto LABEL_26;
  }
  while (1)
  {
    v28 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    if (v28 >= v55)
      goto LABEL_51;
    v29 = *(_QWORD *)(v54 + 8 * v28);
    ++v21;
    if (!v29)
    {
      v21 = v28 + 1;
      if (v28 + 1 >= v55)
        goto LABEL_51;
      v29 = *(_QWORD *)(v54 + 8 * v21);
      if (!v29)
      {
        v21 = v28 + 2;
        if (v28 + 2 >= v55)
          goto LABEL_51;
        v29 = *(_QWORD *)(v54 + 8 * v21);
        if (!v29)
        {
          v30 = v28 + 3;
          if (v30 >= v55)
          {
LABEL_51:
            OUTLINED_FUNCTION_65_11();
            goto LABEL_50;
          }
          v29 = *(_QWORD *)(v54 + 8 * v30);
          if (!v29)
          {
            while (1)
            {
              v21 = v30 + 1;
              if (__OFADD__(v30, 1))
                break;
              if (v21 >= v55)
                goto LABEL_51;
              v29 = *(_QWORD *)(v54 + 8 * v21);
              ++v30;
              if (v29)
                goto LABEL_25;
            }
            __break(1u);
            return;
          }
          v21 = v30;
        }
      }
    }
LABEL_25:
    v25 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v21 << 6);
LABEL_26:
    v56 = v21;
    v31 = *(_QWORD *)(*(_QWORD *)(v57 + 56) + 8 * v27);
    if (!(v31 >> 62))
    {
      v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_12();
      if (v32)
        break;
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_31_9();
    v32 = sub_1C2CFE820();
    OUTLINED_FUNCTION_32_0();
    if (v32)
      break;
LABEL_40:
    OUTLINED_FUNCTION_32_0();
    v21 = v56;
    if (v25)
      goto LABEL_11;
  }
  v3 = v31 & 0xC000000000000001;
  v33 = 4;
  while (1)
  {
    if (v3)
      v34 = (id)MEMORY[0x1C3BC9170](v33 - 4, v31);
    else
      v34 = *(id *)(v31 + 8 * v33);
    v35 = v34;
    v36 = v33 - 3;
    if (__OFADD__(v33 - 4, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    v37 = sub_1C2A6A488(v34);
    if (!v38)
      goto LABEL_39;
    if (v37 == a1 && v38 == a2)
      break;
    v40 = OUTLINED_FUNCTION_42_0();
    OUTLINED_FUNCTION_126();
    if ((v40 & 1) != 0)
      goto LABEL_45;
LABEL_39:

    ++v33;
    if (v36 == v32)
      goto LABEL_40;
  }
  OUTLINED_FUNCTION_32_0();
LABEL_45:
  swift_bridgeObjectRelease();
  sub_1C2A637A4();
  if (v60)
  {

    OUTLINED_FUNCTION_65_11();
    sub_1C28B99EC(&v59, a3);
    return;
  }
  sub_1C28BB37C((uint64_t)&v59, &qword_1ED7A4210);
  OUTLINED_FUNCTION_31_9();
  v41 = v52;
  sub_1C2CFD86C();
  v42 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_116_2(v42))
  {
    v43 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_QWORD *)&v59 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v43 = 136315138;
    v44 = OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_87_10(v44, v45, v46, v47, v48, v49, v50, v51, (uint64_t)v52);
    OUTLINED_FUNCTION_116_6();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v41, (os_log_type_t)v33, "Didn't find a bundle for input %s", v43);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_65_11();
  OUTLINED_FUNCTION_29_2();

LABEL_50:
  OUTLINED_FUNCTION_38_25(a3);
}

void sub_1C2A635E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v4;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  sub_1C2A630D8(a1, a2, (uint64_t)&v16);
  if (v17)
  {
    sub_1C28B99EC(&v16, (uint64_t)v18);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_118();
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_31_9();
    sub_1C2CFD86C();
    v9 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_115(v9))
    {
      v10 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v16 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v10 = 136315138;
      OUTLINED_FUNCTION_19_0();
      v11 = OUTLINED_FUNCTION_97_9();
      sub_1C28BB120(v11, v12, v13);
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_26_10();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v8, v4, "%s being warmed...", v10);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_29_2();
    v14 = v19;
    v15 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(a3, a4, v14, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    sub_1C28BB37C((uint64_t)&v16, &qword_1ED7A4210);
  }
}

void sub_1C2A637A4()
{
  NSObject *v0;
  os_log_type_t v1;
  NSObject *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *isa;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  os_log_type_t v17;
  uint64_t (*v18)();
  uint8_t *v19;
  uint64_t v20;
  os_log_type_t v21;
  _WORD *v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  const char *v28;
  os_log_type_t v29;
  _WORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  os_log_type_t v44;
  uint8_t *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  os_log_type_t v55;
  uint8_t *v56;
  id v57;
  uint64_t v58;
  uint64_t ObjCClassMetadata;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  id v65;
  os_log_type_t v66;
  uint8_t *v67;
  id v68;
  uint64_t v69;
  const char *v70;
  os_log_type_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;

  OUTLINED_FUNCTION_9();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v7 = sub_1C2CFD800();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  OUTLINED_FUNCTION_332();
  if (qword_1ED7AA040 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_104();
  v11 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_126_0(v11))
  {
    v12 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_WORD *)v12 = 0;
    OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v0, v1, "FlowDelegatePluginLoader.loadFlowPlugin begin", v12);
    OUTLINED_FUNCTION_11_0();
  }

  isa = v0[13].isa;
  sub_1C2CFE3A0();
  v14 = sub_1C2A6A488(v4);
  if (!v15)
  {
    OUTLINED_FUNCTION_32_5();
    v21 = OUTLINED_FUNCTION_249();
    if (OUTLINED_FUNCTION_48_7(v21))
    {
      v22 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v22);
      OUTLINED_FUNCTION_30_6(&dword_1C28B6000, v23, v24, "Bundle has no bundleIdentifier?");
      OUTLINED_FUNCTION_11_0();
    }
    goto LABEL_33;
  }
  v16 = v15;
  v74 = v8;
  v77 = v14;
  OUTLINED_FUNCTION_31_9();
  OUTLINED_FUNCTION_32_5();
  v17 = OUTLINED_FUNCTION_30();
  v18 = swift_checkMetadataState;
  if (os_log_type_enabled(isa, v17))
  {
    v19 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_QWORD *)&v80 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v19 = 136315138;
    OUTLINED_FUNCTION_3_1();
    v20 = sub_1C28BB120(v77, v16, (uint64_t *)&v80);
    OUTLINED_FUNCTION_146_3(v20);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, isa, v17, "FlowDelegatePluginLoader.loadFlowPlugin %s", v19);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_29_2();
  swift_beginAccess();
  v2 = v2[12].isa;
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_33_0();
  sub_1C28C16A0();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_8();
  if (v79)
  {
    sub_1C28B99EC(&v78, (uint64_t)&v80);
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_32_5();
    v25 = OUTLINED_FUNCTION_73_0();
    if (OUTLINED_FUNCTION_304(v25))
    {
      v26 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v78 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v26 = 136315138;
      OUTLINED_FUNCTION_3_1();
      sub_1C28BB120(v77, v16, (uint64_t *)&v78);
      OUTLINED_FUNCTION_88_9();
      OUTLINED_FUNCTION_26_10();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v2, (os_log_type_t)swift_checkMetadataState, "FlowDelegatePluginLoader.loadFlowPlugin found flowPlugin %s", v26);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_29_2();
    sub_1C28B99EC(&v80, v6);
    goto LABEL_35;
  }
  sub_1C28BB37C((uint64_t)&v78, &qword_1ED7A4210);
  v27 = (uint64_t)objc_msgSend(v4, sel_isLoaded);
  v28 = (const char *)&unk_1E7CBC000;
  if ((v27 & 1) != 0)
  {
LABEL_25:
    if (!OUTLINED_FUNCTION_31_0(v27, sel_principalClass))
    {
      OUTLINED_FUNCTION_29();
      v65 = v4;
      OUTLINED_FUNCTION_32_5();
      v66 = OUTLINED_FUNCTION_249();
      if (OUTLINED_FUNCTION_304(v66))
      {
        v67 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_QWORD *)&v80 = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v67 = 136315138;
        v68 = objc_msgSend(v65, v28 + 2632);
        OUTLINED_FUNCTION_207_0();
        OUTLINED_FUNCTION_96_8();
        v69 = OUTLINED_FUNCTION_74_9();
        OUTLINED_FUNCTION_146_3(v69);
        OUTLINED_FUNCTION_92_13();

        OUTLINED_FUNCTION_126();
        v70 = "No principal class found in bundle %s";
        goto LABEL_32;
      }

LABEL_34:
      *(_QWORD *)(v6 + 32) = 0;
      *(_OWORD *)v6 = 0u;
      *(_OWORD *)(v6 + 16) = 0u;
      goto LABEL_35;
    }
    ObjCClassMetadata = swift_getObjCClassMetadata();
    v60 = dynamic_cast_existential_1_conditional(ObjCClassMetadata);
    if (v60)
    {
      v62 = v60;
      v63 = v61;
      v64 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v81 = v60;
      v82 = v61;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v80);
      v64(v62, v63);
      sub_1C28B9A04((uint64_t)&v80, (uint64_t)&v78);
      OUTLINED_FUNCTION_28_1();
      sub_1C2A3D0D4();
      swift_endAccess();
      sub_1C28B9A04((uint64_t)&v80, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_32_5();
    v71 = OUTLINED_FUNCTION_249();
    if (OUTLINED_FUNCTION_304(v71))
    {
      v67 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v80 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v67 = 136315138;
      *(_QWORD *)&v78 = ObjCClassMetadata;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF78B0D0);
      v72 = sub_1C2CFDDAC();
      *(_QWORD *)&v78 = sub_1C28BB120(v72, v73, (uint64_t *)&v80);
      OUTLINED_FUNCTION_92_13();
      OUTLINED_FUNCTION_254();
      v70 = "Could not cast class %s as FlowPlugin";
LABEL_32:
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v2, (os_log_type_t)v18, v70, v67);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }
LABEL_33:

    goto LABEL_34;
  }
  OUTLINED_FUNCTION_32_5();
  v29 = OUTLINED_FUNCTION_73_0();
  if (OUTLINED_FUNCTION_48_7(v29))
  {
    v30 = (_WORD *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_91(v30);
    OUTLINED_FUNCTION_30_6(&dword_1C28B6000, v31, v32, "FlowDelegatePluginLoader.loadFlowPlugin bundle is not loaded");
    OUTLINED_FUNCTION_11_0();
  }
  v76 = v6;

  v33 = sub_1C2CFE370();
  if (qword_1ED7AA038 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v34 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v34 + 16) = xmmword_1C2D002E0;
  v35 = OUTLINED_FUNCTION_31_0(v34, sel_bundlePath);
  v36 = OUTLINED_FUNCTION_90_8();
  v38 = v37;

  *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
  v39 = sub_1C28BFD30();
  *(_QWORD *)(v34 + 64) = v39;
  *(_QWORD *)(v34 + 32) = v36;
  *(_QWORD *)(v34 + 40) = v38;
  sub_1C2CFD7F4();
  OUTLINED_FUNCTION_29_22();
  OUTLINED_FUNCTION_70();
  v18 = *(uint64_t (**)())(v74 + 8);
  OUTLINED_FUNCTION_52_18();
  if ((objc_msgSend(v4, sel_load) & 1) != 0)
  {
    sub_1C2CFE364();
    v40 = OUTLINED_FUNCTION_5_2();
    *(_OWORD *)(v40 + 16) = xmmword_1C2D00CD0;
    v41 = OUTLINED_FUNCTION_31_0(v40, sel_bundlePath);
    sub_1C2CFDD58();
    OUTLINED_FUNCTION_104_7();
    v42 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v40 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v40 + 64) = v39;
    *(_QWORD *)(v40 + 32) = v38;
    *(_QWORD *)(v40 + 40) = v33;
    *(_QWORD *)(v40 + 96) = v42;
    *(_QWORD *)(v40 + 104) = v39;
    OUTLINED_FUNCTION_89_8(0x73736563637553);
    OUTLINED_FUNCTION_48_19();
    OUTLINED_FUNCTION_29_22();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_52_18();
    v43 = v4;
    v2 = OUTLINED_FUNCTION_32_5();
    v44 = sub_1C2CFE2C8();
    if (OUTLINED_FUNCTION_48_7(v44))
    {
      v75 = v40;
      v45 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v80 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v45 = 136315138;
      v46 = objc_msgSend(v43, sel_bundlePath);
      v47 = sub_1C2CFDD58();
      v49 = v48;

      v50 = sub_1C28BB120(v47, v49, (uint64_t *)&v80);
      OUTLINED_FUNCTION_146_3(v50);
      OUTLINED_FUNCTION_88_9();

      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v2, v75, "Loaded bundle at path %s", v45);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    v6 = v76;
    v28 = (const char *)0x1F2739000;
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_29();
  sub_1C2CFE364();
  v51 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v51 + 16) = xmmword_1C2D00CD0;
  v52 = OUTLINED_FUNCTION_31_0(v51, sel_bundlePath);
  sub_1C2CFDD58();
  OUTLINED_FUNCTION_104_7();
  v53 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v51 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v51 + 64) = v39;
  *(_QWORD *)(v51 + 32) = v38;
  *(_QWORD *)(v51 + 40) = v33;
  *(_QWORD *)(v51 + 96) = v53;
  *(_QWORD *)(v51 + 104) = v39;
  OUTLINED_FUNCTION_89_8(0x6572756C696146);
  OUTLINED_FUNCTION_48_19();
  OUTLINED_FUNCTION_29_22();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_52_18();
  v54 = v4;
  sub_1C2CFD86C();
  v55 = OUTLINED_FUNCTION_249();
  if (OUTLINED_FUNCTION_304(v55))
  {
    v56 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_QWORD *)&v80 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v56 = 136315138;
    v57 = objc_msgSend(v54, sel_bundlePath);
    OUTLINED_FUNCTION_207_0();
    OUTLINED_FUNCTION_96_8();
    v58 = OUTLINED_FUNCTION_74_9();
    OUTLINED_FUNCTION_146_3(v58);
    OUTLINED_FUNCTION_92_13();

    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v39, (os_log_type_t)v18, "Failed to load bundle at path %s. To see the root cause, check the full assistant_service logs with --predicate 'process == \"assistant_service\"'", v56);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_38_25(v76);
LABEL_35:
  sub_1C2CFE3AC();
  OUTLINED_FUNCTION_1();
}

void sub_1C2A642B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  void *v9;
  os_log_type_t v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_332();
  sub_1C2A15858(a1, v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = OUTLINED_FUNCTION_97_9();
  sub_1C28C9F68(v6, v7);
  if (EnumCaseMultiPayload == 8)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED7AA1B0);
    v9 = (void *)OUTLINED_FUNCTION_104();
    v10 = sub_1C2CFE298();
    if (OUTLINED_FUNCTION_48_7(v10))
    {
      v11 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v11);
      OUTLINED_FUNCTION_30_6(&dword_1C28B6000, v12, v13, "Got empty parse; returning no KeyAndBundles.");
      OUTLINED_FUNCTION_11_0();
    }

  }
  else
  {
    static IntentTopic.make(from:)();
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = v14 + 56;
      do
      {
        v16 += 64;
        IntentTopic.makeCacheKeyAndWildcardFallbacks()();
        sub_1C2905498();
        --v15;
      }
      while (v15);
      OUTLINED_FUNCTION_70();
      v17 = v18;
    }
    else
    {
      OUTLINED_FUNCTION_70();
      v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    sub_1C2A64448(v17);
    OUTLINED_FUNCTION_70();
  }
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A64448(_QWORD *a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint64_t *v3;
  os_log_type_t v4;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  os_log_type_t v15;
  uint8_t *v16;
  unint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v22;
  uint64_t v23[2];
  uint64_t v24;

  v4 = v1;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v6 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_123_0();
  v7 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_126_0(v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v8 = 134217984;
    OUTLINED_FUNCTION_55_12();
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v1, v2, "cacheKeys count %ld", v8);
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_53_1();
  v9 = MEMORY[0x1E0DEE9D8];
  v24 = MEMORY[0x1E0DEE9D8];
  v10 = a1[2];
  if (v10)
  {
    OUTLINED_FUNCTION_19_0();
    v3 = a1 + 5;
    v11 = v10;
    do
    {
      v12 = *v3;
      v23[0] = *(v3 - 1);
      v23[1] = v12;
      OUTLINED_FUNCTION_12();
      sub_1C2A6477C(v23, &v22);
      v3 += 2;
      OUTLINED_FUNCTION_32_0();
      v1 = &v24;
      sub_1C29056D0();
      --v11;
    }
    while (v11);
    OUTLINED_FUNCTION_53_1();
    v9 = v24;
  }
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_123_0();
  v13 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_10_1(v13))
  {
    v14 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v14 = 134217984;
    OUTLINED_FUNCTION_55_12();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v1, v4, "Found %ld eligible bundles.", v14);
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_70();
  if (v10 && !*(_QWORD *)(v9 + 16))
  {
    OUTLINED_FUNCTION_19_0();
    OUTLINED_FUNCTION_123_0();
    v15 = OUTLINED_FUNCTION_123();
    if (OUTLINED_FUNCTION_116_2(v15))
    {
      v16 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v23[0] = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v16 = 136315138;
      v18 = a1[4];
      v17 = a1[5];
      OUTLINED_FUNCTION_33_0();
      v24 = sub_1C28BB120(v18, v17, v23);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_53_1();
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v1, (os_log_type_t)v3, "Didn't find a bundle for input %s", v16);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_123_0();
    v19 = OUTLINED_FUNCTION_249();
    if (OUTLINED_FUNCTION_48_7(v19))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v20 = 0;
      OUTLINED_FUNCTION_11_0();
    }

  }
  return v9;
}

uint64_t sub_1C2A6477C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21[4];

  v3 = *a1;
  v4 = a1[1];
  if (qword_1ED7AA040 != -1)
    swift_once();
  v5 = sub_1C2CFD878();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED7AA1B0);
  swift_bridgeObjectRetain_n();
  v6 = sub_1C2CFD86C();
  v7 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v20 = a2;
    v9 = swift_slowAlloc();
    v21[0] = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1C28BB120(v3, v4, v21);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C28B6000, v6, v7, "Searching bundleCache for '%s'", v8, 0xCu);
    swift_arrayDestroy();
    v10 = v9;
    a2 = v20;
    MEMORY[0x1C3BC9DE8](v10, -1, -1);
    MEMORY[0x1C3BC9DE8](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = sub_1C2A60794();
  if (!*v12)
  {
    ((void (*)(uint64_t *, _QWORD))v11)(v21, 0);
LABEL_10:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  sub_1C2A717FC();
  v14 = sub_1C28C1780(v3, v4, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t *, _QWORD))v11)(v21, 0);
  if (!v14)
    goto LABEL_10;
LABEL_11:
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C2A717FC();
  sub_1C28C1780(v3, v4, v15);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21[0] = v14;
  sub_1C2905558();
  v16 = v21[0];
  swift_bridgeObjectRetain();
  sub_1C2A60478(v16, v3, v4);
  v18 = v17;
  result = swift_bridgeObjectRelease();
  *a2 = v18;
  return result;
}

void sub_1C2A64A78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_99_7();
  OUTLINED_FUNCTION_32_0();
  v5 = a4;
  sub_1C2CFE424();

}

uint64_t sub_1C2A64AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;

  v5 = a1 == a4 && a2 == a5;
  if (!v5 && (OUTLINED_FUNCTION_42_0() & 1) == 0)
    return 0;
  sub_1C28BF798(0, (unint64_t *)&qword_1ED7A6170);
  return sub_1C2CFE418() & 1;
}

void sub_1C2A64B54(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  sub_1C2CFEAB4();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_99_7();
  OUTLINED_FUNCTION_32_0();
  v4 = a3;
  sub_1C2CFE424();

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_76_1();
}

void sub_1C2A64BB0()
{
  uint64_t v0;

  sub_1C2A64B54(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(void **)(v0 + 16));
}

void sub_1C2A64BBC(uint64_t a1)
{
  uint64_t v1;

  sub_1C2A64A78(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16));
}

uint64_t sub_1C2A64BC8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1C2CFEAB4();
  swift_bridgeObjectRetain();
  sub_1C2CFDCF8();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1C2CFE424();

  return sub_1C2CFEAD8();
}

uint64_t sub_1C2A64C3C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C2A64AE0(*a1, a1[1], a1[2], *a2, a2[1]);
}

uint64_t FlowDelegatePluginLoader.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_53_1();
  sub_1C2A6A504(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t FlowDelegatePluginLoader.__deallocating_deinit()
{
  FlowDelegatePluginLoader.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A64CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  OUTLINED_FUNCTION_57_12();
  *(_QWORD *)(v1 + 48) = v2;
  swift_retain_n();
  OUTLINED_FUNCTION_93_8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_70_9();
  swift_bridgeObjectRetain();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_64_11();
  v3 = OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_51_17(v3, v4, v5, v6, v7, v8, v9, v10, v27, *((uint64_t *)&v27 + 1), v28, v29, v30, 0, 0xE000000000000000);
  sub_1C29DD890((uint64_t)&v27);
  v11 = OUTLINED_FUNCTION_36_0();
  if (v29)
  {
    v18 = sub_1C28B99EC(&v27, (uint64_t)&v31);
    OUTLINED_FUNCTION_105_8(v18, v19, v20, v21, v22, v23, v24, v25, v27, *((uint64_t *)&v27 + 1), v28, v29, v30, v31);
  }
  else
  {
    OUTLINED_FUNCTION_78_10(v11, &qword_1ED7A7300, v12, v13, v14, v15, v16, v17, v27);
    *(_QWORD *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 64) = 0;
    *(_QWORD *)(v0 + 72) = 0;
    *(_OWORD *)(v0 + 80) = xmmword_1C2D026C0;
  }
  OUTLINED_FUNCTION_374();
  return v0;
}

void sub_1C2A64DBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  OUTLINED_FUNCTION_57_12();
  type metadata accessor for AnyFlow();
  OUTLINED_FUNCTION_5_2();
  sub_1C2CFD350();
  sub_1C295143C();
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)&v30 = 0;
  *((_QWORD *)&v30 + 1) = 0xE000000000000000;
  OUTLINED_FUNCTION_93_8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_70_9();
  *(_QWORD *)&v26 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7887E0);
  sub_1C2CFDDAC();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_53_1();
  v3 = OUTLINED_FUNCTION_64_11();
  OUTLINED_FUNCTION_51_17(v3, v4, v5, v6, v7, v8, v9, v10, v26, *((uint64_t *)&v26 + 1), v27, v28, v29, 0, 0xE000000000000000);
  sub_1C29DD890((uint64_t)&v26);
  v11 = OUTLINED_FUNCTION_36_0();
  if (v28)
  {
    v18 = sub_1C28B99EC(&v26, (uint64_t)&v30);
    OUTLINED_FUNCTION_105_8(v18, v19, v20, v21, v22, v23, v24, v25, v26, *((uint64_t *)&v26 + 1), v27, v28, v29, v30);
  }
  else
  {
    OUTLINED_FUNCTION_78_10(v11, &qword_1ED7A7300, v12, v13, v14, v15, v16, v17, v26);
    *(_QWORD *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 64) = 0;
    *(_QWORD *)(v0 + 72) = 0;
    *(_OWORD *)(v0 + 80) = xmmword_1C2D026C0;
  }
  OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_76_1();
}

uint64_t sub_1C2A64EB0(uint64_t a1, void (*a2)(_QWORD *__return_ptr))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];

  a2(v6);
  v3 = v6[0];
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  sub_1C2A6AA24(v4);
  return sub_1C2CFE3AC();
}

uint64_t sub_1C2A64F1C(_OWORD *a1, _OWORD *a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  __int128 v7;
  uint64_t *v9;
  _OWORD *v11;
  uint64_t v12;

  v4 = *v2;
  sub_1C2CFEAB4();
  OUTLINED_FUNCTION_37_0();
  IntentTopic.hash(into:)();
  v5 = sub_1C2CFEAD8() & ~(-1 << *(_BYTE *)(v4 + 32));
  v11 = a2;
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  OUTLINED_FUNCTION_126();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *v9;
  *v9 = 0x8000000000000000;
  sub_1C2A6A730((uint64_t)v11);
  sub_1C2A67470((uint64_t)v11, v5, isUniquelyReferenced_nonNull_native);
  OUTLINED_FUNCTION_120_6(v12);
  v7 = v11[1];
  *a1 = *v11;
  a1[1] = v7;
  a1[2] = v11[2];
  *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)((char *)v11 + 41);
  return 1;
}

uint64_t sub_1C2A654C0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD, _QWORD);
  char v22;
  void (*v23)(uint64_t, uint64_t);
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_1C2CFBEF8();
  v7 = *(_QWORD **)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, MEMORY[0x1E0D9F0B8]);
  OUTLINED_FUNCTION_10();
  v10 = v9 - v8;
  v11 = *v1;
  sub_1C28CB5D8(&qword_1ED7A7200, v12);
  swift_bridgeObjectRetain();
  v30 = v3;
  v13 = sub_1C2CFDCE0();
  v14 = -1 << *(_BYTE *)(v11 + 32);
  v15 = v13 & ~v14;
  v16 = v11;
  v17 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v27 = v1;
    v28 = v5;
    v29 = ~v14;
    v18 = v7[9];
    v19 = (void (*)(_QWORD, _QWORD, _QWORD))v7[2];
    while (1)
    {
      v20 = v16;
      v21 = v19;
      v19(v10, *(_QWORD *)(v16 + 48) + v18 * v15, v6);
      sub_1C28CB5D8(&qword_1EF7916B8, (void (*)(uint64_t))MEMORY[0x1E0D9F0B8]);
      v22 = sub_1C2CFDD28();
      v23 = (void (*)(uint64_t, uint64_t))v7[1];
      v23(v10, v6);
      if ((v22 & 1) != 0)
        break;
      v15 = (v15 + 1) & v29;
      v16 = v20;
      v19 = v21;
      if (((*(_QWORD *)(v17 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v1 = v27;
        v5 = v28;
        v24 = v7;
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_126();
    v23(v30, v6);
    v21(v28, *(_QWORD *)(*v27 + 48) + v18 * v15, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = (void (*)(_QWORD, _QWORD, _QWORD))v7[2];
    v24 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19(v10, v30, v6);
    v31 = *v1;
    *v1 = 0x8000000000000000;
    sub_1C2A67A44(v10, v15, isUniquelyReferenced_nonNull_native);
    *v1 = v31;
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, uint64_t))v24[4])(v5, v30, v6);
    return 1;
  }
}

uint64_t sub_1C2A65708(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1C2CFE5D4();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C28BF798(0, (unint64_t *)&qword_1ED7A6158);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1C2CFE5C8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1C2A65E50(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_1C2A66898();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_1C2A673F0((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v10 = sub_1C2CFE40C();
    v11 = -1 << *(_BYTE *)(v6 + 32);
    v12 = v10 & ~v11;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      sub_1C28BF798(0, (unint64_t *)&qword_1ED7A6158);
      v13 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v12);
      v14 = sub_1C2CFE418();

      if ((v14 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v18 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v12);
        *a1 = v18;
        v19 = v18;
        return 0;
      }
      v15 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v15;
        if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v12);
        v17 = sub_1C2CFE418();

        if ((v17 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1C2A67C48((uint64_t)v8, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2A659A0(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t *v4;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  BOOL v16;
  id v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  uint64_t result;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t *v26;
  uint64_t v28;

  v8 = *v4;
  sub_1C2CFEAB4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2CFDCF8();
  swift_bridgeObjectRelease();
  v9 = a4;
  sub_1C2CFE424();

  v10 = sub_1C2CFEAD8();
  v11 = -1 << *(_BYTE *)(v8 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    while (1)
    {
      v14 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 24 * v12);
      v15 = (void *)v14[2];
      v16 = *v14 == a2 && v14[1] == a3;
      if (v16 || (sub_1C2CFE9DC() & 1) != 0)
      {
        sub_1C28BF798(0, (unint64_t *)&qword_1ED7A6170);
        swift_bridgeObjectRetain();
        v17 = v15;
        v18 = sub_1C2CFE418();

        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          break;
      }
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_10;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = (uint64_t *)(*(_QWORD *)(*v26 + 48) + 24 * v12);
    v23 = v22[1];
    v24 = (void *)v22[2];
    *a1 = *v22;
    a1[1] = v23;
    a1[2] = (uint64_t)v24;
    swift_bridgeObjectRetain();
    v25 = v24;
    return 0;
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v26;
    *v26 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    v20 = v9;
    sub_1C2A67DCC(a2, a3, v20, v12, isUniquelyReferenced_nonNull_native);
    *v26 = v28;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    result = 1;
    a1[2] = (uint64_t)v20;
  }
  return result;
}

uint64_t sub_1C2A65BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  OUTLINED_FUNCTION_41_19();
  swift_bridgeObjectRetain();
  sub_1C2CFDCF8();
  v8 = OUTLINED_FUNCTION_2();
  v9 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v8 & ~v9;
  OUTLINED_FUNCTION_3_36();
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(v6 + 48);
    OUTLINED_FUNCTION_94_10(v12 + 16 * v10);
    v14 = v14 && v13 == a3;
    if (v14 || (OUTLINED_FUNCTION_42_0() & 1) != 0)
    {
LABEL_7:
      OUTLINED_FUNCTION_53_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_58_17(*v4);
      return 0;
    }
    v16 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v16;
      OUTLINED_FUNCTION_3_36();
      if ((v17 & 1) == 0)
        break;
      OUTLINED_FUNCTION_94_10(v12 + 16 * v10);
      v19 = v14 && v18 == a3;
      if (v19 || (OUTLINED_FUNCTION_42_0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v4;
  *v4 = 0x8000000000000000;
  OUTLINED_FUNCTION_19_0();
  sub_1C2A67FD0(v5, a3, v10, isUniquelyReferenced_nonNull_native);
  *v4 = v21;
  swift_bridgeObjectRelease();
  *v3 = v5;
  v3[1] = a3;
  return 1;
}

uint64_t sub_1C2A65D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  OUTLINED_FUNCTION_41_19();
  sub_1C2CFDCF8();
  v8 = OUTLINED_FUNCTION_2();
  v9 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v8 & ~v9;
  OUTLINED_FUNCTION_3_36();
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(v6 + 48);
    OUTLINED_FUNCTION_94_10(v12 + 16 * v10);
    v14 = v14 && v13 == a3;
    if (v14 || (OUTLINED_FUNCTION_42_0() & 1) != 0)
    {
LABEL_7:
      OUTLINED_FUNCTION_70();
      OUTLINED_FUNCTION_58_17(*v4);
      return 0;
    }
    v16 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v16;
      OUTLINED_FUNCTION_3_36();
      if ((v17 & 1) == 0)
        break;
      OUTLINED_FUNCTION_94_10(v12 + 16 * v10);
      v19 = v14 && v18 == a3;
      if (v19 || (OUTLINED_FUNCTION_42_0() & 1) != 0)
        goto LABEL_7;
    }
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v4;
  *v4 = 0x8000000000000000;
  OUTLINED_FUNCTION_50_0();
  sub_1C2A68168(v5, a3, v10, isUniquelyReferenced_nonNull_native);
  OUTLINED_FUNCTION_120_6(v21);
  *v3 = v5;
  v3[1] = a3;
  return 1;
}

uint64_t sub_1C2A65E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916C8);
  v2 = sub_1C2CFE658();
  v14 = v2;
  sub_1C2CFE598();
  if (!sub_1C2CFE5EC())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  sub_1C28BF798(0, (unint64_t *)&qword_1ED7A6158);
  while (1)
  {
    swift_dynamicCast();
    v2 = v14;
    if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
    {
      sub_1C2A66898();
      v2 = v14;
    }
    result = sub_1C2CFE40C();
    v4 = v2 + 56;
    v5 = -1 << *(_BYTE *)(v2 + 32);
    v6 = result & ~v5;
    v7 = v6 >> 6;
    if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) == 0)
      break;
    v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
    ++*(_QWORD *)(v2 + 16);
    if (!sub_1C2CFE5EC())
      goto LABEL_16;
  }
  v9 = 0;
  v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    v11 = v7 == v10;
    if (v7 == v10)
      v7 = 0;
    v9 |= v11;
    v12 = *(_QWORD *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2A66034()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  _QWORD *v15;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6400);
  v3 = sub_1C2CFE64C();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v15 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v14 = (unint64_t)(v4 + 63) >> 6;
  sub_1C2CFD350();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v14 > 1)
  {
    v8 = *(_QWORD *)(v2 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v14 > 2)
    {
      v8 = *(_QWORD *)(v2 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v14 > 3)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v14 > 4)
          {
            v8 = *(_QWORD *)(v2 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1C2A66514);
              }
              if (v9 >= v14)
                break;
              v8 = v15[v9];
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + (v7 << 6));
        sub_1C2CFEAB4();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v12 = 1 << *(_BYTE *)(v2 + 32);
  if (v12 > 63)
    sub_1C29C65DC(0, (unint64_t)(v12 + 63) >> 6, v15);
  else
    *v15 = -1 << v12;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_1C2A66530()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = v0;
  v2 = sub_1C2CFBEF8();
  v37 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916C0);
  v7 = sub_1C2CFE64C();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v10 = *(_QWORD *)(v6 + 56);
    v36 = (_QWORD *)(v6 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v34 = v0;
    v35 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = sub_1C2CFD350();
    v15 = 0;
    if (!v12)
      goto LABEL_7;
LABEL_6:
    v16 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
    {
      v21 = v6;
      v22 = *(_QWORD *)(v6 + 48);
      v23 = *(_QWORD *)(v37 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 32);
      v24(v5, v22 + v23 * i, v2);
      sub_1C28CB5D8(&qword_1ED7A7200, (void (*)(uint64_t))MEMORY[0x1E0D9F0B8]);
      result = sub_1C2CFDCE0();
      v25 = -1 << *(_BYTE *)(v8 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6))) == 0)
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v25) >> 6;
        while (++v27 != v30 || (v29 & 1) == 0)
        {
          v31 = v27 == v30;
          if (v27 == v30)
            v27 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v13 + 8 * v27);
          if (v32 != -1)
          {
            v28 = __clz(__rbit64(~v32)) + (v27 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v8 + 48) + v28 * v23, v5, v2);
      ++*(_QWORD *)(v8 + 16);
      v6 = v21;
      if (v12)
        goto LABEL_6;
LABEL_7:
      v18 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_38;
      if (v18 >= v35)
        goto LABEL_32;
      v19 = v36[v18];
      ++v15;
      if (!v19)
      {
        v15 = v18 + 1;
        if (v18 + 1 >= v35)
          goto LABEL_32;
        v19 = v36[v15];
        if (!v19)
        {
          v15 = v18 + 2;
          if (v18 + 2 >= v35)
            goto LABEL_32;
          v19 = v36[v15];
          if (!v19)
          {
            v20 = v18 + 3;
            if (v20 >= v35)
            {
LABEL_32:
              swift_release();
              v1 = v34;
              v33 = 1 << *(_BYTE *)(v6 + 32);
              if (v33 > 63)
                sub_1C29C65DC(0, (unint64_t)(v33 + 63) >> 6, v36);
              else
                *v36 = -1 << v33;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v15 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_39;
                if (v15 >= v35)
                  goto LABEL_32;
                v19 = v36[v15];
                ++v20;
                if (v19)
                  goto LABEL_20;
              }
            }
            v15 = v20;
          }
        }
      }
LABEL_20:
      v12 = (v19 - 1) & v19;
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_1C2A66898()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916C8);
  v3 = sub_1C2CFE64C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = sub_1C2CFD350();
    v12 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      result = sub_1C2CFE40C();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        goto LABEL_6;
LABEL_7:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_38;
      if (v15 >= v9)
        goto LABEL_32;
      v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v9)
          goto LABEL_32;
        v16 = v6[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v9)
            goto LABEL_32;
          v16 = v6[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              v1 = v28;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                sub_1C29C65DC(0, (unint64_t)(v27 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v12 >= v9)
                  goto LABEL_32;
                v16 = v6[v12];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_20:
      v8 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C2A66B30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6180);
  v3 = sub_1C2CFE64C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = sub_1C2CFD350();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = *(_QWORD *)(v2 + 48) + 24 * i;
      v18 = *(_QWORD *)v17;
      v31 = *(_OWORD *)(v17 + 8);
      sub_1C2CFEAB4();
      swift_bridgeObjectRetain();
      sub_1C2CFDCF8();
      swift_bridgeObjectRelease();
      v19 = *((id *)&v31 + 1);
      sub_1C2CFE424();

      result = sub_1C2CFEAD8();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = *(_QWORD *)(v4 + 48) + 24 * v23;
      *(_QWORD *)v28 = v18;
      *(_OWORD *)(v28 + 8) = v31;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1C29C65DC(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C2A66E50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9200);
  v3 = sub_1C2CFE64C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = sub_1C2CFD350();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_1C2CFEAB4();
      sub_1C2CFDCF8();
      result = sub_1C2CFEAD8();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1C29C65DC(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C2A67128()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916A8);
  result = sub_1C2CFE64C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = *(_QWORD *)(v2 + 56);
    v30 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & v6;
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    if ((v8 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_1C2CFEAB4();
      sub_1C2CFDCF8();
      result = sub_1C2CFEAD8();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v11 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v14 >= v10)
        goto LABEL_32;
      v15 = v30[v14];
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_32;
        v15 = v30[v5];
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_32;
          v15 = v30[v5];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1C29C65DC(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v5 >= v10)
                  goto LABEL_32;
                v15 = v30[v5];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_1C2A673F0(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1C2CFE40C();
  result = sub_1C2CFE580();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1C2A67470(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  _OWORD *v15;

  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  v15 = (_OWORD *)result;
  if (v6 <= v5 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1C2A66034();
    }
    else
    {
      if (v6 > v5)
      {
        result = (uint64_t)sub_1C2A68300();
        goto LABEL_10;
      }
      sub_1C2A68E00();
    }
    v7 = *v3;
    sub_1C2CFEAB4();
    IntentTopic.hash(into:)();
    result = sub_1C2CFEAD8();
    a2 = result & ~(-1 << *(_BYTE *)(v7 + 32));
    if (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v8 = *v14;
  *(_QWORD *)(*v14 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v9 = (_OWORD *)(*(_QWORD *)(v8 + 48) + (a2 << 6));
  v10 = v15[1];
  *v9 = *v15;
  v9[1] = v10;
  v9[2] = v15[2];
  *(_OWORD *)((char *)v9 + 41) = *(_OWORD *)((char *)v15 + 41);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x1C2A679E4);
  }
  *(_QWORD *)(v8 + 16) = v13;
  return result;
}

uint64_t sub_1C2A67A44(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C2CFBEF8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1C2A66530();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C2A684F8();
      goto LABEL_12;
    }
    sub_1C2A692FC();
  }
  v13 = *v3;
  sub_1C28CB5D8(&qword_1ED7A7200, (void (*)(uint64_t))MEMORY[0x1E0D9F0B8]);
  v14 = sub_1C2CFDCE0();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C28CB5D8(&qword_1EF7916B8, (void (*)(uint64_t))MEMORY[0x1E0D9F0B8]);
      v19 = sub_1C2CFDD28();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C2CFEA30();
  __break(1u);
  return result;
}

void sub_1C2A67C48(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1C2A66898();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C2A68720();
      goto LABEL_14;
    }
    sub_1C2A69620();
  }
  v8 = *v3;
  v9 = sub_1C2CFE40C();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1C28BF798(0, (unint64_t *)&qword_1ED7A6158);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1C2CFE418();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1C2CFEA30();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1C2CFE418();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_1C2A67DCC(uint64_t result, uint64_t a2, void *a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  BOOL v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v9 = result;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
    goto LABEL_17;
  if ((a5 & 1) != 0)
  {
    sub_1C2A66B30();
  }
  else
  {
    if (v11 > v10)
    {
      result = (uint64_t)sub_1C2A688C8();
      goto LABEL_17;
    }
    sub_1C2A69894();
  }
  v12 = *v5;
  sub_1C2CFEAB4();
  swift_bridgeObjectRetain();
  sub_1C2CFDCF8();
  swift_bridgeObjectRelease();
  v13 = a3;
  sub_1C2CFE424();

  result = sub_1C2CFEAD8();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a4 = result & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v15 = ~v14;
    do
    {
      v16 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 24 * a4);
      v17 = (void *)v16[2];
      v18 = *v16 == v9 && v16[1] == a2;
      if (v18 || (result = sub_1C2CFE9DC(), (result & 1) != 0))
      {
        sub_1C28BF798(0, (unint64_t *)&qword_1ED7A6170);
        swift_bridgeObjectRetain();
        v19 = v17;
        v20 = sub_1C2CFE418();

        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_20;
      }
      a4 = (a4 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_17:
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v22 = (uint64_t *)(*(_QWORD *)(v21 + 48) + 24 * a4);
  *v22 = v9;
  v22[1] = a2;
  v22[2] = (uint64_t)a3;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_20:
  result = sub_1C2CFEA30();
  __break(1u);
  return result;
}

uint64_t sub_1C2A67FD0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1C2A66E50();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1C2A68AA0();
      goto LABEL_22;
    }
    sub_1C2A69BA0();
  }
  v11 = *v4;
  sub_1C2CFEAB4();
  sub_1C2CFDCF8();
  result = sub_1C2CFEAD8();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1C2CFE9DC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1C2CFEA30();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1C2CFE9DC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1C2A68168(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1C2A67128();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1C2A68C50();
      goto LABEL_22;
    }
    sub_1C2A69E48();
  }
  v11 = *v4;
  sub_1C2CFEAB4();
  sub_1C2CFDCF8();
  result = sub_1C2CFEAD8();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1C2CFE9DC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1C2CFEA30();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1C2CFE9DC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_1C2A68300()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6400);
  v2 = *v0;
  v3 = sub_1C2CFE640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = *(_QWORD *)(v2 + 48) + (i << 6);
    v21 = *(_BYTE *)(v20 + 1);
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 48);
    v24 = *(_BYTE *)(v20 + 56);
    v25 = *(_QWORD *)(v4 + 48) + (i << 6);
    v26 = *(_OWORD *)(v20 + 16);
    v27 = *(_OWORD *)(v20 + 32);
    *(_BYTE *)v25 = *(_BYTE *)v20;
    *(_BYTE *)(v25 + 1) = v21;
    *(_QWORD *)(v25 + 8) = v22;
    *(_OWORD *)(v25 + 16) = v26;
    *(_OWORD *)(v25 + 32) = v27;
    *(_QWORD *)(v25 + 48) = v23;
    *(_BYTE *)(v25 + 56) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C2A684F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = sub_1C2CFBEF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916C0);
  v7 = *v0;
  v8 = sub_1C2CFE640();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v9;
    return result;
  }
  v27 = v1;
  result = (void *)(v8 + 56);
  v11 = v7 + 56;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = *(_QWORD *)(v7 + 56);
  v17 = -1;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  v18 = v17 & v16;
  v19 = (unint64_t)(v15 + 63) >> 6;
  if ((v17 & v16) == 0)
    goto LABEL_12;
LABEL_11:
  v20 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v20 | (v14 << 6); ; i = __clz(__rbit64(v23)) + (v14 << 6))
  {
    v25 = *(_QWORD *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v25, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v25, v6, v2);
    if (v18)
      goto LABEL_11;
LABEL_12:
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v19)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v19)
        goto LABEL_28;
      v23 = *(_QWORD *)(v11 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v19)
          goto LABEL_28;
        v23 = *(_QWORD *)(v11 + 8 * v14);
        if (!v23)
          break;
      }
    }
LABEL_25:
    v18 = (v23 - 1) & v23;
  }
  v24 = v22 + 3;
  if (v24 >= v19)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v27;
    goto LABEL_30;
  }
  v23 = *(_QWORD *)(v11 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v19)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1C2A68720()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916C8);
  v2 = *v0;
  v3 = sub_1C2CFE640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = v20;
    result = v20;
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C2A688C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6180);
  v2 = *v0;
  v3 = sub_1C2CFE640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = *(_QWORD *)(v2 + 48) + 8 * v20;
    v23 = *(_OWORD *)(v21 + 8);
    v22 = *(_QWORD *)(v4 + 48) + 8 * v20;
    *(_QWORD *)v22 = *(_QWORD *)v21;
    *(_OWORD *)(v22 + 8) = v23;
    swift_bridgeObjectRetain();
    result = *((id *)&v23 + 1);
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C2A68AA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9200);
  v2 = *v0;
  v3 = sub_1C2CFE640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C2A68C50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916A8);
  v2 = *v0;
  v3 = sub_1C2CFE640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C2A68E00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6400);
  v3 = sub_1C2CFE64C();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v4 + 63) >> 6;
  sub_1C2CFD350();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v13 > 1)
  {
    v8 = *(_QWORD *)(v2 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v13 > 2)
    {
      v8 = *(_QWORD *)(v2 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v13 > 3)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v13 > 4)
          {
            v8 = *(_QWORD *)(v2 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1C2A692E0);
              }
              if (v9 >= v13)
                break;
              v8 = *(_QWORD *)(v2 + 56 + 8 * v9);
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + (v7 << 6));
        sub_1C2CFEAB4();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_1C2A692FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;

  v1 = v0;
  v2 = sub_1C2CFBEF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2, v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916C0);
  v8 = sub_1C2CFE64C();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v32 = v0;
  v33 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v34 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  result = sub_1C2CFD350();
  v16 = 0;
  if (!v13)
    goto LABEL_7;
LABEL_6:
  v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(_QWORD *)(v7 + 48) + v22 * i, v2);
    sub_1C28CB5D8(&qword_1ED7A7200, (void (*)(uint64_t))MEMORY[0x1E0D9F0B8]);
    result = sub_1C2CFDCE0();
    v23 = -1 << *(_BYTE *)(v9 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) == 0)
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v28 || (v27 & 1) == 0)
      {
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v14 + 8 * v25);
        if (v30 != -1)
        {
          v26 = __clz(__rbit64(~v30)) + (v25 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v26 * v22, v6, v2);
    ++*(_QWORD *)(v9 + 16);
    if (v13)
      goto LABEL_6;
LABEL_7:
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_36;
    if (v19 >= v34)
      goto LABEL_32;
    v20 = *(_QWORD *)(v33 + 8 * v19);
    ++v16;
    if (!v20)
    {
      v16 = v19 + 1;
      if (v19 + 1 >= v34)
        goto LABEL_32;
      v20 = *(_QWORD *)(v33 + 8 * v16);
      if (!v20)
      {
        v16 = v19 + 2;
        if (v19 + 2 >= v34)
          goto LABEL_32;
        v20 = *(_QWORD *)(v33 + 8 * v16);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v13 = (v20 - 1) & v20;
  }
  v21 = v19 + 3;
  if (v21 >= v34)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v32;
    goto LABEL_34;
  }
  v20 = *(_QWORD *)(v33 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v34)
      goto LABEL_32;
    v20 = *(_QWORD *)(v33 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2A69620()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916C8);
  v3 = sub_1C2CFE64C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = sub_1C2CFD350();
  v12 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = sub_1C2CFE40C();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_36;
    if (v15 >= v9)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_32;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_32;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v8 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v9)
      goto LABEL_32;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2A69894()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  __int128 v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6180);
  v3 = sub_1C2CFE64C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v29 = v0;
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = sub_1C2CFD350();
  v10 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(v2 + 48) + 24 * i;
    v17 = *(_QWORD *)v16;
    v32 = *(_OWORD *)(v16 + 8);
    sub_1C2CFEAB4();
    swift_bridgeObjectRetain_n();
    v18 = *((id *)&v32 + 1);
    sub_1C2CFDCF8();
    swift_bridgeObjectRelease();
    v19 = v18;
    sub_1C2CFE424();

    result = sub_1C2CFEAD8();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v8 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = *(_QWORD *)(v4 + 48) + 24 * v23;
    *(_QWORD *)v28 = v17;
    *(_OWORD *)(v28 + 8) = v32;
    ++*(_QWORD *)(v4 + 16);
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v31)
      goto LABEL_32;
    v14 = *(_QWORD *)(v30 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v31)
        goto LABEL_32;
      v14 = *(_QWORD *)(v30 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v31)
          goto LABEL_32;
        v14 = *(_QWORD *)(v30 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v31)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v29;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v30 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v31)
      goto LABEL_32;
    v14 = *(_QWORD *)(v30 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2A69BA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9200);
  v3 = sub_1C2CFE64C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = sub_1C2CFD350();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_1C2CFEAB4();
    swift_bridgeObjectRetain();
    sub_1C2CFDCF8();
    result = sub_1C2CFEAD8();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2A69E48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916A8);
  result = sub_1C2CFE64C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = v2 + 56;
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v7 + 63) >> 6;
    v10 = result + 56;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v11 | (v5 << 6); ; i = __clz(__rbit64(v14)) + (v5 << 6))
    {
      v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v16;
      v17 = v16[1];
      sub_1C2CFEAB4();
      sub_1C2CFDCF8();
      result = sub_1C2CFEAD8();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_29:
      *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v27 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v22);
      *v27 = v18;
      v27[1] = v17;
      ++*(_QWORD *)(v4 + 16);
      result = swift_bridgeObjectRetain();
      if (v9)
        goto LABEL_6;
LABEL_7:
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_35;
      if (v13 >= v28)
        goto LABEL_31;
      v14 = *(_QWORD *)(v6 + 8 * v13);
      ++v5;
      if (!v14)
      {
        v5 = v13 + 1;
        if (v13 + 1 >= v28)
          goto LABEL_31;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
        {
          v5 = v13 + 2;
          if (v13 + 2 >= v28)
            goto LABEL_31;
          v14 = *(_QWORD *)(v6 + 8 * v5);
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v28)
            {
LABEL_31:
              result = swift_release();
              v1 = v0;
              goto LABEL_33;
            }
            v14 = *(_QWORD *)(v6 + 8 * v15);
            v5 = v15;
            if (!v14)
              break;
          }
        }
      }
LABEL_19:
      v9 = (v14 - 1) & v14;
    }
    while (1)
    {
      v5 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if (v5 >= v28)
        goto LABEL_31;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      ++v15;
      if (v14)
        goto LABEL_19;
    }
LABEL_36:
    __break(1u);
  }
  else
  {
    result = swift_release();
LABEL_33:
    *v1 = v4;
  }
  return result;
}

void sub_1C2A6A0E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = a1 - a2;
  if (__OFSUB__(0, v6))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, v7))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v6 > *(_QWORD *)(v4 + 24) >> 1)
  {
    sub_1C28FCEA0();
    v4 = v8;
  }
  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF78B0C0) - 8);
  v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v11 = *(_QWORD *)(v9 + 72);
  swift_arrayDestroy();
  if (!v6)
    goto LABEL_13;
  v12 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v12, a2))
    goto LABEL_19;
  sub_1C28E2C98(v10 + v11 * a2, v12 - a2);
  v13 = *(_QWORD *)(v4 + 16);
  v14 = __OFADD__(v13, v7);
  v15 = v13 - v6;
  if (!v14)
  {
    *(_QWORD *)(v4 + 16) = v15;
LABEL_13:
    *v2 = v4;
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1C2A6A1F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_44_18();
  if (v6 != v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v5;
  v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v4, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_114_7() || v4 - v9 > *(_QWORD *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_71_13();
    sub_1C28FD5D0();
    v1 = v11;
  }
  v12 = (char *)(v1 + 32 + 16 * v8);
  OUTLINED_FUNCTION_54_20();
  if (!v9)
    goto LABEL_13;
  v13 = *(_QWORD *)(v1 + 16);
  if (__OFSUB__(v13, v3))
    goto LABEL_19;
  sub_1C28E288C((char *)(v1 + 32 + 16 * v3), v13 - v3, v12);
  v14 = *(_QWORD *)(v1 + 16);
  v7 = __OFADD__(v14, v10);
  v15 = v14 - v9;
  if (!v7)
  {
    *(_QWORD *)(v1 + 16) = v15;
LABEL_13:
    *v2 = v1;
    OUTLINED_FUNCTION_11();
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1C2A6A2C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_44_18();
  if (v6 != v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v5;
  v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v4, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_114_7() || v4 - v9 > *(_QWORD *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_71_13();
    sub_1C28FC9A4();
    v1 = v11;
  }
  v12 = (char *)(v1 + 32 + 16 * v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7916B0);
  OUTLINED_FUNCTION_54_20();
  if (!v9)
    goto LABEL_13;
  v13 = *(_QWORD *)(v1 + 16);
  if (__OFSUB__(v13, v3))
    goto LABEL_19;
  sub_1C28E288C((char *)(v1 + 32 + 16 * v3), v13 - v3, v12);
  v14 = *(_QWORD *)(v1 + 16);
  v7 = __OFADD__(v14, v10);
  v15 = v14 - v9;
  if (!v7)
  {
    *(_QWORD *)(v1 + 16) = v15;
LABEL_13:
    *v2 = v1;
    OUTLINED_FUNCTION_11();
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1C2A6A3A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_44_18();
  if (v6 != v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v4, v9))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_114_7() || v4 - v8 > *(_QWORD *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_71_13();
    sub_1C28FD0A0();
    v1 = v10;
  }
  v11 = *(_QWORD *)(type metadata accessor for SnippetManager.SnippetRecord(0) - 8);
  v12 = v1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v13 = *(_QWORD *)(v11 + 72);
  OUTLINED_FUNCTION_54_20();
  if (!v8)
    goto LABEL_13;
  v14 = *(_QWORD *)(v1 + 16);
  if (__OFSUB__(v14, v3))
    goto LABEL_19;
  sub_1C28E2BF0(v12 + v13 * v3, v14 - v3);
  v15 = *(_QWORD *)(v1 + 16);
  v7 = __OFADD__(v15, v9);
  v16 = v15 - v8;
  if (!v7)
  {
    *(_QWORD *)(v1 + 16) = v16;
LABEL_13:
    *v2 = v1;
    OUTLINED_FUNCTION_11();
    return;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_1C2A6A488(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C2CFDD58();

  return v3;
}

id sub_1C2A6A4E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C2A623F4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C2A6A504(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FlowDelegatePluginLoader()
{
  return objc_opt_self();
}

uint64_t method lookup function for FlowDelegatePluginLoader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.hasFlowPluginFor(parse:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.makeFlow(parse:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.makeFlow(rcId:parse:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.loadFlow(rcId:parse:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.findFlowPlugin(intentTopic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.makeFlowFrame(parse:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.loadFlowPlugin(bundleIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.loadAndWarmBundle(bundleIdentifier:refId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

void destroy for FlowDelegatePluginLoader.KeyAndBundle(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

void _s11SiriKitFlow24FlowDelegatePluginLoaderC12KeyAndBundleVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  OUTLINED_FUNCTION_1_0();
}

_QWORD *assignWithCopy for FlowDelegatePluginLoader.KeyAndBundle(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for FlowDelegatePluginLoader.KeyAndBundle(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for FlowDelegatePluginLoader.KeyAndBundle()
{
  return &type metadata for FlowDelegatePluginLoader.KeyAndBundle;
}

unint64_t sub_1C2A6A6F4()
{
  unint64_t result;

  result = qword_1ED7A4948;
  if (!qword_1ED7A4948)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0AF70, &type metadata for FlowDelegatePluginLoader.KeyAndBundle);
    atomic_store(result, (unint64_t *)&qword_1ED7A4948);
  }
  return result;
}

uint64_t sub_1C2A6A730(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C2A6A778(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2A6A7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_73() - 8) + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v3 = sub_1C2CFCD44();
      goto LABEL_7;
    case 1u:
      v4 = sub_1C2CFCD44();
      OUTLINED_FUNCTION_33_1(v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      swift_release();
      return swift_deallocObject();
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 3u:
      swift_unknownObjectRelease();
      return swift_deallocObject();
    case 4u:
      v3 = sub_1C2CFBD9C();
LABEL_7:
      OUTLINED_FUNCTION_33_1(v3);
      return swift_deallocObject();
    case 5u:

      return swift_deallocObject();
    case 6u:
      v5 = sub_1C2CFBFD0();
      OUTLINED_FUNCTION_33_1(v5);
      type metadata accessor for USOParse();
      v6 = OUTLINED_FUNCTION_61_11();
      if (!OUTLINED_FUNCTION_60_1(v6))
        OUTLINED_FUNCTION_53(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8));
      goto LABEL_15;
    case 7u:
      v7 = sub_1C2CFBFD0();
      OUTLINED_FUNCTION_33_1(v7);
      type metadata accessor for USOParse();
      v8 = OUTLINED_FUNCTION_61_11();
      if (!OUTLINED_FUNCTION_60_1(v8))
        OUTLINED_FUNCTION_53(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8));
      OUTLINED_FUNCTION_16_2();
      type metadata accessor for LinkParse();
      OUTLINED_FUNCTION_16_2();
      OUTLINED_FUNCTION_16_2();
LABEL_15:
      swift_bridgeObjectRelease();
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

uint64_t sub_1C2A6A954@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_73() - 8) + 80);
  return sub_1C2A62D4C((_QWORD *)(v1 + 16), v1 + ((v3 + 56) & ~v3), a1);
}

uint64_t sub_1C2A6A990()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16) != 1)
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A6A9BC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2A6A9F0()
{
  uint64_t v0;

  return sub_1C2A64EB0(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD *__return_ptr))(v0 + 24));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C2CFD350();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1C2A6AA14(uint64_t result)
{
  if (result != 1)
    return sub_1C2CFD350();
  return result;
}

uint64_t sub_1C2A6AA24(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_1C2A6AA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1C2A6AA7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2A6A4E8(a1, a2);
}

uint64_t OUTLINED_FUNCTION_21_31()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 432);
}

void OUTLINED_FUNCTION_25_28(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1C28C9F68(*(_QWORD *)(v2 - 368), a2);
}

uint64_t OUTLINED_FUNCTION_29_22()
{
  return sub_1C2CFD7C4();
}

double OUTLINED_FUNCTION_38_25@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void OUTLINED_FUNCTION_40_17(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C28C9F68(a1, v1);
}

uint64_t OUTLINED_FUNCTION_41_19()
{
  return sub_1C2CFEAB4();
}

uint64_t OUTLINED_FUNCTION_45_16(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1C28C1780(v2, v1, a1);
}

void OUTLINED_FUNCTION_46_14()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_51_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  *(_QWORD *)(v15 + 32) = a14;
  *(_QWORD *)(v15 + 40) = a15;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_54_20()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_55_12()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_56_14()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 168);
}

void OUTLINED_FUNCTION_57_12()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 6841202;
  *(_QWORD *)(v0 + 24) = 0xE300000000000000;
}

uint64_t OUTLINED_FUNCTION_58_17@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v2);
  v4 = v3[1];
  *v1 = *v3;
  v1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_61_11()
{
  return sub_1C2CFBF28();
}

uint64_t OUTLINED_FUNCTION_64_11()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_65_11()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_74_9()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_1C28BB120(v0, v1, (uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_75_12()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_78_10(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1C28BB37C((uint64_t)&a9, a2);
}

void OUTLINED_FUNCTION_85_10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_1C28C6BEC(a1, *(_QWORD *)(a2 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_87_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  unint64_t v9;
  va_list va;

  va_start(va, a9);
  return sub_1C28BB120(a8, v9, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_88_9()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_89_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  *(_QWORD *)(v1 + 80) = 0xE700000000000000;
  return sub_1C2CFD7F4();
}

uint64_t OUTLINED_FUNCTION_90_8()
{
  return sub_1C2CFDD58();
}

uint64_t OUTLINED_FUNCTION_92_13()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_94_10@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

void OUTLINED_FUNCTION_95_10(uint64_t a1)
{
  sub_1C2A642B4(a1);
}

void OUTLINED_FUNCTION_96_8()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_97_9()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_98_7(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1C28C9F68(*(_QWORD *)(v2 - 400), a2);
}

void OUTLINED_FUNCTION_104_7()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_108_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_114_7()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_120_6@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FlowOperationIgnored.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*FlowOperationAborted.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*InvalidOperation.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FlowUnhandledEvent.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowUnhandledEvent.description.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FlowUnhandledEvent.description.modify())(_QWORD)
{
  return nullsub_1;
}

SiriKitFlow::FlowUnhandledEvent __swiftcall FlowUnhandledEvent.init(_:)(SiriKitFlow::FlowUnhandledEvent result)
{
  SiriKitFlow::FlowUnhandledEvent *v1;

  *v1 = result;
  return result;
}

uint64_t (*FlowAbort.description.modify())(_QWORD)
{
  return nullsub_1;
}

void type metadata accessor for FlowOperationIgnored()
{
  OUTLINED_FUNCTION_22_2();
}

void type metadata accessor for FlowOperationAborted()
{
  OUTLINED_FUNCTION_22_2();
}

void type metadata accessor for InvalidOperation()
{
  OUTLINED_FUNCTION_22_2();
}

void type metadata accessor for FlowUnhandledEvent()
{
  OUTLINED_FUNCTION_22_2();
}

void type metadata accessor for FlowAbort()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t *assignWithCopy for FlowExecutionEnvironment(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  __swift_assign_boxed_opaque_existential_1(a1 + 10, a2 + 10);
  return a1;
}

void *__swift_memcpy120_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for FlowExecutionEnvironment(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowExecutionEnvironment(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowExecutionEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowExecutionEnvironment()
{
  return &type metadata for FlowExecutionEnvironment;
}

uint64_t FlowOutput.__allocating_init(atoms:flowActivity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  FlowOutput.init(atoms:flowActivity:)(a1, a2);
  return v4;
}

uint64_t FlowOutput.atoms.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1C2A6AF84(uint64_t a1)
{
  _BYTE v1[40];

  sub_1C2A6B0A4(a1, (uint64_t)v1);
  sub_1C2A6AFFC((uint64_t)v1);
}

void sub_1C2A6AFBC(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  sub_1C2A6B0A4(v1 + 24, a1);
  OUTLINED_FUNCTION_84_3();
}

void sub_1C2A6AFFC(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_28_1();
  sub_1C28DF608(a1, v1 + 24);
  swift_endAccess();
  OUTLINED_FUNCTION_84_3();
}

uint64_t FlowOutput.init(atoms:flowActivity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = 0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_QWORD *)(v2 + 16) = a1;
  OUTLINED_FUNCTION_28_1();
  sub_1C28DF608(a2, v2 + 24);
  swift_endAccess();
  return v2;
}

uint64_t sub_1C2A6B0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FlowOutput.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C29F3E04(v0 + 24);
  return v0;
}

uint64_t FlowOutput.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C29F3E04(v0 + 24);
  return swift_deallocClassInstance();
}

void sub_1C2A6B13C(uint64_t a1@<X8>)
{
  sub_1C2A6AFBC(a1);
}

void sub_1C2A6B15C(uint64_t a1@<X8>)
{
  sub_1C2A6AFBC(a1);
}

uint64_t type metadata accessor for FlowOutput()
{
  return objc_opt_self();
}

uint64_t method lookup function for FlowOutput()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlowOutput.flowActivity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of FlowOutput.__allocating_init(atoms:flowActivity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

char *initializeBufferWithCopyOfBuffer for FlowOutputAtom(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  void *v17;
  id v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v16[(v5 + 16) & ~(unint64_t)v5];
    sub_1C2CFD350();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *(_BYTE *)a2;
      v6 = a2[2];
      *((_QWORD *)a1 + 1) = a2[1];
      *((_QWORD *)a1 + 2) = v6;
      v7 = a2[4];
      *((_QWORD *)a1 + 3) = a2[3];
      *((_QWORD *)a1 + 4) = v7;
      v8 = a2[6];
      *((_QWORD *)a1 + 5) = a2[5];
      *((_QWORD *)a1 + 6) = v8;
      v10 = a2[7];
      v9 = a2[8];
      a1[72] = *((_BYTE *)a2 + 72);
      *((_QWORD *)a1 + 7) = v10;
      *((_QWORD *)a1 + 8) = v9;
      v11 = a2[11];
      *((_QWORD *)a1 + 10) = a2[10];
      *((_QWORD *)a1 + 11) = v11;
      v31 = a2[13];
      *((_QWORD *)a1 + 12) = a2[12];
      *((_QWORD *)a1 + 13) = v31;
      v12 = a2[15];
      *((_QWORD *)a1 + 14) = a2[14];
      *((_QWORD *)a1 + 15) = v12;
      v33 = a2[16];
      *((_QWORD *)a1 + 16) = v33;
      a1[136] = *((_BYTE *)a2 + 136);
      v32 = a2[18];
      v34 = a2[19];
      *((_QWORD *)a1 + 18) = v32;
      *((_QWORD *)a1 + 19) = v34;
      v36 = a2[21];
      *((_QWORD *)a1 + 20) = a2[20];
      *((_QWORD *)a1 + 21) = v36;
      a1[176] = *((_BYTE *)a2 + 176);
      v13 = a2[24];
      *((_QWORD *)a1 + 23) = a2[23];
      *((_QWORD *)a1 + 24) = v13;
      a1[200] = *((_BYTE *)a2 + 200);
      v35 = a2[27];
      *((_QWORD *)a1 + 26) = a2[26];
      *((_QWORD *)a1 + 27) = v35;
      v37 = a2[29];
      *((_QWORD *)a1 + 28) = a2[28];
      *((_QWORD *)a1 + 29) = v37;
      *((_QWORD *)a1 + 30) = a2[30];
      v38 = a2[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = v33;
      v15 = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v38)
      {
        *((_QWORD *)a1 + 31) = a2[31];
        *((_QWORD *)a1 + 32) = v38;
        *((_QWORD *)a1 + 33) = a2[33];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
        *((_QWORD *)a1 + 33) = a2[33];
      }
      v19 = a2[35];
      *((_QWORD *)a1 + 34) = a2[34];
      *((_QWORD *)a1 + 35) = v19;
      v20 = (int *)type metadata accessor for NLContextUpdate();
      v21 = v20[32];
      v22 = &a1[v21];
      v23 = (char *)a2 + v21;
      v24 = sub_1C2CFD710();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A99B0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      a1[v20[33]] = *((_BYTE *)a2 + v20[33]);
      a1[v20[34]] = *((_BYTE *)a2 + v20[34]);
      v26 = v20[35];
      v27 = &a1[v26];
      v28 = (char **)((char *)a2 + v26);
      v29 = v28[1];
      *(_QWORD *)v27 = *v28;
      *((_QWORD *)v27 + 1) = v29;
      swift_bridgeObjectRetain();
    }
    else
    {
      v17 = *a2;
      *(_QWORD *)a1 = *a2;
      v18 = v17;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for FlowOutputAtom(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 256))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v2 = a1 + *(int *)(type metadata accessor for NLContextUpdate() + 128);
    v3 = sub_1C2CFD710();
    if (!__swift_getEnumTagSinglePayload(v2, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {

  }
}

uint64_t initializeWithCopy for FlowOutputAtom(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v4 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v4;
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    v7 = *(_QWORD *)(a2 + 64);
    v8 = *(_QWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v7;
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    v10 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v10;
    v11 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v11;
    v30 = *(void **)(a2 + 128);
    *(_QWORD *)(a1 + 128) = v30;
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    v29 = *(void **)(a2 + 144);
    v31 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = v29;
    *(_QWORD *)(a1 + 152) = v31;
    v33 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v33;
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v12 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v12;
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    v32 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v32;
    v34 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = v34;
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v35 = *(_QWORD *)(a2 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = v30;
    v14 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35)
    {
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = v35;
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    }
    v17 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = v17;
    v18 = (int *)type metadata accessor for NLContextUpdate();
    v19 = v18[32];
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    v22 = sub_1C2CFD710();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A99B0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    *(_BYTE *)(a1 + v18[33]) = *(_BYTE *)(a2 + v18[33]);
    *(_BYTE *)(a1 + v18[34]) = *(_BYTE *)(a2 + v18[34]);
    v24 = v18[35];
    v25 = (_QWORD *)(a1 + v24);
    v26 = (_QWORD *)(a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v16 = v15;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FlowOutputAtom(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v20;
  void *v21;
  uint64_t v22;

  if (a1 != a2)
  {
    sub_1C2A6BCF0(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v4 = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v4;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      v21 = *(void **)(a2 + 128);
      *(_QWORD *)(a1 + 128) = v21;
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      v20 = *(void **)(a2 + 144);
      *(_QWORD *)(a1 + 144) = v20;
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      v22 = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5 = v21;
      v6 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22)
      {
        *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
        *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
        *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v9 = *(_OWORD *)(a2 + 248);
        *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
        *(_OWORD *)(a1 + 248) = v9;
      }
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      v10 = (int *)type metadata accessor for NLContextUpdate();
      v11 = v10[32];
      v12 = (void *)(a1 + v11);
      v13 = (const void *)(a2 + v11);
      v14 = sub_1C2CFD710();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A99B0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
      *(_BYTE *)(a1 + v10[33]) = *(_BYTE *)(a2 + v10[33]);
      *(_BYTE *)(a1 + v10[34]) = *(_BYTE *)(a2 + v10[34]);
      v16 = v10[35];
      v17 = (_QWORD *)(a1 + v16);
      v18 = (_QWORD *)(a2 + v16);
      *v17 = *v18;
      v17[1] = v18[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      v7 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C2A6BCF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FlowOutputAtom();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FlowOutputAtom()
{
  uint64_t result;

  result = qword_1EF7917A0;
  if (!qword_1EF7917A0)
    return swift_getSingletonMetadata();
  return result;
}

char *initializeWithTake for FlowOutputAtom(char *a1, char *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
    v6 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v6;
    *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
    a1[72] = a2[72];
    *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
    *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
    *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
    a1[136] = a2[136];
    v7 = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    *((_OWORD *)a1 + 10) = v7;
    a1[176] = a2[176];
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    a1[200] = a2[200];
    v8 = *((_OWORD *)a2 + 14);
    *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
    *((_OWORD *)a1 + 14) = v8;
    *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
    *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *((_OWORD *)a1 + 17) = *((_OWORD *)a2 + 17);
    v9 = (int *)type metadata accessor for NLContextUpdate();
    v10 = v9[32];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = sub_1C2CFD710();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A99B0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    a1[v9[33]] = a2[v9[33]];
    a1[v9[34]] = a2[v9[34]];
    *(_OWORD *)&a1[v9[35]] = *(_OWORD *)&a2[v9[35]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FlowOutputAtom(char *a1, char *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1C2A6BCF0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      v6 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v6;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
      *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
      *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
      a1[136] = a2[136];
      v7 = *((_OWORD *)a2 + 10);
      *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
      *((_OWORD *)a1 + 10) = v7;
      a1[176] = a2[176];
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      a1[200] = a2[200];
      v8 = *((_OWORD *)a2 + 14);
      *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
      *((_OWORD *)a1 + 14) = v8;
      *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
      *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *((_OWORD *)a1 + 17) = *((_OWORD *)a2 + 17);
      v9 = (int *)type metadata accessor for NLContextUpdate();
      v10 = v9[32];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = sub_1C2CFD710();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A99B0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
      a1[v9[33]] = a2[v9[33]];
      a1[v9[34]] = a2[v9[34]];
      *(_OWORD *)&a1[v9[35]] = *(_OWORD *)&a2[v9[35]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C2A6C114()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NLContextUpdate();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C2A6C188(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[40];

  sub_1C28B9A04(a1, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  type metadata accessor for FlowOutput();
  v1 = swift_dynamicCast();
  if ((_DWORD)v1)
    swift_release();
  return v1;
}

uint64_t sub_1C2A6C1F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[19] = a1;
  v2[20] = v1;
  type metadata accessor for NLContextUpdate();
  v2[21] = swift_task_alloc();
  v3 = type metadata accessor for FlowOutputAtom();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = OUTLINED_FUNCTION_78();
  v2[25] = OUTLINED_FUNCTION_78();
  v2[26] = OUTLINED_FUNCTION_78();
  return swift_task_switch();
}

uint64_t sub_1C2A6C284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  id v38;
  _QWORD *v40;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1C28B9A04(*(_QWORD *)(v10 + 152), v10 + 96);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  type metadata accessor for FlowOutput();
  if (!swift_dynamicCast())
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v31 = sub_1C2CFD878();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED7AA1B0);
    v32 = (void *)sub_1C2CFD86C();
    v33 = sub_1C2CFE2B0();
    if (OUTLINED_FUNCTION_20_0(v33))
    {
      *(_WORD *)OUTLINED_FUNCTION_23_2() = 0;
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v34, v35, "Output is not a FlowOutput! handle() should have never been called.");
      OUTLINED_FUNCTION_23_10();
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A72C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
    *(_QWORD *)(inited + 32) = 0x6567617373654DLL;
    *(_QWORD *)(inited + 40) = 0xE700000000000000;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 0xD000000000000078;
    *(_QWORD *)(inited + 56) = 0x80000001C2D2FB60;
    v37 = sub_1C2CFDC8C();
    v38 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    sub_1C2C012F4(0xD000000000000016, 0x80000001C2D27CA0, 1002, v37);
    swift_willThrow();
    OUTLINED_FUNCTION_1_38();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_32_4();
    __asm { BR              X0 }
  }
  v11 = *(_QWORD *)(v10 + 136);
  *(_QWORD *)(v10 + 216) = v11;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v12 = sub_1C2CFD878();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED7AA1B0);
  v13 = (void *)sub_1C2CFD86C();
  v14 = sub_1C2CFE2B0();
  if (OUTLINED_FUNCTION_20_0(v14))
  {
    *(_WORD *)OUTLINED_FUNCTION_23_2() = 0;
    OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v15, v16, "Warning: Deprecated FlowOutput being used. Domains should use AceOutput instead.");
    OUTLINED_FUNCTION_23_10();
  }

  *(_QWORD *)(v10 + 144) = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v10 + 224) = v17;
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v10 + 232) = v18;
  if (v18)
  {
    v19 = *(_QWORD *)(v10 + 184);
    v20 = *(_DWORD *)(v19 + 80);
    *(_DWORD *)(v10 + 296) = v20;
    v21 = *(_QWORD *)(v19 + 72);
    *(_QWORD *)(v10 + 240) = v21;
    v22 = swift_bridgeObjectRetain();
    v23 = 0;
    while (1)
    {
      *(_QWORD *)(v10 + 248) = v23;
      sub_1C2A0B494(v22 + ((v20 + 32) & ~(unint64_t)v20) + v21 * v23, *(_QWORD *)(v10 + 208));
      OUTLINED_FUNCTION_3_42();
      v24 = OUTLINED_FUNCTION_2_45();
      v25 = *(_QWORD *)(v10 + 200);
      if (v24 == 1)
      {
        sub_1C2A6CA94(v25, *(_QWORD *)(v10 + 168));
        OUTLINED_FUNCTION_23_33();
        OUTLINED_FUNCTION_14_41();
        v40 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v10 + 256) = v40;
        OUTLINED_FUNCTION_8_43(v40, (uint64_t)sub_1C2A6C680);
        OUTLINED_FUNCTION_32_4();
        __asm { BR              X3 }
      }
      OUTLINED_FUNCTION_4_45(v25);
      OUTLINED_FUNCTION_3_42();
      if (OUTLINED_FUNCTION_2_45() == 1)
      {
        OUTLINED_FUNCTION_4_45(*(_QWORD *)(v10 + 208));
        v26 = (uint64_t *)(v10 + 192);
      }
      else
      {
        v27 = OUTLINED_FUNCTION_20_39();
        MEMORY[0x1C3BC8A44]();
        OUTLINED_FUNCTION_19_32();
        if (v28)
          OUTLINED_FUNCTION_6_40();
        OUTLINED_FUNCTION_22_31();
        sub_1C2CFDFC8();

        v26 = (uint64_t *)(v10 + 208);
      }
      v29 = *(_QWORD *)(v10 + 232);
      v30 = *(_QWORD *)(v10 + 248) + 1;
      OUTLINED_FUNCTION_4_45(*v26);
      if (v30 == v29)
        break;
      v21 = *(_QWORD *)(v10 + 240);
      v23 = *(_QWORD *)(v10 + 248) + 1;
      LOBYTE(v20) = *(_BYTE *)(v10 + 296);
      v22 = *(_QWORD *)(v10 + 224);
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_12_41();
  v42 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 280) = v42;
  OUTLINED_FUNCTION_7_41(v42, (uint64_t)sub_1C2A6C8AC);
  OUTLINED_FUNCTION_32_4();
  return AceServiceInvokerAsync.submitAllSerial(_:)(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10);
}

uint64_t sub_1C2A6C680()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A6C6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);

  sub_1C29E8F24(*(_QWORD *)(v10 + 168), (uint64_t (*)(_QWORD))type metadata accessor for NLContextUpdate);
  v11 = *(_QWORD *)(v10 + 232);
  v12 = *(_QWORD *)(v10 + 248) + 1;
  sub_1C29E8F24(*(_QWORD *)(v10 + 208), (uint64_t (*)(_QWORD))type metadata accessor for FlowOutputAtom);
  if (v12 == v11)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_41();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v10 + 280) = v13;
    v14 = OUTLINED_FUNCTION_7_41(v13, (uint64_t)sub_1C2A6C8AC);
    return AceServiceInvokerAsync.submitAllSerial(_:)(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10);
  }
  else
  {
    while (1)
    {
      v23 = *(_QWORD *)(v10 + 240);
      v24 = *(_QWORD *)(v10 + 248) + 1;
      *(_QWORD *)(v10 + 248) = v24;
      sub_1C2A0B494(*(_QWORD *)(v10 + 224)+ ((*(unsigned __int8 *)(v10 + 296) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 296))+ v23 * v24, *(_QWORD *)(v10 + 208));
      OUTLINED_FUNCTION_3_42();
      if (OUTLINED_FUNCTION_2_45() == 1)
        break;
      OUTLINED_FUNCTION_4_45(*(_QWORD *)(v10 + 200));
      OUTLINED_FUNCTION_3_42();
      if (OUTLINED_FUNCTION_2_45() == 1)
      {
        OUTLINED_FUNCTION_4_45(*(_QWORD *)(v10 + 208));
        v25 = (uint64_t *)(v10 + 192);
      }
      else
      {
        v26 = OUTLINED_FUNCTION_20_39();
        MEMORY[0x1C3BC8A44]();
        OUTLINED_FUNCTION_19_32();
        if (v27)
          OUTLINED_FUNCTION_6_40();
        OUTLINED_FUNCTION_22_31();
        sub_1C2CFDFC8();

        v25 = (uint64_t *)(v10 + 208);
      }
      v28 = *(_QWORD *)(v10 + 232);
      v29 = *(_QWORD *)(v10 + 248) + 1;
      OUTLINED_FUNCTION_4_45(*v25);
      if (v29 == v28)
        goto LABEL_2;
    }
    sub_1C2A6CA94(*(_QWORD *)(v10 + 200), *(_QWORD *)(v10 + 168));
    OUTLINED_FUNCTION_23_33();
    OUTLINED_FUNCTION_14_41();
    v33 = v30;
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v10 + 256) = v31;
    v32 = OUTLINED_FUNCTION_8_43(v31, (uint64_t)sub_1C2A6C680);
    return v33(v32);
  }
}

uint64_t sub_1C2A6C8AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A6C910()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A6C95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 168);
  swift_release();
  sub_1C29E8F24(v2, (uint64_t (*)(_QWORD))type metadata accessor for NLContextUpdate);
  sub_1C29E8F24(v1, (uint64_t (*)(_QWORD))type metadata accessor for FlowOutputAtom);
  OUTLINED_FUNCTION_1_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A6C9C0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for FlowOutputHandler()
{
  return objc_opt_self();
}

uint64_t sub_1C2A6CA2C(uint64_t a1)
{
  return sub_1C2A6C188(a1) & 1;
}

uint64_t sub_1C2A6CA44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28C33A0;
  return sub_1C2A6C1F4(a1);
}

uint64_t sub_1C2A6CA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NLContextUpdate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_38()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_2_45()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_3_42()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C2A0B494(v0, v1);
}

uint64_t OUTLINED_FUNCTION_4_45(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  return sub_1C29E8F24(a1, v1);
}

uint64_t OUTLINED_FUNCTION_6_40()
{
  return sub_1C2CFDFEC();
}

uint64_t OUTLINED_FUNCTION_7_41@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_8_43@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 168);
}

_QWORD *OUTLINED_FUNCTION_12_41()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = v0;
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v1 + 160) + 32), *(_QWORD *)(*(_QWORD *)(v1 + 160) + 56));
}

uint64_t OUTLINED_FUNCTION_14_41()
{
  uint64_t v0;

  return *(unsigned int *)(*(_QWORD *)(v0 + 8) + 4);
}

id OUTLINED_FUNCTION_20_39()
{
  id **v0;

  return **v0;
}

uint64_t OUTLINED_FUNCTION_22_31()
{
  return sub_1C2CFE040();
}

uint64_t OUTLINED_FUNCTION_23_33()
{
  return swift_getObjectType();
}

uint64_t static FlowOutputHelper.makeFlowOutput(atoms:flowActivity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v4[40];

  sub_1C28C6BEC(a2, (uint64_t)v4, (uint64_t *)&unk_1ED7A8750);
  type metadata accessor for FlowOutput();
  OUTLINED_FUNCTION_1_6();
  v2 = swift_bridgeObjectRetain();
  return FlowOutput.init(atoms:flowActivity:)(v2, (uint64_t)v4);
}

uint64_t sub_1C2A6CC38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78B740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void _s11SiriKitFlow0C12OutputHelperO04makecD08addViews15nlContextUpdate12flowActivityAA0cD0CSo07SAUIAddH0C_AA09NLContextK0VSgAA0cM0_pSgtFZ_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _BYTE v51[40];

  v46 = a3;
  v45[0] = a2;
  v49 = a1;
  v3 = type metadata accessor for FlowOutputAtom();
  v48 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3, v4);
  v50 = (uint64_t)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5, v7);
  v47 = (uint64_t)v45 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78B740);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v9, v11);
  v14 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)v45 - v16;
  v18 = OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v19, v20);
  OUTLINED_FUNCTION_10();
  v23 = v22 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v24, v25);
  OUTLINED_FUNCTION_10();
  v28 = v27 - v26;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF7917E8);
  v29 = *(_QWORD *)(v10 + 72);
  v30 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C2D00CD0;
  v45[1] = v31;
  v32 = v31 + v30;
  v33 = v3;
  sub_1C28C6BEC(v45[0], v28, &qword_1ED7A7A10);
  v34 = 1;
  if (__swift_getEnumTagSinglePayload(v28, 1, v18) != 1)
  {
    sub_1C28C5410(v28, v23, (uint64_t (*)(_QWORD))type metadata accessor for NLContextUpdate);
    sub_1C28FBA24(v23, v32);
    swift_storeEnumTagMultiPayload();
    sub_1C293D4B0(v23);
    v34 = 0;
  }
  OUTLINED_FUNCTION_66_3(v32, v34);
  v35 = v49;
  *(_QWORD *)(v32 + v29) = v49;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_66_3(v32 + v29, 0);
  v36 = v35;
  v37 = 0;
  v38 = 0;
  v39 = MEMORY[0x1E0DEE9D8];
  v49 = (void *)v33;
  do
  {
    v40 = v37;
    sub_1C28C6BEC(v32 + v38 * v29, (uint64_t)v17, &qword_1EF78B740);
    sub_1C2A6CC38((uint64_t)v17, (uint64_t)v14);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v33) == 1)
    {
      sub_1C28B9D6C((uint64_t)v14, &qword_1EF78B740);
    }
    else
    {
      v41 = v47;
      OUTLINED_FUNCTION_23_34((uint64_t)v14, v47);
      OUTLINED_FUNCTION_23_34(v41, v50);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_30_24();
        v39 = v43;
      }
      v42 = *(_QWORD *)(v39 + 16);
      if (v42 >= *(_QWORD *)(v39 + 24) >> 1)
      {
        OUTLINED_FUNCTION_30_24();
        v39 = v44;
      }
      *(_QWORD *)(v39 + 16) = v42 + 1;
      OUTLINED_FUNCTION_23_34(v50, v39+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v42);
      v33 = (uint64_t)v49;
    }
    v37 = 1;
    v38 = 1;
  }
  while ((v40 & 1) == 0);
  swift_setDeallocating();
  sub_1C28BA78C();
  sub_1C28C6BEC(v46, (uint64_t)v51, (uint64_t *)&unk_1ED7A8750);
  type metadata accessor for FlowOutput();
  swift_allocObject();
  FlowOutput.init(atoms:flowActivity:)(v39, (uint64_t)v51);
  OUTLINED_FUNCTION_1();
}

void static FlowOutputHelper.makeCancellationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:canUseServerTTS:flowActivity:)(uint64_t a1, _QWORD *a2, char a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_10();
  v9 = v8 - v7;
  v10 = sub_1C2A6D210(a2);
  if ((v10 & 1) != 0)
  {
    if (a4 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1C2CFE820();
      v10 = swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v11)
    {
      OUTLINED_FUNCTION_23_4(v10, &qword_1ED7A7278);
      v12 = OUTLINED_FUNCTION_1_39();
      v14 = OUTLINED_FUNCTION_12_42(v12, v13);
      sub_1C2A6D578(v14, a4);
      v15 = OUTLINED_FUNCTION_7_42();
      v16 = (void *)OUTLINED_FUNCTION_23_4(v15, &qword_1EF79DD60);
      v17 = sub_1C2CFDD58();
      OUTLINED_FUNCTION_8_44(v17, v18, v19, MEMORY[0x1E0DEE9D8]);
      OUTLINED_FUNCTION_7_5();
      OUTLINED_FUNCTION_254();
    }
    else
    {
      OUTLINED_FUNCTION_23_4(v10, &qword_1ED7A7268);
      v23 = (uint64_t *)OUTLINED_FUNCTION_1_39();
      v16 = OUTLINED_FUNCTION_6_41(v23, v24, 0);
    }
    v25 = OUTLINED_FUNCTION_27_0();
    v26 = OUTLINED_FUNCTION_16_35(v25);
    static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(v26);
  }
  else
  {
    OUTLINED_FUNCTION_17_31();
    v20 = OUTLINED_FUNCTION_11_37();
    OUTLINED_FUNCTION_28_24(v20, a3);
    v16 = (void *)sub_1C2CE1BC8();
    v21 = OUTLINED_FUNCTION_27_0();
    v22 = OUTLINED_FUNCTION_16_35(v21);
    static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(v22);
    swift_release();
  }

  sub_1C28B9D6C(v9, &qword_1ED7A7A10);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A6D210(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8AC8);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v30[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 184))(v6, v7);
  v8 = sub_1C2CFD380();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v8);
  sub_1C28B9D6C((uint64_t)v5, &qword_1ED7A8AC8);
  if (EnumTagSinglePayload != 1)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v13 = sub_1C2CFD878();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED7AA1B0);
    v14 = sub_1C2CFD86C();
    v15 = sub_1C2CFE2A4();
    if (!os_log_type_enabled(v14, v15))
    {
      v17 = 0;
      goto LABEL_17;
    }
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1C28B6000, v14, v15, "FlowOutputHelper found a setting for personalDomainsAuthenticationMode. Assuming companion mode and not generating Modes compatible output.", v16, 2u);
    v17 = 0;
    goto LABEL_15;
  }
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
  sub_1C28B9A04((uint64_t)a1, (uint64_t)v36);
  if ((v12 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    sub_1C28B9A04((uint64_t)a1, (uint64_t)v33);
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    sub_1C28B9A04((uint64_t)a1, (uint64_t)v30);
LABEL_10:
    v17 = 1;
    goto LABEL_11;
  }
  v18 = v37;
  v19 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 56))(v18, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  sub_1C28B9A04((uint64_t)a1, (uint64_t)v33);
  if ((v20 & 1) != 0)
    goto LABEL_9;
  v24 = v34;
  v25 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 64))(v24, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  sub_1C28B9A04((uint64_t)a1, (uint64_t)v30);
  if ((v26 & 1) != 0)
    goto LABEL_10;
  v27 = v31;
  v28 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 32))(v27, v28);
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v21 = sub_1C2CFD878();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED7AA1B0);
  v14 = sub_1C2CFD86C();
  v22 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v14, v22))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 67109120;
    LODWORD(v36[0]) = v17 & 1;
    sub_1C2CFE4D8();
    _os_log_impl(&dword_1C28B6000, v14, v22, "FlowOutputHelper will use Modes compatible output: %{BOOL}d", v16, 8u);
LABEL_15:
    MEMORY[0x1C3BC9DE8](v16, -1, -1);
  }
LABEL_17:

  return v17 & 1;
}

void sub_1C2A6D578(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  unint64_t v28;

  v28 = a2 >> 62;
  if (a2 >> 62)
  {
LABEL_48:
    swift_bridgeObjectRetain();
    v4 = sub_1C2CFE820();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      while (1)
      {
        if ((a2 & 0xC000000000000001) != 0)
          v6 = (id)MEMORY[0x1C3BC9170](v5 - 4, a2);
        else
          v6 = *(id *)(a2 + 8 * v5);
        v7 = v6;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        v9 = objc_msgSend(v6, sel_dialog);

        if (v9)
          break;
        ++v5;
        if (v8 == v4)
          goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      if (qword_1ED7AA040 != -1)
        goto LABEL_55;
      goto LABEL_20;
    }
  }
  else
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1C2CFE820();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v28)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1C2CFE820();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = &unk_1C2D00000;
  if (v11 >= v10)
    goto LABEL_24;
  if (qword_1ED7AA040 != -1)
    goto LABEL_52;
  while (1)
  {
    v13 = sub_1C2CFD878();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED7AA1B0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1C2CFD86C();
    v15 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      *(_DWORD *)v16 = v12[122];
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2048;
      v12 = (_QWORD *)&unk_1C2D00000;
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C28B6000, v14, v15, "FlowOutputHelper is applying dialogs to snippets but there are %ld dialogs and %ld snippets. We will attempt to attach dialogs to as many snippets as possible and add empty AceViews as needed.", (uint8_t *)v16, 0x16u);
      MEMORY[0x1C3BC9DE8](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_24:
    if ((v10 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_52:
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2942850(0, v10, a2, a1);
  if (v10 < v11)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v21 = sub_1C2CFD878();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED7AA1B0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_1C2CFD86C();
    v23 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      *(_DWORD *)v24 = v12[122];
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C28B6000, v22, v23, "FlowOutputHelper received %ld dialogs but there are %ld snippets. Adding remaining snippets without dialog.", (uint8_t *)v24, 0x16u);
      MEMORY[0x1C3BC9DE8](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v4 < v10)
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v28)
    {
      swift_bridgeObjectRetain();
      if (sub_1C2CFE820() >= v10)
      {
        swift_bridgeObjectRetain();
        v25 = sub_1C2CFE820();
        swift_bridgeObjectRelease();
LABEL_38:
        if (v25 >= v4)
        {
          if ((a2 & 0xC000000000000001) == 0 || v10 == v4)
          {
LABEL_44:
            if (v28)
            {
              swift_bridgeObjectRetain();
              sub_1C2CFE82C();
              swift_bridgeObjectRelease_n();
            }
            sub_1C29052E8();
            return;
          }
          if (v10 < v4)
          {
            sub_1C28BF798(0, (unint64_t *)&qword_1EF787B30);
            v26 = v10;
            do
            {
              v27 = v26 + 1;
              sub_1C2CFE6A0();
              v26 = v27;
            }
            while (v4 != v27);
            goto LABEL_44;
          }
LABEL_58:
          __break(1u);
          return;
        }
LABEL_54:
        __break(1u);
LABEL_55:
        swift_once();
LABEL_20:
        v17 = sub_1C2CFD878();
        __swift_project_value_buffer(v17, (uint64_t)qword_1ED7AA1B0);
        v18 = sub_1C2CFD86C();
        v19 = sub_1C2CFE298();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v20 = 0;
          _os_log_impl(&dword_1C28B6000, v18, v19, "FlowOutputHelper detected SADialogs on one or more snippets. Declining to modify provided snippets", v20, 2u);
          MEMORY[0x1C3BC9DE8](v20, -1, -1);
        }

        swift_bridgeObjectRetain();
        return;
      }
    }
    else
    {
      v25 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v25 >= (unint64_t)v10)
      {
        swift_bridgeObjectRetain();
        goto LABEL_38;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_58;
  }
}

uint64_t static FlowOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:preCommandSubmissionContextUpdate:postCommandSubmissionContextUpdate:flowActivity:)(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v14 = *a1;
  v28 = *(_OWORD *)(a1 + 5);
  v15 = a1[7];
  v16 = a1[8];
  sub_1C28BF798(0, &qword_1ED7A7278);
  v29 = v14;
  v17 = *(_OWORD *)(a1 + 3);
  v30 = *(_OWORD *)(a1 + 1);
  v31 = v17;
  v32 = v28;
  v33 = v15;
  v34 = v16;
  v18 = sub_1C28FA918((uint64_t)&v29, a6);
  sub_1C2A6D578(v18, a4);
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_1C28BF798(0, &qword_1EF79DD60);
  v21 = sub_1C2CFDD58();
  v23 = sub_1C293617C(v21, v22, v20, MEMORY[0x1E0DEE9D8], 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v23;
  v25 = sub_1C2A6DD54(v23, a7, a8);

  sub_1C28C6BEC(a9, (uint64_t)&v29, (uint64_t *)&unk_1ED7A8750);
  type metadata accessor for FlowOutput();
  OUTLINED_FUNCTION_1_6();
  v26 = FlowOutput.init(atoms:flowActivity:)(v25, (uint64_t)&v29);

  return v26;
}

uint64_t sub_1C2A6DD54(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for NLContextUpdate();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)&v30 - v16;
  sub_1C28C6BEC(a2, (uint64_t)&v30 - v16, &qword_1ED7A7A10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v6) == 1)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    if (!a1)
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1C28C5410((uint64_t)v17, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for NLContextUpdate);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78AB20);
  v22 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FlowOutputAtom() - 8) + 80);
  v23 = (v22 + 32) & ~v22;
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C2D002E0;
  sub_1C28FBA24((uint64_t)v9, v18 + v23);
  swift_storeEnumTagMultiPayload();
  sub_1C293D4B0((uint64_t)v9);
  if (a1)
  {
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78AB20);
    v19 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FlowOutputAtom() - 8) + 80);
    v20 = (v19 + 32) & ~v19;
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)(v21 + v20) = a1;
    swift_storeEnumTagMultiPayload();
  }
LABEL_5:
  v31 = v18;
  v24 = a1;
  sub_1C2904EBC();
  v25 = v31;
  sub_1C28C6BEC(a3, (uint64_t)v14, &qword_1ED7A7A10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v6) != 1)
  {
    sub_1C28C5410((uint64_t)v14, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for NLContextUpdate);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78AB20);
    v26 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FlowOutputAtom() - 8) + 80);
    v27 = (v26 + 32) & ~v26;
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C2D002E0;
    sub_1C28FBA24((uint64_t)v9, v28 + v27);
    swift_storeEnumTagMultiPayload();
    sub_1C293D4B0((uint64_t)v9);
  }
  v31 = v25;
  sub_1C2904EBC();
  return v31;
}

uint64_t static FlowOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(unint64_t *a1, _QWORD *a2, char a3, unint64_t a4, char a5)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  __n128 v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v11 = a1[4];
  v10 = a1[5];
  v12 = a1[6];
  v13 = a1[7];
  v14 = a1[8];
  v15 = OUTLINED_FUNCTION_19_33((uint64_t)a1, a2);
  if ((v15 & 1) != 0)
  {
    if (a4 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = OUTLINED_FUNCTION_75_1();
      v15 = swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v16)
    {
      OUTLINED_FUNCTION_23_4(v15, &qword_1ED7A7278);
      OUTLINED_FUNCTION_3_43();
      v18 = OUTLINED_FUNCTION_12_42((uint64_t)&v31, v17);
      sub_1C2A6D578(v18, a4);
      v19 = OUTLINED_FUNCTION_7_42();
      v20 = (void *)OUTLINED_FUNCTION_23_4(v19, &qword_1EF79DD60);
      v21 = sub_1C2CFDD58();
      OUTLINED_FUNCTION_8_44(v21, v22, v23, MEMORY[0x1E0DEE9D8]);
      OUTLINED_FUNCTION_7_5();
      OUTLINED_FUNCTION_254();
      v24 = v20;
    }
    else
    {
      OUTLINED_FUNCTION_23_4(v15, &qword_1ED7A7268);
      OUTLINED_FUNCTION_3_43();
      v24 = OUTLINED_FUNCTION_6_41((uint64_t *)&v31, v27, a5 & 1);
      v20 = v24;
    }
    v26 = static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(v24);
  }
  else
  {
    OUTLINED_FUNCTION_17_31();
    v25 = OUTLINED_FUNCTION_11_37();
    OUTLINED_FUNCTION_28_24(v25, a3);
    v31.n128_u64[0] = v7;
    v31.n128_u64[1] = v6;
    v32 = v8;
    v33 = v9;
    v34 = v11;
    v35 = v10;
    v36 = v12;
    v37 = v13;
    v38 = v14;
    v20 = (void *)sub_1C2CE1C90(&v31);
    v26 = static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(v20);
    swift_release();
  }

  return v26;
}

uint64_t static FlowOutputHelper.makeClarificationViewOutput(aceViews:nlContextUpdate:flowActivity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;

  OUTLINED_FUNCTION_23_4(a1, &qword_1EF79DD60);
  v5 = sub_1C2CFDD58();
  v7 = sub_1C293617C(v5, v6, a1, MEMORY[0x1E0DEE9D8], 0);
  OUTLINED_FUNCTION_254();
  static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(v7);
  OUTLINED_FUNCTION_50_11();
  return a3;
}

void static FlowOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t *a1, _QWORD *a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_14_42(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t *, unint64_t))sub_1C290F4FC);
  OUTLINED_FUNCTION_80();
}

void static FlowOutputHelper.makeConfirmationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t *a1, _QWORD *a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_14_42(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t *, unint64_t))sub_1C2CE1DE0);
  OUTLINED_FUNCTION_80();
}

void static FlowOutputHelper.makeConfirmedViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t *a1, _QWORD *a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_14_42(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t *, unint64_t))sub_1C2CE1DEC);
  OUTLINED_FUNCTION_80();
}

uint64_t static FlowOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t *a1, _QWORD *a2, char a3, unint64_t a4, char a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  char v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  char v33;
  uint64_t v34;
  uint64_t __src[9];
  uint64_t v36;

  v7 = a1[1];
  v34 = *a1;
  v8 = a1[2];
  v9 = a1[3];
  v11 = a1[4];
  v10 = a1[5];
  v13 = a1[6];
  v12 = a1[7];
  v14 = a1[8];
  v15 = OUTLINED_FUNCTION_19_33((uint64_t)a1, a2);
  if ((v15 & 1) != 0)
  {
    v33 = a5;
    if (a4 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = OUTLINED_FUNCTION_75_1();
      v15 = swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v8 = v12;
    if (v16)
    {
      OUTLINED_FUNCTION_23_4(v15, &qword_1ED7A7278);
      OUTLINED_FUNCTION_5_47();
      v18 = OUTLINED_FUNCTION_12_42((uint64_t)__src, v17);
      sub_1C2A6D578(v18, a4);
      v19 = OUTLINED_FUNCTION_7_42();
      v20 = OUTLINED_FUNCTION_23_4(v19, &qword_1EF79DD60);
      v21 = sub_1C2CFDD58();
      OUTLINED_FUNCTION_8_44(v21, v22, v23, MEMORY[0x1E0DEE9D8]);
      OUTLINED_FUNCTION_7_5();
      OUTLINED_FUNCTION_254();
      v24 = v20;
    }
    else
    {
      OUTLINED_FUNCTION_23_4(v15, &qword_1ED7A7268);
      OUTLINED_FUNCTION_5_47();
      v24 = (uint64_t)OUTLINED_FUNCTION_6_41(__src, v30, v33 & 1);
    }
    static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(v24);
    OUTLINED_FUNCTION_50_11();
  }
  else
  {
    OUTLINED_FUNCTION_17_31();
    inited = swift_initStackObject();
    OUTLINED_FUNCTION_28_24(inited, a3);
    v36 = MEMORY[0x1E0DEE9D8];
    __src[0] = v34;
    __src[1] = v7;
    __src[2] = v8;
    __src[3] = v9;
    __src[4] = v11;
    __src[5] = v10;
    __src[6] = v13;
    __src[7] = v12;
    __src[8] = v14;
    OUTLINED_FUNCTION_21_32();
    sub_1C290F594(__src, v26, v27);
    if (v28 >> 62)
    {
      OUTLINED_FUNCTION_23_4(v28, (unint64_t *)&qword_1EF787B30);
      sub_1C2CFE808();
    }
    else
    {
      swift_bridgeObjectRetain();
      v29 = sub_1C2CFE9F4();
      OUTLINED_FUNCTION_23_4(v29, (unint64_t *)&qword_1EF787B30);
    }
    OUTLINED_FUNCTION_254();
    sub_1C2905474();
    swift_bridgeObjectRetain();
    sub_1C2905474();
    sub_1C2CE1E04(v36);
    OUTLINED_FUNCTION_7_5();
    static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(inited);
    OUTLINED_FUNCTION_50_11();
    swift_release();
  }
  return v8;
}

void static FlowOutputHelper.makeSummaryViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t *a1, _QWORD *a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_14_42(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t *, unint64_t))sub_1C2CE1DF8);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2A6E610(uint64_t *a1, _QWORD *a2, char a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t *, unint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v38[9];

  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[3];
  v16 = a1[4];
  v15 = a1[5];
  v18 = a1[6];
  v17 = a1[7];
  v19 = a1[8];
  v20 = OUTLINED_FUNCTION_19_33((uint64_t)a1, a2);
  if ((v20 & 1) != 0)
  {
    v21 = a4;
    if (a4 >> 62)
    {
      swift_bridgeObjectRetain();
      v22 = OUTLINED_FUNCTION_75_1();
      v20 = swift_bridgeObjectRelease();
      v21 = a4;
    }
    else
    {
      v22 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v22)
    {
      v23 = v21;
      sub_1C28BF798(0, &qword_1ED7A7278);
      OUTLINED_FUNCTION_4_46();
      v25 = OUTLINED_FUNCTION_12_42((uint64_t)v38, v24);
      OUTLINED_FUNCTION_21_32();
      sub_1C2A6D578(v25, v23);
      v26 = OUTLINED_FUNCTION_7_42();
      v27 = (void *)OUTLINED_FUNCTION_23_4(v26, &qword_1EF79DD60);
      v28 = sub_1C2CFDD58();
      OUTLINED_FUNCTION_8_44(v28, v29, v30, MEMORY[0x1E0DEE9D8]);
      OUTLINED_FUNCTION_7_5();
      OUTLINED_FUNCTION_254();
      v31 = v27;
    }
    else
    {
      OUTLINED_FUNCTION_23_4(v20, &qword_1ED7A7268);
      OUTLINED_FUNCTION_4_46();
      OUTLINED_FUNCTION_21_32();
      v31 = OUTLINED_FUNCTION_6_41(v38, v34, v35);
      v27 = v31;
    }
    v33 = static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(v31);
  }
  else
  {
    OUTLINED_FUNCTION_17_31();
    v32 = OUTLINED_FUNCTION_11_37();
    OUTLINED_FUNCTION_28_24(v32, a3);
    v38[0] = v11;
    v38[1] = v12;
    v38[2] = v13;
    v38[3] = v14;
    v38[4] = v16;
    v38[5] = v15;
    v38[6] = v18;
    v38[7] = v17;
    v38[8] = v19;
    OUTLINED_FUNCTION_21_32();
    v27 = (void *)a10(v38, a4);
    v33 = static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(v27);
    swift_release();
  }

  return v33;
}

ValueMetadata *type metadata accessor for FlowOutputHelper()
{
  return &type metadata for FlowOutputHelper;
}

uint64_t OUTLINED_FUNCTION_1_39()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 - 216);
  *(_QWORD *)(v4 - 152) = *(_QWORD *)(v4 - 168);
  *(_QWORD *)(v4 - 144) = v5;
  v6 = *(_QWORD *)(v4 - 200);
  *(_QWORD *)(v4 - 136) = *(_QWORD *)(v4 - 208);
  *(_QWORD *)(v4 - 128) = v6;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v0;
  *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 192);
  *(_QWORD *)(v4 - 96) = v1;
  *(_QWORD *)(v4 - 88) = v2;
  return v4 - 152;
}

id OUTLINED_FUNCTION_6_41(uint64_t *a1, int a2, uint64_t a3)
{
  return sub_1C28FA734(a1, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_7_42()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_8_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1C293617C(a1, a2, v4, a4, 0);
}

uint64_t OUTLINED_FUNCTION_11_37()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_12_42(uint64_t a1, char a2)
{
  return sub_1C28FA918(a1, a2);
}

uint64_t OUTLINED_FUNCTION_14_42@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, char a3@<W2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t *, unint64_t)@<X8>)
{
  uint64_t v9;

  return sub_1C2A6E610(a1, a2, a3, a4, a5, a6, a7, a8, v9, a9);
}

uint64_t OUTLINED_FUNCTION_16_35(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v2, 1, 1, a1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_17_31()
{
  return type metadata accessor for ViewFactory();
}

uint64_t OUTLINED_FUNCTION_19_33(uint64_t a1, _QWORD *a2)
{
  return sub_1C2A6D210(a2);
}

void OUTLINED_FUNCTION_23_34(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C28C5410(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_28_24@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

void OUTLINED_FUNCTION_30_24()
{
  sub_1C28FD20C();
}

uint64_t sub_1C2A6E968()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1C2A6E9DC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  __int128 v10;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x28uLL)
    v5 = 40;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    sub_1C2CFD350();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
      v9 = *(_DWORD *)a2 + 2;
    if (v9 == 1)
    {
      (*(void (**)(uint64_t))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(uint64_t))(v10 - 8))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1C2A6EAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x28)
    v3 = 40;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
    else
      return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1C2A6EAF0 + 4 * byte_1C2D0B2B8[v5]))();
  }
}

uint64_t sub_1C2A6EB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x28uLL)
    v5 = 40;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(uint64_t))(v4 + 16))(a1);
    v8 = 1;
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v9;
    (**(void (***)(uint64_t))(v9 - 8))(a1);
    v8 = 0;
  }
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1C2A6EC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x28uLL)
      v7 = 40;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      __swift_destroy_boxed_opaque_existential_1(a1);
    v10 = *(unsigned __int8 *)(a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v13 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1, a2);
      v12 = 0;
    }
    *(_BYTE *)(a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1C2A6EDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x28uLL)
    v5 = 40;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(uint64_t))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1C2A6EEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x28uLL)
      v7 = 40;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      __swift_destroy_boxed_opaque_existential_1(a1);
    v10 = *(unsigned __int8 *)(a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      v13 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v13;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_BYTE *)(a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1C2A6F044(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 40;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x28uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2A6F108 + 4 * byte_1C2D0B2DB[(v4 - 1)]))();
}

void sub_1C2A6F154(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x28)
    v5 = 40;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2A6F2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 40;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x28uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2A6F340 + 4 * byte_1C2D0B2E9[v3]))();
}

void sub_1C2A6F388(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x28uLL)
    v4 = 40;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for _FlowPlanEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _FlowPlanEvent);
}

uint64_t sub_1C2A6F45C@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a4;
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = (__int128 *)((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__int128 *, uint64_t))(v16 + 16))(v15, v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, __int128 *, uint64_t))(v9 + 32))(v12, v15, v8);
    a1(v12);
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if (v5)
      return result;
  }
  else
  {
    sub_1C28B99EC(v15, a5);
  }
  type metadata accessor for _FlowPlanEvent(0, v22, v19, v20);
  return swift_storeEnumTagMultiPayload();
}

void sub_1C2A6F5A8()
{
  FlowPlugin.warmup()();
}

Swift::Void __swiftcall FlowPlugin.warmup()()
{
  uint64_t v0;
  os_log_type_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *loga;
  NSObject *log;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED7AA1B0);
  loga = sub_1C2CFD86C();
  v1 = sub_1C2CFE2A4();
  if (OUTLINED_FUNCTION_7_30(v1, v2, v3, v4, v5, v6, v7, v8, v15, loga))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
    OUTLINED_FUNCTION_4_35(&dword_1C28B6000, v9, v10, "No-op warming...", v11, v12, v13, v14, v16, log);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_0_20(log);
}

void sub_1C2A6F654(uint64_t a1, uint64_t a2)
{
  FlowPlugin.warmup(refId:)(*(Swift::String *)&a1);
}

Swift::Void __swiftcall FlowPlugin.warmup(refId:)(Swift::String refId)
{
  uint64_t v1;
  os_log_type_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *loga;
  NSObject *log;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED7AA1B0);
  loga = sub_1C2CFD86C();
  v2 = sub_1C2CFE2A4();
  if (OUTLINED_FUNCTION_7_30(v2, v3, v4, v5, v6, v7, v8, v9, v16, loga))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
    OUTLINED_FUNCTION_4_35(&dword_1C28B6000, v10, v11, "No-op warming...", v12, v13, v14, v15, v17, log);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_0_20(log);
}

uint64_t OUTLINED_FUNCTION_38_26()
{
  return 0;
}

uint64_t FlowPlugin.makeFlowFrame(parse:)()
{
  return 0;
}

void sub_1C2A6F710()
{
  FlowPlugin.makeFlowFor(parse:)();
}

void FlowPlugin.makeFlowFor(parse:)()
{
  type metadata accessor for AnyFlow();
  swift_allocObject();
  sub_1C2950638();
  OUTLINED_FUNCTION_1_0();
}

uint64_t FlowPlugin.findFlowFor(parse:)@<X0>(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = (*(uint64_t (**)(void))(a1 + 40))();
  static FlowSearchResult.flow(_:)(v3, a2);
  return swift_release();
}

uint64_t FlowSearchResult.exclude.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_3_44() + 28));
}

uint64_t sub_1C2A6F7A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a4 = 0;
  a4[4] = a2;
  a4[5] = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4 + 1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(boxed_opaque_existential_0, a1, a2);
  v8 = type metadata accessor for FlowSearchResult();
  *((_BYTE *)a4 + *(int *)(v8 + 28)) = 1;
  v9 = (uint64_t)a4 + *(int *)(v8 + 24);
  v10 = type metadata accessor for NamedParseTransformer();
  return __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
}

double sub_1C2A6F82C()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v0 = type metadata accessor for FlowSearchResult();
  __swift_allocate_value_buffer(v0, qword_1EF791870);
  v1 = (_OWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EF791870);
  v2 = (uint64_t)v1 + *(int *)(v0 + 24);
  v3 = type metadata accessor for NamedParseTransformer();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  result = 0.0;
  v1[1] = 0u;
  v1[2] = 0u;
  *v1 = 0u;
  *((_BYTE *)v1 + *(int *)(v0 + 28)) = 1;
  return result;
}

void static FlowSearchResult.noFlow.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EF786D40 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_3_44();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EF791870);
  sub_1C28DD638(v3, a1, (uint64_t (*)(_QWORD))type metadata accessor for FlowSearchResult);
}

void static FlowSearchResult.flow<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  MEMORY[0x1E0C80A78](a1, a1);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  sub_1C2A6F7A8((uint64_t)v8, a2, a3, a4);
  OUTLINED_FUNCTION_18();
}

uint64_t SentinalFlow.on(input:)()
{
  return 0;
}

uint64_t SentinalFlow.execute(completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2, v5);
  v7 = (char *)&v19 - v6;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v8 = OUTLINED_FUNCTION_118();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED7AA1B0);
  v10 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, v9, v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
  sub_1C28C3750((uint64_t)v7, (uint64_t)v4, &qword_1ED7A9EC0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_1C28B9D6C((uint64_t)v4, &qword_1ED7A9EC0);
  }
  else
  {
    v11 = sub_1C2CFD86C();
    v12 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v19 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v13 = 136315650;
      v14 = sub_1C2CFE694();
      *(_QWORD *)&v23 = sub_1C28BB120(v14, v15, (uint64_t *)&v19);
      OUTLINED_FUNCTION_2_7();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2048;
      *(_QWORD *)&v23 = 191;
      sub_1C2CFE4D8();
      *(_WORD *)(v13 + 22) = 2080;
      *(_QWORD *)&v23 = sub_1C28BB120(0xD000000000000022, 0x80000001C2D2F5A0, (uint64_t *)&v19);
      OUTLINED_FUNCTION_2_7();
      _os_log_impl(&dword_1C28B6000, v11, v12, "FatalError at %s:%lu - %s", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v8);
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v23 = 0u;
  v24 = 0u;
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  v16 = sub_1C2CFD350();
  LOBYTE(v18) = 44;
  sub_1C2AFA880(v16, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)&v23, 0, 0, (uint64_t)&v19, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, 0xD000000000000022, 0x80000001C2D2F5A0, v18, v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((void **)&v20 + 1),
    v21,
    v22,
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    v26);
  sub_1C28B9D6C((uint64_t)&v19, (uint64_t *)&unk_1ED7A8750);
  sub_1C28B9D6C((uint64_t)&v23, &qword_1ED7A8480);
  swift_release();
  result = sub_1C2CFE7FC();
  __break(1u);
  return result;
}

uint64_t sub_1C2A6FD48()
{
  uint64_t v0;
  uint64_t v1;

  v0 = SentinalFlow.execute(completion:)();
  return dispatch thunk of FlowPlugin.warmup()(v0, v1);
}

uint64_t dispatch thunk of FlowPlugin.warmup()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FlowPlugin.makeFlowFrame(parse:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FlowPlugin.makeFlowFor(parse:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FlowPlugin.findFlowFor(parse:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t initializeBufferWithCopyOfBuffer for FlowSearchResult(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    sub_1C2CFD350();
  }
  else
  {
    v8 = a2 + 1;
    v9 = a2[4];
    sub_1C2CFD350();
    if (v9)
    {
      v10 = a2[5];
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      (**(void (***)(uint64_t, _QWORD *, uint64_t))(v9 - 8))(a1 + 8, v8, v9);
    }
    else
    {
      v11 = *((_OWORD *)v8 + 1);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v8;
      *(_OWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 40) = v8[4];
    }
    v12 = *(int *)(a3 + 24);
    v13 = (char *)(a1 + v12);
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for NamedParseTransformer();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5530);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F68);
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v17))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F70);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v13, v14, v17);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v17);
      }
      v19 = *(int *)(v15 + 20);
      v20 = &v13[v19];
      v21 = &v14[v19];
      v22 = sub_1C2CFD344();
      if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F508);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return a1;
}

uint64_t assignWithCopy for FlowSearchResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1C2CFD350();
  swift_release();
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 8);
  v8 = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 24) = v8;
LABEL_8:
  v9 = *(int *)(a3 + 24);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for NamedParseTransformer();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F68);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v15))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F70);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v10, v11, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v15);
      }
      v23 = *(int *)(v12 + 20);
      v24 = &v10[v23];
      v25 = &v11[v23];
      v26 = sub_1C2CFD344();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F508);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      v28 = (uint64_t)v10;
      v29 = v12;
      goto LABEL_24;
    }
    goto LABEL_14;
  }
  if (v14)
  {
    sub_1C2A70348((uint64_t)v10);
LABEL_14:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5530) - 8) + 64);
    v18 = v10;
    v19 = v11;
    goto LABEL_15;
  }
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F68);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v20);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v20);
  if (!v21)
  {
    v31 = *(_QWORD *)(v20 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v10, v11, v20);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v20);
    goto LABEL_28;
  }
  if (v22)
  {
LABEL_28:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F70);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v10, v11, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v20);
LABEL_29:
  v33 = *(int *)(v12 + 20);
  v34 = (uint64_t)&v10[v33];
  v35 = (uint64_t)&v11[v33];
  v36 = sub_1C2CFD344();
  v37 = __swift_getEnumTagSinglePayload(v34, 1, v36);
  v38 = __swift_getEnumTagSinglePayload(v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      v28 = v34;
      v29 = v36;
LABEL_24:
      __swift_storeEnumTagSinglePayload(v28, 0, 1, v29);
      goto LABEL_25;
    }
  }
  else
  {
    v39 = *(_QWORD *)(v36 - 8);
    if (!v38)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 24))(v34, v35, v36);
      goto LABEL_25;
    }
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v34, v36);
  }
  v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F508) - 8) + 64);
  v18 = (void *)v34;
  v19 = (const void *)v35;
LABEL_15:
  memcpy(v18, v19, v17);
LABEL_25:
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C2A70348(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NamedParseTransformer();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for FlowSearchResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for NamedParseTransformer();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5530);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F68);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F70);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
    }
    v13 = *(int *)(v9 + 20);
    v14 = &v7[v13];
    v15 = &v8[v13];
    v16 = sub_1C2CFD344();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F508);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for FlowSearchResult(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v6 = a2 + 1;
  *(_QWORD *)a1 = *a2;
  swift_release();
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  v7 = *((_OWORD *)v6 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
  *(_OWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 40) = v6[4];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for NamedParseTransformer();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F68);
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F70);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v9, v10, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v14);
      }
      v22 = *(int *)(v11 + 20);
      v23 = &v9[v22];
      v24 = &v10[v22];
      v25 = sub_1C2CFD344();
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F508);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      }
      v27 = (uint64_t)v9;
      v28 = v11;
      goto LABEL_19;
    }
    goto LABEL_9;
  }
  if (v13)
  {
    sub_1C2A70348((uint64_t)v9);
LABEL_9:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5530) - 8) + 64);
    v17 = v9;
    v18 = v10;
    goto LABEL_10;
  }
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F68);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v19);
  v21 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v19);
  if (!v20)
  {
    v30 = *(_QWORD *)(v19 - 8);
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v9, v10, v19);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v19);
    goto LABEL_23;
  }
  if (v21)
  {
LABEL_23:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5F70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v9, v10, v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v19);
LABEL_24:
  v32 = *(int *)(v11 + 20);
  v33 = (uint64_t)&v9[v32];
  v34 = (uint64_t)&v10[v32];
  v35 = sub_1C2CFD344();
  v36 = __swift_getEnumTagSinglePayload(v33, 1, v35);
  v37 = __swift_getEnumTagSinglePayload(v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      v27 = v33;
      v28 = v35;
LABEL_19:
      __swift_storeEnumTagSinglePayload(v27, 0, 1, v28);
      goto LABEL_20;
    }
  }
  else
  {
    v38 = *(_QWORD *)(v35 - 8);
    if (!v37)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 40))(v33, v34, v35);
      goto LABEL_20;
    }
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v33, v35);
  }
  v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F508) - 8) + 64);
  v17 = (void *)v33;
  v18 = (const void *)v34;
LABEL_10:
  memcpy(v17, v18, v16);
LABEL_20:
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C2A708BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5530);
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 24), a2, v9);
  }
}

void sub_1C2A70940(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 2147483646)
  {
    *a1 = a2;
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A5530);
    __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(a4 + 24), a2, a2, v7);
  }
}

void sub_1C2A709A8()
{
  unint64_t v0;

  sub_1C2A70A2C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C2A70A2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED7A5538)
  {
    type metadata accessor for NamedParseTransformer();
    v0 = sub_1C2CFE478();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED7A5538);
  }
}

ValueMetadata *type metadata accessor for SentinalFlow()
{
  return &type metadata for SentinalFlow;
}

uint64_t OUTLINED_FUNCTION_3_44()
{
  return type metadata accessor for FlowSearchResult();
}

SiriKitFlow::FlowPluginBundleImpl __swiftcall FlowPluginBundleImpl.init(bundlePath:pluginCacheKeys:)(Swift::String bundlePath, Swift::OpaquePointer pluginCacheKeys)
{
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t *v25;
  void *v26;
  __int128 v27;
  __int128 v28;
  _QWORD v29[2];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  SiriKitFlow::FlowPluginBundleImpl result;

  object = bundlePath._object;
  countAndFlagsBits = bundlePath._countAndFlagsBits;
  v6 = v2;
  v7 = *((_QWORD *)pluginCacheKeys._rawValue + 2);
  if (v7)
  {
    v24 = bundlePath._countAndFlagsBits;
    v25 = v2;
    v26 = bundlePath._object;
    swift_bridgeObjectRetain();
    v8 = (uint64_t *)((char *)pluginCacheKeys._rawValue + 40);
    v9 = MEMORY[0x1E0DEE9D8];
    do
    {
      v10 = *(v8 - 1);
      v11 = *v8;
      swift_bridgeObjectRetain();
      sub_1C2AB2024(v10, v11, (uint64_t)v29);
      if ((_QWORD)v30 != 1)
      {
        v28 = v30;
        v12 = v29[0];
        v13 = v29[1];
        v27 = v31;
        v14 = v32;
        v15 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_0_51();
          v9 = v19;
        }
        v16 = *(_QWORD *)(v9 + 16);
        v17 = v28;
        if (v16 >= *(_QWORD *)(v9 + 24) >> 1)
        {
          OUTLINED_FUNCTION_0_51();
          v17 = v28;
          v9 = v20;
        }
        *(_QWORD *)(v9 + 16) = v16 + 1;
        v18 = v9 + (v16 << 6);
        *(_BYTE *)(v18 + 32) = v12;
        *(_BYTE *)(v18 + 33) = HIBYTE(v12) & 1;
        *(_QWORD *)(v18 + 40) = v13;
        *(_OWORD *)(v18 + 48) = v17;
        *(_OWORD *)(v18 + 64) = v27;
        *(_QWORD *)(v18 + 80) = v14;
        *(_BYTE *)(v18 + 88) = v15 & 1;
      }
      v8 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v6 = v25;
    object = v26;
    countAndFlagsBits = v24;
  }
  else
  {
    v9 = MEMORY[0x1E0DEE9D8];
  }
  v21 = swift_bridgeObjectRelease();
  *v6 = countAndFlagsBits;
  v6[1] = (uint64_t)object;
  v6[2] = v9;
  result.supportedTopics._rawValue = v23;
  result.bundlePath._object = v22;
  result.bundlePath._countAndFlagsBits = v21;
  return result;
}

uint64_t sub_1C2A70C10()
{
  return sub_1C2A70C7C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C28FD5D0);
}

uint64_t sub_1C2A70C1C()
{
  return sub_1C2A70C7C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C28FCF58);
}

uint64_t sub_1C2A70C28()
{
  return sub_1C2A70C7C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C28FCC04);
}

uint64_t sub_1C2A70C34()
{
  return sub_1C2A70C7C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C28FCE4C);
}

uint64_t sub_1C2A70C40()
{
  return sub_1C2A70C7C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C28FD4C0);
}

uint64_t sub_1C2A70C4C()
{
  return sub_1C2A70C7C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C28FD2C4);
}

uint64_t sub_1C2A70C58()
{
  return sub_1C2A70C7C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C28FC9A4);
}

uint64_t sub_1C2A70C64()
{
  return sub_1C2A70C7C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C28FCA5C);
}

uint64_t sub_1C2A70C70()
{
  return sub_1C2A70C7C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C28FCAF8);
}

uint64_t sub_1C2A70C7C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

_QWORD *_s11SiriKitFlow5ParseO16DirectInvocationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FlowPluginBundleImpl(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Parse.DirectInvocation(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

void OUTLINED_FUNCTION_0_51()
{
  sub_1C28FCF58();
}

uint64_t destroy for FlowPluginBundleCache()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FlowPluginBundleCache(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FlowPluginBundleCache(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FlowPluginBundleCache(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowPluginBundleCache(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowPluginBundleCache(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowPluginBundleCache()
{
  return &type metadata for FlowPluginBundleCache;
}

void sub_1C2A70FE4(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void *v61;
  _QWORD *v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  _OWORD v68[2];
  uint64_t v69;

  v62 = a2;
  v69 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v6 = MEMORY[0x1E0C80A78](v4, v5);
  v59 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6, v8);
  v60 = (uint64_t)&v58 - v9;
  v10 = sub_1C2CFBB8C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  OUTLINED_FUNCTION_72_4();
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A9E20);
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_10();
  v17 = v16 - v15;
  v18 = OUTLINED_FUNCTION_160();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  OUTLINED_FUNCTION_10();
  v23 = v22 - v21;
  sub_1C2CFE370();
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFD7F4();
  sub_1C2CFD7D0();
  v58 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v58(v23, v18);
  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v61 = a1;
  v25 = (void *)sub_1C2CFBB44();
  *(_QWORD *)&v64 = 0;
  v26 = objc_msgSend(v24, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v25, 0, 0, &v64);

  v27 = (void *)v64;
  if (v26)
  {
    v28 = sub_1C2CFDFA4();
    v29 = v27;

    *(_QWORD *)&v64 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)&v68[0] = MEMORY[0x1E0DEE9E0];
    v30 = *(_QWORD *)(v28 + 16);
    if (v30)
    {
      v31 = v28 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      v32 = *(_QWORD *)(v11 + 72);
      v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16);
      OUTLINED_FUNCTION_33_0();
      while (1)
      {
        v33(v17, v31, v10);
        OUTLINED_FUNCTION_42_19(v17, 0);
        if (__swift_getEnumTagSinglePayload(v17, 1, v10) == 1)
          break;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v2, v17, v10);
        sub_1C2A72F64(v2, (uint64_t *)&v64, (uint64_t *)v68);
        OUTLINED_FUNCTION_25_29();
        v31 += v32;
        if (!--v30)
          goto LABEL_10;
      }
    }
    else
    {
      OUTLINED_FUNCTION_33_0();
LABEL_10:
      OUTLINED_FUNCTION_42_19(v17, 1);
    }
    OUTLINED_FUNCTION_29_2();
    v34 = v64;
    v35 = *(_QWORD *)&v68[0];
    v36 = (void *)objc_opt_self();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_33_0();
    v37 = objc_msgSend(v36, sel_processInfo);
    v38 = objc_msgSend(v37, sel_operatingSystemVersionString);

    v39 = sub_1C2CFDD58();
    v41 = v40;
    OUTLINED_FUNCTION_70();
    swift_bridgeObjectRelease();

    sub_1C2A72E08();
    (*(void (**)(void *, uint64_t))(v11 + 8))(v61, v10);
    v42 = v62;
    *v62 = v34;
    v42[1] = v39;
    v42[2] = v41;
    v42[3] = 0;
    v42[4] = v35;
    OUTLINED_FUNCTION_1();
  }
  else
  {
    v43 = v59;
    v44 = (id)v64;
    v45 = (void *)sub_1C2CFBAFC();

    swift_willThrow();
    sub_1C2CFE364();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v46 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v46 + 32) = 0x6572756C696146;
    *(_QWORD *)(v46 + 40) = 0xE700000000000000;
    sub_1C2CFD7F4();
    sub_1C2CFD7C4();
    OUTLINED_FUNCTION_70();
    v58(v23, v18);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v47 = OUTLINED_FUNCTION_118();
    v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1ED7AA1B0);
    v49 = *(_QWORD *)(v47 - 8);
    v50 = v60;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v60, v48, v47);
    __swift_storeEnumTagSinglePayload(v50, 0, 1, v47);
    sub_1C294E19C(v50, v43);
    if (__swift_getEnumTagSinglePayload(v43, 1, v47) == 1)
    {
      sub_1C28BA958(v43, &qword_1ED7A9EC0);
    }
    else
    {
      v51 = sub_1C2CFD86C();
      v52 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = OUTLINED_FUNCTION_6_0();
        *(_QWORD *)&v64 = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v53 = 136315650;
        v54 = sub_1C2CFE694();
        *(_QWORD *)&v68[0] = sub_1C28BB120(v54, v55, (uint64_t *)&v64);
        OUTLINED_FUNCTION_28_25();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2048;
        *(_QWORD *)&v68[0] = 94;
        sub_1C2CFE4D8();
        *(_WORD *)(v53 + 22) = 2080;
        *(_QWORD *)&v68[0] = sub_1C28BB120(0xD000000000000036, 0x80000001C2D2FC00, (uint64_t *)&v64);
        OUTLINED_FUNCTION_28_25();
        _os_log_impl(&dword_1C28B6000, v51, v52, "FatalError at %s:%lu - %s", (uint8_t *)v53, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v43, v47);
    }
    if (qword_1ED7A84D8 != -1)
      swift_once();
    memset(v68, 0, sizeof(v68));
    v66 = 0;
    v64 = 0u;
    v65 = 0u;
    v56 = sub_1C2CFD350();
    LOBYTE(v57) = 44;
    sub_1C2AFA880(v56, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)v68, 0, 0, (uint64_t)&v64, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, 0xD000000000000036, 0x80000001C2D2FC00, v57, (uint64_t)v58,
      v59,
      v60,
      v61,
      (uint64_t)v62,
      v63,
      v64,
      *((uint64_t *)&v64 + 1),
      v65,
      *((uint64_t *)&v65 + 1),
      v66,
      v67);
    sub_1C28BA958((uint64_t)&v64, (uint64_t *)&unk_1ED7A8750);
    sub_1C28BA958((uint64_t)v68, &qword_1ED7A8480);
    OUTLINED_FUNCTION_36_0();
    sub_1C2CFE7FC();
    __break(1u);
  }
}

uint64_t sub_1C2A717B4()
{
  uint64_t *v0;
  uint64_t v1;

  if (v0[4])
  {
    v1 = v0[4];
  }
  else
  {
    v1 = sub_1C2A729B4(v0);
    v0[4] = v1;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C2A717FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0 + 24))
  {
    v1 = swift_bridgeObjectRetain();
    v2 = sub_1C2A725E8(v1);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 24) = v2;
    OUTLINED_FUNCTION_33_0();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_116_0();
}

void sub_1C2A7185C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  NSObject *v30;
  NSObject *v31;
  char v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  os_log_type_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v5 = sub_1C2CFBB8C();
  v54 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5, v6);
  MEMORY[0x1E0C80A78](v7, v8);
  v9 = OUTLINED_FUNCTION_160();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9, v11);
  OUTLINED_FUNCTION_72_4();
  v51 = (void *)objc_opt_self();
  v12 = objc_msgSend(v51, sel_processInfo);

  sub_1C2CFE370();
  if (qword_1ED7AA038 != -1)
    swift_once();
  OUTLINED_FUNCTION_10_48();
  sub_1C2CFD7D0();
  v52 = v9;
  v53 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v53(v2, v9);
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1C2CFBB74();
  v14 = (void *)sub_1C2CFDD34();
  OUTLINED_FUNCTION_32_0();
  v15 = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  if (!(_DWORD)v15)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v16 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v16, (uint64_t)qword_1ED7AA1B0);
    v17 = OUTLINED_FUNCTION_22_32();
    v18 = v54;
    if (OUTLINED_FUNCTION_126_0(v17))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_9_7(&dword_1C28B6000, v19, v20, "Didn't find a bundle cache file, will compute a fresh cache file");
      OUTLINED_FUNCTION_11_0();
    }

    sub_1C2CFE364();
    OUTLINED_FUNCTION_10_48();
    OUTLINED_FUNCTION_4_47();
    OUTLINED_FUNCTION_1_40();
    v53(v2, v52);
    goto LABEL_10;
  }
  v21 = sub_1C2CFBB98();
  sub_1C2CFB9E8();
  OUTLINED_FUNCTION_27();
  sub_1C2CFB9DC();
  sub_1C2A74434();
  sub_1C2CFB9D0();
  v49 = v21;
  v48 = v5;
  v50 = a1;
  OUTLINED_FUNCTION_36_0();
  v22 = v55;
  v23 = v56;
  v24 = (unint64_t)v57;
  v25 = v58;
  v26 = v59;
  v27 = objc_msgSend(v51, sel_processInfo);
  v28 = objc_msgSend(v27, sel_operatingSystemVersionString);

  v29 = sub_1C2CFDD58();
  v31 = v30;

  if (v56 == v29 && v57 == v31)
  {
    OUTLINED_FUNCTION_55();
  }
  else
  {
    v33 = sub_1C2CFE9DC();
    OUTLINED_FUNCTION_32_0();
    if ((v33 & 1) == 0)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v34 = OUTLINED_FUNCTION_118();
      v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED7AA1B0);
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_50_0();
      swift_bridgeObjectRetain();
      sub_1C2CFD86C();
      v36 = OUTLINED_FUNCTION_22_32();
      if (os_log_type_enabled(v35, v36))
      {
        v47 = v35;
        v37 = OUTLINED_FUNCTION_6_0();
        v55 = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v37 = 136315394;
        v46 = v36;
        OUTLINED_FUNCTION_4_0();
        v60 = sub_1C28BB120(v23, v24, &v55);
        sub_1C2CFE4D8();
        OUTLINED_FUNCTION_29_2();
        OUTLINED_FUNCTION_29_2();
        OUTLINED_FUNCTION_29_2();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v37 + 12) = 2080;
        v38 = objc_msgSend(v51, sel_processInfo);
        v39 = objc_msgSend(v38, sel_operatingSystemVersionString);

        v40 = sub_1C2CFDD58();
        v42 = v41;

        v60 = sub_1C28BB120(v40, v42, &v55);
        sub_1C2CFE4D8();
        OUTLINED_FUNCTION_55();
        _os_log_impl(&dword_1C28B6000, v47, v46, "Cached FlowDelegate os version %s does not match current os version %s", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }
      OUTLINED_FUNCTION_27_19(v49);

      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_29_2();
      v18 = v54;
      sub_1C2CFE364();
      OUTLINED_FUNCTION_10_48();
      OUTLINED_FUNCTION_16_36();
      OUTLINED_FUNCTION_1_40();
      a1 = v50;
      v5 = v48;
      v53(v2, v52);
LABEL_10:
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v5);
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v26 = 0;
      goto LABEL_11;
    }
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v43 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v43, (uint64_t)qword_1ED7AA1B0);
  v44 = OUTLINED_FUNCTION_22_32();
  if (os_log_type_enabled(v31, v44))
  {
    v45 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_1C28B6000, v31, v44, "Loaded bundle cache successfully", v45, 2u);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_27_19(v49);

  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRetain();
  sub_1C2CFE364();
  OUTLINED_FUNCTION_10_48();
  OUTLINED_FUNCTION_4_47();
  sub_1C2CFD7C4();
  v53(v2, v52);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v50, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_70();
LABEL_11:
  *a2 = v22;
  a2[1] = v23;
  a2[2] = v24;
  a2[3] = v25;
  a2[4] = v26;
  OUTLINED_FUNCTION_1();
}

void sub_1C2A722D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = OUTLINED_FUNCTION_160();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_10();
  sub_1C2CFE370();
  if (qword_1ED7AA038 != -1)
    swift_once();
  OUTLINED_FUNCTION_40_18();
  sub_1C2CFD7D0();
  OUTLINED_FUNCTION_11_38();
  sub_1C2CFBA18();
  OUTLINED_FUNCTION_27();
  sub_1C2CFBA0C();
  sub_1C2A74470();
  v2 = sub_1C2CFBA00();
  sub_1C2CFBBEC();
  v3 = (void *)sub_1C2CFE364();
  OUTLINED_FUNCTION_40_18();
  OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_24_31();
  OUTLINED_FUNCTION_11_38();
  if (qword_1ED7AA040 != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v4, (uint64_t)qword_1ED7AA1B0);
  v5 = OUTLINED_FUNCTION_22_32();
  if (OUTLINED_FUNCTION_126_0(v5))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
    OUTLINED_FUNCTION_9_7(&dword_1C28B6000, v6, v7, "Wrote bundle cache successfully");
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_29_23(v2);

  swift_release();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A725E8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v1 = MEMORY[0x1E0DEE9E0];
  v37 = MEMORY[0x1E0DEE9E0];
  sub_1C2CB55BC(a1);
  v30 = v35;
  v2 = v36;
  v28 = (unint64_t)(v34 + 64) >> 6;
  result = swift_bridgeObjectRetain();
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v36)
    goto LABEL_3;
LABEL_2:
  v5 = __clz(__rbit64(v2));
  v2 &= v2 - 1;
  v6 = v5 | (v30 << 6);
  while (1)
  {
    v31 = v4;
    v11 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v6);
    v12 = *v11;
    v13 = v11[1];
    v14 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v6);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v29 = *v11;
      sub_1C2A28C14();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v16 = v14 + 40;
      do
      {
        swift_bridgeObjectRetain();
        if (sub_1C2A4988C())
        {
          MEMORY[0x1C3BC8A44]();
          if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C2CFDFEC();
          sub_1C2CFE040();
          sub_1C2CFDFC8();
        }
        v16 += 16;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      v17 = v31;
      v4 = MEMORY[0x1E0DEE9D8];
      v12 = v29;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = v4;
    }
    if (*(_QWORD *)(v1 + 24) <= *(_QWORD *)(v1 + 16))
    {
      sub_1C29C6444();
      v1 = v37;
    }
    sub_1C2CFEAB4();
    sub_1C2CFDCF8();
    result = sub_1C2CFEAD8();
    v18 = v1 + 64;
    v19 = -1 << *(_BYTE *)(v1 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v1 + 64 + 8 * (v20 >> 6))) == 0)
      break;
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v1 + 64 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_39:
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v27 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v22);
    *v27 = v12;
    v27[1] = v13;
    *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v22) = v17;
    ++*(_QWORD *)(v1 + 16);
    result = swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_2;
LABEL_3:
    v7 = v30 + 1;
    if (__OFADD__(v30, 1))
      goto LABEL_43;
    if (v7 >= v28)
      goto LABEL_41;
    v8 = *(_QWORD *)(v33 + 8 * v7);
    v9 = v30 + 1;
    if (!v8)
    {
      v9 = v30 + 2;
      if (v30 + 2 >= v28)
        goto LABEL_41;
      v8 = *(_QWORD *)(v33 + 8 * v9);
      if (!v8)
      {
        v9 = v30 + 3;
        if (v30 + 3 >= v28)
          goto LABEL_41;
        v8 = *(_QWORD *)(v33 + 8 * v9);
        if (!v8)
        {
          v9 = v30 + 4;
          if (v30 + 4 >= v28)
            goto LABEL_41;
          v8 = *(_QWORD *)(v33 + 8 * v9);
          if (!v8)
          {
            v9 = v30 + 5;
            if (v30 + 5 >= v28)
              goto LABEL_41;
            v8 = *(_QWORD *)(v33 + 8 * v9);
            if (!v8)
            {
              v10 = v30 + 6;
              while (v10 < v28)
              {
                v8 = *(_QWORD *)(v33 + 8 * v10++);
                if (v8)
                {
                  v9 = v10 - 1;
                  goto LABEL_18;
                }
              }
LABEL_41:
              sub_1C29B63B4();
              return v1;
            }
          }
        }
      }
    }
LABEL_18:
    v2 = (v8 - 1) & v8;
    v6 = __clz(__rbit64(v8)) + (v9 << 6);
    v30 = v9;
  }
  v23 = 0;
  v24 = (unint64_t)(63 - v19) >> 6;
  while (++v21 != v24 || (v23 & 1) == 0)
  {
    v25 = v21 == v24;
    if (v21 == v24)
      v21 = 0;
    v23 |= v25;
    v26 = *(_QWORD *)(v18 + 8 * v21);
    if (v26 != -1)
    {
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C2A729B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  uint64_t v17[3];
  _QWORD v18[5];
  unint64_t v19;

  v1 = *a1;
  v18[0] = MEMORY[0x1E0DEE9E0];
  sub_1C2CB55BC(v1);
  v2 = v18[1];
  v3 = v18[2];
  v4 = v18[4];
  v5 = v19;
  v6 = (unint64_t)(v18[3] + 64) >> 6;
  swift_bridgeObjectRetain_n();
  if (!v19)
    goto LABEL_3;
LABEL_2:
  v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v8 = v7 | (v4 << 6);
  while (1)
  {
    v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v8);
    v13 = v12[1];
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v8);
    v17[0] = *v12;
    v17[1] = v13;
    v17[2] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C2A72B98(v18, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_2;
LABEL_3:
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v9 >= v6)
      goto LABEL_24;
    v10 = *(_QWORD *)(v3 + 8 * v9);
    if (!v10)
    {
      v11 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 3;
      if (v4 + 3 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 4;
      if (v4 + 4 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 5;
      if (v4 + 5 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
      {
LABEL_14:
        v9 = v11;
      }
      else
      {
        v9 = v4 + 6;
        if (v4 + 6 >= v6)
          goto LABEL_24;
        v10 = *(_QWORD *)(v3 + 8 * v9);
        if (!v10)
        {
          v15 = v4 + 7;
          while (v15 < v6)
          {
            v10 = *(_QWORD *)(v3 + 8 * v15++);
            if (v10)
            {
              v9 = v15 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_bridgeObjectRelease();
          swift_release();
          return v18[0];
        }
      }
    }
LABEL_15:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v9 << 6);
    v4 = v9;
  }
  __break(1u);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1C2A72B98(_QWORD *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *@<X8>);
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v30;

  result = a2[2];
  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v4 = a2[1];
    v28 = *a2;
    v5 = 0;
    v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    v27 = v4;
    while (1)
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C28DB44C((uint64_t)v5);
      swift_isUniquelyReferenced_nonNull_native();
      v30 = (_QWORD *)*a1;
      *a1 = 0x8000000000000000;
      v9 = sub_1C28BFFFC(v8, v7);
      if (__OFADD__(v30[2], (v10 & 1) == 0))
        break;
      v11 = v9;
      v12 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7918D0);
      if ((sub_1C2CFE7CC() & 1) != 0)
      {
        v13 = sub_1C28BFFFC(v8, v7);
        if ((v12 & 1) != (v14 & 1))
          goto LABEL_22;
        v11 = v13;
      }
      *a1 = v30;
      swift_bridgeObjectRelease();
      v15 = (_QWORD *)*a1;
      if ((v12 & 1) == 0)
      {
        v15[(v11 >> 6) + 8] |= 1 << v11;
        v16 = (uint64_t *)(v15[6] + 16 * v11);
        *v16 = v8;
        v16[1] = v7;
        *(_QWORD *)(v15[7] + 8 * v11) = MEMORY[0x1E0DEE9D8];
        v17 = v15[2];
        v18 = v17 + 1;
        v19 = __OFADD__(v17, 1);
        swift_bridgeObjectRetain();
        if (v19)
          goto LABEL_21;
        v15[2] = v18;
      }
      swift_bridgeObjectRetain();
      v20 = v15[7];
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v20 + 8 * v11);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v20 + 8 * v11) = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C28FD5D0();
        v21 = v25;
        *(_QWORD *)(v20 + 8 * v11) = v25;
      }
      v23 = *(_QWORD *)(v21 + 16);
      if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
      {
        sub_1C28FD5D0();
        v21 = v26;
        *(_QWORD *)(v20 + 8 * v11) = v26;
      }
      v6 += 2;
      *(_QWORD *)(v21 + 16) = v23 + 1;
      v24 = v21 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v24 + 40) = v27;
      swift_bridgeObjectRelease();
      v5 = sub_1C2A72DF8;
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    result = sub_1C2CFEA3C();
    __break(1u);
  }
  return result;
}

void sub_1C2A72DF8(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C2A72E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1C2CFD800();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2CFE364();
  if (qword_1ED7AA038 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C2D002E0;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1C28BFD30();
  *(_QWORD *)(v5 + 32) = 0x73736563637553;
  *(_QWORD *)(v5 + 40) = 0xE700000000000000;
  sub_1C2CFD7F4();
  sub_1C2CFD7C4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_1C2A72F64(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  os_log_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  os_log_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  __int128 v64;
  __int128 v65;
  os_log_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  os_log_t v76;
  NSObject *v77;
  char *v78;
  uint64_t v79;
  os_log_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  void (*v84)(_QWORD, _QWORD, _QWORD);
  __int128 v85;
  __int128 v86;
  __int128 v87;
  char v88;
  uint64_t v89;

  v6 = sub_1C2CFBB8C();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6, v8);
  v77 = ((char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1E0C80A78](v9, v11);
  v78 = (char *)&v74 - v13;
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v80 = (os_log_t)((char *)&v74 - v16);
  MEMORY[0x1E0C80A78](v15, v17);
  v19 = (char *)&v74 - v18;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v20 = sub_1C2CFD878();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED7AA1B0);
  v81 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v81(v19, a1, v6);
  v82 = v21;
  v22 = sub_1C2CFD86C();
  v23 = sub_1C2CFE2C8();
  v83 = v7;
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v76 = v22;
    v25 = swift_slowAlloc();
    v79 = v6;
    v26 = (uint8_t *)v25;
    v75 = swift_slowAlloc();
    v84 = (void (*)(_QWORD, _QWORD, _QWORD))v75;
    *(_DWORD *)v26 = 136315138;
    v74 = v26 + 4;
    v27 = sub_1C2CFBB74();
    v89 = sub_1C28BB120(v27, v28, (uint64_t *)&v84);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    v29 = v79;
    v83 = *(_QWORD *)(v83 + 8);
    ((void (*)(char *))v83)(v19);
    v22 = v76;
    _os_log_impl(&dword_1C28B6000, v76, v24, "Loading bundle at path %s", v26, 0xCu);
    v30 = v75;
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v30, -1, -1);
    MEMORY[0x1C3BC9DE8](v26, -1, -1);
  }
  else
  {
    v29 = v6;
    v83 = *(_QWORD *)(v83 + 8);
    ((void (*)(char *, uint64_t))v83)(v19, v6);
  }

  sub_1C2A28C14();
  sub_1C2CFBB74();
  v31 = sub_1C2A4988C();
  if (v31)
  {
    v32 = v31;
    v33 = sub_1C2A6A488(v31);
    if (v34)
    {
      v35 = v33;
      v36 = v34;
      if ((sub_1C2A73728(v33, v34) & 1) != 0)
      {
        v37 = v78;
        v81(v78, a1, v29);
        swift_bridgeObjectRetain();
        v38 = sub_1C2CFD86C();
        v39 = sub_1C2CFE298();
        v40 = v39;
        if (os_log_type_enabled(v38, v39))
        {
          v41 = swift_slowAlloc();
          LODWORD(v82) = v40;
          v42 = v41;
          v81 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
          v84 = (void (*)(_QWORD, _QWORD, _QWORD))v81;
          *(_DWORD *)v42 = 136315394;
          v79 = v42 + 4;
          v80 = v38;
          v43 = sub_1C2CFBB74();
          v89 = sub_1C28BB120(v43, v44, (uint64_t *)&v84);
          sub_1C2CFE4D8();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v83)(v37, v29);
          *(_WORD *)(v42 + 12) = 2080;
          swift_bridgeObjectRetain();
          v89 = sub_1C28BB120(v35, v36, (uint64_t *)&v84);
          sub_1C2CFE4D8();
          swift_bridgeObjectRelease_n();
          v45 = v80;
          _os_log_impl(&dword_1C28B6000, v80, (os_log_type_t)v82, "Skipping bundle at path %s with ID %s; it is in the exclude list",
            (uint8_t *)v42,
            0x16u);
          v46 = v81;
          swift_arrayDestroy();
          MEMORY[0x1C3BC9DE8](v46, -1, -1);
          MEMORY[0x1C3BC9DE8](v42, -1, -1);

LABEL_23:
          return;
        }
        ((void (*)(char *, uint64_t))v83)(v37, v29);

        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
    }
    if (!sub_1C2A4995C(v32))
      sub_1C2CFDC8C();
    v55 = static IntentTopic.makeFromBundleInfoPlist(dictionary:)();
    swift_bridgeObjectRelease();
    v56 = *(_QWORD *)(v55 + 16);
    if (v56)
    {
      swift_bridgeObjectRetain();
      v61 = v55 + 56;
      do
      {
        v62 = *(_BYTE *)(v61 + 32);
        v63 = *(_BYTE *)(v61 - 23);
        LOBYTE(v84) = *(_BYTE *)(v61 - 24);
        BYTE1(v84) = v63;
        v85 = *(_OWORD *)(v61 - 16);
        v64 = *(_OWORD *)v61;
        v65 = *(_OWORD *)(v61 + 16);
        v61 += 64;
        v86 = v64;
        v87 = v65;
        v88 = v62;
        sub_1C2A73844((uint64_t)&v84, a2, a1, a3, v57, v58, v59, v60);
        --v56;
      }
      while (v56);

LABEL_25:
      swift_bridgeObjectRelease_n();
      return;
    }
    swift_bridgeObjectRelease();
    v68 = v77;
    v81((char *)v77, a1, v29);
    v48 = sub_1C2CFD86C();
    v69 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v48, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc();
      v82 = swift_slowAlloc();
      v84 = (void (*)(_QWORD, _QWORD, _QWORD))v82;
      *(_DWORD *)v70 = 136315138;
      v81 = (void (*)(char *, uint64_t, uint64_t))(v70 + 4);
      v71 = sub_1C2CFBB74();
      v89 = sub_1C28BB120(v71, v72, (uint64_t *)&v84);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      ((void (*)(NSObject *, uint64_t))v83)(v68, v29);
      _os_log_impl(&dword_1C28B6000, v48, v69, "Bundle at path %s has malformed or no entries for SupportDomains, SupportedIntents, SupportedInvocations, or SupportedPegasusComponents keys", v70, 0xCu);
      v73 = v82;
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v73, -1, -1);
      MEMORY[0x1C3BC9DE8](v70, -1, -1);

      goto LABEL_23;
    }

    v66 = v68;
    v67 = v29;
    goto LABEL_27;
  }
  v47 = v80;
  v81((char *)v80, a1, v29);
  v48 = sub_1C2CFD86C();
  v49 = sub_1C2CFE2B0();
  if (!os_log_type_enabled(v48, v49))
  {
    v66 = v47;
    v67 = v29;
LABEL_27:
    ((void (*)(os_log_t, uint64_t))v83)(v66, v67);
    goto LABEL_28;
  }
  v50 = swift_slowAlloc();
  v79 = v29;
  v51 = (uint8_t *)v50;
  v52 = swift_slowAlloc();
  v84 = (void (*)(_QWORD, _QWORD, _QWORD))v52;
  *(_DWORD *)v51 = 136315138;
  v53 = sub_1C2CFBB74();
  v89 = sub_1C28BB120(v53, v54, (uint64_t *)&v84);
  sub_1C2CFE4D8();
  swift_bridgeObjectRelease();
  ((void (*)(os_log_t, uint64_t))v83)(v47, v79);
  _os_log_impl(&dword_1C28B6000, v48, v49, "Could not initialize bundle for path %s", v51, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C3BC9DE8](v52, -1, -1);
  MEMORY[0x1C3BC9DE8](v51, -1, -1);
LABEL_28:

}

uint64_t sub_1C2A73728(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  if (qword_1ED7A8338 != -1)
    swift_once();
  v4 = off_1ED7A8328;
  v5 = *((_QWORD *)off_1ED7A8328 + 2);
  if (!v5)
    return 0;
  v6 = *((_QWORD *)off_1ED7A8328 + 4) == a1 && *((_QWORD *)off_1ED7A8328 + 5) == a2;
  if (v6 || (sub_1C2CFE9DC() & 1) != 0)
    return 1;
  if (v5 == 1)
    return 0;
  if (v4[6] == a1 && v4[7] == a2)
    return 1;
  result = sub_1C2CFE9DC();
  if ((result & 1) != 0)
    return 1;
  if (v5 == 2)
    return 0;
  v9 = v4 + 9;
  for (i = 2; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1C2CFE9DC() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v5)
      return result;
  }
  __break(1u);
  return result;
}

void sub_1C2A73844(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char v62;
  uint64_t v63;

  v10 = *(_BYTE *)(a1 + 1);
  v11 = *(_BYTE *)(a1 + 56);
  LOBYTE(v58) = *(_BYTE *)a1;
  BYTE1(v58) = v10;
  v59 = *(_OWORD *)(a1 + 8);
  v60 = *(_OWORD *)(a1 + 24);
  v61 = *(_OWORD *)(a1 + 40);
  v62 = v11;
  v12 = IntentTopic.cacheKey.getter(a1, (uint64_t)a2, a3, (uint64_t)a4, a5, a6, a7, a8, v49, v50, v51, v53, v55, v56, v58, v59);
  v14 = v13;
  swift_bridgeObjectRetain();
  v15 = sub_1C2CFBB74();
  v52 = v16;
  v54 = v15;
  swift_isUniquelyReferenced_nonNull_native();
  v57 = v12;
  v58 = *a2;
  v17 = v58;
  *a2 = 0x8000000000000000;
  v18 = sub_1C28BFFFC(v12, v14);
  if (__OFADD__(*(_QWORD *)(v17 + 16), (v19 & 1) == 0))
  {
    __break(1u);
  }
  else
  {
    v20 = v18;
    v21 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7918D0);
    if ((sub_1C2CFE7CC() & 1) != 0)
    {
      v22 = sub_1C28BFFFC(v57, v14);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_20;
      v20 = v22;
    }
    *a2 = v58;
    swift_bridgeObjectRelease();
    v24 = *a2;
    if ((v21 & 1) == 0)
    {
      sub_1C2B003E0(v20, v57, v14, MEMORY[0x1E0DEE9D8], v24);
      swift_bridgeObjectRetain();
    }
    v25 = *(_QWORD *)(v24 + 56) + 8 * v20;
    sub_1C2A70C10();
    v26 = *(_QWORD *)(*(_QWORD *)v25 + 16);
    sub_1C29429C8(v26);
    v27 = *(_QWORD *)v25;
    *(_QWORD *)(v27 + 16) = v26 + 1;
    v28 = v27 + 16 * v26;
    *(_QWORD *)(v28 + 32) = v54;
    *(_QWORD *)(v28 + 40) = v52;
    swift_bridgeObjectRelease();
    v29 = sub_1C2CFBB74();
    v31 = v30;
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v58 = *a4;
    v32 = v58;
    *a4 = 0x8000000000000000;
    v33 = sub_1C28BFFFC(v29, v31);
    v35 = v34;
    if (!__OFADD__(*(_QWORD *)(v32 + 16), (v34 & 1) == 0))
    {
      v36 = v33;
      if ((sub_1C2CFE7CC() & 1) == 0)
        goto LABEL_11;
      v37 = sub_1C28BFFFC(v29, v31);
      if ((v35 & 1) == (v38 & 1))
      {
        v36 = v37;
LABEL_11:
        *a4 = v58;
        swift_bridgeObjectRelease();
        v39 = *a4;
        if ((v35 & 1) == 0)
        {
          sub_1C2B003E0(v36, v29, v31, MEMORY[0x1E0DEE9D8], *a4);
          swift_bridgeObjectRetain();
        }
        v40 = *(_QWORD *)(v39 + 56) + 8 * v36;
        sub_1C2A70C10();
        v41 = *(_QWORD *)(*(_QWORD *)v40 + 16);
        sub_1C29429C8(v41);
        v42 = *(_QWORD *)v40;
        *(_QWORD *)(v42 + 16) = v41 + 1;
        v43 = v42 + 16 * v41;
        *(_QWORD *)(v43 + 32) = v57;
        *(_QWORD *)(v43 + 40) = v14;
        swift_bridgeObjectRelease();
        if (qword_1ED7AA040 == -1)
          goto LABEL_14;
        goto LABEL_19;
      }
LABEL_20:
      sub_1C2CFEA3C();
      __break(1u);
      return;
    }
  }
  __break(1u);
LABEL_19:
  swift_once();
LABEL_14:
  v44 = sub_1C2CFD878();
  __swift_project_value_buffer(v44, (uint64_t)qword_1ED7AA1B0);
  swift_bridgeObjectRetain();
  v45 = sub_1C2CFD86C();
  v46 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    v58 = v48;
    *(_DWORD *)v47 = 136315138;
    swift_bridgeObjectRetain();
    v63 = sub_1C28BB120(v57, v14, &v58);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C28B6000, v45, v46, "Plugin Cache entry for '%s'", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v48, -1, -1);
    MEMORY[0x1C3BC9DE8](v47, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1C2A73C74()
{
  id v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = sub_1C2A743D4(0xD000000000000017, 0x80000001C2D2FCB0);
  if (v1
    && (v2 = v1,
        v3 = (void *)sub_1C2CFDD34(),
        v4 = objc_msgSend(v2, sel_stringArrayForKey_, v3),
        v2,
        v3,
        v4))
  {
    v5 = (void *)sub_1C2CFDFA4();

  }
  else
  {
    v5 = (void *)MEMORY[0x1E0DEE9D8];
  }
  off_1ED7A8328 = v5;
}

uint64_t sub_1C2A73D44(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001C2D2FDD0 || (sub_1C2CFE9DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1C2CFE9DC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C2A73E38(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F6973726556736FLL;
  else
    return 0xD000000000000013;
}

uint64_t sub_1C2A73E78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A4218);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  OUTLINED_FUNCTION_10();
  v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A74244();
  sub_1C2CFEB08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8348);
  sub_1C2A74300();
  sub_1C2CFE958();
  if (!v1)
    sub_1C2CFE928();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
}

uint64_t sub_1C2A73FA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9B70);
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_10();
  v7 = objc_msgSend((id)objc_opt_self(), sel_processInfo);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2A74244();
  sub_1C2CFEAFC();
  if (v2)
    return OUTLINED_FUNCTION_353();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8348);
  sub_1C2A74280();
  sub_1C2CFE8E0();
  OUTLINED_FUNCTION_4_0();
  v8 = sub_1C2CFE8B0();
  v10 = v9;
  OUTLINED_FUNCTION_9_48();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_353();
  swift_bridgeObjectRelease();
  result = OUTLINED_FUNCTION_55();
  *a2 = v12;
  a2[1] = v8;
  a2[3] = 0;
  a2[4] = 0;
  a2[2] = v10;
  return result;
}

uint64_t sub_1C2A74170()
{
  char *v0;

  return sub_1C2A73E38(*v0);
}

uint64_t sub_1C2A74178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A73D44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A7419C()
{
  sub_1C2A74244();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A741C4()
{
  sub_1C2A74244();
  return sub_1C2CFEB2C();
}

double sub_1C2A741EC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1C2A73FA8(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C2A74230(_QWORD *a1)
{
  return sub_1C2A73E78(a1);
}

unint64_t sub_1C2A74244()
{
  unint64_t result;

  result = qword_1ED7A9B98;
  if (!qword_1ED7A9B98)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0B5BC, &type metadata for FlowPluginBundleCache.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7A9B98);
  }
  return result;
}

unint64_t sub_1C2A74280()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF7918C8;
  if (!qword_1EF7918C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8348);
    v2 = MEMORY[0x1E0DEA9A0];
    sub_1C2A74380(&qword_1EF7985F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EF7918C8);
  }
  return result;
}

unint64_t sub_1C2A74300()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED7A8350;
  if (!qword_1ED7A8350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8348);
    v2 = MEMORY[0x1E0DEA970];
    sub_1C2A74380(&qword_1ED7A8360, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1ED7A8350);
  }
  return result;
}

void sub_1C2A74380(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8468);
    v7 = a2;
    atomic_store(MEMORY[0x1C3BC9CD4](a3, v6, &v7), a1);
  }
  OUTLINED_FUNCTION_116_0();
}

id sub_1C2A743D4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1C2CFDD34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

unint64_t sub_1C2A74434()
{
  unint64_t result;

  result = qword_1ED7A9BB0;
  if (!qword_1ED7A9BB0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0B4D0, &type metadata for FlowPluginBundleCache);
    atomic_store(result, (unint64_t *)&qword_1ED7A9BB0);
  }
  return result;
}

unint64_t sub_1C2A74470()
{
  unint64_t result;

  result = qword_1ED7A4200;
  if (!qword_1ED7A4200)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0B4A8, &type metadata for FlowPluginBundleCache);
    atomic_store(result, (unint64_t *)&qword_1ED7A4200);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FlowPluginBundleCache.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2A744F8 + 4 * byte_1C2D0B485[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2A7452C + 4 * asc_1C2D0B480[v4]))();
}

uint64_t sub_1C2A7452C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A74534(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A7453CLL);
  return result;
}

uint64_t sub_1C2A74548(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A74550);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2A74554(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A7455C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlowPluginBundleCache.CodingKeys()
{
  return &type metadata for FlowPluginBundleCache.CodingKeys;
}

unint64_t sub_1C2A7457C()
{
  unint64_t result;

  result = qword_1EF7918D8;
  if (!qword_1EF7918D8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0B594, &type metadata for FlowPluginBundleCache.CodingKeys);
    atomic_store(result, &qword_1EF7918D8);
  }
  return result;
}

unint64_t sub_1C2A745BC()
{
  unint64_t result;

  result = qword_1ED7A9BA8;
  if (!qword_1ED7A9BA8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0B504, &type metadata for FlowPluginBundleCache.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7A9BA8);
  }
  return result;
}

unint64_t sub_1C2A745FC()
{
  unint64_t result;

  result = qword_1ED7A9BA0;
  if (!qword_1ED7A9BA0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0B52C, &type metadata for FlowPluginBundleCache.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7A9BA0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_40()
{
  return sub_1C2CFD7C4();
}

uint64_t OUTLINED_FUNCTION_7_43(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_9_48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_48()
{
  return sub_1C2CFD7F4();
}

uint64_t OUTLINED_FUNCTION_11_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_21_33()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_22_32()
{
  return sub_1C2CFE2C8();
}

uint64_t OUTLINED_FUNCTION_24_31()
{
  return sub_1C2CFD7C4();
}

uint64_t OUTLINED_FUNCTION_25_29()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

BOOL OUTLINED_FUNCTION_26_28(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_27_19(uint64_t a1)
{
  uint64_t v1;

  return sub_1C28C516C(a1, *(_QWORD *)(v1 - 200));
}

uint64_t OUTLINED_FUNCTION_28_25()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_29_23(uint64_t a1)
{
  unint64_t v1;

  return sub_1C28C516C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_39_21@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_40_18()
{
  return sub_1C2CFD7F4();
}

uint64_t OUTLINED_FUNCTION_41_20(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C28BB120(a1, a2, (uint64_t *)(v2 - 136));
}

void AnyFlow.toActingFlow()(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for FlowToActingFlowAdapter(0);
  v2 = OUTLINED_FUNCTION_27();
  v3 = OUTLINED_FUNCTION_38_0();
  sub_1C28C8F94(v3);
  *a1 = v2;
  OUTLINED_FUNCTION_18();
}

void Flow.toActingFlow()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_332();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v4, v3, a1);
  type metadata accessor for AnyFlow();
  if (OUTLINED_FUNCTION_157())
  {
    v8 = v11;
  }
  else
  {
    Flow.eraseToAnyFlow()();
    v8 = v9;
  }
  type metadata accessor for FlowToActingFlowAdapter(0);
  v10 = OUTLINED_FUNCTION_27();
  sub_1C28C8F94(v8);
  *a3 = v10;
  OUTLINED_FUNCTION_8_0();
}

unint64_t sub_1C2A74834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_45_17();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_79_10();
  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  sub_1C2CFD350();
  swift_bridgeObjectRetain();
  sub_1C2CFDE54();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15_36();
  v4 = v0 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_36_26(v4, v1);
  sub_1C2A76A74();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_47_19(v1);
  return 0xD000000000000021;
}

BOOL sub_1C2A74958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t EnumCaseMultiPayload;
  int v6;

  type metadata accessor for FlowToActingFlowAdapter.State(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_78_0();
  v3 = OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_122_4(v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload)
    OUTLINED_FUNCTION_43_4(EnumCaseMultiPayload, type metadata accessor for FlowToActingFlowAdapter.State);
  else
    __swift_destroy_boxed_opaque_existential_1(v0);
  return v6 != 0;
}

void sub_1C2A749FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C28CCF54(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A74A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C28CC554(a1, a2, a3, a4, a5);
}

void sub_1C2A74A38()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD *, uint64_t, uint64_t);
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60[4];

  OUTLINED_FUNCTION_9();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v57 = OUTLINED_FUNCTION_45_17();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_2_2();
  v55 = v9;
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v53 - v12;
  OUTLINED_FUNCTION_94_11();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_58_18();
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (uint64_t *)((char *)&v53 - v18);
  v20 = *(_QWORD *)(v0 + 24);
  v21 = (*(uint64_t (**)(uint64_t))(v20 + 80))(v4);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A70D8);
  v23 = *(int *)(v22 + 48);
  v24 = *(int *)(v22 + 64);
  if ((v21 & 1) != 0)
  {
    *v19 = v20;
    OUTLINED_FUNCTION_99_8(v22, (uint64_t)v19 + v23, type metadata accessor for Input);
    *((_BYTE *)v19 + v24) = 1;
    OUTLINED_FUNCTION_110_6();
    v25 = qword_1ED7A7130;
    sub_1C2CFD350();
    if (v25 != -1)
      swift_once();
    OUTLINED_FUNCTION_78_0();
    v26 = qword_1ED7AA100;
    v27 = *(_QWORD *)(qword_1ED7AA100 + 16);
    v56 = v2;
    if (v27)
    {
      v54 = v6;
      OUTLINED_FUNCTION_3_1();
      v28 = (uint64_t *)(v26 + 40);
      do
      {
        v29 = *v28;
        v30 = OUTLINED_FUNCTION_91_3();
        v31 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v29 + 16);
        OUTLINED_FUNCTION_3_7();
        v31(v19, v30, v29);
        OUTLINED_FUNCTION_21_5();
        v28 += 2;
        --v27;
      }
      while (v27);
      OUTLINED_FUNCTION_29();
      v6 = v54;
      v2 = v56;
    }
    sub_1C28C9F68((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FlowTraceEvent);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v32 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_76_2();
    v33 = sub_1C2CFD86C();
    v34 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = OUTLINED_FUNCTION_6_0();
      v54 = OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v60[0] = v54;
      *(_DWORD *)v35 = 136315394;
      v36 = *(_QWORD *)(v20 + 16);
      v37 = *(_QWORD *)(v20 + 24);
      OUTLINED_FUNCTION_3_1();
      *(_QWORD *)&v58 = sub_1C28BB120(v36, v37, (uint64_t *)v60);
      OUTLINED_FUNCTION_111_7();
      OUTLINED_FUNCTION_29();
      *(_WORD *)(v35 + 12) = 2080;
      v53 = v35 + 14;
      v38 = v56 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
      OUTLINED_FUNCTION_78_0();
      sub_1C28DD5D0(v38, (uint64_t)v13, type metadata accessor for FlowToActingFlowAdapter.State);
      sub_1C2A76A74();
      OUTLINED_FUNCTION_40_17((uint64_t)v13);
      v39 = OUTLINED_FUNCTION_71_0();
      *(_QWORD *)&v58 = sub_1C28BB120(v39, v40, v41);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_182();
      OUTLINED_FUNCTION_8();
      _os_log_impl(&dword_1C28B6000, v33, v34, "[Encore FlowToActingFlowAdapter] %s.accept() state: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_182();
    sub_1C29DD890((uint64_t)&v58);
    if (v59)
    {
      sub_1C28B99EC(&v58, (uint64_t)v60);
      sub_1C28B99EC(v60, (uint64_t)v13);
      swift_storeEnumTagMultiPayload();
      sub_1C28C53A0((uint64_t)v13, v55, type metadata accessor for FlowToActingFlowAdapter.State);
      OUTLINED_FUNCTION_21_0();
      v50 = OUTLINED_FUNCTION_71_0();
      sub_1C2A7AA50(v50, v51);
    }
    else
    {
      sub_1C28BB37C((uint64_t)&v58, &qword_1ED7A7300);
      swift_storeEnumTagMultiPayload();
      v52 = v2 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
      OUTLINED_FUNCTION_21_0();
      sub_1C2A7AA50((uint64_t)v13, v52);
    }
    swift_endAccess();
    *(_QWORD *)(v6 + 32) = 0;
    *(_OWORD *)v6 = 0u;
    *(_OWORD *)(v6 + 16) = 0u;
  }
  else
  {
    v42 = v6;
    *v1 = v20;
    OUTLINED_FUNCTION_99_8(v22, (uint64_t)v1 + v23, type metadata accessor for Input);
    *((_BYTE *)v1 + v24) = 0;
    OUTLINED_FUNCTION_110_6();
    v43 = qword_1ED7A7130;
    sub_1C2CFD350();
    if (v43 != -1)
      swift_once();
    OUTLINED_FUNCTION_78_0();
    v44 = qword_1ED7AA100;
    v45 = *(_QWORD *)(qword_1ED7AA100 + 16);
    if (v45)
    {
      swift_bridgeObjectRetain();
      v46 = (uint64_t *)(v44 + 40);
      do
      {
        v47 = *v46;
        v48 = OUTLINED_FUNCTION_91_3();
        v49 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v47 + 16);
        OUTLINED_FUNCTION_3_7();
        v49(v1, v48, v47);
        OUTLINED_FUNCTION_21_5();
        v46 += 2;
        --v45;
      }
      while (v45);
      OUTLINED_FUNCTION_70();
    }
    sub_1C28C9F68((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for FlowTraceEvent);
    v6 = v42;
    *(_QWORD *)v42 = 1;
    *(_OWORD *)(v42 + 8) = 0u;
    *(_OWORD *)(v42 + 24) = 0u;
  }
  *(_BYTE *)(v6 + 40) = 2;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A74F60()
{
  uint64_t v0;
  _QWORD *v1;

  v1[22] = v0;
  OUTLINED_FUNCTION_140_5();
  v1[23] = OUTLINED_FUNCTION_1_3();
  v1[24] = OUTLINED_FUNCTION_139_4();
  v1[25] = OUTLINED_FUNCTION_1_3();
  v1[26] = OUTLINED_FUNCTION_94_11();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = OUTLINED_FUNCTION_45_17();
  v1[30] = OUTLINED_FUNCTION_1_3();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A74FEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0[29];
  v2 = v0[22] + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_40_19(v2, v3, type metadata accessor for FlowToActingFlowAdapter.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 8)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_118();
    v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_38_0();
    v15 = v14;
    sub_1C2CFD86C();
    v16 = OUTLINED_FUNCTION_30();
    v17 = OUTLINED_FUNCTION_10_1(v16);
    v18 = v0[22];
    if (v17)
    {
      v19 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v20 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v19 = 136315138;
      v33 = v20;
      v21 = *(_QWORD *)(v18 + 24);
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      OUTLINED_FUNCTION_33_0();
      v0[20] = sub_1C28BB120(v23, v22, &v33);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v15, (os_log_type_t)v1, "[Encore FlowToActingFlowAdapter] %s.execute()", v19);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_127();

    v0[32] = *(_QWORD *)(v0[22] + 24);
    v30 = (_QWORD *)swift_task_alloc();
    v0[33] = v30;
    *v30 = v0;
    v30[1] = sub_1C2A755B0;
    OUTLINED_FUNCTION_158();
    return sub_1C28CEF8C(v31);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      sub_1C28C9F68(v0[30], type metadata accessor for FlowToActingFlowAdapter.State);
      OUTLINED_FUNCTION_18_31();
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_158();
      __asm { BR              X0 }
    }
    sub_1C28B99EC((__int128 *)v0[30], (uint64_t)(v0 + 2));
    if (qword_1ED7AA040 != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_118();
    v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_38_0();
    v7 = v6;
    sub_1C2CFD86C();
    v8 = OUTLINED_FUNCTION_30();
    if (os_log_type_enabled(v6, v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v32 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v9 = 136315138;
      v33 = v32;
      OUTLINED_FUNCTION_57_1();
      v10 = OUTLINED_FUNCTION_135_3();
      v0[21] = sub_1C28BB120(v10, v11, v12);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      swift_release();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v7, v8, "[Encore FlowToActingFlowAdapter] %s.prepare()", v9);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }
    swift_release();

    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    v25 = (_QWORD *)swift_task_alloc();
    v0[31] = v25;
    *v25 = v0;
    v25[1] = sub_1C2A753B8;
    OUTLINED_FUNCTION_158();
    return sub_1C2A75770(v26, v27, v28);
  }
}

uint64_t sub_1C2A753B8()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A753F0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char v16;
  char v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_BYTE *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_BYTE *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)v1 = *(_QWORD *)(*(_QWORD *)(v0 + 176) + 24);
  *(_BYTE *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 24) = v4;
  *(_QWORD *)(v1 + 32) = v5;
  OUTLINED_FUNCTION_57_0();
  v6 = qword_1ED7A7130;
  sub_1C2CFD350();
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_221();
  if (v6 != -1)
    swift_once();
  OUTLINED_FUNCTION_78_0();
  v7 = qword_1ED7AA100;
  v8 = *(_QWORD *)(qword_1ED7AA100 + 16);
  if (v8)
  {
    v16 = v4;
    v17 = v2;
    v18 = v5;
    OUTLINED_FUNCTION_57_1();
    v9 = (uint64_t *)(v7 + 40);
    do
    {
      v10 = *(_QWORD *)(v0 + 224);
      v11 = *v9;
      ObjectType = swift_getObjectType();
      v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
      swift_unknownObjectRetain();
      v13(v10, ObjectType, v11);
      swift_unknownObjectRelease();
      v9 += 2;
      --v8;
    }
    while (v8);
    OUTLINED_FUNCTION_254();
    v5 = v18;
    v4 = v16;
    v2 = v17;
  }
  v14 = *(_QWORD *)(v0 + 200);
  sub_1C28C9F68(*(_QWORD *)(v0 + 224), (uint64_t (*)(_QWORD))type metadata accessor for FlowTraceEvent);
  *(_BYTE *)v14 = v2;
  *(_QWORD *)(v14 + 8) = v3;
  *(_BYTE *)(v14 + 16) = v4;
  *(_QWORD *)(v14 + 24) = v5;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_221();
  sub_1C2A76FD8();
  OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_147();
  sub_1C28C9F68(v14, type metadata accessor for FlowToActingFlowAdapter.Event);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_18_31();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2A755B0()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A755E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD **)(v0 + 216);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A70D0);
  v4 = (uint64_t)v2 + *(int *)(v3 + 48);
  *v2 = v1;
  OUTLINED_FUNCTION_99_8(v3, v4, type metadata accessor for ExecuteResponse);
  OUTLINED_FUNCTION_162_0();
  v5 = qword_1ED7A7130;
  OUTLINED_FUNCTION_221();
  if (v5 != -1)
    swift_once();
  OUTLINED_FUNCTION_78_0();
  v6 = qword_1ED7AA100;
  v7 = *(_QWORD *)(qword_1ED7AA100 + 16);
  if (v7)
  {
    OUTLINED_FUNCTION_33_0();
    v8 = (uint64_t *)(v6 + 40);
    do
    {
      v9 = *(_QWORD *)(v0 + 216);
      v10 = *v8;
      ObjectType = swift_getObjectType();
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      swift_unknownObjectRetain();
      v12(v9, ObjectType, v10);
      swift_unknownObjectRelease();
      v8 += 2;
      --v7;
    }
    while (v7);
    OUTLINED_FUNCTION_8();
  }
  v13 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 184);
  sub_1C28C9F68(*(_QWORD *)(v0 + 216), (uint64_t (*)(_QWORD))type metadata accessor for FlowTraceEvent);
  sub_1C28DD5D0(v14, v13, type metadata accessor for ExecuteResponse);
  OUTLINED_FUNCTION_135_3();
  OUTLINED_FUNCTION_262();
  sub_1C2A76FD8();
  OUTLINED_FUNCTION_43_4(v15, type metadata accessor for FlowToActingFlowAdapter.Event);
  OUTLINED_FUNCTION_40_17(v14);
  OUTLINED_FUNCTION_18_31();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2A75770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2A7578C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1C2A75830;
  return sub_1C2CFE9A0();
}

uint64_t sub_1C2A75830()
{
  uint64_t v0;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C2A75860()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  _QWORD v30[6];
  uint64_t v31;
  unint64_t v32;

  OUTLINED_FUNCTION_9();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_94_11();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_30_25();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_125_2();
  v10 = v8 - v9;
  v13 = MEMORY[0x1E0C80A78](v11, v12);
  v15 = (_QWORD *)((char *)v30 - v14);
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)v30 - v17;
  v19 = v2 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
  OUTLINED_FUNCTION_78_0();
  sub_1C28DD5D0(v19, (uint64_t)v18, type metadata accessor for FlowToActingFlowAdapter.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 8)
    goto LABEL_4;
  if (!EnumCaseMultiPayload)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
LABEL_4:
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_1C2CFE670();
    OUTLINED_FUNCTION_19_34();
    v30[0] = v2;
    v30[1] = v3;
    sub_1C2CFD350();
    OUTLINED_FUNCTION_19_0();
    sub_1C2CFDE54();
    swift_release();
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_2_0();
    sub_1C2CFDE54();
    sub_1C28DD5D0(v19, v10, type metadata accessor for FlowToActingFlowAdapter.State);
    sub_1C2A76A74();
    OUTLINED_FUNCTION_142_5();
    OUTLINED_FUNCTION_53_1();
    sub_1C28C9F68(v10, type metadata accessor for FlowToActingFlowAdapter.State);
    OUTLINED_FUNCTION_15_36();
    v2 = v30[0];
    swift_getErrorValue();
    sub_1C2CFEA78();
    OUTLINED_FUNCTION_142_5();
    swift_bridgeObjectRelease();
    v21 = v32;
    *v15 = v31;
    v15[1] = v21;
    OUTLINED_FUNCTION_57_0();
    sub_1C28C53A0((uint64_t)v15, v10, type metadata accessor for FlowToActingFlowAdapter.State);
    OUTLINED_FUNCTION_21_0();
    sub_1C2A7AA50(v10, v19);
    swift_endAccess();
    goto LABEL_6;
  }
  sub_1C28C9F68((uint64_t)v18, type metadata accessor for FlowToActingFlowAdapter.State);
LABEL_6:
  *v0 = *(_QWORD *)(v2 + 24);
  OUTLINED_FUNCTION_262();
  v22 = qword_1ED7A7130;
  OUTLINED_FUNCTION_38_0();
  if (v22 != -1)
    swift_once();
  v23 = OUTLINED_FUNCTION_78_0();
  v24 = qword_1ED7AA100;
  v25 = *(_QWORD *)(qword_1ED7AA100 + 16);
  if (v25)
  {
    swift_bridgeObjectRetain();
    v26 = (uint64_t *)(v24 + 40);
    do
    {
      v27 = *v26;
      OUTLINED_FUNCTION_91_3();
      v28 = *(void (**)(uint64_t))(v27 + 16);
      OUTLINED_FUNCTION_3_7();
      v29 = OUTLINED_FUNCTION_135_3();
      v28(v29);
      OUTLINED_FUNCTION_21_5();
      v26 += 2;
      --v25;
    }
    while (v25);
    v23 = OUTLINED_FUNCTION_70();
  }
  OUTLINED_FUNCTION_43_4(v23, (uint64_t (*)(_QWORD))type metadata accessor for FlowTraceEvent);
  OUTLINED_FUNCTION_1();
}

void sub_1C2A75B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[10];

  OUTLINED_FUNCTION_9();
  v51 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791938);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_332();
  type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = OUTLINED_FUNCTION_31_23(v6, v44[0]);
  v53 = type metadata accessor for FlowActionType(v7);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_79_5();
  v47 = v10;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791940);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_125_2();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16, v17);
  v49 = (char *)v44 - v18;
  v52 = OUTLINED_FUNCTION_45_17();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v19, v20);
  OUTLINED_FUNCTION_125_2();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v25, v26);
  v54 = (uint64_t)v44 - v27;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v28 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_76_2();
  v29 = sub_1C2CFD86C();
  v30 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = OUTLINED_FUNCTION_6_0();
    v45 = OUTLINED_FUNCTION_6_0();
    v56[0] = v45;
    *(_DWORD *)v31 = 136315394;
    v32 = *(_QWORD *)(v0 + 24);
    v50 = v0;
    v34 = *(_QWORD *)(v32 + 16);
    v33 = *(_QWORD *)(v32 + 24);
    OUTLINED_FUNCTION_57_1();
    v55 = sub_1C28BB120(v34, v33, v56);
    OUTLINED_FUNCTION_111_7();
    OUTLINED_FUNCTION_254();
    *(_WORD *)(v31 + 12) = 2080;
    v44[1] = v31 + 14;
    v35 = v50 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
    OUTLINED_FUNCTION_78_0();
    v36 = v35;
    v37 = v54;
    OUTLINED_FUNCTION_36_26(v36, v54);
    sub_1C2A76A74();
    v39 = v38;
    v46 = v15;
    sub_1C28C9F68(v37, type metadata accessor for FlowToActingFlowAdapter.State);
    v55 = OUTLINED_FUNCTION_211_0(v39, v40, v56);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_182();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C28B6000, v29, v30, "[Encore FlowToActingFlowAdapter] %s.action state: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_182();
  v41 = v0 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_40_19(v41, v42, type metadata accessor for FlowToActingFlowAdapter.State);
  v43 = (char *)&loc_1C2A75F14 + 4 * word_1C2D0B610[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1C2A76860(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1C29DD900();
  if (v2)
  {
    OUTLINED_FUNCTION_62_17(v2 + 16);
    swift_release();
  }
  else
  {
    a1[3] = type metadata accessor for FlowToActingFlowAdapter(0);
    a1[4] = (uint64_t)&off_1EF791908;
    v3 = OUTLINED_FUNCTION_27();
    v4 = OUTLINED_FUNCTION_38_0();
    sub_1C28C8F94(v4);
    *a1 = v3;
    OUTLINED_FUNCTION_18();
  }
}

uint64_t sub_1C2A768CC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;

  v5 = *a1;
  sub_1C2ABAFC8(a2, a3);
  v12 = v5;
  v6 = sub_1C2ABB6B4(&v12);
  OUTLINED_FUNCTION_36_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = type metadata accessor for LifeCycleModifierFlow(0, AssociatedTypeWitness, v8, v9);
  a4[3] = v10;
  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for LifeCycleModifierFlow<A>, v10);
  a4[4] = result;
  *a4 = v6;
  return result;
}

void sub_1C2A76978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[32];

  type metadata accessor for FlowToActingFlowAdapter.Event(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_332();
  OUTLINED_FUNCTION_162_0();
  sub_1C2A76FD8();
  OUTLINED_FUNCTION_107_9(v3);
  if (a3)
  {
    sub_1C28BB340(a1, (uint64_t)v8);
    (*(void (**)(_BYTE *))(a3 + 16))(v8);
    sub_1C28BB37C((uint64_t)v8, &qword_1ED7A8480);
  }
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A76A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for FlowToActingFlowAdapter.Event(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_79_10();
  OUTLINED_FUNCTION_162_0();
  sub_1C2A76FD8();
  OUTLINED_FUNCTION_47_19(v0);
  OUTLINED_FUNCTION_18();
}

void sub_1C2A76A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  char *v6;
  uint64_t v7;

  type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_30_25();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_23_35(v4, v5, v7);
  v6 = (char *)sub_1C2A76B04 + 4 * byte_1C2D0B622[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1C2A76B04()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_108_9();
  OUTLINED_FUNCTION_72_11(v1 & 0xFFFFFFFFFFFFLL | 0x2865000000000000);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A72F8);
  OUTLINED_FUNCTION_25_30();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_72_6();
  __swift_destroy_boxed_opaque_existential_1(v0 - 88);
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A76E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  char *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_140_5();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_139_4();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_23_35(v4, v5, v7);
  v6 = (char *)sub_1C2A76EC8 + 4 * byte_1C2D0B62B[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1C2A76EC8()
{
  char *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = *v0;
  v3 = *((_QWORD *)v0 + 1);
  v4 = v0[16];
  v5 = *((_QWORD *)v0 + 3);
  *(_QWORD *)(v1 - 64) = 0;
  *(_QWORD *)(v1 - 56) = 0xE000000000000000;
  OUTLINED_FUNCTION_65_12();
  *(_BYTE *)(v1 - 96) = v2;
  *(_QWORD *)(v1 - 88) = v3;
  *(_BYTE *)(v1 - 80) = v4;
  *(_QWORD *)(v1 - 72) = v5;
  sub_1C2CFE7C0();
  OUTLINED_FUNCTION_72_6();
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A76FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[13];

  OUTLINED_FUNCTION_9();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_31_23(v6, v53);
  v57 = type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_79_5();
  v55 = v9;
  v56 = OUTLINED_FUNCTION_94_11();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = OUTLINED_FUNCTION_140_5();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_97_0();
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791928);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_45_17();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_58_18();
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v53 - v22;
  v62 = OUTLINED_FUNCTION_139_4();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v24, v25);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v26, v27);
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v28, v29);
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v30, v31);
  v33 = (char *)&v53 - v32;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v34 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED7AA1B0);
  v64 = v3;
  sub_1C28DD5D0(v3, (uint64_t)v33, type metadata accessor for FlowToActingFlowAdapter.Event);
  OUTLINED_FUNCTION_76_2();
  v35 = sub_1C2CFD86C();
  v36 = sub_1C2CFE2A4();
  HIDWORD(v60) = v36;
  v37 = os_log_type_enabled(v35, v36);
  v65 = v0;
  v59 = v13;
  if (v37)
  {
    v38 = OUTLINED_FUNCTION_6_0();
    v54 = OUTLINED_FUNCTION_6_0();
    v67[0] = v54;
    *(_DWORD *)v38 = 136315650;
    v39 = *(_QWORD *)(v0 + 24);
    v40 = *(_QWORD *)(v39 + 16);
    v41 = *(_QWORD *)(v39 + 24);
    swift_bridgeObjectRetain();
    v66 = sub_1C28BB120(v40, v41, v67);
    OUTLINED_FUNCTION_111_7();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    v42 = v65 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
    OUTLINED_FUNCTION_78_0();
    v61 = v1;
    OUTLINED_FUNCTION_122_4(v42, (uint64_t)v23);
    sub_1C2A76A74();
    v44 = v43;
    OUTLINED_FUNCTION_107_9((uint64_t)v23);
    v66 = OUTLINED_FUNCTION_211_0(v44, v45, v67);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_182();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 22) = 2080;
    sub_1C2A76E18();
    v66 = sub_1C28BB120(v46, v47, v67);
    sub_1C2CFE4D8();
    v48 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_46_10(v48, type metadata accessor for FlowToActingFlowAdapter.Event);
    _os_log_impl(&dword_1C28B6000, v35, BYTE4(v60), "[Encore FlowToActingFlowAdapter] %s.handle() state: %s event: %s", (uint8_t *)v38, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }
  v49 = OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_46_10(v49, type metadata accessor for FlowToActingFlowAdapter.Event);

  v50 = v0 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
  OUTLINED_FUNCTION_78_0();
  v51 = v1 + *(int *)(v63 + 48);
  sub_1C28DD5D0(v50, v1, type metadata accessor for FlowToActingFlowAdapter.State);
  sub_1C28DD5D0(v64, v51, type metadata accessor for FlowToActingFlowAdapter.Event);
  v52 = (char *)&loc_1C2A77470 + 4 * byte_1C2D0B62F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1C2A77CD4()
{
  sub_1C2A75B4C();
}

void sub_1C2A77CF4()
{
  sub_1C2A74A38();
}

BOOL sub_1C2A77D14()
{
  return sub_1C2A74958();
}

uint64_t sub_1C2A77D38()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C2984980;
  return sub_1C2A74F60();
}

void sub_1C2A77D80()
{
  sub_1C2A75860();
}

void sub_1C2A77DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C2A749FC(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2A77DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C2A74A18(a1, a2, a3, a4, a5);
}

uint64_t (*sub_1C2A77DE0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;

  a1[1] = *v5;
  sub_1C2A749FC((uint64_t)a1, a2, a3, a4, a5);
  *a1 = v7;
  return sub_1C2A77E18;
}

uint64_t sub_1C2A77E18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((a2 & 1) == 0)
    return sub_1C2A74A18(*a1, a2, a3, a4, a5);
  v5 = OUTLINED_FUNCTION_221();
  sub_1C2A74A18(v5, v6, v7, v8, v9);
  return swift_release();
}

unint64_t sub_1C2A77E58()
{
  return sub_1C2A74834();
}

uint64_t sub_1C2A77E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF791960);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1C2A7ABCC;
  *(_QWORD *)(v13 + 24) = v12;
  (*(void (**)(uint64_t (*)(char *), uint64_t, uint64_t, uint64_t))(a4 + 8))(sub_1C2A7AC2C, v13, a3, a4);
  return swift_release();
}

uint64_t sub_1C2A77F94()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF791960);
  return sub_1C2CFE0D0();
}

uint64_t sub_1C2A77FF0(char *a1, uint64_t (*a2)(_BYTE *))
{
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _BYTE v8[8];
  uint64_t v9;
  char v10;
  uint64_t v11;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v5 = a1[16];
  v6 = *((_QWORD *)a1 + 3);
  v8[0] = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  sub_1C2CFD350();
  sub_1C2CFD350();
  return a2(v8);
}

void sub_1C2A78054()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[32];
  uint64_t v22;

  OUTLINED_FUNCTION_9();
  v2 = v1;
  type metadata accessor for FlowActionType(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_11_4();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF787D38);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_125_2();
  v10 = v8 - v9;
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v19 - v13;
  if ((v2 & 1) != 0)
  {
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    v15 = v10 + *(int *)(v5 + 32);
    OUTLINED_FUNCTION_54_21((uint64_t)v21, v15);
    *(_BYTE *)(v10 + *(int *)(v5 + 36)) = 0;
    v20 = v0 + 32;
    OUTLINED_FUNCTION_85_11();
    OUTLINED_FUNCTION_54_21(v15, v0 + 32);
    *(_BYTE *)(v0 + 72) = 0;
    OUTLINED_FUNCTION_262();
    sub_1C28C53A0(v0, v10, type metadata accessor for FlowActionType);
    OUTLINED_FUNCTION_54_21(v15, (uint64_t)v21);
    v16 = (uint64_t)&v14[*(int *)(v5 + 32)];
    OUTLINED_FUNCTION_54_21((uint64_t)v21, v16);
    v14[*(int *)(v5 + 36)] = 1;
    OUTLINED_FUNCTION_85_11();
    OUTLINED_FUNCTION_54_21(v16, v20);
    *(_BYTE *)(v0 + 72) = 1;
    OUTLINED_FUNCTION_262();
    sub_1C28C53A0(v0, (uint64_t)v14, type metadata accessor for FlowActionType);
    OUTLINED_FUNCTION_77_13(v10);
    v17 = OUTLINED_FUNCTION_132_4((uint64_t)&protocol witness table for Conclude<A>);
    sub_1C2921AEC((uint64_t)v14, (uint64_t)v17, &qword_1EF787D38);
  }
  else
  {
    v18 = OUTLINED_FUNCTION_132_4((uint64_t)&protocol witness table for Conclude<A>);
    sub_1C2A9DCA4((uint64_t)v18);
  }
  OUTLINED_FUNCTION_1();
}

void sub_1C2A7820C()
{
  sub_1C2A78054();
}

uint64_t ActingFlow.isNoop.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3[5];

  ActingFlow.unwrap.getter(a1, a2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791628);
  return OUTLINED_FUNCTION_157();
}

uint64_t ActingFlow.isAdaptedFlow.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4[5];

  ActingFlow.unwrap.getter(a1, a2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791628);
  type metadata accessor for FlowToActingFlowAdapter(0);
  v2 = OUTLINED_FUNCTION_157();
  if ((_DWORD)v2)
    swift_release();
  return v2;
}

uint64_t sub_1C2A782C0()
{
  return type metadata accessor for FlowToActingFlowAdapter(0);
}

uint64_t sub_1C2A782C8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FlowToActingFlowAdapter.State(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_UNKNOWN **sub_1C2A7834C()
{
  return &off_1EF791908;
}

_UNKNOWN **sub_1C2A78358()
{
  return &off_1E7C84920;
}

_UNKNOWN **sub_1C2A78364()
{
  return &off_1EF791908;
}

_UNKNOWN **sub_1C2A78370()
{
  return &off_1E7C84920;
}

char *sub_1C2A7837C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  void *__src;
  int *__srca;
  void *__srcb;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *__dst;
  char *__dsta;
  void *__dstb;
  char *__dstc;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    sub_1C2CFD350();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v7;
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        goto LABEL_40;
      case 1u:
        v9 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v9;
        (**(void (***)(void *, const void *))(v9 - 8))(a1, a2);
        v10 = *((_QWORD *)a2 + 5);
        v11 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = v10;
        *((_QWORD *)a1 + 6) = v11;
        sub_1C2CFD350();
        sub_1C2CFD350();
        goto LABEL_40;
      case 2u:
        *(_WORD *)a1 = *(_WORD *)a2;
        v25 = *((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = v25;
        *((_QWORD *)a1 + 2) = v26;
        sub_1C2CFD350();
        sub_1C2CFD350();
        goto LABEL_40;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        sub_1C2CFD350();
        goto LABEL_40;
      case 4u:
        v27 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v27;
        swift_bridgeObjectRetain();
        goto LABEL_40;
      case 6u:
        v12 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v12;
        v13 = (int *)type metadata accessor for PluginAction();
        v14 = v13[5];
        v15 = &a1[v14];
        v16 = &a2[v14];
        v17 = sub_1C2CFBCAC();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v119 = v18;
        v120 = v17;
        v18(v15, v16, v17);
        v19 = (int *)type metadata accessor for Input(0);
        v20 = v19[5];
        v21 = &v15[v20];
        v22 = &v16[v20];
        v23 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v24 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
            goto LABEL_27;
          case 1u:
            v31 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v21, v22, v31);
            v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            *(_QWORD *)&v21[*(int *)(v32 + 48)] = *(_QWORD *)&v22[*(int *)(v32 + 48)];
            sub_1C2CFD350();
            goto LABEL_27;
          case 2u:
            v33 = *((_QWORD *)v22 + 1);
            *(_QWORD *)v21 = *(_QWORD *)v22;
            *((_QWORD *)v21 + 1) = v33;
            *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_27;
          case 3u:
            *(_QWORD *)v21 = *(_QWORD *)v22;
            swift_unknownObjectRetain();
            goto LABEL_27;
          case 4u:
            v34 = sub_1C2CFBD9C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v21, v22, v34);
            goto LABEL_27;
          case 5u:
            v35 = *(void **)v22;
            *(_QWORD *)v21 = *(_QWORD *)v22;
            v36 = v35;
            goto LABEL_27;
          case 6u:
            v37 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v21, v22, v37);
            v38 = type metadata accessor for USOParse();
            v39 = *(int *)(v38 + 20);
            v111 = v38;
            __dst = &v21[v39];
            v40 = &v22[v39];
            v41 = sub_1C2CFBF28();
            __src = v40;
            v42 = (uint64_t)v40;
            v43 = v41;
            if (__swift_getEnumTagSinglePayload(v42, 1, v41))
            {
              v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(__dst, __src, v43);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v43);
            }
            v49 = *(int *)(v111 + 24);
            v50 = &v21[v49];
            v51 = &v22[v49];
            v52 = *((_QWORD *)v51 + 1);
            *(_QWORD *)v50 = *(_QWORD *)v51;
            *((_QWORD *)v50 + 1) = v52;
            v53 = *(int *)(v111 + 28);
            v54 = &v21[v53];
            v55 = &v22[v53];
            v54[4] = v55[4];
            *(_DWORD *)v54 = *(_DWORD *)v55;
            swift_bridgeObjectRetain();
            goto LABEL_27;
          case 7u:
            v45 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v21, v22, v45);
            v46 = type metadata accessor for USOParse();
            v47 = *(int *)(v46 + 20);
            __srca = (int *)v46;
            v112 = &v21[v47];
            __dsta = &v22[v47];
            v106 = sub_1C2CFBF28();
            if (__swift_getEnumTagSinglePayload((uint64_t)__dsta, 1, v106))
            {
              v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v112, __dsta, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *))(*(_QWORD *)(v106 - 8) + 16))(v112, __dsta);
              __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v106);
            }
            v56 = __srca[6];
            v57 = &v21[v56];
            v58 = &v22[v56];
            __dstb = (void *)*((_QWORD *)v58 + 1);
            *(_QWORD *)v57 = *(_QWORD *)v58;
            *((_QWORD *)v57 + 1) = __dstb;
            v59 = __srca[7];
            v60 = &v21[v59];
            v61 = &v22[v59];
            v60[4] = v61[4];
            *(_DWORD *)v60 = *(_DWORD *)v61;
            v62 = (int *)type metadata accessor for LinkParse();
            v63 = v62[5];
            v64 = &v21[v63];
            v65 = &v22[v63];
            v113 = *((_QWORD *)v65 + 1);
            *(_QWORD *)v64 = *(_QWORD *)v65;
            *((_QWORD *)v64 + 1) = v113;
            v66 = v62[6];
            v67 = &v21[v66];
            v68 = &v22[v66];
            __srcb = (void *)*((_QWORD *)v68 + 1);
            *(_QWORD *)v67 = *(_QWORD *)v68;
            *((_QWORD *)v67 + 1) = __srcb;
            v69 = v62[7];
            v70 = &v21[v69];
            v71 = &v22[v69];
            v72 = *((_QWORD *)v71 + 1);
            *(_QWORD *)v70 = *(_QWORD *)v71;
            *((_QWORD *)v70 + 1) = v72;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_27:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
            break;
        }
        *(_QWORD *)&v15[v19[6]] = *(_QWORD *)&v16[v19[6]];
        v73 = v19[7];
        v74 = &v15[v73];
        v75 = &v16[v73];
        v76 = *(_QWORD *)&v16[v73 + 24];
        swift_bridgeObjectRetain();
        if (v76)
        {
          v77 = *((_QWORD *)v75 + 4);
          *((_QWORD *)v74 + 3) = v76;
          *((_QWORD *)v74 + 4) = v77;
          (**(void (***)(char *, char *, uint64_t))(v76 - 8))(v74, v75, v76);
        }
        else
        {
          v78 = *((_OWORD *)v75 + 1);
          *(_OWORD *)v74 = *(_OWORD *)v75;
          *((_OWORD *)v74 + 1) = v78;
          *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
        }
        v15[v19[8]] = v16[v19[8]];
        *(_QWORD *)&a1[v13[6]] = *(_QWORD *)&a2[v13[6]];
        v79 = v13[7];
        v80 = *(void **)&a2[v79];
        *(_QWORD *)&a1[v79] = v80;
        v81 = v13[8];
        v82 = &a1[v81];
        v83 = &a2[v81];
        v84 = *((_QWORD *)v83 + 1);
        *(_QWORD *)v82 = *(_QWORD *)v83;
        *((_QWORD *)v82 + 1) = v84;
        v85 = v13[9];
        v86 = &a1[v85];
        v87 = &a2[v85];
        v88 = type metadata accessor for ActionParaphrase(0);
        swift_bridgeObjectRetain();
        v89 = v80;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v88))
        {
          v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
          memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          v91 = *((_QWORD *)v87 + 1);
          *(_QWORD *)v86 = *(_QWORD *)v87;
          *((_QWORD *)v86 + 1) = v91;
          v92 = *(int *)(v88 + 20);
          v93 = &v86[v92];
          v94 = &v87[v92];
          v95 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v95))
          {
            v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
            memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            v97 = *((_QWORD *)v94 + 1);
            *(_QWORD *)v93 = *(_QWORD *)v94;
            *((_QWORD *)v93 + 1) = v97;
            v98 = *((_QWORD *)v94 + 3);
            *((_QWORD *)v93 + 2) = *((_QWORD *)v94 + 2);
            *((_QWORD *)v93 + 3) = v98;
            v99 = *(int *)(v95 + 24);
            v114 = &v94[v99];
            __dstc = &v93[v99];
            v100 = sub_1C2CFC114();
            v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v107(__dstc, v114, v100);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v95);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v88);
        }
        v101 = v13[10];
        v102 = &a1[v101];
        v103 = &a2[v101];
        if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v120))
        {
          v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
          memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          v119(v102, v103, v120);
          __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v120);
        }
        goto LABEL_40;
      case 7u:
        v28 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v28;
        v29 = *((_QWORD *)a2 + 2);
        v30 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = v29;
        *((_QWORD *)a1 + 3) = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_40:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

char *sub_1C2A78BBC(char *a1, char *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  int *v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  const void *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
      goto LABEL_38;
    case 1u:
      v7 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v7;
      (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
      v8 = *((_QWORD *)a2 + 5);
      v9 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = v8;
      *((_QWORD *)a1 + 6) = v9;
      sub_1C2CFD350();
      sub_1C2CFD350();
      goto LABEL_38;
    case 2u:
      *(_WORD *)a1 = *(_WORD *)a2;
      v23 = *((_QWORD *)a2 + 1);
      v24 = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 1) = v23;
      *((_QWORD *)a1 + 2) = v24;
      sub_1C2CFD350();
      sub_1C2CFD350();
      goto LABEL_38;
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      sub_1C2CFD350();
      goto LABEL_38;
    case 4u:
      v25 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v25;
      swift_bridgeObjectRetain();
      goto LABEL_38;
    case 6u:
      v10 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v10;
      v11 = (int *)type metadata accessor for PluginAction();
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_1C2CFBCAC();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v116 = v16;
      v117 = v15;
      v16(v13, v14, v15);
      v17 = (int *)type metadata accessor for Input(0);
      v18 = v17[5];
      v19 = &v13[v18];
      v20 = &v14[v18];
      v21 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v22 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
          goto LABEL_25;
        case 1u:
          v29 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v19, v20, v29);
          v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v19[*(int *)(v30 + 48)] = *(_QWORD *)&v20[*(int *)(v30 + 48)];
          sub_1C2CFD350();
          goto LABEL_25;
        case 2u:
          v31 = *((_QWORD *)v20 + 1);
          *(_QWORD *)v19 = *(_QWORD *)v20;
          *((_QWORD *)v19 + 1) = v31;
          *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 3u:
          *(_QWORD *)v19 = *(_QWORD *)v20;
          swift_unknownObjectRetain();
          goto LABEL_25;
        case 4u:
          v32 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v19, v20, v32);
          goto LABEL_25;
        case 5u:
          v33 = *(void **)v20;
          *(_QWORD *)v19 = *(_QWORD *)v20;
          v34 = v33;
          goto LABEL_25;
        case 6u:
          v35 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v19, v20, v35);
          v103 = (int *)type metadata accessor for USOParse();
          v36 = v103[5];
          v112 = &v19[v36];
          v37 = &v20[v36];
          v38 = sub_1C2CFBF28();
          v108 = v37;
          v39 = (uint64_t)v37;
          v40 = v38;
          if (__swift_getEnumTagSinglePayload(v39, 1, v38))
          {
            v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v112, v108, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v112, v108, v40);
            __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v40);
          }
          v46 = v103[6];
          v47 = &v19[v46];
          v48 = &v20[v46];
          v49 = *((_QWORD *)v48 + 1);
          *(_QWORD *)v47 = *(_QWORD *)v48;
          *((_QWORD *)v47 + 1) = v49;
          v50 = v103[7];
          v51 = &v19[v50];
          v52 = &v20[v50];
          v51[4] = v52[4];
          *(_DWORD *)v51 = *(_DWORD *)v52;
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 7u:
          v42 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v19, v20, v42);
          v43 = type metadata accessor for USOParse();
          v44 = *(int *)(v43 + 20);
          v106 = v43;
          v109 = &v19[v44];
          v113 = &v20[v44];
          v104 = sub_1C2CFBF28();
          if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v104))
          {
            v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v109, v113, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *))(*(_QWORD *)(v104 - 8) + 16))(v109, v113);
            __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v104);
          }
          v53 = *(int *)(v106 + 24);
          v54 = &v19[v53];
          v55 = &v20[v53];
          v114 = *((_QWORD *)v55 + 1);
          *(_QWORD *)v54 = *(_QWORD *)v55;
          *((_QWORD *)v54 + 1) = v114;
          v56 = *(int *)(v106 + 28);
          v57 = &v19[v56];
          v58 = &v20[v56];
          v57[4] = v58[4];
          *(_DWORD *)v57 = *(_DWORD *)v58;
          v59 = (int *)type metadata accessor for LinkParse();
          v60 = v59[5];
          v61 = &v19[v60];
          v62 = &v20[v60];
          v110 = *((_QWORD *)v62 + 1);
          *(_QWORD *)v61 = *(_QWORD *)v62;
          *((_QWORD *)v61 + 1) = v110;
          v63 = v59[6];
          v64 = &v19[v63];
          v65 = &v20[v63];
          v107 = *((_QWORD *)v65 + 1);
          *(_QWORD *)v64 = *(_QWORD *)v65;
          *((_QWORD *)v64 + 1) = v107;
          v66 = v59[7];
          v67 = &v19[v66];
          v68 = &v20[v66];
          v69 = *((_QWORD *)v68 + 1);
          *(_QWORD *)v67 = *(_QWORD *)v68;
          *((_QWORD *)v67 + 1) = v69;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_25:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
          break;
      }
      *(_QWORD *)&v13[v17[6]] = *(_QWORD *)&v14[v17[6]];
      v70 = v17[7];
      v71 = &v13[v70];
      v72 = &v14[v70];
      v73 = *(_QWORD *)&v14[v70 + 24];
      swift_bridgeObjectRetain();
      if (v73)
      {
        v74 = *((_QWORD *)v72 + 4);
        *((_QWORD *)v71 + 3) = v73;
        *((_QWORD *)v71 + 4) = v74;
        (**(void (***)(char *, char *, uint64_t))(v73 - 8))(v71, v72, v73);
      }
      else
      {
        v75 = *((_OWORD *)v72 + 1);
        *(_OWORD *)v71 = *(_OWORD *)v72;
        *((_OWORD *)v71 + 1) = v75;
        *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
      }
      v13[v17[8]] = v14[v17[8]];
      *(_QWORD *)&a1[v11[6]] = *(_QWORD *)&a2[v11[6]];
      v76 = v11[7];
      v77 = *(void **)&a2[v76];
      *(_QWORD *)&a1[v76] = v77;
      v78 = v11[8];
      v79 = &a1[v78];
      v80 = &a2[v78];
      v81 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = v81;
      v82 = v11[9];
      v83 = &a1[v82];
      v84 = &a2[v82];
      v85 = type metadata accessor for ActionParaphrase(0);
      swift_bridgeObjectRetain();
      v86 = v77;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        v88 = *((_QWORD *)v84 + 1);
        *(_QWORD *)v83 = *(_QWORD *)v84;
        *((_QWORD *)v83 + 1) = v88;
        v89 = *(int *)(v85 + 20);
        v90 = &v83[v89];
        v91 = &v84[v89];
        v92 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v92))
        {
          v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          v94 = *((_QWORD *)v91 + 1);
          *(_QWORD *)v90 = *(_QWORD *)v91;
          *((_QWORD *)v90 + 1) = v94;
          v95 = *((_QWORD *)v91 + 3);
          *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
          *((_QWORD *)v90 + 3) = v95;
          v96 = *(int *)(v92 + 24);
          v111 = &v91[v96];
          v115 = &v90[v96];
          v97 = sub_1C2CFC114();
          v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v105(v115, v111, v97);
          __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v92);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v85);
      }
      v98 = v11[10];
      v99 = &a1[v98];
      v100 = &a2[v98];
      if (__swift_getEnumTagSinglePayload((uint64_t)v100, 1, v117))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        v116(v99, v100, v117);
        __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v117);
      }
      goto LABEL_38;
    case 7u:
      v26 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v26;
      v27 = *((_QWORD *)a2 + 2);
      v28 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = v27;
      *((_QWORD *)a1 + 3) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_38:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1C2A793CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  void *__src;
  int *__srca;
  uint64_t v94;
  char *v95;
  char *v96;
  char *__dst;
  char *__dsta;
  char *__dstb;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;

  if (a1 != a2)
  {
    sub_1C28C9F68((uint64_t)a1, type metadata accessor for FlowToActingFlowAdapter.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = a2[3];
        a1[3] = v6;
        a1[4] = a2[4];
        (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
        goto LABEL_39;
      case 1u:
        v7 = a2[3];
        a1[3] = v7;
        a1[4] = a2[4];
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        a1[5] = a2[5];
        a1[6] = a2[6];
        sub_1C2CFD350();
        sub_1C2CFD350();
        goto LABEL_39;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *((_BYTE *)a1 + 1) = *((_BYTE *)a2 + 1);
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C2CFD350();
        sub_1C2CFD350();
        goto LABEL_39;
      case 3u:
        *a1 = *a2;
        sub_1C2CFD350();
        goto LABEL_39;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_39;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        v8 = (int *)type metadata accessor for PluginAction();
        v9 = v8[5];
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1C2CFBCAC();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v100 = v13;
        v101 = v12;
        v13(v10, v11, v12);
        v14 = (int *)type metadata accessor for Input(0);
        v15 = v14[5];
        v16 = &v10[v15];
        v17 = &v11[v15];
        v18 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v19 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
            goto LABEL_26;
          case 1u:
            v20 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v17, v20);
            v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            *(_QWORD *)&v16[*(int *)(v21 + 48)] = *(_QWORD *)&v17[*(int *)(v21 + 48)];
            sub_1C2CFD350();
            goto LABEL_26;
          case 2u:
            *(_QWORD *)v16 = *(_QWORD *)v17;
            *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
            *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 3u:
            *(_QWORD *)v16 = *(_QWORD *)v17;
            swift_unknownObjectRetain();
            goto LABEL_26;
          case 4u:
            v22 = sub_1C2CFBD9C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v16, v17, v22);
            goto LABEL_26;
          case 5u:
            v23 = *(void **)v17;
            *(_QWORD *)v16 = *(_QWORD *)v17;
            v24 = v23;
            goto LABEL_26;
          case 6u:
            v25 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v16, v17, v25);
            v26 = type metadata accessor for USOParse();
            v27 = *(int *)(v26 + 20);
            v94 = v26;
            __dst = &v16[v27];
            v28 = &v17[v27];
            v29 = sub_1C2CFBF28();
            __src = v28;
            v30 = (uint64_t)v28;
            v31 = v29;
            if (__swift_getEnumTagSinglePayload(v30, 1, v29))
            {
              v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(__dst, __src, v31);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v31);
            }
            v37 = *(int *)(v94 + 24);
            v38 = &v16[v37];
            v39 = &v17[v37];
            *(_QWORD *)v38 = *(_QWORD *)v39;
            *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
            v40 = *(int *)(v94 + 28);
            v41 = &v16[v40];
            v42 = &v17[v40];
            v43 = *(_DWORD *)v42;
            v41[4] = v42[4];
            *(_DWORD *)v41 = v43;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 7u:
            v33 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v16, v17, v33);
            v34 = type metadata accessor for USOParse();
            v35 = *(int *)(v34 + 20);
            __srca = (int *)v34;
            v95 = &v16[v35];
            __dsta = &v17[v35];
            v90 = sub_1C2CFBF28();
            if (__swift_getEnumTagSinglePayload((uint64_t)__dsta, 1, v90))
            {
              v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v95, __dsta, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *))(*(_QWORD *)(v90 - 8) + 16))(v95, __dsta);
              __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v90);
            }
            v44 = __srca[6];
            v45 = &v16[v44];
            v46 = &v17[v44];
            *(_QWORD *)v45 = *(_QWORD *)v46;
            *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
            v47 = __srca[7];
            v48 = &v16[v47];
            v49 = &v17[v47];
            v50 = *(_DWORD *)v49;
            v48[4] = v49[4];
            *(_DWORD *)v48 = v50;
            v51 = (int *)type metadata accessor for LinkParse();
            v52 = v51[5];
            v53 = &v16[v52];
            v54 = &v17[v52];
            *(_QWORD *)v53 = *(_QWORD *)v54;
            *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
            v55 = v51[6];
            v56 = &v16[v55];
            v57 = &v17[v55];
            *(_QWORD *)v56 = *(_QWORD *)v57;
            *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
            v58 = v51[7];
            v59 = &v16[v58];
            v60 = &v17[v58];
            *(_QWORD *)v59 = *(_QWORD *)v60;
            *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
            break;
        }
        *(_QWORD *)&v10[v14[6]] = *(_QWORD *)&v11[v14[6]];
        v61 = v14[7];
        v62 = &v10[v61];
        v63 = &v11[v61];
        v64 = *(_QWORD *)&v11[v61 + 24];
        swift_bridgeObjectRetain();
        if (v64)
        {
          *((_QWORD *)v62 + 3) = v64;
          *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
          (**(void (***)(char *, char *, uint64_t))(v64 - 8))(v62, v63, v64);
        }
        else
        {
          v65 = *(_OWORD *)v63;
          v66 = *((_OWORD *)v63 + 1);
          *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
          *(_OWORD *)v62 = v65;
          *((_OWORD *)v62 + 1) = v66;
        }
        v10[v14[8]] = v11[v14[8]];
        *(_QWORD *)((char *)a1 + v8[6]) = *(_QWORD *)((char *)a2 + v8[6]);
        v67 = v8[7];
        v68 = *(void **)((char *)a2 + v67);
        *(_QWORD *)((char *)a1 + v67) = v68;
        v69 = v8[8];
        v70 = (_QWORD *)((char *)a1 + v69);
        v71 = (_QWORD *)((char *)a2 + v69);
        *v70 = *v71;
        v70[1] = v71[1];
        v72 = v8[9];
        v73 = (_QWORD *)((char *)a1 + v72);
        v74 = (_QWORD *)((char *)a2 + v72);
        v75 = type metadata accessor for ActionParaphrase(0);
        swift_bridgeObjectRetain();
        v76 = v68;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
        {
          v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          *v73 = *v74;
          v73[1] = v74[1];
          v78 = *(int *)(v75 + 20);
          v79 = (_QWORD *)((char *)v73 + v78);
          v80 = (_QWORD *)((char *)v74 + v78);
          v81 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81))
          {
            v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
            memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
          }
          else
          {
            *v79 = *v80;
            v79[1] = v80[1];
            v79[2] = v80[2];
            v79[3] = v80[3];
            v83 = *(int *)(v81 + 24);
            v96 = (char *)v80 + v83;
            __dstb = (char *)v79 + v83;
            v84 = sub_1C2CFC114();
            v91 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v91(__dstb, v96, v84);
            __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v75);
        }
        v85 = v8[10];
        v86 = (char *)a1 + v85;
        v87 = (char *)a2 + v85;
        if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v101))
        {
          v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
          memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        }
        else
        {
          v100(v86, v87, v101);
          __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v101);
        }
        goto LABEL_39;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_39:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1C2A79C90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *__src;
  char *__srca;
  uint64_t v69;
  uint64_t v70;
  char *__dst;
  char *__dsta;
  void (*v73)(char *, char *);
  uint64_t v74;

  if (swift_getEnumCaseMultiPayload() == 6)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for PluginAction();
    v7 = v6[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C2CFBCAC();
    v73 = *(void (**)(char *, char *))(*(_QWORD *)(v10 - 8) + 32);
    v74 = v10;
    v73(v8, v9);
    v11 = (int *)type metadata accessor for Input(0);
    v12 = v11[5];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v16 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
        goto LABEL_14;
      case 1u:
        v17 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v13, v14, v17);
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v13[*(int *)(v18 + 48)] = *(_QWORD *)&v14[*(int *)(v18 + 48)];
        goto LABEL_14;
      case 4u:
        v19 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v13, v14, v19);
        goto LABEL_14;
      case 6u:
        v20 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v13, v14, v20);
        v21 = type metadata accessor for USOParse();
        v22 = *(int *)(v21 + 20);
        v69 = v21;
        __dst = &v13[v22];
        v23 = &v14[v22];
        v24 = sub_1C2CFBF28();
        __src = v23;
        v25 = (uint64_t)v23;
        v26 = v24;
        if (__swift_getEnumTagSinglePayload(v25, 1, v24))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(__dst, __src, v26);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v26);
        }
        *(_OWORD *)&v13[*(int *)(v69 + 24)] = *(_OWORD *)&v14[*(int *)(v69 + 24)];
        v36 = *(int *)(v69 + 28);
        v37 = &v13[v36];
        v38 = &v14[v36];
        v37[4] = v38[4];
        *(_DWORD *)v37 = *(_DWORD *)v38;
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v28 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v13, v14, v28);
        v29 = type metadata accessor for USOParse();
        v30 = *(int *)(v29 + 20);
        v70 = v29;
        __dsta = &v13[v30];
        v31 = &v14[v30];
        v32 = sub_1C2CFBF28();
        __srca = v31;
        v33 = (uint64_t)v31;
        v34 = v32;
        if (__swift_getEnumTagSinglePayload(v33, 1, v32))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dsta, __srca, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(__dsta, __srca, v34);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v34);
        }
        *(_OWORD *)&v13[*(int *)(v70 + 24)] = *(_OWORD *)&v14[*(int *)(v70 + 24)];
        v39 = *(int *)(v70 + 28);
        v40 = &v13[v39];
        v41 = &v14[v39];
        v40[4] = v41[4];
        *(_DWORD *)v40 = *(_DWORD *)v41;
        v42 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v13[v42[5]] = *(_OWORD *)&v14[v42[5]];
        *(_OWORD *)&v13[v42[6]] = *(_OWORD *)&v14[v42[6]];
        *(_OWORD *)&v13[v42[7]] = *(_OWORD *)&v14[v42[7]];
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        break;
    }
    *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
    v43 = v11[7];
    v44 = &v8[v43];
    v45 = &v9[v43];
    v46 = *((_OWORD *)v45 + 1);
    *(_OWORD *)v44 = *(_OWORD *)v45;
    *((_OWORD *)v44 + 1) = v46;
    *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
    v8[v11[8]] = v9[v11[8]];
    *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
    v47 = v6[9];
    v48 = (_OWORD *)((char *)a1 + v47);
    v49 = (_OWORD *)((char *)a2 + v47);
    v50 = type metadata accessor for ActionParaphrase(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      *v48 = *v49;
      v52 = *(int *)(v50 + 20);
      v53 = (_OWORD *)((char *)v48 + v52);
      v54 = (_OWORD *)((char *)v49 + v52);
      v55 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        v57 = v54[1];
        *v53 = *v54;
        v53[1] = v57;
        v58 = *(int *)(v55 + 24);
        v59 = (char *)v53 + v58;
        v60 = (char *)v54 + v58;
        v61 = sub_1C2CFC114();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
    }
    v62 = v6[10];
    v63 = (char *)a1 + v62;
    v64 = (char *)a2 + v62;
    if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v74))
    {
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v73)(v63, v64, v74);
      __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v74);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1C2A7A254(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *__src;
  char *__srca;
  uint64_t v69;
  uint64_t v70;
  char *__dst;
  char *__dsta;
  void (*v73)(char *, char *);
  uint64_t v74;

  if (a1 != a2)
  {
    sub_1C28C9F68((uint64_t)a1, type metadata accessor for FlowToActingFlowAdapter.State);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for PluginAction();
      v7 = v6[5];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1C2CFBCAC();
      v73 = *(void (**)(char *, char *))(*(_QWORD *)(v10 - 8) + 32);
      v74 = v10;
      v73(v8, v9);
      v11 = (int *)type metadata accessor for Input(0);
      v12 = v11[5];
      v13 = &v8[v12];
      v14 = &v9[v12];
      v15 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v16 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
          goto LABEL_15;
        case 1u:
          v17 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v13, v14, v17);
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v13[*(int *)(v18 + 48)] = *(_QWORD *)&v14[*(int *)(v18 + 48)];
          goto LABEL_15;
        case 4u:
          v19 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v13, v14, v19);
          goto LABEL_15;
        case 6u:
          v20 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v13, v14, v20);
          v21 = type metadata accessor for USOParse();
          v22 = *(int *)(v21 + 20);
          v69 = v21;
          __dst = &v13[v22];
          v23 = &v14[v22];
          v24 = sub_1C2CFBF28();
          __src = v23;
          v25 = (uint64_t)v23;
          v26 = v24;
          if (__swift_getEnumTagSinglePayload(v25, 1, v24))
          {
            v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(__dst, __src, v26);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v26);
          }
          *(_OWORD *)&v13[*(int *)(v69 + 24)] = *(_OWORD *)&v14[*(int *)(v69 + 24)];
          v36 = *(int *)(v69 + 28);
          v37 = &v13[v36];
          v38 = &v14[v36];
          v37[4] = v38[4];
          *(_DWORD *)v37 = *(_DWORD *)v38;
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        case 7u:
          v28 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v13, v14, v28);
          v29 = type metadata accessor for USOParse();
          v30 = *(int *)(v29 + 20);
          v70 = v29;
          __dsta = &v13[v30];
          v31 = &v14[v30];
          v32 = sub_1C2CFBF28();
          __srca = v31;
          v33 = (uint64_t)v31;
          v34 = v32;
          if (__swift_getEnumTagSinglePayload(v33, 1, v32))
          {
            v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(__dsta, __srca, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(__dsta, __srca, v34);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v34);
          }
          *(_OWORD *)&v13[*(int *)(v70 + 24)] = *(_OWORD *)&v14[*(int *)(v70 + 24)];
          v39 = *(int *)(v70 + 28);
          v40 = &v13[v39];
          v41 = &v14[v39];
          v40[4] = v41[4];
          *(_DWORD *)v40 = *(_DWORD *)v41;
          v42 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v13[v42[5]] = *(_OWORD *)&v14[v42[5]];
          *(_OWORD *)&v13[v42[6]] = *(_OWORD *)&v14[v42[6]];
          *(_OWORD *)&v13[v42[7]] = *(_OWORD *)&v14[v42[7]];
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
      v43 = v11[7];
      v44 = &v8[v43];
      v45 = &v9[v43];
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
      v8[v11[8]] = v9[v11[8]];
      *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
      *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
      *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
      v47 = v6[9];
      v48 = (_OWORD *)((char *)a1 + v47);
      v49 = (_OWORD *)((char *)a2 + v47);
      v50 = type metadata accessor for ActionParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        *v48 = *v49;
        v52 = *(int *)(v50 + 20);
        v53 = (_OWORD *)((char *)v48 + v52);
        v54 = (_OWORD *)((char *)v49 + v52);
        v55 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          v57 = v54[1];
          *v53 = *v54;
          v53[1] = v57;
          v58 = *(int *)(v55 + 24);
          v59 = (char *)v53 + v58;
          v60 = (char *)v54 + v58;
          v61 = sub_1C2CFC114();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
          __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
      }
      v62 = v6[10];
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v74))
      {
        v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v73)(v63, v64, v74);
        __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v74);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C2A7A830()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PluginAction();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NoopFlow(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NoopFlow(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2A7A9BC + 4 * byte_1C2D0B691[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2A7A9F0 + 4 * byte_1C2D0B68C[v4]))();
}

uint64_t sub_1C2A7A9F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A7A9F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A7AA00);
  return result;
}

uint64_t sub_1C2A7AA0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A7AA14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2A7AA18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A7AA20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NoopFlow()
{
  return &type metadata for NoopFlow;
}

uint64_t type metadata accessor for FlowToActingFlowAdapter.Event(uint64_t a1)
{
  return sub_1C28B9018(a1, qword_1EF7919D8);
}

uint64_t sub_1C2A7AA50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowToActingFlowAdapter.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A7AA94()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1C2A7AAB8()
{
  sub_1C2A76A14();
}

unint64_t sub_1C2A7AAD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF791950;
  if (!qword_1EF791950)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF791948);
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for LifeCycleModifierFlow<A>, v1);
    atomic_store(result, &qword_1EF791950);
  }
  return result;
}

void sub_1C2A7AB1C(uint64_t a1)
{
  uint64_t v1;

  sub_1C2A76978(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_10Tm()
{
  swift_release();
  OUTLINED_FUNCTION_13_1();
  return swift_deallocObject();
}

uint64_t sub_1C2A7AB60(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2A77E78(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1C2A7AB6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EF791960);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  OUTLINED_FUNCTION_71_0();
  return swift_deallocObject();
}

uint64_t sub_1C2A7ABCC()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF791960);
  return sub_1C2A77F94();
}

uint64_t sub_1C2A7AC0C()
{
  OUTLINED_FUNCTION_13_1();
  return swift_deallocObject();
}

uint64_t sub_1C2A7AC2C(char *a1)
{
  uint64_t v1;

  return sub_1C2A77FF0(a1, *(uint64_t (**)(_BYTE *))(v1 + 16));
}

char *sub_1C2A7AC34(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(void *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;
  void *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  char *v116;
  char *v117;
  const void *v118;
  const void *v119;
  int *v120;
  int *v121;
  uint64_t v122;
  char *v123;
  void (*v124)(void *, char *, uint64_t);
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  int *v132;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v6 + 16) & ~(unint64_t)v6];
    sub_1C2CFD350();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v9 = *a2;
        v10 = v9;
        *(_QWORD *)a1 = v9;
        goto LABEL_46;
      case 1:
        *a1 = *(_BYTE *)a2;
        *((_QWORD *)a1 + 1) = a2[1];
        a1[16] = *((_BYTE *)a2 + 16);
        *((_QWORD *)a1 + 3) = a2[3];
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        a1[34] = *((_BYTE *)a2 + 34);
        v11 = type metadata accessor for ExecuteResponse(0);
        v12 = *(int *)(v11 + 36);
        v13 = &a1[v12];
        v14 = (char **)((char *)a2 + v12);
        v15 = type metadata accessor for PluginAction();
        sub_1C2CFD350();
        sub_1C2CFD350();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          v17 = v14[1];
          *(_QWORD *)v13 = *v14;
          *((_QWORD *)v13 + 1) = v17;
          v132 = (int *)v15;
          v18 = *(int *)(v15 + 20);
          v129 = (uint64_t)v13;
          v19 = &v13[v18];
          v20 = (char *)v14 + v18;
          v21 = sub_1C2CFBCAC();
          v22 = *(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v124 = v22;
          v22(v19, v20, v21);
          v130 = (int *)type metadata accessor for Input(0);
          v23 = v130[5];
          v125 = v19;
          v24 = &v19[v23];
          v25 = &v20[v23];
          v26 = type metadata accessor for Parse(0);
          v127 = v21;
          v128 = v11;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v27 = sub_1C2CFCD44();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
              goto LABEL_19;
            case 1u:
              v28 = sub_1C2CFCD44();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24, v25, v28);
              v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
              *(_QWORD *)&v24[*(int *)(v29 + 48)] = *(_QWORD *)&v25[*(int *)(v29 + 48)];
              sub_1C2CFD350();
              goto LABEL_19;
            case 2u:
              v30 = *((_QWORD *)v25 + 1);
              *(_QWORD *)v24 = *(_QWORD *)v25;
              *((_QWORD *)v24 + 1) = v30;
              *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_19;
            case 3u:
              *(_QWORD *)v24 = *(_QWORD *)v25;
              swift_unknownObjectRetain();
              goto LABEL_19;
            case 4u:
              v31 = sub_1C2CFBD9C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v24, v25, v31);
              goto LABEL_19;
            case 5u:
              v32 = *(void **)v25;
              *(_QWORD *)v24 = *(_QWORD *)v25;
              v33 = v32;
LABEL_19:
              swift_storeEnumTagMultiPayload();
              goto LABEL_20;
            case 6u:
              v36 = sub_1C2CFBFD0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v24, v25, v36);
              v120 = (int *)type metadata accessor for USOParse();
              v37 = v120[5];
              v116 = &v24[v37];
              v38 = &v25[v37];
              v39 = sub_1C2CFBF28();
              v118 = v38;
              v40 = (uint64_t)v38;
              v41 = v39;
              if (__swift_getEnumTagSinglePayload(v40, 1, v39))
              {
                v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
                memcpy(v116, v118, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v116, v118, v41);
                __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v41);
              }
              v35 = v129;
              v50 = v120[6];
              v51 = &v24[v50];
              v52 = &v25[v50];
              v53 = *((_QWORD *)v52 + 1);
              *(_QWORD *)v51 = *(_QWORD *)v52;
              *((_QWORD *)v51 + 1) = v53;
              v54 = v120[7];
              v55 = &v24[v54];
              v56 = &v25[v54];
              v55[4] = v56[4];
              *(_DWORD *)v55 = *(_DWORD *)v56;
              swift_bridgeObjectRetain();
              goto LABEL_29;
            case 7u:
              v43 = sub_1C2CFBFD0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v24, v25, v43);
              v121 = (int *)type metadata accessor for USOParse();
              v44 = v121[5];
              v117 = &v24[v44];
              v45 = &v25[v44];
              v46 = sub_1C2CFBF28();
              v119 = v45;
              v47 = (uint64_t)v45;
              v48 = v46;
              if (__swift_getEnumTagSinglePayload(v47, 1, v46))
              {
                v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
                memcpy(v117, v119, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v117, v119, v48);
                __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v48);
              }
              v35 = v129;
              v57 = v121[6];
              v58 = &v24[v57];
              v59 = &v25[v57];
              v60 = *((_QWORD *)v59 + 1);
              *(_QWORD *)v58 = *(_QWORD *)v59;
              *((_QWORD *)v58 + 1) = v60;
              v61 = v121[7];
              v62 = &v24[v61];
              v63 = &v25[v61];
              v62[4] = v63[4];
              *(_DWORD *)v62 = *(_DWORD *)v63;
              v64 = (int *)type metadata accessor for LinkParse();
              v65 = v64[5];
              v66 = &v24[v65];
              v67 = &v25[v65];
              v122 = *((_QWORD *)v67 + 1);
              *(_QWORD *)v66 = *(_QWORD *)v67;
              *((_QWORD *)v66 + 1) = v122;
              v68 = v64[6];
              v69 = &v24[v68];
              v70 = &v25[v68];
              v71 = *((_QWORD *)v70 + 1);
              *(_QWORD *)v69 = *(_QWORD *)v70;
              *((_QWORD *)v69 + 1) = v71;
              v72 = v64[7];
              v73 = &v24[v72];
              v74 = &v25[v72];
              v75 = *((_QWORD *)v74 + 1);
              *(_QWORD *)v73 = *(_QWORD *)v74;
              *((_QWORD *)v73 + 1) = v75;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_29:
              swift_storeEnumTagMultiPayload();
              v34 = v125;
              break;
            default:
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_20:
              v34 = v125;
              v35 = v129;
              break;
          }
          *(_QWORD *)&v34[v130[6]] = *(_QWORD *)&v20[v130[6]];
          v76 = v130[7];
          v77 = &v34[v76];
          v78 = &v20[v76];
          v79 = *(_QWORD *)&v20[v76 + 24];
          swift_bridgeObjectRetain();
          if (v79)
          {
            v80 = *((_QWORD *)v78 + 4);
            *((_QWORD *)v77 + 3) = v79;
            *((_QWORD *)v77 + 4) = v80;
            (**(void (***)(uint64_t, char *, uint64_t))(v79 - 8))((uint64_t)v77, v78, v79);
          }
          else
          {
            v81 = *((_OWORD *)v78 + 1);
            *(_OWORD *)v77 = *(_OWORD *)v78;
            *((_OWORD *)v77 + 1) = v81;
            *((_QWORD *)v77 + 4) = *((_QWORD *)v78 + 4);
          }
          v34[v130[8]] = v20[v130[8]];
          *(_QWORD *)(v35 + v132[6]) = *(_QWORD *)((char *)v14 + v132[6]);
          v82 = v132[7];
          v83 = *(void **)((char *)v14 + v82);
          *(_QWORD *)(v35 + v82) = v83;
          v84 = v132[8];
          v85 = (_QWORD *)(v35 + v84);
          v86 = (_QWORD *)((char *)v14 + v84);
          v87 = v86[1];
          *v85 = *v86;
          v85[1] = v87;
          v88 = v132[9];
          v89 = (_QWORD *)(v35 + v88);
          v90 = (_QWORD *)((char *)v14 + v88);
          v91 = type metadata accessor for ActionParaphrase(0);
          swift_bridgeObjectRetain();
          v92 = v83;
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91))
          {
            v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
            memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
          }
          else
          {
            v94 = v90[1];
            *v89 = *v90;
            v89[1] = v94;
            v95 = *(int *)(v91 + 20);
            v96 = (_QWORD *)((char *)v89 + v95);
            v97 = (_QWORD *)((char *)v90 + v95);
            v98 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v98))
            {
              v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
              memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
            }
            else
            {
              v100 = v97[1];
              *v96 = *v97;
              v96[1] = v100;
              v101 = v97[3];
              v96[2] = v97[2];
              v96[3] = v101;
              v102 = *(int *)(v98 + 24);
              v126 = (char *)v96 + v102;
              v123 = (char *)v97 + v102;
              v103 = sub_1C2CFC114();
              v131 = v98;
              v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v104(v126, v123, v103);
              __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v131);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v91);
          }
          v11 = v128;
          v105 = v132[10];
          v106 = (void *)(v129 + v105);
          v107 = (char *)v14 + v105;
          if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, v127))
          {
            v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          else
          {
            v124(v106, v107, v127);
            __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v127);
          }
          __swift_storeEnumTagSinglePayload(v129, 0, 1, (uint64_t)v132);
        }
        v109 = *(int *)(v11 + 40);
        v110 = &a1[v109];
        v111 = (char **)((char *)a2 + v109);
        v112 = v111[1];
        if (v112)
        {
          *(_QWORD *)v110 = *v111;
          *((_QWORD *)v110 + 1) = v112;
          v113 = v111[3];
          *((_QWORD *)v110 + 2) = v111[2];
          *((_QWORD *)v110 + 3) = v113;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v114 = *((_OWORD *)v111 + 1);
          *(_OWORD *)v110 = *(_OWORD *)v111;
          *((_OWORD *)v110 + 1) = v114;
        }
        goto LABEL_46;
      case 0:
        *a1 = *(_BYTE *)a2;
        *((_QWORD *)a1 + 1) = a2[1];
        a1[16] = *((_BYTE *)a2 + 16);
        *((_QWORD *)a1 + 3) = a2[3];
        sub_1C2CFD350();
        sub_1C2CFD350();
LABEL_46:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void sub_1C2A7B4DC(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:

      break;
    case 1:
      swift_release();
      swift_release();
      v3 = type metadata accessor for ExecuteResponse(0);
      v4 = (uint64_t)a1 + *(int *)(v3 + 36);
      v5 = (int *)type metadata accessor for PluginAction();
      if (!__swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5))
      {
        swift_bridgeObjectRelease();
        v6 = v4 + v5[5];
        v7 = sub_1C2CFBCAC();
        v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
        v8(v6, v7);
        v9 = type metadata accessor for Input(0);
        v10 = (id *)(v6 + *(int *)(v9 + 20));
        type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v11 = sub_1C2CFCD44();
            goto LABEL_13;
          case 1u:
            v12 = sub_1C2CFCD44();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            swift_release();
            break;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 3u:
            swift_unknownObjectRelease();
            break;
          case 4u:
            v11 = sub_1C2CFBD9C();
LABEL_13:
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
            break;
          case 5u:

            break;
          case 6u:
            v27 = v8;
            v13 = sub_1C2CFBFD0();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
            v14 = (uint64_t)v10 + *(int *)(type metadata accessor for USOParse() + 20);
            v15 = sub_1C2CFBF28();
            if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
            goto LABEL_21;
          case 7u:
            v27 = v8;
            v16 = sub_1C2CFBFD0();
            (*(void (**)(id *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v10, v16);
            v17 = (uint64_t)v10 + *(int *)(type metadata accessor for USOParse() + 20);
            v18 = sub_1C2CFBF28();
            if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
            swift_bridgeObjectRelease();
            type metadata accessor for LinkParse();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_21:
            swift_bridgeObjectRelease();
            v8 = v27;
            break;
          default:
            break;
        }
        swift_bridgeObjectRelease();
        v19 = v6 + *(int *)(v9 + 28);
        if (*(_QWORD *)(v19 + 24))
          __swift_destroy_boxed_opaque_existential_1(v19);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v20 = v4 + v5[9];
        v21 = type metadata accessor for ActionParaphrase(0);
        if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
        {
          swift_bridgeObjectRelease();
          v22 = v20 + *(int *)(v21 + 20);
          v23 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v24 = v22 + *(int *)(v23 + 24);
            v25 = sub_1C2CFC114();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
          }
        }
        v26 = v4 + v5[10];
        if (!__swift_getEnumTagSinglePayload(v26, 1, v7))
          v8(v26, v7);
      }
      if (*(id *)((char *)a1 + *(int *)(v3 + 40) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      swift_release();
      break;
  }
}

_QWORD *sub_1C2A7B944(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(void *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  void *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  char *v114;
  char *v115;
  const void *v116;
  const void *v117;
  int *v118;
  int *v119;
  uint64_t v120;
  char *v121;
  void (*v122)(void *, char *, uint64_t);
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  int *v130;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v7 = (void *)*a2;
      v8 = v7;
      *a1 = v7;
      goto LABEL_44;
    case 1:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      a1[3] = a2[3];
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      *((_BYTE *)a1 + 34) = *((_BYTE *)a2 + 34);
      v9 = type metadata accessor for ExecuteResponse(0);
      v10 = *(int *)(v9 + 36);
      v11 = (_QWORD *)((char *)a1 + v10);
      v12 = (_QWORD *)((char *)a2 + v10);
      v13 = type metadata accessor for PluginAction();
      sub_1C2CFD350();
      sub_1C2CFD350();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = v12[1];
        *v11 = *v12;
        v11[1] = v15;
        v130 = (int *)v13;
        v16 = *(int *)(v13 + 20);
        v127 = (uint64_t)v11;
        v17 = (char *)v11 + v16;
        v18 = (char *)v12 + v16;
        v19 = sub_1C2CFBCAC();
        v20 = *(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v122 = v20;
        v20(v17, v18, v19);
        v128 = (int *)type metadata accessor for Input(0);
        v21 = v128[5];
        v123 = v17;
        v22 = &v17[v21];
        v23 = &v18[v21];
        v24 = type metadata accessor for Parse(0);
        v125 = v19;
        v126 = v9;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v25 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
            goto LABEL_17;
          case 1u:
            v26 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v22, v23, v26);
            v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            *(_QWORD *)&v22[*(int *)(v27 + 48)] = *(_QWORD *)&v23[*(int *)(v27 + 48)];
            sub_1C2CFD350();
            goto LABEL_17;
          case 2u:
            v28 = *((_QWORD *)v23 + 1);
            *(_QWORD *)v22 = *(_QWORD *)v23;
            *((_QWORD *)v22 + 1) = v28;
            *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_17;
          case 3u:
            *(_QWORD *)v22 = *(_QWORD *)v23;
            swift_unknownObjectRetain();
            goto LABEL_17;
          case 4u:
            v29 = sub_1C2CFBD9C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v22, v23, v29);
            goto LABEL_17;
          case 5u:
            v30 = *(void **)v23;
            *(_QWORD *)v22 = *(_QWORD *)v23;
            v31 = v30;
LABEL_17:
            swift_storeEnumTagMultiPayload();
            goto LABEL_18;
          case 6u:
            v34 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v22, v23, v34);
            v118 = (int *)type metadata accessor for USOParse();
            v35 = v118[5];
            v114 = &v22[v35];
            v36 = &v23[v35];
            v37 = sub_1C2CFBF28();
            v116 = v36;
            v38 = (uint64_t)v36;
            v39 = v37;
            if (__swift_getEnumTagSinglePayload(v38, 1, v37))
            {
              v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v114, v116, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v114, v116, v39);
              __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v39);
            }
            v33 = v127;
            v48 = v118[6];
            v49 = &v22[v48];
            v50 = &v23[v48];
            v51 = *((_QWORD *)v50 + 1);
            *(_QWORD *)v49 = *(_QWORD *)v50;
            *((_QWORD *)v49 + 1) = v51;
            v52 = v118[7];
            v53 = &v22[v52];
            v54 = &v23[v52];
            v53[4] = v54[4];
            *(_DWORD *)v53 = *(_DWORD *)v54;
            swift_bridgeObjectRetain();
            goto LABEL_27;
          case 7u:
            v41 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v22, v23, v41);
            v119 = (int *)type metadata accessor for USOParse();
            v42 = v119[5];
            v115 = &v22[v42];
            v43 = &v23[v42];
            v44 = sub_1C2CFBF28();
            v117 = v43;
            v45 = (uint64_t)v43;
            v46 = v44;
            if (__swift_getEnumTagSinglePayload(v45, 1, v44))
            {
              v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v115, v117, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v115, v117, v46);
              __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, v46);
            }
            v33 = v127;
            v55 = v119[6];
            v56 = &v22[v55];
            v57 = &v23[v55];
            v58 = *((_QWORD *)v57 + 1);
            *(_QWORD *)v56 = *(_QWORD *)v57;
            *((_QWORD *)v56 + 1) = v58;
            v59 = v119[7];
            v60 = &v22[v59];
            v61 = &v23[v59];
            v60[4] = v61[4];
            *(_DWORD *)v60 = *(_DWORD *)v61;
            v62 = (int *)type metadata accessor for LinkParse();
            v63 = v62[5];
            v64 = &v22[v63];
            v65 = &v23[v63];
            v120 = *((_QWORD *)v65 + 1);
            *(_QWORD *)v64 = *(_QWORD *)v65;
            *((_QWORD *)v64 + 1) = v120;
            v66 = v62[6];
            v67 = &v22[v66];
            v68 = &v23[v66];
            v69 = *((_QWORD *)v68 + 1);
            *(_QWORD *)v67 = *(_QWORD *)v68;
            *((_QWORD *)v67 + 1) = v69;
            v70 = v62[7];
            v71 = &v22[v70];
            v72 = &v23[v70];
            v73 = *((_QWORD *)v72 + 1);
            *(_QWORD *)v71 = *(_QWORD *)v72;
            *((_QWORD *)v71 + 1) = v73;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_27:
            swift_storeEnumTagMultiPayload();
            v32 = v123;
            break;
          default:
            memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_18:
            v32 = v123;
            v33 = v127;
            break;
        }
        *(_QWORD *)&v32[v128[6]] = *(_QWORD *)&v18[v128[6]];
        v74 = v128[7];
        v75 = &v32[v74];
        v76 = &v18[v74];
        v77 = *(_QWORD *)&v18[v74 + 24];
        swift_bridgeObjectRetain();
        if (v77)
        {
          v78 = *((_QWORD *)v76 + 4);
          *((_QWORD *)v75 + 3) = v77;
          *((_QWORD *)v75 + 4) = v78;
          (**(void (***)(uint64_t, char *, uint64_t))(v77 - 8))((uint64_t)v75, v76, v77);
        }
        else
        {
          v79 = *((_OWORD *)v76 + 1);
          *(_OWORD *)v75 = *(_OWORD *)v76;
          *((_OWORD *)v75 + 1) = v79;
          *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
        }
        v32[v128[8]] = v18[v128[8]];
        *(_QWORD *)(v33 + v130[6]) = *(_QWORD *)((char *)v12 + v130[6]);
        v80 = v130[7];
        v81 = *(void **)((char *)v12 + v80);
        *(_QWORD *)(v33 + v80) = v81;
        v82 = v130[8];
        v83 = (_QWORD *)(v33 + v82);
        v84 = (_QWORD *)((char *)v12 + v82);
        v85 = v84[1];
        *v83 = *v84;
        v83[1] = v85;
        v86 = v130[9];
        v87 = (_QWORD *)(v33 + v86);
        v88 = (_QWORD *)((char *)v12 + v86);
        v89 = type metadata accessor for ActionParaphrase(0);
        swift_bridgeObjectRetain();
        v90 = v81;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, v89))
        {
          v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          v92 = v88[1];
          *v87 = *v88;
          v87[1] = v92;
          v93 = *(int *)(v89 + 20);
          v94 = (_QWORD *)((char *)v87 + v93);
          v95 = (_QWORD *)((char *)v88 + v93);
          v96 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v96))
          {
            v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
            memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            v98 = v95[1];
            *v94 = *v95;
            v94[1] = v98;
            v99 = v95[3];
            v94[2] = v95[2];
            v94[3] = v99;
            v100 = *(int *)(v96 + 24);
            v124 = (char *)v94 + v100;
            v121 = (char *)v95 + v100;
            v101 = sub_1C2CFC114();
            v129 = v96;
            v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v102(v124, v121, v101);
            __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v129);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v89);
        }
        v9 = v126;
        v103 = v130[10];
        v104 = (void *)(v127 + v103);
        v105 = (char *)v12 + v103;
        if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v125))
        {
          v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
          memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
        }
        else
        {
          v122(v104, v105, v125);
          __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v125);
        }
        __swift_storeEnumTagSinglePayload(v127, 0, 1, (uint64_t)v130);
      }
      v107 = *(int *)(v9 + 40);
      v108 = (_QWORD *)((char *)a1 + v107);
      v109 = (_QWORD *)((char *)a2 + v107);
      v110 = v109[1];
      if (v110)
      {
        *v108 = *v109;
        v108[1] = v110;
        v111 = v109[3];
        v108[2] = v109[2];
        v108[3] = v111;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v112 = *((_OWORD *)v109 + 1);
        *(_OWORD *)v108 = *(_OWORD *)v109;
        *((_OWORD *)v108 + 1) = v112;
      }
      goto LABEL_44;
    case 0:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      a1[3] = a2[3];
      sub_1C2CFD350();
      sub_1C2CFD350();
LABEL_44:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1C2A7C1C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(void *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  void *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  __int128 v105;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  const void *v111;
  const void *v112;
  char *v113;
  void (*v114)(void *, char *, uint64_t);
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  int *v121;
  uint64_t v122;

  if (a1 != a2)
  {
    sub_1C28C9F68((uint64_t)a1, type metadata accessor for FlowToActingFlowAdapter.Event);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v7 = (void *)*a2;
        v8 = v7;
        *a1 = v7;
        goto LABEL_45;
      case 1:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        a1[3] = a2[3];
        v9 = *((_WORD *)a2 + 16);
        *((_BYTE *)a1 + 34) = *((_BYTE *)a2 + 34);
        *((_WORD *)a1 + 16) = v9;
        v10 = type metadata accessor for ExecuteResponse(0);
        v11 = *(int *)(v10 + 36);
        v12 = (_QWORD *)((char *)a1 + v11);
        v13 = (_QWORD *)((char *)a2 + v11);
        v14 = type metadata accessor for PluginAction();
        sub_1C2CFD350();
        sub_1C2CFD350();
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          *v12 = *v13;
          v12[1] = v13[1];
          v119 = (uint64_t)v12;
          v120 = (int *)v14;
          v16 = *(int *)(v14 + 20);
          v17 = (char *)v12 + v16;
          v18 = (char *)v13 + v16;
          v19 = sub_1C2CFBCAC();
          v20 = *(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v114 = v20;
          v20(v17, v18, v19);
          v121 = (int *)type metadata accessor for Input(0);
          v21 = v121[5];
          v115 = v17;
          v22 = &v17[v21];
          v23 = &v18[v21];
          v24 = type metadata accessor for Parse(0);
          v117 = v19;
          v118 = v10;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v25 = sub_1C2CFCD44();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
              goto LABEL_18;
            case 1u:
              v26 = sub_1C2CFCD44();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v22, v23, v26);
              v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
              *(_QWORD *)&v22[*(int *)(v27 + 48)] = *(_QWORD *)&v23[*(int *)(v27 + 48)];
              sub_1C2CFD350();
              goto LABEL_18;
            case 2u:
              *(_QWORD *)v22 = *(_QWORD *)v23;
              *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
              *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_18;
            case 3u:
              *(_QWORD *)v22 = *(_QWORD *)v23;
              swift_unknownObjectRetain();
              goto LABEL_18;
            case 4u:
              v28 = sub_1C2CFBD9C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v22, v23, v28);
              goto LABEL_18;
            case 5u:
              v29 = *(void **)v23;
              *(_QWORD *)v22 = *(_QWORD *)v23;
              v30 = v29;
LABEL_18:
              swift_storeEnumTagMultiPayload();
              goto LABEL_19;
            case 6u:
              v33 = sub_1C2CFBFD0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v22, v23, v33);
              v34 = type metadata accessor for USOParse();
              v35 = *(int *)(v34 + 20);
              v107 = v34;
              v109 = &v22[v35];
              v36 = &v23[v35];
              v37 = sub_1C2CFBF28();
              v111 = v36;
              v38 = (uint64_t)v36;
              v39 = v37;
              if (__swift_getEnumTagSinglePayload(v38, 1, v37))
              {
                v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
                memcpy(v109, v111, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v109, v111, v39);
                __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v39);
              }
              v32 = v119;
              v49 = *(int *)(v107 + 24);
              v50 = &v22[v49];
              v51 = &v23[v49];
              *(_QWORD *)v50 = *(_QWORD *)v51;
              *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
              v52 = *(int *)(v107 + 28);
              v53 = &v22[v52];
              v54 = &v23[v52];
              v55 = *(_DWORD *)v54;
              v53[4] = v54[4];
              *(_DWORD *)v53 = v55;
              swift_bridgeObjectRetain();
              goto LABEL_28;
            case 7u:
              v41 = sub_1C2CFBFD0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v22, v23, v41);
              v42 = type metadata accessor for USOParse();
              v43 = *(int *)(v42 + 20);
              v108 = v42;
              v110 = &v22[v43];
              v44 = &v23[v43];
              v45 = sub_1C2CFBF28();
              v112 = v44;
              v46 = (uint64_t)v44;
              v47 = v45;
              if (__swift_getEnumTagSinglePayload(v46, 1, v45))
              {
                v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
                memcpy(v110, v112, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v110, v112, v47);
                __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v47);
              }
              v32 = v119;
              v56 = *(int *)(v108 + 24);
              v57 = &v22[v56];
              v58 = &v23[v56];
              *(_QWORD *)v57 = *(_QWORD *)v58;
              *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
              v59 = *(int *)(v108 + 28);
              v60 = &v22[v59];
              v61 = &v23[v59];
              v62 = *(_DWORD *)v61;
              v60[4] = v61[4];
              *(_DWORD *)v60 = v62;
              v63 = (int *)type metadata accessor for LinkParse();
              v64 = v63[5];
              v65 = &v22[v64];
              v66 = &v23[v64];
              *(_QWORD *)v65 = *(_QWORD *)v66;
              *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
              v67 = v63[6];
              v68 = &v22[v67];
              v69 = &v23[v67];
              *(_QWORD *)v68 = *(_QWORD *)v69;
              *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
              v70 = v63[7];
              v71 = &v22[v70];
              v72 = &v23[v70];
              *(_QWORD *)v71 = *(_QWORD *)v72;
              *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_28:
              swift_storeEnumTagMultiPayload();
              v31 = v115;
              break;
            default:
              memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_19:
              v31 = v115;
              v32 = v119;
              break;
          }
          *(_QWORD *)&v31[v121[6]] = *(_QWORD *)&v18[v121[6]];
          v73 = v121[7];
          v74 = &v31[v73];
          v75 = &v18[v73];
          v76 = *(_QWORD *)&v18[v73 + 24];
          swift_bridgeObjectRetain();
          if (v76)
          {
            *((_QWORD *)v74 + 3) = v76;
            *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
            (**(void (***)(uint64_t, char *, uint64_t))(v76 - 8))((uint64_t)v74, v75, v76);
          }
          else
          {
            v77 = *(_OWORD *)v75;
            v78 = *((_OWORD *)v75 + 1);
            *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
            *(_OWORD *)v74 = v77;
            *((_OWORD *)v74 + 1) = v78;
          }
          v31[v121[8]] = v18[v121[8]];
          *(_QWORD *)(v32 + v120[6]) = *(_QWORD *)((char *)v13 + v120[6]);
          v79 = v120[7];
          v80 = *(void **)((char *)v13 + v79);
          *(_QWORD *)(v32 + v79) = v80;
          v81 = v120[8];
          v82 = (_QWORD *)(v32 + v81);
          v83 = (_QWORD *)((char *)v13 + v81);
          *v82 = *v83;
          v82[1] = v83[1];
          v84 = v120[9];
          v85 = (_QWORD *)(v32 + v84);
          v86 = (_QWORD *)((char *)v13 + v84);
          v87 = type metadata accessor for ActionParaphrase(0);
          swift_bridgeObjectRetain();
          v88 = v80;
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
          {
            v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
            memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          }
          else
          {
            *v85 = *v86;
            v85[1] = v86[1];
            v90 = *(int *)(v87 + 20);
            v91 = (_QWORD *)((char *)v85 + v90);
            v92 = (_QWORD *)((char *)v86 + v90);
            v93 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v92, 1, v93))
            {
              v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
              memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
            }
            else
            {
              *v91 = *v92;
              v91[1] = v92[1];
              v91[2] = v92[2];
              v91[3] = v92[3];
              v95 = *(int *)(v93 + 24);
              v116 = (char *)v91 + v95;
              v113 = (char *)v92 + v95;
              v96 = sub_1C2CFC114();
              v122 = v93;
              v97 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v97(v116, v113, v96);
              __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v122);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v87);
          }
          v10 = v118;
          v98 = v120[10];
          v99 = (void *)(v119 + v98);
          v100 = (char *)v13 + v98;
          if (__swift_getEnumTagSinglePayload((uint64_t)v100, 1, v117))
          {
            v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
            memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
          }
          else
          {
            v114(v99, v100, v117);
            __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v117);
          }
          __swift_storeEnumTagSinglePayload(v119, 0, 1, (uint64_t)v120);
        }
        v102 = *(int *)(v10 + 40);
        v103 = (_QWORD *)((char *)a1 + v102);
        v104 = (_QWORD *)((char *)a2 + v102);
        if (v104[1])
        {
          *v103 = *v104;
          v103[1] = v104[1];
          v103[2] = v104[2];
          v103[3] = v104[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v105 = *((_OWORD *)v104 + 1);
          *(_OWORD *)v103 = *(_OWORD *)v104;
          *((_OWORD *)v103 + 1) = v105;
        }
        goto LABEL_45;
      case 0:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        a1[3] = a2[3];
        sub_1C2CFD350();
        sub_1C2CFD350();
LABEL_45:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1C2A7CABC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  __int128 v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  void (*v71)(char *, char *);
  uint64_t v72;
  char *v73;
  int *__dst;
  _OWORD *__dsta;
  uint64_t v76;
  uint64_t v77;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    a1[3] = a2[3];
    *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
    *((_BYTE *)a1 + 34) = *((_BYTE *)a2 + 34);
    v6 = type metadata accessor for ExecuteResponse(0);
    v7 = *(int *)(v6 + 36);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    v10 = (int *)type metadata accessor for PluginAction();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v77 = v6;
      *v8 = *v9;
      v12 = v10[5];
      v13 = (char *)v8 + v12;
      v14 = (char *)v9 + v12;
      v76 = sub_1C2CFBCAC();
      v71 = *(void (**)(char *, char *))(*(_QWORD *)(v76 - 8) + 32);
      v71(v13, v14);
      __dst = (int *)type metadata accessor for Input(0);
      v15 = __dst[5];
      v16 = &v13[v15];
      v17 = &v14[v15];
      v72 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v18 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
          goto LABEL_18;
        case 1u:
          v19 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v16[*(int *)(v20 + 48)] = *(_QWORD *)&v17[*(int *)(v20 + 48)];
          goto LABEL_18;
        case 4u:
          v21 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
          goto LABEL_18;
        case 6u:
          v22 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v16, v17, v22);
          v23 = type metadata accessor for USOParse();
          v24 = *(int *)(v23 + 20);
          v65 = v23;
          v67 = &v16[v24];
          v69 = &v17[v24];
          v63 = sub_1C2CFBF28();
          if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v63))
          {
            v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v67, v69, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *))(*(_QWORD *)(v63 - 8) + 32))(v67, v69);
            __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v63);
          }
          *(_OWORD *)&v16[*(int *)(v65 + 24)] = *(_OWORD *)&v17[*(int *)(v65 + 24)];
          v30 = *(int *)(v65 + 28);
          v31 = &v16[v30];
          v32 = &v17[v30];
          v31[4] = v32[4];
          *(_DWORD *)v31 = *(_DWORD *)v32;
          goto LABEL_18;
        case 7u:
          v26 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v16, v17, v26);
          v27 = type metadata accessor for USOParse();
          v28 = *(int *)(v27 + 20);
          v66 = v27;
          v68 = &v16[v28];
          v70 = &v17[v28];
          v64 = sub_1C2CFBF28();
          if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v64))
          {
            v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v68, v70, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *))(*(_QWORD *)(v64 - 8) + 32))(v68, v70);
            __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v64);
          }
          *(_OWORD *)&v16[*(int *)(v66 + 24)] = *(_OWORD *)&v17[*(int *)(v66 + 24)];
          v33 = *(int *)(v66 + 28);
          v34 = &v16[v33];
          v35 = &v17[v33];
          v34[4] = v35[4];
          *(_DWORD *)v34 = *(_DWORD *)v35;
          v36 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v16[v36[5]] = *(_OWORD *)&v17[v36[5]];
          *(_OWORD *)&v16[v36[6]] = *(_OWORD *)&v17[v36[6]];
          *(_OWORD *)&v16[v36[7]] = *(_OWORD *)&v17[v36[7]];
LABEL_18:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          break;
      }
      *(_QWORD *)&v13[__dst[6]] = *(_QWORD *)&v14[__dst[6]];
      v37 = __dst[7];
      v38 = &v13[v37];
      v39 = &v14[v37];
      v40 = *((_OWORD *)v39 + 1);
      *(_OWORD *)v38 = *(_OWORD *)v39;
      *((_OWORD *)v38 + 1) = v40;
      *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
      v13[__dst[8]] = v14[__dst[8]];
      *(_QWORD *)((char *)v8 + v10[6]) = *(_QWORD *)((char *)v9 + v10[6]);
      *(_QWORD *)((char *)v8 + v10[7]) = *(_QWORD *)((char *)v9 + v10[7]);
      *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
      v41 = v10[9];
      v42 = (_OWORD *)((char *)v8 + v41);
      v43 = (_OWORD *)((char *)v9 + v41);
      v44 = type metadata accessor for ActionParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        *v42 = *v43;
        v46 = *(int *)(v44 + 20);
        __dsta = (_OWORD *)((char *)v42 + v46);
        v47 = (_OWORD *)((char *)v43 + v46);
        v48 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
          memcpy(__dsta, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          v50 = v47[1];
          *__dsta = *v47;
          __dsta[1] = v50;
          v51 = *(int *)(v48 + 24);
          v73 = (char *)__dsta + v51;
          v52 = (char *)v47 + v51;
          v53 = sub_1C2CFC114();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v73, v52, v53);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v48);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
      }
      v54 = v10[10];
      v55 = (char *)v8 + v54;
      v56 = (char *)v9 + v54;
      if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v76))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v71)(v55, v56, v76);
        __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v76);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
      v6 = v77;
    }
    v58 = *(int *)(v6 + 40);
    v59 = (_OWORD *)((char *)a1 + v58);
    v60 = (_OWORD *)((char *)a2 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1C2A7D120(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  __int128 v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  void (*v71)(char *, char *);
  uint64_t v72;
  char *v73;
  int *__dst;
  _OWORD *__dsta;
  uint64_t v76;
  uint64_t v77;

  if (a1 != a2)
  {
    sub_1C28C9F68((uint64_t)a1, type metadata accessor for FlowToActingFlowAdapter.Event);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      a1[3] = a2[3];
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      *((_BYTE *)a1 + 34) = *((_BYTE *)a2 + 34);
      v6 = type metadata accessor for ExecuteResponse(0);
      v7 = *(int *)(v6 + 36);
      v8 = (_OWORD *)((char *)a1 + v7);
      v9 = (_OWORD *)((char *)a2 + v7);
      v10 = (int *)type metadata accessor for PluginAction();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v77 = v6;
        *v8 = *v9;
        v12 = v10[5];
        v13 = (char *)v8 + v12;
        v14 = (char *)v9 + v12;
        v76 = sub_1C2CFBCAC();
        v71 = *(void (**)(char *, char *))(*(_QWORD *)(v76 - 8) + 32);
        v71(v13, v14);
        __dst = (int *)type metadata accessor for Input(0);
        v15 = __dst[5];
        v16 = &v13[v15];
        v17 = &v14[v15];
        v72 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v18 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
            goto LABEL_19;
          case 1u:
            v19 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
            v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            *(_QWORD *)&v16[*(int *)(v20 + 48)] = *(_QWORD *)&v17[*(int *)(v20 + 48)];
            goto LABEL_19;
          case 4u:
            v21 = sub_1C2CFBD9C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
            goto LABEL_19;
          case 6u:
            v22 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v16, v17, v22);
            v23 = type metadata accessor for USOParse();
            v24 = *(int *)(v23 + 20);
            v65 = v23;
            v67 = &v16[v24];
            v69 = &v17[v24];
            v63 = sub_1C2CFBF28();
            if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v63))
            {
              v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v67, v69, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *))(*(_QWORD *)(v63 - 8) + 32))(v67, v69);
              __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v63);
            }
            *(_OWORD *)&v16[*(int *)(v65 + 24)] = *(_OWORD *)&v17[*(int *)(v65 + 24)];
            v30 = *(int *)(v65 + 28);
            v31 = &v16[v30];
            v32 = &v17[v30];
            v31[4] = v32[4];
            *(_DWORD *)v31 = *(_DWORD *)v32;
            goto LABEL_19;
          case 7u:
            v26 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v16, v17, v26);
            v27 = type metadata accessor for USOParse();
            v28 = *(int *)(v27 + 20);
            v66 = v27;
            v68 = &v16[v28];
            v70 = &v17[v28];
            v64 = sub_1C2CFBF28();
            if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v64))
            {
              v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v68, v70, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *))(*(_QWORD *)(v64 - 8) + 32))(v68, v70);
              __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v64);
            }
            *(_OWORD *)&v16[*(int *)(v66 + 24)] = *(_OWORD *)&v17[*(int *)(v66 + 24)];
            v33 = *(int *)(v66 + 28);
            v34 = &v16[v33];
            v35 = &v17[v33];
            v34[4] = v35[4];
            *(_DWORD *)v34 = *(_DWORD *)v35;
            v36 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&v16[v36[5]] = *(_OWORD *)&v17[v36[5]];
            *(_OWORD *)&v16[v36[6]] = *(_OWORD *)&v17[v36[6]];
            *(_OWORD *)&v16[v36[7]] = *(_OWORD *)&v17[v36[7]];
LABEL_19:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
            break;
        }
        *(_QWORD *)&v13[__dst[6]] = *(_QWORD *)&v14[__dst[6]];
        v37 = __dst[7];
        v38 = &v13[v37];
        v39 = &v14[v37];
        v40 = *((_OWORD *)v39 + 1);
        *(_OWORD *)v38 = *(_OWORD *)v39;
        *((_OWORD *)v38 + 1) = v40;
        *((_QWORD *)v38 + 4) = *((_QWORD *)v39 + 4);
        v13[__dst[8]] = v14[__dst[8]];
        *(_QWORD *)((char *)v8 + v10[6]) = *(_QWORD *)((char *)v9 + v10[6]);
        *(_QWORD *)((char *)v8 + v10[7]) = *(_QWORD *)((char *)v9 + v10[7]);
        *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
        v41 = v10[9];
        v42 = (_OWORD *)((char *)v8 + v41);
        v43 = (_OWORD *)((char *)v9 + v41);
        v44 = type metadata accessor for ActionParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          *v42 = *v43;
          v46 = *(int *)(v44 + 20);
          __dsta = (_OWORD *)((char *)v42 + v46);
          v47 = (_OWORD *)((char *)v43 + v46);
          v48 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
          {
            v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
            memcpy(__dsta, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          }
          else
          {
            v50 = v47[1];
            *__dsta = *v47;
            __dsta[1] = v50;
            v51 = *(int *)(v48 + 24);
            v73 = (char *)__dsta + v51;
            v52 = (char *)v47 + v51;
            v53 = sub_1C2CFC114();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v73, v52, v53);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v48);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
        }
        v54 = v10[10];
        v55 = (char *)v8 + v54;
        v56 = (char *)v9 + v54;
        if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v76))
        {
          v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v71)(v55, v56, v76);
          __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v76);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
        v6 = v77;
      }
      v58 = *(int *)(v6 + 40);
      v59 = (_OWORD *)((char *)a1 + v58);
      v60 = (_OWORD *)((char *)a2 + v58);
      v61 = v60[1];
      *v59 = *v60;
      v59[1] = v61;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C2A7D79C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ExecuteResponse(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_8_45()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_12_43(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C28DD5D0(*(_QWORD *)(v3 - 272), *(_QWORD *)(v3 - 280), a3);
}

uint64_t OUTLINED_FUNCTION_15_36()
{
  return sub_1C2CFDE54();
}

uint64_t *OUTLINED_FUNCTION_17_32@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;

  v3 = *(uint64_t **)(v2 - 312);
  v3[3] = a1;
  v3[4] = a2;
  return __swift_allocate_boxed_opaque_existential_0(v3);
}

uint64_t OUTLINED_FUNCTION_18_31()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_19_34()
{
  return sub_1C2CFDE54();
}

void OUTLINED_FUNCTION_23_35(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  sub_1C28DD5D0(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

uint64_t OUTLINED_FUNCTION_25_30()
{
  return sub_1C2CFDDAC();
}

uint64_t OUTLINED_FUNCTION_29_24@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return sub_1C2A768CC(a1, v2, v3, a2);
}

uint64_t OUTLINED_FUNCTION_30_25()
{
  return type metadata accessor for FlowToActingFlowAdapter.State(0);
}

uint64_t OUTLINED_FUNCTION_31_23@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 352) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_32_29()
{
  return sub_1C2CFDE54();
}

void OUTLINED_FUNCTION_36_26(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C28DD5D0(a1, a2, v2);
}

void OUTLINED_FUNCTION_40_19(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C28DD5D0(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_45_17()
{
  return type metadata accessor for FlowToActingFlowAdapter.State(0);
}

void OUTLINED_FUNCTION_47_19(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C28C9F68(a1, v1);
}

_BYTE *OUTLINED_FUNCTION_49_14()
{
  __int16 v0;
  _BYTE *v1;

  *v1 = v0;
  v1[1] = HIBYTE(v0) & 1;
  return v1;
}

void OUTLINED_FUNCTION_54_21(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C28D3304(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_56_15()
{
  return sub_1C2CFDE54();
}

void OUTLINED_FUNCTION_59_18(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_1C28DD5D0(a1, *(_QWORD *)(a3 - 256), a2);
}

void OUTLINED_FUNCTION_63_12(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C28C53A0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_65_12()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_67_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = a1;
  *(_QWORD *)(v2 - 80) = v1;
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_73_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_74_10()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_85_11()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 24) = v2;
  sub_1C28BB37C(v3 - 128, v1);
}

uint64_t OUTLINED_FUNCTION_94_11()
{
  return type metadata accessor for FlowTraceEvent();
}

uint64_t OUTLINED_FUNCTION_95_11()
{
  return type metadata accessor for Delegate(0);
}

uint64_t *OUTLINED_FUNCTION_96_9()
{
  uint64_t v0;

  return __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 - 160));
}

uint64_t OUTLINED_FUNCTION_101_9()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 200);
}

uint64_t OUTLINED_FUNCTION_102_9()
{
  uint64_t v0;

  return sub_1C28BB340(v0 - 200, v0 - 240);
}

uint64_t OUTLINED_FUNCTION_106_7()
{
  return sub_1C2CFE7C0();
}

void OUTLINED_FUNCTION_107_9(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C28C9F68(a1, v1);
}

uint64_t OUTLINED_FUNCTION_108_9()
{
  __int128 *v0;
  uint64_t v1;

  return sub_1C28B99EC(v0, v1 - 88);
}

uint64_t OUTLINED_FUNCTION_111_7()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_115_5()
{
  return sub_1C2B34250(1);
}

void OUTLINED_FUNCTION_122_4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C28DD5D0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_123_5()
{
  return sub_1C2CFDE54();
}

void OUTLINED_FUNCTION_124_7()
{
  sub_1C2A76A74();
}

double OUTLINED_FUNCTION_127_5()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 - 128) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_131_4(__int128 *a1)
{
  uint64_t v1;

  return sub_1C28B99EC(a1, *(_QWORD *)(v1 - 312));
}

uint64_t *OUTLINED_FUNCTION_133_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = a1;
  *(_QWORD *)(v2 - 168) = a2;
  return __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 200));
}

void OUTLINED_FUNCTION_134_5()
{
  uint64_t v0;

  sub_1C2A76860((uint64_t *)(v0 - 160));
}

uint64_t OUTLINED_FUNCTION_138_8()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 240);
}

uint64_t OUTLINED_FUNCTION_139_4()
{
  return type metadata accessor for FlowToActingFlowAdapter.Event(0);
}

uint64_t OUTLINED_FUNCTION_140_5()
{
  return type metadata accessor for ExecuteResponse(0);
}

void FlowToFlowFrameAdapter.__allocating_init<A>(_:)()
{
  OUTLINED_FUNCTION_5_2();
  FlowToFlowFrameAdapter.init<A>(_:)();
  OUTLINED_FUNCTION_18();
}

uint64_t FlowToFlowFrameAdapter.namespace.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowToFlowFrameAdapter.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C2A7DB5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  swift_beginAccess();
  v4 = type metadata accessor for FlowToFlowFrameAdapter.State(0, *(_QWORD *)(v1 + 80), v2, v3);
  OUTLINED_FUNCTION_59(v4);
  OUTLINED_FUNCTION_21_1();
}

void sub_1C2A7DBA4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  swift_beginAccess();
  v6 = type metadata accessor for FlowToFlowFrameAdapter.State(0, *(_QWORD *)(v3 + 80), v4, v5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(v1 + 7, a1, v6);
  swift_endAccess();
  OUTLINED_FUNCTION_21_1();
}

void FlowToFlowFrameAdapter.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15[2];

  OUTLINED_FUNCTION_9();
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v4, v2);
  OUTLINED_FUNCTION_27_20();
  MEMORY[0x1E0C80A78](v7, v8);
  *(_QWORD *)(v0 + 16) = 6841202;
  *(_QWORD *)(v0 + 24) = 0xE300000000000000;
  OUTLINED_FUNCTION_52_20((uint64_t)&v13 - v9);
  type metadata accessor for AnyFlow();
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v0 + 48) = *(_QWORD *)&v15[0];
    *(_QWORD *)&v15[0] = 0;
    *((_QWORD *)&v15[0] + 1) = 0xE000000000000000;
    sub_1C2CFD350();
    OUTLINED_FUNCTION_49_15();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v15[0] = 0xD000000000000017;
    *((_QWORD *)&v15[0] + 1) = 0x80000001C2D2FA30;
    swift_bridgeObjectRetain();
    sub_1C2CFDE54();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_59_19();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_52_20(v1);
    sub_1C28C8AC4();
    *(_QWORD *)(v0 + 48) = v10;
    *(_QWORD *)&v15[0] = 0;
    *((_QWORD *)&v15[0] + 1) = 0xE000000000000000;
    OUTLINED_FUNCTION_49_15();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v15[0] = 0xD000000000000017;
    *((_QWORD *)&v15[0] + 1) = 0x80000001C2D2FA30;
    *(_QWORD *)&v13 = swift_getDynamicType();
    swift_getMetatypeMetadata();
    sub_1C2CFDDAC();
    sub_1C2CFDE54();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_59_19();
  }
  v11 = *((_QWORD *)&v15[0] + 1);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)&v15[0];
  *(_QWORD *)(v0 + 40) = v11;
  OUTLINED_FUNCTION_38_0();
  sub_1C29DD890((uint64_t)&v13);
  v12 = OUTLINED_FUNCTION_36_0();
  if (v14)
  {
    sub_1C28B99EC(&v13, (uint64_t)v15);
    sub_1C28B99EC(v15, v0 + 56);
  }
  else
  {
    OUTLINED_FUNCTION_26_29(v12, &qword_1ED7A7300);
    *(_QWORD *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 64) = 0;
    *(_QWORD *)(v0 + 72) = 0;
    *(_OWORD *)(v0 + 80) = xmmword_1C2D026C0;
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v3);
  OUTLINED_FUNCTION_1();
}

#error "1C2A7E1D8: call analysis failed (funcsize=233)"

uint64_t sub_1C2A7E238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  v7[21] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79DF70);
  v7[22] = swift_task_alloc();
  v8 = sub_1C2CFBE98();
  v7[23] = v8;
  v7[24] = *(_QWORD *)(v8 - 8);
  v7[25] = swift_task_alloc();
  v9 = sub_1C2CFBCAC();
  v7[26] = v9;
  v7[27] = *(_QWORD *)(v9 - 8);
  v7[28] = swift_task_alloc();
  type metadata accessor for Parse(0);
  v7[29] = swift_task_alloc();
  v7[30] = type metadata accessor for Input(0);
  v7[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2A7E330()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v2 = (int *)v0[30];
  v1 = v0[31];
  v4 = v0[28];
  v3 = v0[29];
  v5 = v0[26];
  v6 = v0[27];
  v7 = v0[17];
  v12 = v0[18];
  sub_1C28F3FD0(v7, v3, type metadata accessor for Parse);
  v8 = v1 + v2[7];
  *(_QWORD *)(v8 + 32) = 0;
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  sub_1C28F3FD0(v3, v1 + v2[5], type metadata accessor for Parse);
  *(_QWORD *)(v1 + v2[6]) = MEMORY[0x1E0DEE9D8];
  sub_1C2CFBCA0();
  sub_1C28C9F68(v3, type metadata accessor for Parse);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v4, v5);
  *(_BYTE *)(v1 + v2[8]) = 0;
  sub_1C28BB37C(v8, &qword_1EF790C90);
  v9 = OUTLINED_FUNCTION_34_25();
  sub_1C28B9A48(v7 + *(int *)(v9 + 28), v8);
  v0[32] = *(_QWORD *)(v12 + 48);
  v10 = (_QWORD *)swift_task_alloc();
  v0[33] = v10;
  *v10 = v0;
  v10[1] = sub_1C2A7E460;
  return sub_1C28CD900(v0[31]);
}

uint64_t sub_1C2A7E460(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 272) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C2A7E4BC()
{
  uint64_t v0;
  unsigned int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  _QWORD v10[3];
  __int128 v11;

  if (*(_BYTE *)(v0 + 272))
    v1 = (unsigned int *)MEMORY[0x1E0D22338];
  else
    v1 = (unsigned int *)MEMORY[0x1E0D22330];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 104))(*(_QWORD *)(v0 + 200), *v1, *(_QWORD *)(v0 + 184));
  sub_1C29DD890(v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_1C28B99EC((__int128 *)(v0 + 56), v0 + 16);
    sub_1C28B9A48(v0 + 16, v0 + 96);
    sub_1C2A7DBA4(v0 + 96);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  else
  {
    OUTLINED_FUNCTION_40_2(v2, &qword_1ED7A7300);
    memset(v10, 0, sizeof(v10));
    v11 = xmmword_1C2D026C0;
    sub_1C2A7DBA4((uint64_t)v10);
  }
  v3 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v8 = *(void (**)(uint64_t))(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7, v4, v6);
  swift_storeEnumTagMultiPayload();
  v8(v7);
  sub_1C28BB37C(v7, (uint64_t *)&unk_1EF79DF70);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_1C28C9F68(v3, type metadata accessor for Input);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2A7E650(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(0, 0);
}

#error "1C2A7EA24: call analysis failed (funcsize=327)"

void sub_1C2A7EC3C()
{
  uint64_t v0;
  _QWORD v1[4];

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)(v0 + 48) + 112))(v1);
  swift_dynamicCast();
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_1C2A7EC90(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  __int128 v12[2];
  uint64_t v13;

  v13 = 0;
  memset(v12, 0, sizeof(v12));
  sub_1C2A7DBA4((uint64_t)v12);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1C28B9A48((uint64_t)a1, (uint64_t)v12);
  v9 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v9[2] = v3;
  sub_1C28B99EC(v12, (uint64_t)(v9 + 3));
  v9[8] = a2;
  v9[9] = a3;
  v10 = *(void (**)(uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(v8 + 8);
  OUTLINED_FUNCTION_38_0();
  sub_1C2CFD350();
  v10(sub_1C2A7FCFC, v9, v7, v8);
  return swift_release();
}

uint64_t sub_1C2A7ED64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  int v22;
  _QWORD v24[2];
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v24[1] = a5;
  v25 = a4;
  v24[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79DF80);
  MEMORY[0x1E0C80A78](v24[0], v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C2CFBE44();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10, v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13, v16);
  v18 = (char *)v24 - v17;
  v19 = *(_QWORD *)(a1 + 8);
  v20 = *(_QWORD *)(a1 + 24);
  if ((*(_BYTE *)a1 & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))((char *)v24 - v17, *MEMORY[0x1E0D222D8], v10);
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v21 = xmmword_1C2D0B900;
LABEL_5:
    v29 = v21;
    goto LABEL_7;
  }
  v22 = *(unsigned __int8 *)(a1 + 16);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))((char *)v24 - v17, *MEMORY[0x1E0D222D0], v10);
  if (v22 == 1)
  {
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v21 = xmmword_1C2D026C0;
    goto LABEL_5;
  }
  sub_1C28B9A48(a3, (uint64_t)&v26);
LABEL_7:
  sub_1C2A7DBA4((uint64_t)&v26);
  if (v19)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791698);
    swift_allocObject();
    sub_1C2CFD350();
    v26 = sub_1C2A64CD8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791B20);
    swift_allocObject();
    sub_1C2A7FD14();
    sub_1C2CFBE38();
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v18, v10);
  if (v20)
  {
    sub_1C2CFBEA4();
    swift_allocObject();
    sub_1C2CFD350();
    sub_1C2CFBEB0();
  }
  type metadata accessor for SiriKitFlowFrameInput();
  sub_1C2CFD350();
  sub_1C2CFBE50();
  swift_storeEnumTagMultiPayload();
  v25(v9);
  swift_release();
  sub_1C28BB37C((uint64_t)v9, &qword_1EF79DF80);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
}

void sub_1C2A7F018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v4[32];

  sub_1C28BB340(a2, (uint64_t)v4);
  (*(void (**)(_BYTE *))(a3 + 16))(v4);
  sub_1C28BB37C((uint64_t)v4, &qword_1ED7A8480);
}

uint64_t sub_1C2A7F064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1C2CFD350();
  sub_1C296D664((uint64_t)sub_1C2A7FD58, v4);
  return swift_release();
}

void sub_1C2A7F0C4(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *);
  uint64_t v18;
  char v19;

  v16 = a3;
  v17 = a2;
  v4 = type metadata accessor for ExecuteResponse(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4, v7);
  v8 = sub_1C2CFBE44();
  MEMORY[0x1E0C80A78](v8, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79DF80);
  MEMORY[0x1E0C80A78](v10, v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 8))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791698);
    swift_allocObject();
    swift_retain_n();
    v18 = sub_1C2A64CD8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791B20);
    swift_allocObject();
    sub_1C2A7FD14();
    sub_1C2CFBE38();
    swift_release();
  }
  v19 = *(_BYTE *)a1;
  sub_1C2A7F334();
  sub_1C28F3FD0(a1, (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ExecuteResponse);
  v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = swift_allocObject();
  sub_1C28F31CC((uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for ExecuteResponse);
  sub_1C2CFBEA4();
  swift_allocObject();
  sub_1C2CFD350();
  sub_1C2CFBEB0();
  type metadata accessor for SiriKitFlowFrameInput();
  sub_1C2CFBE50();
  swift_storeEnumTagMultiPayload();
  v17(v13);
  swift_release();
  sub_1C28BB37C((uint64_t)v13, &qword_1EF79DF80);
}

void sub_1C2A7F334()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  OUTLINED_FUNCTION_0_1();
  v3 = MEMORY[0x1E0C80A78](v1, v2);
  MEMORY[0x1E0C80A78](v3, v4);
  __asm { BR              X10 }
}

uint64_t sub_1C2A7F3B8()
{
  uint64_t (*v0)(void);

  sub_1C2CFBE44();
  OUTLINED_FUNCTION_1();
  return v0();
}

#error "1C2A7F660: call analysis failed (funcsize=152)"

void sub_1C2A7F6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE v4[32];

  v3 = *(_QWORD *)(a3 + 24);
  if (v3)
  {
    sub_1C28BB340(a2, (uint64_t)v4);
    (*(void (**)(_BYTE *))(v3 + 16))(v4);
    sub_1C28BB37C((uint64_t)v4, &qword_1ED7A8480);
  }
}

void FlowToFlowFrameAdapter.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = type metadata accessor for FlowToFlowFrameAdapter.State(0, *(_QWORD *)(v1 + 80), v2, v3);
  OUTLINED_FUNCTION_33_1(v4);
  OUTLINED_FUNCTION_18();
}

uint64_t FlowToFlowFrameAdapter.__deallocating_deinit()
{
  FlowToFlowFrameAdapter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A7F77C()
{
  return FlowToFlowFrameAdapter.debugDescription.getter();
}

uint64_t sub_1C2A7F79C()
{
  return FlowToFlowFrameAdapter.namespace.getter();
}

uint64_t sub_1C2A7F7BC()
{
  return sub_1C2A7DE30();
}

uint64_t sub_1C2A7F7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  v6 = sub_1C2CFD350();
  sub_1C2A7E650(v6, (uint64_t (*)(_QWORD, _QWORD))sub_1C2A7FCBC);
  return swift_release();
}

uint64_t sub_1C2A7F83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2A7E67C(a1, a3, a4);
}

void sub_1C2A7F864()
{
  sub_1C2A7EC3C();
}

uint64_t type metadata accessor for FlowToFlowFrameAdapter.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowToFlowFrameAdapter.State);
}

uint64_t sub_1C2A7F890()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_9();
  v1 = OUTLINED_FUNCTION_34_25();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = (id *)(v0 + v2);
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v4 = OUTLINED_FUNCTION_36_27();
      goto LABEL_7;
    case 1u:
      v5 = OUTLINED_FUNCTION_36_27();
      OUTLINED_FUNCTION_15_28(v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      v4 = sub_1C2CFBD9C();
LABEL_7:
      OUTLINED_FUNCTION_15_28(v4);
      break;
    case 5u:

      break;
    case 6u:
      v6 = OUTLINED_FUNCTION_35_22();
      OUTLINED_FUNCTION_15_28(v6);
      OUTLINED_FUNCTION_38_3();
      v7 = OUTLINED_FUNCTION_31_24();
      if (!OUTLINED_FUNCTION_22_33(v7))
        OUTLINED_FUNCTION_28_26();
      goto LABEL_15;
    case 7u:
      v8 = OUTLINED_FUNCTION_35_22();
      OUTLINED_FUNCTION_15_28(v8);
      OUTLINED_FUNCTION_38_3();
      v9 = OUTLINED_FUNCTION_31_24();
      if (!OUTLINED_FUNCTION_22_33(v9))
        OUTLINED_FUNCTION_28_26();
      OUTLINED_FUNCTION_47_16();
      type metadata accessor for LinkParse();
      OUTLINED_FUNCTION_47_16();
      OUTLINED_FUNCTION_47_16();
LABEL_15:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3 + *(int *)(v1 + 28));
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_1();
  return swift_deallocObject();
}

uint64_t sub_1C2A7FA50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(OUTLINED_FUNCTION_34_25() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + v6);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1C28C33A0;
  return sub_1C2A7E238(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_1C2A7FB10(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for FlowToFlowFrameAdapter<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2A7FB3C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FlowToFlowFrameAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowToFlowFrameAdapter);
}

uint64_t method lookup function for FlowToFlowFrameAdapter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.onInput(controller:input:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.execute(controller:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.action(renderer:args:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.exit(controller:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t sub_1C2A7FBE4(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t sub_1C2A7FC40(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 2;
  }
  return result;
}

uint64_t sub_1C2A7FC98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A7FCBC(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1C2A8A640(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1C2A7FCC8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A7FCFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A7ED64(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(void (**)(char *))(v1 + 64), *(_QWORD *)(v1 + 72));
}

void sub_1C2A7FD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C2A7F018(a1, a2, v2);
}

unint64_t sub_1C2A7FD14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF7916A0;
  if (!qword_1EF7916A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF791698);
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for FlowToFlowFrameAdapter<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF7916A0);
  }
  return result;
}

void sub_1C2A7FD58(uint64_t a1)
{
  uint64_t v1;

  sub_1C2A7F0C4(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C2A7FD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;

  v1 = type metadata accessor for ExecuteResponse(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  v3 = v2 + *(int *)(v1 + 36);
  v4 = (int *)type metadata accessor for PluginAction();
  if (!__swift_getEnumTagSinglePayload(v3, 1, (uint64_t)v4))
  {
    swift_bridgeObjectRelease();
    v5 = v3 + v4[5];
    sub_1C2CFBCAC();
    v6 = OUTLINED_FUNCTION_56_16();
    v63 = v8;
    v64 = v7;
    ((void (*)(uint64_t))v8)(v6);
    v9 = type metadata accessor for Input(0);
    v10 = (id *)(v5 + *(int *)(v9 + 20));
    type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v11 = OUTLINED_FUNCTION_36_27();
        goto LABEL_8;
      case 1u:
        v12 = OUTLINED_FUNCTION_36_27();
        OUTLINED_FUNCTION_4_48(v12);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        swift_release();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_16;
      case 3u:
        swift_unknownObjectRelease();
        break;
      case 4u:
        v11 = sub_1C2CFBD9C();
LABEL_8:
        OUTLINED_FUNCTION_4_48(v11);
        break;
      case 5u:

        break;
      case 6u:
        v13 = OUTLINED_FUNCTION_35_22();
        OUTLINED_FUNCTION_4_48(v13);
        OUTLINED_FUNCTION_38_3();
        v14 = OUTLINED_FUNCTION_29_25();
        v22 = OUTLINED_FUNCTION_21_34(v14, v15, v16, v17, v18, v19, v20, v21, v54, v57, v60);
        if (!(_DWORD)v22)
          OUTLINED_FUNCTION_30_26(v22, v23, v24, v25, v26, v27, v28, v29, v55, v58, v61);
        goto LABEL_16;
      case 7u:
        v30 = OUTLINED_FUNCTION_35_22();
        OUTLINED_FUNCTION_4_48(v30);
        OUTLINED_FUNCTION_38_3();
        v31 = OUTLINED_FUNCTION_29_25();
        v39 = OUTLINED_FUNCTION_21_34(v31, v32, v33, v34, v35, v36, v37, v38, v54, v57, v60);
        if (!(_DWORD)v39)
          OUTLINED_FUNCTION_30_26(v39, v40, v41, v42, v43, v44, v45, v46, v56, v59, v62);
        OUTLINED_FUNCTION_47_16();
        type metadata accessor for LinkParse();
        OUTLINED_FUNCTION_47_16();
        OUTLINED_FUNCTION_47_16();
LABEL_16:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    swift_bridgeObjectRelease();
    v47 = v5 + *(int *)(v9 + 28);
    if (*(_QWORD *)(v47 + 24))
      __swift_destroy_boxed_opaque_existential_1(v47);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_47_16();
    v48 = type metadata accessor for ActionParaphrase(0);
    if (!OUTLINED_FUNCTION_13_3(v48))
    {
      swift_bridgeObjectRelease();
      v49 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (!OUTLINED_FUNCTION_13_3(v49))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C2CFC114();
        v50 = OUTLINED_FUNCTION_56_16();
        v51(v50);
      }
    }
    v52 = v3 + v4[10];
    if (!__swift_getEnumTagSinglePayload(v52, 1, v64))
      v63(v52, v64);
  }
  if (*(_QWORD *)(v2 + *(int *)(v1 + 40) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_1C2A80064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExecuteResponse(0) - 8) + 80);
  sub_1C2A7F6C0(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t OUTLINED_FUNCTION_1_41()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_4_48(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_10_49@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_12_44()
{
  return sub_1C2CFE694();
}

uint64_t OUTLINED_FUNCTION_21_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return __swift_getEnumTagSinglePayload(a11, 1, a1);
}

uint64_t OUTLINED_FUNCTION_22_33(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_23_36()
{
  return sub_1C2CFE7FC();
}

void OUTLINED_FUNCTION_26_29(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1C28BB37C(v2 - 160, a2);
}

uint64_t OUTLINED_FUNCTION_28_26()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_29_25()
{
  return sub_1C2CFBF28();
}

uint64_t OUTLINED_FUNCTION_30_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a9 - 8) + 8))(a11);
}

uint64_t OUTLINED_FUNCTION_31_24()
{
  return sub_1C2CFBF28();
}

uint64_t OUTLINED_FUNCTION_32_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_34_25()
{
  return type metadata accessor for SiriKitFlowFrameInput();
}

uint64_t OUTLINED_FUNCTION_36_27()
{
  return sub_1C2CFCD44();
}

double OUTLINED_FUNCTION_47_20()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_QWORD *)(v0 - 176) = 0;
  *(_OWORD *)(v0 - 208) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_49_15()
{
  return sub_1C2CFE670();
}

uint64_t OUTLINED_FUNCTION_56_16()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_59_19()
{
  return sub_1C2CFDE54();
}

Swift::Void __swiftcall FlowTracing.activate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1;
  v4 = v0;
  if (qword_1ED7A7130 != -1)
    swift_once();
  OUTLINED_FUNCTION_21_0();
  swift_unknownObjectRetain();
  sub_1C2A70C58();
  v5 = *(_QWORD *)(qword_1ED7AA100 + 16);
  sub_1C2942A3C(v5);
  v6 = qword_1ED7AA100;
  *(_QWORD *)(qword_1ED7AA100 + 16) = v5 + 1;
  v7 = v6 + 16 * v5;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = v3;
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
}

Swift::Void __swiftcall FlowTracing.deactivate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1;
  v3 = v0;
  if (qword_1ED7A7130 != -1)
    v0 = swift_once();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_21_0();
  v4 = sub_1C2A803FC((uint64_t (*)(__int128 *))sub_1C2A80900);
  if (*(_QWORD *)(qword_1ED7AA100 + 16) < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1C2A6A2C8(v4);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v3, v2);
  }
}

void sub_1C2A803E8()
{
  qword_1ED7AA100 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C2A803FC(uint64_t (*a1)(__int128 *))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t i;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD *v23;

  v3 = v2;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 16);
  if (!v5)
    return 0;
  swift_bridgeObjectRetain();
  v7 = 0;
  for (i = 32; ; i += 16)
  {
    v22 = *(_OWORD *)(v4 + i);
    v9 = v22;
    swift_unknownObjectRetain();
    v10 = a1(&v22);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return v9;
    }
    v11 = v10;
    swift_unknownObjectRelease();
    if ((v11 & 1) != 0)
      break;
    if (-v5 == --v7)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v4 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  v9 = -v7;
  v13 = 1 - v7;
  if (!__OFADD__(-v7, 1))
  {
    v14 = *(_QWORD *)(v4 + 16);
    if (v13 == v14)
      return v9;
    v15 = i + 16;
    while (v13 < v14)
    {
      v22 = *(_OWORD *)(v4 + v15);
      swift_unknownObjectRetain();
      v16 = a1(&v22);
      result = swift_unknownObjectRelease();
      if ((v16 & 1) == 0)
      {
        if (v13 != v9)
        {
          if ((v9 & 0x8000000000000000) != 0)
            goto LABEL_28;
          v17 = *(_QWORD *)(v4 + 16);
          if (v9 >= v17)
            goto LABEL_29;
          if (v13 >= v17)
            goto LABEL_30;
          v20 = *(_OWORD *)(v4 + 32 + 16 * v9);
          v21 = *(_OWORD *)(v4 + v15);
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C2BD1380();
            v4 = v19;
          }
          *(_OWORD *)(v4 + 16 * v9 + 32) = v21;
          result = swift_unknownObjectRelease();
          if (v13 >= *(_QWORD *)(v4 + 16))
            goto LABEL_31;
          *(_OWORD *)(v4 + v15) = v20;
          result = swift_unknownObjectRelease();
          *v23 = v4;
        }
        if (__OFADD__(v9++, 1))
          goto LABEL_27;
      }
      ++v13;
      v14 = *(_QWORD *)(v4 + 16);
      v15 += 16;
      if (v13 == v14)
        return v9;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C2A80620(uint64_t (*a1)(unint64_t))
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v1;
  v5 = type metadata accessor for SnippetManager.SnippetRecord(0);
  v7 = MEMORY[0x1E0C80A78](v5, v6);
  v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7, v9);
  v37 = (uint64_t)&v34 - v11;
  MEMORY[0x1E0C80A78](v10, v12);
  v39 = (uint64_t)&v34 - v14;
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  if (v16)
  {
    v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v18 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain();
    v19 = 0;
    v35 = v17;
    while (1)
    {
      v20 = a1(v15 + v17);
      if (v2)
      {
LABEL_6:
        OUTLINED_FUNCTION_126();
        return;
      }
      if ((v20 & 1) != 0)
        break;
      ++v19;
      v17 += v18;
      if (v16 == v19)
        goto LABEL_6;
    }
    OUTLINED_FUNCTION_126();
    if (!__OFADD__(v19, 1))
    {
      v21 = *(_QWORD *)(v15 + 16);
      if (v19 + 1 == v21)
        return;
      v22 = v18 + v17;
      v23 = v19 + 1;
      v34 = v1;
      v36 = v18;
      while (v23 < v21)
      {
        v24 = v3;
        v40 = v22;
        v25 = v39;
        sub_1C2A86474(v15 + v22, v39);
        v26 = a1(v25);
        sub_1C29E8F24(v25, type metadata accessor for SnippetManager.SnippetRecord);
        if ((v26 & 1) != 0)
        {
          v3 = v24;
          v27 = v36;
        }
        else
        {
          v3 = v24;
          v27 = v36;
          if (v23 != v19)
          {
            if ((v19 & 0x8000000000000000) != 0)
              goto LABEL_31;
            v28 = *v3;
            v29 = *(_QWORD *)(*v3 + 16);
            if (v19 >= v29)
              goto LABEL_32;
            sub_1C2A86474(v28 + v35 + v19 * v36, v37);
            if (v23 >= v29)
              goto LABEL_33;
            sub_1C2A86474(v28 + v40, v38);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v3 = v34;
            *v34 = v28;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1C2BD13BC();
              v28 = v33;
              *v3 = v33;
            }
            if (v19 >= *(_QWORD *)(v28 + 16))
              goto LABEL_34;
            sub_1C2A864B8(v38, v28 + v35 + v19 * v27);
            if (v23 >= *(_QWORD *)(*v3 + 16))
              goto LABEL_35;
            sub_1C2A864B8(v37, *v3 + v40);
          }
          if (__OFADD__(v19++, 1))
            goto LABEL_30;
        }
        v32 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_29;
        v15 = *v3;
        v21 = *(_QWORD *)(*v3 + 16);
        ++v23;
        v22 = v40 + v27;
        if (v32 == v21)
          return;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    __break(1u);
  }
}

BOOL sub_1C2A80900(_QWORD *a1)
{
  uint64_t v1;

  return *a1 == *(_QWORD *)(v1 + 32);
}

uint64_t initializeBufferWithCopyOfBuffer for FlowTraceEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1C2A80974 + 4 * word_1C2D0BA70[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  sub_1C2CFD350();
  return v7;
}

void initializeWithCopy for FlowTraceEvent()
{
  char *v0;

  v0 = (char *)sub_1C2A81DC0 + 4 * word_1C2D0BAEA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1C2A81DC0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__src, uint64_t a18, void *__dst, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _QWORD *v32;
  _QWORD *v33;

  *v32 = *v33;
  sub_1C2CFD350();
  swift_storeEnumTagMultiPayload();
  return v32;
}

uint64_t assignWithCopy for FlowTraceEvent(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1C29E8F24(result, (uint64_t (*)(_QWORD))type metadata accessor for FlowTraceEvent);
    v2 = (char *)&loc_1C2A83204 + 4 * word_1C2D0BB36[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for FlowTraceEvent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  __int128 v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  __int128 v109;
  uint64_t v110;
  _OWORD *v111;
  _OWORD *v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  _OWORD *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  __int128 v146;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  void (*v154)(char *, char *);
  uint64_t v155;
  char *v156;
  int *v157;
  _OWORD *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  void *__dst;
  int *__dsta;
  int *__dstb;
  char *__dstc;
  char *__dstd;
  _OWORD *v169;
  uint64_t v170;
  uint64_t v171;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 9:
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791B28);
      v19 = *(int *)(v18 + 48);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_1C2CFBCAC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      v23 = (int *)type metadata accessor for Input(0);
      v24 = v23[5];
      v25 = &v20[v24];
      v26 = &v21[v24];
      v27 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v28 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
          goto LABEL_24;
        case 1u:
          v60 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v25, v26, v60);
          v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v25[*(int *)(v61 + 48)] = *(_QWORD *)&v26[*(int *)(v61 + 48)];
          goto LABEL_24;
        case 4u:
          v62 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v25, v26, v62);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          v171 = v18;
          v63 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v25, v26, v63);
          v64 = type metadata accessor for USOParse();
          v65 = *(int *)(v64 + 20);
          v162 = v64;
          __dstc = &v25[v65];
          v66 = &v26[v65];
          v67 = sub_1C2CFBF28();
          if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
          {
            v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(__dstc, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(__dstc, v66, v67);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v67);
          }
          *(_OWORD *)&v25[*(int *)(v162 + 24)] = *(_OWORD *)&v26[*(int *)(v162 + 24)];
          v99 = *(int *)(v162 + 28);
          v100 = &v25[v99];
          v101 = &v26[v99];
          v100[4] = v101[4];
          *(_DWORD *)v100 = *(_DWORD *)v101;
          goto LABEL_46;
        case 7u:
          v171 = v18;
          v69 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v25, v26, v69);
          v70 = type metadata accessor for USOParse();
          v71 = *(int *)(v70 + 20);
          v163 = v70;
          __dstd = &v25[v71];
          v72 = &v26[v71];
          v73 = sub_1C2CFBF28();
          if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
          {
            v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(__dstd, v72, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(__dstd, v72, v73);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v73);
          }
          *(_OWORD *)&v25[*(int *)(v163 + 24)] = *(_OWORD *)&v26[*(int *)(v163 + 24)];
          v102 = *(int *)(v163 + 28);
          v103 = &v25[v102];
          v104 = &v26[v102];
          v103[4] = v104[4];
          *(_DWORD *)v103 = *(_DWORD *)v104;
          v105 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v25[v105[5]] = *(_OWORD *)&v26[v105[5]];
          *(_OWORD *)&v25[v105[6]] = *(_OWORD *)&v26[v105[6]];
          *(_OWORD *)&v25[v105[7]] = *(_OWORD *)&v26[v105[7]];
LABEL_46:
          swift_storeEnumTagMultiPayload();
          v18 = v171;
          break;
        default:
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          break;
      }
      *(_QWORD *)&v20[v23[6]] = *(_QWORD *)&v21[v23[6]];
      v106 = v23[7];
      v107 = &v20[v106];
      v108 = &v21[v106];
      v109 = *((_OWORD *)v108 + 1);
      *(_OWORD *)v107 = *(_OWORD *)v108;
      *((_OWORD *)v107 + 1) = v109;
      *((_QWORD *)v107 + 4) = *((_QWORD *)v108 + 4);
      v20[v23[8]] = v21[v23[8]];
      v110 = *(int *)(v18 + 64);
      v111 = (_OWORD *)((char *)a1 + v110);
      v112 = (_OWORD *)((char *)a2 + v110);
      v113 = v112[1];
      *v111 = *v112;
      v111[1] = v113;
      *(_OWORD *)((char *)v111 + 25) = *(_OWORD *)((char *)v112 + 25);
      goto LABEL_64;
    case 3:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A70D0) + 48);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      *v30 = *((_BYTE *)a2 + v29);
      *((_QWORD *)v30 + 1) = *(_QWORD *)((char *)a2 + v29 + 8);
      v30[16] = *((_BYTE *)a2 + v29 + 16);
      *((_QWORD *)v30 + 3) = *(_QWORD *)((char *)a2 + v29 + 24);
      v30[34] = *((_BYTE *)a2 + v29 + 34);
      *((_WORD *)v30 + 16) = *(_WORD *)((char *)a2 + v29 + 32);
      v32 = type metadata accessor for ExecuteResponse(0);
      v33 = *(int *)(v32 + 36);
      v34 = &v30[v33];
      v35 = &v31[v33];
      v36 = (int *)type metadata accessor for PluginAction();
      if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, (uint64_t)v36))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        __dst = (void *)v32;
        v169 = v34;
        *(_OWORD *)v34 = *(_OWORD *)v35;
        v38 = v36[5];
        v39 = &v34[v38];
        v40 = &v35[v38];
        v159 = sub_1C2CFBCAC();
        v154 = *(void (**)(char *, char *))(*(_QWORD *)(v159 - 8) + 32);
        v154(v39, v40);
        v157 = (int *)type metadata accessor for Input(0);
        v41 = v157[5];
        v42 = &v39[v41];
        v43 = &v40[v41];
        v155 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v44 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
            goto LABEL_52;
          case 1u:
            v75 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v42, v43, v75);
            v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            *(_QWORD *)&v42[*(int *)(v76 + 48)] = *(_QWORD *)&v43[*(int *)(v76 + 48)];
            goto LABEL_52;
          case 4u:
            v77 = sub_1C2CFBD9C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v42, v43, v77);
            goto LABEL_52;
          case 6u:
            v78 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v42, v43, v78);
            v79 = type metadata accessor for USOParse();
            v80 = *(int *)(v79 + 20);
            v150 = v79;
            v152 = &v42[v80];
            v81 = &v43[v80];
            v148 = sub_1C2CFBF28();
            if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v148))
            {
              v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v152, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *))(*(_QWORD *)(v148 - 8) + 32))(v152, v81);
              __swift_storeEnumTagSinglePayload((uint64_t)v152, 0, 1, v148);
            }
            *(_OWORD *)&v42[*(int *)(v150 + 24)] = *(_OWORD *)&v43[*(int *)(v150 + 24)];
            v114 = *(int *)(v150 + 28);
            v115 = &v42[v114];
            v116 = &v43[v114];
            v115[4] = v116[4];
            *(_DWORD *)v115 = *(_DWORD *)v116;
            goto LABEL_52;
          case 7u:
            v83 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v42, v43, v83);
            v84 = type metadata accessor for USOParse();
            v85 = *(int *)(v84 + 20);
            v151 = v84;
            v153 = &v42[v85];
            v86 = &v43[v85];
            v149 = sub_1C2CFBF28();
            if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v149))
            {
              v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v153, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *))(*(_QWORD *)(v149 - 8) + 32))(v153, v86);
              __swift_storeEnumTagSinglePayload((uint64_t)v153, 0, 1, v149);
            }
            *(_OWORD *)&v42[*(int *)(v151 + 24)] = *(_OWORD *)&v43[*(int *)(v151 + 24)];
            v117 = *(int *)(v151 + 28);
            v118 = &v42[v117];
            v119 = &v43[v117];
            v118[4] = v119[4];
            *(_DWORD *)v118 = *(_DWORD *)v119;
            v120 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&v42[v120[5]] = *(_OWORD *)&v43[v120[5]];
            *(_OWORD *)&v42[v120[6]] = *(_OWORD *)&v43[v120[6]];
            *(_OWORD *)&v42[v120[7]] = *(_OWORD *)&v43[v120[7]];
LABEL_52:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
            break;
        }
        *(_QWORD *)&v39[v157[6]] = *(_QWORD *)&v40[v157[6]];
        v121 = v157[7];
        v122 = &v39[v121];
        v123 = &v40[v121];
        v124 = *((_OWORD *)v123 + 1);
        *(_OWORD *)v122 = *(_OWORD *)v123;
        *((_OWORD *)v122 + 1) = v124;
        *((_QWORD *)v122 + 4) = *((_QWORD *)v123 + 4);
        v39[v157[8]] = v40[v157[8]];
        v125 = (uint64_t)v169;
        *(_QWORD *)((char *)v169 + v36[6]) = *(_QWORD *)&v35[v36[6]];
        *(_QWORD *)((char *)v169 + v36[7]) = *(_QWORD *)&v35[v36[7]];
        *(_OWORD *)((char *)v169 + v36[8]) = *(_OWORD *)&v35[v36[8]];
        v126 = v36[9];
        v127 = (_OWORD *)((char *)v169 + v126);
        v128 = &v35[v126];
        v129 = type metadata accessor for ActionParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v128, 1, v129))
        {
          v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
          memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          *v127 = *(_OWORD *)v128;
          v131 = *(int *)(v129 + 20);
          v158 = (_OWORD *)((char *)v127 + v131);
          v132 = &v128[v131];
          v133 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v132, 1, v133))
          {
            v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
            memcpy(v158, v132, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
          }
          else
          {
            v135 = *((_OWORD *)v132 + 1);
            *v158 = *(_OWORD *)v132;
            v158[1] = v135;
            v136 = *(int *)(v133 + 24);
            v156 = (char *)v158 + v136;
            v137 = &v132[v136];
            v138 = sub_1C2CFC114();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v156, v137, v138);
            __swift_storeEnumTagSinglePayload((uint64_t)v158, 0, 1, v133);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v127, 0, 1, v129);
          v125 = (uint64_t)v169;
        }
        v139 = v36[10];
        v140 = (void *)(v125 + v139);
        v141 = &v35[v139];
        if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, v159))
        {
          v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
          memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        }
        else
        {
          ((void (*)(void *, char *, uint64_t))v154)(v140, v141, v159);
          __swift_storeEnumTagSinglePayload((uint64_t)v140, 0, 1, v159);
        }
        __swift_storeEnumTagSinglePayload(v125, 0, 1, (uint64_t)v36);
        v32 = (uint64_t)__dst;
      }
      v143 = *(int *)(v32 + 40);
      v144 = &v30[v143];
      v145 = &v31[v143];
      v146 = *((_OWORD *)v145 + 1);
      *(_OWORD *)v144 = *(_OWORD *)v145;
      *((_OWORD *)v144 + 1) = v146;
      goto LABEL_64;
    case 2:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A70D8);
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1C2CFBCAC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      v11 = (int *)type metadata accessor for Input(0);
      v12 = v11[5];
      v13 = &v8[v12];
      v14 = &v9[v12];
      v15 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v16 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
          goto LABEL_16;
        case 1u:
          v45 = sub_1C2CFCD44();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v13, v14, v45);
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
          *(_QWORD *)&v13[*(int *)(v46 + 48)] = *(_QWORD *)&v14[*(int *)(v46 + 48)];
          goto LABEL_16;
        case 4u:
          v47 = sub_1C2CFBD9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v13, v14, v47);
LABEL_16:
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          v170 = v6;
          v48 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v13, v14, v48);
          v49 = type metadata accessor for USOParse();
          v50 = *(int *)(v49 + 20);
          v160 = &v13[v50];
          __dsta = (int *)v49;
          v51 = &v14[v50];
          v52 = sub_1C2CFBF28();
          if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
          {
            v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v160, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v160, v51, v52);
            __swift_storeEnumTagSinglePayload((uint64_t)v160, 0, 1, v52);
          }
          *(_OWORD *)&v13[__dsta[6]] = *(_OWORD *)&v14[__dsta[6]];
          v88 = __dsta[7];
          v89 = &v13[v88];
          v90 = &v14[v88];
          v89[4] = v90[4];
          *(_DWORD *)v89 = *(_DWORD *)v90;
          goto LABEL_40;
        case 7u:
          v170 = v6;
          v54 = sub_1C2CFBFD0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v13, v14, v54);
          v55 = type metadata accessor for USOParse();
          v56 = *(int *)(v55 + 20);
          v161 = &v13[v56];
          __dstb = (int *)v55;
          v57 = &v14[v56];
          v58 = sub_1C2CFBF28();
          if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
          {
            v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
            memcpy(v161, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v161, v57, v58);
            __swift_storeEnumTagSinglePayload((uint64_t)v161, 0, 1, v58);
          }
          *(_OWORD *)&v13[__dstb[6]] = *(_OWORD *)&v14[__dstb[6]];
          v91 = __dstb[7];
          v92 = &v13[v91];
          v93 = &v14[v91];
          v92[4] = v93[4];
          *(_DWORD *)v92 = *(_DWORD *)v93;
          v94 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v13[v94[5]] = *(_OWORD *)&v14[v94[5]];
          *(_OWORD *)&v13[v94[6]] = *(_OWORD *)&v14[v94[6]];
          *(_OWORD *)&v13[v94[7]] = *(_OWORD *)&v14[v94[7]];
LABEL_40:
          swift_storeEnumTagMultiPayload();
          v6 = v170;
          break;
        default:
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          break;
      }
      *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
      v95 = v11[7];
      v96 = &v8[v95];
      v97 = &v9[v95];
      v98 = *((_OWORD *)v97 + 1);
      *(_OWORD *)v96 = *(_OWORD *)v97;
      *((_OWORD *)v96 + 1) = v98;
      *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
      v8[v11[8]] = v9[v11[8]];
      *((_BYTE *)a1 + *(int *)(v6 + 64)) = *((_BYTE *)a2 + *(int *)(v6 + 64));
LABEL_64:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FlowTraceEvent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  __int128 v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  int *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  __int128 v112;
  uint64_t v113;
  _OWORD *v114;
  _OWORD *v115;
  __int128 v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  int *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  _OWORD *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  __int128 v149;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  void (*v159)(char *, char *);
  uint64_t v160;
  char *v161;
  int *__dst;
  int *__dsta;
  int *__dstb;
  int *__dstc;
  int *__dstd;
  _OWORD *__dste;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  _OWORD *v178;
  uint64_t v179;
  uint64_t v180;

  if (a1 != a2)
  {
    sub_1C29E8F24((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FlowTraceEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791B28);
        v20 = *(int *)(v19 + 48);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_1C2CFBCAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
        v24 = (int *)type metadata accessor for Input(0);
        v25 = v24[5];
        v26 = &v21[v25];
        v27 = &v22[v25];
        v28 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v29 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
            goto LABEL_25;
          case 1u:
            v63 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v26, v27, v63);
            v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            *(_QWORD *)&v26[*(int *)(v64 + 48)] = *(_QWORD *)&v27[*(int *)(v64 + 48)];
            goto LABEL_25;
          case 4u:
            v65 = sub_1C2CFBD9C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v26, v27, v65);
LABEL_25:
            swift_storeEnumTagMultiPayload();
            break;
          case 6u:
            v180 = v19;
            v66 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v26, v27, v66);
            __dstc = (int *)type metadata accessor for USOParse();
            v67 = __dstc[5];
            v176 = &v26[v67];
            v68 = &v27[v67];
            v69 = sub_1C2CFBF28();
            v171 = v68;
            v70 = (uint64_t)v68;
            v71 = v69;
            if (__swift_getEnumTagSinglePayload(v70, 1, v69))
            {
              v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v176, v171, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v176, v171, v71);
              __swift_storeEnumTagSinglePayload((uint64_t)v176, 0, 1, v71);
            }
            *(_OWORD *)&v26[__dstc[6]] = *(_OWORD *)&v27[__dstc[6]];
            v102 = __dstc[7];
            v103 = &v26[v102];
            v104 = &v27[v102];
            v103[4] = v104[4];
            *(_DWORD *)v103 = *(_DWORD *)v104;
            goto LABEL_47;
          case 7u:
            v180 = v19;
            v73 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v26, v27, v73);
            __dstd = (int *)type metadata accessor for USOParse();
            v74 = __dstd[5];
            v177 = &v26[v74];
            v75 = &v27[v74];
            v76 = sub_1C2CFBF28();
            v172 = v75;
            v77 = (uint64_t)v75;
            v78 = v76;
            if (__swift_getEnumTagSinglePayload(v77, 1, v76))
            {
              v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v177, v172, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v177, v172, v78);
              __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, v78);
            }
            *(_OWORD *)&v26[__dstd[6]] = *(_OWORD *)&v27[__dstd[6]];
            v105 = __dstd[7];
            v106 = &v26[v105];
            v107 = &v27[v105];
            v106[4] = v107[4];
            *(_DWORD *)v106 = *(_DWORD *)v107;
            v108 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&v26[v108[5]] = *(_OWORD *)&v27[v108[5]];
            *(_OWORD *)&v26[v108[6]] = *(_OWORD *)&v27[v108[6]];
            *(_OWORD *)&v26[v108[7]] = *(_OWORD *)&v27[v108[7]];
LABEL_47:
            swift_storeEnumTagMultiPayload();
            v19 = v180;
            break;
          default:
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
            break;
        }
        *(_QWORD *)&v21[v24[6]] = *(_QWORD *)&v22[v24[6]];
        v109 = v24[7];
        v110 = &v21[v109];
        v111 = &v22[v109];
        v112 = *((_OWORD *)v111 + 1);
        *(_OWORD *)v110 = *(_OWORD *)v111;
        *((_OWORD *)v110 + 1) = v112;
        *((_QWORD *)v110 + 4) = *((_QWORD *)v111 + 4);
        v21[v24[8]] = v22[v24[8]];
        v113 = *(int *)(v19 + 64);
        v114 = (_OWORD *)((char *)a1 + v113);
        v115 = (_OWORD *)((char *)a2 + v113);
        v116 = v115[1];
        *v114 = *v115;
        v114[1] = v116;
        *(_OWORD *)((char *)v114 + 25) = *(_OWORD *)((char *)v115 + 25);
        goto LABEL_65;
      case 3:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A70D0) + 48);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        *v31 = *((_BYTE *)a2 + v30);
        *((_QWORD *)v31 + 1) = *(_QWORD *)((char *)a2 + v30 + 8);
        v31[16] = *((_BYTE *)a2 + v30 + 16);
        *((_QWORD *)v31 + 3) = *(_QWORD *)((char *)a2 + v30 + 24);
        v31[34] = *((_BYTE *)a2 + v30 + 34);
        *((_WORD *)v31 + 16) = *(_WORD *)((char *)a2 + v30 + 32);
        v33 = type metadata accessor for ExecuteResponse(0);
        v34 = *(int *)(v33 + 36);
        v35 = &v31[v34];
        v36 = &v32[v34];
        v37 = (int *)type metadata accessor for PluginAction();
        if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v37))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7948);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          v173 = v33;
          v178 = v35;
          *(_OWORD *)v35 = *(_OWORD *)v36;
          v39 = v37[5];
          v40 = &v35[v39];
          v41 = &v36[v39];
          v168 = sub_1C2CFBCAC();
          v159 = *(void (**)(char *, char *))(*(_QWORD *)(v168 - 8) + 32);
          v159(v40, v41);
          __dst = (int *)type metadata accessor for Input(0);
          v42 = __dst[5];
          v43 = &v40[v42];
          v44 = &v41[v42];
          v160 = type metadata accessor for Parse(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v45 = sub_1C2CFCD44();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
              goto LABEL_53;
            case 1u:
              v80 = sub_1C2CFCD44();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v43, v44, v80);
              v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
              *(_QWORD *)&v43[*(int *)(v81 + 48)] = *(_QWORD *)&v44[*(int *)(v81 + 48)];
              goto LABEL_53;
            case 4u:
              v82 = sub_1C2CFBD9C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v43, v44, v82);
              goto LABEL_53;
            case 6u:
              v83 = sub_1C2CFBFD0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v43, v44, v83);
              v84 = type metadata accessor for USOParse();
              v85 = *(int *)(v84 + 20);
              v153 = v84;
              v155 = &v43[v85];
              v157 = &v44[v85];
              v151 = sub_1C2CFBF28();
              if (__swift_getEnumTagSinglePayload((uint64_t)v157, 1, v151))
              {
                v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
                memcpy(v155, v157, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *))(*(_QWORD *)(v151 - 8) + 32))(v155, v157);
                __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v151);
              }
              *(_OWORD *)&v43[*(int *)(v153 + 24)] = *(_OWORD *)&v44[*(int *)(v153 + 24)];
              v117 = *(int *)(v153 + 28);
              v118 = &v43[v117];
              v119 = &v44[v117];
              v118[4] = v119[4];
              *(_DWORD *)v118 = *(_DWORD *)v119;
              goto LABEL_53;
            case 7u:
              v87 = sub_1C2CFBFD0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v43, v44, v87);
              v88 = type metadata accessor for USOParse();
              v89 = *(int *)(v88 + 20);
              v154 = v88;
              v156 = &v43[v89];
              v158 = &v44[v89];
              v152 = sub_1C2CFBF28();
              if (__swift_getEnumTagSinglePayload((uint64_t)v158, 1, v152))
              {
                v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
                memcpy(v156, v158, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *))(*(_QWORD *)(v152 - 8) + 32))(v156, v158);
                __swift_storeEnumTagSinglePayload((uint64_t)v156, 0, 1, v152);
              }
              *(_OWORD *)&v43[*(int *)(v154 + 24)] = *(_OWORD *)&v44[*(int *)(v154 + 24)];
              v120 = *(int *)(v154 + 28);
              v121 = &v43[v120];
              v122 = &v44[v120];
              v121[4] = v122[4];
              *(_DWORD *)v121 = *(_DWORD *)v122;
              v123 = (int *)type metadata accessor for LinkParse();
              *(_OWORD *)&v43[v123[5]] = *(_OWORD *)&v44[v123[5]];
              *(_OWORD *)&v43[v123[6]] = *(_OWORD *)&v44[v123[6]];
              *(_OWORD *)&v43[v123[7]] = *(_OWORD *)&v44[v123[7]];
LABEL_53:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
              break;
          }
          *(_QWORD *)&v40[__dst[6]] = *(_QWORD *)&v41[__dst[6]];
          v124 = __dst[7];
          v125 = &v40[v124];
          v126 = &v41[v124];
          v127 = *((_OWORD *)v126 + 1);
          *(_OWORD *)v125 = *(_OWORD *)v126;
          *((_OWORD *)v125 + 1) = v127;
          *((_QWORD *)v125 + 4) = *((_QWORD *)v126 + 4);
          v40[__dst[8]] = v41[__dst[8]];
          v128 = (uint64_t)v178;
          *(_QWORD *)((char *)v178 + v37[6]) = *(_QWORD *)&v36[v37[6]];
          *(_QWORD *)((char *)v178 + v37[7]) = *(_QWORD *)&v36[v37[7]];
          *(_OWORD *)((char *)v178 + v37[8]) = *(_OWORD *)&v36[v37[8]];
          v129 = v37[9];
          v130 = (_OWORD *)((char *)v178 + v129);
          v131 = &v36[v129];
          v132 = type metadata accessor for ActionParaphrase(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v132))
          {
            v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
            memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
          }
          else
          {
            *v130 = *(_OWORD *)v131;
            v134 = *(int *)(v132 + 20);
            __dste = (_OWORD *)((char *)v130 + v134);
            v135 = &v131[v134];
            v136 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v135, 1, v136))
            {
              v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
              memcpy(__dste, v135, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
            }
            else
            {
              v138 = *((_OWORD *)v135 + 1);
              *__dste = *(_OWORD *)v135;
              __dste[1] = v138;
              v139 = *(int *)(v136 + 24);
              v161 = (char *)__dste + v139;
              v140 = &v135[v139];
              v141 = sub_1C2CFC114();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v161, v140, v141);
              __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v136);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v132);
            v128 = (uint64_t)v178;
          }
          v142 = v37[10];
          v143 = (void *)(v128 + v142);
          v144 = &v36[v142];
          if (__swift_getEnumTagSinglePayload((uint64_t)v144, 1, v168))
          {
            v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
            memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
          }
          else
          {
            ((void (*)(void *, char *, uint64_t))v159)(v143, v144, v168);
            __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, v168);
          }
          __swift_storeEnumTagSinglePayload(v128, 0, 1, (uint64_t)v37);
          v33 = v173;
        }
        v146 = *(int *)(v33 + 40);
        v147 = &v31[v146];
        v148 = &v32[v146];
        v149 = *((_OWORD *)v148 + 1);
        *(_OWORD *)v147 = *(_OWORD *)v148;
        *((_OWORD *)v147 + 1) = v149;
        goto LABEL_65;
      case 2:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A70D8);
        v8 = *(int *)(v7 + 48);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1C2CFBCAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        v12 = (int *)type metadata accessor for Input(0);
        v13 = v12[5];
        v14 = &v9[v13];
        v15 = &v10[v13];
        v16 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v17 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
            goto LABEL_17;
          case 1u:
            v46 = sub_1C2CFCD44();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v14, v15, v46);
            v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
            *(_QWORD *)&v14[*(int *)(v47 + 48)] = *(_QWORD *)&v15[*(int *)(v47 + 48)];
            goto LABEL_17;
          case 4u:
            v48 = sub_1C2CFBD9C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v14, v15, v48);
LABEL_17:
            swift_storeEnumTagMultiPayload();
            break;
          case 6u:
            v179 = v7;
            v49 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v14, v15, v49);
            __dsta = (int *)type metadata accessor for USOParse();
            v50 = __dsta[5];
            v174 = &v14[v50];
            v51 = &v15[v50];
            v52 = sub_1C2CFBF28();
            v169 = v51;
            v53 = (uint64_t)v51;
            v54 = v52;
            if (__swift_getEnumTagSinglePayload(v53, 1, v52))
            {
              v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v174, v169, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v174, v169, v54);
              __swift_storeEnumTagSinglePayload((uint64_t)v174, 0, 1, v54);
            }
            *(_OWORD *)&v14[__dsta[6]] = *(_OWORD *)&v15[__dsta[6]];
            v91 = __dsta[7];
            v92 = &v14[v91];
            v93 = &v15[v91];
            v92[4] = v93[4];
            *(_DWORD *)v92 = *(_DWORD *)v93;
            goto LABEL_41;
          case 7u:
            v179 = v7;
            v56 = sub_1C2CFBFD0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v14, v15, v56);
            __dstb = (int *)type metadata accessor for USOParse();
            v57 = __dstb[5];
            v175 = &v14[v57];
            v58 = &v15[v57];
            v59 = sub_1C2CFBF28();
            v170 = v58;
            v60 = (uint64_t)v58;
            v61 = v59;
            if (__swift_getEnumTagSinglePayload(v60, 1, v59))
            {
              v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
              memcpy(v175, v170, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v175, v170, v61);
              __swift_storeEnumTagSinglePayload((uint64_t)v175, 0, 1, v61);
            }
            *(_OWORD *)&v14[__dstb[6]] = *(_OWORD *)&v15[__dstb[6]];
            v94 = __dstb[7];
            v95 = &v14[v94];
            v96 = &v15[v94];
            v95[4] = v96[4];
            *(_DWORD *)v95 = *(_DWORD *)v96;
            v97 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&v14[v97[5]] = *(_OWORD *)&v15[v97[5]];
            *(_OWORD *)&v14[v97[6]] = *(_OWORD *)&v15[v97[6]];
            *(_OWORD *)&v14[v97[7]] = *(_OWORD *)&v15[v97[7]];
LABEL_41:
            swift_storeEnumTagMultiPayload();
            v7 = v179;
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            break;
        }
        *(_QWORD *)&v9[v12[6]] = *(_QWORD *)&v10[v12[6]];
        v98 = v12[7];
        v99 = &v9[v98];
        v100 = &v10[v98];
        v101 = *((_OWORD *)v100 + 1);
        *(_OWORD *)v99 = *(_OWORD *)v100;
        *((_OWORD *)v99 + 1) = v101;
        *((_QWORD *)v99 + 4) = *((_QWORD *)v100 + 4);
        v9[v12[8]] = v10[v12[8]];
        *((_BYTE *)a1 + *(int *)(v7 + 64)) = *((_BYTE *)a2 + *(int *)(v7 + 64));
LABEL_65:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C2A8632C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v6 = MEMORY[0x1E0DE9D48] + 64;
  v7 = MEMORY[0x1E0DE9D48] + 64;
  result = type metadata accessor for Input(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v8 = &v5;
    result = type metadata accessor for ExecuteResponse(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v9 = &v4;
      v10 = &unk_1C2D0BC00;
      v11 = &unk_1C2D0BC00;
      v12 = &unk_1C2D0BC00;
      v13 = &unk_1C2D0BC00;
      v14 = &unk_1C2D0BC18;
      swift_getTupleTypeLayout3();
      v15 = &v3;
      v16 = &unk_1C2D0BC48;
      v17 = &unk_1C2D0BC00;
      v18 = &unk_1C2D0BC00;
      v19 = MEMORY[0x1E0DE9D10] + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of FlowTracing.onActivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FlowTracing.onEvent(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FlowTracing.onDeactivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for FlowTrace()
{
  return &type metadata for FlowTrace;
}

uint64_t sub_1C2A86474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SnippetManager.SnippetRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A864B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SnippetManager.SnippetRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C2A86500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791C50);
  OUTLINED_FUNCTION_5_2();
  v7 = sub_1C2CFD350();
  sub_1C29DF4B8(v7);
  v8 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1C2CFD350();
  v9 = sub_1C29DF87C((uint64_t)sub_1C2A89258, v8);
  swift_release();
  swift_release();
  a3[3] = v6;
  result = sub_1C2A89260();
  a3[4] = result;
  *a3 = v9;
  return result;
}

void sub_1C2A865B8()
{
  OUTLINED_FUNCTION_15_37();
  swift_beginAccess();
  type metadata accessor for ForEach.State();
}

void sub_1C2A865F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
  OUTLINED_FUNCTION_126_2();
}

void sub_1C2A86614()
{
  OUTLINED_FUNCTION_15_37();
  swift_beginAccess();
  type metadata accessor for ForEach.State();
}

void sub_1C2A86650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 40))(v2, v1, a1);
  swift_endAccess();
  OUTLINED_FUNCTION_126_2();
}

uint64_t sub_1C2A86678()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  sub_1C2CFD350();
  return v1;
}

void ForEach.__allocating_init(_:body:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_6_42();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_2_46(v6, v8);
  v7 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(v1 + 88);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v7 + 48) = v2;
  *(_QWORD *)(v7 + 56) = v0;
  ForEach.__allocating_init(_:body:stride:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_42();
  MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_2_46(v2, v3);
  ForEach.__allocating_init(_:body:stride:)();
}

void sub_1C2A86724()
{
  OUTLINED_FUNCTION_10_50();
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1C2A86738()
{
  swift_release();
  return swift_deallocObject();
}

void ForEach.__allocating_init(_:body:stride:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_21();
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9 - v8, v3, v4);
  v10 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v10 + 16) = v4;
  *(_OWORD *)(v10 + 24) = *(_OWORD *)(v0 + 88);
  *(_QWORD *)(v10 + 40) = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v10 + 48) = v2;
  *(_QWORD *)(v10 + 56) = v1;
  ForEach.__allocating_init(_:body:stride:)();
}

{
  OUTLINED_FUNCTION_21();
  swift_allocObject();
  ForEach.init(_:body:stride:)();
}

void sub_1C2A867F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A8681C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v6;

  v3 = a3(a2);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EF791C60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  *(_QWORD *)(inited + 32) = v3;
  v6 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1C2904F60();
  swift_setDeallocating();
  sub_1C28BA780();
  return v6;
}

void sub_1C2A868F4()
{
  OUTLINED_FUNCTION_10_50();
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1C2A8694C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C2A86964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C2A8681C(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 48));
}

void ForEach.init(_:body:stride:)()
{
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_35_23();
}

void sub_1C2A869D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v17 = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&a9 - v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9 + *(_QWORD *)(v11 + 112), v13, v12);
  v22 = (_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 120));
  *v22 = v10;
  v22[1] = v14;
  sub_1C2CFD350();
  if ((sub_1C2CFE1FC() & 1) != 0)
  {
    swift_release();
    OUTLINED_FUNCTION_14_43();
    *v21 = 0;
  }
  else
  {
    sub_1C2CFE1D8();
    swift_release();
    OUTLINED_FUNCTION_14_43();
  }
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v17 + 32))(v9 + *(_QWORD *)(*(_QWORD *)v9 + 128), v21, a1);
  v23 = (_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 136));
  v24 = *(_QWORD *)(v15 - 120);
  *v23 = *(_QWORD *)(v15 - 128);
  v23[1] = v24;
  OUTLINED_FUNCTION_1();
}

void type metadata accessor for ForEach.State()
{
  JUMPOUT(0x1C3BC9C14);
}

void sub_1C2A86AF0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[6];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_9();
  v17 = v1;
  v2 = (_QWORD *)*v0;
  v4 = v2[10];
  v3 = v2[11];
  v14[2] = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5, v6);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = AssociatedTypeWitness;
  v8 = *(_QWORD *)(v15 + 64);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v9);
  v14[3] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v11);
  v12 = v2[12];
  v13 = v2[13];
  v18 = v4;
  v19 = v3;
  v14[4] = v13;
  v14[5] = v12;
  v20 = v12;
  v21 = v13;
  OUTLINED_FUNCTION_35_23();
}

void sub_1C2A86BE8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v0, v1);
  sub_1C2A865B8();
}

void sub_1C2A86C18()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, _BYTE *, uint64_t);
  void (*v13)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_0;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)(v7 - 168) = *v1;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF791B30);
    v9 = *(uint64_t **)(v7 - 176);
    v9[3] = v8;
    v9[4] = (uint64_t)&protocol witness table for Conclude<A>;
    __swift_allocate_boxed_opaque_existential_0(v9);
    *(_QWORD *)(v7 - 128) = v5;
    *(_QWORD *)(v7 - 120) = v2;
    v10 = *(_QWORD *)(v7 - 208);
    *(_QWORD *)(v7 - 112) = *(_QWORD *)(v7 - 200);
    *(_QWORD *)(v7 - 104) = v10;
    type metadata accessor for ForEach();
  }
  v11 = *(_QWORD *)(v7 - 184);
  v12 = *(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 192) + 32);
  *(_QWORD *)(v7 - 232) = v12;
  v12(v4, v1, v11);
  *(_QWORD *)(v7 - 240) = *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 120));
  v13 = (void (*)(uint64_t, _QWORD))sub_1C2CFE250();
  v14 = *(_QWORD *)(v7 - 224);
  (*(void (**)(uint64_t))(v6 + 16))(v0);
  v13(v7 - 128, 0);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 - 240))(v4, v0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v14);
  type metadata accessor for LoopBodyFlow();
  OUTLINED_FUNCTION_5_2();
  sub_1C2ACFA40(v15);
  v17 = *(_QWORD *)(v7 - 192);
  v16 = *(_QWORD *)(v7 - 184);
  v18 = *(_QWORD *)(v7 - 216);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v4, v16);
  v19 = *(unsigned __int8 *)(v17 + 80);
  *(_QWORD *)(v7 - 224) = v4;
  v20 = (v19 + 56) & ~v19;
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = v5;
  *((_QWORD *)v21 + 3) = v2;
  v22 = *(_QWORD *)(v7 - 208);
  *((_QWORD *)v21 + 4) = *(_QWORD *)(v7 - 200);
  *((_QWORD *)v21 + 5) = v22;
  *((_QWORD *)v21 + 6) = v3;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 - 232))(&v21[v20], v18, v16);
  sub_1C2CFD350();
  sub_1C2A86500((uint64_t)sub_1C2A88450, (uint64_t)v21, (uint64_t *)(v7 - 128));
  swift_release();
  swift_release();
  *(_QWORD *)(v7 - 144) = type metadata accessor for Delegate(0);
  *(_QWORD *)(v7 - 136) = &protocol witness table for Delegate;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v7 - 168));
  sub_1C28B9A04(v7 - 128, (uint64_t)boxed_opaque_existential_0);
  type metadata accessor for FlowActionType(0);
  swift_storeEnumTagMultiPayload();
  __swift_destroy_boxed_opaque_existential_1(v7 - 128);
  (*(void (**)(_QWORD, uint64_t))(v17 + 8))(*(_QWORD *)(v7 - 224), v16);
  sub_1C28B99EC((__int128 *)(v7 - 168), *(_QWORD *)(v7 - 176));
  OUTLINED_FUNCTION_1();
}

void type metadata accessor for ForEach()
{
  JUMPOUT(0x1C3BC9C14);
}

void sub_1C2A86E64()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v1);
  MEMORY[0x1E0C80A78](v2, v3);
  type metadata accessor for ForEach.State();
}

void sub_1C2A86F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24[12];

  v10 = MEMORY[0x1E0C80A78](a1, a2);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = (char *)v24 - v14;
  sub_1C28BB340(v2, v8 - 112);
  if (swift_dynamicCast() && *(_BYTE *)(v8 - 113) == 1)
  {
    *v15 = 1;
    swift_storeEnumTagMultiPayload();
    sub_1C2A86614();
  }
  *(_QWORD *)(v8 - 144) = a1;
  v16 = (uint64_t (*)(void))sub_1C2A86678();
  v17 = v16();
  swift_release();
  sub_1C2A870E4(*(_QWORD *)(v8 - 136), v17, v6, v5, v18, v19, v20, v21, v24[0], v24[1], v24[2], v24[3], v24[4], v24[5], v24[6], v24[7], v24[8], v24[9], v24[10],
    v24[11]);
  sub_1C2CFE214();
  swift_getAssociatedConformanceWitness();
  v22 = sub_1C2CFDD28();
  v23 = *(_QWORD *)(v8 - 128);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v7, v3);
  if ((v22 & 1) != 0)
    *v12 = 0;
  else
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v23 + 16))(v12, v4, v3);
  swift_storeEnumTagMultiPayload();
  sub_1C2A86614();
}

void sub_1C2A870B8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);

  v2(v1, v0);
  JUMPOUT(0x1C2A870C4);
}

void sub_1C2A870E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;

  OUTLINED_FUNCTION_9();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  OUTLINED_FUNCTION_24_32();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v26, v27);
  v29 = (char *)&a9 - v28;
  OUTLINED_FUNCTION_149_1();
  if ((v23 & 0x8000000000000000) == 0)
  {
    sub_1C2CFE214();
    v30 = OUTLINED_FUNCTION_27_21();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, AssociatedTypeWitness);
    if (v30 <= v23)
    {
      OUTLINED_FUNCTION_149_1();
      sub_1C2CFE214();
    }
    else
    {
      OUTLINED_FUNCTION_20_40();
    }
LABEL_8:
    OUTLINED_FUNCTION_1();
    return;
  }
  sub_1C2CFE1D8();
  v31 = OUTLINED_FUNCTION_27_21();
  OUTLINED_FUNCTION_25_31();
  v32 = __OFADD__(v31, v23);
  v33 = v31 + v23;
  if (!v32)
  {
    OUTLINED_FUNCTION_29_26();
    if (v33 > 0)
    {
      OUTLINED_FUNCTION_20_40();
      OUTLINED_FUNCTION_25_31();
    }
    goto LABEL_8;
  }
  __break(1u);
}

unint64_t sub_1C2A87200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  unint64_t v20;
  unint64_t v21;

  v2 = v1;
  v4 = OUTLINED_FUNCTION_36_28();
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_1_1();
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v10 = (char *)&v20 - v9;
  MEMORY[0x1E0C80A78](v8, v11);
  OUTLINED_FUNCTION_10();
  v14 = v13 - v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13 - v12, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1C2CFE670();
    swift_bridgeObjectRelease();
    v20 = 0xD000000000000017;
    v21 = 0x80000001C2D30110;
    sub_1C2CFDE54();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_72_6();
    return v20;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v10, v14, v4);
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1C2CFDE54();
    OUTLINED_FUNCTION_149_1();
    sub_1C2CFE9B8();
    OUTLINED_FUNCTION_72_6();
    v16 = v20;
    v17 = OUTLINED_FUNCTION_149_1();
    v18(v17);
  }
  return v16;
}

uint64_t sub_1C2A873A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7239026 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C2CFE9DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736292 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C2CFE9DC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C2A87474(char a1)
{
  if ((a1 & 1) != 0)
    return 1701736292;
  else
    return 7239026;
}

uint64_t sub_1C2A8749C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001C2D30130)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1C2CFE9DC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1C2A87520()
{
  return 0xD000000000000010;
}

uint64_t sub_1C2A8753C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7865646E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C2CFE9DC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1C2A875B8()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  sub_1C2CFEAD8();
  OUTLINED_FUNCTION_0_3();
}

uint64_t sub_1C2A875F0()
{
  return 0x7865646E69;
}

void sub_1C2A87604()
{
  OUTLINED_FUNCTION_31_25();
  type metadata accessor for ForEach.State.DoneCodingKeys();
}

void sub_1C2A87644(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x1C3BC9CD4](&unk_1C2D0C108, a1);
  OUTLINED_FUNCTION_33_18();
  *(_QWORD *)(v1 - 176) = a1;
  *(_QWORD *)(v1 - 192) = v3;
  v4 = sub_1C2CFE964();
  *(_QWORD *)(v1 - 168) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v1 - 160) = v4;
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_11_26();
  *(_QWORD *)(v1 - 184) = v7;
  OUTLINED_FUNCTION_31_25();
  type metadata accessor for ForEach.State.RunCodingKeys();
}

void sub_1C2A87698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  MEMORY[0x1C3BC9CD4](&unk_1C2D0C0B8, a1);
  OUTLINED_FUNCTION_33_18();
  *(_QWORD *)(v5 - 232) = a1;
  *(_QWORD *)(v5 - 248) = v7;
  v8 = sub_1C2CFE964();
  *(_QWORD *)(v5 - 208) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 - 200) = v8;
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_11_26();
  *(_QWORD *)(v5 - 224) = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 - 216) = AssociatedTypeWitness;
  *(_QWORD *)(v5 - 240) = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_11_26();
  *(_QWORD *)(v5 - 256) = v15;
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_10();
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 152) = v2;
  type metadata accessor for ForEach.State.CodingKeys();
}

void sub_1C2A87768()
{
  OUTLINED_FUNCTION_39_10();
}

void sub_1C2A87778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_24_32();
  v14 = sub_1C2CFE964();
  *(_QWORD *)(v13 - 144) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v13 - 136) = v14;
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&a9 - v17;
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_1C2CFEB08();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 16))(v10, *(_QWORD *)(v13 - 128), v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)(v13 - 120) = 1;
    v19 = *(_QWORD *)(v13 - 184);
    sub_1C2CFE904();
    v20 = *(_QWORD *)(v13 - 160);
    sub_1C2CFE934();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 168) + 8))(v19, v20);
  }
  else
  {
    v21 = *(_QWORD *)(v13 - 240);
    v22 = *(_QWORD *)(v13 - 256);
    v23 = *(_QWORD *)(v13 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v22, v10, v23);
    *(_BYTE *)(v13 - 120) = 0;
    v24 = *(_QWORD *)(v13 - 224);
    sub_1C2CFE904();
    v25 = *(_QWORD *)(v13 - 200);
    sub_1C2CFE958();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 208) + 8))(v24, v25);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
  }
  OUTLINED_FUNCTION_21_17((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 144) + 8));
  OUTLINED_FUNCTION_44();
}

void sub_1C2A87914()
{
  type metadata accessor for ForEach.State.DoneCodingKeys();
}

void sub_1C2A87968()
{
  OUTLINED_FUNCTION_39_10();
}

void sub_1C2A87978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_33_18();
  *(_QWORD *)(v1 - 224) = v2;
  *(_QWORD *)(v1 - 216) = v0;
  v3 = sub_1C2CFE8F8();
  *(_QWORD *)(v1 - 288) = v3;
  *(_QWORD *)(v1 - 256) = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_11_26();
  *(_QWORD *)(v1 - 208) = v6;
  OUTLINED_FUNCTION_19_35();
  type metadata accessor for ForEach.State.RunCodingKeys();
}

void sub_1C2A879B8()
{
  OUTLINED_FUNCTION_39_10();
}

void sub_1C2A879C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_33_18();
  *(_QWORD *)(v1 - 248) = v2;
  *(_QWORD *)(v1 - 240) = v0;
  v3 = sub_1C2CFE8F8();
  *(_QWORD *)(v1 - 296) = v3;
  *(_QWORD *)(v1 - 264) = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_11_26();
  *(_QWORD *)(v1 - 232) = v6;
  OUTLINED_FUNCTION_19_35();
  type metadata accessor for ForEach.State.CodingKeys();
}

void sub_1C2A87A0C()
{
  OUTLINED_FUNCTION_39_10();
}

void sub_1C2A87A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 - 168) = a1;
  OUTLINED_FUNCTION_24_32();
  v6 = sub_1C2CFE8F8();
  *(_QWORD *)(v5 - 184) = v6;
  *(_QWORD *)(v5 - 200) = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v7, v8);
  *(_QWORD *)(v5 - 176) = v4;
  *(_QWORD *)(v5 - 128) = v4;
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 280) = v3;
  *(_QWORD *)(v5 - 272) = v2;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  type metadata accessor for ForEach.State();
}

void sub_1C2A87A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v11 - 192) = a1;
  *(_QWORD *)(v11 - 304) = *(_QWORD *)(a1 - 8);
  v12 = MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v12, v15);
  v18 = (char *)&a9 - v17;
  MEMORY[0x1E0C80A78](v16, v19);
  v21 = (char *)&a9 - v20;
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  v22 = *(_QWORD *)(v11 - 72);
  sub_1C2CFEAFC();
  if (!v22)
  {
    *(_QWORD *)(v11 - 336) = v14;
    *(_QWORD *)(v11 - 320) = v18;
    *(_QWORD *)(v11 - 328) = v21;
    *(_QWORD *)(v11 - 168) = v10;
    *(_QWORD *)(v11 - 72) = v9;
    *(_QWORD *)(v11 - 160) = sub_1C2CFE8EC();
    OUTLINED_FUNCTION_24_32();
    v23 = sub_1C2CFE088();
    MEMORY[0x1C3BC9CD4](MEMORY[0x1E0DEAF38], v23);
    *(_QWORD *)(v11 - 128) = sub_1C2CFE55C();
    *(_QWORD *)(v11 - 120) = v24;
    *(_QWORD *)(v11 - 112) = v25;
    *(_QWORD *)(v11 - 104) = v26;
    OUTLINED_FUNCTION_24_32();
    sub_1C2CFE550();
    OUTLINED_FUNCTION_39_10();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  OUTLINED_FUNCTION_44();
}

BOOL sub_1C2A87EBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C297F320(*a1, *a2);
}

uint64_t sub_1C2A87ED4()
{
  return sub_1C297F354();
}

uint64_t sub_1C2A87EE8()
{
  return sub_1C297F330();
}

uint64_t sub_1C2A87EFC()
{
  sub_1C2CFEAB4();
  sub_1C297F330();
  return sub_1C2CFEAD8();
}

uint64_t sub_1C2A87F44()
{
  char *v0;

  return sub_1C2A87474(*v0);
}

uint64_t sub_1C2A87F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A873A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A87F88()
{
  return sub_1C29C38D8();
}

uint64_t sub_1C2A87FB0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C2A0015C();
  *a1 = result;
  return result;
}

uint64_t sub_1C2A87FE0(uint64_t a1)
{
  MEMORY[0x1C3BC9CD4](&unk_1C2D0C068, a1);
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A88014(uint64_t a1)
{
  MEMORY[0x1C3BC9CD4](&unk_1C2D0C068, a1);
  return sub_1C2CFEB2C();
}

void sub_1C2A88048(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  sub_1C2A8813C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C29D545C);
}

unint64_t sub_1C2A88054()
{
  return sub_1C2A87520();
}

uint64_t sub_1C2A88064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1C2A88198(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2A8749C, a4);
}

uint64_t sub_1C2A88070(_QWORD *a1, uint64_t a2)
{
  return sub_1C2A881DC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1C2A89484);
}

uint64_t sub_1C2A8807C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C2A88210(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))j__OUTLINED_FUNCTION_11_13, a3);
}

uint64_t sub_1C2A88088(uint64_t a1)
{
  MEMORY[0x1C3BC9CD4](&unk_1C2D0C108, a1);
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A880BC(uint64_t a1)
{
  MEMORY[0x1C3BC9CD4](&unk_1C2D0C108, a1);
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A880F0()
{
  return OUTLINED_FUNCTION_11_13();
}

void sub_1C2A88100()
{
  sub_1C2A875B8();
}

uint64_t sub_1C2A88120()
{
  return sub_1C29D53F4();
}

void sub_1C2A88130(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  sub_1C2A8813C(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C29D53F4);
}

void sub_1C2A8813C(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _BYTE v6[72];

  sub_1C2CFEAB4();
  a4(v6, a2[2], a2[3], a2[4], a2[5]);
  sub_1C2CFEAD8();
  OUTLINED_FUNCTION_0_3();
}

uint64_t sub_1C2A8817C()
{
  return sub_1C2A875F0();
}

uint64_t sub_1C2A8818C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1C2A88198(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2A8753C, a4);
}

uint64_t sub_1C2A88198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X4>, _BYTE *a5@<X8>)
{
  uint64_t result;

  result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a5 = result & 1;
  return result;
}

uint64_t sub_1C2A881D0(_QWORD *a1, uint64_t a2)
{
  return sub_1C2A881DC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1C29C38D8);
}

uint64_t sub_1C2A881DC(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  return a3(a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_1C2A88204@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1C2A88210(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))OUTLINED_FUNCTION_11_13, a3);
}

uint64_t sub_1C2A88210@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = a3(a1, a2[2], a2[3], a2[4], a2[5]);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1C2A88248(uint64_t a1)
{
  MEMORY[0x1C3BC9CD4](&unk_1C2D0C0B8, a1);
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A8827C(uint64_t a1)
{
  MEMORY[0x1C3BC9CD4](&unk_1C2D0C0B8, a1);
  return sub_1C2CFEB2C();
}

void sub_1C2A882B0()
{
  sub_1C2A87914();
}

void sub_1C2A882D0()
{
  sub_1C2A87604();
}

void ForEach.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112), *(_QWORD *)(*(_QWORD *)v0 + 80));
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_35_23();
}

uint64_t sub_1C2A88350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
  OUTLINED_FUNCTION_30_1();
  return v1;
}

void ForEach.__deallocating_deinit()
{
  ForEach.deinit();
}

uint64_t sub_1C2A88394()
{
  return swift_deallocClassInstance();
}

void sub_1C2A883AC()
{
  sub_1C2A86AF0();
}

uint64_t sub_1C2A883CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_36_28();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1C2A88450()
{
  OUTLINED_FUNCTION_36_28();
  sub_1C2A86E64();
}

uint64_t sub_1C2A884A0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
    type metadata accessor for ForEach.State();
  return result;
}

uint64_t method lookup function for ForEach()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ForEach.__allocating_init(_:body:stride:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ForEach.action.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t sub_1C2A88570()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1C2A885F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 1uLL)
    v6 = 1;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || (unint64_t)(v6 + 1) > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    sub_1C2CFD350();
  }
  else
  {
    v11 = *((unsigned __int8 *)a2 + v6);
    if (v11 >= 2)
    {
      if (v6 <= 3)
        v12 = v6;
      else
        v12 = 4;
      __asm { BR              X13 }
    }
    if (v11 == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *((_BYTE *)a1 + v6) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *((_BYTE *)a1 + v6) = 0;
    }
  }
  return a1;
}

uint64_t sub_1C2A88728(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;

  result = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(result - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 <= 1)
    v4 = 1;
  v5 = *(unsigned __int8 *)(a1 + v4);
  if (v5 >= 2)
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    __asm { BR              X14 }
  }
  if (v5 != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, result);
  return result;
}

_BYTE *sub_1C2A88804(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 1uLL)
    v6 = 1;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = a2[v6];
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    *a1 = *a2;
    v9 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v9 = 0;
  }
  a1[v6] = v9;
  return a1;
}

_BYTE *sub_1C2A88900(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;

  if (a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 1uLL)
      v6 = 1;
    else
      v6 = *(_QWORD *)(v5 + 64);
    v7 = a1[v6];
    if (v7 >= 2)
    {
      if (v6 <= 3)
        v8 = v6;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    if (v7 != 1)
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    v9 = a2[v6];
    if (v9 >= 2)
    {
      if (v6 <= 3)
        v10 = v6;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      *a1 = *a2;
      v11 = 1;
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v11 = 0;
    }
    a1[v6] = v11;
  }
  return a1;
}

_BYTE *sub_1C2A88A98(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 1uLL)
    v6 = 1;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = a2[v6];
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    *a1 = *a2;
    v9 = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    v9 = 0;
  }
  a1[v6] = v9;
  return a1;
}

_BYTE *sub_1C2A88B94(_BYTE *a1, _BYTE *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;

  if (a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 1uLL)
      v6 = 1;
    else
      v6 = *(_QWORD *)(v5 + 64);
    v7 = a1[v6];
    if (v7 >= 2)
    {
      if (v6 <= 3)
        v8 = v6;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    if (v7 != 1)
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    v9 = a2[v6];
    if (v9 >= 2)
    {
      if (v6 <= 3)
        v10 = v6;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      *a1 = *a2;
      v11 = 1;
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v11 = 0;
    }
    a1[v6] = v11;
  }
  return a1;
}

uint64_t sub_1C2A88D2C(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  unsigned int v10;
  int v11;
  unsigned int v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) <= 1uLL)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_22;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    v10 = ((a2 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = *(_DWORD *)(a1 + v6);
      if (!v8)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v10 > 0xFF)
    {
      v8 = *(unsigned __int16 *)(a1 + v6);
      if (!*(_WORD *)(a1 + v6))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v10 < 2)
    {
LABEL_22:
      v12 = *(unsigned __int8 *)(a1 + v5);
      if (v12 >= 2)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (!*(_BYTE *)(a1 + v6))
    goto LABEL_22;
LABEL_15:
  v11 = (v8 - 1) << v7;
  if (v6 > 3)
    v11 = 0;
  if ((_DWORD)v6)
  {
    if (v6 > 3)
      LODWORD(v6) = 4;
    __asm { BR              X11 }
  }
  return (v11 + 255);
}

void sub_1C2A88E6C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6;
  size_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 1)
    v6 = 1;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if (a3 < 0xFF)
  {
    v9 = 0u;
  }
  else if (v7 <= 3)
  {
    v11 = ((a3 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v10 = a2 - 255;
  if (v7 < 4)
  {
    if ((_DWORD)v6 != -1)
    {
      v12 = v10 & ~(-1 << v8);
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v12;
      }
      else
      {
        *a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v6 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2A8902C(uint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 1)
    v2 = 1;
  result = *(unsigned __int8 *)(a1 + v2);
  if (result >= 2)
  {
    if (v2 <= 3)
      v4 = v2;
    else
      v4 = 4;
    __asm { BR              X12 }
  }
  return result;
}

void sub_1C2A890E8(_BYTE *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) <= 1uLL)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (a2 > 1)
  {
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

void type metadata accessor for ForEach.State.DoneCodingKeys()
{
  JUMPOUT(0x1C3BC9C14);
}

void type metadata accessor for ForEach.State.RunCodingKeys()
{
  JUMPOUT(0x1C3BC9C14);
}

void type metadata accessor for ForEach.State.CodingKeys()
{
  JUMPOUT(0x1C3BC9C14);
}

uint64_t sub_1C2A891EC(char *a1, void (*a2)(_BYTE *))
{
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;

  v2 = *a1;
  v5 = &type metadata for FlowLoopControl;
  v4[0] = v2;
  a2(v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1C2A89234()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A89258(char *a1)
{
  uint64_t v1;

  return sub_1C2A891EC(a1, *(void (**)(_BYTE *))(v1 + 16));
}

unint64_t sub_1C2A89260()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF791C58;
  if (!qword_1EF791C58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF791C50);
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for LifeCycleModifierFlow<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF791C58);
  }
  return result;
}

uint64_t sub_1C2A892A4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2A892F0 + 4 * byte_1C2D0BCF0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2A89324 + 4 * byte_1C2D0BCEB[v4]))();
}

uint64_t sub_1C2A89324(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A8932C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A89334);
  return result;
}

uint64_t sub_1C2A89340(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A89348);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2A8934C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A89354(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A89364(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C2A893A4 + 4 * byte_1C2D0BCF5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C2A893C4 + 4 * byte_1C2D0BCFA[v4]))();
}

_BYTE *sub_1C2A893A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C2A893C4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A893CC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A893D4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2A893DC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2A893E4(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1C2A893F0()
{
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2A89400()
{
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2A89410()
{
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2A89420()
{
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2A89430()
{
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2A89440()
{
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2A89450()
{
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2A89460()
{
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2A89470()
{
  JUMPOUT(0x1C3BC9CD4);
}

uint64_t OUTLINED_FUNCTION_2_46@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v3);
}

uint64_t OUTLINED_FUNCTION_7_44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_10_50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_12_45()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 328);
}

uint64_t OUTLINED_FUNCTION_13_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_14_43()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_15_37()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
}

uint64_t OUTLINED_FUNCTION_18_32()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_35()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v0;
  return 255;
}

uint64_t OUTLINED_FUNCTION_20_40()
{
  return sub_1C2CFE1F0();
}

uint64_t OUTLINED_FUNCTION_24_32()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_25_31()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_27_21()
{
  return sub_1C2CFE208();
}

uint64_t OUTLINED_FUNCTION_29_26()
{
  return sub_1C2CFE1D8();
}

uint64_t OUTLINED_FUNCTION_31_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v0;
  *(_QWORD *)(v4 - 96) = v1;
  return 255;
}

uint64_t OUTLINED_FUNCTION_33_18()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_36_28()
{
  return swift_getAssociatedTypeWitness();
}

_QWORD *sub_1C2A895E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5 = *a1;
  v6 = a1[1];
  *((_OWORD *)v3 + 1) = xmmword_1C2D00950;
  v3[5] = 0;
  swift_unknownObjectWeakInit();
  v3[6] = 0;
  v7 = v3[2];
  v8 = v3[3];
  v3[2] = v5;
  v3[3] = v6;
  sub_1C2969FD0(v7, v8);
  v3[5] = a3;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_1C2A89668(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[19] = a1;
  v2[20] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2A896D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, unint64_t, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t (*)(uint64_t *), uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v2 = *(_QWORD **)(v0 + 160);
  v3 = (void *)v2[6];
  if (v3)
  {
    v4 = v3;

LABEL_9:
    static ExecuteResponse.complete()();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = v2[3];
  if ((~v5 & 0xF000000000000007) == 0)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED7AA1B0);
    v7 = sub_1C2CFD86C();
    v8 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C28B6000, v7, v8, "No more action groups to run. Action handling frame is complete", v9, 2u);
      OUTLINED_FUNCTION_11_0();
    }

    goto LABEL_9;
  }
  v11 = v2[2];
  if (!(v5 >> 62))
  {
    if (MEMORY[0x1C3BC9E9C](v2 + 4))
    {
      v17 = OUTLINED_FUNCTION_8_46();
      v18 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 8);
      sub_1C2969F6C(v11, v5);
      v18(v11, v5, v17, v1);
      OUTLINED_FUNCTION_21_5();
    }
    else
    {
      OUTLINED_FUNCTION_4_49();
    }
    if (qword_1ED7AA040 != -1)
      swift_once();
    v29 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED7AA1B0);
    v30 = OUTLINED_FUNCTION_5_48();
    v31 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v69 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v32 = 136315138;
      swift_getObjectType();
      *(_QWORD *)(v0 + 136) = v11;
      v33 = sub_1C2CFE988();
      *(_QWORD *)(v0 + 144) = OUTLINED_FUNCTION_6_43(v33, v34);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_0_52();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v30, v31, "Transitioning to action group: %s", v32);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_0_52();

    ObjectType = swift_getObjectType();
    if (!(*(uint64_t (**)(uint64_t, unint64_t))(v5 + 16))(ObjectType, v5))
    {
      v44 = OUTLINED_FUNCTION_5_48();
      v45 = sub_1C2CFE2A4();
      if (os_log_type_enabled((os_log_t)v44, v45))
      {
        v46 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_QWORD *)&v69 = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v46 = 136315138;
        *(_QWORD *)(v0 + 120) = v11;
        v47 = sub_1C2CFE988();
        *(_QWORD *)(v0 + 128) = OUTLINED_FUNCTION_6_43(v47, v48);
        sub_1C2CFE4D8();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_0_52();
        OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v44, v45, "Action group had no flows. Moving on (%s)", v46);
        OUTLINED_FUNCTION_107_1();
        OUTLINED_FUNCTION_11_0();
      }
      OUTLINED_FUNCTION_0_52();

      if (MEMORY[0x1C3BC9E9C](v2 + 4))
      {
        v49 = OUTLINED_FUNCTION_8_46();
        (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v44 + 16))(v11, v5, v49, v44);
        OUTLINED_FUNCTION_21_5();
      }
      v50 = *(_QWORD *)(v0 + 152);
      (*(void (**)(__int128 *__return_ptr, uint64_t, unint64_t))(v5 + 24))(&v69, ObjectType, v5);
      OUTLINED_FUNCTION_1_42();
      v51 = v2[2];
      v52 = v2[3];
      *((_OWORD *)v2 + 1) = v69;
      sub_1C2969FD0(v51, v52);
      static ExecuteResponse.ongoing(requireInput:)(0, v50);
      goto LABEL_10;
    }
    v37 = v36;
    v38 = *(_QWORD *)(v0 + 152);
    v39 = *(_QWORD *)(v0 + 160);
    v40 = MEMORY[0x1C3BC9E9C](v2 + 4);
    v41 = v2[5];
    type metadata accessor for ActionHandlingFlow();
    OUTLINED_FUNCTION_5_2();
    v42 = swift_unknownObjectRetain();
    sub_1C296BE48(v42, v37, v40, v41);
    v43 = (_QWORD *)OUTLINED_FUNCTION_5_2();
    v43[2] = v39;
    v43[3] = v11;
    v43[4] = v5;
    OUTLINED_FUNCTION_13_35();
    sub_1C2CFD350();
    sub_1C29DA71C((uint64_t)sub_1C2A8A5B4, (uint64_t)v43, v38);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_1_42();
    swift_release();
    goto LABEL_46;
  }
  if (v5 >> 62 != 1 && v11 < 0)
  {
    if (MEMORY[0x1C3BC9E9C](v2 + 4))
    {
      v26 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 40);
      v27 = swift_getObjectType();
      v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 24);
      OUTLINED_FUNCTION_4_49();
      v28(v11 & 0x7FFFFFFFFFFFFFFFLL, v27, v26);
      OUTLINED_FUNCTION_21_5();
    }
    else
    {
      OUTLINED_FUNCTION_4_49();
    }
    if (qword_1ED7AA040 != -1)
      swift_once();
    v53 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v53, (uint64_t)qword_1ED7AA1B0);
    sub_1C2969F6C(v11, v5);
    OUTLINED_FUNCTION_4_49();
    v54 = sub_1C2CFD86C();
    v55 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v69 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v56 = 136315138;
      sub_1C296B060();
      *(_QWORD *)(v0 + 112) = OUTLINED_FUNCTION_6_43(v57, v58);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_0_52();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v54, v55, "Starting deferred frame type transition: %s", v56);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_0_52();

    v59 = *(_QWORD *)(v0 + 160);
    v60 = OUTLINED_FUNCTION_5_2();
    *(_QWORD *)(v60 + 16) = v11 & 0x7FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v60 + 24) = v59;
    v61 = *(void (**)(uint64_t (*)(uint64_t *), uint64_t))((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x30);
    OUTLINED_FUNCTION_13_35();
    sub_1C2CFD350();
    v61(sub_1C2A8A558, v60);
    OUTLINED_FUNCTION_1_42();
LABEL_46:
    swift_release();
    goto LABEL_10;
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v13 = *(_QWORD *)(v0 + 168);
  v12 = *(_QWORD *)(v0 + 176);
  v14 = OUTLINED_FUNCTION_118();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED7AA1B0);
  v16 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v12, v15, v14);
  __swift_storeEnumTagSinglePayload(v12, 0, 1, v14);
  sub_1C294E19C(v12, v13);
  if (__swift_getEnumTagSinglePayload(v13, 1, v14) == 1)
  {
    sub_1C28BA958(*(_QWORD *)(v0 + 168), &qword_1ED7A9EC0);
  }
  else
  {
    v19 = sub_1C2CFD86C();
    v20 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = OUTLINED_FUNCTION_6_0();
      *(_QWORD *)&v69 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v21 = 136315650;
      v22 = sub_1C2CFE694();
      *(_QWORD *)(v0 + 88) = OUTLINED_FUNCTION_6_43(v22, v23);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      *(_QWORD *)(v0 + 96) = 115;
      sub_1C2CFE4D8();
      *(_WORD *)(v21 + 22) = 2080;
      *(_QWORD *)(v0 + 104) = sub_1C28BB120(0xD000000000000054, 0x80000001C2D30180, (uint64_t *)&v69);
      sub_1C2CFE4D8();
      _os_log_impl(&dword_1C28B6000, v19, v20, "FatalError at %s:%lu - %s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    (*(void (**)(_QWORD, uint64_t))(v16 + 8))(*(_QWORD *)(v0 + 168), v14);
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  *(_OWORD *)(v0 + 16) = 0u;
  v24 = v0 + 16;
  *(_OWORD *)(v24 + 56) = 0u;
  *(_OWORD *)(v24 + 40) = 0u;
  *(_OWORD *)(v24 + 16) = 0u;
  *(_QWORD *)(v24 + 32) = 0;
  v25 = sub_1C2CFD350();
  LOBYTE(v62) = 44;
  sub_1C2AFA880(v25, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, v24 + 40, 0, 0, v24, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, 0xD000000000000054, 0x80000001C2D30180, v62, v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    *((uint64_t *)&v69 + 1),
    v70,
    v71,
    v72,
    v73);
  sub_1C28BA958(v24, (uint64_t *)&unk_1ED7A8750);
  sub_1C28BA958(v24 + 40, &qword_1ED7A8480);
  swift_release();
  return sub_1C2CFE7FC();
}

void sub_1C2A8A134(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  id v7;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;

  v5 = *a1;
  if (v5)
  {
    v6 = (void *)a2[6];
    a2[6] = v5;
    v7 = v5;

  }
  else
  {
    if (MEMORY[0x1C3BC9E9C](a2 + 4))
    {
      v10 = a2[5];
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a3, a4, ObjectType, v10);
      swift_unknownObjectRelease();
    }
    v12 = swift_getObjectType();
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a4 + 24))(&v15, v12, a4);
    v13 = a2[2];
    v14 = a2[3];
    *((_OWORD *)a2 + 1) = v15;
    sub_1C2969FD0(v13, v14);
  }
}

uint64_t sub_1C2A8A200(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v6 = *a1;
  v5 = a1[1];
  if (qword_1ED7AA040 != -1)
    swift_once();
  v7 = sub_1C2CFD878();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED7AA1B0);
  swift_retain_n();
  v8 = sub_1C2CFD86C();
  v9 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v8, v9))
  {
    v20 = v6;
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v21 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_1C296B060();
    sub_1C28BB120(v12, v13, &v21);
    sub_1C2CFE4D8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C28B6000, v8, v9, "Deferred frame transition completed: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v11, -1, -1);
    v14 = v10;
    v6 = v20;
    MEMORY[0x1C3BC9DE8](v14, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  if (MEMORY[0x1C3BC9E9C](a3 + 4))
  {
    v15 = a3[5];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a2, ObjectType, v15);
    swift_unknownObjectRelease();
  }
  v17 = a3[2];
  v18 = a3[3];
  a3[2] = v6;
  a3[3] = v5;
  sub_1C2969F58(v6, v5);
  return sub_1C2969FD0(v17, v18);
}

uint64_t sub_1C2A8A408()
{
  uint64_t v0;

  sub_1C2969FD0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  sub_1C296C9D4(v0 + 32);

  return v0;
}

uint64_t sub_1C2A8A434()
{
  sub_1C2A8A408();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GroupHandlingFlow()
{
  return objc_opt_self();
}

uint64_t sub_1C2A8A474()
{
  return sub_1C2A89664();
}

uint64_t sub_1C2A8A494(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28C33A0;
  return sub_1C2A89668(a1);
}

unint64_t sub_1C2A8A4E8(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2A8A50C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2A8A50C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF791F48;
  if (!qword_1EF791F48)
  {
    v1 = type metadata accessor for GroupHandlingFlow();
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0C1A4, v1);
    atomic_store(result, (unint64_t *)&qword_1EF791F48);
  }
  return result;
}

uint64_t sub_1C2A8A548()
{
  return objectdestroyTm_13((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1C2A8A558(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C2A8A200(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_1C2A8A560()
{
  return objectdestroyTm_13((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t objectdestroyTm_13(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

void sub_1C2A8A5B4(void **a1)
{
  uint64_t v1;

  sub_1C2A8A134(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t OUTLINED_FUNCTION_0_52()
{
  unint64_t v0;
  uint64_t v1;

  sub_1C2969FD0(v1, v0);
  return sub_1C2969FD0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_42()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C2969FD0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_49()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C2969F6C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_48()
{
  unint64_t v0;
  uint64_t v1;

  sub_1C2969F6C(v1, v0);
  sub_1C2969F6C(v1, v0);
  return sub_1C2CFD86C();
}

uint64_t OUTLINED_FUNCTION_6_43(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C28BB120(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_8_46()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_13_35()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C2969F58(v1, v0);
}

uint64_t sub_1C2A8A640(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

_QWORD *sub_1C2A8A678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  unint64_t v9;

  v4[2] = 0xD000000000000029;
  v4[3] = 0x80000001C2D28CB0;
  *((_OWORD *)v4 + 2) = xmmword_1C2D00950;
  v4[7] = 0;
  swift_unknownObjectWeakInit();
  v8 = v4[4];
  v9 = v4[5];
  v4[4] = a1;
  v4[5] = a2;
  sub_1C2969FD0(v8, v9);
  v4[7] = a4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1C2A8A714(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79DF70);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *MEMORY[0x1E0D22330];
  v9 = sub_1C2CFBE98();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  swift_storeEnumTagMultiPayload();
  a3(v7);
  return sub_1C28BA958((uint64_t)v7, (uint64_t *)&unk_1EF79DF70);
}

void sub_1C2A8A7D0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  _OWORD v67[2];
  uint64_t v68;
  _OWORD v69[3];

  v6 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  OUTLINED_FUNCTION_0_1();
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v14);
  v16 = (char *)&v58 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79DF80);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_11_4();
  v19 = v6[5];
  if ((~v19 & 0xF000000000000007) == 0)
  {
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2A4();
    sub_1C2CFD7AC();
    OUTLINED_FUNCTION_34_25();
    sub_1C2CFBE80();
    OUTLINED_FUNCTION_0_53();
    a2(v5);
LABEL_5:
    sub_1C28BA958(v5, &qword_1EF79DF80);
    OUTLINED_FUNCTION_1();
    return;
  }
  v20 = v6[4];
  if (!(v19 >> 62))
  {
    v66 = a2;
    v64 = v6 + 6;
    if (MEMORY[0x1C3BC9E9C]())
    {
      OUTLINED_FUNCTION_7_45();
      v23 = *(void (**)(uint64_t))(v3 + 8);
      sub_1C2969F6C(v20, v19);
      v24 = OUTLINED_FUNCTION_9_49();
      v23(v24);
      OUTLINED_FUNCTION_21_5();
    }
    else
    {
      OUTLINED_FUNCTION_10_51();
    }
    v65 = a3;
    if (qword_1ED7AA038 != -1)
      swift_once();
    v63 = qword_1ED7AA1A8;
    HIDWORD(v62) = sub_1C2CFE2A4();
    v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v25 = OUTLINED_FUNCTION_5_2();
    v60 = xmmword_1C2D002E0;
    *(_OWORD *)(v25 + 16) = xmmword_1C2D002E0;
    ObjectType = swift_getObjectType();
    *(_QWORD *)&v67[0] = v20;
    v59 = *(_QWORD *)(v19 + 8);
    v27 = sub_1C2CFE988();
    v29 = v28;
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    v30 = sub_1C28BFD30();
    *(_QWORD *)(v25 + 64) = v30;
    *(_QWORD *)(v25 + 32) = v27;
    *(_QWORD *)(v25 + 40) = v29;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    if ((*(uint64_t (**)(uint64_t, unint64_t))(v19 + 16))(ObjectType, v19))
    {
      v32 = v31;
      v33 = MEMORY[0x1C3BC9E9C](v64);
      v34 = v6[7];
      v64 = (_QWORD *)type metadata accessor for ActionHandlingFlowFrame();
      OUTLINED_FUNCTION_5_2();
      v35 = swift_unknownObjectRetain();
      *(_QWORD *)&v67[0] = sub_1C296CAEC(v35, v32, v33, v34);
      v36 = (_QWORD *)OUTLINED_FUNCTION_5_2();
      v36[2] = v6;
      v36[3] = v20;
      v36[4] = v19;
      v37 = OUTLINED_FUNCTION_9_49();
      sub_1C2969F58(v37, v38);
      OUTLINED_FUNCTION_34_25();
      sub_1C2CFD350();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF792078);
      sub_1C2A8B438();
      sub_1C2CFBE74();
      swift_release();
      OUTLINED_FUNCTION_0_53();
      OUTLINED_FUNCTION_13_36();
      swift_release();
      OUTLINED_FUNCTION_11_39();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1C2CFE2A4();
      v39 = OUTLINED_FUNCTION_5_2();
      v40 = ObjectType;
      v41 = (_QWORD *)v39;
      *(_OWORD *)(v39 + 16) = v60;
      *(_QWORD *)&v67[0] = v20;
      v63 = v40;
      v42 = sub_1C2CFE988();
      v41[7] = MEMORY[0x1E0DEA968];
      v41[8] = v30;
      v41[4] = v42;
      v41[5] = v43;
      sub_1C2CFD7AC();
      swift_bridgeObjectRelease();
      if (MEMORY[0x1C3BC9E9C](v64))
      {
        OUTLINED_FUNCTION_7_45();
        v44 = OUTLINED_FUNCTION_9_49();
        v45(v44);
        OUTLINED_FUNCTION_21_5();
      }
      (*(void (**)(_OWORD *__return_ptr, uint64_t, unint64_t))(v19 + 24))(v67, v63, v19);
      v46 = v6[4];
      v47 = v6[5];
      *((_OWORD *)v6 + 2) = v67[0];
      sub_1C2969FD0(v46, v47);
      OUTLINED_FUNCTION_34_25();
      sub_1C2CFBE68();
      OUTLINED_FUNCTION_0_53();
      OUTLINED_FUNCTION_13_36();
      OUTLINED_FUNCTION_11_39();
    }
    goto LABEL_5;
  }
  if (v19 >> 62 != 1 && v20 < 0)
  {
    OUTLINED_FUNCTION_10_51();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v48 = sub_1C2CFD878();
    v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1ED7AA1B0);
    v50 = *(_QWORD *)(v48 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v16, v49, v48);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v48);
    sub_1C294E19C((uint64_t)v16, (uint64_t)v13);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v48) == 1)
    {
      sub_1C28BA958((uint64_t)v13, &qword_1ED7A9EC0);
    }
    else
    {
      v51 = sub_1C2CFD86C();
      v52 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = swift_slowAlloc();
        *(_QWORD *)&v67[0] = swift_slowAlloc();
        *(_DWORD *)v53 = 136315650;
        v54 = sub_1C2CFE694();
        *(_QWORD *)&v69[0] = sub_1C28BB120(v54, v55, (uint64_t *)v67);
        OUTLINED_FUNCTION_11_28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2048;
        *(_QWORD *)&v69[0] = 102;
        sub_1C2CFE4D8();
        *(_WORD *)(v53 + 22) = 2080;
        *(_QWORD *)&v69[0] = sub_1C28BB120(0xD000000000000054, 0x80000001C2D302F0, (uint64_t *)v67);
        OUTLINED_FUNCTION_11_28();
        _os_log_impl(&dword_1C28B6000, v51, v52, "FatalError at %s:%lu - %s", (uint8_t *)v53, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }

      (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v48);
    }
    if (qword_1ED7A84D8 != -1)
      swift_once();
    memset(v69, 0, 32);
    v68 = 0;
    memset(v67, 0, sizeof(v67));
    v56 = sub_1C2CFD350();
    LOBYTE(v57) = 44;
    sub_1C2AFA880(v56, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)v69, 0, 0, (uint64_t)v67, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, 0xD000000000000054, 0x80000001C2D302F0, v57, v58,
      v59,
      v60,
      *((void **)&v60 + 1),
      v61,
      v62,
      v63,
      (uint64_t)v64,
      v65,
      (uint64_t)v66,
      *(uint64_t *)&v67[0],
      SBYTE8(v67[0]));
    sub_1C28BA958((uint64_t)v67, (uint64_t *)&unk_1ED7A8750);
    sub_1C28BA958((uint64_t)v69, &qword_1ED7A8480);
    swift_release();
    sub_1C2CFE7FC();
    __break(1u);
  }
  else
  {
    sub_1C2969F6C(v6[4], v6[5]);
    sub_1C2A8B05C(v20, a2, a3);
    v21 = OUTLINED_FUNCTION_9_49();
    sub_1C2969FD0(v21, v22);
  }
}

uint64_t sub_1C2A8AFC0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v14;

  if (MEMORY[0x1C3BC9E9C](a3 + 6))
  {
    v8 = a3[7];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a4, a5, ObjectType, v8);
    swift_unknownObjectRelease();
  }
  v10 = swift_getObjectType();
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a5 + 24))(&v14, v10, a5);
  v11 = a3[4];
  v12 = a3[5];
  *((_OWORD *)a3 + 2) = v14;
  return sub_1C2969FD0(v11, v12);
}

void sub_1C2A8B05C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t (*)(uint64_t *), uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);

  v5 = v3;
  v25 = a3;
  v26 = a2;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79DF80);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_11_4();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF792070);
  v9 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24, v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (MEMORY[0x1C3BC9E9C](v3 + 48))
  {
    v13 = *(_QWORD *)(v3 + 56);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(a1, ObjectType, v13);
    OUTLINED_FUNCTION_21_5();
  }
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2A4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v15 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v15 + 16) = xmmword_1C2D002E0;
  sub_1C296AD60();
  v17 = v16;
  v19 = v18;
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 64) = sub_1C28BFD30();
  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v19;
  sub_1C2CFD7AC();
  swift_bridgeObjectRelease();
  v20 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v20 + 16) = v5;
  *(_QWORD *)(v20 + 24) = a1;
  v21 = *(void (**)(uint64_t (*)(uint64_t *), uint64_t))(a1 + 48);
  sub_1C2CFD350();
  sub_1C2CFD350();
  v21(sub_1C2A8B414, v20);
  swift_release();
  v22 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v4, v12, v24);
  swift_storeEnumTagMultiPayload();
  v26(v4);
  sub_1C28BA958(v4, &qword_1EF79DF80);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v22);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A8B274(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  unint64_t v10;

  v5 = *a1;
  v6 = a1[1];
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2A4();
  sub_1C2CFD7AC();
  if (MEMORY[0x1C3BC9E9C](a2 + 6))
  {
    v7 = a2[7];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a3, ObjectType, v7);
    swift_unknownObjectRelease();
  }
  v9 = a2[4];
  v10 = a2[5];
  a2[4] = v5;
  a2[5] = v6;
  sub_1C2969F58(v5, v6);
  return sub_1C2969FD0(v9, v10);
}

uint64_t sub_1C2A8B35C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C2969FD0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_1C296C9D4(v0 + 48);
  return v0;
}

uint64_t sub_1C2A8B388()
{
  sub_1C2A8B35C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GroupHandlingFlowFrame()
{
  return objc_opt_self();
}

uint64_t sub_1C2A8B3C8(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  return sub_1C2A8A714(a1, a2, a3);
}

void sub_1C2A8B3DC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  sub_1C2A8A7D0(a1, a3, a4);
}

uint64_t sub_1C2A8B404()
{
  return objectdestroyTm_13((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1C2A8B414(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C2A8B274(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C2A8B41C()
{
  return objectdestroyTm_13((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1C2A8B42C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C2A8AFC0(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

unint64_t sub_1C2A8B438()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF792080;
  if (!qword_1EF792080)
  {
    v1 = type metadata accessor for ActionHandlingFlowFrame();
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D00D18, v1);
    atomic_store(result, &qword_1EF792080);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_53()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_7_45()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_9_49()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_10_51()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C2969F6C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_39()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C2969FD0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_13_36()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 - 184))(v0);
}

uint64_t GuardFlow.__allocating_init(preconditionFlows:)(unint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  GuardFlow.init(preconditionFlows:)(a1);
  return v2;
}

SiriKitFlow::GuardFlowResult __swiftcall GuardFlowResult.and(_:)(SiriKitFlow::GuardFlowResult a1)
{
  char v1;

  return (v1 | a1) & 1;
}

uint64_t GuardFlowResult.description.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 1818845542;
  else
    return 1936941424;
}

void GuardFlowResult.hash(into:)()
{
  sub_1C2CFEAC0();
  OUTLINED_FUNCTION_1_0();
}

BOOL static GuardFlowResult.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t GuardFlowResult.hashValue.getter()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  return sub_1C2CFEAD8();
}

uint64_t sub_1C2A8B5A0()
{
  return GuardFlowResult.hashValue.getter();
}

void sub_1C2A8B5A8()
{
  GuardFlowResult.hash(into:)();
}

BOOL sub_1C2A8B5B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static GuardFlowResult.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C2A8B5BC()
{
  char *v0;

  return GuardFlowResult.description.getter(*v0);
}

uint64_t sub_1C2A8B5D8(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = a1 & 1;
  result = OUTLINED_FUNCTION_21_0();
  *(_BYTE *)(v1 + 48) = v2;
  return result;
}

uint64_t GuardFlow.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1C2A8B630()
{
  return sub_1C2A8B610();
}

unint64_t sub_1C2A8B654()
{
  unint64_t result;

  result = qword_1EF792090;
  if (!qword_1EF792090)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for GuardFlowResult, &type metadata for GuardFlowResult);
    atomic_store(result, (unint64_t *)&qword_1EF792090);
  }
  return result;
}

unint64_t sub_1C2A8B690(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2A8B6B4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2A8B6B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF792098;
  if (!qword_1EF792098)
  {
    v1 = type metadata accessor for GuardFlow();
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for GuardFlow, v1);
    atomic_store(result, (unint64_t *)&qword_1EF792098);
  }
  return result;
}

void sub_1C2A8B6F0(_BYTE *a1@<X8>)
{
  *a1 = sub_1C28D35C8();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A8B714(char *a1)
{
  sub_1C2A8B5D8(*a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t method lookup function for GuardFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GuardFlow.exitValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))() & 1;
}

uint64_t dispatch thunk of GuardFlow.__allocating_init(preconditionFlows:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of GuardFlow.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of GuardFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of GuardFlow.execute()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 168) + *(_QWORD *)(*(_QWORD *)v1 + 168));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C28C33A0;
  return v6(a1);
}

uint64_t OUTLINED_FUNCTION_0_54()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_3_45()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_4_50()
{
  return sub_1C2CFE820();
}

uint64_t GuidedConversationFlowDelegate.handleInterruption(_:)()
{
  return 0;
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.groupWillTransition(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.groupDidComplete(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.frameWillTransition(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.frameDidComplete(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.actionWillExecute(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.actionDidExecute(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.handleInterruption(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

unint64_t static GuidedConversationFlowConstants.flowNamespace.getter()
{
  return 0xD000000000000029;
}

void sub_1C2A8B890()
{
  swift_bridgeObjectRetain();
  sub_1C28DB31C();
}

void sub_1C2A8B8CC()
{
  OUTLINED_FUNCTION_21_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_84_3();
}

uint64_t sub_1C2A8B908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_unknownObjectRelease();
}

void sub_1C2A8B918()
{
  swift_unknownObjectRetain();
  sub_1C2A8B984();
}

void sub_1C2A8B950()
{
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_5_49();
}

void sub_1C2A8B978()
{
  OUTLINED_FUNCTION_84_3();
}

void sub_1C2A8B984()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v1 + 80) = v0;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_21_1();
}

void sub_1C2A8B9D0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_5_49();
}

void (*sub_1C2A8BA10(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return sub_1C2A8BA34;
}

void sub_1C2A8BA34(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 80) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void GuidedConversationFlowFrame.__allocating_init(source:)()
{
  OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_5_2();
  GuidedConversationFlowFrame.init(source:)();
  OUTLINED_FUNCTION_18();
}

void GuidedConversationFlowFrame.init(source:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_136_1();
  *(_QWORD *)(v1 + 16) = 0xD000000000000029;
  *(_QWORD *)(v1 + 24) = 0x80000001C2D28CB0;
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  *(_BYTE *)(v1 + 48) = 0;
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A8BB38(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79DF70);
  OUTLINED_FUNCTION_8_47();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_2_47();
  if (v10 != 1)
    goto LABEL_6;
  OUTLINED_FUNCTION_21_0();
  if (MEMORY[0x1C3BC9E9C](v5 + 72))
  {
    v11 = *(_QWORD *)(v5 + 80);
    ObjectType = swift_getObjectType();
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, ObjectType, v11);
    v15 = v14;
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  sub_1C2A8B908(v13, v15);
  if (!*(_QWORD *)(v5 + 56))
    v16 = (unsigned int *)MEMORY[0x1E0D22330];
  else
LABEL_6:
    v16 = (unsigned int *)MEMORY[0x1E0D22338];
  v17 = *v16;
  v18 = sub_1C2CFBE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v4, v17, v18);
  OUTLINED_FUNCTION_1_43();
  a3(v4);
  return sub_1C28BA958(v4, (uint64_t *)&unk_1EF79DF70);
}

uint64_t sub_1C2A8BC78(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD v11[2];
  char v12;

  if (*(_BYTE *)(a2 + 48))
    v4 = 2;
  else
    v4 = 1;
  *(_BYTE *)(a2 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 64);
    v7 = v5;
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 40);
    ObjectType = swift_getObjectType();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  }
  v11[0] = v7;
  v11[1] = v6;
  v12 = 0;
  swift_unknownObjectRetain();
  a3(v11);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1C2A8BD14(uint64_t a1, void (*a2)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;

  if (*(_BYTE *)(v2 + 48))
    v4 = 2;
  else
    v4 = 1;
  *(_BYTE *)(v2 + 48) = v4;
  v5 = *(_QWORD *)(v2 + 56);
  if (v5)
  {
    v6 = *(_QWORD *)(v2 + 64);
    v7 = v5;
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 40);
    ObjectType = swift_getObjectType();
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    v6 = v10;
  }
  swift_unknownObjectRetain();
  a2(v7, v6, 0);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C2A8BDB0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79DF80);
  OUTLINED_FUNCTION_8_47();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_2_47();
  if (v8 != 2)
  {
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2A4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v9 = OUTLINED_FUNCTION_5_2();
    *(_OWORD *)(v9 + 16) = xmmword_1C2D002E0;
    swift_getObjectType();
    v10 = sub_1C2CFE988();
    v12 = v11;
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v9 + 32) = v10;
    *(_QWORD *)(v9 + 40) = v12;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_5_49();
  }
  type metadata accessor for SiriKitFlowFrameInput();
  sub_1C2CFBE80();
  OUTLINED_FUNCTION_1_43();
  a4(v4);
  return sub_1C28BA958(v4, &qword_1EF79DF80);
}

uint64_t GuidedConversationFlowFrame.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1C296C9D4(v0 + 72);
  return v0;
}

uint64_t GuidedConversationFlowFrame.__deallocating_deinit()
{
  GuidedConversationFlowFrame.deinit();
  return swift_deallocClassInstance();
}

void sub_1C2A8C044()
{
  sub_1C2A8B8CC();
}

uint64_t sub_1C2A8C064(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return sub_1C2A8BB38(a1, a2, a3);
}

uint64_t sub_1C2A8C084(uint64_t a1, void (*a2)(_QWORD *))
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  sub_1C2CFD350();
  return sub_1C2A8BC78(a1, v5, a2);
}

uint64_t sub_1C2A8C0CC(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1C2A8BDB0(a1, *a2, a2[1], a3);
}

void sub_1C2A8C0FC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 48) = 2;
}

unint64_t sub_1C2A8C108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF7921E0;
  if (!qword_1EF7921E0)
  {
    v1 = type metadata accessor for GroupHandlingFlowFrame();
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0C238, v1);
    atomic_store(result, (unint64_t *)&qword_1EF7921E0);
  }
  return result;
}

void sub_1C2A8C148(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C2A8B8CC();
  *a1 = v2;
  a1[1] = v3;
}

void sub_1C2A8C174()
{
  sub_1C2A8B950();
}

uint64_t sub_1C2A8C18C(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for GuidedConversationFlowConstants()
{
  return &type metadata for GuidedConversationFlowConstants;
}

uint64_t type metadata accessor for GuidedConversationFlowFrame()
{
  return objc_opt_self();
}

uint64_t method lookup function for GuidedConversationFlowFrame()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.namespace.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.namespace.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.namespace.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.__allocating_init(source:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.onInput(controller:input:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.execute(controller:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.action(renderer:args:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.exit(controller:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t storeEnumTagSinglePayload for State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C2A8C2A8 + 4 * byte_1C2D0C445[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C2A8C2DC + 4 * asc_1C2D0C440[v4]))();
}

uint64_t sub_1C2A8C2DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A8C2E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A8C2ECLL);
  return result;
}

uint64_t sub_1C2A8C2F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A8C300);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C2A8C304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A8C30C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for State()
{
  return &type metadata for State;
}

unint64_t sub_1C2A8C32C()
{
  unint64_t result;

  result = qword_1EF792328;
  if (!qword_1EF792328)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0C588, &type metadata for State);
    atomic_store(result, (unint64_t *)&qword_1EF792328);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_43()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_5_49()
{
  JUMPOUT(0x1C3BC9E9CLL);
}

uint64_t dispatch thunk of GuidedConversationFlowSource.initialGroup.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t HandcraftedPluginManifestEntry.bundlePath.getter()
{
  uint64_t v0;

  v0 = *(_QWORD *)(OUTLINED_FUNCTION_0_55() + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v0;
}

uint64_t HandcraftedPluginManifestEntry.pluginBundleId.getter()
{
  return HandcraftedPluginManifestEntry.rawValue.getter();
}

uint64_t sub_1C2A8C434()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000016;
  *(_QWORD *)(result + 24) = 0x80000001C2D30CF0;
  *(_QWORD *)(result + 32) = 0xD00000000000001ELL;
  *(_QWORD *)(result + 40) = 0x80000001C2D25780;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8C68 = result;
  return result;
}

uint64_t sub_1C2A8C4A0()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000016;
  *(_QWORD *)(result + 24) = 0x80000001C2D30CD0;
  *(_QWORD *)(result + 32) = 0xD00000000000001ELL;
  *(_QWORD *)(result + 40) = 0x80000001C2D257A0;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9108 = result;
  return result;
}

uint64_t sub_1C2A8C50C()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30CB0;
  *(_QWORD *)(result + 32) = 0xD00000000000002CLL;
  *(_QWORD *)(result + 40) = 0x80000001C2D257C0;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8FD0 = result;
  return result;
}

uint64_t sub_1C2A8C578()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000018;
  *(_QWORD *)(result + 24) = 0x80000001C2D30C90;
  *(_QWORD *)(result + 32) = 0xD000000000000020;
  *(_QWORD *)(result + 40) = 0x80000001C2D25820;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8F88 = result;
  return result;
}

uint64_t sub_1C2A8C5E4()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000021;
  *(_QWORD *)(result + 24) = 0x80000001C2D30C60;
  *(_QWORD *)(result + 32) = 0xD000000000000029;
  *(_QWORD *)(result + 40) = 0x80000001C2D257F0;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9038 = result;
  return result;
}

uint64_t sub_1C2A8C650()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000024;
  *(_QWORD *)(result + 24) = 0x80000001C2D30C30;
  *(_QWORD *)(result + 32) = 0xD00000000000002CLL;
  *(_QWORD *)(result + 40) = 0x80000001C2D25850;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8E70 = result;
  return result;
}

uint64_t sub_1C2A8C6BC()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000016;
  *(_QWORD *)(result + 24) = 0x80000001C2D30C10;
  *(_QWORD *)(result + 32) = 0xD00000000000001ELL;
  *(_QWORD *)(result + 40) = 0x80000001C2D25880;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8FE0 = result;
  return result;
}

uint64_t sub_1C2A8C728()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000021;
  *(_QWORD *)(result + 24) = 0x80000001C2D30BE0;
  *(_QWORD *)(result + 32) = 0xD000000000000029;
  *(_QWORD *)(result + 40) = 0x80000001C2D258A0;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9050 = result;
  return result;
}

uint64_t sub_1C2A8C794()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30B90;
  *(_QWORD *)(result + 32) = 0xD000000000000026;
  *(_QWORD *)(result + 40) = 0x80000001C2D25900;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8EF0 = result;
  return result;
}

uint64_t sub_1C2A8C800()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001CLL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30B70;
  *(_QWORD *)(result + 32) = 0xD000000000000024;
  *(_QWORD *)(result + 40) = 0x80000001C2D25930;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8E88 = result;
  return result;
}

uint64_t sub_1C2A8C86C()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001ALL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30B50;
  *(_QWORD *)(result + 32) = 0xD000000000000022;
  *(_QWORD *)(result + 40) = 0x80000001C2D25960;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9118 = result;
  return result;
}

uint64_t sub_1C2A8C8D8()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000017;
  *(_QWORD *)(result + 24) = 0x80000001C2D30B30;
  *(_QWORD *)(result + 32) = 0xD000000000000026;
  *(_QWORD *)(result + 40) = 0x80000001C2D25990;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9010 = result;
  return result;
}

uint64_t sub_1C2A8C944()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001CLL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30B10;
  *(_QWORD *)(result + 32) = 0xD000000000000024;
  *(_QWORD *)(result + 40) = 0x80000001C2D259C0;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8F98 = result;
  return result;
}

uint64_t sub_1C2A8C9B0()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001FLL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30AF0;
  *(_QWORD *)(result + 32) = 0xD000000000000027;
  *(_QWORD *)(result + 40) = 0x80000001C2D259F0;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9028 = result;
  return result;
}

uint64_t sub_1C2A8CA1C()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000027;
  *(_QWORD *)(result + 24) = 0x80000001C2D30AC0;
  *(_QWORD *)(result + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(result + 40) = 0x80000001C2D25A20;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8F18 = result;
  return result;
}

uint64_t sub_1C2A8CA88()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000002ALL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30A90;
  *(_QWORD *)(result + 32) = 0xD000000000000032;
  *(_QWORD *)(result + 40) = 0x80000001C2D25A50;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8F60 = result;
  return result;
}

uint64_t sub_1C2A8CAF4()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000019;
  *(_QWORD *)(result + 24) = 0x80000001C2D30A70;
  *(_QWORD *)(result + 32) = 0xD000000000000021;
  *(_QWORD *)(result + 40) = 0x80000001C2D25A90;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9068 = result;
  return result;
}

uint64_t sub_1C2A8CB60()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001CLL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30A50;
  *(_QWORD *)(result + 32) = 0xD000000000000024;
  *(_QWORD *)(result + 40) = 0x80000001C2D25AC0;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8E98 = result;
  return result;
}

uint64_t sub_1C2A8CBCC()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001DLL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30A30;
  *(_QWORD *)(result + 32) = 0xD000000000000025;
  *(_QWORD *)(result + 40) = 0x80000001C2D25AF0;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8FB0 = result;
  return result;
}

uint64_t sub_1C2A8CC38()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000021;
  *(_QWORD *)(result + 24) = 0x80000001C2D30A00;
  *(_QWORD *)(result + 32) = 0xD000000000000031;
  *(_QWORD *)(result + 40) = 0x80000001C2D25B20;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 2;
  qword_1ED7A9080 = result;
  return result;
}

uint64_t sub_1C2A8CCA8()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000019;
  *(_QWORD *)(result + 24) = 0x80000001C2D309E0;
  *(_QWORD *)(result + 32) = 0xD000000000000021;
  *(_QWORD *)(result + 40) = 0x80000001C2D25B60;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9098 = result;
  return result;
}

uint64_t sub_1C2A8CD14()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000026;
  *(_QWORD *)(result + 24) = 0x80000001C2D309B0;
  *(_QWORD *)(result + 32) = 0xD00000000000002ELL;
  *(_QWORD *)(result + 40) = 0x80000001C2D25B90;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8F00 = result;
  return result;
}

uint64_t sub_1C2A8CD80()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000021;
  *(_QWORD *)(result + 24) = 0x80000001C2D30980;
  *(_QWORD *)(result + 32) = 0xD000000000000029;
  *(_QWORD *)(result + 40) = 0x80000001C2D25BC0;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A90B0 = result;
  return result;
}

uint64_t sub_1C2A8CDEC()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000022;
  *(_QWORD *)(result + 24) = 0x80000001C2D30950;
  *(_QWORD *)(result + 32) = 0xD00000000000002ALL;
  *(_QWORD *)(result + 40) = 0x80000001C2D25BF0;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9130 = result;
  return result;
}

uint64_t sub_1C2A8CE58()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000021;
  *(_QWORD *)(result + 24) = 0x80000001C2D30BB0;
  *(_QWORD *)(result + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(result + 40) = 0x80000001C2D258D0;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8F48 = result;
  return result;
}

uint64_t sub_1C2A8CEC4()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000021;
  *(_QWORD *)(result + 24) = 0x80000001C2D30920;
  *(_QWORD *)(result + 32) = 0xD000000000000029;
  *(_QWORD *)(result + 40) = 0x80000001C2D25C20;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A90C0 = result;
  return result;
}

uint64_t sub_1C2A8CF30()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000019;
  *(_QWORD *)(result + 24) = 0x80000001C2D30900;
  *(_QWORD *)(result + 32) = 0xD000000000000021;
  *(_QWORD *)(result + 40) = 0x80000001C2D25C50;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A90D8 = result;
  return result;
}

uint64_t sub_1C2A8CF9C()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000002BLL;
  *(_QWORD *)(result + 24) = 0x80000001C2D308A0;
  *(_QWORD *)(result + 32) = 0xD000000000000033;
  *(_QWORD *)(result + 40) = 0x80000001C2D25C80;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8F78 = result;
  return result;
}

uint64_t sub_1C2A8D008()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000020;
  *(_QWORD *)(result + 24) = 0x80000001C2D308D0;
  *(_QWORD *)(result + 32) = 0xD000000000000023;
  *(_QWORD *)(result + 40) = 0x80000001C2D25CC0;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8EA8 = result;
  return result;
}

uint64_t sub_1C2A8D074()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000027;
  *(_QWORD *)(result + 24) = 0x80000001C2D30870;
  *(_QWORD *)(result + 32) = 0xD00000000000002FLL;
  *(_QWORD *)(result + 40) = 0x80000001C2D25CF0;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8F30 = result;
  return result;
}

uint64_t sub_1C2A8D0E0()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30850;
  *(_QWORD *)(result + 32) = 0xD000000000000026;
  *(_QWORD *)(result + 40) = 0x80000001C2D25D20;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8FF0 = result;
  return result;
}

uint64_t sub_1C2A8D14C()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000024;
  *(_QWORD *)(result + 24) = 0x80000001C2D30820;
  *(_QWORD *)(result + 32) = 0xD00000000000002CLL;
  *(_QWORD *)(result + 40) = 0x80000001C2D25D50;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A8EC0 = result;
  return result;
}

uint64_t sub_1C2A8D1B8()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(result + 24) = 0x80000001C2D30800;
  *(_QWORD *)(result + 32) = 0xD000000000000026;
  *(_QWORD *)(result + 40) = 0x80000001C2D25D80;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A9000 = result;
  return result;
}

uint64_t sub_1C2A8D224()
{
  uint64_t result;

  type metadata accessor for InternalPluginData();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000019;
  *(_QWORD *)(result + 24) = 0x80000001C2D307E0;
  *(_QWORD *)(result + 32) = 0xD000000000000021;
  *(_QWORD *)(result + 40) = 0x80000001C2D25DB0;
  *(_BYTE *)(result + 48) = 1;
  *(_QWORD *)(result + 56) = 1;
  qword_1ED7A90F0 = result;
  return result;
}

uint64_t sub_1C2A8D290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C2D0C5F0;
  if (qword_1ED7A8FC8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = qword_1ED7A8C68;
  v1 = qword_1ED7A9110;
  sub_1C2CFD350();
  if (v1 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = qword_1ED7A9108;
  v2 = qword_1ED7A8FD8;
  sub_1C2CFD350();
  if (v2 != -1)
    swift_once();
  *(_QWORD *)(v0 + 48) = qword_1ED7A8FD0;
  v3 = qword_1ED7A8F90;
  sub_1C2CFD350();
  if (v3 != -1)
    swift_once();
  *(_QWORD *)(v0 + 56) = qword_1ED7A8F88;
  v4 = qword_1ED7A9048;
  sub_1C2CFD350();
  if (v4 != -1)
    swift_once();
  *(_QWORD *)(v0 + 64) = qword_1ED7A9038;
  v5 = qword_1ED7A8E80;
  sub_1C2CFD350();
  if (v5 != -1)
    swift_once();
  *(_QWORD *)(v0 + 72) = qword_1ED7A8E70;
  v6 = qword_1ED7A8FE8;
  sub_1C2CFD350();
  if (v6 != -1)
    swift_once();
  *(_QWORD *)(v0 + 80) = qword_1ED7A8FE0;
  v7 = qword_1ED7A9060;
  sub_1C2CFD350();
  if (v7 != -1)
    swift_once();
  *(_QWORD *)(v0 + 88) = qword_1ED7A9050;
  v8 = qword_1ED7A8F58;
  sub_1C2CFD350();
  if (v8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 96) = qword_1ED7A8F48;
  v9 = qword_1ED7A8EF8;
  sub_1C2CFD350();
  if (v9 != -1)
    swift_once();
  *(_QWORD *)(v0 + 104) = qword_1ED7A8EF0;
  v10 = qword_1ED7A8E90;
  sub_1C2CFD350();
  if (v10 != -1)
    swift_once();
  *(_QWORD *)(v0 + 112) = qword_1ED7A8E88;
  v11 = qword_1ED7A9128;
  sub_1C2CFD350();
  if (v11 != -1)
    swift_once();
  *(_QWORD *)(v0 + 120) = qword_1ED7A9118;
  v12 = qword_1ED7A9020;
  sub_1C2CFD350();
  if (v12 != -1)
    swift_once();
  *(_QWORD *)(v0 + 128) = qword_1ED7A9010;
  v13 = qword_1ED7A8FA8;
  sub_1C2CFD350();
  if (v13 != -1)
    swift_once();
  *(_QWORD *)(v0 + 136) = qword_1ED7A8F98;
  v14 = qword_1ED7A9030;
  sub_1C2CFD350();
  if (v14 != -1)
    swift_once();
  *(_QWORD *)(v0 + 144) = qword_1ED7A9028;
  v15 = qword_1ED7A8F28;
  sub_1C2CFD350();
  if (v15 != -1)
    swift_once();
  *(_QWORD *)(v0 + 152) = qword_1ED7A8F18;
  v16 = qword_1ED7A8F70;
  sub_1C2CFD350();
  if (v16 != -1)
    swift_once();
  *(_QWORD *)(v0 + 160) = qword_1ED7A8F60;
  v17 = qword_1ED7A9078;
  sub_1C2CFD350();
  if (v17 != -1)
    swift_once();
  *(_QWORD *)(v0 + 168) = qword_1ED7A9068;
  v18 = qword_1ED7A8EA0;
  sub_1C2CFD350();
  if (v18 != -1)
    swift_once();
  *(_QWORD *)(v0 + 176) = qword_1ED7A8E98;
  v19 = qword_1ED7A8FB8;
  sub_1C2CFD350();
  if (v19 != -1)
    swift_once();
  *(_QWORD *)(v0 + 184) = qword_1ED7A8FB0;
  v20 = qword_1ED7A9090;
  sub_1C2CFD350();
  if (v20 != -1)
    swift_once();
  *(_QWORD *)(v0 + 192) = qword_1ED7A9080;
  v21 = qword_1ED7A90A8;
  sub_1C2CFD350();
  if (v21 != -1)
    swift_once();
  *(_QWORD *)(v0 + 200) = qword_1ED7A9098;
  v22 = qword_1ED7A8F10;
  sub_1C2CFD350();
  if (v22 != -1)
    swift_once();
  *(_QWORD *)(v0 + 208) = qword_1ED7A8F00;
  v23 = qword_1ED7A90B8;
  sub_1C2CFD350();
  if (v23 != -1)
    swift_once();
  *(_QWORD *)(v0 + 216) = qword_1ED7A90B0;
  v24 = qword_1ED7A9140;
  sub_1C2CFD350();
  if (v24 != -1)
    swift_once();
  *(_QWORD *)(v0 + 224) = qword_1ED7A9130;
  v25 = qword_1ED7A90D0;
  sub_1C2CFD350();
  if (v25 != -1)
    swift_once();
  *(_QWORD *)(v0 + 232) = qword_1ED7A90C0;
  v26 = qword_1ED7A90E8;
  sub_1C2CFD350();
  if (v26 != -1)
    swift_once();
  *(_QWORD *)(v0 + 240) = qword_1ED7A90D8;
  v27 = qword_1ED7A8EB8;
  sub_1C2CFD350();
  if (v27 != -1)
    swift_once();
  *(_QWORD *)(v0 + 248) = qword_1ED7A8EA8;
  v28 = qword_1ED7A8F80;
  sub_1C2CFD350();
  if (v28 != -1)
    swift_once();
  *(_QWORD *)(v0 + 256) = qword_1ED7A8F78;
  v29 = qword_1ED7A8F40;
  sub_1C2CFD350();
  if (v29 != -1)
    swift_once();
  *(_QWORD *)(v0 + 264) = qword_1ED7A8F30;
  v30 = qword_1ED7A8FF8;
  sub_1C2CFD350();
  if (v30 != -1)
    swift_once();
  *(_QWORD *)(v0 + 272) = qword_1ED7A8FF0;
  v31 = qword_1ED7A8ED0;
  sub_1C2CFD350();
  if (v31 != -1)
    swift_once();
  *(_QWORD *)(v0 + 280) = qword_1ED7A8EC0;
  v32 = qword_1ED7A9008;
  sub_1C2CFD350();
  if (v32 != -1)
    swift_once();
  *(_QWORD *)(v0 + 288) = qword_1ED7A9000;
  v33 = qword_1ED7A9100;
  sub_1C2CFD350();
  if (v33 != -1)
    swift_once();
  *(_QWORD *)(v0 + 296) = qword_1ED7A90F0;
  sub_1C2CFDFC8();
  qword_1ED7A8ED8 = v0;
  return sub_1C2CFD350();
}

uint64_t sub_1C2A8DA68()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C2A8DA8C()
{
  sub_1C2A8DA68();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A8DAA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *__return_ptr, _QWORD *);
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  _QWORD *v47;
  _QWORD v48[6];

  if (qword_1ED7A8EE8 != -1)
    goto LABEL_44;
  while (1)
  {
    v36 = qword_1ED7A8ED8;
    if ((unint64_t)qword_1ED7A8ED8 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v0 = sub_1C2CFE820();
      swift_bridgeObjectRelease();
      if (!v0)
      {
LABEL_46:
        swift_bridgeObjectRelease();
        v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
        goto LABEL_47;
      }
    }
    else
    {
      v0 = *(_QWORD *)((qword_1ED7A8ED8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v0)
        goto LABEL_46;
    }
    v1 = 0;
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v37 = v0;
LABEL_5:
    if ((v36 & 0xC000000000000001) != 0)
    {
      v3 = MEMORY[0x1C3BC9170](v1, v36);
    }
    else
    {
      v3 = *(_QWORD *)(v36 + 32 + 8 * v1);
      sub_1C2CFD350();
    }
    v4 = __OFADD__(v1, 1);
    v5 = v1 + 1;
    if (!v4)
      break;
LABEL_43:
    __break(1u);
LABEL_44:
    swift_once();
  }
  v38 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9218);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(inited + 32) = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 48) = v3;
  type metadata accessor for InternalPluginData();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2CFD350();
  v8 = sub_1C2CFDC8C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47 = v2;
  sub_1C29C6638(v48, v8, sub_1C290C050, 0);
  v10 = v48[0];
  v42 = v48[3];
  v11 = v48[4];
  v40 = v48[1];
  v41 = (void (*)(uint64_t *__return_ptr, _QWORD *))v48[5];
  v39 = (unint64_t)(v48[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  while (1)
  {
    if (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v42 << 6);
      goto LABEL_28;
    }
    v14 = v42 + 1;
    if (__OFADD__(v42, 1))
      goto LABEL_42;
    if (v14 >= v39)
      goto LABEL_38;
    v15 = *(_QWORD *)(v40 + 8 * v14);
    v16 = v42 + 1;
    if (!v15)
    {
      v16 = v42 + 2;
      if (v42 + 2 >= v39)
        goto LABEL_38;
      v15 = *(_QWORD *)(v40 + 8 * v16);
      if (!v15)
      {
        v16 = v42 + 3;
        if (v42 + 3 >= v39)
          goto LABEL_38;
        v15 = *(_QWORD *)(v40 + 8 * v16);
        if (!v15)
        {
          v16 = v42 + 4;
          if (v42 + 4 >= v39)
            goto LABEL_38;
          v15 = *(_QWORD *)(v40 + 8 * v16);
          if (!v15)
          {
            v16 = v42 + 5;
            if (v42 + 5 >= v39)
              goto LABEL_38;
            v15 = *(_QWORD *)(v40 + 8 * v16);
            if (!v15)
              break;
          }
        }
      }
    }
LABEL_27:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v42 = v16;
LABEL_28:
    v18 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v13);
    v19 = v18[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v13);
    v46[0] = *v18;
    v46[1] = v19;
    v46[2] = v20;
    swift_bridgeObjectRetain();
    sub_1C2CFD350();
    v41(&v43, v46);
    swift_release();
    swift_bridgeObjectRelease();
    v22 = v43;
    v21 = v44;
    v23 = v45;
    v25 = sub_1C28BFFFC(v43, v44);
    v26 = v2[2];
    v27 = (v24 & 1) == 0;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v28 = v24;
    if (v2[3] >= v26 + v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9208);
        sub_1C2CFE7D8();
      }
    }
    else
    {
      sub_1C29C62AC();
      v29 = sub_1C28BFFFC(v22, v21);
      if ((v28 & 1) != (v30 & 1))
      {
        result = sub_1C2CFEA3C();
        __break(1u);
        return result;
      }
      v25 = v29;
    }
    v2 = v47;
    if ((v28 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v31 = v2[7];
      swift_release();
      *(_QWORD *)(v31 + 8 * v25) = v23;
      isUniquelyReferenced_nonNull_native = 1;
    }
    else
    {
      v47[(v25 >> 6) + 8] |= 1 << v25;
      v32 = (uint64_t *)(v2[6] + 16 * v25);
      *v32 = v22;
      v32[1] = v21;
      *(_QWORD *)(v2[7] + 8 * v25) = v23;
      v33 = v2[2];
      v4 = __OFADD__(v33, 1);
      v34 = v33 + 1;
      if (v4)
        goto LABEL_41;
      v2[2] = v34;
      isUniquelyReferenced_nonNull_native = 1;
    }
  }
  v17 = v42 + 6;
  while (v17 < v39)
  {
    v15 = *(_QWORD *)(v40 + 8 * v17++);
    if (v15)
    {
      v16 = v17 - 1;
      goto LABEL_27;
    }
  }
LABEL_38:
  swift_bridgeObjectRelease();
  sub_1C29B63B4();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v38;
  if (v38 != v37)
    goto LABEL_5;
  swift_bridgeObjectRelease();
LABEL_47:
  qword_1ED7A63A8 = (uint64_t)v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A8DF84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *__return_ptr, _QWORD *);
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  _QWORD *v47;
  _QWORD v48[6];

  if (qword_1ED7A8EE8 != -1)
    goto LABEL_44;
  while (1)
  {
    v36 = qword_1ED7A8ED8;
    if ((unint64_t)qword_1ED7A8ED8 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v0 = sub_1C2CFE820();
      swift_bridgeObjectRelease();
      if (!v0)
      {
LABEL_46:
        swift_bridgeObjectRelease();
        v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
        goto LABEL_47;
      }
    }
    else
    {
      v0 = *(_QWORD *)((qword_1ED7A8ED8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v0)
        goto LABEL_46;
    }
    v1 = 0;
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v37 = v0;
LABEL_5:
    if ((v36 & 0xC000000000000001) != 0)
    {
      v3 = MEMORY[0x1C3BC9170](v1, v36);
    }
    else
    {
      v3 = *(_QWORD *)(v36 + 32 + 8 * v1);
      sub_1C2CFD350();
    }
    v4 = __OFADD__(v1, 1);
    v5 = v1 + 1;
    if (!v4)
      break;
LABEL_43:
    __break(1u);
LABEL_44:
    swift_once();
  }
  v38 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9218);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  v7 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(inited + 32) = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 48) = v3;
  type metadata accessor for InternalPluginData();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2CFD350();
  v8 = sub_1C2CFDC8C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47 = v2;
  sub_1C29C6638(v48, v8, sub_1C290C050, 0);
  v10 = v48[0];
  v42 = v48[3];
  v11 = v48[4];
  v40 = v48[1];
  v41 = (void (*)(uint64_t *__return_ptr, _QWORD *))v48[5];
  v39 = (unint64_t)(v48[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  while (1)
  {
    if (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v42 << 6);
      goto LABEL_28;
    }
    v14 = v42 + 1;
    if (__OFADD__(v42, 1))
      goto LABEL_42;
    if (v14 >= v39)
      goto LABEL_38;
    v15 = *(_QWORD *)(v40 + 8 * v14);
    v16 = v42 + 1;
    if (!v15)
    {
      v16 = v42 + 2;
      if (v42 + 2 >= v39)
        goto LABEL_38;
      v15 = *(_QWORD *)(v40 + 8 * v16);
      if (!v15)
      {
        v16 = v42 + 3;
        if (v42 + 3 >= v39)
          goto LABEL_38;
        v15 = *(_QWORD *)(v40 + 8 * v16);
        if (!v15)
        {
          v16 = v42 + 4;
          if (v42 + 4 >= v39)
            goto LABEL_38;
          v15 = *(_QWORD *)(v40 + 8 * v16);
          if (!v15)
          {
            v16 = v42 + 5;
            if (v42 + 5 >= v39)
              goto LABEL_38;
            v15 = *(_QWORD *)(v40 + 8 * v16);
            if (!v15)
              break;
          }
        }
      }
    }
LABEL_27:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v42 = v16;
LABEL_28:
    v18 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v13);
    v19 = v18[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v13);
    v46[0] = *v18;
    v46[1] = v19;
    v46[2] = v20;
    swift_bridgeObjectRetain();
    sub_1C2CFD350();
    v41(&v43, v46);
    swift_release();
    swift_bridgeObjectRelease();
    v22 = v43;
    v21 = v44;
    v23 = v45;
    v25 = sub_1C28BFFFC(v43, v44);
    v26 = v2[2];
    v27 = (v24 & 1) == 0;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v28 = v24;
    if (v2[3] >= v26 + v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9208);
        sub_1C2CFE7D8();
      }
    }
    else
    {
      sub_1C29C62AC();
      v29 = sub_1C28BFFFC(v22, v21);
      if ((v28 & 1) != (v30 & 1))
      {
        result = sub_1C2CFEA3C();
        __break(1u);
        return result;
      }
      v25 = v29;
    }
    v2 = v47;
    if ((v28 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v31 = v2[7];
      swift_release();
      *(_QWORD *)(v31 + 8 * v25) = v23;
      isUniquelyReferenced_nonNull_native = 1;
    }
    else
    {
      v47[(v25 >> 6) + 8] |= 1 << v25;
      v32 = (uint64_t *)(v2[6] + 16 * v25);
      *v32 = v22;
      v32[1] = v21;
      *(_QWORD *)(v2[7] + 8 * v25) = v23;
      v33 = v2[2];
      v4 = __OFADD__(v33, 1);
      v34 = v33 + 1;
      if (v4)
        goto LABEL_41;
      v2[2] = v34;
      isUniquelyReferenced_nonNull_native = 1;
    }
  }
  v17 = v42 + 6;
  while (v17 < v39)
  {
    v15 = *(_QWORD *)(v40 + 8 * v17++);
    if (v15)
    {
      v16 = v17 - 1;
      goto LABEL_27;
    }
  }
LABEL_38:
  swift_bridgeObjectRelease();
  sub_1C29B63B4();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v38;
  if (v38 != v37)
    goto LABEL_5;
  swift_bridgeObjectRelease();
LABEL_47:
  qword_1ED7A91B0 = (uint64_t)v2;
  return swift_bridgeObjectRelease();
}

SiriKitFlow::HandcraftedPluginManifestEntry_optional static HandcraftedPluginManifestEntry.fromPluginBundleId(_:)(uint64_t a1, void *a2)
{
  Swift::String v4;

  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  return HandcraftedPluginManifestEntry.init(rawValue:)(v4);
}

uint64_t HandcraftedPluginManifestEntry.associatedAppBundleId.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(_QWORD, _QWORD))((char *)nullsub_2 + 4 * byte_1C2D0C644[*v0]))(0, 0);
}

unint64_t sub_1C2A8E4C8()
{
  return 0xD000000000000015;
}

uint64_t sub_1C2A8E668(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C2AF877C(*a1, *a2);
}

unint64_t sub_1C2A8E678()
{
  unint64_t result;

  result = qword_1EF792330;
  if (!qword_1EF792330)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for HandcraftedPluginManifestEntry, &type metadata for HandcraftedPluginManifestEntry);
    atomic_store(result, (unint64_t *)&qword_1EF792330);
  }
  return result;
}

void sub_1C2A8E6B4()
{
  unsigned __int8 *v0;

  sub_1C293B4FC(*v0);
}

uint64_t sub_1C2A8E6BC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1C2AB018C(a1, *v1);
}

void sub_1C2A8E6C4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C293BBBC(a1, *v1);
}

SiriKitFlow::HandcraftedPluginManifestEntry_optional sub_1C2A8E6CC(Swift::String *a1)
{
  return HandcraftedPluginManifestEntry.init(rawValue:)(*a1);
}

uint64_t sub_1C2A8E6D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HandcraftedPluginManifestEntry.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t type metadata accessor for InternalPluginData()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for HandcraftedPluginManifestEntry(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 33 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 33) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDE)
    return ((uint64_t (*)(void))((char *)&loc_1C2A8E768 + 4 * byte_1C2D0C66B[v4]))();
  *a1 = a2 + 33;
  return ((uint64_t (*)(void))((char *)sub_1C2A8E79C + 4 * byte_1C2D0C666[v4]))();
}

uint64_t sub_1C2A8E79C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A8E7A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A8E7ACLL);
  return result;
}

uint64_t sub_1C2A8E7B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A8E7C0);
  *(_BYTE *)result = a2 + 33;
  return result;
}

uint64_t sub_1C2A8E7C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A8E7CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_55()
{
  return sub_1C28CBAF8();
}

uint64_t OUTLINED_FUNCTION_1_44()
{
  return sub_1C2CFE4F0();
}

unint64_t OUTLINED_FUNCTION_2_48()
{
  return sub_1C28BFDA8();
}

void sub_1C2A8E810(uint64_t a1@<X8>)
{
  HandleIntentFlowStrategyAsync.authenticationPolicy.getter(a1);
}

void sub_1C2A8E824()
{
  HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)();
}

void HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_169_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v3);
  v4 = OUTLINED_FUNCTION_5_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_54_0(v4);
  v6 = OUTLINED_FUNCTION_10_2(v5, (uint64_t)&unk_1EF792338);
  if ((_DWORD)v0 == 1)
  {
    OUTLINED_FUNCTION_60_0(v6, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (v0)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      OUTLINED_FUNCTION_91_0();
    }
  }
  v7 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_88(v7, (uint64_t)&unk_1EF789CD8);
  if (v8)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A8E930()
{
  HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)();
}

void HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)()
{
  uint64_t v0;

  type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy();
  swift_initStackObject();
  v0 = OUTLINED_FUNCTION_161_2();
  sub_1C2A8EED4(v0);
}

void sub_1C2A8E984()
{
  HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)();
}

void HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_169_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v3);
  v4 = OUTLINED_FUNCTION_5_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_54_0(v4);
  v6 = OUTLINED_FUNCTION_10_2(v5, (uint64_t)&unk_1EF792340);
  if ((_DWORD)v0 == 1)
  {
    OUTLINED_FUNCTION_60_0(v6, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (v0)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      OUTLINED_FUNCTION_91_0();
    }
  }
  v7 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_88(v7, (uint64_t)&unk_1EF789CF0);
  if (v8)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A8EA90()
{
  HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)();
}

void HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_169_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v3);
  v4 = OUTLINED_FUNCTION_5_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_54_0(v4);
  v6 = OUTLINED_FUNCTION_10_2(v5, (uint64_t)&unk_1EF792348);
  if ((_DWORD)v0 == 1)
  {
    OUTLINED_FUNCTION_60_0(v6, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (v0)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      OUTLINED_FUNCTION_91_0();
    }
  }
  v7 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_88(v7, (uint64_t)&unk_1EF789D08);
  if (v8)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A8EB9C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_11_4();
  v16 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = a3;
  v17 = sub_1C2CFE10C();
  OUTLINED_FUNCTION_120_7(v17);
  v18 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = &unk_1EF792358;
  v18[5] = v16;
  v18[6] = a4;
  v18[7] = a5;
  sub_1C2CFD350();
  v19 = a2;
  v20 = a3;
  sub_1C2CFD350();
  OUTLINED_FUNCTION_221();
  sub_1C2948F68();
  OUTLINED_FUNCTION_5();
  return OUTLINED_FUNCTION_147();
}

void sub_1C2A8ECB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(a1, a2, a3, a4, a5);
}

void HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_11_4();
  v10 = sub_1C2CFE10C();
  OUTLINED_FUNCTION_120_7(v10);
  v11 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_1EF792370;
  v11[5] = a1;
  v11[6] = a4;
  v11[7] = a5;
  OUTLINED_FUNCTION_76_2();
  OUTLINED_FUNCTION_38_0();
  sub_1C2948F68();
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A8ED78()
{
  HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)();
}

void HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_169_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v1, v2);
  v3 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v3);
  v4 = OUTLINED_FUNCTION_5_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_54_0(v4);
  v6 = OUTLINED_FUNCTION_10_2(v5, (uint64_t)&unk_1EF792380);
  if ((_DWORD)v0 == 1)
  {
    OUTLINED_FUNCTION_60_0(v6, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (v0)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      OUTLINED_FUNCTION_91_0();
    }
  }
  v7 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_88(v7, (uint64_t)&unk_1EF792388);
  if (v8)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A8EE84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2A18224(a1);
}

void sub_1C2A8EED4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v4);
  v5 = OUTLINED_FUNCTION_5_2();
  v6 = (_QWORD *)OUTLINED_FUNCTION_54_0(v5);
  v7 = OUTLINED_FUNCTION_10_2(v6, (uint64_t)&unk_1EF792CF0);
  if ((_DWORD)a1 == 1)
  {
    OUTLINED_FUNCTION_60_0(v7, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (a1)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      OUTLINED_FUNCTION_91_0();
    }
  }
  v8 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_88(v8, (uint64_t)&unk_1EF78EBB8);
  if (v9)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A8EFD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B70B78(a1);
}

uint64_t sub_1C2A8F020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C28BCB84;
  return sub_1C2B701C0(a1, a2, a3, a4);
}

uint64_t sub_1C2A8F090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B70BF0(a1, a2);
}

uint64_t sub_1C2A8F0E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B710A4(a1);
}

void HandleIntentFlowStrategyAsync.authenticationPolicy.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 32) = &type metadata for FeatureFlagDefinitions.Core;
  *(_QWORD *)(a1 + 40) = &off_1E7C83240;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t sub_1C2A8F158()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)();
}

uint64_t HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18224(v2);
}

uint64_t sub_1C2A8F1EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  v3[12] = a1;
  return swift_task_switch();
}

uint64_t HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A8F25C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)(v0 + 7));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v1 = qword_1ED7A4228;
  v0[5] = type metadata accessor for RefreshableDeviceState();
  v0[6] = &protocol witness table for RefreshableDeviceState;
  v0[2] = v1;
  OUTLINED_FUNCTION_38_0();
  v2 = (_QWORD *)swift_task_alloc();
  v0[13] = v2;
  *v2 = v0;
  v2[1] = sub_1C2A8F328;
  return sub_1C2A97778(v0[12], (uint64_t)(v0 + 2), 0, 0);
}

uint64_t sub_1C2A8F328()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_87_0();
  v3 = v2 + 16;
  v4 = *v1;
  *v5 = v4;
  *(_QWORD *)(v2 + 112) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v3);
  if (!v0)
    return OUTLINED_FUNCTION_81(*(uint64_t (**)(void))(v4 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A8F384(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A8F3F4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:)();
}

uint64_t HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2B70B78(v2);
}

uint64_t sub_1C2A8F488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2);
}

uint64_t HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_86(v4);
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  OUTLINED_FUNCTION_127_1();
  return sub_1C2B701C0(v6, v7, v8, v3);
}

uint64_t sub_1C2A8F544(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2);
}

uint64_t HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *a2;
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_86(v5);
  *v6 = v2;
  v6[1] = sub_1C28BCB84;
  return sub_1C2B70BF0(a1, v4);
}

uint64_t sub_1C2A8F5F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28E1BA0;
  return HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:)();
}

uint64_t HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2B710A4(v2);
}

void sub_1C2A8F684()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 24))(*(_QWORD *)(*(_QWORD *)v0 + 80));
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A8F6B0(unint64_t a1, __n128 *a2)
{
  OUTLINED_FUNCTION_57_7(a1, a2);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A8F6C8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_26_0(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_77(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2931B0C);
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_42_20();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2A8F734(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a5;
  v8 = *a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, _QWORD))(*(_QWORD *)(v8 + 88)
                                                                                               + 32))(a3, a4, v17, sub_1C2A926B0, v14, *(_QWORD *)(v8 + 80));
  return swift_release();
}

uint64_t sub_1C2A8F848(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v2;
  *(_OWORD *)(v3 + 200) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 216) = *(_QWORD *)(a2 + 16);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A8F868()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = OUTLINED_FUNCTION_65();
  *(_QWORD *)(v0 + 224) = v1;
  v2 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927E8);
  *v3 = v0;
  v3[1] = sub_1C2A8F90C;
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_36_2();
  return sub_1C2CFEA24();
}

uint64_t sub_1C2A8F90C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 240) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A8F960()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD **)(v0 + 184);
  sub_1C28B9A48(v0 + 16, v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 112) = v2;
  *(_QWORD *)(v0 + 120) = v3;
  v4 = (__int128 *)OUTLINED_FUNCTION_136();
  sub_1C28B99EC(v4, v5);
  *(_QWORD *)(v0 + 168) = v2;
  *(_QWORD *)(v0 + 176) = v3;
  v1[8] = 0;
  v1[9] = 0;
  sub_1C28B99EC((__int128 *)(v0 + 72), (uint64_t)v1);
  v1[5] = v2;
  v1[6] = v3;
  v1[7] = 0;
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return v6();
}

uint64_t sub_1C2A8F9E8()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A8FA14(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a5;
  v8 = *a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, _QWORD))(*(_QWORD *)(v8 + 88) + 40))(a3, a4, v17, sub_1C2A9272C, v14, *(_QWORD *)(v8 + 80));
  return swift_release();
}

uint64_t sub_1C2A8FB28(uint64_t a1)
{
  __int128 v2;
  char v3;

  sub_1C28BA870(a1, (uint64_t)&v2, &qword_1EF78A0E8);
  if ((v3 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
    return sub_1C2CFE0C4();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
    return sub_1C2CFE0D0();
  }
}

uint64_t sub_1C2A8FBB8(unint64_t a1, __n128 *a2)
{
  OUTLINED_FUNCTION_57_7(a1, a2);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A8FBD0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_26_0(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_77(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2931B0C);
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_42_20();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2A8FC3C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a5;
  v8 = *a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, _QWORD))(*(_QWORD *)(v8 + 88)
                                                                                               + 64))(a3, a4, v17, sub_1C2A926B0, v14, *(_QWORD *)(v8 + 80));
  return swift_release();
}

uint64_t sub_1C2A8FD50(unint64_t a1, __n128 *a2)
{
  OUTLINED_FUNCTION_57_7(a1, a2);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A8FD68()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_26_0(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_77(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2931B0C);
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2A8FDE4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a5;
  v8 = *a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, _QWORD))(*(_QWORD *)(v8 + 88)
                                                                                               + 72))(a3, a4, v17, sub_1C2A926B0, v14, *(_QWORD *)(v8 + 80));
  return swift_release();
}

uint64_t sub_1C2A8FEF8(unint64_t a1, __n128 *a2)
{
  OUTLINED_FUNCTION_57_7(a1, a2);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A8FF10()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_26_0(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_77(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C29EF8B8);
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2A8FF8C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a5;
  v8 = *a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, _QWORD))(*(_QWORD *)(v8 + 88)
                                                                                               + 80))(a3, a4, v17, sub_1C2A926B0, v14, *(_QWORD *)(v8 + 80));
  return swift_release();
}

uint64_t sub_1C2A900A0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927E0);
  return sub_1C2CFE0D0();
}

void sub_1C2A900E0()
{
  sub_1C2A8F684();
}

uint64_t sub_1C2A90100(unint64_t a1, __n128 *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2A8F6B0(a1, a2);
}

uint64_t sub_1C2A90164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2A8F848(a1, a2);
}

uint64_t sub_1C2A901C8(unint64_t a1, __n128 *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2A8FBB8(a1, a2);
}

uint64_t sub_1C2A9022C(unint64_t a1, __n128 *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2A8FD50(a1, a2);
}

uint64_t sub_1C2A90290(unint64_t a1, __n128 *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2A8FEF8(a1, a2);
}

void NoOutputHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *))
{
  _QWORD v5[5];
  char v6;

  v5[3] = type metadata accessor for EmptyOutput();
  v5[4] = &protocol witness table for EmptyOutput;
  v5[0] = OUTLINED_FUNCTION_5_2();
  v6 = 0;
  a4(v5);
  sub_1C28B9D6C((uint64_t)v5, &qword_1ED7A61D0);
}

uint64_t NoOutputHandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A90374()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(uint64_t **)(v0 + 16);
  v2 = type metadata accessor for EmptyOutput();
  v3 = OUTLINED_FUNCTION_5_2();
  v1[3] = v2;
  v1[4] = (uint64_t)&protocol witness table for EmptyOutput;
  *v1 = v3;
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_81(v4);
}

void sub_1C2A903BC()
{
  _QWORD *v0;

  MEMORY[0x1C3BC9CD4](&unk_1C2D0CAE0, *v0);
  Flow.deferToExecuteAsync(_:)();
}

uint64_t sub_1C2A9041C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2CFE0E8();
  v6 = sub_1C2CFE10C();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  v8 = a1;
  sub_1C2948F68();
  return swift_release();
}

uint64_t sub_1C2A904DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[15] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
  v4[16] = swift_task_alloc();
  v5 = sub_1C2CFBCAC();
  v4[17] = v5;
  v4[18] = *(_QWORD *)(v5 - 8);
  v4[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2A90560()
{
  uint64_t v0;

  if (qword_1ED7A6378 != -1)
    swift_once();
  *(_QWORD *)(v0 + 160) = qword_1ED7A7110;
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A905BC()
{
  uint64_t v0;

  sub_1C290236C(v0 + 56);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A905F0()
{
  void *v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  id v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  _WORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD, _QWORD, uint64_t, uint64_t);
  _QWORD *v32;
  NSObject *log;
  uint64_t (*v34)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v35;

  v2 = (__int128 *)(v1 + 56);
  if (*(_QWORD *)(v1 + 80))
  {
    sub_1C28B99EC(v2, v1 + 16);
    sub_1C2CFCF84();
    if (!sub_1C2CFCF48()
      || (sub_1C2CFCF24(), OUTLINED_FUNCTION_36_0(), v3 = sub_1C2CFD548(), v5 = v4, OUTLINED_FUNCTION_147(), !v5))
    {
      swift_bridgeObjectRelease();
      v3 = 0;
      v5 = 0xE000000000000000;
    }
    if (qword_1ED7AA040 != -1)
      swift_once();
    v6 = *(void **)(v1 + 120);
    v7 = OUTLINED_FUNCTION_118();
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED7AA1B0);
    *(_QWORD *)(v1 + 168) = v8;
    v9 = v6;
    swift_bridgeObjectRetain_n();
    v10 = v9;
    sub_1C2CFD86C();
    v11 = OUTLINED_FUNCTION_30();
    v12 = OUTLINED_FUNCTION_48_1(v8);
    v13 = *(void **)(v1 + 120);
    if (v12)
    {
      v14 = OUTLINED_FUNCTION_6_0();
      v35 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v14 = 136315394;
      log = v8;
      v15 = v3;
      v16 = objc_msgSend(v13, sel_typeName);
      v17 = sub_1C2CFDD58();
      v19 = v18;

      *(_QWORD *)(v1 + 104) = sub_1C28BB120(v17, v19, &v35);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();

      *(_WORD *)(v14 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v1 + 112) = sub_1C28BB120(v15, v5, &v35);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C28B6000, log, v11, "Submitting intent: %s for requestId: %s to Suggestions", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    swift_bridgeObjectRelease_n();
    v27 = *(_QWORD *)(v1 + 128);
    v26 = *(_QWORD *)(v1 + 136);
    v28 = *(_QWORD *)(v1 + 40);
    v29 = *(_QWORD *)(v1 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), v28);
    sub_1C2CFBC64();
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v27, 1, v26) == 1)
    {
      v30 = *(_QWORD *)(v1 + 128);
      sub_1C2CFBCA0();
      sub_1C28B9D6C(v30, &qword_1ED7A9228);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 144) + 32))(*(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
    }
    OUTLINED_FUNCTION_201_1(*(_QWORD *)(v29 + 48));
    v34 = v31;
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 176) = v32;
    *v32 = v1;
    v32[1] = sub_1C2A909D0;
    return v34(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 152), v28, v29);
  }
  else
  {
    sub_1C28B9D6C((uint64_t)v2, &qword_1ED7A70F0);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v20 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v20, (uint64_t)qword_1ED7AA1B0);
    v21 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v21))
    {
      v22 = (_WORD *)OUTLINED_FUNCTION_23_2();
      OUTLINED_FUNCTION_91(v22);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v23, v24, "Failed to intialize Suggestions broker");
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_121_4();
    OUTLINED_FUNCTION_38();
    return OUTLINED_FUNCTION_6_4(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2A909D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_87_0();
  v3 = *(_QWORD *)(v2 + 144);
  *v4 = *v1;
  *(_QWORD *)(v2 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_42_1(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_36_2();
  return swift_task_switch();
}

uint64_t sub_1C2A90A40()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_121_4();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A90A70()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(NSObject **)(v0 + 168);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_195();
  sub_1C2CFD86C();
  v2 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_48_1(v1))
  {
    v3 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v4 = (_QWORD *)OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v3 = 138412290;
    OUTLINED_FUNCTION_195();
    v5 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v5;
    OUTLINED_FUNCTION_153_2();
    *v4 = v5;
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v1, v2, "Error when submitting engagement for suggestions: %@", v3);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79AEF0);
    OUTLINED_FUNCTION_100_14();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  OUTLINED_FUNCTION_121_4();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

void (*sub_1C2A90BAC())(void *a1, char a2)
{
  sub_1C2CFD350();
  return sub_1C2A92364;
}

void sub_1C2A90BDC(void *a1, char a2)
{
  sub_1C2A90C00(a1, a2 & 1);
}

void sub_1C2A90C00(void *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  char v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  int64x2_t v49;
  char v50;

  v3 = *v2;
  v4 = (uint64_t)v2 + *(_QWORD *)(*v2 + 144);
  if (*(_BYTE *)(v4 + 24) != 5 || *(_QWORD *)(v4 + 8) | *(_QWORD *)(v4 + 16) | *(_QWORD *)v4)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v5 = sub_1C2CFD878();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED7AA1B0);
    swift_retain_n();
    v6 = sub_1C2CFD86C();
    v7 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v47 = v9;
      *(_DWORD *)v8 = 136315138;
      v10 = *(void **)(v4 + 8);
      v11 = *(void **)(v4 + 16);
      v12 = *(_BYTE *)(v4 + 24);
      v48 = *(id *)v4;
      v49.i64[0] = (uint64_t)v10;
      v49.i64[1] = (uint64_t)v11;
      v50 = v12;
      sub_1C2920D8C(v48, v10, v11, v12);
      v13 = *(_QWORD *)(v3 + 80);
      v14 = *(_QWORD *)(v3 + 88);
      v16 = type metadata accessor for SiriKitHandleIntentFlow.State(0, v13, v14, v15);
      MEMORY[0x1C3BC9CD4](&unk_1C2D0CAA8, v16);
      v17 = sub_1C2CFDDB8();
      v48 = (id)sub_1C28BB120(v17, v18, &v47);
      sub_1C2CFE4D8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C28B6000, v6, v7, "HandleIntentFlow called in an unexpected state: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v9, -1, -1);
      MEMORY[0x1C3BC9DE8](v8, -1, -1);

    }
    else
    {

      swift_release_n();
      v13 = *(_QWORD *)(v3 + 80);
      v14 = *(_QWORD *)(v3 + 88);
    }
    v20 = *(id *)v4;
    v21 = *(void **)(v4 + 8);
    v22 = *(void **)(v4 + 16);
    v23 = *(_BYTE *)(v4 + 24);
    v24 = type metadata accessor for SiriKitHandleIntentFlow.HandleIntentFlowError(0, v13, v14, v19);
    MEMORY[0x1C3BC9CD4](&unk_1C2D0CBC0, v24);
    v25 = (void *)swift_allocError();
    *(_QWORD *)v26 = v20;
    *(_QWORD *)(v26 + 8) = v21;
    *(_QWORD *)(v26 + 16) = v22;
    *(_BYTE *)(v26 + 24) = v23;
    v49 = 0uLL;
    v48 = v25;
    v50 = 4;
    sub_1C2920D8C(v20, v21, v22, v23);
LABEL_9:
    sub_1C291B018((uint64_t)&v48);
    return;
  }
  if ((a2 & 1) == 0)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v27 = sub_1C2CFD878();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED7AA1B0);
    v28 = sub_1C2CFD86C();
    v29 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1C28B6000, v28, v29, "Handoff flow completed successfully. Moving to handled error state.", v30, 2u);
      MEMORY[0x1C3BC9DE8](v30, -1, -1);
    }

    v32 = type metadata accessor for SiriKitHandleIntentFlow.HandleIntentFlowError(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v31);
    MEMORY[0x1C3BC9CD4](&unk_1C2D0CBC0, v32);
    v33 = (void *)swift_allocError();
    *(_QWORD *)(v34 + 8) = 0;
    *(_QWORD *)(v34 + 16) = 0;
    *(_QWORD *)v34 = 0;
    *(_BYTE *)(v34 + 24) = -64;
    v48 = v33;
    v49 = vdupq_n_s64(1uLL);
    v50 = 3;
    goto LABEL_9;
  }
  v36 = a1;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v37 = sub_1C2CFD878();
  __swift_project_value_buffer(v37, (uint64_t)qword_1ED7AA1B0);
  v38 = a1;
  v39 = a1;
  v40 = sub_1C2CFD86C();
  v41 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = (void *)swift_slowAlloc();
    v48 = v43;
    *(_DWORD *)v42 = 136315138;
    swift_getErrorValue();
    v44 = sub_1C2CFEA78();
    v47 = sub_1C28BB120(v44, v45, (uint64_t *)&v48);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    sub_1C2987570(a1, 1);
    sub_1C2987570(a1, 1);
    _os_log_impl(&dword_1C28B6000, v40, v41, "Handoff flow did not exit successfully: %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v43, -1, -1);
    MEMORY[0x1C3BC9DE8](v42, -1, -1);
  }
  else
  {
    sub_1C2987570(a1, 1);
    sub_1C2987570(a1, 1);
  }

  v49 = 0uLL;
  v48 = a1;
  v50 = 4;
  v46 = a1;
  sub_1C291B018((uint64_t)&v48);
  sub_1C2987570(a1, 1);
}

_QWORD *sub_1C2A91188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, char *, uint64_t);
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  void *v24;
  uint64_t DynamicType;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;

  v4 = v3;
  v33 = a3;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](a1, a2);
  v32 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)MEMORY[0x1E0C80A78](v8, v9);
  v12 = (char *)&v30 - v11;
  v13 = (void *)v10[1];
  v35 = *v10;
  v36 = v13;
  v37 = (void *)v10[2];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v31 = v3;
  v14((char *)&v30 - v11, v3, a2);
  v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = v15 + v7;
  v17 = swift_allocObject();
  v34 = v17;
  v18 = v33;
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = v18;
  v19 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v19(v17 + v15, v12, a2);
  v20 = v32;
  v14(v32, v4, a2);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = v18;
  v19(v21 + v15, v20, a2);
  v22 = (_QWORD *)(v21 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  v23 = v36;
  *v22 = v35;
  v22[1] = v23;
  v24 = v37;
  v22[2] = v37;
  DynamicType = swift_getDynamicType();
  type metadata accessor for AnyUnlockDeviceFlowStrategy();
  swift_allocObject();
  v26 = sub_1C2C715EC((uint64_t)sub_1C2A923B0, v34, (uint64_t)&unk_1EF792780, v21, DynamicType);
  sub_1C2CFD350();
  v27 = v23;
  v28 = v24;
  return v26;
}

void (*sub_1C2A91358())(void *a1, char a2)
{
  sub_1C2CFD350();
  return sub_1C2A92370;
}

void sub_1C2A91388(void *a1, char a2)
{
  sub_1C2A913AC(a1, a2 & 1);
}

void sub_1C2A913AC(void *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v24;
  void *v25;
  void *v26;
  char v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  char v35;

  v3 = *v2;
  v4 = (uint64_t)v2 + *(_QWORD *)(*v2 + 144);
  if (*(_BYTE *)(v4 + 24) == 1)
  {
    v5 = *(id *)v4;
    v6 = *(id *)(v4 + 8);
    v7 = *(void **)(v4 + 16);
    if ((a2 & 1) != 0)
    {
      v33 = 0;
      v34 = 0;
      v32 = a1;
      v35 = 4;
      sub_1C2920D8C(v5, v6, v7, 1);
      sub_1C2964BEC(a1, 1);
    }
    else
    {
      v32 = *(id *)v4;
      v33 = v6;
      v34 = 0;
      v35 = 2;
      sub_1C2920D8C(v5, v6, v7, 1);
      sub_1C2CFD350();
      v6 = v6;
    }
    sub_1C291B018((uint64_t)&v32);

    swift_release();
  }
  else
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v8 = sub_1C2CFD878();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED7AA1B0);
    swift_retain_n();
    v9 = sub_1C2CFD86C();
    v10 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_DWORD *)v11 = 136315138;
      v31 = v12;
      v13 = *(void **)(v4 + 8);
      v14 = *(void **)(v4 + 16);
      v15 = *(_BYTE *)(v4 + 24);
      v32 = *(id *)v4;
      v33 = v13;
      v34 = v14;
      v35 = v15;
      sub_1C2920D8C(v32, v13, v14, v15);
      v16 = *(_QWORD *)(v3 + 80);
      v17 = *(_QWORD *)(v3 + 88);
      v19 = type metadata accessor for SiriKitHandleIntentFlow.State(0, v16, v17, v18);
      MEMORY[0x1C3BC9CD4](&unk_1C2D0CAA8, v19);
      v20 = sub_1C2CFDDB8();
      v32 = (id)sub_1C28BB120(v20, v21, &v31);
      sub_1C2CFE4D8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C28B6000, v9, v10, "HandleIntentFlow called in an unexpected state: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v12, -1, -1);
      MEMORY[0x1C3BC9DE8](v11, -1, -1);

    }
    else
    {

      swift_release_n();
      v16 = *(_QWORD *)(v3 + 80);
      v17 = *(_QWORD *)(v3 + 88);
    }
    v24 = *(id *)v4;
    v25 = *(void **)(v4 + 8);
    v26 = *(void **)(v4 + 16);
    v27 = *(_BYTE *)(v4 + 24);
    v28 = type metadata accessor for SiriKitHandleIntentFlow.HandleIntentFlowError(0, v16, v17, v22);
    MEMORY[0x1C3BC9CD4](&unk_1C2D0CBC0, v28);
    v29 = (void *)swift_allocError();
    *(_QWORD *)v30 = v24;
    *(_QWORD *)(v30 + 8) = v25;
    *(_QWORD *)(v30 + 16) = v26;
    *(_BYTE *)(v30 + 24) = v27;
    v33 = 0;
    v34 = 0;
    v32 = v29;
    v35 = 4;
    sub_1C2920D8C(v24, v25, v26, v27);
    sub_1C291B018((uint64_t)&v32);
  }
}

uint64_t sub_1C2A916C4(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = v6;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 64) = type metadata accessor for SiriKitEventPayload(0);
  *(_QWORD *)(v7 + 72) = swift_task_alloc();
  *(_BYTE *)(v7 + 96) = *a2;
  *(_BYTE *)(v7 + 97) = *a6;
  return swift_task_switch();
}

uint64_t sub_1C2A91748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(void);
  char v17;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v1 + 24), *(_QWORD *)(*(_QWORD *)(v1 + 24) + 24));
  v2 = OUTLINED_FUNCTION_161_2();
  if ((sub_1C28E1AC0(v2) & 1) != 0)
  {
    v17 = *(_BYTE *)(v1 + 97);
    v3 = *(_BYTE *)(v1 + 96);
    v4 = *(_QWORD *)(v1 + 72);
    v5 = *(_QWORD *)(v1 + 48);
    v7 = *(_QWORD *)(v1 + 32);
    v6 = *(void **)(v1 + 40);
    OUTLINED_FUNCTION_129_4(*(_QWORD *)(v1 + 56));
    type metadata accessor for SiriKitEvent(0);
    *(_BYTE *)v4 = v3;
    v8 = objc_msgSend(v6, sel_typeName);
    v9 = sub_1C2CFDD58();
    v11 = v10;

    *(_QWORD *)(v4 + 8) = v9;
    *(_QWORD *)(v4 + 16) = v11;
    *(_QWORD *)(v4 + 24) = v7;
    bzero((void *)(v4 + 32), 0x88uLL);
    *(_QWORD *)(v1 + 16) = v5;
    sub_1C2CFD350();
    *(_QWORD *)(v4 + 168) = sub_1C2CFE988();
    *(_QWORD *)(v4 + 176) = v12;
    *(_BYTE *)(v4 + 184) = v17;
    swift_storeEnumTagMultiPayload();
    SiriKitEvent.__allocating_init(_:builder:)(v4, 0);
    *(_QWORD *)(v1 + 80) = v13;
    OUTLINED_FUNCTION_201_1(*(_QWORD *)(v0 + 16));
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 88) = v14;
    *v14 = v1;
    v14[1] = sub_1C2A918C4;
    OUTLINED_FUNCTION_127_1();
    return v15();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_23_0(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2A918C4()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v1);
  OUTLINED_FUNCTION_36_0();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A91900(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, _QWORD *, uint64_t, uint64_t);

  v7 = *a2;
  v5[2] = a3;
  v5[3] = a4;
  v5[4] = a5;
  v9 = *(_QWORD *)(v7 + 80);
  v8 = *(_QWORD *)(v7 + 88);
  v12 = (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))(**(int **)(v8 + 72) + *(_QWORD *)(v8 + 72));
  v10 = (_QWORD *)swift_task_alloc();
  v5[5] = v10;
  *v10 = v5;
  v10[1] = sub_1C291AFDC;
  return v12(a1, v5 + 2, v9, v8);
}

uint64_t sub_1C2A91998(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, _QWORD *, uint64_t, uint64_t);

  v7 = *a2;
  v5[2] = a3;
  v5[3] = a4;
  v5[4] = a5;
  v9 = *(_QWORD *)(v7 + 80);
  v8 = *(_QWORD *)(v7 + 88);
  v12 = (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))(**(int **)(v8 + 80) + *(_QWORD *)(v8 + 80));
  v10 = (_QWORD *)swift_task_alloc();
  v5[5] = v10;
  *v10 = v5;
  v10[1] = sub_1C291AFDC;
  return v12(a1, v5 + 2, v9, v8);
}

void sub_1C2A91A30()
{
  __asm { BR              X10 }
}

uint64_t sub_1C2A91A8C(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  char v4;
  uint64_t v6;
  uint64_t v7;

  sub_1C2920D8C(v1, v2, v3, v4);
  sub_1C2CFE670();
  sub_1C2CFDE54();
  v7 = type metadata accessor for SiriKitHandleIntentFlow.State(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v6);
  MEMORY[0x1C3BC9CD4](&unk_1C2D0CAA8, v7);
  sub_1C2CFE9C4();
  sub_1C2A9286C(v1, v2, v3, v4);
  return 0;
}

void sub_1C2A91C48()
{
  sub_1C2A903BC();
}

uint64_t sub_1C2A91C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, _QWORD *, uint64_t, uint64_t);

  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a5;
  v13 = (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))(**(int **)(a7 + 32) + *(_QWORD *)(a7 + 32));
  v11 = (_QWORD *)swift_task_alloc();
  v7[5] = v11;
  *v11 = v7;
  v11[1] = sub_1C29F0948;
  return v13(a1, v7 + 2, a6, a7);
}

uint64_t sub_1C2A91CFC(uint64_t a1)
{
  void *v1;
  _QWORD *v2;
  void *v4;
  id v5;
  id v6;

  v1 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    type metadata accessor for CommandFailure();
    sub_1C29CD564();
    swift_allocError();
    *v2 = v1;
    sub_1C2CFD350();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927D8);
    return sub_1C2CFE0C4();
  }
  else
  {
    v4 = *(void **)(a1 + 16);
    sub_1C2CFD350();
    v5 = v4;
    v6 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927D8);
    return sub_1C2CFE0D0();
  }
}

void sub_1C2A91DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for RCHDelegateToHandleIntentFlowStrategy(0, *(_QWORD *)(a6 + 80), *(_QWORD *)(a6 + 88), a4);
  HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A91DF4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2A91E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_86(v3);
  v5 = OUTLINED_FUNCTION_157_3(v4);
  return sub_1C2A8F020(v5, v6, v1, v2);
}

uint64_t sub_1C2A91E9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_86(v4);
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2A8F090(a1, v1);
}

uint64_t sub_1C2A91EF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  void *v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  v6 = (void *)OUTLINED_FUNCTION_136();
  sub_1C2920E18(v6, v7, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1C2A91F38(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C2920E18(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C2921668(v6, v7, v8);
  return a1;
}

uint64_t sub_1C2A91F8C(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C2921668(v4, v5, v6);
  return a1;
}

uint64_t sub_1C2A91FD0(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C2A92010(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 40))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 72))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 80))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.authenticationPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t type metadata accessor for SiriKitHandleIntentFlow.StrategyToHandoffSessionToCompanionStrategyAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SiriKitHandleIntentFlow.StrategyToHandoffSessionToCompanionStrategyAdapter);
}

void sub_1C2A9220C(uint64_t a1)
{
  sub_1C291B060(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1C2A92220(uint64_t a1, uint64_t *a2)
{
  sub_1C2A928D4(a1, a2);
}

void sub_1C2A9222C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1C2A92938(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1C2920D8C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C291B060);
}

void sub_1C2A92240(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A929AC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C291B060);
}

uint64_t sub_1C2A9224C(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 5)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C2A9228C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C2A922D4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 4u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1C2A922EC(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 5;
  if (a2 >= 5)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 5;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

uint64_t sub_1C2A92308(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&unk_1C2D0CAE0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SiriKitHandleIntentFlow.HandleIntentFlowError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SiriKitHandleIntentFlow.HandleIntentFlowError);
}

uint64_t sub_1C2A92340()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C2A92364(void *a1, char a2)
{
  sub_1C2A90BDC(a1, a2 & 1);
}

void sub_1C2A92370(void *a1, char a2)
{
  sub_1C2A91388(a1, a2 & 1);
}

uint64_t sub_1C2A9237C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_127_6();
  OUTLINED_FUNCTION_76(v0);
  OUTLINED_FUNCTION_127_1();
  return OUTLINED_FUNCTION_17();
}

void sub_1C2A923B0()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)(v0 + 24) + 24))();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A923E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_127_6();
  v3 = (v2 + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_76(v4);
  v5 = v0 + v3;
  swift_release();

  OUTLINED_FUNCTION_136();
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2A92440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_176();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = (uint64_t *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_86(v7);
  v9 = OUTLINED_FUNCTION_157_3(v8);
  return sub_1C2A91C68(v9, v10, v4, v5, v6, v1, v2);
}

uint64_t sub_1C2A924DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_71_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_165(v1);
  OUTLINED_FUNCTION_164_3();
  return sub_1C2A91998(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2A92528()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_71_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_165(v1);
  OUTLINED_FUNCTION_164_3();
  return sub_1C2A91900(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2A92574()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C2A925A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_86(v3);
  *v4 = v1;
  v4[1] = sub_1C28E1BA0;
  OUTLINED_FUNCTION_122_5();
  return sub_1C2A904DC(v5, v6, v7, v2);
}

uint64_t sub_1C2A92604(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C291BE20(a1, v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C2A92614()
{
  return objectdestroy_143Tm(&qword_1EF7927D8);
}

uint64_t sub_1C2A92620()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927D8);
  v0 = OUTLINED_FUNCTION_108();
  return sub_1C2A91CFC(v0);
}

uint64_t sub_1C2A9264C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C29321B8(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1C2A92658()
{
  return objectdestroy_143Tm(&qword_1EF7927E0);
}

uint64_t sub_1C2A92664()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927E0);
  OUTLINED_FUNCTION_108();
  return sub_1C2A900A0();
}

void sub_1C2A92690(uint64_t a1)
{
  uint64_t v1;

  sub_1C2B9AE10(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1C2A92698(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A8FF8C(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C2A926A4()
{
  return objectdestroy_143Tm(&qword_1EF78A0D8);
}

uint64_t sub_1C2A926B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A8FDE4(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C2A926C0()
{
  return objectdestroy_143Tm(&qword_1EF78A0D8);
}

uint64_t sub_1C2A926CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A8FC3C(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C2A926D8()
{
  return objectdestroy_143Tm(&qword_1EF78A0D8);
}

uint64_t sub_1C2A926E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C293280C(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C2A926F0()
{
  return objectdestroy_143Tm(&qword_1EF78A0D8);
}

uint64_t sub_1C2A926FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2931BD0(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C2A92708()
{
  return objectdestroy_143Tm(&qword_1EF78A0D8);
}

uint64_t sub_1C2A92714(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A8FA14(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C2A92720()
{
  return objectdestroy_143Tm(&qword_1EF7927F0);
}

uint64_t sub_1C2A9272C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
  v0 = OUTLINED_FUNCTION_108();
  return sub_1C2A8FB28(v0);
}

uint64_t sub_1C2A92758(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A8F734(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C2A92764()
{
  return objectdestroy_143Tm(&qword_1EF78A0D8);
}

uint64_t objectdestroy_143Tm(uint64_t *a1)
{
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_76(*(_QWORD *)(v1 - 8));
  OUTLINED_FUNCTION_127_1();
  return OUTLINED_FUNCTION_17();
}

void sub_1C2A927BC()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v0 = OUTLINED_FUNCTION_108();
  sub_1C298A598(v0);
  OUTLINED_FUNCTION_1_0();
}

id sub_1C2A927EC(id result, void *a2, void *a3, unsigned __int8 a4)
{
  id v5;
  id v6;

  if (a4 >> 6 == 1)
  {
    v6 = result;
    sub_1C2CFD350();
    v5 = a3;
    return v6;
  }
  else if (!(a4 >> 6))
  {
    return sub_1C2920D8C(result, a2, a3, a4);
  }
  return result;
}

void sub_1C2A92858(uint64_t a1)
{
  sub_1C2A9286C(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1C2A9286C(void *a1, void *a2, void *a3, unsigned __int8 a4)
{
  if (a4 >> 6 == 1)
  {

    swift_release();
  }
  else if (!(a4 >> 6))
  {
    sub_1C291B060(a1, a2, a3, a4);
  }
}

void sub_1C2A928C8(uint64_t a1, uint64_t *a2)
{
  sub_1C2A928D4(a1, a2);
}

void sub_1C2A928D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void (*v8)(uint64_t);

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  v7 = OUTLINED_FUNCTION_136();
  v8(v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A92924(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1C2A92938(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1C2A927EC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2A9286C);
}

void sub_1C2A92938(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v8, v9, v10);
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  v14 = *((unsigned __int8 *)a1 + 24);
  *((_BYTE *)a1 + 24) = v10;
  a5(v11, v12, v13, v14);
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2A929A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A929AC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2A9286C);
}

void sub_1C2A929AC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *a1;
  v10 = a1[1];
  v9 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  v11 = *((unsigned __int8 *)a1 + 24);
  *((_BYTE *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A929F8(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x1D && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 28;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x1F;
      if (v2 >= 0x1C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1C2A92A44(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1C)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 29;
    if (a3 >= 0x1D)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x1D)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 8 * (((-a2 >> 2) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1C2A92AA0(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 24) >> 6;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_1C2A92ABC(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_1C2A92ACC(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 3)
  {
    v2 = *(_BYTE *)(result + 24) & 7 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 3;
    v2 = -64;
  }
  *(_BYTE *)(result + 24) = v2;
  return result;
}

void sub_1C2A92AF8()
{
  JUMPOUT(0x1C3BC9CD4);
}

uint64_t OUTLINED_FUNCTION_4_51(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_10_52(void *a1@<X8>)
{

}

void OUTLINED_FUNCTION_40_20()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_41_21(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  return sub_1C2A916C4(a1, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_45_18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_54_22(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 200) + 8))(a1, *(_QWORD *)(v1 + 192));
}

uint64_t OUTLINED_FUNCTION_56_17()
{
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_87_11()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_89_9()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_90_9()
{
  return swift_task_dealloc();
}

id OUTLINED_FUNCTION_98_8()
{
  uint64_t v0;

  return *(id *)(v0 + 336);
}

uint64_t OUTLINED_FUNCTION_100_14()
{
  return swift_arrayDestroy();
}

__n128 OUTLINED_FUNCTION_103_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __n128 a15)
{
  uint64_t v15;
  uint64_t v16;
  __n128 result;

  *(_QWORD *)(a1 + 16) = v16;
  result = a15;
  *(__n128 *)(a1 + 24) = a15;
  *(_QWORD *)(a1 + 40) = v15;
  return result;
}

void OUTLINED_FUNCTION_107_10()
{
  static ExecuteResponse.complete()();
}

void OUTLINED_FUNCTION_108_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_1C291B018((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_120_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_121_4()
{
  return swift_task_dealloc();
}

_QWORD *OUTLINED_FUNCTION_129_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + v1), *(_QWORD *)(a1 + v1 + 24));
}

uint64_t OUTLINED_FUNCTION_139_5(uint64_t a1, __n128 a2)
{
  uint64_t v2;

  *(__n128 *)(a1 + 24) = a2;
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1C2CFD7F4();
}

uint64_t OUTLINED_FUNCTION_146_4(_WORD *a1)
{
  *a1 = 0;
  return sub_1C2CFD7E8();
}

uint64_t OUTLINED_FUNCTION_153_2()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_155_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_157_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_158_3@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return type metadata accessor for SiriKitHandleIntentFlow.HandleIntentFlowError(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a1);
}

uint64_t OUTLINED_FUNCTION_159_2()
{
  return sub_1C2CFE448();
}

uint64_t OUTLINED_FUNCTION_161_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_162_2(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_1C291B018((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_167_3()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_168_3()
{
  uint64_t v0;

  return v0;
}

id HandleIntentFlowFrameResult.intent.getter()
{
  id *v0;

  return *v0;
}

id HandleIntentFlowFrameResult.intentResponse.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t HandleIntentFlowFrame.namespace.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1C2A92E14()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

void sub_1C2A92E1C()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 56);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A92E3C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 56);
  *(_QWORD *)(v1 + 56) = a1;

}

void sub_1C2A92E48()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 64);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A92E6C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 64);
  *(_QWORD *)(v1 + 64) = a1;

}

uint64_t HandleIntentFlowFrame.__allocating_init(delegate:app:intent:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_5_2();
  HandleIntentFlowFrame.init(delegate:app:intent:)(a1, a2, a3);
  return v6;
}

_QWORD *HandleIntentFlowFrame.init(delegate:app:intent:)(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  void *v6;
  id v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;

  v4 = v3;
  v4[2] = 0xD000000000000012;
  v4[3] = 0x80000001C2D310B0;
  v4[7] = 0;
  v4[8] = 0;
  v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  v6 = off_1ED7A5DA8;
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_52_4();
  v7 = a3;
  if (v6 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)&v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  v8 = qword_1ED7A4228;
  v11 = type metadata accessor for RefreshableDeviceState();
  v12 = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)&v10 = v8;
  OUTLINED_FUNCTION_38_0();
  swift_unknownObjectRelease();
  swift_release();

  sub_1C28B99EC(&v10, (uint64_t)(v4 + 9));
  return v4;
}

uint64_t HandleIntentFlowFrame.__allocating_init(delegate:app:intent:deviceState:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_5_2();
  HandleIntentFlowFrame.init(delegate:app:intent:deviceState:)(a1, a2, a3, a4);
  return v8;
}

_QWORD *HandleIntentFlowFrame.init(delegate:app:intent:deviceState:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  _QWORD *v4;

  v4[2] = 0xD000000000000012;
  v4[3] = 0x80000001C2D310B0;
  v4[7] = 0;
  v4[8] = 0;
  v4[4] = a1;
  v4[5] = a2;
  v4[6] = a3;
  sub_1C28B99EC(a4, (uint64_t)(v4 + 9));
  return v4;
}

void sub_1C2A93070(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79DF70);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_79_10();
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2B0();
  sub_1C2CFD7AC();
  v7 = *MEMORY[0x1E0D22330];
  v8 = sub_1C2CFBE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v3, v7, v8);
  swift_storeEnumTagMultiPayload();
  a3(v3);
  sub_1C28B9D6C(v3, (uint64_t *)&unk_1EF79DF70);
}

void sub_1C2A9317C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  char v19;
  _QWORD *v20;
  void (*v21)(id, _QWORD, uint64_t *, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;

  v5 = v3;
  v6 = *v3;
  v7 = OUTLINED_FUNCTION_160();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_79_10();
  if (qword_1ED7AA038 != -1)
    swift_once();
  v9 = (id)qword_1ED7AA1A8;
  sub_1C2CFD7DC();
  sub_1C2CFE370();
  OUTLINED_FUNCTION_15_38();
  v10 = v3[5];
  v11 = sub_1C2A92E14();
  v14 = v6 + 80;
  v13 = *(_QWORD *)(v6 + 80);
  v12 = *(_QWORD *)(v14 + 8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, id, uint64_t, uint64_t))(v12 + 104))(&v37, v10, v11, v13, v12);

  v15 = v37;
  v16 = v39;
  v28 = v39;
  v29 = v37;
  v24 = v40;
  v25 = v38;
  v17 = v41;
  v27 = v41;
  v36 = v42;
  sub_1C2CFE364();
  OUTLINED_FUNCTION_15_38();
  v30 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v26 = sub_1C2A92E14();
  v18 = sub_1C2A92E14();
  v19 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v12 + 296))(v18, v13, v12);

  v37 = v15;
  v38 = v25;
  v39 = v16;
  v40 = v24;
  v41 = v17;
  v42 = v36;
  v20 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v20[2] = v5;
  v20[3] = a2;
  v20[4] = a3;
  v21 = *(void (**)(id, _QWORD, uint64_t *, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t, uint64_t))(v23 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1C2CFD350();
  OUTLINED_FUNCTION_52_4();
  v21(v26, v19 & 1, &v37, sub_1C2A94CE4, v20, AssociatedTypeWitness, v30, v23);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v4, v35);
  sub_1C28F4F6C(v29, v25, v28, v24, v27);
  OUTLINED_FUNCTION_1();
}

void sub_1C2A933D0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *))
{
  void *v3;
  void *v4;
  char v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  void *v9;
  uint64_t AssociatedTypeWitness;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char v38;
  uint64_t v39;
  unint64_t v40;

  v3 = *(void **)a1;
  v34 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  if (qword_1ED7AA038 != -1)
    swift_once();
  v6 = qword_1ED7AA1A8;
  v7 = sub_1C2CFE2A4();
  if (!os_log_type_enabled(v6, v7))
  {
    v9 = v4;
    sub_1C2CFE298();
    sub_1C2CFD7AC();
    if ((v5 & 1) == 0)
      goto LABEL_5;
LABEL_9:
    sub_1C2CFD350();
    sub_1C2CFE2B0();
    sub_1C2CFD7AC();
    type metadata accessor for CommandFailure();
    sub_1C29CD564();
    v25 = swift_allocError();
    *v26 = v3;
    sub_1C2CFD350();
    sub_1C2A92E6C(v25);
    v27 = swift_allocError();
    *v28 = v3;
    v35 = v27;
    v36 = 0;
    LOBYTE(v37) = 1;
    sub_1C2CFD350();
    a3(&v35);
    sub_1C291E164(v3, v34, v9, 1);
    v29 = (void *)v27;
    goto LABEL_12;
  }
  sub_1C2CFE2A4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C2D002E0;
  v39 = 0;
  v40 = 0xE000000000000000;
  v35 = (uint64_t)v3;
  v36 = v34;
  v9 = v4;
  v37 = v4;
  v38 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF792980);
  sub_1C2CFE7C0();
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1C28BFD30();
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = 0xE000000000000000;
  sub_1C2CFD7AC();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    goto LABEL_9;
LABEL_5:
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = v9;
  v12 = v9;
  v13 = v3;
  sub_1C2CFD350();
  v14 = v12;
  v15 = v13;
  sub_1C28F3FF0(AssociatedTypeWitness, AssociatedTypeWitness);
  if (v16)
  {
    v17 = v16;
    v18 = swift_getAssociatedTypeWitness();
    sub_1C2916430(v18, v18);
    if (v19)
    {
      v20 = (uint64_t)v19;
      v21 = v19;
      v22 = v17;
      sub_1C2A92E3C(v20);
      v35 = (uint64_t)v17;
      v36 = v20;
      LOBYTE(v37) = 0;
      v23 = v22;
      v24 = v21;
      a3(&v35);

      sub_1C291E164(v3, v34, v11, 0);
      return;
    }

    v15 = v14;
    v14 = v17;
  }

  type metadata accessor for CommandFailure();
  swift_allocObject();
  v30 = CommandFailure.init(errorCode:reason:)(-1, 0xD00000000000002ALL, 0x80000001C2D31580);
  sub_1C29CD564();
  v31 = swift_allocError();
  *v32 = v30;
  v35 = v31;
  v36 = 0;
  LOBYTE(v37) = 1;
  a3(&v35);
  sub_1C291E164(v3, v34, v11, 0);
  v29 = (void *)v31;
LABEL_12:

}

void sub_1C2A93810(_QWORD *a1, uint64_t a2, void (*a3)(char *), void (*a4)(char *))
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(id, void *, _QWORD *, uint64_t, uint64_t);
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (**v38)(char *);
  void (*v39)(char *);
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void *v46;
  _QWORD *v47;
  void (*v48)(char *);
  void (*v49)(char *);
  uint64_t v50;
  uint64_t v51;

  v5 = v4;
  v48 = a3;
  v49 = a4;
  v47 = a1;
  v7 = *v4;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79DF80);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_160();
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  v13 = *(_QWORD *)(v50 + 64);
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v45 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v40 - v17;
  v42 = *(void **)a2;
  v46 = *(void **)(a2 + 8);
  if (qword_1ED7AA038 != -1)
    swift_once();
  v19 = (id)qword_1ED7AA1A8;
  sub_1C2CFD7DC();
  v20 = v4[4];
  v21 = sub_1C2A92E14();
  sub_1C2A92E1C();
  v23 = v22;
  v24 = v18;
  v27 = v7 + 80;
  v26 = *(_QWORD *)(v7 + 80);
  v25 = *(_QWORD *)(v27 + 8);
  v28 = *(uint64_t (**)(id, void *, _QWORD *, uint64_t, uint64_t))(v25 + 288);
  v43 = v20;
  v29 = v28(v21, v22, v4 + 9, v26, v25);

  if ((v29 & 1) != 0)
  {
    type metadata accessor for SiriKitFlowFrameInput();
    sub_1C2CFBE80();
    swift_storeEnumTagMultiPayload();
    v48(v11);
    sub_1C28B9D6C((uint64_t)v11, &qword_1EF79DF80);
    v30 = v24;
    v31 = v50;
    v32 = v51;
  }
  else
  {
    sub_1C2CFE370();
    sub_1C2CFD7D0();
    v44 = v5[5];
    v30 = v24;
    v31 = v50;
    v33 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
    v34 = v45;
    v41 = v26;
    v32 = v51;
    v33(v45, v30, v51);
    v35 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v36 = (v13 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v41;
    *(_QWORD *)(v37 + 24) = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v37 + v35, v34, v32);
    *(_QWORD *)(v37 + v36) = v5;
    v38 = (void (**)(char *))(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8));
    v39 = v49;
    *v38 = v48;
    v38[1] = v39;
    sub_1C2CFD350();
    OUTLINED_FUNCTION_52_4();
    sub_1C2A93E74(v47, v43, v42, v46, v44, (uint64_t)sub_1C2A94D7C, v37);
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
  OUTLINED_FUNCTION_1();
}

void sub_1C2A93AC4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _DWORD v24[4];
  void (*v25)(uint64_t *);
  uint64_t v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79DF80);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (uint64_t *)((char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C2CFE364();
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFD7D0();
  if (a1)
  {
    swift_getErrorValue();
    v26 = v6;
    v10 = a1;
    v11 = sub_1C2CFEA78();
    v13 = v12;
    type metadata accessor for CommandFailure();
    swift_allocObject();
    v14 = CommandFailure.init(errorCode:reason:)(-1, v11, v13);
    sub_1C29CD564();
    v15 = swift_allocError();
    *v16 = v14;
    sub_1C2CFD350();
    sub_1C2A92E6C(v15);
    v24[3] = sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v17 = swift_allocObject();
    v25 = a4;
    v18 = (_QWORD *)v17;
    *(_OWORD *)(v17 + 16) = xmmword_1C2D002E0;
    swift_getErrorValue();
    v19 = sub_1C2CFEA78();
    v21 = v20;
    v18[7] = MEMORY[0x1E0DEA968];
    v18[8] = sub_1C28BFD30();
    v18[4] = v19;
    v18[5] = v21;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    v22 = swift_allocError();
    *v23 = v14;
    *v9 = v22;
    swift_storeEnumTagMultiPayload();
    sub_1C2CFD350();
    v25(v9);

    swift_release();
  }
  else
  {
    sub_1C2CFE2A4();
    sub_1C2CFD7AC();
    type metadata accessor for SiriKitFlowFrameInput();
    sub_1C2CFBE80();
    swift_storeEnumTagMultiPayload();
    a4(v9);
  }
  sub_1C28B9D6C((uint64_t)v9, &qword_1EF79DF80);
}

void sub_1C2A93DC4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  sub_1C2A92E48();
  if (v2)
  {
    v3 = 0;
  }
  else
  {
    sub_1C2A92E1C();
    if (v5)
    {
      v3 = v5;
      v2 = (uint64_t)sub_1C2A92E14();
      v4 = 0;
      goto LABEL_6;
    }
    type metadata accessor for CommandFailure();
    OUTLINED_FUNCTION_5_2();
    v6 = CommandFailure.init(errorCode:reason:)(-1, 0xD000000000000034, 0x80000001C2D31120);
    sub_1C29CD564();
    v2 = swift_allocError();
    v3 = 0;
    *v7 = v6;
  }
  v4 = 1;
LABEL_6:
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
}

void sub_1C2A93E74(_QWORD *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[2];
  uint64_t v80;
  _OWORD v81[3];

  v76 = a6;
  v77 = a7;
  v74 = a2;
  v75 = a5;
  v73 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  OUTLINED_FUNCTION_0_1();
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v70 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11, v13);
  v69 = (uint64_t)&v67 - v14;
  v15 = objc_msgSend(a4, sel__intentResponseCode);
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2A4();
  v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v16 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_17_34((__n128 *)v16, (__n128)xmmword_1C2D018E0);
  type metadata accessor for INIntentResponseCode(0);
  v68 = v17;
  sub_1C2CFE7C0();
  v18 = v79[0];
  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
  v72 = sub_1C28BFD30();
  *(_QWORD *)(v16 + 64) = v72;
  *(_OWORD *)(v16 + 32) = v18;
  v19 = OUTLINED_FUNCTION_6_44();
  *(_QWORD *)(v16 + 96) = v19;
  v20 = MEMORY[0x1E0DEFD08];
  *(_QWORD *)(v16 + 104) = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0DEFD08], v19);
  *(_QWORD *)(v16 + 72) = a3;
  v21 = OUTLINED_FUNCTION_6_44();
  *(_QWORD *)(v16 + 136) = v21;
  *(_QWORD *)(v16 + 144) = MEMORY[0x1C3BC9CD4](v20, v21);
  *(_QWORD *)(v16 + 112) = a4;
  v22 = a3;
  v23 = a4;
  sub_1C2CFD7AC();
  swift_bridgeObjectRelease();
  if (objc_msgSend(v23, sel__requiresAuthentication))
  {
    sub_1C2A95010();
    v24 = (void *)sub_1C2CFE454();
    sub_1C2CFE2C8();
    OUTLINED_FUNCTION_34_6();

    sub_1C2A945F0(v73, v74, (uint64_t)v22, v25, v75, v76, v77);
LABEL_14:
    OUTLINED_FUNCTION_1();
  }
  else
  {
    switch((unint64_t)v15)
    {
      case 0uLL:
      case 1uLL:
      case 5uLL:
      case 7uLL:
      case 8uLL:
        v26 = (_QWORD *)OUTLINED_FUNCTION_1_45();
        sub_1C2A94888(v26, v27, v28, v29, v30, v31, v32);
        goto LABEL_14;
      case 2uLL:
      case 6uLL:
        sub_1C2CFE2A4();
        v33 = OUTLINED_FUNCTION_5_2();
        *(_OWORD *)(v33 + 16) = xmmword_1C2D002E0;
        v34 = 0xD000000000000019;
        if (v15 == (id)2)
          v34 = 0x65756E69746E6F63;
        v35 = 0x80000001C2D30DF0;
        *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v33 + 64) = v72;
        if (v15 == (id)2)
          v35 = 0xED00007070416E49;
        *(_QWORD *)(v33 + 32) = v34;
        *(_QWORD *)(v33 + 40) = v35;
        OUTLINED_FUNCTION_7_46();
        swift_bridgeObjectRelease();
        v36 = (_QWORD *)OUTLINED_FUNCTION_1_45();
        sub_1C2A94748(v36, v37, v38, v39, v40);
        goto LABEL_14;
      case 3uLL:
        sub_1C2CFE2A4();
        OUTLINED_FUNCTION_34_6();
        v41 = (_QWORD *)OUTLINED_FUNCTION_1_45();
        sub_1C2A94814(v41, v42, v43, v44, v45);
        goto LABEL_14;
      case 4uLL:
        sub_1C2CFE2A4();
        OUTLINED_FUNCTION_34_6();
        v46 = (_QWORD *)OUTLINED_FUNCTION_1_45();
        sub_1C2A946B4(v46, v47, v48, v49, v50);
        goto LABEL_14;
      default:
        sub_1C2CFE2B0();
        v51 = OUTLINED_FUNCTION_5_2();
        OUTLINED_FUNCTION_17_34((__n128 *)v51, (__n128)xmmword_1C2D002E0);
        sub_1C2CFE7C0();
        v52 = v79[0];
        v53 = v72;
        *(_QWORD *)(v51 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v51 + 64) = v53;
        *(_OWORD *)(v51 + 32) = v52;
        OUTLINED_FUNCTION_7_46();
        swift_bridgeObjectRelease();
        if (qword_1ED7AA040 != -1)
          swift_once();
        v54 = sub_1C2CFD878();
        v55 = __swift_project_value_buffer(v54, (uint64_t)qword_1ED7AA1B0);
        v56 = *(_QWORD *)(v54 - 8);
        v57 = v69;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v69, v55, v54);
        __swift_storeEnumTagSinglePayload(v57, 0, 1, v54);
        v58 = v57;
        v59 = (uint64_t)v70;
        sub_1C294E19C(v58, (uint64_t)v70);
        if (__swift_getEnumTagSinglePayload(v59, 1, v54) == 1)
        {
          sub_1C28B9D6C((uint64_t)v70, &qword_1ED7A9EC0);
        }
        else
        {
          v60 = sub_1C2CFD86C();
          v61 = sub_1C2CFE2B0();
          if (os_log_type_enabled(v60, v61))
          {
            v62 = swift_slowAlloc();
            *(_QWORD *)&v79[0] = swift_slowAlloc();
            *(_DWORD *)v62 = 136315650;
            v63 = sub_1C2CFE694();
            *(_QWORD *)&v81[0] = sub_1C28BB120(v63, v64, (uint64_t *)v79);
            OUTLINED_FUNCTION_21_10();
            swift_bridgeObjectRelease();
            *(_WORD *)(v62 + 12) = 2048;
            *(_QWORD *)&v81[0] = 177;
            sub_1C2CFE4D8();
            *(_WORD *)(v62 + 22) = 2080;
            *(_QWORD *)&v81[0] = sub_1C28BB120(0xD000000000000020, 0x80000001C2D312F0, (uint64_t *)v79);
            OUTLINED_FUNCTION_21_10();
            _os_log_impl(&dword_1C28B6000, v60, v61, "FatalError at %s:%lu - %s", (uint8_t *)v62, 0x20u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_11_0();
          }

          (*(void (**)(char *, uint64_t))(v56 + 8))(v70, v54);
        }
        if (qword_1ED7A84D8 != -1)
          swift_once();
        memset(v81, 0, 32);
        v80 = 0;
        memset(v79, 0, sizeof(v79));
        v65 = OUTLINED_FUNCTION_38_0();
        LOBYTE(v66) = 44;
        sub_1C2AFA880(v65, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)v81, 0, 0, (uint64_t)v79, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, 0xD000000000000020, 0x80000001C2D312F0, v66, v67,
          v68,
          v69,
          v70,
          v71,
          v72,
          (uint64_t)v73,
          v74,
          v75,
          v76,
          v77,
          v78);
        sub_1C28B9D6C((uint64_t)v79, (uint64_t *)&unk_1ED7A8750);
        sub_1C28B9D6C((uint64_t)v81, &qword_1ED7A8480);
        swift_release();
        sub_1C2CFE7FC();
        __break(1u);
        break;
    }
  }
}

uint64_t sub_1C2A945F0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v11 = *v7;
  v13 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v14[2] = v7;
  v14[3] = a6;
  v14[4] = a7;
  v15 = *(_QWORD *)(v12 + 8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v17 = *(_QWORD *)(v11 + 80);
  v18 = *(_QWORD *)(v11 + 88);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_221();
  v16(a2, a5, a3, sub_1C2A95050, v14, v17, v18, v13, v15);
  return swift_release();
}

uint64_t sub_1C2A946B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  OUTLINED_FUNCTION_18_33(a1);
  v7 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_10_53(v7);
  OUTLINED_FUNCTION_38_0();
  v8 = OUTLINED_FUNCTION_221();
  OUTLINED_FUNCTION_4_52(v8, v9, v10, v11, (uint64_t)sub_1C2A94FD0, v12, v13, v14, v6, v5, v16, a3, a5, a4);
  return OUTLINED_FUNCTION_3_46();
}

void sub_1C2A94728(void *a1, char a2, uint64_t a3, void (*a4)(void *))
{
  sub_1C2A94A40(a1, a2 & 1, a4);
}

uint64_t sub_1C2A94748(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t (*)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v20;

  v8 = *v5;
  v10 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v20 = 2;
  v11 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_10_53(v11);
  v12 = *(_QWORD *)(v9 + 8);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t (*)(), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
  v14 = *(_QWORD *)(v8 + 80);
  v15 = *(_QWORD *)(v8 + 88);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_221();
  v13(a2, a5, a3, a4, &v20, sub_1C2A95050, v6, v14, v15, v10, v12);
  return swift_release();
}

uint64_t sub_1C2A94814(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  OUTLINED_FUNCTION_18_33(a1);
  v7 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_10_53(v7);
  OUTLINED_FUNCTION_38_0();
  v8 = OUTLINED_FUNCTION_221();
  OUTLINED_FUNCTION_4_52(v8, v9, v10, v11, (uint64_t)sub_1C2A95050, v12, v13, v14, v6, v5, v16, a3, a5, a4);
  return OUTLINED_FUNCTION_3_46();
}

uint64_t sub_1C2A94888(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, void *, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v8 = v7;
  v12 = *v7;
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2A4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v13 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v13 + 16) = xmmword_1C2D002E0;
  objc_msgSend(a4, sel__code);
  v14 = sub_1C2CFE988();
  v16 = v15;
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = sub_1C28BFD30();
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  sub_1C2CFD7AC();
  swift_bridgeObjectRelease();
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v19[2] = v8;
  v19[3] = a6;
  v19[4] = a7;
  v20 = *(_QWORD *)(v18 + 8);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t (*)(), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 24);
  v22 = *(_QWORD *)(v12 + 80);
  v23 = *(_QWORD *)(v12 + 88);
  sub_1C2CFD350();
  sub_1C2CFD350();
  v21(a2, a5, a3, a4, sub_1C2A95050, v19, v22, v23, v17, v20);
  return swift_release();
}

void sub_1C2A94A40(void *a1, char a2, void (*a3)(void *))
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v6 = OUTLINED_FUNCTION_5_2();
    *(_OWORD *)(v6 + 16) = xmmword_1C2D002E0;
    swift_getErrorValue();
    v7 = sub_1C2CFEA78();
    v9 = v8;
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v6 + 32) = v7;
    *(_QWORD *)(v6 + 40) = v9;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    v10 = a1;
    a3(a1);
    OUTLINED_FUNCTION_16_37();
    OUTLINED_FUNCTION_16_37();
  }
  else
  {
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2A4();
    sub_1C2CFD7AC();
    a3(0);
  }
}

id *HandleIntentFlowFrame.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 9));
  return v0;
}

uint64_t HandleIntentFlowFrame.__deallocating_deinit()
{
  HandleIntentFlowFrame.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A94C4C()
{
  return HandleIntentFlowFrame.namespace.getter();
}

void sub_1C2A94C6C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_1C2A93070(a1, a2, a3);
}

void sub_1C2A94C80(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1C2A9317C(a1, a2, a3);
}

void sub_1C2A94CA0(_QWORD *a1, uint64_t a2, void (*a3)(char *), void (*a4)(char *))
{
  sub_1C2A93810(a1, a2, a3, a4);
}

void sub_1C2A94CC0(uint64_t a1@<X8>)
{
  sub_1C2A93DC4(a1);
}

void sub_1C2A94CE4(uint64_t a1)
{
  uint64_t v1;

  sub_1C2A933D0(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24));
}

uint64_t sub_1C2A94CF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_160();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C2A94D7C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(OUTLINED_FUNCTION_160() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1C2A93AC4(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(void (**)(uint64_t *))(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C2A94DD8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for HandleIntentFlowFrame<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_QWORD *sub_1C2A94E04(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void sub_1C2A94E34(id *a1)
{

}

uint64_t sub_1C2A94E5C(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t sub_1C2A94EB0(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t type metadata accessor for HandleIntentFlowFrameResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HandleIntentFlowFrameResult);
}

uint64_t sub_1C2A94EF8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for HandleIntentFlowFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HandleIntentFlowFrame);
}

uint64_t method lookup function for HandleIntentFlowFrame()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.__allocating_init(delegate:app:intent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.__allocating_init(delegate:app:intent:deviceState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.onInput(controller:input:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.execute(controller:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.action(renderer:args:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.exit(controller:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

void sub_1C2A94FD0(void *a1, char a2)
{
  uint64_t v2;

  sub_1C2A94728(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(void *))(v2 + 24));
}

uint64_t objectdestroyTm_14()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1C2A95010()
{
  unint64_t result;

  result = qword_1ED7AA048;
  if (!qword_1ED7AA048)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED7AA048);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_45()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_3_46()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_4_52(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  return v16(v17, a13, a12, a14, a5, v18, v14, v15);
}

uint64_t OUTLINED_FUNCTION_6_44()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_7_46()
{
  return sub_1C2CFD7AC();
}

_QWORD *OUTLINED_FUNCTION_10_53(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result[2] = v2;
  result[3] = v3;
  result[4] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_38()
{
  return sub_1C2CFD7D0();
}

void OUTLINED_FUNCTION_16_37()
{
  void *v0;

  sub_1C2987570(v0, 1);
}

__n128 *OUTLINED_FUNCTION_17_34(__n128 *result, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  result[1] = a2;
  *(_QWORD *)(v3 - 176) = 0;
  *(_QWORD *)(v3 - 168) = 0xE000000000000000;
  *(_QWORD *)(v3 - 128) = v2;
  return result;
}

_QWORD *OUTLINED_FUNCTION_18_33(_QWORD *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, a1[3]);
}

uint64_t dispatch thunk of HandleIntentResponseGenerating.processInterstitialView<A>(delegate:app:intent:intentResponse:completion:)(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_4(a1, a2);
}

uint64_t dispatch thunk of HandleIntentResponseGenerating.processIntentHandledResponse<A>(delegate:app:intent:intentResponse:completion:)(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_4(a1, a2);
}

uint64_t dispatch thunk of HandleIntentResponseGenerating.processInProgressResponse<A>(delegate:app:intent:intentResponse:completion:)(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_4(a1, a2);
}

void sub_1C2A95158(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t AssociatedConformanceWitness;
  id v21;
  id v22;
  void (*v25)(uint64_t, id, void *, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v16 = OUTLINED_FUNCTION_3_31();
  v17 = OUTLINED_FUNCTION_2_31(v16);
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_1_21();
  v19 = (_QWORD *)OUTLINED_FUNCTION_4_53();
  v19[2] = a7;
  v19[3] = a8;
  v19[4] = a4;
  v19[5] = a5;
  v19[6] = a6;
  v19[7] = a1;
  v19[8] = a2;
  v19[9] = a3;
  v19[10] = v26;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v25 = *(void (**)(uint64_t, id, void *, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 168);
  v21 = a4;
  sub_1C2CFD350();
  swift_unknownObjectRetain();
  sub_1C2CFD350();
  v22 = a3;
  sub_1C2CFD350();
  v25(a2, v22, a4, sub_1C2A96204, v19, v16, AssociatedConformanceWitness);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v8, v16);
  OUTLINED_FUNCTION_1();
}

void sub_1C2A952A4(uint64_t a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  unint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void (*v39)(_QWORD, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t AssociatedConformanceWitness;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(_QWORD, _QWORD);
  uint64_t v58;

  v53 = a8;
  v54 = a7;
  v55 = a6;
  v52 = a5;
  v57 = a3;
  v58 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v13);
  v17 = (char *)&v45 - v16;
  v19 = *(void **)a1;
  v18 = *(_QWORD *)(a1 + 8);
  v21 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v23 = *(_QWORD *)(a1 + 32);
  v22 = *(_QWORD *)(a1 + 40);
  v25 = *(_QWORD *)(a1 + 48);
  v24 = *(_QWORD *)(a1 + 56);
  v26 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) != 1)
  {
    if (v18)
    {
      if (a2)
      {
        v33 = *(void (**)(uint64_t, uint64_t))(a10 + 152);
        v50 = v14;
        v51 = v15;
        v45 = a2;
        v46 = v23;
        v47 = v22;
        v48 = v25;
        v56 = v24;
        sub_1C2A962B4(v19, v18, v21, v20, v23, v22, v25, v24, v26, 0);
        v49 = a2;
        v34 = v52;
        v33(a9, a10);
        v35 = (_QWORD *)swift_allocObject();
        v35[2] = a9;
        v35[3] = a10;
        v35[4] = v19;
        v35[5] = v18;
        v35[6] = v21;
        v35[7] = v20;
        v35[8] = v46;
        v35[9] = v47;
        v35[10] = v48;
        v36 = v55;
        v35[11] = v56;
        v35[12] = v26;
        v37 = v54;
        v35[13] = v53;
        v35[14] = v34;
        v38 = v45;
        v35[15] = v37;
        v35[16] = v38;
        v39 = v57;
        v40 = v58;
        v35[17] = v36;
        v35[18] = v39;
        v35[19] = v40;
        v41 = v50;
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v57 = *(void (**)(_QWORD, _QWORD))(AssociatedConformanceWitness + 120);
        v43 = v49;
        sub_1C2CFD350();
        swift_unknownObjectRetain();
        v44 = v37;
        sub_1C2CFD350();
        sub_1C2CFD350();
        ((void (*)(uint64_t, id, id, void (*)(unint64_t, char), _QWORD *, uint64_t, uint64_t))v57)(v36, v44, v43, sub_1C2A96358, v35, v41, AssociatedConformanceWitness);

        swift_release();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v41);
        return;
      }
      if (qword_1ED7AA038 == -1)
        goto LABEL_11;
    }
    else if (qword_1ED7AA038 == -1)
    {
      goto LABEL_11;
    }
    swift_once();
LABEL_11:
    sub_1C2CFE2A4();
    sub_1C2CFD7AC();
    v57(0, 0);
    return;
  }
  v27 = *(_QWORD *)(a1 + 32);
  v28 = *(_QWORD *)(a1 + 40);
  v29 = v25;
  v56 = v24;
  v30 = v19;
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2B0();
  sub_1C2CFD7AC();
  v31 = v19;
  v57(v19, 1);
  v32 = v56;
  sub_1C2A96210(v19, v18, v21, v20, v27, v28, v29, v56, v26, 1);
  sub_1C2A96210(v19, v18, v21, v20, v27, v28, v29, v32, v26, 1);
}

void sub_1C2A956C4(unint64_t a1, char a2, __n128 *a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, void (*a9)(_QWORD, _QWORD), uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t (*v34)(__int128 *, void *, void *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unsigned int v52;
  __n128 *v53;
  void *v54;
  void (*v55)(_QWORD, _QWORD);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  __int128 v62;
  __int128 v63;
  unint64_t v64;
  _BYTE v65[40];
  _BYTE __dst[72];
  __n128 v67;
  __n128 v68;

  v57 = a8;
  v61 = a6;
  v60 = a5;
  v59 = a4;
  v58 = (char *)a11;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v16, v17);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AceOutput();
  v22 = MEMORY[0x1E0C80A78](v20, v21);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22, v25);
  v27 = (char *)&v50 - v26;
  if ((a2 & 1) == 0)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v49 = sub_1C2CFE820();
      sub_1C299A4D8((id)a1, 0);
      if (!v49)
        goto LABEL_4;
    }
    else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      if (!*(_QWORD *)(a3[2].n128_u64[0] + 16) && !*(_QWORD *)(a3[2].n128_u64[1] + 16))
      {
        a9(0, 0);
        return;
      }
    }
    v55 = a9;
    v56 = a10;
    memcpy(__dst, a3, sizeof(__dst));
    v28 = v59;
    sub_1C28B9A04(v59 + 64, (uint64_t)v65);
    v52 = *(unsigned __int8 *)(*(_QWORD *)(v28 + 16) + 16);
    v53 = a3;
    sub_1C299A4E4(a3 + 3, &v67);
    sub_1C299A4E4(&v67, &v68);
    v29 = a7;
    v51 = v68.n128_u64[1] - 3;
    v30 = v61;
    v31 = (uint64_t)v58;
    v32 = (*(uint64_t (**)(void *, char *, uint64_t))(a12 + 320))(v61, v58, a12);
    v33 = type metadata accessor for NLContextUpdate();
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v33);
    LOBYTE(v62) = 33;
    v34 = *(uint64_t (**)(__int128 *, void *, void *, uint64_t, uint64_t))(a12 + 304);
    v54 = v29;
    v35 = v34(&v62, v30, v29, v31, a12);
    if (v35)
    {
      v36 = v35;
      *((_QWORD *)&v63 + 1) = type metadata accessor for DefaultFlowActivity();
      v64 = sub_1C29F3E54();
      *(_QWORD *)&v62 = v36;
    }
    else
    {
      v64 = 0;
      v63 = 0u;
      v62 = 0u;
    }
    static AceOutputHelper.makeConfirmedViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)(__dst, v65, v52, a1, v51 < 0xFFFFFFFFFFFFFFFELL, v32 & 1, v19, MEMORY[0x1E0DEE9D8], &v62);
    sub_1C28BA958((uint64_t)v19, &qword_1ED7A7A10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
    sub_1C28BA958((uint64_t)&v62, (uint64_t *)&unk_1ED7A8750);
    v39 = sub_1C2B0C6E8();
    *(_QWORD *)&__dst[24] = &type metadata for OutputPublishers;
    *(_QWORD *)&__dst[32] = &off_1E7C8D920;
    *(_QWORD *)__dst = v39;
    type metadata accessor for LegacySiriKitOutputPublisher();
    v40 = swift_allocObject();
    sub_1C28B99EC((__int128 *)__dst, v40 + 16);
    sub_1C299A0F4((uint64_t)v27, (uint64_t)v24);
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = v58;
    v41[3] = a12;
    v58 = v27;
    v42 = v57;
    v41[4] = v59;
    v41[5] = v42;
    v43 = v61;
    v41[6] = v60;
    v41[7] = v43;
    v44 = v54;
    v41[8] = v54;
    v45 = (uint64_t)v53;
    memcpy(v41 + 9, v53, 0x48uLL);
    v46 = v56;
    v41[18] = v55;
    v41[19] = v46;
    sub_1C2CFD350();
    sub_1C2CFD350();
    swift_unknownObjectRetain();
    v47 = v43;
    v48 = v44;
    sub_1C290F6B8(v45);
    sub_1C2CFD350();
    sub_1C2BED8D0((uint64_t)v24, (uint64_t)sub_1C2A96424, (uint64_t)v41, v40);
    swift_release();
    sub_1C28E0610((uint64_t)v58);
    sub_1C28E0610((uint64_t)v24);
    swift_release();
    return;
  }
  v37 = (id)a1;
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2B0();
  sub_1C2CFD7AC();
  v38 = (id)a1;
  a9(a1, 1);
  sub_1C299A4D8((id)a1, 1);
  sub_1C299A4D8((id)a1, 1);
}

void sub_1C2A95BD4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, void (*a9)(void *, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[9];

  if ((a2 & 1) != 0)
  {
    v18 = a1;
    a9(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    sub_1C28B9A04(a3 + 104, (uint64_t)v22);
    HIWORD(v21) = 8477;
    LOWORD(v21) = 0;
    sub_1C2C1FDAC((uint64_t)v22, (uint64_t)&v21 + 7, a4, a5, a6, (uint64_t)&v21 + 6, 0, 1, a7, (uint64_t)&v20, *a8, a8[1], a11, a12, v19, 3, v21, v22[0], v22[1],
      v22[2],
      v22[3],
      v22[4],
      v22[5],
      v22[6],
      v22[7],
      v22[8]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    a9(0, 0);
  }
}

#error "1C2A95D08: call analysis failed (funcsize=13)"

void sub_1C2A95D18(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t AssociatedConformanceWitness;
  void (*v22)(uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  id v23;
  id v24;
  uint64_t v28;

  v10 = v8;
  v17 = OUTLINED_FUNCTION_3_31();
  v18 = OUTLINED_FUNCTION_2_31(v17);
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_1_21();
  v20 = (_QWORD *)OUTLINED_FUNCTION_4_53();
  v20[2] = a7;
  v20[3] = a8;
  v20[4] = a5;
  v20[5] = a6;
  v20[6] = v10;
  v20[7] = a2;
  v20[8] = a1;
  v20[9] = a3;
  v20[10] = a4;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v22 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 136);
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  swift_unknownObjectRetain();
  v23 = a3;
  v24 = a4;
  v22(a2, sub_1C2A961AC, v20, v17, AssociatedConformanceWitness);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v9, v17);
  OUTLINED_FUNCTION_1();
}

void sub_1C2A95E50(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void *, uint64_t);
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  char v59[9];

  v46 = a8;
  v47 = a3;
  v38 = a5;
  v39 = a6;
  v48 = a2;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v18);
  v22 = (char *)&v34 - v21;
  v24 = *(void **)a1;
  v23 = *(_QWORD *)(a1 + 8);
  v25 = *(_QWORD *)(a1 + 24);
  v40 = *(_QWORD *)(a1 + 16);
  v41 = v25;
  v26 = *(_QWORD *)(a1 + 40);
  v42 = *(_QWORD *)(a1 + 32);
  v43 = v26;
  v27 = *(_QWORD *)(a1 + 56);
  v28 = *(_QWORD *)(a1 + 64);
  v44 = *(_QWORD *)(a1 + 48);
  v45 = v27;
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v29 = v24;
    v48(v24, 1);
    sub_1C290D288(v24, v23, v40, v41, v42, v43, v44, v45, v28, 1);
  }
  else
  {
    v37 = v19;
    v30 = a4 + 104;
    v59[0] = 7;
    v58 = 76;
    v49 = 0;
    LOWORD(v50) = 0;
    v35 = a4;
    v32 = v38;
    v31 = v39;
    sub_1C2C1FDAC(v30, (uint64_t)v59, v38, v39, a7, (uint64_t)&v58, 0, 1, v46, (uint64_t)&v49, (uint64_t)v24, v23, a9, a10, v34, v35, v20, v37, v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45);
    (*(void (**)(uint64_t, uint64_t))(a10 + 152))(a9, a10);
    v49 = v24;
    v50 = v23;
    v51 = v40;
    v52 = v41;
    v53 = v42;
    v54 = v43;
    v55 = v44;
    v56 = v45;
    v57 = v28;
    v33 = type metadata accessor for NLContextUpdate();
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v33);
    sub_1C2B85E30(v31, v32, a7, (uint64_t)v22, (uint64_t)&v49, v46, 0, (uint64_t)v16, (uint64_t)v48, v47, a9, a10, v34, v35, v36, v37, v38, v39, v40,
      v41,
      v42,
      v43,
      v44,
      v45);
    sub_1C28BA958((uint64_t)v16, &qword_1ED7A7A10);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v37);
  }
}

void sub_1C2A96100(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1C2A95158(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C2A96120()
{
  return sub_1C2A95CE4();
}

void sub_1C2A96140(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1C2A95D18(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C2A96160()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C2A961AC(uint64_t a1)
{
  return sub_1C29F3EB4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2A95E50);
}

uint64_t sub_1C2A961B8()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A96204(uint64_t a1)
{
  return sub_1C29F3EB4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2A952A4);
}

void sub_1C2A96210(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char a10)
{
  if ((a10 & 1) != 0)

  else
    sub_1C2A96228((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C2A96228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C28F90E8(a7, a8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C2A962B4(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char a10)
{
  if ((a10 & 1) != 0)
    return a1;
  else
    return (id)sub_1C299A068((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C2A962CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C2A96358(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_1C2A956C4(a1, a2 & 1, (__n128 *)(v2 + 32), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(void **)(v2 + 120), *(void **)(v2 + 128), *(_QWORD *)(v2 + 136), *(void (**)(_QWORD, _QWORD))(v2 + 144), *(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1C2A96398()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 128) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C2A96424(void *a1, char a2)
{
  uint64_t v2;

  sub_1C2A95BD4(a1, a2 & 1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), (uint64_t *)(v2 + 72), *(void (**)(void *, uint64_t))(v2 + 144), *(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t OUTLINED_FUNCTION_4_53()
{
  return swift_allocObject();
}

uint64_t sub_1C2A96470()
{
  return swift_initClassMetadata2();
}

void *sub_1C2A964CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *result;
  int v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;

  v3 = *v1;
  sub_1C2A96748((uint64_t)&v12);
  result = v12;
  v5 = v14 >> 6;
  if (v5 == 2)
  {
    v6 = 0;
LABEL_6:
    v7 = 1;
    goto LABEL_7;
  }
  v6 = v13;
  if (v5 != 1)
  {
    sub_1C2A972E0(v12, v13, v14);
    v9 = type metadata accessor for HandleIntentThenRespondFlow.HandleIntentThenRespondFlowError(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v8);
    MEMORY[0x1C3BC9CD4](&unk_1C2D0CFF8, v9);
    result = (void *)OUTLINED_FUNCTION_14();
    v11 = v10;
    v6 = 0;
    *v11 = 0;
    goto LABEL_6;
  }
  v7 = v14 & 1;
LABEL_7:
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return result;
}

void sub_1C2A9657C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  NSObject *oslog;
  uint64_t v10;

  v1 = *v0;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v2 = sub_1C2CFD878();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED7AA1B0);
  sub_1C2CFD350();
  oslog = sub_1C2CFD86C();
  v3 = sub_1C2CFE2A4();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    type metadata accessor for HandleIntentThenRespondFlow.State(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v6);
    sub_1C2A97058();
    sub_1C28BB120(v7, v8, &v10);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_1C28B6000, oslog, v3, "HandleIntentThenRespondFlow transitioned to state %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v5, -1, -1);
    MEMORY[0x1C3BC9DE8](v4, -1, -1);

  }
  else
  {
    swift_release();

  }
}

id sub_1C2A96748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  unsigned __int8 v4;

  v2 = *(void **)(v1 + 40);
  v3 = *(void **)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1C2A97280(v2, v3, v4);
}

void sub_1C2A9675C(uint64_t a1)
{
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;

  v2 = *(_BYTE *)(a1 + 16);
  v4 = *(void **)(v1 + 40);
  v3 = *(void **)(v1 + 48);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)a1;
  v5 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(v1 + 56) = v2;
  sub_1C2A972E0(v4, v3, v5);
  sub_1C2A9657C();
}

void sub_1C2A9678C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 32) = a3;
  *(_BYTE *)(v6 + 56) = -64;
  OUTLINED_FUNCTION_18();
}

void sub_1C2A967D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for HandleIntentThenRespondFlow(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  MEMORY[0x1C3BC9CD4](&unk_1C2D0CED0, v5);
  Flow.deferToExecuteAsync(_:)();
}

uint64_t sub_1C2A96844(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[10] = a1;
  v2[11] = v1;
  v2[12] = *v1;
  return swift_task_switch();
}

uint64_t sub_1C2A96864()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t (*v16)(unint64_t, unint64_t);

  v1 = sub_1C2A96748(v0 + 40);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = v4;
  v6 = *(unsigned __int8 *)(v0 + 56);
  if ((v6 >> 6) - 1 < 2)
  {
    sub_1C2A972E0((void *)v5, (void *)v4, v6);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_118();
    v8 = OUTLINED_FUNCTION_23_1(v7, (uint64_t)qword_1ED7AA1B0);
    v9 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)OUTLINED_FUNCTION_23_2();
      *(_WORD *)v10 = 0;
      OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v8, v9, "Nothing left to do. Flow is complete and will exit.", v10);
      OUTLINED_FUNCTION_11_0();
    }

    goto LABEL_13;
  }
  if (!(v6 >> 6))
  {
    v16 = (uint64_t (*)(unint64_t, unint64_t))(**(int **)(*(_QWORD *)(v0 + 88) + 24)
                                                                     + *(_QWORD *)(*(_QWORD *)(v0 + 88) + 24));
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v11;
    *v11 = v0;
    v11[1] = sub_1C2A96A5C;
    return v16(v5, v4);
  }
  if (v4 | v5 || v6 != 192)
  {
    v13 = type metadata accessor for HandleIntentThenRespondFlow.HandleIntentThenRespondFlowError(0, *(_QWORD *)(*(_QWORD *)(v0 + 96) + 80), *(_QWORD *)(*(_QWORD *)(v0 + 96) + 88), v3);
    MEMORY[0x1C3BC9CD4](&unk_1C2D0CFF8, v13);
    v14 = OUTLINED_FUNCTION_14();
    *v15 = 1;
    OUTLINED_FUNCTION_9_50(v14, (uint64_t)v15);
LABEL_13:
    static ExecuteResponse.complete()();
    return OUTLINED_FUNCTION_2_49(*(uint64_t (**)(void))(v0 + 8));
  }
  OUTLINED_FUNCTION_9_50((uint64_t)v1, v2);
  sub_1C2A96D40();
  static ExecuteResponse.ongoing<A>(next:childCompletion:)();
  swift_release();
  return OUTLINED_FUNCTION_2_49(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A96A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 136) = a1;
  return swift_task_switch();
}

uint64_t sub_1C2A96AD0()
{
  uint64_t v0;
  void *v1;
  _BYTE *v2;
  id v3;
  id v4;
  id v6[2];
  char v7;

  v1 = *(void **)(v0 + 112);
  v2 = *(_BYTE **)(v0 + 80);
  v6[0] = *(id *)(v0 + 104);
  v6[1] = v1;
  v7 = 64;
  v3 = v6[0];
  v4 = v1;
  sub_1C2A9675C((uint64_t)v6);

  static ExecuteResponse.complete(next:)(v2);
  swift_release();
  return OUTLINED_FUNCTION_2_49(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A96B4C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v15[2];
  char v16;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = *(void **)(v0 + 128);
  v2 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED7AA1B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_1C2CFD86C();
  v6 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v15[0] = (id)swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v8 = sub_1C2CFEA78();
    *(_QWORD *)(v0 + 72) = sub_1C28BB120(v8, v9, (uint64_t *)v15);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_206();
    OUTLINED_FUNCTION_206();
    _os_log_impl(&dword_1C28B6000, v5, v6, "Unexpected error while attempting to create response flow: %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_206();

  v11 = *(void **)(v0 + 104);
  v10 = *(void **)(v0 + 112);
  v15[0] = *(id *)(v0 + 128);
  v15[1] = 0;
  v16 = 0x80;
  v12 = v15[0];
  OUTLINED_FUNCTION_9_50((uint64_t)v12, v13);

  static ExecuteResponse.complete()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void (*sub_1C2A96D40())(__int128 *a1)
{
  sub_1C2CFD350();
  return sub_1C2A975D4;
}

void sub_1C2A96D70(__int128 *a1)
{
  char v1;
  __int128 v2;
  char v3;

  v1 = *((_BYTE *)a1 + 16);
  v2 = *a1;
  v3 = v1;
  sub_1C2A96DAC((uint64_t)&v2);
}

void sub_1C2A96DAC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  char v5;
  BOOL v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  unsigned __int8 v31;

  v2 = *v1;
  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  sub_1C2A96748((uint64_t)&v29);
  v7 = v31 >= 0xC0u && v29 == (void *)1 && v30 == 0;
  if (v7 && v31 == 192)
  {
    if ((v5 & 1) != 0)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v16 = OUTLINED_FUNCTION_118();
      v17 = OUTLINED_FUNCTION_23_1(v16, (uint64_t)qword_1ED7AA1B0);
      v18 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)OUTLINED_FUNCTION_23_2();
        *(_WORD *)v19 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v17, v18, "Received a non-successful result from HandleIntentFlow. Skipping response and returning result.", v19);
        OUTLINED_FUNCTION_11_0();
      }

      v29 = v3;
      v30 = v4;
      v31 = 65;
      OUTLINED_FUNCTION_10_54((uint64_t)v3);
    }
    else
    {
      v20 = qword_1ED7AA040;
      v21 = v3;
      v22 = v4;
      if (v20 != -1)
        swift_once();
      v23 = OUTLINED_FUNCTION_118();
      v24 = OUTLINED_FUNCTION_23_1(v23, (uint64_t)qword_1ED7AA1B0);
      v25 = sub_1C2CFE2A4();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)OUTLINED_FUNCTION_23_2();
        *(_WORD *)v26 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v24, v25, "Received a successful result from HandleIntentFlow.", v26);
        OUTLINED_FUNCTION_11_0();
      }

      v29 = v3;
      v30 = v4;
      v31 = 0;
      v27 = v21;
      v28 = v22;
      OUTLINED_FUNCTION_10_54((uint64_t)v28);

    }
  }
  else
  {
    sub_1C2A972E0(v29, v30, v31);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v8 = OUTLINED_FUNCTION_118();
    v9 = OUTLINED_FUNCTION_23_1(v8, (uint64_t)qword_1ED7AA1B0);
    v10 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)OUTLINED_FUNCTION_23_2();
      *(_WORD *)v11 = 0;
      OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v9, v10, "Called in an unexpected state. Moving to error state.", v11);
      OUTLINED_FUNCTION_11_0();
    }

    v13 = type metadata accessor for HandleIntentThenRespondFlow.HandleIntentThenRespondFlowError(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v12);
    MEMORY[0x1C3BC9CD4](&unk_1C2D0CFF8, v13);
    v14 = (void *)OUTLINED_FUNCTION_14();
    *v15 = 1;
    v29 = v14;
    v30 = 0;
    v31 = 0x80;
    OUTLINED_FUNCTION_10_54((uint64_t)v14);
  }
}

void sub_1C2A97058()
{
  __asm { BR              X10 }
}

uint64_t sub_1C2A970B4()
{
  return 0x74656C706D6F632ELL;
}

BOOL sub_1C2A971A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C297F320(*a1, *a2);
}

uint64_t sub_1C2A971BC()
{
  return sub_1C297F354();
}

uint64_t sub_1C2A971CC()
{
  return sub_1C297F330();
}

uint64_t sub_1C2A971DC()
{
  sub_1C2CFEAB4();
  sub_1C297F330();
  return sub_1C2CFEAD8();
}

uint64_t sub_1C2A97220()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1C2A972E0(*(void **)(v0 + 40), *(void **)(v0 + 48), *(_BYTE *)(v0 + 56));
  return v0;
}

uint64_t sub_1C2A97250()
{
  sub_1C2A97220();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HandleIntentThenRespondFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HandleIntentThenRespondFlow);
}

id sub_1C2A97280(id result, void *a2, unsigned __int8 a3)
{
  int v3;
  id v4;

  v3 = a3 >> 6;
  if (v3 == 2)
    return result;
  if (v3 != 1)
  {
    if (a3 >> 6)
      return result;
    v4 = result;
    result = a2;
    return result;
  }
  return sub_1C2920E18(result, a2, a3 & 1);
}

void sub_1C2A972D0(uint64_t a1)
{
  sub_1C2A972E0(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1C2A972E0(void *a1, void *a2, unsigned __int8 a3)
{
  int v3;

  v3 = a3 >> 6;
  if (v3 == 2)
  {
LABEL_5:

    return;
  }
  if (v3 != 1)
  {
    if (a3 >> 6)
      return;

    a1 = a2;
    goto LABEL_5;
  }
  sub_1C2921668(a1, a2, a3 & 1);
}

void sub_1C2A97330(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C2A97280(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A97370(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C2A97280(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C2A972E0(v6, v7, v8);
  return a1;
}

uint64_t sub_1C2A973C4(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C2A972E0(v4, v5, v6);
  return a1;
}

uint64_t sub_1C2A97408(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7D && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1C2A97454(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 125;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1C2A974A8(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 16) >> 6;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_1C2A974C4(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_1C2A974D4(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 3)
  {
    v2 = *(_BYTE *)(result + 16) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    v2 = -64;
  }
  *(_BYTE *)(result + 16) = v2;
  return result;
}

uint64_t type metadata accessor for HandleIntentThenRespondFlow.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HandleIntentThenRespondFlow.State);
}

void sub_1C2A97508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2A967D4(a1, a2, a3, a4);
}

uint64_t sub_1C2A97528(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28C33A0;
  return sub_1C2A96844(a1);
}

void *sub_1C2A9757C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A964CC(a1);
}

uint64_t sub_1C2A9759C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&unk_1C2D0CED0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for HandleIntentThenRespondFlow.HandleIntentThenRespondFlowError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HandleIntentThenRespondFlow.HandleIntentThenRespondFlowError);
}

void sub_1C2A975D4(__int128 *a1)
{
  sub_1C2A96D70(a1);
}

uint64_t sub_1C2A975DC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2A97628 + 4 * byte_1C2D0CE09[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2A9765C + 4 * byte_1C2D0CE04[v4]))();
}

uint64_t sub_1C2A9765C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A97664(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A9766CLL);
  return result;
}

uint64_t sub_1C2A97678(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A97680);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2A97684(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A9768C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1C2A97698()
{
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2A976A8()
{
  JUMPOUT(0x1C3BC9CD4);
}

uint64_t OUTLINED_FUNCTION_2_49(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_9_50(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1C2A9675C((uint64_t)va);
}

void OUTLINED_FUNCTION_10_54(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_1C2A9675C((uint64_t)va);
}

void static SimpleHandoffSessionToCompanionFlowHelper.makeHandoffFlowAsync(deviceState:outputPublisher:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9[5];
  _BYTE v10[40];

  type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync();
  v0 = OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_113_5(v0, (uint64_t)v10);
  OUTLINED_FUNCTION_110_8(v1, v2, v3, v4, v5, v6, v7, v8, v9[0]);
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  OUTLINED_FUNCTION_5_2();
  sub_1C29A6314(v0, (uint64_t)v10, (uint64_t)v9);
  OUTLINED_FUNCTION_76_1();
}

uint64_t type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for HandoffSessionToCompanionFlowAsync()
{
  return objc_opt_self();
}

uint64_t sub_1C2A97778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[176] = a4;
  v4[175] = a3;
  v4[174] = a2;
  v4[173] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v4[177] = OUTLINED_FUNCTION_7();
  v4[178] = type metadata accessor for AceOutput();
  v4[179] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A977E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  swift_asyncLet_begin();
  v1 = OUTLINED_FUNCTION_149_1();
  sub_1C28B9A48(v1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1440) = v3;
  *v3 = v0;
  v3[1] = sub_1C2A97874;
  return static ResponseTemplates.continueOnCompanion(deviceState:)(v0 + 696, v0 + 808);
}

uint64_t sub_1C2A97874()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_87_0();
  v3 = v2 + 808;
  *v4 = *v1;
  *(_QWORD *)(v2 + 1448) = v0;
  swift_task_dealloc();
  sub_1C28B9D6C(v3, &qword_1ED7A8760);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A978D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_0;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[10];

  v1 = *(_QWORD *)(v0 + 1416);
  v2 = *(_QWORD **)(v0 + 1392);
  v3 = *(_QWORD *)(v0 + 704);
  v4 = *(_QWORD *)(v0 + 712);
  v23 = v3;
  v24 = v4;
  v5 = *(_QWORD *)(v0 + 720);
  v31 = *(_QWORD *)(v0 + 1432);
  v25 = *(_QWORD *)(v0 + 728);
  v26 = *(_QWORD *)(v0 + 736);
  v27 = *(_QWORD *)(v0 + 752);
  v28 = *(_QWORD *)(v0 + 744);
  v29 = *(_QWORD *)(v0 + 760);
  v30 = *(_QWORD *)(v0 + 696);
  v6 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96))(v6, v7);
  v9 = type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_30_0(v1, v10, v11, v9);
  *(_QWORD *)(v0 + 1000) = 0;
  *(_OWORD *)(v0 + 968) = 0u;
  *(_OWORD *)(v0 + 984) = 0u;
  v32[0] = v30;
  v32[1] = v3;
  v32[2] = v4;
  v32[3] = v5;
  v32[4] = v25;
  v32[5] = v26;
  v13 = v27;
  v12 = v28;
  v32[6] = v28;
  v32[7] = v27;
  v32[8] = v29;
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)((uint64_t)v32, (uint64_t)v2, v8 & 1, MEMORY[0x1E0DEE9D8], 0, 1, v1, MEMORY[0x1E0DEE9D8], v0 + 968, 0, v22, v23, v24, v25, v26, v27, v28, v29, v30,
    v5,
    v31,
    (void *)(v0 + 1272));
  sub_1C28B9D6C(v0 + 968, (uint64_t *)&unk_1ED7A8750);
  sub_1C28B9D6C(v1, &qword_1ED7A7A10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v12, v13);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_65_13(v2);
  v15 = v14;
  v16 = swift_bridgeObjectRelease();
  if (v15)
  {
    *(_QWORD *)(v0 + 912) = *(_QWORD *)(v0 + 1424);
    *(_QWORD *)(v0 + 920) = &protocol witness table for AceOutput;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 888));
    OUTLINED_FUNCTION_66_12((uint64_t)boxed_opaque_existential_0);
  }
  else
  {
    v18 = *(uint64_t (**)(uint64_t))(v0 + 1400);
    v19 = *(_QWORD *)(v0 + 1424);
    if (v18)
    {
      *(_QWORD *)(v0 + 1464) = v18(v16);
      *(_QWORD *)(v0 + 1152) = v19;
      *(_QWORD *)(v0 + 1160) = &protocol witness table for AceOutput;
      v20 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 1128));
    }
    else
    {
      *(_QWORD *)(v0 + 1072) = v19;
      *(_QWORD *)(v0 + 1080) = &protocol witness table for AceOutput;
      v20 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 1048));
    }
    OUTLINED_FUNCTION_66_12((uint64_t)v20);
  }
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1C2A97B4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1456) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A97B6C()
{
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_59_20();
  OUTLINED_FUNCTION_26_30();
  OUTLINED_FUNCTION_33_19();
  return OUTLINED_FUNCTION_25_32();
}

uint64_t sub_1C2A97BB0()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A97BBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1472) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A97BDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 1464);
  OUTLINED_FUNCTION_59_20();
  v3 = *(_QWORD *)(v0 + 1272);
  v4 = *(_QWORD *)(v0 + 1280);
  v1[8] = 0;
  v1[9] = 0;
  sub_1C28B99EC((__int128 *)(v0 + 1128), (uint64_t)v1);
  v1[5] = v3;
  v1[6] = v4;
  v1[7] = v2;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_33_19();
  return OUTLINED_FUNCTION_23_37();
}

uint64_t sub_1C2A97C60()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A97C6C()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A97CA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1480) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A97CC0()
{
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_59_20();
  OUTLINED_FUNCTION_26_30();
  OUTLINED_FUNCTION_33_19();
  return OUTLINED_FUNCTION_25_32();
}

uint64_t sub_1C2A97D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _DWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_72_1();
  v15 = v1;
  v16 = v2;
  v14 = v0;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v3 = *(void **)(v0 + 1448);
  v4 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED7AA1B0);
  v5 = v3;
  v6 = v3;
  v7 = sub_1C2CFD86C();
  v8 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (_DWORD *)OUTLINED_FUNCTION_6_0();
    v13 = OUTLINED_FUNCTION_6_0();
    *v9 = 136315138;
    swift_getErrorValue();
    v10 = sub_1C2CFEA78();
    *(_QWORD *)(v0 + 1288) = sub_1C28BB120(v10, v11, &v13);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_206();
    OUTLINED_FUNCTION_206();
    OUTLINED_FUNCTION_96_10(&dword_1C28B6000, v7, v8, "Unexpected error calling continueOnCompanion: %s");
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_206();

  swift_willThrow();
  OUTLINED_FUNCTION_71_0();
  return swift_asyncLet_finish();
}

uint64_t sub_1C2A97EB4()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A97EC0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_26();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A97EF0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_90_10();
  __swift_destroy_boxed_opaque_existential_1(v0 + 888);
  return OUTLINED_FUNCTION_23_37();
}

uint64_t sub_1C2A97F44()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A97F50()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_26();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A97F80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1432);

  sub_1C28E0610(v1);
  OUTLINED_FUNCTION_353();
  OUTLINED_FUNCTION_33_19();
  return swift_asyncLet_finish();
}

uint64_t sub_1C2A97FE8()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A97FF4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_26();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A98024()
{
  OUTLINED_FUNCTION_90_10();
  OUTLINED_FUNCTION_353();
  OUTLINED_FUNCTION_33_19();
  return OUTLINED_FUNCTION_23_37();
}

uint64_t sub_1C2A9806C()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A98078()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_26();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t HandoffSessionToCompanionFlowStrategy.makeHandoffResponse(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2CFE10C();
  v9 = OUTLINED_FUNCTION_111_8();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v2);
  v10 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_1EF792CF0;
  v10[5] = 0;
  v10[6] = a1;
  v10[7] = a2;
  LODWORD(a1) = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v2);
  sub_1C2CFD350();
  if ((_DWORD)a1 == 1)
  {
    sub_1C28B9D6C((uint64_t)v8, &qword_1ED7A7240);
    v11 = 0;
    v12 = 0;
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_76_4((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
    if (v10[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1C2CFE0B8();
      v12 = v13;
      swift_unknownObjectRelease();
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v14 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v14 + 16) = &unk_1EF78EBB8;
  *(_QWORD *)(v14 + 24) = v10;
  if (v12 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v12;
  }
  swift_task_create();
  return swift_release();
}

void HandoffResponse.init(output:companionNotificationText:)(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  OUTLINED_FUNCTION_98_9(a1, (uint64_t)a4);
  a4[5] = a2;
  a4[6] = a3;
  a4[7] = 0;
  OUTLINED_FUNCTION_18();
}

#error "1C2A982E0: call analysis failed (funcsize=20)"

uint64_t sub_1C2A982F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_86(v3);
  *v4 = v1;
  v4[1] = sub_1C28CCD60;
  return HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()(a1);
}

uint64_t sub_1C2A9833C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A9834C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_61_12();
  __swift_destroy_boxed_opaque_existential_1(v1);
  v2[5] = OUTLINED_FUNCTION_95_0();
  v2[6] = &protocol witness table for RefreshableDeviceState;
  v2[2] = v0;
  OUTLINED_FUNCTION_38_0();
  v3 = (_QWORD *)swift_task_alloc();
  v2[13] = v3;
  *v3 = v2;
  v3[1] = sub_1C2A983E8;
  OUTLINED_FUNCTION_48_22();
  return OUTLINED_FUNCTION_37_21(v4, v5, v6, v7);
}

uint64_t sub_1C2A983E8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_21_35();
  OUTLINED_FUNCTION_353();
  if (!v0)
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A9843C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_61_12();
  __swift_destroy_boxed_opaque_existential_1(v1);
  v2[5] = OUTLINED_FUNCTION_95_0();
  v2[6] = &protocol witness table for RefreshableDeviceState;
  v2[2] = v0;
  OUTLINED_FUNCTION_38_0();
  v3 = (_QWORD *)swift_task_alloc();
  v2[13] = v3;
  *v3 = v2;
  v3[1] = sub_1C2A984D8;
  OUTLINED_FUNCTION_48_22();
  return OUTLINED_FUNCTION_37_21(v4, v5, v6, v7);
}

uint64_t sub_1C2A984D8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_21_35();
  OUTLINED_FUNCTION_353();
  if (!v0)
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

void HandoffResponse.output.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C28B9A48(v1, a1);
}

void HandoffResponse.companionNotificationText.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_0();
}

void HandoffResponse.runSiriKitExecutorCommand.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 56);
  OUTLINED_FUNCTION_1_0();
}

void HandoffResponse.targetDeviceAssistantIdOverride.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_0();
}

void HandoffResponse.targetDeviceAssistantIdOverride.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*HandoffResponse.targetDeviceAssistantIdOverride.modify())(_QWORD)
{
  return nullsub_1;
}

void HandoffResponse.init(output:companionNotificationText:runSiriKitExecutorCommand:)(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  OUTLINED_FUNCTION_98_9(a1, (uint64_t)a5);
  a5[5] = a2;
  a5[6] = a3;
  a5[7] = a4;
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A98618(uint64_t a1, uint64_t a2)
{
  return HandoffSessionToCompanionFlowStrategy.makeHandoffResponse(_:)(a1, a2);
}

uint64_t sub_1C2A9862C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C2A06AB0;
  return HandoffSessionToCompanionFlowStrategy.makeHandoffResponse()(a1, a2, a3);
}

uint64_t sub_1C2A98694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = v1;
  *(_QWORD *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_1C2A986AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *(_QWORD *)(v1 + 16) = v0 + 72;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927E8);
  *v2 = v0;
  v2[1] = sub_1C2A98738;
  OUTLINED_FUNCTION_57_13();
  return OUTLINED_FUNCTION_7_47();
}

uint64_t sub_1C2A98738()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A9878C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C28B99EC((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 80));
  v1 = OUTLINED_FUNCTION_115_7();
  return OUTLINED_FUNCTION_9_19(v1, v2, v3);
}

uint64_t HandoffSessionToCompanionFlowStrategy.makeHandoffResponse()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A987D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927E8);
  *v3 = v0;
  v3[1] = sub_1C2A98864;
  OUTLINED_FUNCTION_57_13();
  return OUTLINED_FUNCTION_7_47();
}

uint64_t sub_1C2A98864()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A988B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C28B99EC((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 72));
  v1 = OUTLINED_FUNCTION_115_7();
  return OUTLINED_FUNCTION_9_19(v1, v2, v3);
}

uint64_t sub_1C2A988E8()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A98914(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A98924()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)(v0 + 17));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
  v1 = qword_1ED7A4228;
  v0[15] = type metadata accessor for RefreshableDeviceState();
  v0[16] = &protocol witness table for RefreshableDeviceState;
  v0[12] = v1;
  OUTLINED_FUNCTION_38_0();
  v2 = (_QWORD *)swift_task_alloc();
  v0[23] = v2;
  *v2 = v0;
  v2[1] = sub_1C2A989F0;
  OUTLINED_FUNCTION_48_22();
  return sub_1C2A97778(v3, v4, v5, v6);
}

uint64_t sub_1C2A989F0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_87_0();
  *v2 = *v1;
  *(_QWORD *)(v3 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_353();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A98A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = OUTLINED_FUNCTION_71_0();
  sub_1C28B9A48(v2, v3);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_1C2A0B460(v0 + 16);
  *(_QWORD *)(v1 + 40) = v5;
  *(_QWORD *)(v1 + 48) = v4;
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A98AA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28CC838;
  return HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()(a1);
}

void sub_1C2A98AF0()
{
  OUTLINED_FUNCTION_67_12();
  OUTLINED_FUNCTION_77_15();
  OUTLINED_FUNCTION_84_3();
}

void HandoffSessionToCompanionFlow.__allocating_init(strategy:deviceState:outputPublisher:)()
{
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_24_3();
  HandoffSessionToCompanionFlow.init(strategy:deviceState:outputPublisher:)();
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A98B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12[2];
  _BYTE v13[40];

  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = &unk_1EF793230;
  *(_QWORD *)(v7 + 24) = a1;
  sub_1C2CFD350();
  sub_1C28B9A48(a2, (uint64_t)v13);
  sub_1C28B9A48(a3, (uint64_t)v12);
  type metadata accessor for OutputPublisherAsyncAdapter();
  v8 = swift_allocObject();
  sub_1C28B99EC(v12, v8 + 16);
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  v9 = swift_allocObject();
  v10 = sub_1C2A9AF74(v7, (uint64_t)v13, v8, v9);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_release();
  *(_QWORD *)(v3 + 16) = v10;
  return v3;
}

void HandoffSessionToCompanionFlow.init(strategy:deviceState:outputPublisher:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v3 = v2;
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v2, v6);
  OUTLINED_FUNCTION_58_19();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v3, v4);
  OUTLINED_FUNCTION_85_12();
  OUTLINED_FUNCTION_88_10();
  OUTLINED_FUNCTION_94_12();
  type metadata accessor for OutputPublisherAsyncAdapter();
  v7 = OUTLINED_FUNCTION_5_2();
  sub_1C28B99EC(&v10, v7 + 16);
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  v8 = OUTLINED_FUNCTION_5_2();
  v9 = sub_1C2A9AF74(v0, (uint64_t)&v11, v7, v8);
  OUTLINED_FUNCTION_72_13();
  OUTLINED_FUNCTION_76_4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  *(_QWORD *)(v1 + 16) = v9;
  OUTLINED_FUNCTION_1();
}

void sub_1C2A98D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_2();
  v0 = OUTLINED_FUNCTION_24_3();
  sub_1C2A9A908(v0, v1, v2);
  OUTLINED_FUNCTION_18();
}

void HandoffSessionToCompanionFlow.__allocating_init(strategy:deviceState:outputPublisherAsync:)()
{
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_24_3();
  HandoffSessionToCompanionFlow.init(strategy:deviceState:outputPublisherAsync:)();
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A98D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[40];

  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = &unk_1EF793230;
  *(_QWORD *)(v7 + 24) = a1;
  sub_1C2CFD350();
  sub_1C28B9A48(a2, (uint64_t)v20);
  sub_1C28B9A48(a3, (uint64_t)v17);
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  v8 = swift_allocObject();
  v9 = v18;
  v10 = v19;
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
  MEMORY[0x1E0C80A78](v11, v11);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v14 + 16))(v13);
  v15 = sub_1C2A9B054(v7, (uint64_t)v20, (uint64_t)v13, v8, v9, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_release();
  *(_QWORD *)(v3 + 16) = v15;
  return v3;
}

void HandoffSessionToCompanionFlow.init(strategy:deviceState:outputPublisherAsync:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v3 = v2;
  v16 = v2;
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v2, v6);
  OUTLINED_FUNCTION_58_19();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v3, v4);
  OUTLINED_FUNCTION_85_12();
  OUTLINED_FUNCTION_88_10();
  OUTLINED_FUNCTION_94_12();
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  v7 = OUTLINED_FUNCTION_5_2();
  v8 = v18;
  v9 = v19;
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
  MEMORY[0x1E0C80A78](v10, v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  v14 = sub_1C2A9B054(v0, (uint64_t)&v20, (uint64_t)v12, v7, v8, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  OUTLINED_FUNCTION_72_13();
  OUTLINED_FUNCTION_76_4(v16, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  *(_QWORD *)(v1 + 16) = v14;
  OUTLINED_FUNCTION_1();
}

void sub_1C2A98FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for HandoffSessionToCompanionFlow(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  OUTLINED_FUNCTION_149_1();
  Flow.deferToExecuteAsync(_:)();
}

uint64_t sub_1C2A99044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A99054()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return sub_1C2A99404(v2);
}

uint64_t HandoffSessionToCompanionFlow.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t HandoffSessionToCompanionFlow.__deallocating_deinit()
{
  HandoffSessionToCompanionFlow.deinit();
  return swift_deallocClassInstance();
}

void sub_1C2A990DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2A98FE8(a1, a2, a3, a4);
}

uint64_t sub_1C2A990FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28CCD60;
  return sub_1C2A99044(a1);
}

void sub_1C2A99150(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1C2A98AF0();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1C2A99180(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1C2A991F4();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1C2A991B0(uint64_t a1)
{
  id v1;
  char v2;

  v1 = *(id *)a1;
  v2 = *(_BYTE *)(a1 + 8);
  sub_1C2964BEC(*(id *)a1, v2);
  sub_1C2A99214((uint64_t)v1, v2);
}

void sub_1C2A991F4()
{
  OUTLINED_FUNCTION_67_12();
  OUTLINED_FUNCTION_77_15();
  OUTLINED_FUNCTION_84_3();
}

void sub_1C2A99214(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v5;
  char v6;

  swift_beginAccess();
  v5 = *(void **)(v2 + 16);
  v6 = *(_BYTE *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  sub_1C2987570(v5, v6);
}

void sub_1C2A99270()
{
  swift_beginAccess();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A992A8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void HandoffSessionToCompanionFlowAsync.init<A>(strategy:deviceState:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;

  OUTLINED_FUNCTION_9();
  a19 = v21;
  a20 = v22;
  v23 = v20;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v30, v28);
  v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  OUTLINED_FUNCTION_104_8((uint64_t)v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16));
  sub_1C2A993C4();
  *(_QWORD *)(v20 + 32) = v35;
  sub_1C28B9A48(v29, v20 + 40);
  sub_1C28B9A48(v27, v20 + 80);
  sub_1C29A6B38();
  v36 = OUTLINED_FUNCTION_14();
  *v37 = 1;
  OUTLINED_FUNCTION_72_13();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v25);
  *(_QWORD *)(v23 + 16) = v36;
  *(_BYTE *)(v23 + 24) = 1;
  OUTLINED_FUNCTION_1();
}

void sub_1C2A993C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_2();
  v0 = OUTLINED_FUNCTION_24_3();
  sub_1C2A9A784(v0, v1, v2);
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2A99404(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[34] = a1;
  v2[35] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v2[36] = OUTLINED_FUNCTION_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7CC8);
  v2[37] = OUTLINED_FUNCTION_7();
  v2[38] = type metadata accessor for AceOutput();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v3 = sub_1C2CFDDA0();
  v2[41] = v3;
  v2[42] = *(_QWORD *)(v3 - 8);
  v2[43] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A994B0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v1;
  v2 = OUTLINED_FUNCTION_10_0(v1);
  return OUTLINED_FUNCTION_46_15(v2);
}

uint64_t sub_1C2A994F8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_87_0();
  *v2 = *v1;
  *(_QWORD *)(v3 + 360) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A99548()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (qword_1ED7A84D8 != -1)
    swift_once();
  v0[46] = qword_1ED7AA130;
  type metadata accessor for SiriKitEvent(0);
  sub_1C2CFD350();
  SiriKitEvent.__allocating_init(activityType:taskType:statusReason:_:)();
  v0[47] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[48] = v2;
  *v2 = v0;
  v2[1] = sub_1C2A9962C;
  v3 = OUTLINED_FUNCTION_111_8();
  return sub_1C28E1C24(v3);
}

uint64_t sub_1C2A9962C()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  swift_release();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2A99668()
{
  os_log_type_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  id v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;

  swift_release();
  v2 = *(void **)(v1 + 72);
  if (v2)
  {
    v82 = v1 + 16;
    v3 = qword_1ED7AA040;
    v4 = v2;
    if (v3 != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_118();
    v6 = OUTLINED_FUNCTION_23_1(v5, (uint64_t)qword_1ED7AA1B0);
    v7 = sub_1C2CFE2A4();
    if (OUTLINED_FUNCTION_20_0(v7))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_87(&dword_1C28B6000, v6, v0, "HandoffSessionToCompanionFlow embedding RSKE command into handoff continuity data");
      OUTLINED_FUNCTION_11_0();
    }

    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v8, sel_encodeObject_forKey_, v4, *MEMORY[0x1E0CB2CD0]);
    v9 = objc_msgSend(v8, sel_encodedData);
    v10 = sub_1C2CFBBD4();
    v12 = v11;

    OUTLINED_FUNCTION_103_9(v13, (unint64_t *)&qword_1ED7A6160);
    v14 = sub_1C2CFE3F4();

    goto LABEL_9;
  }
  v15 = OUTLINED_FUNCTION_65_13((_QWORD *)(*(_QWORD *)(v1 + 280) + 40));
  if (v16)
  {
    LOBYTE(v8) = v15;
    v82 = v1 + 16;
    v17 = *(_QWORD *)(v1 + 336);
    v18 = *(_QWORD *)(v1 + 344);
    v19 = *(_QWORD *)(v1 + 328);
    sub_1C2CFDD94();
    v10 = sub_1C2CFDD64();
    v12 = v20;
    OUTLINED_FUNCTION_32_0();
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    OUTLINED_FUNCTION_103_9(v21, (unint64_t *)&qword_1ED7A6160);
    v14 = sub_1C2CFE3F4();
LABEL_9:
    v79 = v14;
    v80 = v12;
    *(_QWORD *)(v1 + 392) = v14;
    *(_QWORD *)(v1 + 400) = v12;
    *(_QWORD *)(v1 + 408) = v10;
    v22 = *(_QWORD *)(v1 + 88);
    if (v22)
    {
      v23 = *(_QWORD *)(v1 + 80);
      v24 = qword_1ED7AA040;
      swift_bridgeObjectRetain();
      if (v24 != -1)
        swift_once();
      v25 = OUTLINED_FUNCTION_118();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ED7AA1B0);
      swift_bridgeObjectRetain_n();
      v26 = sub_1C2CFD86C();
      v27 = sub_1C2CFE2A4();
      if (OUTLINED_FUNCTION_20_0(v27))
      {
        v28 = (_DWORD *)OUTLINED_FUNCTION_6_0();
        v83 = OUTLINED_FUNCTION_6_0();
        *v28 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v1 + 264) = sub_1C28BB120(v23, v22, &v83);
        sub_1C2CFE4D8();
        swift_bridgeObjectRelease_n();
        OUTLINED_FUNCTION_96_10(&dword_1C28B6000, v26, (os_log_type_t)v8, "HandoffSessionToCompanionFlow using target device override: %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }

      v31 = swift_bridgeObjectRelease_n();
    }
    else
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v1 + 280) + 40), *(_QWORD *)(*(_QWORD *)(v1 + 280) + 64));
      v29 = OUTLINED_FUNCTION_71_0();
      v31 = sub_1C2A1A6C4(v29, v30);
      v23 = v31;
      v22 = v32;
    }
    v33 = *(_QWORD *)(v1 + 304);
    OUTLINED_FUNCTION_103_9(v31, (unint64_t *)&qword_1EF78F1A8);
    v34 = *(_QWORD *)(v1 + 56);
    v35 = *(_QWORD *)(v1 + 64);
    swift_bridgeObjectRetain();
    v36 = sub_1C2BFA4E0(v34, v35, v10, v80, v23, v22);
    *(_QWORD *)(v1 + 416) = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setIsSiriXRequest_, v79);
    *(_QWORD *)(v1 + 240) = MEMORY[0x1E0DEE9D8];
    sub_1C28B9A48(v82, v1 + 176);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
    if (swift_dynamicCast())
    {
      v39 = *(_QWORD *)(v1 + 320);
      __swift_storeEnumTagSinglePayload(*(_QWORD *)(v1 + 296), 0, 1, *(_QWORD *)(v1 + 304));
      v40 = OUTLINED_FUNCTION_71_0();
      sub_1C28E1168(v40, v41);
      swift_bridgeObjectRetain();
      sub_1C2905204();
      sub_1C28E0610(v39);
      v42 = (_QWORD *)&unk_1ED7AA000;
    }
    else
    {
      v43 = *(_QWORD *)(v1 + 296);
      OUTLINED_FUNCTION_30_0(v43, v37, v38, *(_QWORD *)(v1 + 304));
      sub_1C28B9D6C(v43, &qword_1ED7A7CC8);
      v42 = &unk_1ED7AA000;
      if (qword_1ED7AA040 != -1)
        swift_once();
      v44 = OUTLINED_FUNCTION_118();
      v45 = OUTLINED_FUNCTION_23_1(v44, (uint64_t)qword_1ED7AA1B0);
      v46 = sub_1C2CFE2B0();
      if (OUTLINED_FUNCTION_20_0(v46))
      {
        v47 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_WORD *)v47 = 0;
        _os_log_impl(&dword_1C28B6000, v45, (os_log_type_t)v33, "Response Output is not of type AceOutput so we cannot append the prompt to the handoff command.", v47, 2u);
        OUTLINED_FUNCTION_11_0();
      }

    }
    v48 = v36;
    MEMORY[0x1C3BC8A44]();
    if (*(_QWORD *)((*(_QWORD *)(v1 + 240) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v1 + 240) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1C2CFDFEC();
    OUTLINED_FUNCTION_149_1();
    sub_1C2CFE040();
    sub_1C2CFDFC8();
    if (v42[8] != -1)
      swift_once();
    v49 = OUTLINED_FUNCTION_118();
    v50 = OUTLINED_FUNCTION_23_1(v49, (uint64_t)qword_1ED7AA1B0);
    v51 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v50, v51))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_87(&dword_1C28B6000, v50, v51, "HandoffSession publishing output");
      OUTLINED_FUNCTION_11_0();
    }
    v53 = *(_QWORD *)(v1 + 304);
    v52 = *(_QWORD *)(v1 + 312);
    v54 = *(_QWORD **)(v1 + 280);
    v55 = *(_QWORD *)(v1 + 288);

    v56 = v54 + 10;
    v57 = v54[13];
    v58 = v54[14];
    __swift_project_boxed_opaque_existential_1(v56, v57);
    v59 = *(_QWORD *)(v1 + 240);
    v60 = type metadata accessor for NLContextUpdate();
    *(_OWORD *)(v1 + 112) = 0u;
    *(_QWORD *)(v1 + 128) = 0;
    *(_OWORD *)(v1 + 96) = 0u;
    OUTLINED_FUNCTION_30_0(v55, v61, v62, v60);
    *(_QWORD *)(v1 + 160) = v53;
    *(_QWORD *)(v1 + 168) = &protocol witness table for AceOutput;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v1 + 136));
    *(_OWORD *)(v52 + 104) = 0u;
    *(_QWORD *)(v52 + 120) = 0;
    *(_OWORD *)(v52 + 88) = 0u;
    sub_1C28DF608(v1 + 96, v52 + 88);
    *(_BYTE *)(v52 + *(int *)(v53 + 32)) = 0;
    *(_QWORD *)v52 = v59;
    sub_1C293D290(v55, v52 + *(int *)(v53 + 28));
    *(_OWORD *)(v52 + 8) = 0u;
    *(_OWORD *)(v52 + 24) = 0u;
    *(_OWORD *)(v52 + 40) = 0u;
    *(_OWORD *)(v52 + 56) = 0u;
    *(_QWORD *)(v52 + 72) = 0;
    *(_BYTE *)(v52 + 80) = 3;
    sub_1C28E1168(v52, (uint64_t)boxed_opaque_existential_0);
    v81 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v58 + 8) + *(_QWORD *)(v58 + 8));
    v64 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 424) = v64;
    *v64 = v1;
    v64[1] = sub_1C2A99EA0;
    v65 = OUTLINED_FUNCTION_111_8();
    return v81(v65, v57, v58);
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v67 = OUTLINED_FUNCTION_118();
  v68 = OUTLINED_FUNCTION_23_1(v67, (uint64_t)qword_1ED7AA1B0);
  v69 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v68, v69))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
    OUTLINED_FUNCTION_87(&dword_1C28B6000, v68, v69, "HandoffSessionToCompanionFlow cannot perform handoff because there is no ContinuityID present on DeviceState. Will redirect this request to the server, which may cause issues in multi-turn requests.");
    OUTLINED_FUNCTION_11_0();
  }
  v70 = *(_QWORD *)(v1 + 272);

  sub_1C29A6B38();
  v71 = OUTLINED_FUNCTION_14();
  *v72 = 0;
  OUTLINED_FUNCTION_109_7(v71);
  sub_1C2A0B460(v1 + 16);
  v73 = type metadata accessor for ExecuteResponse(0);
  v74 = v70 + *(int *)(v73 + 36);
  v75 = type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_30_0(v74, v76, v77, v75);
  *(_BYTE *)v70 = 3;
  *(_QWORD *)(v70 + 8) = 0;
  *(_QWORD *)(v70 + 24) = 0;
  *(_BYTE *)(v70 + 16) = 0;
  *(_WORD *)(v70 + 32) = 256;
  *(_BYTE *)(v70 + 34) = 0;
  v78 = (_OWORD *)(v70 + *(int *)(v73 + 40));
  *v78 = 0u;
  v78[1] = 0u;
  OUTLINED_FUNCTION_19_36();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C2A99EA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 432) = v1;
  swift_task_dealloc();
  if (!v1)
    __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A99EF4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  OUTLINED_FUNCTION_176();
  v1 = *(void **)(v0 + 416);
  v2 = *(void **)(v0 + 392);
  sub_1C2A99214(0, 0);

  OUTLINED_FUNCTION_108_11();
  sub_1C2A0B460(v0 + 16);
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_19_36();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2A99F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_72_1();
  v1 = *(_QWORD *)(v0 + 360);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_195();
  v3 = (void *)sub_1C2CFD86C();
  v4 = sub_1C2CFE2B0();
  if (OUTLINED_FUNCTION_14_7(v4))
  {
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_35_24(4.8149e-34);
    v5 = OUTLINED_FUNCTION_93_9();
    v9 = OUTLINED_FUNCTION_2_1(v5, v6, v7, v8);
    OUTLINED_FUNCTION_44_19(v9);
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_68_15(&dword_1C28B6000, v10, v11, "Unexpected error executing handoff: %s");
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_109_7(v1);
  OUTLINED_FUNCTION_44_5();
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_19_36();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_37(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A9A0BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_72_1();
  v1 = *(void **)(v0 + 392);

  OUTLINED_FUNCTION_108_11();
  sub_1C2A0B460(v0 + 16);
  OUTLINED_FUNCTION_353();
  v2 = *(_QWORD *)(v0 + 432);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_195();
  v4 = (void *)sub_1C2CFD86C();
  v5 = sub_1C2CFE2B0();
  if (OUTLINED_FUNCTION_14_7(v5))
  {
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_35_24(4.8149e-34);
    v6 = OUTLINED_FUNCTION_93_9();
    v10 = OUTLINED_FUNCTION_2_1(v6, v7, v8, v9);
    OUTLINED_FUNCTION_44_19(v10);
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_68_15(&dword_1C28B6000, v11, v12, "Unexpected error executing handoff: %s");
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_109_7(v2);
  OUTLINED_FUNCTION_44_5();
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_19_36();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_37(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C2A9A228()
{
  sub_1C2CFEAC0();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2A9A248()
{
  sub_1C2A9A228();
}

uint64_t HandoffSessionToCompanionFlowAsync.deinit()
{
  uint64_t v0;

  sub_1C2987570(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return v0;
}

uint64_t HandoffSessionToCompanionFlowAsync.__deallocating_deinit()
{
  HandoffSessionToCompanionFlowAsync.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A9A2A8()
{
  return sub_1C2A99400();
}

uint64_t sub_1C2A9A2C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_42_17();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_10_0(v1);
  return sub_1C2A99404(v2);
}

void sub_1C2A9A30C(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1C2A991F4();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_1_0();
}

void static SimpleHandoffSessionToCompanionFlowHelper.makeHandoffFlow(deviceState:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  sub_1C2A9A350(a1, a2, (void (*)(uint64_t, _BYTE *, _BYTE *))sub_1C2A98B50);
}

void static SimpleHandoffSessionToCompanionFlowHelper.makeHandoffFlow(deviceState:outputPublisherAsync:)(uint64_t a1, uint64_t a2)
{
  sub_1C2A9A350(a1, a2, (void (*)(uint64_t, _BYTE *, _BYTE *))sub_1C2A98D8C);
}

void sub_1C2A9A350(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _BYTE *, _BYTE *))
{
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[40];
  _BYTE v8[40];

  type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy();
  v5 = OUTLINED_FUNCTION_5_2();
  sub_1C28B9A48(a1, (uint64_t)v8);
  OUTLINED_FUNCTION_113_5(v6, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF792D28);
  OUTLINED_FUNCTION_5_2();
  a3(v5, v8, v7);
  OUTLINED_FUNCTION_76_1();
}

uint64_t static SimpleHandoffSessionToCompanionFlowHelper.makeServerOrLocalHandoffFlowAsync(runSiriKitExecutorProvider:deviceState:outputPublisher:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[5];
  __int128 v15[2];

  OUTLINED_FUNCTION_89_10();
  sub_1C28B9A48(v2, (uint64_t)v15);
  type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync();
  v3 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v0;
  v4 = sub_1C28B99EC(v15, v3 + 32);
  OUTLINED_FUNCTION_113_5(v4, (uint64_t)v15);
  OUTLINED_FUNCTION_110_8(v5, v6, v7, v8, v9, v10, v11, v12, v14[0]);
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  OUTLINED_FUNCTION_5_2();
  sub_1C2CFD350();
  return sub_1C29A6320(v3, (uint64_t)v15, (uint64_t)v14);
}

void SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.__allocating_init(runSiriKitExecutorProvider:deviceState:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v6;

  OUTLINED_FUNCTION_111_8();
  v6 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1C28B99EC(a3, v6 + 32);
  OUTLINED_FUNCTION_18();
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy.deinit()
{
  uint64_t v0;

  return v0;
}

void sub_1C2A9A4A4(uint64_t a1)
{
  sub_1C2A8EED4(a1);
}

uint64_t sub_1C2A9A4C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF793220 + dword_1EF793220);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C2A9B980;
  return v5(a1);
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A9A548()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_42_17();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_26_2(v1);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.init(runSiriKitExecutorProvider:deviceState:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  sub_1C28B99EC(a3, v3 + 32);
  return v3;
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.makeHandoffResponse()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A9A5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = v1 + 32;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v5;
  v6 = OUTLINED_FUNCTION_76_3(v5);
  return sub_1C2A97778(v6, v2, v3, v4);
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13_1();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.__deallocating_deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13_1();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A9A668()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_42_17();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_10_0(v1);
  return SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.makeHandoffResponse()(v2);
}

uint64_t sub_1C2A9A6AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1C2A9A6F8;
  return static NotificationTemplates.genericHandoffNotification()();
}

uint64_t sub_1C2A9A6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v8;

  v6 = *v3;
  v8 = *v3;
  OUTLINED_FUNCTION_138(&v8);
  swift_task_dealloc();
  if (v2)
    return OUTLINED_FUNCTION_10_5((uint64_t (*)(void))v3[1]);
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a1;
  OUTLINED_FUNCTION_36_2();
  return swift_task_switch();
}

uint64_t sub_1C2A9A76C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD **)(v0 + 16);
  *v2 = *(_QWORD *)(v0 + 40);
  v2[1] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C2A9A784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);

  v4 = sub_1C2A9A7CC(a1, a2, a3);
  v6 = v5;
  v7 = OUTLINED_FUNCTION_149_1();
  v8(v7);
  *(_QWORD *)(v3 + 16) = v4;
  *(_QWORD *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_8_0();
}

void *sub_1C2A9A7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1, a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return &unk_1EF793248;
}

uint64_t sub_1C2A9A888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_1C28CCD60;
  return v10(a1, a3, a4);
}

uint64_t sub_1C2A9A908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  OUTLINED_FUNCTION_104_8(v8 + v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  *(_QWORD *)(v3 + 16) = &unk_1EF793258;
  *(_QWORD *)(v3 + 24) = v8;
  return v3;
}

uint64_t sub_1C2A9A990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a2;
  *(_QWORD *)(v2 + 120) = a1;
  return swift_task_switch();
}

uint64_t sub_1C2A9A9A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v1;
  *(_QWORD *)(v1 + 16) = v0 + 112;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927E8);
  *v2 = v0;
  v2[1] = sub_1C2A9AA24;
  OUTLINED_FUNCTION_15_39();
  return OUTLINED_FUNCTION_7_47();
}

uint64_t sub_1C2A9AA24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 144) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A9AA78()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_22((__int128 *)(v0 + 16));
  return OUTLINED_FUNCTION_10_5(v1);
}

uint64_t sub_1C2A9AAB0()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A9AADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2A9AAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 128);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927E8);
  *v3 = v0;
  v3[1] = sub_1C2A9AB7C;
  OUTLINED_FUNCTION_15_39();
  return OUTLINED_FUNCTION_7_47();
}

uint64_t sub_1C2A9AB7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 160) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A9ABD0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_22((__int128 *)(v0 + 16));
  return OUTLINED_FUNCTION_10_5(v1);
}

uint64_t sub_1C2A9AC08()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C2A9AC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_9();
  a19 = v22;
  a20 = v23;
  OUTLINED_FUNCTION_89_10();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  MEMORY[0x1E0C80A78](v24, v27);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v24);
  v28 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v29 = OUTLINED_FUNCTION_99_9();
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v29 + v28, (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
  sub_1C2A8EED4(v20);
  swift_release();
  OUTLINED_FUNCTION_1();
}

void sub_1C2A9ACEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_9();
  v11 = v3;
  OUTLINED_FUNCTION_97_10();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = OUTLINED_FUNCTION_99_9();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v11, v9, v1, v0);
  swift_release();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2A9ADBC(uint64_t a1)
{
  __int128 v2;
  char v3;

  sub_1C2A9B6F8(a1, (uint64_t)&v2);
  if ((v3 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
    return sub_1C2CFE0C4();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
    return sub_1C2CFE0D0();
  }
}

uint64_t sub_1C2A9AE44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2A9AE54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)(v0 + 24) + 16)
                                       + *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return v4(v2);
}

uint64_t sub_1C2A9AEAC()
{
  OUTLINED_FUNCTION_13_1();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A9AECC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_42_17();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_10_0(v1);
  return OUTLINED_FUNCTION_46_15(v2);
}

uint64_t sub_1C2A9AF08()
{
  OUTLINED_FUNCTION_13_1();
  return swift_deallocObject();
}

void sub_1C2A9AF28()
{
  sub_1C2A9ACEC();
}

uint64_t type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync()
{
  return objc_opt_self();
}

uint64_t sub_1C2A9AF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD v11[5];

  v11[3] = type metadata accessor for OutputPublisherAsyncAdapter();
  v11[4] = &protocol witness table for OutputPublisherAsyncAdapter;
  v11[0] = a3;
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  swift_allocObject();
  v7 = sub_1C2CFD350();
  *(_QWORD *)(a4 + 32) = sub_1C29A63E4(v7);
  sub_1C28B9A48(a2, a4 + 40);
  sub_1C28B9A48((uint64_t)v11, a4 + 80);
  sub_1C29A6B38();
  v8 = swift_allocError();
  *v9 = 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_release();
  *(_QWORD *)(a4 + 16) = v8;
  *(_BYTE *)(a4 + 24) = 1;
  return a4;
}

uint64_t sub_1C2A9B054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v15[5];

  v15[3] = a5;
  v15[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_0, a3, a5);
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  swift_allocObject();
  v11 = sub_1C2CFD350();
  *(_QWORD *)(a4 + 32) = sub_1C29A63E4(v11);
  sub_1C28B9A48(a2, a4 + 40);
  sub_1C28B9A48((uint64_t)v15, a4 + 80);
  sub_1C29A6B38();
  v12 = swift_allocError();
  *v13 = 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_release();
  *(_QWORD *)(a4 + 16) = v12;
  *(_BYTE *)(a4 + 24) = 1;
  return a4;
}

uint64_t type metadata accessor for HandoffSessionToCompanionFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HandoffSessionToCompanionFlow);
}

uint64_t type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync()
{
  return objc_opt_self();
}

uint64_t destroy for HandoffResponse(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HandoffResponse(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = *(void **)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  v8 = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for HandoffResponse(uint64_t *a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  id v6;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[7];
  v5 = (void *)a2[7];
  a1[7] = (uint64_t)v5;
  v6 = v5;

  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HandoffResponse(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for HandoffResponse()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowStrategy.makeHandoffResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowStrategy.makeHandoffResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t method lookup function for HandoffSessionToCompanionFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.exitValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.__allocating_init(strategy:deviceState:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.__allocating_init(strategy:deviceState:outputPublisherAsync:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_26_2(v1);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t method lookup function for HandoffSessionToCompanionFlowAsync()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.exitValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.exitValue.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 120))(a1, a2 & 1);
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.__allocating_init<A>(strategy:deviceState:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_26_2(v1);
  return OUTLINED_FUNCTION_259(v2, v3);
}

void type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t method lookup function for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.__allocating_init(runSiriKitExecutorProvider:deviceState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C2A9B538(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2A9B584 + 4 * byte_1C2D0D045[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2A9B5B8 + 4 * byte_1C2D0D040[v4]))();
}

uint64_t sub_1C2A9B5B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A9B5C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2A9B5C8);
  return result;
}

uint64_t sub_1C2A9B5D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2A9B5DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2A9B5E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2A9B5E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for HandoffSessionToCompanionFlowAsync.HandoffErrors()
{
  OUTLINED_FUNCTION_22_2();
}

unint64_t sub_1C2A9B604()
{
  unint64_t result;

  result = qword_1EF793200;
  if (!qword_1EF793200)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D36C, &unk_1E7C866E8);
    atomic_store(result, (unint64_t *)&qword_1EF793200);
  }
  return result;
}

uint64_t sub_1C2A9B640(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *a2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28CCD60;
  return sub_1C2A9A990(a1, v4);
}

#error "1C2A9B6B4: call analysis failed (funcsize=8)"

#error "1C2A9B6DC: call analysis failed (funcsize=8)"

uint64_t sub_1C2A9B6E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A9B6C0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C2A9B6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2A9B740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1C2A9B7B0;
  return ((uint64_t (*)(uint64_t, uint64_t *))((char *)&dword_1EF793228 + dword_1EF793228))(a1, (uint64_t *)(v2 + 16));
}

uint64_t sub_1C2A9B7B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A9B7DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A9B698(a1, *(_QWORD *)(v1 + 16));
}

void sub_1C2A9B7E8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
  sub_1C2A9ADBC(a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2A9B82C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_53_17();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_62_18(v1);
  return sub_1C2A9A888(v2, v3, v4, v5);
}

uint64_t objectdestroy_54Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_2(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8));
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2A9B8B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_53_17();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_62_18(v1);
  return sub_1C2A9AADC(v2, v3, v4, v5);
}

void sub_1C2A9B900()
{
  sub_1C2A9ACEC();
}

uint64_t objectdestroy_39Tm()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7927F0);
  OUTLINED_FUNCTION_11_2(*(_QWORD *)(v0 - 8));
  return OUTLINED_FUNCTION_17();
}

uint64_t OUTLINED_FUNCTION_7_47()
{
  return sub_1C2CFEA24();
}

uint64_t OUTLINED_FUNCTION_15_39()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_36()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_21_35()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_23_37()
{
  return swift_asyncLet_finish();
}

uint64_t OUTLINED_FUNCTION_25_32()
{
  return swift_asyncLet_finish();
}

uint64_t OUTLINED_FUNCTION_26_30()
{
  __int128 *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 1272);
  v4 = *(_QWORD *)(v1 + 1280);
  v2[8] = 0;
  v2[9] = 0;
  sub_1C28B99EC(v0, (uint64_t)v2);
  v2[5] = v3;
  v2[6] = v4;
  v2[7] = 0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_27_22(__int128 *a1)
{
  _QWORD *v1;
  __int128 *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3[7];
  v5 = v3[8];
  sub_1C28B99EC(a1, (uint64_t)v2);
  sub_1C28B99EC(v2, (uint64_t)v1);
  v1[8] = 0;
  v1[9] = 0;
  v1[5] = v4;
  v1[6] = v5;
  v1[7] = 0;
  return v3[1];
}

uint64_t OUTLINED_FUNCTION_33_19()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_26()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_46_15(uint64_t a1)
{
  return sub_1C2A9AE44(a1);
}

uint64_t OUTLINED_FUNCTION_54_23()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t OUTLINED_FUNCTION_57_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_58_19()
{
  return type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
}

uint64_t OUTLINED_FUNCTION_59_20()
{
  uint64_t v0;

  return sub_1C28E0610(*(_QWORD *)(v0 + 1432));
}

void OUTLINED_FUNCTION_61_12()
{
  uint64_t v0;

  sub_1C28C72CC(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_63_13(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_65_13(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 160))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_67_12()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_85_12()
{
  sub_1C2A98D14();
}

void OUTLINED_FUNCTION_88_10()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C28B9A48(v0, v1 - 120);
}

uint64_t OUTLINED_FUNCTION_90_10()
{
  uint64_t v0;

  return sub_1C28E0610(*(_QWORD *)(v0 + 1432));
}

void OUTLINED_FUNCTION_94_12()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C28B9A48(v0, v1 - 160);
}

void OUTLINED_FUNCTION_96_10(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_98_9@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  return sub_1C28B99EC(a1, a2);
}

void OUTLINED_FUNCTION_103_9(uint64_t a1, unint64_t *a2)
{
  sub_1C2934360(0, a2);
}

uint64_t OUTLINED_FUNCTION_104_8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_108_11()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1C28EC278(v0, v1);
}

void OUTLINED_FUNCTION_109_7(uint64_t a1)
{
  sub_1C2A99214(a1, 1);
}

uint64_t OUTLINED_FUNCTION_111_8()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_113_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C28B9A48(v2, a2);
}

uint64_t OUTLINED_FUNCTION_115_7()
{
  uint64_t v0;

  return v0;
}

uint64_t HandoffSessionToCompanionFlowFrame.namespace.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2A9BC60(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 280) = a1;
  return swift_bridgeObjectRelease();
}

void HandoffSessionToCompanionFlowFrame.__allocating_init(handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:aceServiceInvoker:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5, __int128 *a6)
{
  OUTLINED_FUNCTION_5_2();
  HandoffSessionToCompanionFlowFrame.init(handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:aceServiceInvoker:)(a1, a2, a3, a4, a5, a6);
  OUTLINED_FUNCTION_11();
}

uint64_t HandoffSessionToCompanionFlowFrame.init(handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:aceServiceInvoker:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5, __int128 *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v7 = v6;
  v10 = *a1;
  v11 = a1[5];
  v12 = a1[8];
  v13 = *a2;
  v14 = a2[5];
  *(_QWORD *)(v6 + 16) = 0xD00000000000001DLL;
  *(_QWORD *)(v6 + 24) = 0x80000001C2D2B730;
  v15 = a2[8];
  *(_QWORD *)(v6 + 280) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = v10;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)(a1 + 3);
  *(_QWORD *)(v6 + 88) = v11;
  *(_OWORD *)(v6 + 96) = *((_OWORD *)a1 + 3);
  *(_QWORD *)(v6 + 112) = v12;
  *(_QWORD *)(v6 + 120) = v13;
  v16 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(v6 + 128) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(v6 + 144) = v16;
  *(_QWORD *)(v6 + 160) = v14;
  *(_OWORD *)(v6 + 168) = *((_OWORD *)a2 + 3);
  *(_QWORD *)(v6 + 184) = v15;
  *(_QWORD *)(v6 + 32) = a3;
  v17 = a5[3];
  v18 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 96))(v17, v18);
  type metadata accessor for ViewFactory();
  v20 = OUTLINED_FUNCTION_5_2();
  *(_BYTE *)(v20 + 16) = v19 & 1;
  *(_QWORD *)(v7 + 192) = v20;
  sub_1C28B9A04((uint64_t)a5, v7 + 200);
  sub_1C28B99EC(a6, v7 + 240);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a5);
  return v7;
}

uint64_t sub_1C2A9BDF8(uint64_t a1, _QWORD *a2, void (*a3)(uint64_t *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[9];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v3 = a2[24];
  v4 = a2[7];
  v5 = a2[8];
  v6 = a2[9];
  v7 = a2[10];
  v8 = a2[11];
  v10 = a2[12];
  v9 = a2[13];
  v28 = a2[6];
  v29 = v4;
  v24 = v3;
  v30 = v5;
  v31 = v6;
  v32 = v7;
  v33 = v8;
  v34 = v10;
  v35 = v9;
  v11 = a2[15];
  v36 = a2[14];
  v15 = a2[16];
  v16 = a2[17];
  v12 = a2[19];
  v13 = a2[20];
  v17 = a2[18];
  v18 = a2[22];
  v19 = a2[21];
  v20 = a2[23];
  v27[0] = v11;
  v27[1] = v15;
  v27[2] = v16;
  v27[3] = v17;
  v27[4] = v12;
  v27[5] = v13;
  v27[6] = v19;
  v27[7] = v18;
  v27[8] = v20;
  v21 = a2[4];
  v22 = a2[5];
  v23 = a2 + 25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C28F8E6C(v10, v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C28F8E6C(v19, v18);
  swift_bridgeObjectRetain();
  v25 = static HandoffToCompanionAceCommands.buildAceCommands(viewFactory:handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:)(v24, (uint64_t)&v28, (uint64_t)v27, v21, v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v19, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v10, v9);
  swift_bridgeObjectRelease();
  sub_1C2A9BC60(v25);
  v28 = 0;
  LOBYTE(v29) = 0;
  a3(&v28);
  return swift_release();
}

uint64_t sub_1C2A9C000(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[9];
  _QWORD v27[10];

  v3 = v2[24];
  v4 = v2[7];
  v5 = v2[8];
  v6 = v2[9];
  v7 = v2[10];
  v8 = v2[11];
  v10 = v2[12];
  v9 = v2[13];
  v27[0] = v2[6];
  v27[1] = v4;
  v23 = v3;
  v27[2] = v5;
  v27[3] = v6;
  v27[4] = v7;
  v27[5] = v8;
  v27[6] = v10;
  v27[7] = v9;
  v11 = v2[15];
  v27[8] = v2[14];
  v15 = v2[16];
  v16 = v2[17];
  v12 = v2[19];
  v13 = v2[20];
  v17 = v2[18];
  v18 = v2[22];
  v19 = v2[21];
  v20 = v2[23];
  v26[0] = v11;
  v26[1] = v15;
  v26[2] = v16;
  v26[3] = v17;
  v26[4] = v12;
  v26[5] = v13;
  v26[6] = v19;
  v26[7] = v18;
  v26[8] = v20;
  v21 = v2[4];
  v22 = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_11_1();
  sub_1C28F8E6C(v10, v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_11_1();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C28F8E6C(v19, v18);
  swift_bridgeObjectRetain();
  v24 = static HandoffToCompanionAceCommands.buildAceCommands(viewFactory:handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:)(v23, (uint64_t)v27, (uint64_t)v26, v21, v22, v2 + 25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_70();
  sub_1C28F90E8(v19, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_254();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8();
  sub_1C28F90E8(v10, v9);
  swift_bridgeObjectRelease();
  sub_1C2A9BC60(v24);
  return a2(0, 0);
}

uint64_t static HandoffToCompanionAceCommands.buildAceCommands(viewFactory:handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD **)(a3 + 40);
  v24 = *(_QWORD *)a2;
  v12 = *(_OWORD *)(a2 + 24);
  v25 = *(_OWORD *)(a2 + 8);
  v26 = v12;
  v27 = v9;
  v28 = *(_OWORD *)(a2 + 48);
  v29 = v10;
  v13 = (*(uint64_t (**)(uint64_t *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)a1 + 120))(&v24, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], 0, 0, 0);
  if (v11[2])
  {
    v15 = v11[4];
    v14 = v11[5];
    OUTLINED_FUNCTION_3_1();
  }
  else
  {
    v15 = 0;
    v14 = 0xE000000000000000;
  }
  sub_1C2A9C914();
  v16 = a6[3];
  v17 = a6[4];
  __swift_project_boxed_opaque_existential_1(a6, v16);
  v18 = sub_1C2A1A6C4(v16, v17);
  v20 = sub_1C2BFA774(v15, v14, a4, a5, v18, v19);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_254();
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D88180]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
  v22 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v22 + 16) = xmmword_1C2D0D3F0;
  *(_QWORD *)(v22 + 32) = v13;
  *(_QWORD *)(v22 + 40) = v20;
  *(_QWORD *)(v22 + 48) = v21;
  v24 = v22;
  sub_1C2CFDFC8();
  return v24;
}

uint64_t sub_1C2A9C358(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t);

  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2A4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v5 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v5 + 16) = xmmword_1C2D002E0;
  v7 = v2[4];
  v6 = v2[5];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1C28BFD30();
  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 40) = v6;
  OUTLINED_FUNCTION_11_1();
  sub_1C2CFD7AC();
  OUTLINED_FUNCTION_29();
  v8 = v2[33];
  v9 = v2[34];
  __swift_project_boxed_opaque_existential_1(v2 + 30, v8);
  v10 = v2[35];
  v11 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v2;
  v12 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(v9 + 72);
  OUTLINED_FUNCTION_11_1();
  sub_1C2CFD350();
  sub_1C2CFD350();
  v12(v10, sub_1C2A9C97C, v11, v8, v9);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C2A9C4B0(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[3];
  void (*v25)(uint64_t *);
  void *v26;
  char v27;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79DF80);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (_QWORD *)((char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(unsigned __int8 *)(a1 + 8);
  if (v12 == 255)
  {
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2A4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C2D002E0;
    v22 = *(_QWORD *)(a4 + 32);
    v21 = *(_QWORD *)(a4 + 40);
    *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v20 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v20 + 32) = v22;
    *(_QWORD *)(v20 + 40) = v21;
    swift_bridgeObjectRetain();
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    type metadata accessor for SiriKitFlowFrameInput();
    sub_1C2CFBE80();
    swift_storeEnumTagMultiPayload();
    a2(v11);
  }
  else
  {
    v24[1] = v8;
    v24[2] = a3;
    v25 = a2;
    v13 = *(void **)a1;
    sub_1C294B204(v13, v12);
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2A4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C2D002E0;
    v26 = v13;
    v27 = v12;
    sub_1C293814C();
    v15 = sub_1C2CFEA78();
    v17 = v16;
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v14 + 32) = v15;
    *(_QWORD *)(v14 + 40) = v17;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    v18 = swift_allocError();
    *(_QWORD *)v19 = v13;
    *(_BYTE *)(v19 + 8) = v12;
    *v11 = v18;
    swift_storeEnumTagMultiPayload();
    sub_1C294B204(v13, v12);
    v25(v11);
    sub_1C299A308(v13, v12);
  }
  return sub_1C28BA958((uint64_t)v11, &qword_1EF79DF80);
}

void HandoffSessionToCompanionFlowFrame.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_254();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_5_50();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_254();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_5_50();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  __swift_destroy_boxed_opaque_existential_1(v0 + 240);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11();
}

uint64_t HandoffSessionToCompanionFlowFrame.__deallocating_deinit()
{
  HandoffSessionToCompanionFlowFrame.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A9C84C()
{
  return HandoffSessionToCompanionFlowFrame.namespace.getter();
}

uint64_t sub_1C2A9C86C(uint64_t a1, void (*a2)(uint64_t *))
{
  _QWORD **v2;
  _QWORD *v5;

  v5 = *v2;
  sub_1C2CFD350();
  return sub_1C2A9BDF8(a1, v5, a2);
}

uint64_t sub_1C2A9C8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2A9C358(a3, a4);
}

uint64_t sub_1C2A9C8DC()
{
  type metadata accessor for HandoffSessionToCompanionFlowFrame();
  return sub_1C2CFBE8C();
}

unint64_t sub_1C2A9C914()
{
  unint64_t result;

  result = qword_1EF78F1A8;
  if (!qword_1EF78F1A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF78F1A8);
  }
  return result;
}

uint64_t sub_1C2A9C950()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A9C97C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2A9C4B0(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

unint64_t sub_1C2A9C988(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2A9C9AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C2A9C9AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF793268;
  if (!qword_1EF793268)
  {
    v1 = type metadata accessor for HandoffSessionToCompanionFlowFrame();
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for HandoffSessionToCompanionFlowFrame, v1);
    atomic_store(result, (unint64_t *)&qword_1EF793268);
  }
  return result;
}

uint64_t type metadata accessor for HandoffSessionToCompanionFlowFrame()
{
  return objc_opt_self();
}

uint64_t method lookup function for HandoffSessionToCompanionFlowFrame()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowFrame.__allocating_init(handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:aceServiceInvoker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowFrame.onInput(controller:input:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowFrame.execute(controller:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowFrame.action(renderer:args:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

ValueMetadata *type metadata accessor for HandoffToCompanionAceCommands()
{
  return &type metadata for HandoffToCompanionAceCommands;
}

uint64_t OUTLINED_FUNCTION_5_50()
{
  uint64_t v0;
  unint64_t v1;

  sub_1C28F90E8(v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2A9CA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  ValueMetadata *v30;
  _UNKNOWN **v31;

  v3 = v2;
  *(_BYTE *)(v2 + 16) = 0;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7934C0);
  swift_allocObject();
  *(_QWORD *)(v2 + 104) = sub_1C2CFCFCC();
  sub_1C28BA870(a1, (uint64_t)&v25, &qword_1EF7934C8);
  if (v27)
  {
    OUTLINED_FUNCTION_14_44(v6, v7, v8, v9, v10, v11, v12, v13, v25, v26, v27, v28, v29);
  }
  else
  {
    v14 = sub_1C2B0C6E8();
    v30 = &type metadata for OutputPublishers;
    v31 = &off_1E7C8D920;
    *(_QWORD *)&v29 = v14;
    sub_1C28BB37C((uint64_t)&v25, &qword_1EF7934C8);
  }
  sub_1C28B99EC(&v29, v2 + 24);
  sub_1C28BA870(a2, (uint64_t)&v25, &qword_1ED7A8760);
  if (v27)
  {
    sub_1C28BB37C(a2, &qword_1ED7A8760);
    sub_1C28BB37C(a1, &qword_1EF7934C8);
    OUTLINED_FUNCTION_14_44(v15, v16, v17, v18, v19, v20, v21, v22, v25, v26, v27, v28, v29);
  }
  else
  {
    if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
      swift_once();
    sub_1C28C72CC((uint64_t)&v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    v23 = qword_1ED7A4228;
    v30 = (ValueMetadata *)type metadata accessor for RefreshableDeviceState();
    v31 = &protocol witness table for RefreshableDeviceState;
    *(_QWORD *)&v29 = v23;
    OUTLINED_FUNCTION_38_0();
    sub_1C28BB37C(a2, &qword_1ED7A8760);
    sub_1C28BB37C(a1, &qword_1EF7934C8);
    sub_1C28BB37C((uint64_t)&v25, &qword_1ED7A8760);
  }
  sub_1C28B99EC(&v29, v3 + 64);
  return v3;
}

uint64_t sub_1C2A9CC28()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7934C0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2CFD350();
  sub_1C2CFCFC0();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C2A9CCD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[35] = a1;
  v2[36] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v2[39] = OUTLINED_FUNCTION_1_3();
  v2[40] = type metadata accessor for AceOutput();
  v2[41] = OUTLINED_FUNCTION_1_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7958);
  v2[42] = OUTLINED_FUNCTION_1_3();
  v2[43] = type metadata accessor for IdentifiedUser(0);
  v2[44] = OUTLINED_FUNCTION_1_3();
  return swift_task_switch();
}

uint64_t sub_1C2A9CD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t KeyPath;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  const char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  void *v24;
  unsigned int v25;
  uint64_t v26;
  os_log_type_t v27;
  uint64_t v28;
  id v30;
  void *v31;
  unsigned __int8 v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t (*v44)(uint64_t, char);

  v2 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 288);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7934C0);
  swift_getKeyPath();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)(v0 + 240) = v3;
  sub_1C2CFD350();
  sub_1C2CFCFC0();
  swift_release();
  swift_release();
  swift_release();
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_1C28BB37C(*(_QWORD *)(v0 + 336), &qword_1ED7A7958);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v6, (uint64_t)qword_1ED7AA1B0);
    v7 = OUTLINED_FUNCTION_9_3();
    if (OUTLINED_FUNCTION_20_0(v7))
    {
      v8 = (uint8_t *)OUTLINED_FUNCTION_23_2();
      *(_WORD *)v8 = 0;
      OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v4, (os_log_type_t)(v0 - 16), "HomePodSpeechProfileCheckFlow: Current request has no identified user. Will rely on UserIdentityCheckFlow to prompt for identity: PASS", v8);
      OUTLINED_FUNCTION_11_0();
    }

    goto LABEL_25;
  }
  v10 = *(_QWORD *)(v0 + 344);
  v9 = *(NSObject **)(v0 + 352);
  sub_1C2A9DC10(*(_QWORD *)(v0 + 336), (uint64_t)v9);
  if (*((_BYTE *)&v9->isa + *(int *)(v10 + 56)) == 1)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v11 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v11, (uint64_t)qword_1ED7AA1B0);
    v12 = OUTLINED_FUNCTION_9_3();
    if (OUTLINED_FUNCTION_20_0(v12))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_23_2();
      *(_WORD *)v13 = 0;
      v14 = "HomePodSpeechProfileCheckFlow: Current request used user's speech profile: PASS";
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  v15 = *(void **)(*(_QWORD *)(v0 + 352) + *(int *)(*(_QWORD *)(v0 + 344) + 40));
  *(_QWORD *)(v0 + 360) = v15;
  if (!v15)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v26 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v26, (uint64_t)qword_1ED7AA1B0);
    v27 = OUTLINED_FUNCTION_9_3();
    if (OUTLINED_FUNCTION_20_0(v27))
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_23_2();
      *(_WORD *)v13 = 0;
      v14 = "HomePodSpeechProfileCheckFlow: Current request has no sharedUserInfo: PASS";
LABEL_23:
      OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v9, (os_log_type_t)(v0 - 16), v14, v13);
      OUTLINED_FUNCTION_11_0();
    }
LABEL_24:

    OUTLINED_FUNCTION_43_4(v28, type metadata accessor for IdentifiedUser);
LABEL_25:
    OUTLINED_FUNCTION_4_54();
    *(_BYTE *)(KeyPath + 16) = 0;
    swift_task_dealloc();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_63_0();
    return OUTLINED_FUNCTION_94(*(uint64_t (**)(void))(v0 + 8));
  }
  v16 = qword_1ED7AA040;
  v17 = v15;
  if (v16 != -1)
    swift_once();
  v18 = OUTLINED_FUNCTION_118();
  *(_QWORD *)(v0 + 368) = v18;
  v19 = (void *)__swift_project_value_buffer(v18, (uint64_t)qword_1ED7AA1B0);
  *(_QWORD *)(v0 + 376) = v19;
  v20 = sub_1C2CFD86C();
  v21 = sub_1C2CFE298();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)OUTLINED_FUNCTION_23_2();
    *(_WORD *)v22 = 0;
    OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v20, v21, "HomePodSpeechProfileCheckFlow: Current request did not use user's speech profile: FAIL", v22);
    OUTLINED_FUNCTION_11_0();
  }

  v23 = OUTLINED_FUNCTION_22_34();
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v23, sel_syncMetadataCapability);

  }
  else
  {
    v25 = 0;
  }
  v30 = OUTLINED_FUNCTION_22_34();
  if (!v30)
  {
    if (!v25)
      goto LABEL_35;
LABEL_33:
    sub_1C2CFD86C();
    v36 = OUTLINED_FUNCTION_9_3();
    if (!OUTLINED_FUNCTION_126_0(v36))
    {
      v42 = 104;
      goto LABEL_41;
    }
    *(_WORD *)OUTLINED_FUNCTION_23_2() = 0;
    OUTLINED_FUNCTION_5_1(&dword_1C28B6000, v37, v38, "HomePodSpeechProfileCheckFlow: Companion device supports peer-to-peer handoff, the profile must not have synced yet. Informing user that companion setup is in progress.");
LABEL_37:
    OUTLINED_FUNCTION_11_0();
  }
  v31 = v30;
  v32 = objc_msgSend(v30, sel_muxSupportCapability);

  if ((v25 & 1) != 0)
    goto LABEL_33;
  if ((v32 & 1) == 0)
  {
LABEL_35:
    sub_1C2CFD86C();
    v39 = OUTLINED_FUNCTION_9_3();
    if (!OUTLINED_FUNCTION_126_0(v39))
    {
      v42 = 96;
      goto LABEL_41;
    }
    *(_WORD *)OUTLINED_FUNCTION_23_2() = 0;
    OUTLINED_FUNCTION_5_1(&dword_1C28B6000, v40, v41, "HomePodSpeechProfileCheckFlow: Companion device hardware cannot upgrade to OS which supports peer-to-peer handoff. Informing user their hardware is unsupported.");
    goto LABEL_37;
  }
  sub_1C2CFD86C();
  v33 = OUTLINED_FUNCTION_9_3();
  if (OUTLINED_FUNCTION_126_0(v33))
  {
    *(_WORD *)OUTLINED_FUNCTION_23_2() = 0;
    OUTLINED_FUNCTION_5_1(&dword_1C28B6000, v34, v35, "HomePodSpeechProfileCheckFlow: Companion device operating system does not support peer-to-peer handoff. Informing user that they need to update their device's software.");
    goto LABEL_37;
  }
  v42 = 99;
LABEL_41:

  if (qword_1EF786CE8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 384) = qword_1EF7CBEC8;
  v44 = (uint64_t (*)(uint64_t, char))((char *)&dword_1EF790698 + dword_1EF790698);
  OUTLINED_FUNCTION_38_0();
  v43 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v43;
  *v43 = v0;
  v43[1] = sub_1C2A9D28C;
  return v44(v0 + 16, v42);
}

uint64_t sub_1C2A9D28C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  swift_release();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A9D2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v10;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 328);
  v12 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD **)(v0 + 288);
  v14 = *(_OWORD *)(v0 + 64);
  v4 = v3[11];
  v5 = v3[12];
  __swift_project_boxed_opaque_existential_1(v3 + 8, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 96))(v4, v5);
  v6 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v6);
  *(_QWORD *)(v0 + 160) = 0;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  sub_1C28BB37C(v0 + 128, (uint64_t *)&unk_1ED7A8750);
  sub_1C28BB37C(v2, &qword_1ED7A7A10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v14, *((unint64_t *)&v14 + 1));
  swift_bridgeObjectRelease();
  v7 = v3[6];
  v8 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v7);
  *(_QWORD *)(v0 + 112) = v12;
  *(_QWORD *)(v0 + 120) = &protocol witness table for AceOutput;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 88));
  sub_1C299A0F4(v1, (uint64_t)boxed_opaque_existential_0);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 8) + *(_QWORD *)(v8 + 8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v10;
  *v10 = v0;
  v10[1] = sub_1C2A9D4E0;
  return v13(v0 + 88, v7, v8);
}

uint64_t sub_1C2A9D4E0()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  else
    __swift_destroy_boxed_opaque_existential_1(v2 + 88);
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2A9D548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 352);

  OUTLINED_FUNCTION_43_4(v2, (uint64_t (*)(_QWORD))type metadata accessor for AceOutput);
  sub_1C28C9F68(v1, type metadata accessor for IdentifiedUser);
  OUTLINED_FUNCTION_4_54();
  OUTLINED_FUNCTION_13_37();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  return OUTLINED_FUNCTION_94(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A9D5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 304);
  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  v22 = 0xD00000000000001CLL;
  v23 = 0x80000001C2D31B50;
  *(_QWORD *)(v0 + 264) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  sub_1C2CFDDAC();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  v6 = v23;
  v21 = v22;
  v7 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v3, v2);
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v2);
  sub_1C28BA870(v5, v4, &qword_1ED7A9EC0);
  if (__swift_getEnumTagSinglePayload(v4, 1, v2) == 1)
  {
    sub_1C28BB37C(*(_QWORD *)(v0 + 296), &qword_1ED7A9EC0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v8 = sub_1C2CFD86C();
    v9 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      *(_DWORD *)v10 = 136315650;
      v11 = sub_1C2CFE694();
      *(_QWORD *)(v0 + 272) = sub_1C28BB120(v11, v12, &v22);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2048;
      *(_QWORD *)(v0 + 248) = 89;
      sub_1C2CFE4D8();
      *(_WORD *)(v10 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 256) = sub_1C28BB120(v21, v6, &v22);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C28B6000, v8, v9, "FatalError at %s:%lu - %s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    swift_bridgeObjectRelease_n();
    (*(void (**)(_QWORD, _QWORD))(v7 + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 368));
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  v13 = v0 + 208;
  *(_OWORD *)(v13 - 24) = 0u;
  *(_QWORD *)(v13 - 8) = 0;
  *(_OWORD *)(v13 - 40) = 0u;
  swift_bridgeObjectRetain();
  v14 = OUTLINED_FUNCTION_38_0();
  LOBYTE(v16) = 44;
  sub_1C2AFA880(v14, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, v13, 0, 0, v13 - 40, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, v21, v6, v16, v17,
    v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28);
  swift_bridgeObjectRelease();
  sub_1C28BB37C(v13 - 40, (uint64_t *)&unk_1ED7A8750);
  sub_1C28BB37C(v13, &qword_1ED7A8480);
  swift_release();
  return sub_1C2CFE7FC();
}

uint64_t sub_1C2A9D9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 328);

  sub_1C28C9F68(v1, (uint64_t (*)(_QWORD))type metadata accessor for AceOutput);
  OUTLINED_FUNCTION_43_4(v2, type metadata accessor for IdentifiedUser);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  OUTLINED_FUNCTION_4_54();
  OUTLINED_FUNCTION_13_37();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  return OUTLINED_FUNCTION_94(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2A9DA2C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  return v0;
}

uint64_t sub_1C2A9DA58()
{
  sub_1C2A9DA2C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HomePodSpeechProfileCheckFlow()
{
  return objc_opt_self();
}

uint64_t sub_1C2A9DA98()
{
  return sub_1C2A9CCCC();
}

uint64_t sub_1C2A9DAB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28C33A0;
  return sub_1C2A9CCD0(a1);
}

unint64_t sub_1C2A9DB0C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2A9DB30();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2A9DB30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF7934B8;
  if (!qword_1EF7934B8)
  {
    v1 = type metadata accessor for HomePodSpeechProfileCheckFlow();
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D580, v1);
    atomic_store(result, (unint64_t *)&qword_1EF7934B8);
  }
  return result;
}

uint64_t sub_1C2A9DB6C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7934C0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2CFD350();
  sub_1C2CFCFC0();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C2A9DC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IdentifiedUser(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_4_54()
{
  static ExecuteResponse.complete()();
}

uint64_t OUTLINED_FUNCTION_13_37()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 16) = 1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return sub_1C28B99EC(&a9, (uint64_t)&a13);
}

id OUTLINED_FUNCTION_22_34()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 1620));
}

void sub_1C2A9DCA4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  OUTLINED_FUNCTION_15_40();
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_10();
  v6 = v5 - v4;
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF787D38);
  v8 = a1 + *(int *)(v7 + 32);
  sub_1C294F0E4((uint64_t)v9, v8);
  *(_BYTE *)(a1 + *(int *)(v7 + 36)) = 0;
  *(_QWORD *)(v6 + 24) = MEMORY[0x1E0DEE9C0] + 8;
  sub_1C294F12C((uint64_t)v9);
  sub_1C294F0E4(v8, v6 + 32);
  *(_BYTE *)(v6 + 72) = 0;
  swift_storeEnumTagMultiPayload();
  sub_1C294F16C(v6, a1);
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A9DD74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[2];
  uint64_t v10;

  v2 = type metadata accessor for FlowActionType(0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF787D38);
  v7 = a1 + *(int *)(v6 + 32);
  sub_1C294F0E4((uint64_t)v9, v7);
  *(_BYTE *)(a1 + *(int *)(v6 + 36)) = 0;
  *((_QWORD *)v5 + 3) = MEMORY[0x1E0DEE9C0] + 8;
  sub_1C294F12C((uint64_t)v9);
  sub_1C294F0E4(v7, (uint64_t)(v5 + 32));
  v5[72] = 0;
  swift_storeEnumTagMultiPayload();
  return sub_1C294F16C((uint64_t)v5, a1);
}

uint64_t ActingFlow.BOOL(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t *v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_25_33();
  v9 = v8;
  v10 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v10[2] = v4;
  v10[3] = a4;
  v10[4] = v6;
  v10[5] = v5;
  sub_1C2CFD350();
  ActingFlow.map<A>(_:)((uint64_t)sub_1C2A9DF0C, (uint64_t)v10, v4, a4, v9);
  return swift_release();
}

uint64_t sub_1C2A9DEE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2A9DF0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result & 1;
  return result;
}

void ActingFlow.negate<>()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  ActingFlow.map<A>(_:)((uint64_t)sub_1C2A9DF58, 0, a1, a2, a3);
}

_BYTE *sub_1C2A9DF58@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

uint64_t sub_1C2A9DF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return sub_1C28DB44C(v3);
}

void sub_1C2A9DF80(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(uint64_t (**)(uint64_t))(v1 + 80);
  if (v3)
  {
    v4 = sub_1C2CFD350();
    v5 = v3(v4);
    sub_1C28DB44C((uint64_t)v3);
    if (*(_QWORD *)(v5 + 16) == 1)
    {
      sub_1C28B9A04(v5 + 32, a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = OUTLINED_FUNCTION_39_22();
      v7 = OUTLINED_FUNCTION_5_2();
      swift_bridgeObjectRetain();
      sub_1C2ABC924(v7, v5);
      v9 = v8;
      *(_BYTE *)(v8 + 33) = 0;
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = &protocol witness table for Linearly;
      OUTLINED_FUNCTION_32_0();
      *(_QWORD *)a1 = v9;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

void If.__allocating_init<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_5_2();
  If.init<A>(_:_:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A9E0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7934D0);
  v7 = sub_1C2A0097C(&qword_1EF793778, &qword_1EF7934D0, (uint64_t)&unk_1C2D0D798);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 48) = v7;
  *(_QWORD *)(v3 + 56) = a2;
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 64) = a3;
  *(_QWORD *)(v3 + 72) = v8;
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  sub_1C28DB44C(0);
  *(_QWORD *)(v3 + 96) = 0;
  *(_BYTE *)(v3 + 104) = 2;
  return v3;
}

void If.init<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_25_33();
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 0;
  *(_QWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 48) = v10;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v4 + 16));
  v12 = *(_QWORD *)(a4 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(boxed_opaque_existential_0, v7, a4);
  *(_QWORD *)(v4 + 56) = v6;
  *(_QWORD *)(v4 + 64) = v5;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v7, a4);
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(v4 + 80);
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 0;
  *(_QWORD *)(v4 + 72) = v13;
  sub_1C28DB44C(v14);
  *(_QWORD *)(v4 + 96) = 0;
  *(_BYTE *)(v4 + 104) = 2;
  OUTLINED_FUNCTION_8_0();
}

uint64_t If.__allocating_init(_:_:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7934D0);
  v6 = OUTLINED_FUNCTION_5_2();
  *(_BYTE *)(v6 + 16) = a1;
  type metadata accessor for If();
  OUTLINED_FUNCTION_5_2();
  return sub_1C2A9E0AC(v6, a2, a3);
}

uint64_t type metadata accessor for If()
{
  return objc_opt_self();
}

uint64_t sub_1C2A9E254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7934D0);
  v8 = sub_1C2A0097C(&qword_1EF793778, &qword_1EF7934D0, (uint64_t)&unk_1C2D0D798);
  swift_beginAccess();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2A70C64();
  v9 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + 16);
  sub_1C2942A48(v9);
  v10 = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(v10 + 16) = v9 + 1;
  v11 = (_QWORD *)(v10 + 56 * v9);
  v11[4] = a1;
  v11[7] = v7;
  v11[8] = v8;
  v11[9] = a2;
  v11[10] = a3;
  swift_endAccess();
  return sub_1C2CFD350();
}

uint64_t sub_1C2A9E338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v8 = v4;
  OUTLINED_FUNCTION_25_33();
  *((_QWORD *)&v21 + 1) = v10;
  *(_QWORD *)&v22 = v11;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, v7, a4);
  *((_QWORD *)&v22 + 1) = v6;
  v23 = v5;
  swift_beginAccess();
  OUTLINED_FUNCTION_52_4();
  sub_1C2A70C64();
  v13 = *(_QWORD *)(*(_QWORD *)(v8 + 72) + 16);
  sub_1C2942A48(v13);
  v14 = *(_QWORD *)(v8 + 72);
  *(_QWORD *)(v14 + 16) = v13 + 1;
  v15 = v14 + 56 * v13;
  v16 = v20;
  v17 = v21;
  v18 = v22;
  *(_QWORD *)(v15 + 80) = v23;
  *(_OWORD *)(v15 + 48) = v17;
  *(_OWORD *)(v15 + 64) = v18;
  *(_OWORD *)(v15 + 32) = v16;
  swift_endAccess();
  return sub_1C2CFD350();
}

void sub_1C2A9E408(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7934D0);
  v6 = OUTLINED_FUNCTION_5_2();
  *(_BYTE *)(v6 + 16) = a1;
  sub_1C2A9E254(v6, a2, a3);
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A9E468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1C2CFD350();
  sub_1C2A9DF6C(a1, a2);
  a3[3] = type metadata accessor for If();
  a3[4] = &protocol witness table for If;
  *a3 = v3;
  return sub_1C2CFD350();
}

uint64_t sub_1C2A9E4C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47[3];
  __int128 v48;
  __int128 v49;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 96);
  if (!*(_BYTE *)(v1 + 104))
  {
    OUTLINED_FUNCTION_16_38();
    if ((v4 & 0x8000000000000000) == 0)
    {
      v9 = *(_QWORD *)(v1 + 72);
      if (v4 < *(_QWORD *)(v9 + 16))
      {
        sub_1C28B9A04(v9 + 56 * v4 + 32, (uint64_t)&v49);
        OUTLINED_FUNCTION_19_37(&v49);
        v10 = OUTLINED_FUNCTION_5_2();
        *(_QWORD *)(v10 + 16) = v4;
        *(_QWORD *)(v10 + 24) = v1;
        *(_QWORD *)&v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7934D8);
        *((_QWORD *)&v45 + 1) = sub_1C2A0097C(&qword_1EF7934E0, &qword_1EF7934D8, (uint64_t)&protocol conformance descriptor for LifeCycleModifierFlow<A>);
        OUTLINED_FUNCTION_52_4();
        OUTLINED_FUNCTION_23_38((uint64_t)sub_1C2AA015C, v10, &v43);
        swift_release();
        OUTLINED_FUNCTION_33_20();
        v39 = v45;
        v11 = v45;
        v12 = __swift_project_boxed_opaque_existential_1(&v43, v45);
        v48 = v39;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v47);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_0, v12, v11);
        v14 = OUTLINED_FUNCTION_95_11();
        OUTLINED_FUNCTION_26_31(v14, (uint64_t)&protocol witness table for Delegate);
        OUTLINED_FUNCTION_18_34((uint64_t)v47);
        OUTLINED_FUNCTION_15_40();
        v15 = OUTLINED_FUNCTION_7_48();
        OUTLINED_FUNCTION_28_27(v15, v16, v17, v18, v19, v20, v21, v22, v39, *((uint64_t *)&v39 + 1), v43, *((uint64_t *)&v43 + 1), v44, v45);
        sub_1C28B99EC(&v49, a1);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
      }
LABEL_17:
      __break(1u);
      JUMPOUT(0x1C2A9E998);
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (*(_BYTE *)(v1 + 104) != 1)
    __asm { BR              X9 }
  OUTLINED_FUNCTION_16_38();
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(v1 + 72);
  if (v4 >= *(_QWORD *)(v5 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = sub_1C2AA00D0(v5 + 56 * v4 + 32, (uint64_t)&v43);
  v7 = v46(v6);
  v8 = v7;
  if (*(_QWORD *)(v7 + 16) == 1)
  {
    sub_1C28B9A04(v7 + 32, (uint64_t)v47);
    OUTLINED_FUNCTION_32_0();
  }
  else
  {
    v24 = OUTLINED_FUNCTION_39_22();
    v25 = OUTLINED_FUNCTION_5_2();
    swift_bridgeObjectRetain();
    sub_1C2ABC924(v25, v8);
    v27 = v26;
    *(_BYTE *)(v26 + 33) = 0;
    *(_QWORD *)&v48 = v24;
    *((_QWORD *)&v48 + 1) = &protocol witness table for Linearly;
    OUTLINED_FUNCTION_32_0();
    v47[0] = v27;
  }
  sub_1C2AA0104((uint64_t)&v43);
  OUTLINED_FUNCTION_19_37(v47);
  v28 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v28 + 16) = v4;
  *(_QWORD *)(v28 + 24) = v2;
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_22_35();
  v29 = swift_release();
  OUTLINED_FUNCTION_28_27(v29, v30, v31, v32, v33, v34, v35, v36, v38, v41, v43, *((uint64_t *)&v43 + 1), v44, v45);
  v37 = OUTLINED_FUNCTION_95_11();
  OUTLINED_FUNCTION_41_22(v37, (uint64_t)&protocol witness table for Delegate, v40, v42, v43, *((uint64_t *)&v43 + 1), v44, v45, *((uint64_t *)&v45 + 1));
  OUTLINED_FUNCTION_18_34((uint64_t)&v49);
  OUTLINED_FUNCTION_15_40();
  OUTLINED_FUNCTION_7_48();
  OUTLINED_FUNCTION_33_20();
  return sub_1C28B99EC(&v43, a1);
}

void sub_1C2A9E9A8(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char v8;
  uint64_t v9;

  v3 = *a1;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v4 = sub_1C2CFD878();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED7AA1B0);
  v5 = sub_1C2CFD86C();
  v6 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 67109120;
    sub_1C2CFE4D8();
    _os_log_impl(&dword_1C28B6000, v5, v6, "if condition: %{BOOL}d", v7, 8u);
    MEMORY[0x1C3BC9DE8](v7, -1, -1);
  }

  if ((v3 & 1) != 0)
  {
    v8 = 2;
    v9 = 1;
  }
  else
  {
    swift_beginAccess();
    v9 = 2 * (*(_QWORD *)(*(_QWORD *)(a2 + 72) + 16) == 0);
    v8 = 2 * (*(_QWORD *)(*(_QWORD *)(a2 + 72) + 16) == 0);
  }
  *(_QWORD *)(a2 + 96) = v9;
  *(_BYTE *)(a2 + 104) = v8;
}

void sub_1C2A9EAF8(char *a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;

  v5 = *a1;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v6 = sub_1C2CFD878();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED7AA1B0);
  v7 = sub_1C2CFD86C();
  v8 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    *(_DWORD *)v9 = 134218240;
    sub_1C2CFE4D8();
    *(_WORD *)(v9 + 12) = 1024;
    sub_1C2CFE4D8();
    _os_log_impl(&dword_1C28B6000, v7, v8, "elseIf[%ld] condition: %{BOOL}d", (uint8_t *)v9, 0x12u);
    MEMORY[0x1C3BC9DE8](v9, -1, -1);
  }

  v10 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if ((v5 & 1) != 0)
    {
      v11 = 1;
    }
    else
    {
      swift_beginAccess();
      v12 = *(_QWORD *)(*(_QWORD *)(a3 + 72) + 16);
      v13 = v10 < v12;
      v14 = v10 >= v12;
      if (v13)
        ++a2;
      else
        a2 = 2;
      v11 = 2 * v14;
    }
    *(_QWORD *)(a3 + 96) = a2;
    *(_BYTE *)(a3 + 104) = v11;
  }
}

void sub_1C2A9EC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v4 = sub_1C2CFD878();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED7AA1B0);
  v5 = sub_1C2CFD86C();
  v6 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    sub_1C2CFE4D8();
    _os_log_impl(&dword_1C28B6000, v5, v6, "run elseIf[%ld] body", v7, 0xCu);
    MEMORY[0x1C3BC9DE8](v7, -1, -1);
  }

  *(_QWORD *)(a3 + 96) = 3;
  *(_BYTE *)(a3 + 104) = 2;
}

void sub_1C2A9ED98(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v5 = sub_1C2CFD878();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED7AA1B0);
  v6 = sub_1C2CFD86C();
  v7 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C28B6000, v6, v7, a3, v8, 2u);
    MEMORY[0x1C3BC9DE8](v8, -1, -1);
  }

  *(_QWORD *)(a2 + 96) = 3;
  *(_BYTE *)(a2 + 104) = 2;
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2A9EE74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x66496B63656863 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C2CFE9DC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x646F4266496E7572 && a2 == 0xE900000000000079;
    if (v6 || (sub_1C2CFE9DC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x736C456B63656863 && a2 == 0xEB00000000664965;
      if (v7 || (sub_1C2CFE9DC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x4965736C456E7572 && a2 == 0xED000079646F4266;
        if (v8 || (sub_1C2CFE9DC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x4265736C456E7572 && a2 == 0xEB0000000079646FLL;
          if (v9 || (sub_1C2CFE9DC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 1701736292 && a2 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1C2CFE9DC();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1C2A9F130()
{
  return 6;
}

uint64_t sub_1C2A9F138(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C2A9F16C + 4 * byte_1C2D0D660[a1]))(0x66496B63656863, 0xE700000000000000);
}

uint64_t sub_1C2A9F16C()
{
  return 0x646F4266496E7572;
}

uint64_t sub_1C2A9F188()
{
  return 0x736C456B63656863;
}

uint64_t sub_1C2A9F1A8()
{
  return 0x4965736C456E7572;
}

uint64_t sub_1C2A9F1CC()
{
  return 0x4265736C456E7572;
}

uint64_t sub_1C2A9F1EC()
{
  return 1701736292;
}

void sub_1C2A9F1FC()
{
  sub_1C2CFEAB4();
  OUTLINED_FUNCTION_38_4();
  sub_1C2CFEAD8();
  OUTLINED_FUNCTION_0_3();
}

uint64_t sub_1C2A9F22C(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v35;
  uint64_t v36;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793740);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_79_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793748);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_79_5();
  v32 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF793750) - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_72_4();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793758);
  v31 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_10();
  v16 = v15 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793760);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_79_5();
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793768);
  MEMORY[0x1E0C80A78](v30, v19);
  OUTLINED_FUNCTION_10();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793770);
  v35 = *(_QWORD *)(v20 - 8);
  v36 = v20;
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_10();
  v25 = v24 - v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2AA046C();
  sub_1C2CFEB08();
  if (a3)
  {
    if (a3 != 1)
      __asm { BR              X9 }
    OUTLINED_FUNCTION_40_21();
    OUTLINED_FUNCTION_1_46();
    sub_1C2CFE94C();
    OUTLINED_FUNCTION_76_4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    v26 = OUTLINED_FUNCTION_34_27();
  }
  else
  {
    OUTLINED_FUNCTION_29_27();
    sub_1C2CFE904();
    sub_1C2CFE94C();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v16, v11);
    v28 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8);
    v26 = v25;
    v27 = v36;
  }
  return v28(v26, v27);
}

uint64_t sub_1C2A9F5B4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7936D0);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_79_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7936D8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_79_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7936E0);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_79_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7936E8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_79_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7936F0);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_79_5();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7936F8);
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_72_4();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793700);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14, v16);
  OUTLINED_FUNCTION_10();
  v19 = v18 - v17;
  v20 = a1[3];
  v32 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1C2AA046C();
  sub_1C2CFEAFC();
  if (!v33)
  {
    v31 = v15;
    v21 = sub_1C2CFE8EC();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = *(unsigned __int8 *)(v21 + 32);
      sub_1C28C5A80(1, v22, v21, v21 + 32, 0, (2 * v22) | 1);
      v25 = v24;
      v27 = v26;
      swift_bridgeObjectRelease();
      if (v25 == v27 >> 1)
        __asm { BR              X9 }
    }
    v20 = sub_1C2CFE6E8();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78F918);
    *v29 = &type metadata for If.State;
    sub_1C2CFE88C();
    sub_1C2CFE6D0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v29, *MEMORY[0x1E0DEC450], v20);
    swift_willThrow();
    OUTLINED_FUNCTION_6_45();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v19, v14);
  }
  __swift_destroy_boxed_opaque_existential_1(v32);
  return v20;
}

void sub_1C2A9F93C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_30_27();
  OUTLINED_FUNCTION_3_47();
  if (!v0)
  {
    OUTLINED_FUNCTION_5_33(*(_QWORD *)(v1 - 224));
    OUTLINED_FUNCTION_6_45();
    OUTLINED_FUNCTION_2_50();
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v1 - 104));
    JUMPOUT(0x1C2A9F910);
  }
  OUTLINED_FUNCTION_6_45();
  OUTLINED_FUNCTION_2_50();
  JUMPOUT(0x1C2A9F90CLL);
}

void sub_1C2A9FB84()
{
  sub_1C2A9F1FC();
}

uint64_t sub_1C2A9FBA0()
{
  sub_1C2AA055C();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A9FBC8()
{
  sub_1C2AA055C();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A9FBF0()
{
  sub_1C2AA05D4();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A9FC18()
{
  sub_1C2AA05D4();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A9FC40()
{
  unsigned __int8 *v0;

  return sub_1C2A9F138(*v0);
}

uint64_t sub_1C2A9FC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A9EE74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2A9FC6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C2A9F130();
  *a1 = result;
  return result;
}

uint64_t sub_1C2A9FC90()
{
  sub_1C2AA046C();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A9FCB8()
{
  sub_1C2AA046C();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A9FCE0()
{
  sub_1C2AA04A8();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A9FD08()
{
  sub_1C2AA04A8();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A9FD30()
{
  sub_1C2AA04E4();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A9FD58()
{
  sub_1C2AA04E4();
  return sub_1C2CFEB2C();
}

void sub_1C2A9FD80()
{
  sub_1C2CFEAB4();
  OUTLINED_FUNCTION_38_4();
  sub_1C2CFEAD8();
  OUTLINED_FUNCTION_0_3();
}

uint64_t sub_1C2A9FDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C2A8753C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C2A9FDD4()
{
  sub_1C2AA0520();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A9FDFC()
{
  sub_1C2AA0520();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A9FE24()
{
  sub_1C2AA0598();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2A9FE4C()
{
  sub_1C2AA0598();
  return sub_1C2CFEB2C();
}

uint64_t sub_1C2A9FE74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_1C2A9F5B4(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1C2A9FEA0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1C2A9F22C(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t If.deinit()
{
  uint64_t v0;

  sub_1C2AA0104(v0 + 16);
  swift_bridgeObjectRelease();
  sub_1C28DB44C(*(_QWORD *)(v0 + 80));
  return v0;
}

uint64_t If.__deallocating_deinit()
{
  If.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2A9FF08@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2A9E4C0(a1);
}

void sub_1C2A9FF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v6 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 88);
  v7 = type metadata accessor for Conclude(0, v5, a3, a4);
  v8 = OUTLINED_FUNCTION_12_26(v7, (uint64_t)&protocol witness table for Conclude<A>);
  v11 = type metadata accessor for ConcludeWithValueFlow(0, v5, v9, v10);
  MEMORY[0x1C3BC9CD4](&unk_1C2D0D798, v11);
  ActingFlow.conclude(with:)(v6, (uint64_t)v8);
}

uint64_t sub_1C2A9FFB4()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_1C2A9FFE0()
{
  sub_1C2A9FFB4();
  return swift_deallocClassInstance();
}

void sub_1C2AA0004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2A9FF28(a1, a2, a3, a4);
}

uint64_t sub_1C2AA0024(uint64_t a1)
{
  uint64_t inited;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EF791C60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  *(_QWORD *)(inited + 32) = a1;
  v4 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain_n();
  sub_1C2904F60();
  swift_setDeallocating();
  sub_1C28BA780();
  return v4;
}

void sub_1C2AA00B0(uint64_t a1)
{
  uint64_t v1;

  sub_1C2A9ED98(a1, v1, "run else body");
}

uint64_t sub_1C2AA00D0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for If.ConditionBodyPair(a2, a1);
  return a2;
}

uint64_t sub_1C2AA0104(uint64_t a1)
{
  destroy for If.ConditionBodyPair(a1);
  return a1;
}

uint64_t sub_1C2AA0130()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C2AA0154(uint64_t a1)
{
  uint64_t v1;

  sub_1C2A9EC7C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C2AA015C(char *a1)
{
  uint64_t v1;

  sub_1C2A9EAF8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C2AA0164(uint64_t a1)
{
  uint64_t v1;

  sub_1C2A9ED98(a1, v1, "run if body");
}

void sub_1C2AA0184(char *a1)
{
  uint64_t v1;

  sub_1C2A9E9A8(a1, v1);
}

uint64_t method lookup function for If()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of If.__allocating_init<A>(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of If.elseIf<A>(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of If.elseIf(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of If.else(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of If.action.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t sub_1C2AA01D0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ConcludeWithValueFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ConcludeWithValueFlow);
}

uint64_t sub_1C2AA024C()
{
  return sub_1C2A0097C(&qword_1EF7936A8, qword_1EF7936B0, (uint64_t)&unk_1C2D10490);
}

uint64_t sub_1C2AA0278()
{
  return sub_1C2A0097C(&qword_1EF7936A8, qword_1EF7936B0, (uint64_t)&unk_1C2D10490);
}

uint64_t getEnumTagSinglePayload for If.State(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for If.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C2AA0328(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1C2AA0340(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for If.State()
{
  return &type metadata for If.State;
}

uint64_t destroy for If.ConditionBodyPair(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_release();
}

uint64_t initializeWithCopy for If.ConditionBodyPair(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  sub_1C2CFD350();
  return a1;
}

uint64_t *assignWithCopy for If.ConditionBodyPair(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  sub_1C2CFD350();
  swift_release();
  return a1;
}

uint64_t assignWithTake for If.ConditionBodyPair(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for If.ConditionBodyPair()
{
  return &type metadata for If.ConditionBodyPair;
}

unint64_t sub_1C2AA046C()
{
  unint64_t result;

  result = qword_1EF793708;
  if (!qword_1EF793708)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DDB0, &type metadata for If.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793708);
  }
  return result;
}

unint64_t sub_1C2AA04A8()
{
  unint64_t result;

  result = qword_1EF793710;
  if (!qword_1EF793710)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DD60, &type metadata for If.State.DoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793710);
  }
  return result;
}

unint64_t sub_1C2AA04E4()
{
  unint64_t result;

  result = qword_1EF793718;
  if (!qword_1EF793718)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DD10, &type metadata for If.State.RunElseBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793718);
  }
  return result;
}

unint64_t sub_1C2AA0520()
{
  unint64_t result;

  result = qword_1EF793720;
  if (!qword_1EF793720)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DCC0, &type metadata for If.State.RunElseIfBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793720);
  }
  return result;
}

unint64_t sub_1C2AA055C()
{
  unint64_t result;

  result = qword_1EF793728;
  if (!qword_1EF793728)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DC70, &type metadata for If.State.CheckElseIfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793728);
  }
  return result;
}

unint64_t sub_1C2AA0598()
{
  unint64_t result;

  result = qword_1EF793730;
  if (!qword_1EF793730)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DC20, &type metadata for If.State.RunIfBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793730);
  }
  return result;
}

unint64_t sub_1C2AA05D4()
{
  unint64_t result;

  result = qword_1EF793738;
  if (!qword_1EF793738)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DBD0, &type metadata for If.State.CheckIfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793738);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for If.State.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C2AA065C + 4 * byte_1C2D0D675[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C2AA0690 + 4 * byte_1C2D0D670[v4]))();
}

uint64_t sub_1C2AA0690(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2AA0698(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2AA06A0);
  return result;
}

uint64_t sub_1C2AA06AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2AA06B4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C2AA06B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2AA06C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for If.State.CodingKeys()
{
  return &type metadata for If.State.CodingKeys;
}

ValueMetadata *type metadata accessor for If.State.CheckIfCodingKeys()
{
  return &type metadata for If.State.CheckIfCodingKeys;
}

ValueMetadata *type metadata accessor for If.State.RunIfBodyCodingKeys()
{
  return &type metadata for If.State.RunIfBodyCodingKeys;
}

ValueMetadata *type metadata accessor for If.State.CheckElseIfCodingKeys()
{
  return &type metadata for If.State.CheckElseIfCodingKeys;
}

uint64_t _s11SiriKitFlow2IfC5StateO21CheckElseIfCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C2AA0750 + 4 * byte_1C2D0D67A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C2AA0770 + 4 * byte_1C2D0D67F[v4]))();
}

_BYTE *sub_1C2AA0750(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C2AA0770(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2AA0778(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2AA0780(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C2AA0788(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C2AA0790(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for If.State.RunElseIfBodyCodingKeys()
{
  return &type metadata for If.State.RunElseIfBodyCodingKeys;
}

ValueMetadata *type metadata accessor for If.State.RunElseBodyCodingKeys()
{
  return &type metadata for If.State.RunElseBodyCodingKeys;
}

ValueMetadata *type metadata accessor for If.State.DoneCodingKeys()
{
  return &type metadata for If.State.DoneCodingKeys;
}

unint64_t sub_1C2AA07D0()
{
  unint64_t result;

  result = qword_1EF793780;
  if (!qword_1EF793780)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D998, &type metadata for If.State.RunElseIfBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793780);
  }
  return result;
}

unint64_t sub_1C2AA0810()
{
  unint64_t result;

  result = qword_1EF793788;
  if (!qword_1EF793788)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DA50, &type metadata for If.State.CheckElseIfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793788);
  }
  return result;
}

unint64_t sub_1C2AA0850()
{
  unint64_t result;

  result = qword_1EF793790;
  if (!qword_1EF793790)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DBA8, &type metadata for If.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793790);
  }
  return result;
}

unint64_t sub_1C2AA0890()
{
  unint64_t result;

  result = qword_1EF793798;
  if (!qword_1EF793798)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DAC8, &type metadata for If.State.CheckIfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF793798);
  }
  return result;
}

unint64_t sub_1C2AA08D0()
{
  unint64_t result;

  result = qword_1EF7937A0;
  if (!qword_1EF7937A0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DAF0, &type metadata for If.State.CheckIfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937A0);
  }
  return result;
}

unint64_t sub_1C2AA0910()
{
  unint64_t result;

  result = qword_1EF7937A8;
  if (!qword_1EF7937A8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DA78, &type metadata for If.State.RunIfBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937A8);
  }
  return result;
}

unint64_t sub_1C2AA0950()
{
  unint64_t result;

  result = qword_1EF7937B0;
  if (!qword_1EF7937B0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DAA0, &type metadata for If.State.RunIfBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937B0);
  }
  return result;
}

unint64_t sub_1C2AA0990()
{
  unint64_t result;

  result = qword_1EF7937B8;
  if (!qword_1EF7937B8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D9C0, &type metadata for If.State.CheckElseIfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937B8);
  }
  return result;
}

unint64_t sub_1C2AA09D0()
{
  unint64_t result;

  result = qword_1EF7937C0;
  if (!qword_1EF7937C0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D9E8, &type metadata for If.State.CheckElseIfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937C0);
  }
  return result;
}

unint64_t sub_1C2AA0A10()
{
  unint64_t result;

  result = qword_1EF7937C8;
  if (!qword_1EF7937C8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D908, &type metadata for If.State.RunElseIfBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937C8);
  }
  return result;
}

unint64_t sub_1C2AA0A50()
{
  unint64_t result;

  result = qword_1EF7937D0;
  if (!qword_1EF7937D0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D930, &type metadata for If.State.RunElseIfBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937D0);
  }
  return result;
}

unint64_t sub_1C2AA0A90()
{
  unint64_t result;

  result = qword_1EF7937D8;
  if (!qword_1EF7937D8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D8B8, &type metadata for If.State.RunElseBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937D8);
  }
  return result;
}

unint64_t sub_1C2AA0AD0()
{
  unint64_t result;

  result = qword_1EF7937E0;
  if (!qword_1EF7937E0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D8E0, &type metadata for If.State.RunElseBodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937E0);
  }
  return result;
}

unint64_t sub_1C2AA0B10()
{
  unint64_t result;

  result = qword_1EF7937E8;
  if (!qword_1EF7937E8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D868, &type metadata for If.State.DoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937E8);
  }
  return result;
}

unint64_t sub_1C2AA0B50()
{
  unint64_t result;

  result = qword_1EF7937F0;
  if (!qword_1EF7937F0)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0D890, &type metadata for If.State.DoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937F0);
  }
  return result;
}

unint64_t sub_1C2AA0B90()
{
  unint64_t result;

  result = qword_1EF7937F8;
  if (!qword_1EF7937F8)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DB18, &type metadata for If.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF7937F8);
  }
  return result;
}

unint64_t sub_1C2AA0BD0()
{
  unint64_t result;

  result = qword_1EF793800;
  if (!qword_1EF793800)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DB40, &type metadata for If.State.CodingKeys);
    atomic_store(result, &qword_1EF793800);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_46()
{
  return sub_1C2CFE904();
}

uint64_t OUTLINED_FUNCTION_2_50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 232) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_3_47()
{
  return sub_1C2CFE880();
}

uint64_t OUTLINED_FUNCTION_5_51()
{
  return sub_1C2CFE880();
}

uint64_t OUTLINED_FUNCTION_6_45()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_48()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_12_46@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_15_40()
{
  return type metadata accessor for FlowActionType(0);
}

uint64_t OUTLINED_FUNCTION_16_38()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_18_34(uint64_t a1)
{
  uint64_t v1;

  return sub_1C28B9A04(a1, v1);
}

_QWORD *OUTLINED_FUNCTION_19_37(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_20_41()
{
  return sub_1C2CFE8D4();
}

uint64_t OUTLINED_FUNCTION_22_35()
{
  return sub_1C2ABAEAC();
}

void OUTLINED_FUNCTION_23_38(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  ActingFlow.onCompletion(_:)(a1, a2, v3, v4, a3);
}

uint64_t *OUTLINED_FUNCTION_26_31@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 80) = a1;
  *(_QWORD *)(v2 - 72) = a2;
  return __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 104));
}

unint64_t OUTLINED_FUNCTION_27_23()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 4;
  return sub_1C2AA04E4();
}

uint64_t OUTLINED_FUNCTION_28_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

unint64_t OUTLINED_FUNCTION_29_27()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 2;
  return sub_1C2AA055C();
}

unint64_t OUTLINED_FUNCTION_30_27()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 69) = 1;
  return sub_1C2AA0598();
}

uint64_t OUTLINED_FUNCTION_33_20()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 104);
}

uint64_t OUTLINED_FUNCTION_34_27()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_39_22()
{
  return type metadata accessor for Linearly();
}

unint64_t OUTLINED_FUNCTION_40_21()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 3;
  return sub_1C2AA0520();
}

uint64_t *OUTLINED_FUNCTION_41_22@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  a8 = a1;
  a9 = a2;
  return __swift_allocate_boxed_opaque_existential_0(&a5);
}

void sub_1C2AA0D78(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 512;
}

uint64_t ImmediateContinuationFlow.__allocating_init(flowProducer:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t ImmediateContinuationFlow.init(flowProducer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1C2AA0DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1C2AA0DE8()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = *(_BYTE **)(v0 + 16);
  (*(void (**)(void))(*(_QWORD *)(v0 + 24) + 16))();
  static ExecuteResponse.complete(next:)(v1);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ImmediateContinuationFlow.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ImmediateContinuationFlow.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2AA0E74()
{
  return sub_1C2AA0E30();
}

uint64_t sub_1C2AA0E94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28D0348;
  return sub_1C2AA0DD0(a1);
}

void sub_1C2AA0EE8(uint64_t a1@<X8>)
{
  sub_1C2AA0D78(a1);
}

uint64_t type metadata accessor for ImmediateContinuationFlow()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImmediateContinuationFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImmediateContinuationFlow.exitValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of ImmediateContinuationFlow.__allocating_init(flowProducer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ImmediateContinuationFlow.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ImmediateContinuationFlow.execute()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 112) + *(_QWORD *)(*(_QWORD *)v1 + 112));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C28C33A0;
  return v6(a1);
}

uint64_t dispatch thunk of ImmediateContinuationFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_1C2AA0FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;

  sub_1C294EEAC();
  v6 = swift_allocError();
  *v7 = a1;
  v7[1] = a2;
  *a3 = v6;
  type metadata accessor for FlowActionType(0);
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t Inform.__allocating_init(_:)(__int128 *a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_5_2();
  Inform.init(_:)(a1);
  return v2;
}

void sub_1C2AA1060(uint64_t a1, char a2, uint64_t a3, char a4)
{
  sub_1C2AA107C(a1, a2, a3, a4, qword_1EF793A60, &qword_1EF787E78, (void (*)(uint64_t, uint64_t))sub_1C2964BEC);
}

void sub_1C2AA107C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t *a5, uint64_t *a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);

  v23 = a7;
  OUTLINED_FUNCTION_20_42();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(a5);
  v19 = v7 + v18[7];
  *(_QWORD *)v19 = a1;
  v20 = a2 & 1;
  *(_BYTE *)(v19 + 8) = v20;
  v21 = v7 + v18[8];
  sub_1C294F0E4(a3, v21);
  *(_BYTE *)(v7 + v18[9]) = a4;
  *((_QWORD *)v17 + 3) = __swift_instantiateConcreteTypeFromMangledName(a6);
  *(_QWORD *)v17 = a1;
  v17[8] = v20;
  v23(a1, v20);
  sub_1C28BA958(a3, &qword_1ED7A70E0);
  sub_1C294F0E4(v21, (uint64_t)(v17 + 32));
  v17[72] = a4;
  swift_storeEnumTagMultiPayload();
  sub_1C294F16C((uint64_t)v17, v7);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2AA1190(uint64_t a1)
{
  int **v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28CCD60;
  return sub_1C2A102F4(a1, v4);
}

BOOL static Inform.Status.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void Inform.Status.hash(into:)()
{
  sub_1C2CFEAC0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t Inform.Status.hashValue.getter()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  return sub_1C2CFEAD8();
}

id sub_1C2AA1280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;

  v2 = *(void **)(v1 + 56);
  *(_QWORD *)a1 = v2;
  v3 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_1C2AA1FB8(v2, v3);
}

void sub_1C2AA1294(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v4;
  unsigned __int8 v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(void **)(v1 + 56);
  *(_QWORD *)(v1 + 56) = v2;
  v5 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(v1 + 64) = v3;
  sub_1C29E32A4(v4, v5);
}

uint64_t sub_1C2AA12B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_WORD *)(v2 + 64) = 255;
  *(_QWORD *)(v2 + 40) = &type metadata for ClosureOutputGenerator;
  *(_QWORD *)(v2 + 48) = &off_1E7C87018;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t Inform.init(_:)(__int128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = 0;
  *(_WORD *)(v1 + 64) = 255;
  sub_1C28B99EC(a1, v1 + 16);
  return v1;
}

void Inform.action.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *boxed_opaque_existential_0;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  _OWORD v27[2];
  uint64_t v28;
  __int128 v29[2];
  uint64_t v30;

  OUTLINED_FUNCTION_20_42();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EF793920);
  OUTLINED_FUNCTION_0_1();
  v9 = MEMORY[0x1E0C80A78](v7, v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9, v12);
  v14 = (char *)&v25 - v13;
  sub_1C2AA1280((uint64_t)v29);
  if (BYTE8(v29[0]) == 255)
  {
    v0[3] = type metadata accessor for Abort(0);
    v0[4] = (uint64_t)&protocol witness table for Abort;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v0);
    sub_1C2AA0FBC(0xD000000000000020, 0x80000001C2D31C80, boxed_opaque_existential_0);
  }
  else
  {
    v15 = *(_QWORD *)&v29[0];
    if ((BYTE8(v29[0]) & 1) == 0 && *(_BYTE *)(v1 + 65) && (v29[0] & 1) != 0)
    {
      v30 = 0;
      memset(v29, 0, sizeof(v29));
      v16 = &v11[v6[7]];
      *(_QWORD *)v16 = v15;
      v16[8] = 0;
      v17 = (uint64_t)&v11[v6[8]];
      OUTLINED_FUNCTION_16_39();
      v11[v6[9]] = 0;
      v26 = v0;
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793928);
      *((_QWORD *)v5 + 3) = v18;
      *(_QWORD *)v5 = v15;
      v5[8] = 0;
      sub_1C28BA958((uint64_t)v29, &qword_1ED7A70E0);
      sub_1C294F0E4(v17, (uint64_t)(v5 + 32));
      v5[72] = 0;
      OUTLINED_FUNCTION_12_47();
      sub_1C294F16C((uint64_t)v5, (uint64_t)v11);
      v19 = *(_QWORD *)v16;
      LOBYTE(v16) = v16[8];
      sub_1C294F0E4(v17, (uint64_t)v29);
      v20 = &v14[v6[7]];
      *(_QWORD *)v20 = v19;
      v20[8] = (char)v16;
      v21 = (uint64_t)&v14[v6[8]];
      OUTLINED_FUNCTION_16_39();
      v14[v6[9]] = 1;
      *((_QWORD *)v5 + 3) = v18;
      *(_QWORD *)v5 = v19;
      v5[8] = (char)v16;
      OUTLINED_FUNCTION_17_35();
      OUTLINED_FUNCTION_17_35();
      sub_1C28BA958((uint64_t)v29, &qword_1ED7A70E0);
      v0 = v26;
      sub_1C294F0E4(v21, (uint64_t)(v5 + 32));
      v5[72] = 1;
      OUTLINED_FUNCTION_12_47();
      sub_1C294F16C((uint64_t)v5, (uint64_t)v14);
      sub_1C28BA958((uint64_t)v11, &qword_1EF793920);
      v22 = OUTLINED_FUNCTION_15_41((uint64_t)&protocol witness table for Conclude<A>);
      sub_1C2AA15A4((uint64_t)v14, (uint64_t)v22);
    }
    else
    {
      v24 = BYTE8(v29[0]) & 1;
      v28 = 0;
      memset(v27, 0, sizeof(v27));
      OUTLINED_FUNCTION_15_41((uint64_t)&protocol witness table for Conclude<A>);
      sub_1C2AA107C(v15, v24, (uint64_t)v27, 0, &qword_1EF793920, &qword_1EF793928, (void (*)(uint64_t, uint64_t))sub_1C2964BEC);
    }
    sub_1C28B99EC(v29, (uint64_t)v0);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2AA15A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Inform.deinit()
{
  return OUTLINED_FUNCTION_19_38();
}

uint64_t Inform.__deallocating_deinit()
{
  OUTLINED_FUNCTION_19_38();
  return swift_deallocClassInstance();
}

void sub_1C2AA161C()
{
  Inform.action.getter();
}

uint64_t Inform.onSuccess(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78D058);
  OUTLINED_FUNCTION_5_2();
  sub_1C2CFD350();
  v7 = sub_1C2CFD350();
  sub_1C29DF330(v7);
  v8 = sub_1C29EB49C((uint64_t)sub_1C2A52DD0, v6);
  swift_release();
  result = swift_release();
  *a3 = v8;
  return result;
}

uint64_t sub_1C2AA16E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t Inform.yieldOnInterruption()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 65) = 1;
  return sub_1C2CFD350();
}

uint64_t ActingFlow<>.onSuccess(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;

  v10 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1C2CFD350();
  ActingFlow.onSuccess<A>(_:)(a3, a4, a5);
  return swift_release();
}

void sub_1C2AA17A4(uint64_t a1, void (*a2)(void))
{
  a2();
  OUTLINED_FUNCTION_1_0();
}

void Inform.interruptionPolicy.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t Inform.withSideEffect.getter()
{
  return 1;
}

uint64_t Inform.execute(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = a1;
  *(_QWORD *)(v2 + 160) = v1;
  return swift_task_switch();
}

uint64_t sub_1C2AA17EC()
{
  uint64_t v0;
  _QWORD *v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v1 = *(_QWORD **)(v0 + 160);
  sub_1C28B9A04(*(_QWORD *)(v0 + 152), v0 + 16);
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 168) = v2;
  *(_QWORD *)(v0 + 184) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  v3 = v1 + 2;
  v4 = v1[5];
  v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 192) = v6;
  *v6 = v0;
  v6[1] = sub_1C2AA1880;
  return OUTLINED_FUNCTION_106(v0 + 56, v4, v5, v8);
}

uint64_t sub_1C2AA1880()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD *, _QWORD, _QWORD);

  v2 = (_QWORD *)*v1;
  v2[25] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(_QWORD *, _QWORD, _QWORD))(**(int **)(v2[22] + 8) + *(_QWORD *)(v2[22] + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v2[26] = v4;
  *v4 = v2;
  v4[1] = sub_1C2AA1938;
  return v5(v2 + 7, v2[21], v2[22]);
}

uint64_t sub_1C2AA1938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)v1 + 56;
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v2);
  return swift_task_switch();
}

uint64_t sub_1C2AA19A8()
{
  uint64_t v0;
  uint64_t v2;
  char v3;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v2 = 0;
  v3 = 0;
  sub_1C2AA1294(&v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2AA19EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v0 + 200);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(_QWORD *)(v0 + 128) = v2;
  OUTLINED_FUNCTION_195();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  if ((OUTLINED_FUNCTION_2_51() & 1) == 0)
  {
    OUTLINED_FUNCTION_14_45();
    *v1 = v2;
    OUTLINED_FUNCTION_195();
    if (OUTLINED_FUNCTION_2_51())
    {
      v4 = *(void **)(v0 + 96);
      v5 = *(_BYTE *)(v0 + 104);
      if (v5)
      {
        v6 = *(void **)(v0 + 96);
      }
      else
      {
        OUTLINED_FUNCTION_9_51();
        if (OUTLINED_FUNCTION_8_48())
        {
          OUTLINED_FUNCTION_5_52();

          v8 = 1;
          v9 = 0;
          sub_1C2AA1294(&v8);
          sub_1C29435E8(v4, 0);
          v3 = *(void **)(v0 + 120);
          goto LABEL_11;
        }
        v6 = v4;
        v5 = 0;
      }
      sub_1C29435E8(v6, v5);
    }
    OUTLINED_FUNCTION_21_36();
    v8 = v2;
    v9 = 1;
    OUTLINED_FUNCTION_195();
    sub_1C2AA1294(&v8);
    v3 = (void *)v2;
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_5_52();

  v8 = 1;
  v9 = 0;
  sub_1C2AA1294(&v8);
  v3 = *(void **)(v0 + 128);
LABEL_11:

  return OUTLINED_FUNCTION_1_47(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2AA1B30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v0 + 216);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(_QWORD *)(v0 + 128) = v2;
  OUTLINED_FUNCTION_195();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  if ((OUTLINED_FUNCTION_2_51() & 1) == 0)
  {
    OUTLINED_FUNCTION_14_45();
    *v1 = v2;
    OUTLINED_FUNCTION_195();
    if (OUTLINED_FUNCTION_2_51())
    {
      v4 = *(void **)(v0 + 96);
      v5 = *(_BYTE *)(v0 + 104);
      if (v5)
      {
        v6 = *(void **)(v0 + 96);
      }
      else
      {
        OUTLINED_FUNCTION_9_51();
        if (OUTLINED_FUNCTION_8_48())
        {
          OUTLINED_FUNCTION_5_52();

          v8 = 1;
          v9 = 0;
          sub_1C2AA1294(&v8);
          sub_1C29435E8(v4, 0);
          v3 = *(void **)(v0 + 120);
          goto LABEL_11;
        }
        v6 = v4;
        v5 = 0;
      }
      sub_1C29435E8(v6, v5);
    }
    OUTLINED_FUNCTION_21_36();
    v8 = v2;
    v9 = 1;
    OUTLINED_FUNCTION_195();
    sub_1C2AA1294(&v8);
    v3 = (void *)v2;
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_5_52();

  v8 = 1;
  v9 = 0;
  sub_1C2AA1294(&v8);
  v3 = *(void **)(v0 + 128);
LABEL_11:

  return OUTLINED_FUNCTION_1_47(*(uint64_t (**)(void))(v0 + 8));
}

void Inform.cancel(error:)(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unsigned __int8 v6;
  id v7;

  v1 = (uint64_t)a1;
  v5 = (uint64_t)a1;
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  if (swift_dynamicCast())
  {

    sub_1C2AA1280((uint64_t)&v5);
    v3 = v5;
    if (v6 == 255)
      v3 = 1;
    v5 = v3;
    v6 &= v6 != 255;
  }
  else
  {
    sub_1C2AA1280((uint64_t)&v5);
    if (v6 == 255)
    {
      OUTLINED_FUNCTION_195();
      v4 = 1;
    }
    else
    {
      v1 = v5;
      v4 = v6 & 1;
    }
    v5 = v1;
    v6 = v4;
  }
  sub_1C2AA1294(&v5);
}

void sub_1C2AA1D38(_BYTE *a1@<X8>)
{
  Inform.interruptionPolicy.getter(a1);
}

uint64_t sub_1C2AA1D4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28F6E90;
  return Inform.execute(with:)(a1);
}

void sub_1C2AA1D9C(void *a1)
{
  Inform.cancel(error:)(a1);
}

unint64_t sub_1C2AA1DC0()
{
  unint64_t result;

  result = qword_1EF793938;
  if (!qword_1EF793938)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for Inform.Status, &type metadata for Inform.Status);
    atomic_store(result, (unint64_t *)&qword_1EF793938);
  }
  return result;
}

uint64_t dispatch thunk of OutputGenerator.generate()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v7 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28CC838;
  return OUTLINED_FUNCTION_106(a1, a2, a3, v9);
}

uint64_t type metadata accessor for Inform()
{
  return objc_opt_self();
}

uint64_t method lookup function for Inform()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Inform.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t storeEnumTagSinglePayload for Inform.Status(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2AA1EDC + 4 * byte_1C2D0DE55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2AA1F10 + 4 * byte_1C2D0DE50[v4]))();
}

uint64_t sub_1C2AA1F10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2AA1F18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2AA1F20);
  return result;
}

uint64_t sub_1C2AA1F2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2AA1F34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2AA1F38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2AA1F40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Inform.Status()
{
  return &type metadata for Inform.Status;
}

unint64_t sub_1C2AA1F60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF78D060;
  if (!qword_1EF78D060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF78D058);
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for LifeCycleModifierFlow<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF78D060);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClosureOutputGenerator()
{
  return &type metadata for ClosureOutputGenerator;
}

id sub_1C2AA1FB8(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1C2964BEC(result, a2 & 1);
  return result;
}

uint64_t OUTLINED_FUNCTION_1_47(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_2_51()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_5_52()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_8_48()
{
  return swift_dynamicCast();
}

id OUTLINED_FUNCTION_9_51()
{
  uint64_t v0;
  void *v1;

  *(_QWORD *)(v0 + 8) = v1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_12_47()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_14_45()
{
  id *v0;

}

uint64_t *OUTLINED_FUNCTION_15_41@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v1;
  *(_QWORD *)(v2 - 96) = a1;
  return __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_16_39()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C294F0E4(v1 - 128, v0);
}

id OUTLINED_FUNCTION_17_35()
{
  char v0;
  void *v1;

  return sub_1C2964BEC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_19_38()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1C29E32A4(*(void **)(v0 + 56), *(_BYTE *)(v0 + 64));
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_42()
{
  return type metadata accessor for FlowActionType(0);
}

void OUTLINED_FUNCTION_21_36()
{
  uint64_t v0;

}

uint64_t ReactiveFlowPlan.inform(flowProducer:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;

  OUTLINED_FUNCTION_5_53();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v0;
  v5[4] = v3;
  v5[5] = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  ReactiveFlowPlan.push<A>(flowProducer:)((uint64_t)sub_1C2AA22AC, (uint64_t)v5, v1, AssociatedTypeWitness, v0, v4);
  sub_1C2CFD350();
  return OUTLINED_FUNCTION_0_56();
}

uint64_t sub_1C2AA2138@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v7 = sub_1C2CFEAF0();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v17 - v9;
  v11 = a2(a1);
  v14 = type metadata accessor for WrappingFlow(0, v7, v12, v13);
  v19 = type metadata accessor for Inform();
  v20 = &protocol witness table for Inform;
  *(_QWORD *)&v18 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v10, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  v15 = sub_1C2AA22B8(&v18);
  a3[3] = v14;
  result = MEMORY[0x1C3BC9CD4](&unk_1C2D0DFE8, v14);
  a3[4] = result;
  *a3 = v15;
  return result;
}

uint64_t sub_1C2AA2288()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2AA22AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C2AA2138(a1, *(uint64_t (**)(uint64_t))(v2 + 32), a2);
}

uint64_t sub_1C2AA22B8(__int128 *a1)
{
  swift_allocObject();
  return sub_1C2AA2578(a1);
}

uint64_t ReactiveFlowPlan.informOnError(outputGenerator:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_5_53();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v2;
  sub_1C2CFD350();
  ReactiveFlowPlan.pushOnError(flowProducer:)((uint64_t)sub_1C2AA2484, v5, v1, v0, v4);
  return OUTLINED_FUNCTION_0_56();
}

uint64_t sub_1C2AA2368@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a1;
  type metadata accessor for Inform();
  swift_allocObject();
  v9 = sub_1C2AA12B0((uint64_t)&unk_1EF793B88, (uint64_t)v8);
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793B90);
  a4[4] = sub_1C2A0097C(&qword_1EF793B98, &qword_1EF793B90, (uint64_t)&unk_1C2D10490);
  swift_allocObject();
  sub_1C2CFD350();
  v10 = a1;
  result = sub_1C2AA2B40(v9, (uint64_t)nullsub_1, 0);
  *a4 = result;
  return result;
}

uint64_t sub_1C2AA2460()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2AA2484@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C2AA2368(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C2AA248C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_1C2A23C8C;
  return v9(a1, a4);
}

uint64_t sub_1C2AA2500()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C2AA2578(__int128 *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88));
  sub_1C28B99EC(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
  return v1;
}

uint64_t sub_1C2AA25C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _UNKNOWN **v31;
  _BYTE v32[40];
  _QWORD v33[4];
  __int128 v34;
  uint64_t v35;

  v4 = v3;
  v6 = *(_QWORD *)v3;
  v7 = *(_QWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Conclude(0, v7, v11, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13, v15);
  v17 = (char *)&v28 - v16;
  v18 = &v4[*(_QWORD *)(v6 + 96)];
  swift_beginAccess();
  v21 = type metadata accessor for WrappingFlow.State(0, v7, v19, v20);
  (*(void (**)(__int128 *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(&v34, v18, v21);
  if (v35)
  {
    sub_1C28B99EC(&v34, (uint64_t)v33);
    __swift_project_boxed_opaque_existential_1(v33, v33[3]);
    sub_1C2CFD350();
    sub_1C2ABAEAC();
    swift_release();
    v30 = type metadata accessor for Delegate(0);
    v31 = &protocol witness table for Delegate;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v29);
    sub_1C28B9A04((uint64_t)v32, (uint64_t)boxed_opaque_existential_0);
    type metadata accessor for FlowActionType(0);
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    sub_1C28B99EC(&v29, (uint64_t)a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    v33[0] = v4;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v4[*(_QWORD *)(*(_QWORD *)v4 + 88)], v7);
    v26 = type metadata accessor for WrappingFlow(0, v7, v24, v25);
    MEMORY[0x1C3BC9CD4](&unk_1C2D0DFE8, v26);
    ActingFlow.conclude(with:)((uint64_t)v10, (uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    a3[3] = v13;
    a3[4] = (uint64_t)&protocol witness table for Conclude<A>;
    v27 = __swift_allocate_boxed_opaque_existential_0(a3);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v14 + 32))(v27, v17, v13);
  }
}

uint64_t sub_1C2AA2800(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  uint64_t v9;

  v2 = *a2;
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  v3 = (char *)a2 + *(_QWORD *)(v2 + 96);
  swift_beginAccess();
  v6 = type metadata accessor for WrappingFlow.State(0, *(_QWORD *)(v2 + 80), v4, v5);
  (*(void (**)(char *, _OWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(v3, v8, v6);
  return swift_endAccess();
}

uint64_t sub_1C2AA2878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88), v1);
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v5 = type metadata accessor for WrappingFlow.State(0, v1, v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  return v0;
}

uint64_t sub_1C2AA28E4()
{
  sub_1C2AA2878();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WrappingFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrappingFlow);
}

void sub_1C2AA2910(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;

  v1 = *a1;
  v2 = a1[1];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = type metadata accessor for FlowMappingModifier(255, v1, AssociatedTypeWitness, v2);
  v5 = MEMORY[0x1C3BC9CD4](&unk_1C2D1728C, v4);
  OUTLINED_FUNCTION_4_55(v5);
  OUTLINED_FUNCTION_3_48();
}

void sub_1C2AA2980(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for ErrorReportingFlowModifier(255, *a1, a1[1], a4);
  v5 = MEMORY[0x1C3BC9CD4](&unk_1C2D173A8, v4);
  OUTLINED_FUNCTION_4_55(v5);
  OUTLINED_FUNCTION_3_48();
}

uint64_t sub_1C2AA29C8(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t sub_1C2AA2A18(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t type metadata accessor for WrappingFlow.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrappingFlow.State);
}

uint64_t sub_1C2AA2A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C2AA25C4(a1, a2, a3);
}

uint64_t sub_1C2AA2AA0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2AA2800(a1, v1);
}

uint64_t sub_1C2AA2AA8()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2AA2AD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = (int *)v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1C28CC838;
  return sub_1C2AA248C(a1, v4, v5, v6);
}

uint64_t sub_1C2AA2B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v3 + 72) = 1;
  *(_QWORD *)(v3 + 56) = type metadata accessor for Inform();
  *(_QWORD *)(v3 + 64) = &protocol witness table for Inform;
  *(_QWORD *)(v3 + 32) = a1;
  sub_1C2CFD350();
  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  strcpy((char *)&v11, "TransformFlow<");
  HIBYTE(v11) = -18;
  sub_1C2CFD350();
  sub_1C2CFDDAC();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  sub_1C2CFDE54();
  v7 = *((_QWORD *)&v11 + 1);
  *(_QWORD *)(v3 + 16) = v11;
  *(_QWORD *)(v3 + 24) = v7;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a2;
  v8[4] = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78D058);
  v13 = sub_1C2A0097C((unint64_t *)&qword_1EF78D060, &qword_1EF78D058, (uint64_t)&protocol conformance descriptor for LifeCycleModifierFlow<A>);
  swift_allocObject();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C29DF330(a1);
  v9 = sub_1C29DF57C((uint64_t)sub_1C2AA2DD4, (uint64_t)v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&v11 = v9;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3 + 32);
  sub_1C28B99EC(&v11, v3 + 32);
  swift_endAccess();
  return v3;
}

uint64_t sub_1C2AA2D34(uint64_t a1, char a2, uint64_t a3, void (*a4)(char *__return_ptr, uint64_t *))
{
  uint64_t result;
  char v6;
  uint64_t v7;
  char v8;

  v7 = a1;
  v8 = a2 & 1;
  a4(&v6, &v7);
  result = swift_beginAccess();
  *(_BYTE *)(a3 + 72) = 0;
  return result;
}

uint64_t sub_1C2AA2D8C(uint64_t a1, uint64_t a2, void (*a3)(char *__return_ptr, uint64_t *))
{
  return sub_1C2AA2D34(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2, a3);
}

uint64_t sub_1C2AA2DA8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2AA2DD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2AA2D8C(a1, *(_QWORD *)(v1 + 16), *(void (**)(char *__return_ptr, uint64_t *))(v1 + 24));
}

uint64_t OUTLINED_FUNCTION_0_56()
{
  return swift_release();
}

void OUTLINED_FUNCTION_3_48()
{
  JUMPOUT(0x1C3BC9CD4);
}

uint64_t OUTLINED_FUNCTION_4_55(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return type metadata accessor for ModifiedPlan(255, v1, v2, a1);
}

void sub_1C2AA2E28()
{
  INIntent.debugDescriptionLite.getter();
}

uint64_t sub_1C2AA2E48()
{
  uint64_t result;

  result = sub_1C2AA2E68();
  byte_1ED7A54E8 = result & 1;
  return result;
}

uint64_t sub_1C2AA2E68()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v1 = sub_1C28BA688(v0);
  if (v2)
  {
    v3 = v1;
    v4 = v2;
    v5 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
    if (v5)
    {
      v6 = v5;
      sub_1C2BDF93C(v3, v4, v5);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v7 = sub_1C2CFD878();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED7AA1B0);
    v8 = sub_1C2CFD86C();
    v9 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C28B6000, v8, v9, "Unable to determine current Siri locale. Exceptions may be thrown when trying to convert intents to JSON if this process lacks proper entitlements.", v10, 2u);
      MEMORY[0x1C3BC9DE8](v10, -1, -1);
    }

  }
  return 1;
}

Swift::String __swiftcall INIntent.jsonRepresentation()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Swift::String result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;

  v1 = v0;
  v81 = *MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v4 = MEMORY[0x1E0C80A78](v2, v3);
  v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v4, v7);
  v10 = (char *)&v69 - v9;
  v12 = MEMORY[0x1E0C80A78](v8, v11);
  v69 = (uint64_t)&v69 - v13;
  MEMORY[0x1E0C80A78](v12, v14);
  v16 = (char *)&v69 - v15;
  v17 = sub_1C2CFDDA0();
  MEMORY[0x1E0C80A78](v17, v18);
  OUTLINED_FUNCTION_10();
  if (qword_1ED7A54F0 != -1)
    swift_once();
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v1, sel__JSONDictionaryRepresentation);
  v21 = MEMORY[0x1E0DEA968];
  sub_1C2CFDC68();

  v22 = (void *)sub_1C2CFDC50();
  swift_bridgeObjectRelease();
  v71 = 0;
  v23 = objc_msgSend(v19, sel_dataWithJSONObject_options_error_, v22, 0, &v71);

  v24 = v71;
  if (!v23)
  {
    v32 = v21;
    v33 = v24;
    v34 = sub_1C2CFBAFC();

    swift_willThrow();
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C2D002E0;
    v71 = 0;
    v72 = (void *)0xE000000000000000;
    v77 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    sub_1C2CFE7C0();
    v36 = v71;
    v37 = v72;
    *(_QWORD *)(v35 + 56) = v32;
    *(_QWORD *)(v35 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v35 + 32) = v36;
    *(_QWORD *)(v35 + 40) = v37;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v38 = OUTLINED_FUNCTION_118();
    v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1ED7AA1B0);
    v40 = *(_QWORD *)(v38 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v10, v39, v38);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v38);
    sub_1C294E19C((uint64_t)v10, (uint64_t)v6);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v38) == 1)
    {
      sub_1C28BA958((uint64_t)v6, &qword_1ED7A9EC0);
    }
    else
    {
      v46 = sub_1C2CFD86C();
      v47 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = OUTLINED_FUNCTION_6_0();
        v71 = (id)OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v48 = 136315650;
        v49 = OUTLINED_FUNCTION_14_46();
        v77 = OUTLINED_FUNCTION_30_12(v49, v50);
        OUTLINED_FUNCTION_11_28();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_74();
        OUTLINED_FUNCTION_9_52(117);
        *(_WORD *)(v48 + 22) = 2080;
        v77 = OUTLINED_FUNCTION_30_12(0xD000000000000033, 0x80000001C2D31D70);
        OUTLINED_FUNCTION_11_28();
        OUTLINED_FUNCTION_8_49(&dword_1C28B6000, v46, v51, "FatalError at %s:%lu - %s");
        OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_11_0();
      }

      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v38);
    }
    if (qword_1ED7A84D8 != -1)
      swift_once();
    OUTLINED_FUNCTION_11_40();
    v52 = sub_1C2CFD350();
    LOBYTE(v68) = 44;
    OUTLINED_FUNCTION_0_30(v52, 0xD000000000000012, v61, v62, v63, v64, v65, v66, v67, 0xD000000000000033, 0x80000001C2D31D70, v68, v69, v70, (uint64_t)v71, v72, v73, v74, v75,
      v76,
      v77,
      v78,
      v79,
      v80);
    sub_1C28BA958((uint64_t)&v71, (uint64_t *)&unk_1ED7A8750);
    sub_1C28BA958((uint64_t)&v77, &qword_1ED7A8480);
    swift_release();
    goto LABEL_28;
  }
  v25 = sub_1C2CFBBD4();
  v27 = v26;

  sub_1C28C50CC(v25, v27);
  sub_1C2CFDD94();
  sub_1C2CFDD70();
  v29 = v28;
  OUTLINED_FUNCTION_15_42();
  if (!v29)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v41 = OUTLINED_FUNCTION_118();
    v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED7AA1B0);
    v43 = *(_QWORD *)(v41 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v16, v42, v41);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v41);
    v44 = (uint64_t)v16;
    v45 = v69;
    sub_1C294E19C(v44, v69);
    if (__swift_getEnumTagSinglePayload(v45, 1, v41) == 1)
    {
      sub_1C28BA958(v69, &qword_1ED7A9EC0);
    }
    else
    {
      v53 = sub_1C2CFD86C();
      v54 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = OUTLINED_FUNCTION_6_0();
        v71 = (id)OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v55 = 136315650;
        v56 = OUTLINED_FUNCTION_14_46();
        v77 = OUTLINED_FUNCTION_30_12(v56, v57);
        OUTLINED_FUNCTION_11_28();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_74();
        OUTLINED_FUNCTION_9_52(121);
        *(_WORD *)(v55 + 22) = 2080;
        v77 = sub_1C28BB120(0xD000000000000027, 0x80000001C2D31E30, (uint64_t *)&v71);
        OUTLINED_FUNCTION_11_28();
        OUTLINED_FUNCTION_8_49(&dword_1C28B6000, v53, v58, "FatalError at %s:%lu - %s");
        OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_11_0();
      }

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v69, v41);
    }
    if (qword_1ED7A84D8 != -1)
      swift_once();
    OUTLINED_FUNCTION_11_40();
    v59 = sub_1C2CFD350();
    LOBYTE(v68) = 44;
    OUTLINED_FUNCTION_0_30(v59, 0xD000000000000012, v61, v62, v63, v64, v65, v66, v67, 0xD000000000000027, 0x80000001C2D31E30, v68, v69, v70, (uint64_t)v71, v72, v73, v74, v75,
      v76,
      v77,
      v78,
      v79,
      v80);
    sub_1C28BA958((uint64_t)&v71, (uint64_t *)&unk_1ED7A8750);
    sub_1C28BA958((uint64_t)&v77, &qword_1ED7A8480);
    swift_release();
LABEL_28:
    v30 = sub_1C2CFE7FC();
    __break(1u);
    goto _$sSo8INIntentC11SiriKitFlowE18jsonRepresentationSSyF;
  }
  OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_1();
_$sSo8INIntentC11SiriKitFlowE18jsonRepresentationSSyF:
  result._object = v31;
  result._countAndFlagsBits = v30;
  return result;
}

uint64_t INIntent.safeJSONDictionaryRepresentation.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  if (qword_1ED7A54F0 != -1)
    swift_once();
  v1 = objc_msgSend(v0, sel__JSONDictionaryRepresentation);
  v2 = sub_1C2CFDC68();

  return v2;
}

void INIntentResolutionResult.safeJSONDictionaryRepresentation(for:parameterName:)(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;

  if (qword_1ED7A54F0 != -1)
    swift_once();
  v3 = (void *)sub_1C2CFDD34();
  v4 = objc_msgSend(v1, sel__JSONDictionaryRepresentationForIntent_parameterName_, a1, v3);

  sub_1C2CFDC68();
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2AA3930(char *a1, char *a2, unint64_t a3, char *a4)
{
  id *v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char *v14;
  unint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id *v21;
  BOOL v22;
  id *v25;
  id *v26;
  id *v27;
  void *v28;
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  BOOL v34;
  char *v35;
  BOOL v36;
  char *v39;
  id *v40;
  unint64_t v41;
  id *v42;

  v6 = (id *)a2;
  v7 = (id *)a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 8;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1C28E27D0(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v39 = a4;
    v12 = &a4[8 * v11];
    if (v7 >= v6 || v10 < 8)
    {
LABEL_39:
      v14 = v39;
      goto LABEL_40;
    }
    v25 = (id *)(a3 - 8);
    while (1)
    {
      v42 = v6;
      v40 = v25 + 1;
      v26 = (id *)(v12 - 8);
      v27 = v6 - 1;
      v28 = *(v6 - 1);
      v29 = (unint64_t)v12;
      v30 = *((id *)v12 - 1);
      v31 = v28;
      v32 = objc_msgSend(v30, sel_tag);
      v33 = objc_msgSend(v31, sel_tag);

      if ((uint64_t)v32 >= (uint64_t)v33)
      {
        v35 = v39;
        v36 = v40 != (id *)v29 || (unint64_t)v25 >= v29;
        v27 = v26;
        v12 = (char *)v26;
        v6 = v42;
        if (!v36)
          goto LABEL_35;
      }
      else
      {
        v34 = v40 != v42 || v25 >= v42;
        v35 = v39;
        v12 = (char *)v29;
        v6 = v27;
        if (!v34)
          goto LABEL_35;
      }
      *v25 = *v27;
LABEL_35:
      --v25;
      if (v6 <= v7 || v12 <= v35)
        goto LABEL_39;
    }
  }
  sub_1C28E27D0(a1, (a2 - a1) / 8, a4);
  v12 = &a4[8 * v9];
  v13 = (unint64_t)v6 >= a3 || v8 < 8;
  v14 = a4;
  if (!v13)
  {
    v41 = a3;
    do
    {
      v15 = (unint64_t)v12;
      v16 = *(void **)v14;
      v17 = *v6;
      v18 = v16;
      v19 = objc_msgSend(v17, sel_tag);
      v20 = objc_msgSend(v18, sel_tag);

      if ((uint64_t)v19 >= (uint64_t)v20)
      {
        v21 = (id *)v14;
        v22 = v7 == (id *)v14;
        v14 += 8;
      }
      else
      {
        v21 = v6;
        v22 = v7 == v6++;
      }
      v12 = (char *)v15;
      if (!v22)
        *v7 = *v21;
      ++v7;
    }
    while ((unint64_t)v14 < v15 && (unint64_t)v6 < v41);
  }
  v6 = v7;
LABEL_40:
  sub_1C28E27D0(v14, (v12 - v14) / 8, (char *)v6);
  return 1;
}

void OUTLINED_FUNCTION_5_54(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

}

void OUTLINED_FUNCTION_8_49(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  os_log_type_t v5;

  _os_log_impl(a1, a2, v5, a4, v4, 0x20u);
}

uint64_t OUTLINED_FUNCTION_9_52@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  return sub_1C2CFE4D8();
}

double OUTLINED_FUNCTION_11_40()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_QWORD *)(v0 - 144) = 0;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_46()
{
  return sub_1C2CFE694();
}

uint64_t OUTLINED_FUNCTION_15_42()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1C28C516C(v0, v1);
}

uint64_t getEnumTagSinglePayload for TaskFlowType(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TaskFlowType(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ApplyValueStrategy()
{
  return &type metadata for ApplyValueStrategy;
}

double sub_1C2AA3C28@<D0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  void *v6;
  id v7;
  double result;

  sub_1C2AA3CB4(a1, a2, a3);
  v6 = (void *)sub_1C2CFDD34();
  OUTLINED_FUNCTION_70();
  v7 = objc_msgSend(a1, sel_valueForKeyPath_, v6);

  if (v7)
  {
    sub_1C2CFE538();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_1C2AA3CB4(void *a1, uint64_t a2, unint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  os_log_type_t type;
  uint64_t v20;
  uint64_t v21;

  v6 = (void *)sub_1C2AA49A8(a1);
  v7 = objc_msgSend(v6, sel_facadePropertyName);
  if (v7)
  {
    v8 = v7;
    a2 = sub_1C2CFDD58();

  }
  else
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v9 = sub_1C2CFD878();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED7AA1B0);
    swift_bridgeObjectRetain_n();
    v10 = a1;
    v11 = sub_1C2CFD86C();
    v12 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v11, v12))
    {
      type = v12;
      v13 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v21 = v20;
      *(_DWORD *)v13 = 136315394;
      swift_bridgeObjectRetain();
      sub_1C28BB120(a2, a3, &v21);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2080;
      v14 = objc_msgSend(v10, sel_typeName);
      v15 = sub_1C2CFDD58();
      v17 = v16;

      sub_1C28BB120(v15, v17, &v21);
      sub_1C2CFE4D8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C28B6000, v11, type, "Cannot get a key for parameter: %s on intent type: %s. Will use parameterName instead. This may result in a crash.", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v20, -1, -1);
      MEMORY[0x1C3BC9DE8](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRetain();
  }
  return a2;
}

uint64_t sub_1C2AA3F3C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _DWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _DWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  id v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char v87;
  _OWORD v88[2];
  _QWORD v89[4];
  _BYTE v90[24];
  uint64_t v91;
  _BYTE v92[40];

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v17);
  v19 = (char *)&v78 - v18;
  v20 = (void *)OUTLINED_FUNCTION_2_52();
  sub_1C2AA3C28(v20, v21, v22, v23);
  v24 = *(_QWORD *)(a4 + 24);
  sub_1C28BA8B0((uint64_t)v92, (uint64_t)v90, &qword_1ED7A8480);
  if (!(v24 | v91))
  {
    sub_1C28BA958((uint64_t)v90, &qword_1ED7A8480);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v25 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED7AA1B0);
    swift_bridgeObjectRetain_n();
    v26 = sub_1C2CFD86C();
    v27 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (_DWORD *)OUTLINED_FUNCTION_6_0();
      v29 = OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_8_50(v29);
      *v28 = 136315138;
      swift_bridgeObjectRetain();
      v89[0] = sub_1C28BB120(a2, a3, (uint64_t *)&v84);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_26_10();
      OUTLINED_FUNCTION_9_53(&dword_1C28B6000, v26, v27, "Parameter '%s' value is already nil. Nothing to do");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_29_2();

    return sub_1C28BA958((uint64_t)v92, &qword_1ED7A8480);
  }
  v82 = v16;
  sub_1C28BA958((uint64_t)v90, &qword_1ED7A8480);
  v30 = (void *)OUTLINED_FUNCTION_2_52();
  v33 = sub_1C2AA3CB4(v30, v31, v32);
  v83 = v34;
  v35 = (void *)OUTLINED_FUNCTION_2_52();
  v36 = (void *)sub_1C2AA49A8(v35);
  v37 = v36;
  if ((a6 & 1) != 0 || objc_msgSend(v36, sel_valueStyle) != (id)3)
    sub_1C28BA8B0(a4, (uint64_t)v89, &qword_1ED7A8480);
  else
    sub_1C2AA4EE4(a1, a2, a3, a4, a5, v89);
  v38 = v33;
  if (!objc_msgSend(v37, sel_isEnum))
  {
    sub_1C28BA8B0((uint64_t)v89, (uint64_t)&v84, &qword_1ED7A8480);
    v46 = *((_QWORD *)&v85 + 1);
    if (*((_QWORD *)&v85 + 1))
    {
      v47 = __swift_project_boxed_opaque_existential_1(&v84, *((uint64_t *)&v85 + 1));
      v48 = *(_QWORD *)(v46 - 8);
      MEMORY[0x1E0C80A78](v47, v47);
      v50 = (char *)&v78 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v48 + 16))(v50);
      v51 = sub_1C2CFE9D0();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
    }
    else
    {
      v51 = 0;
    }
    v52 = (void *)OUTLINED_FUNCTION_7_49();
    OUTLINED_FUNCTION_70();
    objc_msgSend(a1, sel_setValue_forKey_, v51, v52);
    swift_unknownObjectRelease();
LABEL_22:

    sub_1C28BA958((uint64_t)v89, &qword_1ED7A8480);
    return sub_1C28BA958((uint64_t)v92, &qword_1ED7A8480);
  }
  sub_1C28BA8B0((uint64_t)v89, (uint64_t)&v84, &qword_1ED7A8480);
  v39 = *((_QWORD *)&v85 + 1);
  sub_1C28BA958((uint64_t)&v84, &qword_1ED7A8480);
  if (!v39)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v40 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ED7AA1B0);
    v41 = v83;
    swift_bridgeObjectRetain_n();
    v42 = sub_1C2CFD86C();
    v43 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (_DWORD *)OUTLINED_FUNCTION_6_0();
      v45 = OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_8_50(v45);
      *v44 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v88[0] = sub_1C28BB120(v38, v41, (uint64_t *)&v84);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_26_10();
      OUTLINED_FUNCTION_9_53(&dword_1C28B6000, v42, v43, "Setting enum value for '%s' to rawValue=0. If this is not your default value then implement the code to remove values in your domain code.");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_29_2();
    v52 = (void *)sub_1C2CFE1CC();
    v53 = OUTLINED_FUNCTION_7_49();
    OUTLINED_FUNCTION_70();
    objc_msgSend(a1, sel_setValue_forKey_, v52, v53);

    v37 = (void *)v53;
    goto LABEL_22;
  }
  v80 = v19;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v81 = (_QWORD *)OUTLINED_FUNCTION_118();
  v55 = __swift_project_value_buffer((uint64_t)v81, (uint64_t)qword_1ED7AA1B0);
  v56 = a1;
  swift_bridgeObjectRetain();
  v57 = v56;
  v79 = v55;
  v58 = sub_1C2CFD86C();
  v59 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = OUTLINED_FUNCTION_6_0();
    v78 = OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_8_50(v78);
    *(_DWORD *)v60 = 136315394;
    v61 = v83;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v88[0] = sub_1C28BB120(v33, v61, (uint64_t *)&v84);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_26_10();
    *(_WORD *)(v60 + 12) = 2080;
    v62 = objc_msgSend(v57, sel_typeName);
    v63 = sub_1C2CFDD58();
    v65 = v64;

    *(_QWORD *)&v88[0] = sub_1C28BB120(v63, v65, (uint64_t *)&v84);
    sub_1C2CFE4D8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C28B6000, v58, v59, "\nCannot generically set enumerated values due to incompatibilities between Swift and Objective-C.\nIf you are seeing this message please implement the code to apply values for parameter '%s' on intent type '%s' in your domain code.\nYou can use the typed setters on the intent to set enum types rather than using 'setValue'.", (uint8_t *)v60, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_29_2();
  v66 = (uint64_t)v81;
  v67 = *(v81 - 1);
  v68 = (uint64_t)v80;
  (*(void (**)(char *, uint64_t, _QWORD *))(v67 + 16))(v80, v79, v81);
  __swift_storeEnumTagSinglePayload(v68, 0, 1, v66);
  v69 = (uint64_t)v82;
  sub_1C28BA8B0(v68, (uint64_t)v82, &qword_1ED7A9EC0);
  if (__swift_getEnumTagSinglePayload(v69, 1, v66) == 1)
  {
    sub_1C28BA958((uint64_t)v82, &qword_1ED7A9EC0);
  }
  else
  {
    v70 = sub_1C2CFD86C();
    v71 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = OUTLINED_FUNCTION_6_0();
      v73 = OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_8_50(v73);
      *(_DWORD *)v72 = 136315650;
      v74 = sub_1C2CFE694();
      *(_QWORD *)&v88[0] = sub_1C28BB120(v74, v75, (uint64_t *)&v84);
      OUTLINED_FUNCTION_3_49();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2048;
      *(_QWORD *)&v88[0] = 67;
      sub_1C2CFE4D8();
      *(_WORD *)(v72 + 22) = 2080;
      *(_QWORD *)&v88[0] = sub_1C28BB120(0xD000000000000044, 0x80000001C2D31E80, (uint64_t *)&v84);
      OUTLINED_FUNCTION_3_49();
      _os_log_impl(&dword_1C28B6000, v70, v71, "FatalError at %s:%lu - %s", (uint8_t *)v72, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    (*(void (**)(char *, _QWORD *))(v67 + 8))(v82, v81);
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  memset(v88, 0, sizeof(v88));
  v86 = 0;
  v85 = 0u;
  v84 = 0u;
  v76 = sub_1C2CFD350();
  LOBYTE(v77) = 44;
  sub_1C2AFA880(v76, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)v88, 0, 0, (uint64_t)&v84, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, 0xD000000000000044, 0x80000001C2D31E80, v77, v78,
    v79,
    (uint64_t)v80,
    v81,
    (uint64_t)v82,
    v83,
    v84,
    *((uint64_t *)&v84 + 1),
    v85,
    *((uint64_t *)&v85 + 1),
    v86,
    v87);
  sub_1C28BA958((uint64_t)&v84, (uint64_t *)&unk_1ED7A8750);
  sub_1C28BA958((uint64_t)v88, &qword_1ED7A8480);
  swift_release();
  result = sub_1C2CFE7FC();
  __break(1u);
  return result;
}

uint64_t sub_1C2AA49A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t result;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v4 = MEMORY[0x1E0C80A78](v2, v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4, v7);
  v9 = (char *)&v27 - v8;
  v10 = objc_msgSend(a1, sel__intentInstanceDescription);
  v11 = (void *)sub_1C2CFDD34();
  v12 = objc_msgSend(v10, sel_slotByName_, v11);

  if (v12)
    return (uint64_t)v12;
  *(_QWORD *)&v29 = 0;
  *((_QWORD *)&v29 + 1) = 0xE000000000000000;
  sub_1C2CFE670();
  sub_1C2CFDE54();
  sub_1C2CFDE54();
  sub_1C2CFDE54();
  v14 = objc_msgSend(a1, sel_typeName);
  sub_1C2CFDD58();

  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  v15 = *((_QWORD *)&v29 + 1);
  v28 = v29;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v16 = sub_1C2CFD878();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED7AA1B0);
  v18 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v9, v17, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v16);
  sub_1C28BA8B0((uint64_t)v9, (uint64_t)v6, &qword_1ED7A9EC0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v16) == 1)
  {
    sub_1C28BA958((uint64_t)v6, &qword_1ED7A9EC0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v19 = sub_1C2CFD86C();
    v20 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_QWORD *)&v29 = v27;
      *(_DWORD *)v21 = 136315650;
      v22 = sub_1C2CFE694();
      *(_QWORD *)&v33 = sub_1C28BB120(v22, v23, (uint64_t *)&v29);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      *(_QWORD *)&v33 = 115;
      sub_1C2CFE4D8();
      *(_WORD *)(v21 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v33 = sub_1C28BB120(v28, v15, (uint64_t *)&v29);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C28B6000, v19, v20, "FatalError at %s:%lu - %s", (uint8_t *)v21, 0x20u);
      v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v24, -1, -1);
      MEMORY[0x1C3BC9DE8](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v16);
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v33 = 0u;
  v34 = 0u;
  v31 = 0;
  v29 = 0u;
  v30 = 0u;
  swift_bridgeObjectRetain();
  v25 = sub_1C2CFD350();
  LOBYTE(v26) = 44;
  sub_1C2AFA880(v25, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)&v33, 0, 0, (uint64_t)&v29, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, v28, v15, v26, v27,
    v28,
    v29,
    *((void **)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    v32,
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    SBYTE8(v34));
  swift_bridgeObjectRelease();
  sub_1C28BA958((uint64_t)&v29, (uint64_t *)&unk_1ED7A8750);
  sub_1C28BA958((uint64_t)&v33, &qword_1ED7A8480);
  swift_release();
  result = sub_1C2CFE7FC();
  __break(1u);
  return result;
}

void sub_1C2AA4EE4(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  sub_1C2AA3C28(a1, a2, a3, &v21);
  if (v22)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6098);
    if (swift_dynamicCast())
    {
      v9 = v19;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C28BA958((uint64_t)&v21, &qword_1ED7A8480);
  }
  v9 = MEMORY[0x1E0DEE9D8];
LABEL_6:
  if (*(_QWORD *)(v9 + 16) <= (int64_t)a5)
  {
    sub_1C28BA8B0(a4, (uint64_t)&v19, &qword_1ED7A8480);
    if (!v20)
    {
      sub_1C28BA958((uint64_t)&v19, &qword_1ED7A8480);
      goto LABEL_22;
    }
    sub_1C28E9790(&v19, &v21);
    sub_1C28BB340((uint64_t)&v21, (uint64_t)&v19);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_14:
      v11 = *(_QWORD *)(v9 + 16);
      if (v11 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1C28FD640();
        v9 = v17;
      }
      *(_QWORD *)(v9 + 16) = v11 + 1;
      sub_1C28E9790(&v19, (_OWORD *)(v9 + 32 * v11 + 32));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
      goto LABEL_22;
    }
LABEL_26:
    sub_1C28FD640();
    v9 = v16;
    goto LABEL_14;
  }
  sub_1C28BA8B0(a4, (uint64_t)&v19, &qword_1ED7A8480);
  if (v20)
  {
    sub_1C28E9790(&v19, &v21);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((a5 & 0x8000000000000000) == 0)
        goto LABEL_10;
    }
    else
    {
      sub_1C2BD1394();
      v9 = v15;
      if ((a5 & 0x8000000000000000) == 0)
      {
LABEL_10:
        if (*(_QWORD *)(v9 + 16) > a5)
        {
          v10 = (_OWORD *)(v9 + 32 * a5 + 32);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
          sub_1C28E9790(&v21, v10);
LABEL_22:
          a6[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6098);
          *a6 = v9;
          return;
        }
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1C28BA958((uint64_t)&v19, &qword_1ED7A8480);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C2BD1394();
    v9 = v18;
  }
  v12 = *(_QWORD *)(v9 + 16);
  if (v12 > a5)
  {
    v13 = v12 - 1;
    v14 = v9 + 32 * a5;
    __swift_destroy_boxed_opaque_existential_1(v14 + 32);
    sub_1C28E29B8((char *)(v14 + 64), v13 - a5, (char *)(v14 + 32));
    *(_QWORD *)(v9 + 16) = v13;
    goto LABEL_22;
  }
  __break(1u);
}

uint64_t sub_1C2AA5138(void *a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  _OWORD v5[2];

  memset(v5, 0, sizeof(v5));
  sub_1C2AA3F3C(a1, a2, a3, (uint64_t)v5, a4, 0);
  return sub_1C28BA958((uint64_t)v5, &qword_1ED7A8480);
}

uint64_t OUTLINED_FUNCTION_2_52()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3_49()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_7_49()
{
  return sub_1C2CFDD34();
}

uint64_t OUTLINED_FUNCTION_8_50(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = result;
  return result;
}

void OUTLINED_FUNCTION_9_53(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_1C2AA51C4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793BB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D0E050;
  v1 = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(inited + 32) = 1;
  *(_QWORD *)(inited + 40) = v1;
  v2 = MEMORY[0x1E0CB0338];
  *(_QWORD *)(inited + 48) = 2;
  *(_QWORD *)(inited + 56) = v2;
  v3 = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 64) = 3;
  *(_QWORD *)(inited + 72) = v3;
  v4 = MEMORY[0x1E0DEB188];
  *(_QWORD *)(inited + 80) = 4;
  *(_QWORD *)(inited + 88) = v4;
  v5 = MEMORY[0x1E0DEDBC8];
  *(_QWORD *)(inited + 96) = 5;
  *(_QWORD *)(inited + 104) = v5;
  v6 = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(inited + 112) = 6;
  *(_QWORD *)(inited + 120) = v6;
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 128) = 7;
  *(_QWORD *)(inited + 136) = v7;
  v8 = MEMORY[0x1E0DEE0F8];
  *(_QWORD *)(inited + 144) = 8;
  *(_QWORD *)(inited + 152) = v8;
  v9 = MEMORY[0x1E0DEE190];
  *(_QWORD *)(inited + 160) = 9;
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 176) = 21;
  *(_QWORD *)(inited + 184) = v3;
  *(_QWORD *)(inited + 192) = 22;
  *(_QWORD *)(inited + 200) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793BB8);
  *(_QWORD *)(inited + 208) = 24;
  *(_QWORD *)(inited + 216) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 224) = 25;
  *(_QWORD *)(inited + 232) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793BC0);
  *(_QWORD *)(inited + 240) = 30;
  *(_QWORD *)(inited + 248) = v7;
  *(_QWORD *)(inited + 256) = 31;
  *(_QWORD *)(inited + 264) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8468);
  type metadata accessor for INIntentSlotValueType(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793BC8);
  sub_1C2AA533C();
  result = sub_1C2CFDC8C();
  qword_1EF793BA8 = result;
  return result;
}

unint64_t sub_1C2AA533C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF793BD0;
  if (!qword_1EF793BD0)
  {
    type metadata accessor for INIntentSlotValueType(255);
    result = MEMORY[0x1C3BC9CD4](&unk_1C2CFFCA0, v1);
    atomic_store(result, (unint64_t *)&qword_1EF793BD0);
  }
  return result;
}

uint64_t sub_1C2AA537C(void *a1)
{
  return sub_1C2AA5394(a1, (SEL *)&selRef_contactIdentifier);
}

uint64_t sub_1C2AA5388(void *a1)
{
  return sub_1C2AA5394(a1, (SEL *)&selRef_customIdentifier);
}

uint64_t sub_1C2AA5394(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1C2CFDD58();

  return v4;
}

unint64_t INPersonHandle.debugDescriptionLite.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  id v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v1 = sub_1C2CFD800();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1C2CFD824();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED7AA038 != -1)
    swift_once();
  v11 = qword_1ED7AA1A8;
  v12 = sub_1C2CFE2A4();
  if (!os_log_type_enabled(v11, v12))
    return 0xD00000000000001BLL;
  if (qword_1ED7A8C90 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED7AA168);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v13, v6);
  v14 = v0;
  sub_1C2CFD7F4();
  v15 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v15 = 0;
  sub_1C28E89A0(v15, 2u, (uint64_t)v10, (uint64_t)v5, "INIntent.debugDescriptionLite", "", v14);
  v17 = v16;
  MEMORY[0x1C3BC9DE8](v15, -1, -1);
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
  return v17;
}

uint64_t sub_1C2AA55D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v4 = objc_msgSend(a1, sel_label);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793BD8);
  v5 = sub_1C2CFDDAC();
  v7 = v6;
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C2AFFE18(v5, v7, 0x6C6562616CLL, 0xE500000000000000);
  swift_bridgeObjectRelease();
  v8 = sub_1C2AA57B0(a1);
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    swift_isUniquelyReferenced_nonNull_native();
    sub_1C2AFFE18(v10, v11, 0x65756C6176, 0xE500000000000000);
  }
  else
  {
    sub_1C2A3FB38();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  v14 = sub_1C2CFEB50();
  v15 = v12;
  sub_1C2CFDE54();
  sub_1C2CFDC74();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1C2CFDE54();
  *a2 = v14;
  a2[1] = v15;
  return result;
}

unint64_t sub_1C2AA5790()
{
  return INPersonHandle.debugDescriptionLite.getter();
}

uint64_t sub_1C2AA57B0(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_value);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C2CFDD58();

  return v3;
}

void static Acceptance.no()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  OUTLINED_FUNCTION_0_57(a1);
}

void static Acceptance.yes()(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  OUTLINED_FUNCTION_0_57(a1);
}

uint64_t Acceptance.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C2AA5844(v1, a1);
}

uint64_t sub_1C2AA5844(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AcceptanceType(a2, a1);
  return a2;
}

uint64_t Acceptance.type.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2AA5880(a1, v1);
}

uint64_t sub_1C2AA5880(uint64_t a1, uint64_t a2)
{
  assignWithTake for AcceptanceType(a2, a1);
  return a2;
}

uint64_t (*Acceptance.type.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t static Acceptance.replan<A>(with:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1C2AA58DC(a1, a2, 0, 0, a3);
}

uint64_t static Acceptance.digress<A>(with:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1C2AA58DC(a1, a2, 1uLL, 1, a3);
}

uint64_t sub_1C2AA58DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;

  v14 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = type metadata accessor for LifeCycleModifierFlow(0, AssociatedTypeWitness, v10, v11);
  *(_QWORD *)(a5 + 24) = v12;
  *(_QWORD *)(a5 + 32) = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for LifeCycleModifierFlow<A>, v12);
  result = ActingFlow.attach(option:)(&v14, a1, a2, (uint64_t *)a5);
  *(_BYTE *)(a5 + 40) = a4;
  return result;
}

uint64_t dispatch thunk of InputAccepting.accept(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for AcceptanceType(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 <= 1)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t initializeWithCopy for AcceptanceType(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for AcceptanceType(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 <= 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v7 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v8 = *a2;
      v9 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v8;
      *(_OWORD *)(a1 + 16) = v9;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for AcceptanceType(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 <= 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AcceptanceType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AcceptanceType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AcceptanceType()
{
  return &type metadata for AcceptanceType;
}

uint64_t destroy for Acceptance(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 1u)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t initializeWithCopy for Acceptance(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;

  if (*(_BYTE *)(a2 + 40) == 1)
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (*(_BYTE *)(a2 + 40))
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v3 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v3;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for Acceptance(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  if ((__int128 *)a1 != a2)
  {
    sub_1C2AA5DC4(a1);
    if (*((_BYTE *)a2 + 40) == 1)
    {
      v5 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v5 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (*((_BYTE *)a2 + 40))
    {
      v6 = *a2;
      v7 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v6;
      *(_OWORD *)(a1 + 16) = v7;
    }
    else
    {
      v4 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t sub_1C2AA5DC4(uint64_t a1)
{
  destroy for AcceptanceType(a1);
  return a1;
}

_OWORD *assignWithTake for Acceptance(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  if (a1 != a2)
  {
    sub_1C2AA5DC4((uint64_t)a1);
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Acceptance(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Acceptance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Acceptance()
{
  return &type metadata for Acceptance;
}

void OUTLINED_FUNCTION_0_57(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 40) = 2;
}

void InputBinding.wrappedValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_10_55();
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(v0, v1);
  OUTLINED_FUNCTION_18();
}

void sub_1C2AA5F14()
{
  InputBinding.wrappedValue.getter();
}

uint64_t sub_1C2AA5F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a4 + a3 - 8);
  MEMORY[0x1E0C80A78](a1, a1);
  v6 = (char *)&v12 - v5;
  (*(void (**)(char *))(v7 + 16))((char *)&v12 - v5);
  v10 = type metadata accessor for InputBinding(0, v4, v8, v9);
  return InputBinding.wrappedValue.setter((uint64_t)v6, v10);
}

uint64_t InputBinding.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2[3];
  v9 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v7, v8, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void (*InputBinding.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v5[5] = malloc(v8);
  InputBinding.wrappedValue.getter();
  return sub_1C2AA60EC;
}

void sub_1C2AA60EC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = v2[3];
    v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    InputBinding.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    InputBinding.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t InputBinding.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t sub_1C2AA619C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C28B99EC(a1, a2);
}

void sub_1C2AA61A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10_55();
  *v0 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
  OUTLINED_FUNCTION_18();
}

void InputBinding.entity<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_1C2AA63A0(a1, a2, a3, a4, &qword_1EF793BE0, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2AA6E60, a5);
}

{
  sub_1C2AA63A0(a1, a2, a3, a4, &qword_1EF793BE0, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2AA6F80, a5);
}

