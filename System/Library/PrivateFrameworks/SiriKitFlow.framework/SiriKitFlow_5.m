uint64_t OUTLINED_FUNCTION_7_67()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_8_65(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C29BA7C4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_11_59()
{
  return sub_1C2CFC090();
}

uint64_t OUTLINED_FUNCTION_19_50()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 96))();
}

uint64_t OUTLINED_FUNCTION_27_39()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_29_37()
{
  JUMPOUT(0x1C3BC9170);
}

uint64_t OUTLINED_FUNCTION_30_40()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_31_38(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C29BA7C4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_38_34()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C28CAC04(v0, v1);
}

void OUTLINED_FUNCTION_41_30(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C29BA7C4(a1, a2, v2);
}

uint64_t sub_1C2B1B24C()
{
  unint64_t v0;
  uint64_t v1;

  v0 = sub_1C2CFC588();
  v1 = sub_1C28CAE6C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2B1B444()
{
  unint64_t v0;
  uint64_t v1;

  v0 = sub_1C2CFC228();
  v1 = sub_1C28CAE6C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1C2B1B63C(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[6];
  uint64_t v31[5];
  uint64_t v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x1E0C80A78](v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7208);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_10();
  v11 = v10 - v9;
  sub_1C28CB224(v10 - v9);
  v12 = sub_1C2CFBEF8();
  if (__swift_getEnumTagSinglePayload(v11, 1, v12) == 1)
  {
    sub_1C28BB3A4(v11, &qword_1ED7A7208);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_118();
    v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_17_46(v14);
    OUTLINED_FUNCTION_15_55();
    if (__swift_getEnumTagSinglePayload((uint64_t)v1, 1, v13) == 1)
    {
      sub_1C28BB3A4((uint64_t)v1, &qword_1ED7A9EC0);
    }
    else
    {
      sub_1C2CFD86C();
      v15 = OUTLINED_FUNCTION_123();
      if (OUTLINED_FUNCTION_10_1(v15))
      {
        v16 = OUTLINED_FUNCTION_6_0();
        v30[0] = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v16 = 136315650;
        v17 = OUTLINED_FUNCTION_39_30();
        v31[0] = OUTLINED_FUNCTION_38_35(v17, v18);
        OUTLINED_FUNCTION_2_7();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_74();
        OUTLINED_FUNCTION_17_3(164);
        *(_WORD *)(v16 + 22) = 2080;
        v31[0] = sub_1C28BB120(0xD000000000000040, 0x80000001C2D34940, v30);
        OUTLINED_FUNCTION_2_7();
        OUTLINED_FUNCTION_13_23(&dword_1C28B6000, v19, v20, "FatalError at %s:%lu - %s");
        OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_32_30();
    }
    if (qword_1ED7A84D8 != -1)
      swift_once();
    OUTLINED_FUNCTION_37_32();
    v21 = sub_1C2CFD350();
    LOBYTE(v29) = 44;
    OUTLINED_FUNCTION_0_6(v21, 0xD000000000000012, v22, v23, v24, v25, v26, v27, v28, 0xD000000000000040, 0x80000001C2D34940, v29, v30[0], v30[1], v30[2], (void *)v30[3], v30[4], v30[5], v31[0],
      v31[1],
      v31[2],
      v31[3],
      v31[4],
      v32);
    sub_1C28BB3A4((uint64_t)v30, (uint64_t *)&unk_1ED7A8750);
    sub_1C28BB3A4((uint64_t)v31, &qword_1ED7A8480);
    swift_release();
    OUTLINED_FUNCTION_29_38();
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, v11, v12);
    OUTLINED_FUNCTION_1();
  }
}

uint64_t OUTLINED_FUNCTION_0_76()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_73()
{
  return sub_1C2CFE9DC();
}

uint64_t OUTLINED_FUNCTION_3_69(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_1C2CFC4C8();
}

uint64_t OUTLINED_FUNCTION_4_75()
{
  return sub_1C2CFE9DC();
}

uint64_t OUTLINED_FUNCTION_6_61()
{
  return sub_1C2CFBEF8();
}

uint64_t OUTLINED_FUNCTION_9_70()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15_55()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v2, 0, 1, v1);
  return sub_1C294E19C(v2, v0);
}

uint64_t OUTLINED_FUNCTION_17_46(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v2, a1, v1);
}

uint64_t OUTLINED_FUNCTION_19_51()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_29_38()
{
  return sub_1C2CFE7FC();
}

uint64_t OUTLINED_FUNCTION_30_41()
{
  return 0x6E6F6D6D6F63;
}

unint64_t OUTLINED_FUNCTION_31_39()
{
  return 0xD000000000000013;
}

uint64_t OUTLINED_FUNCTION_33_32@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_38_35(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C28BB120(a1, a2, (uint64_t *)(v2 - 160));
}

uint64_t OUTLINED_FUNCTION_39_30()
{
  return sub_1C2CFE694();
}

uint64_t Parse.PegasusResult.clientComponent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1C2CFBDE4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  OUTLINED_FUNCTION_11_4();
  v3 = sub_1C2CFBD84();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  OUTLINED_FUNCTION_10();
  v8 = v7 - v6;
  sub_1C2CFBD90();
  sub_1C2CFBD6C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
  v9 = sub_1C2CFBDD8();
  OUTLINED_FUNCTION_116_5(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C28CAD70(v9);
  return swift_bridgeObjectRelease();
}

uint64_t Parse.ServerConversion.__allocating_init(siriKitIntent:confirmationState:parameterMetadata:appResolutionStateProviding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B1BC18(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B1BEF4);
}

id Parse.ServerConversion.siriKitIntent.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void Parse.ServerConversion.confirmationState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t Parse.ServerConversion.parameterMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Parse.ServerConversion.appResolutionStateProviding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C28B9A04(v1 + 40, a1);
}

uint64_t Parse.ServerConversion.__allocating_init(siriKitIntent:confirmationState:appResolutionStateProviding:)(uint64_t a1, char *a2, __int128 *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  Parse.ServerConversion.init(siriKitIntent:confirmationState:appResolutionStateProviding:)(a1, a2, a3);
  return v6;
}

uint64_t Parse.ServerConversion.init(siriKitIntent:confirmationState:appResolutionStateProviding:)(uint64_t a1, char *a2, __int128 *a3)
{
  uint64_t v3;
  char v4;

  v4 = *a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 32) = MEMORY[0x1E0DEE9D8];
  sub_1C28B99EC(a3, v3 + 40);
  return v3;
}

uint64_t Parse.ServerConversion.init(siriKitIntent:confirmationState:parameterMetadata:appResolutionStateProviding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B1BC18(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B1BFD4);
}

uint64_t sub_1C2B1BC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_97_10();
  v12 = *(_QWORD *)(v11 + 24);
  v13 = *(_QWORD *)(v11 + 32);
  v14 = __swift_mutable_project_boxed_opaque_existential_1(v11, v12);
  MEMORY[0x1E0C80A78](v14, v14);
  OUTLINED_FUNCTION_10();
  v17 = v16 - v15;
  (*(void (**)(uint64_t))(v18 + 16))(v16 - v15);
  v19 = a5(v9, v8, v7, v17, v5, v12, v13);
  __swift_destroy_boxed_opaque_existential_1(v6);
  return v19;
}

uint64_t Parse.ServerConversion.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return v0;
}

uint64_t Parse.ServerConversion.__deallocating_deinit()
{
  Parse.ServerConversion.deinit();
  return swift_deallocClassInstance();
}

uint64_t Parse.DirectInvocation.userData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Parse.PegasusResult.serverDrivenExperience.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C2CFBD84();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0, v2);
  OUTLINED_FUNCTION_11_4();
  sub_1C2CFBD90();
  sub_1C2CFBD78();
  return OUTLINED_FUNCTION_116_5(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

uint64_t Parse.PegasusResult.response.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_3_70();
  return OUTLINED_FUNCTION_18_47(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t Parse.PegasusResult.init(pegasusResponse:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_70();
  return OUTLINED_FUNCTION_18_47(a2, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

void Parse.nlLocation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = type metadata accessor for Parse(0);
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_10();
  sub_1C2A15858(v0, v4 - v3);
  v5 = (char *)sub_1C2B1BE7C + 4 * byte_1C2D14760[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C2B1BE7C()
{
  OUTLINED_FUNCTION_4_76();
  return sub_1C2CFD284();
}

uint64_t sub_1C2B1BEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v11 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, a6);
  v15 = sub_1C2B1BFD4(a1, a2, a3, (uint64_t)v13, v14, a6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a4, a6);
  return v15;
}

uint64_t sub_1C2B1BFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_0;
  char v16;

  OUTLINED_FUNCTION_97_10();
  v12[8] = v13;
  v12[9] = v14;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12 + 5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_0, v6, a6);
  v16 = *v8;
  *(_QWORD *)(a5 + 16) = v9;
  *(_BYTE *)(a5 + 24) = v16;
  *(_QWORD *)(a5 + 32) = v7;
  return a5;
}

_QWORD *assignWithCopy for Parse(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;

  if (a1 != a2)
  {
    sub_1C2A2F8C4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_18;
      case 1u:
        v7 = sub_1C2CFCD44();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)((char *)a1 + *(int *)(v8 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 48));
        sub_1C2CFD350();
        goto LABEL_18;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 3u:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_18;
      case 4u:
        v9 = sub_1C2CFBD9C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_18;
      case 5u:
        v10 = (void *)*a2;
        *a1 = *a2;
        v11 = v10;
        goto LABEL_18;
      case 6u:
        v12 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        v13 = (int *)type metadata accessor for USOParse();
        v14 = v13[5];
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
          __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
        }
        v26 = v13[6];
        v27 = (_QWORD *)((char *)a1 + v26);
        v28 = (_QWORD *)((char *)a2 + v26);
        *v27 = *v28;
        v27[1] = v28[1];
        v29 = v13[7];
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = *(_DWORD *)v31;
        v30[4] = v31[4];
        *(_DWORD *)v30 = v32;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 7u:
        v19 = sub_1C2CFBFD0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v20 = (int *)type metadata accessor for USOParse();
        v21 = v20[5];
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
        }
        v33 = v20[6];
        v34 = (_QWORD *)((char *)a1 + v33);
        v35 = (_QWORD *)((char *)a2 + v33);
        *v34 = *v35;
        v34[1] = v35[1];
        v36 = v20[7];
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = *(_DWORD *)v38;
        v37[4] = v38[4];
        *(_DWORD *)v37 = v39;
        v40 = (int *)type metadata accessor for LinkParse();
        v41 = v40[5];
        v42 = (_QWORD *)((char *)a1 + v41);
        v43 = (_QWORD *)((char *)a2 + v41);
        *v42 = *v43;
        v42[1] = v43[1];
        v44 = v40[6];
        v45 = (_QWORD *)((char *)a1 + v44);
        v46 = (_QWORD *)((char *)a2 + v44);
        *v45 = *v46;
        v45[1] = v46[1];
        v47 = v40[7];
        v48 = (_QWORD *)((char *)a1 + v47);
        v49 = (_QWORD *)((char *)a2 + v47);
        *v48 = *v49;
        v48[1] = v49[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for Parse(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_14;
    case 1u:
      v7 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
      goto LABEL_14;
    case 4u:
      v9 = sub_1C2CFBD9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_14;
    case 6u:
      v10 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = (int *)type metadata accessor for USOParse();
      v12 = v11[5];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      }
      *(_OWORD *)&a1[v11[6]] = *(_OWORD *)&a2[v11[6]];
      v24 = v11[7];
      v25 = &a1[v24];
      v26 = &a2[v24];
      v25[4] = v26[4];
      *(_DWORD *)v25 = *(_DWORD *)v26;
      goto LABEL_14;
    case 7u:
      v17 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v18 = (int *)type metadata accessor for USOParse();
      v19 = v18[5];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = sub_1C2CFBF28();
      if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
      }
      *(_OWORD *)&a1[v18[6]] = *(_OWORD *)&a2[v18[6]];
      v27 = v18[7];
      v28 = &a1[v27];
      v29 = &a2[v27];
      v28[4] = v29[4];
      *(_DWORD *)v28 = *(_DWORD *)v29;
      v30 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&a1[v30[5]] = *(_OWORD *)&a2[v30[5]];
      *(_OWORD *)&a1[v30[6]] = *(_OWORD *)&a2[v30[6]];
      *(_OWORD *)&a1[v30[7]] = *(_OWORD *)&a2[v30[7]];
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for Parse(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;

  if (a1 != a2)
  {
    sub_1C2A2F8C4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_15;
      case 1u:
        v7 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
        goto LABEL_15;
      case 4u:
        v9 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        goto LABEL_15;
      case 6u:
        v10 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = (int *)type metadata accessor for USOParse();
        v12 = v11[5];
        v13 = &a1[v12];
        v14 = &a2[v12];
        v15 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
        }
        *(_OWORD *)&a1[v11[6]] = *(_OWORD *)&a2[v11[6]];
        v24 = v11[7];
        v25 = &a1[v24];
        v26 = &a2[v24];
        v25[4] = v26[4];
        *(_DWORD *)v25 = *(_DWORD *)v26;
        goto LABEL_15;
      case 7u:
        v17 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
        v18 = (int *)type metadata accessor for USOParse();
        v19 = v18[5];
        v20 = &a1[v19];
        v21 = &a2[v19];
        v22 = sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
        }
        *(_OWORD *)&a1[v18[6]] = *(_OWORD *)&a2[v18[6]];
        v27 = v18[7];
        v28 = &a1[v27];
        v29 = &a2[v27];
        v28[4] = v29[4];
        *(_DWORD *)v28 = *(_DWORD *)v29;
        v30 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&a1[v30[5]] = *(_OWORD *)&a2[v30[5]];
        *(_OWORD *)&a1[v30[6]] = *(_OWORD *)&a2[v30[6]];
        *(_OWORD *)&a1[v30[7]] = *(_OWORD *)&a2[v30[7]];
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C2B1CA94()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[12];

  result = sub_1C2CFCD44();
  if (v1 <= 0x3F)
  {
    v5[4] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v5[5] = v5;
    v5[6] = &unk_1C2D147D8;
    v5[7] = &unk_1C2D147F0;
    result = sub_1C2CFBD9C();
    if (v2 <= 0x3F)
    {
      v5[8] = *(_QWORD *)(result - 8) + 64;
      v5[9] = MEMORY[0x1E0DE9D10] + 64;
      result = type metadata accessor for USOParse();
      if (v3 <= 0x3F)
      {
        v5[10] = *(_QWORD *)(result - 8) + 64;
        result = type metadata accessor for LinkParse();
        if (v4 <= 0x3F)
        {
          v5[11] = *(_QWORD *)(result - 8) + 64;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for Parse.ServerConversion()
{
  return objc_opt_self();
}

uint64_t method lookup function for Parse.ServerConversion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Parse.ServerConversion.__allocating_init(siriKitIntent:confirmationState:appResolutionStateProviding:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Parse.ServerConversion.__allocating_init(siriKitIntent:confirmationState:parameterMetadata:appResolutionStateProviding:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

_QWORD *assignWithCopy for Parse.DirectInvocation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C2CFBD9C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for Parse.PegasusResult(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C2CFBD9C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C2CFBD9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C2CFBD9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C2CFBD9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C2CFBD9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Parse.PegasusResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2B1CDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_70();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Parse.PegasusResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2B1CDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_70();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1C2B1CE24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C2CFBD9C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_70()
{
  return sub_1C2CFBD9C();
}

uint64_t OUTLINED_FUNCTION_4_76()
{
  uint64_t v0;

  return sub_1C2A2F8C4(v0);
}

void sub_1C2B1CE9C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  void *v5;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t inited;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t type;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[40];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;

  v8 = *a1;
  v9 = OUTLINED_FUNCTION_0_77();
  OUTLINED_FUNCTION_207_0();
  OUTLINED_FUNCTION_215_0();
  sub_1C28C19F0();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v86 + 1))
  {
    v88 = v85;
    v89 = v86;
    v90 = v87;
    OUTLINED_FUNCTION_19_0();
    v10 = objc_msgSend(v8, sel_parameters);
    v11 = sub_1C2CFDC68();

    swift_isUniquelyReferenced_nonNull_native();
    sub_1C2B00004(v11, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = OUTLINED_FUNCTION_0_77();
    sub_1C2CFDD58();
    OUTLINED_FUNCTION_3_71();
    v21 = OUTLINED_FUNCTION_2_74(v13, v14, v15, v16, v17, v18, v19, v20, v59, v62, v65, v69, v72, v75, v78, v81);
    OUTLINED_FUNCTION_1_69(v21, v22, v23, v24, v25, v26, v27, v28, v60, v63, v66, v70, v73, v76, v79, v82);
    sub_1C29B63FC((uint64_t)&v88);
  }
  else
  {
    sub_1C28BA958((uint64_t)&v85, &qword_1EF790748);
    v29 = OUTLINED_FUNCTION_0_77();
    OUTLINED_FUNCTION_207_0();
    OUTLINED_FUNCTION_215_0();
    sub_1C28C16A0();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v89 + 1))
    {
      sub_1C28B99EC(&v88, (uint64_t)v84);
      sub_1C28B9A04((uint64_t)v84, (uint64_t)&v88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790A90);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
      *(_QWORD *)(inited + 32) = a4;
      *(_QWORD *)(inited + 40) = a5;
      OUTLINED_FUNCTION_19_0();
      v31 = objc_msgSend(v8, sel_parameters);
      v32 = sub_1C2CFDC68();

      *(_QWORD *)(inited + 48) = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
      *((_QWORD *)&v90 + 1) = sub_1C2CFDC8C();
      v33 = OUTLINED_FUNCTION_0_77();
      sub_1C2CFDD58();
      OUTLINED_FUNCTION_3_71();
      v42 = OUTLINED_FUNCTION_2_74(v34, v35, v36, v37, v38, v39, v40, v41, v59, v62, v65, v69, v72, v75, v78, v81);
      OUTLINED_FUNCTION_1_69(v42, v43, v44, v45, v46, v47, v48, v49, v61, v64, v67, v71, v74, v77, v80, v83);
      sub_1C29B63FC((uint64_t)&v88);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
    }
    else
    {
      sub_1C28BA958((uint64_t)&v88, &qword_1EF78BC90);
      if (qword_1ED7AA040 != -1)
        swift_once();
      v50 = sub_1C2CFD878();
      __swift_project_value_buffer(v50, (uint64_t)qword_1ED7AA1B0);
      swift_bridgeObjectRetain_n();
      v51 = v8;
      v52 = sub_1C2CFD86C();
      v53 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v52, v53))
      {
        type = v53;
        v54 = swift_slowAlloc();
        *(_QWORD *)&v88 = swift_slowAlloc();
        *(_DWORD *)v54 = 136315394;
        v55 = objc_msgSend(v51, sel_name);
        v56 = OUTLINED_FUNCTION_207_0();
        v58 = v57;

        *(_QWORD *)&v85 = sub_1C28BB120(v56, v58, (uint64_t *)&v88);
        sub_1C2CFE4D8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 12) = 2080;
        OUTLINED_FUNCTION_19_0();
        *(_QWORD *)&v85 = sub_1C28BB120(a4, a5, (uint64_t *)&v88);
        sub_1C2CFE4D8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C28B6000, v52, type, "Cannot find parser matching name '%s' for eventId '%s'. Skipping.", (uint8_t *)v54, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }

      swift_bridgeObjectRelease_n();
    }
  }
}

ValueMetadata *type metadata accessor for ParsingHelper()
{
  return &type metadata for ParsingHelper;
}

ValueMetadata *type metadata accessor for ParsingHelper.UserInputParsingItems()
{
  return &type metadata for ParsingHelper.UserInputParsingItems;
}

id OUTLINED_FUNCTION_0_77()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, *(SEL *)(v0 + 1656));
}

void OUTLINED_FUNCTION_1_69(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  uint64_t v17;
  va_list va;

  va_start(va, a16);
  sub_1C2A3D480((uint64_t)va, v16, v17);
}

uint64_t OUTLINED_FUNCTION_2_74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  va_list va;

  va_start(va, a16);
  return sub_1C297EE8C(v16 - 144, (uint64_t)va);
}

void OUTLINED_FUNCTION_3_71()
{
  void *v0;

}

id sub_1C2B1D360(int a1, uint64_t a2, uint64_t a3, uint8_t *a4)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  unint64_t v37;
  id v38;
  char v39;
  id v40;
  uint64_t v41;
  void *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char v48;
  uint64_t v49;
  void *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  id v57;
  os_log_type_t v58;
  uint8_t *v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  _QWORD v78[2];
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;

  v5 = v4;
  v82 = a4;
  v78[1] = a3;
  v80 = a2;
  v81 = a1;
  v6 = sub_1C2CFBCAC();
  v79 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D88508]), sel_init);
  v11 = objc_msgSend(v4, sel_fullSpeak);
  v12 = OUTLINED_FUNCTION_188();
  v14 = v13;

  v16 = OUTLINED_FUNCTION_199_1(v15, sel_supportingSpeak);
  v17 = OUTLINED_FUNCTION_188();
  v19 = v18;

  sub_1C2904BF8(v12, v14, v17, v19);
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = swift_bridgeObjectRelease();
  if (v21)
  {
    v23 = (void *)sub_1C2CFDD34();
    v22 = swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  OUTLINED_FUNCTION_157_2(v22, sel_setSpeakableText_);

  v25 = OUTLINED_FUNCTION_199_1(v24, sel_fullPrint);
  v26 = OUTLINED_FUNCTION_188();
  v28 = v27;

  v30 = OUTLINED_FUNCTION_199_1(v29, sel_supportingPrint);
  v31 = OUTLINED_FUNCTION_188();
  v33 = v32;

  sub_1C2904BF8(v26, (unint64_t)v28, v31, v33);
  v35 = v34;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v35)
  {
    v36 = (void *)sub_1C2CFDD34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = 0;
  }
  objc_msgSend(v10, sel_setText_, v36);

  v37 = sub_1C2B093AC();
  v38 = OUTLINED_FUNCTION_199_1(v37, sel_printOnly);
  OUTLINED_FUNCTION_7_68();
  v39 = OUTLINED_FUNCTION_6_62();

  if ((v39 & 1) != 0)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v41 = OUTLINED_FUNCTION_118();
    v42 = (void *)__swift_project_value_buffer(v41, (uint64_t)qword_1ED7AA1B0);
    sub_1C2CFD86C();
    v43 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_56(v43))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_3_72(&dword_1C28B6000, v44, v45, "ResponseFactory: The printOnly flag is set to 1. Removing speakable text.");
      OUTLINED_FUNCTION_0_78();
    }

    v40 = OUTLINED_FUNCTION_10_69(v46, sel_setSpeakableText_);
  }
  v47 = OUTLINED_FUNCTION_199_1((uint64_t)v40, sel_spokenOnly);
  OUTLINED_FUNCTION_7_68();
  v48 = OUTLINED_FUNCTION_6_62();

  if ((v48 & 1) != 0)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v49 = OUTLINED_FUNCTION_118();
    v50 = (void *)__swift_project_value_buffer(v49, (uint64_t)qword_1ED7AA1B0);
    sub_1C2CFD86C();
    v51 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_56(v51))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_3_72(&dword_1C28B6000, v52, v53, "ResponseFactory: The spokenOnly flag is set to 1. Removing printed text.");
      OUTLINED_FUNCTION_0_78();
    }

    OUTLINED_FUNCTION_10_69(v54, sel_setText_);
  }
  if (sub_1C2904C64())
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v55 = OUTLINED_FUNCTION_118();
    v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1ED7AA1B0);
    v57 = v5;
    sub_1C2CFD86C();
    v58 = OUTLINED_FUNCTION_30();
    if (os_log_type_enabled(v56, v58))
    {
      v59 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v84 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v59 = 136315138;
      v82 = v59 + 4;
      v60 = objc_msgSend(v57, sel_dialogId);
      v61 = sub_1C2CFDD58();
      v63 = v62;

      v83 = sub_1C28BB120(v61, v63, &v84);
      sub_1C2CFE4D8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C28B6000, v56, v58, "ResponseFactory: Text and speakable text are empty for dialog '%s'. Converting to nil utterance view.", v59, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0_78();
    }

    return 0;
  }
  else
  {
    v64 = v10;
    sub_1C2CFBCA0();
    v65 = sub_1C2CFBC70();
    v67 = v66;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v9, v6);
    sub_1C29BB800(v65, v67, v64);

    v68 = v64;
    v69 = (void *)sub_1C2CFE400();
    OUTLINED_FUNCTION_157_2((uint64_t)v69, sel_setListenAfterSpeaking_);

    v71 = OUTLINED_FUNCTION_199_1(v70, sel_dialogId);
    v72 = OUTLINED_FUNCTION_188();
    v74 = v73;

    sub_1C2904D08(v72, v74, v68);
    v75 = objc_msgSend(v68, sel_setCanUseServerTTS_, v81 & 1);
    if (v82)
    {
      v75 = (id)sub_1C2CFDD34();
      v76 = v75;
    }
    else
    {
      v76 = 0;
    }
    OUTLINED_FUNCTION_157_2((uint64_t)v75, sel_setDialogCategory_);

  }
  return v68;
}

void OUTLINED_FUNCTION_0_78()
{
  JUMPOUT(0x1C3BC9DE8);
}

void OUTLINED_FUNCTION_3_72(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_6_62()
{
  return sub_1C2CFE418();
}

uint64_t OUTLINED_FUNCTION_7_68()
{
  return sub_1C2CFE400();
}

id OUTLINED_FUNCTION_10_69(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2, 0);
}

void sub_1C2B1D998(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C2CFDD34();
  objc_msgSend(a3, sel_setViewId_, v4);

}

uint64_t OUTLINED_FUNCTION_5_72()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
  return sub_1C2CFE4D8();
}

unint64_t OUTLINED_FUNCTION_7_69()
{
  char v0;
  uint64_t v1;
  char v2;

  if (v0)
    v2 = 1;
  else
    v2 = 0;
  return sub_1C2979BD4(0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_67()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1C28EC278(v0, v1);
}

uint64_t OUTLINED_FUNCTION_20_59()
{
  return sub_1C2CFDFEC();
}

void OUTLINED_FUNCTION_21_52(void *a1, uint64_t a2, os_log_type_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;

  _os_log_impl(a1, v4, a3, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_22_52(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  return v1 - 144;
}

void OUTLINED_FUNCTION_23_54(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C29058A0(v5, v6, v4, a4);
}

id OUTLINED_FUNCTION_25_44(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id OUTLINED_FUNCTION_26_44()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_27_40()
{
  return sub_1C2CFE040();
}

void PatternFlowProvider.__allocating_init(outputPublisher:responseGenerator:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_5_2();
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  OUTLINED_FUNCTION_174_2();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_70_17(v5, v6, v7);
  OUTLINED_FUNCTION_94_16();
  __swift_destroy_boxed_opaque_existential_1(a2);
  OUTLINED_FUNCTION_8_0();
}

void PatternFlowProviding.makeResponseFlowWithListPrompt<A>(items:paginationParameters:strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(__int128 *__return_ptr, uint64_t, uint64_t);
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;

  OUTLINED_FUNCTION_9();
  v27 = v0;
  v25 = v1;
  v26 = v2;
  v4 = v3;
  v24 = v5;
  v6 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v1, v7);
  OUTLINED_FUNCTION_10();
  v10 = v9 - v8;
  v12 = *(_QWORD *)v11;
  v13 = *(_BYTE *)(v11 + 8);
  v14 = *(_BYTE *)(v11 + 9);
  v15 = *(_QWORD *)(v11 + 16);
  v16 = *(_BYTE *)(v11 + 24);
  v17 = *(_BYTE *)(v11 + 25);
  v23 = *(_BYTE *)(v11 + 26);
  v21 = type metadata accessor for ListPromptFlow(0, v19, v20, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, v24, v4);
  v29 = v12;
  v30 = v13;
  v31 = v14;
  v32 = v15;
  v33 = v16;
  v34 = v17;
  v35 = v23;
  v22 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 8);
  OUTLINED_FUNCTION_50_0();
  v22(v28, v27, v26);
  *(_QWORD *)&v28[0] = sub_1C2AC061C(v10, v25, &v29, v28);
  MEMORY[0x1C3BC9CD4](&unk_1C2D0F734, v21);
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_32_21();
  OUTLINED_FUNCTION_1();
}

uint64_t PromptType.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_12();
  return v1;
}

uint64_t sub_1C2B1DC44()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDDC4();
  qword_1EF7987E0 = result;
  *(_QWORD *)algn_1EF7987E8 = v1;
  return result;
}

uint64_t static PromptType.action.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1EF786DA8, &qword_1EF7987E0, a1);
}

uint64_t sub_1C2B1DC90()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDDC4();
  qword_1EF7987F0 = result;
  *(_QWORD *)algn_1EF7987F8 = v1;
  return result;
}

uint64_t static PromptType.continuation.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1EF786DB0, &qword_1EF7987F0, a1);
}

uint64_t sub_1C2B1DCE8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDDC4();
  qword_1EF798800 = result;
  *(_QWORD *)algn_1EF798808 = v1;
  return result;
}

uint64_t static PromptType.menu.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1EF786DB8, &qword_1EF798800, a1);
}

uint64_t sub_1C2B1DD30()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1C2CFDDC4();
  qword_1EF798810 = result;
  *(_QWORD *)algn_1EF798818 = v1;
  return result;
}

uint64_t static PromptType.selection.getter@<X0>(_QWORD *a1@<X8>)
{
  return OUTLINED_FUNCTION_0_0(&qword_1EF786DC0, &qword_1EF798810, a1);
}

uint64_t sub_1C2B1DD84()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7988E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D018D0;
  if (qword_1EF786DA8 != -1)
    swift_once();
  v1 = *(_QWORD *)algn_1EF7987E8;
  *(_QWORD *)(inited + 32) = qword_1EF7987E0;
  *(_QWORD *)(inited + 40) = v1;
  v2 = qword_1EF786DB0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = *(_QWORD *)algn_1EF7987F8;
  *(_QWORD *)(inited + 48) = qword_1EF7987F0;
  *(_QWORD *)(inited + 56) = v3;
  v4 = qword_1EF786DB8;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = *(_QWORD *)algn_1EF798808;
  *(_QWORD *)(inited + 64) = qword_1EF798800;
  *(_QWORD *)(inited + 72) = v5;
  v6 = qword_1EF786DC0;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = *(_QWORD *)algn_1EF798818;
  *(_QWORD *)(inited + 80) = qword_1EF798810;
  *(_QWORD *)(inited + 88) = v7;
  swift_bridgeObjectRetain();
  v8 = sub_1C2A279E4(inited);
  swift_bridgeObjectRelease();
  result = sub_1C2AB0C80(v8);
  qword_1EF798820 = result;
  return result;
}

SiriKitFlow::PromptType_optional __swiftcall PromptType.init(settingValue:)(Swift::String_optional settingValue)
{
  uint64_t *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  os_log_type_t v13;
  _DWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  SiriKitFlow::PromptType_optional result;
  uint64_t v19;

  object = settingValue.value._object;
  countAndFlagsBits = settingValue.value._countAndFlagsBits;
  v4 = v1;
  if (settingValue.value._object)
  {
    v5 = sub_1C2CFDDC4();
    v7 = v6;
    if (qword_1EF786DC8 != -1)
      swift_once();
    sub_1C2A27BD0(v5, v7, qword_1EF798820);
    if ((v8 & 1) != 0)
    {
      v9 = swift_bridgeObjectRelease();
      *v4 = v5;
      v4[1] = v7;
      goto LABEL_15;
    }
    OUTLINED_FUNCTION_32_0();
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_118();
  v12 = (void *)__swift_project_value_buffer(v11, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_50_0();
  sub_1C2CFD86C();
  v13 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_116_2(v13))
  {
    v14 = (_DWORD *)OUTLINED_FUNCTION_6_0();
    v19 = OUTLINED_FUNCTION_6_0();
    *v14 = 136315138;
    if (object)
    {
      v15 = (unint64_t)object;
    }
    else
    {
      countAndFlagsBits = 0x3E4C494E3CLL;
      v15 = 0xE500000000000000;
    }
    OUTLINED_FUNCTION_50_0();
    sub_1C28BB120(countAndFlagsBits, v15, &v19);
    OUTLINED_FUNCTION_103();
    OUTLINED_FUNCTION_29_2();
    OUTLINED_FUNCTION_97();
    OUTLINED_FUNCTION_32_22(&dword_1C28B6000, v16, v17, "Provided value '%s' is not recognized. Unable to create PromptType");
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }

  v9 = OUTLINED_FUNCTION_29_2();
  *v4 = 0;
  v4[1] = 0;
LABEL_15:
  result.value.rawValue._object = v10;
  result.value.rawValue._countAndFlagsBits = v9;
  return result;
}

uint64_t static PromptType.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1C2CFE9DC();
}

uint64_t PromptType.hash(into:)()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_71_2();
  sub_1C2CFDCF8();
  return swift_bridgeObjectRelease();
}

uint64_t PromptType.hashValue.getter()
{
  sub_1C2CFEAB4();
  OUTLINED_FUNCTION_12();
  sub_1C2CFDCF8();
  OUTLINED_FUNCTION_32_0();
  return sub_1C2CFEAD8();
}

void sub_1C2B1E19C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  _BYTE v13[24];
  __int128 v14[2];

  v3 = v2;
  v6 = type metadata accessor for OutputGenerationManifest();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6, v9);
  swift_beginAccess();
  sub_1C28B9A04(v3 + 16, (uint64_t)v14);
  sub_1C2902D40(a2, (uint64_t)&v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v3;
  *(_QWORD *)(v11 + 24) = a1;
  sub_1C2902070((uint64_t)&v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v11 + v10);
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(v14, (uint64_t)&unk_1EF7988D8, v11);
  type metadata accessor for AnyFlow();
  swift_allocObject();
  sub_1C2CFD350();
  v12 = a1;
  sub_1C29505B8();
}

void PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  __int128 v24[2];

  OUTLINED_FUNCTION_9();
  v2 = v1;
  v4 = v3;
  v23 = v5;
  v6 = OUTLINED_FUNCTION_0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v10 = MEMORY[0x1E0C80A78](v6, v9);
  v11 = *(_QWORD *)(v4 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10, v13);
  v14 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v24, v4, v2);
  OUTLINED_FUNCTION_45((uint64_t)v14, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  v15 = OUTLINED_FUNCTION_117_13();
  sub_1C2902D40(v15, v16);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = (v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (*(unsigned __int8 *)(v7 + 80) + v18 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v4;
  *(_QWORD *)(v20 + 24) = v2;
  OUTLINED_FUNCTION_45(v20 + v17, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32));
  v21 = v23;
  *(_QWORD *)(v20 + v18) = v23;
  sub_1C2902070((uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  type metadata accessor for SimpleOutputFlowAsync();
  OUTLINED_FUNCTION_5_2();
  SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(v24, (uint64_t)&unk_1EF798830, v20);
  OUTLINED_FUNCTION_159_4();
  OUTLINED_FUNCTION_5_2();
  v22 = v21;
  sub_1C29505B8();
  OUTLINED_FUNCTION_1();
}

void sub_1C2B1E454()
{
  PatternFlowProviding.makeResponseFlowWithOpenEndedPrompt<A>(strategy:)();
}

void PatternFlowProviding.makeResponseFlowWithOpenEndedPrompt<A>(strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  OUTLINED_FUNCTION_21();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for PromptForValueFlowAsync(0, AssociatedTypeWitness, v3, v4);
  v5 = OUTLINED_FUNCTION_127_9();
  OUTLINED_FUNCTION_123_9(v5);
  PromptForValueFlowAsync.__allocating_init<A>(strategy:outputPublisher:)(v0, &v7);
  *(_QWORD *)&v7 = v6;
  MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for PromptForValueFlowAsync<A>, v1);
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_32_21();
  OUTLINED_FUNCTION_116_1();
}

void sub_1C2B1E50C()
{
  PatternFlowProviding.makeResponseFlowWithYesNoPrompt<A>(strategy:)();
}

void PatternFlowProviding.makeResponseFlowWithYesNoPrompt<A>(strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7884A0);
  v0 = OUTLINED_FUNCTION_127_9();
  OUTLINED_FUNCTION_123_9(v0);
  PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798838);
  OUTLINED_FUNCTION_5_2();
  sub_1C29A5E00(v2);
  OUTLINED_FUNCTION_116_1();
}

void sub_1C2B1E59C()
{
  PatternFlowProviding.makeResponseFlowWithConfirmationPrompt<A>(strategy:itemToConfirm:)();
}

void PatternFlowProviding.makeResponseFlowWithConfirmationPrompt<A>(strategy:itemToConfirm:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_9();
  v17 = v1;
  v18 = v0;
  v3 = v2;
  v5 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v8);
  v10 = (char *)&v16 - v9;
  v11 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_71_2();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = type metadata accessor for PromptForConfirmationFlowAsync(0, AssociatedTypeWitness, v11, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v5, AssociatedTypeWitness);
  v14 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8);
  OUTLINED_FUNCTION_129_6();
  v14(&v19, v17, v3);
  PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)();
  v19 = v15;
  MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for PromptForConfirmationFlowAsync<A, B>, v13);
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_32_21();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2B1E708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:)(a1, a4, a2, a5, a3);
}

uint64_t PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 64))(a1, &v6, a3, a5, a2, a4);
}

void sub_1C2B1E758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:shouldContinueForResponse:)(a1, a2, a5, a3, a6, a4);
}

void PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:shouldContinueForResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  __int16 v34;
  char v35;
  char v36;

  v6 = type metadata accessor for ContinuationPromptFlow(0, a4, a6, a4);
  v14 = OUTLINED_FUNCTION_100_17(v6, v7, v8, v9, v10, v11, v12, v13, v23, v25, v26, v28, v30, v32, SWORD2(v32), SBYTE6(v32), SHIBYTE(v32));
  v15 = OUTLINED_FUNCTION_106_9((uint64_t)v14);
  OUTLINED_FUNCTION_105_13(v15, v16, v17, v18, v19, v20, v21, v22, v24, v27, v29, v31, v33, v34, v35, v36);
  OUTLINED_FUNCTION_129_6();
  OUTLINED_FUNCTION_153_3();
  OUTLINED_FUNCTION_32_21();
  OUTLINED_FUNCTION_89();
}

_QWORD *sub_1C2B1E7E4(uint64_t a1, uint64_t a2)
{
  return sub_1C2B1E830(0, a1, a2);
}

uint64_t PatternFlowProviding.makeResponseFlowWithContinuationPrompt(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;

  v5 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 80))(&v5, a1, a2, a3);
}

_QWORD *sub_1C2B1E830(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a2;
  v5 = sub_1C2CFBCAC();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for OutputGenerationManifest();
  v11 = MEMORY[0x1E0C80A78](v9, v10);
  v13 = (uint64_t *)((char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11, v14);
  v43 = (uint64_t)&v40 - v15;
  v16 = qword_1ED7A7F80;
  v46 = a3;
  sub_1C2CFD350();
  if (v16 != -1)
    swift_once();
  v44 = a1 & 1;
  v17 = qword_1ED7A7F68;
  v18 = *(_QWORD *)algn_1ED7A7F70;
  *((_BYTE *)v13 + v9[6]) = 0;
  *((_BYTE *)v13 + v9[7]) = 0;
  v20 = v9[8];
  v19 = v9[9];
  *((_BYTE *)v13 + v9[10]) = 0;
  v21 = (uint64_t)v13 + v9[11];
  v22 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v22);
  v23 = v9[12];
  *(uint64_t *)((char *)v13 + v23) = 0;
  v24 = (uint64_t *)((char *)v13 + v9[13]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (uint64_t *)((char *)v13 + v9[14]);
  *v25 = 0;
  v25[1] = 0;
  *((_BYTE *)v13 + v9[15]) = 0;
  *(uint64_t *)((char *)v13 + v9[17]) = 0;
  v26 = (char *)v13 + v9[18];
  *(_QWORD *)v26 = 0;
  *((_WORD *)v26 + 4) = 512;
  *((_BYTE *)v13 + v9[19]) = 0;
  *((_BYTE *)v13 + v9[20]) = 0;
  *((_BYTE *)v13 + v9[21]) = 0;
  *((_BYTE *)v13 + v9[22]) = 0;
  *((_BYTE *)v13 + v9[23]) = 0;
  v27 = (uint64_t *)((char *)v13 + v9[24]);
  *v27 = 0;
  v27[1] = 0;
  *(uint64_t *)((char *)v13 + v9[25]) = 0;
  *v13 = v17;
  v13[1] = v18;
  v28 = (uint64_t)v13 + v9[5];
  swift_bridgeObjectRetain();
  sub_1C2901F48(v28);
  *((_BYTE *)v13 + v19) = 1;
  *((_BYTE *)v13 + v20) = 0;
  sub_1C28BA958(v21, &qword_1ED7A7A10);
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v22);
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v13 + v23) = 0;
  sub_1C2CFBCA0();
  v29 = sub_1C2CFBC70();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  v32 = (uint64_t *)((char *)v13 + v9[16]);
  *v32 = v29;
  v32[1] = v31;
  *((_BYTE *)v13 + v20) = 1;
  v33 = v43;
  sub_1C2902070((uint64_t)v13, v43);
  type metadata accessor for ResponseFactory();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 40) = &type metadata for DialogUsageProvider;
  *(_QWORD *)(v34 + 48) = &protocol witness table for DialogUsageProvider;
  type metadata accessor for SimpleYesNoPromptFlowStrategy();
  v35 = swift_allocObject();
  v36 = sub_1C2B2427C(v33, v34, (uint64_t)&unk_1EF7A1A20, 0, (uint64_t)&unk_1EF7A1A18, 0, v45, v46, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF788AD8);
  v37 = swift_allocObject();
  v38 = sub_1C2B24344(v36, v44, v47, v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF795840);
  swift_allocObject();
  sub_1C2CFD350();
  return sub_1C29A5F88(v38);
}

void PatternFlowProviding.makeResponseFlowWithContinuationPrompt(shouldContinueForResponse:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  OUTLINED_FUNCTION_9();
  v55 = v0;
  v56 = v1;
  v57 = v2;
  v4 = v3;
  v51 = v5;
  v7 = v6;
  v53 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v6, v5);
  OUTLINED_FUNCTION_10();
  v54 = v9 - v8;
  v10 = sub_1C2CFBCAC();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_10();
  v14 = v13 - v12;
  v15 = (int *)OUTLINED_FUNCTION_0();
  v17 = MEMORY[0x1E0C80A78](v15, v16);
  v19 = (uint64_t *)((char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17, v20);
  v49 = (uint64_t)&v46 - v21;
  v50 = *v7;
  v22 = qword_1ED7A7F80;
  v52 = v4;
  sub_1C2CFD350();
  if (v22 != -1)
    swift_once();
  v23 = qword_1ED7A7F68;
  v24 = *(_QWORD *)algn_1ED7A7F70;
  *((_BYTE *)v19 + v15[6]) = 0;
  *((_BYTE *)v19 + v15[7]) = 0;
  v26 = v15[8];
  v25 = v15[9];
  *((_BYTE *)v19 + v15[10]) = 0;
  type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_4_2();
  v27 = v15[12];
  *(uint64_t *)((char *)v19 + v27) = 0;
  v28 = (uint64_t *)((char *)v19 + v15[13]);
  *v28 = 0;
  v28[1] = 0;
  v29 = (uint64_t *)((char *)v19 + v15[14]);
  *v29 = 0;
  v29[1] = 0;
  *((_BYTE *)v19 + v15[15]) = 0;
  *(uint64_t *)((char *)v19 + v15[17]) = 0;
  v30 = (char *)v19 + v15[18];
  *(_QWORD *)v30 = 0;
  *((_WORD *)v30 + 4) = 512;
  *((_BYTE *)v19 + v15[19]) = 0;
  *((_BYTE *)v19 + v15[20]) = 0;
  *((_BYTE *)v19 + v15[21]) = 0;
  *((_BYTE *)v19 + v15[22]) = 0;
  *((_BYTE *)v19 + v15[23]) = 0;
  v31 = (uint64_t *)((char *)v19 + v15[24]);
  *v31 = 0;
  v31[1] = 0;
  *(uint64_t *)((char *)v19 + v15[25]) = 0;
  *v19 = v23;
  v19[1] = v24;
  v32 = (uint64_t)v19 + v15[5];
  swift_bridgeObjectRetain();
  v33 = sub_1C2901F48(v32);
  *((_BYTE *)v19 + v25) = 1;
  *((_BYTE *)v19 + v26) = 0;
  OUTLINED_FUNCTION_136_3(v33, &qword_1ED7A7A10);
  OUTLINED_FUNCTION_4_2();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v19 + v27) = 0;
  sub_1C2CFBCA0();
  v34 = sub_1C2CFBC70();
  v36 = v35;
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v14, v48);
  v37 = (uint64_t *)((char *)v19 + v15[16]);
  *v37 = v34;
  v37[1] = v36;
  *((_BYTE *)v19 + v26) = 1;
  v38 = v49;
  sub_1C2902070((uint64_t)v19, v49);
  type metadata accessor for ResponseFactory();
  v39 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v39 + 40) = &type metadata for DialogUsageProvider;
  *(_QWORD *)(v39 + 48) = &protocol witness table for DialogUsageProvider;
  type metadata accessor for SimpleYesNoPromptFlowStrategy();
  v40 = swift_allocObject();
  v41 = sub_1C2B2427C(v38, v39, (uint64_t)&unk_1EF7A1A20, 0, (uint64_t)&unk_1EF7A1A18, 0, v51, v52, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF788AD8);
  v42 = OUTLINED_FUNCTION_5_2();
  v43 = v54;
  v44 = v56;
  OUTLINED_FUNCTION_45(v54, v55, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 16));
  v45 = sub_1C2A063BC(v41, v50, v43, v42, v44, v57);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF795840);
  OUTLINED_FUNCTION_5_2();
  sub_1C29A5F88(v45);
  OUTLINED_FUNCTION_1();
}

void sub_1C2B1EEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  PatternFlowProviding.makeResponseFlowWithSimpleDisambiguationPrompt<A>(items:strategy:)(a1, a2, a5, a3, a6, a4);
}

void PatternFlowProviding.makeResponseFlowWithSimpleDisambiguationPrompt<A>(items:strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void (*v11)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v12;
  __int128 v13[2];

  v10 = type metadata accessor for SimpleDisambiguationPromptFlow(0, a4, a6, a4);
  v11 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  OUTLINED_FUNCTION_57_1();
  OUTLINED_FUNCTION_129_6();
  v11(v13, a3, a5);
  sub_1C2C034DC(a1, a2, v13);
  *(_QWORD *)&v13[0] = v12;
  MEMORY[0x1C3BC9CD4](&unk_1C2D1CC94, v10);
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_32_21();
  OUTLINED_FUNCTION_116_1();
}

uint64_t sub_1C2B1EF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return PatternFlowProviding.makeSimpleDisambiguationClarificationFlow<A>(items:strategy:)(a1, a2, a5, a3, a6, a4);
}

uint64_t PatternFlowProviding.makeSimpleDisambiguationClarificationFlow<A>(items:strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 88))(a1, a2, a4, a6, a3, a5);
}

uint64_t sub_1C2B1EFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1C2B2483C;
  return PatternFlowProviding.makeDetailedDisambiguationClarificationFlow<A>(provider:)(a1, a4, a2, a5, a3);
}

uint64_t PatternFlowProviding.makeDetailedDisambiguationClarificationFlow<A>(provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[35] = a4;
  v5[36] = a5;
  v5[33] = a2;
  v5[34] = a3;
  v5[32] = a1;
  v6 = OUTLINED_FUNCTION_13_41();
  v5[37] = v6;
  v5[38] = *(_QWORD *)(v6 - 8);
  v5[39] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B1F098()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_163_5();
  v1 = v0[36];
  v0[40] = OUTLINED_FUNCTION_47_28(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
  OUTLINED_FUNCTION_78_17();
  v2 = OUTLINED_FUNCTION_47_28(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32));
  v0[41] = v2;
  v3 = (void *)objc_opt_self();
  v0[42] = OUTLINED_FUNCTION_118_8();
  OUTLINED_FUNCTION_34_1();
  v0[7] = v0 + 27;
  v4 = OUTLINED_FUNCTION_56_23((uint64_t)sub_1C2B1F170);
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  OUTLINED_FUNCTION_158_4(v4, (uint64_t)sub_1C2B23794);
  OUTLINED_FUNCTION_111_11(v3, sel_load_patternId_completion_, v2);
  return OUTLINED_FUNCTION_66_17();
}

uint64_t sub_1C2B1F170()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_15();
  *(_QWORD *)(v0 + 344) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B1F1B8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  _QWORD *v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *, _QWORD, _QWORD);
  uint64_t (*v15)(uint64_t);

  v1 = (void *)v0[42];
  v2 = v0[39];
  v3 = (void *)v0[33];
  v0[44] = v0[27];

  sub_1C2B23798(v2);
  if ((sub_1C2B23C38(v2) & 1) != 0)
  {
    v4 = (_QWORD *)OUTLINED_FUNCTION_9_6();
    v0[45] = v4;
    *v4 = v0;
    v4[1] = sub_1C2B1F310;
    return v14(v0 + 19, v0[34], v0[36]);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v6, (uint64_t)qword_1ED7AA1B0);
    v7 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v7))
    {
      v8 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v8);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v9, v10, "We are in a mode that does not support windowing. Disambiguating items in a single step.");
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_64_14();
    v15 = v11;
    v12 = (_QWORD *)swift_task_alloc();
    v0[50] = v12;
    v13 = OUTLINED_FUNCTION_103_13(v12, (uint64_t)sub_1C2B1F798);
    return v15(v13);
  }
}

uint64_t sub_1C2B1F310()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 368) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B1F364()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  id v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;

  if ((~*(_QWORD *)(v1 + 176) & 0xF000000000000007) != 0)
  {
    v30 = *(_QWORD *)(v1 + 160);
    v28 = *(_QWORD *)(v1 + 168);
    v12 = objc_msgSend(*(id *)(v1 + 352), sel_settings);
    OUTLINED_FUNCTION_149_5();
    OUTLINED_FUNCTION_148_2();
    OUTLINED_FUNCTION_62_24();
    v13 = OUTLINED_FUNCTION_126();
    if (*(_QWORD *)(v1 + 208))
    {
      v14 = OUTLINED_FUNCTION_157();
      v15 = *(_QWORD *)(v1 + 248);
      if (!v14)
        v15 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_136_3(v13, &qword_1ED7A8480);
      v15 = 0;
      LOBYTE(v14) = 0;
    }
    if ((v28 & 1) != 0)
      v16 = v15;
    else
      v16 = v30;
    if ((v28 & 1) != 0 && (v14 & 1) == 0)
    {
      v17 = *(_QWORD *)(v1 + 320);
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v16 = MEMORY[0x1C3BC8B04](v17, AssociatedTypeWitness);
    }
    v19 = objc_msgSend(*(id *)(v1 + 352), sel_settings);
    OUTLINED_FUNCTION_149_5();
    OUTLINED_FUNCTION_148_2();
    OUTLINED_FUNCTION_35_36();
    sub_1C28C1A54();
    v20 = OUTLINED_FUNCTION_126();
    if (*(_QWORD *)(v1 + 144))
    {
      v21 = OUTLINED_FUNCTION_157();
      if (v21)
        v22 = *(_QWORD *)(v1 + 240);
      else
        v22 = 0;
      v23 = v21 ^ 1;
    }
    else
    {
      OUTLINED_FUNCTION_78_5(v20, &qword_1ED7A8480);
      v22 = 0;
      v23 = 1;
    }
    v24 = *(_QWORD *)(v1 + 320);
    v25 = OUTLINED_FUNCTION_113_9();
    OUTLINED_FUNCTION_160_3(v25, v25, v26, v27);
    sub_1C2CE605C(v24, v16, v22, v23, 1);
    OUTLINED_FUNCTION_113_9();
    OUTLINED_FUNCTION_40();
  }
  swift_bridgeObjectRelease();
  if (qword_1ED7AA040 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v2, (uint64_t)qword_1ED7AA1B0);
  v3 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_20_0(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_91(v4);
    OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v5, v6, "Pattern settings indicate windowing but strategy did not provide windowing configuration. Disambiguating items in a single step.");
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_64_14();
  v29 = v7;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 376) = v8;
  v9 = OUTLINED_FUNCTION_103_13(v8, (uint64_t)sub_1C2B1F70C);
  return OUTLINED_FUNCTION_52_29(v9, v10, v29);
}

uint64_t sub_1C2B1F70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 384) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 392) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B1F760()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_34_39();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_79_19();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B1F798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 408) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 416) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B1F7EC()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_34_39();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_79_19();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B1F824()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 336);
  v2 = *(void **)(v0 + 328);
  swift_willThrow();

  OUTLINED_FUNCTION_79_19();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B1F864()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_34_39();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_79_19();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B1F89C()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_34_39();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_79_19();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B1F8D4()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_34_39();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_79_19();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B1F90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1C2B2483C;
  return PatternFlowProviding.makeResultSetFlow<A>(provider:)(a1, a4, a2, a5, a3);
}

uint64_t PatternFlowProviding.makeResultSetFlow<A>(provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[51] = a4;
  v5[52] = a5;
  v5[49] = a2;
  v5[50] = a3;
  v5[48] = a1;
  v6 = OUTLINED_FUNCTION_13_41();
  v5[53] = v6;
  v5[54] = *(_QWORD *)(v6 - 8);
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B1F9F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_163_5();
  v1 = v0[52];
  v0[57] = OUTLINED_FUNCTION_47_28(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
  OUTLINED_FUNCTION_78_17();
  v2 = OUTLINED_FUNCTION_47_28(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32));
  v0[58] = v2;
  v3 = (void *)objc_opt_self();
  v0[59] = OUTLINED_FUNCTION_118_8();
  OUTLINED_FUNCTION_34_1();
  v0[7] = v0 + 44;
  v4 = OUTLINED_FUNCTION_56_23((uint64_t)sub_1C2B1FAC8);
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  OUTLINED_FUNCTION_158_4(v4, (uint64_t)sub_1C2B23794);
  OUTLINED_FUNCTION_111_11(v3, sel_load_patternId_completion_, v2);
  return OUTLINED_FUNCTION_66_17();
}

uint64_t sub_1C2B1FAC8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_15();
  *(_QWORD *)(v0 + 480) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B1FB10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  id v36;
  id v37;
  os_log_type_t v38;
  void *v39;
  uint64_t v40;
  Swift::String_optional v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v45;
  os_log_type_t v46;
  _WORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  _WORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  _WORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  os_log_type_t v63;
  _BOOL4 v64;
  void *v65;
  _DWORD *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  os_log_type_t v74;
  _BOOL4 v75;
  void *v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  os_log_type_t v82;
  uint64_t (*v83)(void);
  uint64_t v84;
  uint64_t v85;

  v1 = *(void **)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(void **)(v0 + 352);
  *(_QWORD *)(v0 + 488) = v3;

  *(_QWORD *)(v0 + 344) = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 496) = AssociatedTypeWitness;
  v5 = sub_1C2CFE088();
  MEMORY[0x1C3BC9CD4](MEMORY[0x1E0DEAF50], v5);
  v6 = sub_1C2CFE244();
  v7 = *(_QWORD *)(v0 + 456);
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_254();
    if (qword_1ED7AA040 == -1)
    {
LABEL_3:
      v8 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v8, (uint64_t)qword_1ED7AA1B0);
      v9 = OUTLINED_FUNCTION_30();
      if (OUTLINED_FUNCTION_20_0(v9))
      {
        v10 = (_WORD *)OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_91(v10);
        OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v11, v12, "Result items are empty. Making flow for empty results.");
        OUTLINED_FUNCTION_11_0();
      }
      OUTLINED_FUNCTION_55_19();
      v13 = (_QWORD *)OUTLINED_FUNCTION_18_50();
      v14 = sub_1C2B2129C;
      *(_QWORD *)(v0 + 720) = v13;
      goto LABEL_49;
    }
LABEL_63:
    swift_once();
    goto LABEL_3;
  }
  v16 = *(_QWORD *)(v0 + 440);
  v15 = *(_QWORD *)(v0 + 448);
  v17 = *(_QWORD *)(v0 + 424);
  v18 = *(_QWORD *)(v0 + 432);
  sub_1C2B23798(v15);
  v19 = MEMORY[0x1C3BC8B04](v7, AssociatedTypeWitness);
  *(_QWORD *)(v0 + 504) = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v15, v17);
  v20 = *(_QWORD *)(v0 + 432);
  if (v19 < 2)
  {
    v22 = sub_1C2B23C38(*(_QWORD *)(v0 + 440));
    v21 = *(_QWORD *)(v20 + 8);
    *(_QWORD *)(v0 + 512) = v21;
    OUTLINED_FUNCTION_116_11();
    if ((v22 & 1) == 0)
    {
      OUTLINED_FUNCTION_24_46();
      if (qword_1ED7AA040 != -1)
        swift_once();
      v50 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v50, (uint64_t)qword_1ED7AA1B0);
      v51 = OUTLINED_FUNCTION_30();
      if (OUTLINED_FUNCTION_20_0(v51))
      {
        v52 = (_WORD *)OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_91(v52);
        OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v53, v54, "There is only a single item and we are not in windowing mode. Showing single item result.");
        OUTLINED_FUNCTION_11_0();
      }
      OUTLINED_FUNCTION_55_19();
      v13 = (_QWORD *)OUTLINED_FUNCTION_18_50();
      v14 = sub_1C2B21208;
      *(_QWORD *)(v0 + 696) = v13;
      goto LABEL_49;
    }
  }
  else
  {
    v21 = *(_QWORD *)(v20 + 8);
    OUTLINED_FUNCTION_116_11();
  }
  *(_QWORD *)(v0 + 520) = v21;
  if ((OUTLINED_FUNCTION_133_7(*(_QWORD *)(v0 + 448)) & 1) == 0)
  {
    OUTLINED_FUNCTION_24_46();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v45 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v45, (uint64_t)qword_1ED7AA1B0);
    v46 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v46))
    {
      v47 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v47);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v48, v49, "We are in a mode that does not support windowing. Showing all results.");
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_55_19();
    v13 = (_QWORD *)OUTLINED_FUNCTION_18_50();
    v14 = sub_1C2B21178;
    *(_QWORD *)(v0 + 672) = v13;
    goto LABEL_49;
  }
  v23 = objc_msgSend(v3, sel_getPrompts);
  sub_1C2B243AC();
  v24 = sub_1C2CFDFA4();

  if (v24 >> 62)
  {
    OUTLINED_FUNCTION_12();
    v25 = sub_1C2CFE820();
    if (v25)
    {
LABEL_12:
      v26 = 0;
      while (1)
      {
        v27 = (v24 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C3BC9170](v26, v24)
            : *(id *)(v24 + 8 * v26 + 32);
        v28 = v27;
        v29 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        v30 = objc_msgSend(v27, sel_name);
        v31 = sub_1C2CFDD58();
        v33 = v32;

        if (v31 == 0x6E69776F7272614ELL && v33 == 0xEF74706D6F725067)
        {
          swift_bridgeObjectRelease();

LABEL_48:
          OUTLINED_FUNCTION_29_2();
          v13 = (_QWORD *)OUTLINED_FUNCTION_18_50();
          v14 = sub_1C2B204F0;
          *(_QWORD *)(v0 + 528) = v13;
          goto LABEL_49;
        }
        v35 = sub_1C2CFE9DC();
        OUTLINED_FUNCTION_29();

        if ((v35 & 1) != 0)
          goto LABEL_48;
        ++v26;
        if (v29 == v25)
          goto LABEL_23;
      }
      __break(1u);
      goto LABEL_63;
    }
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_12();
    if (v25)
      goto LABEL_12;
  }
LABEL_23:
  OUTLINED_FUNCTION_29_2();
  v36 = objc_msgSend(*(id *)(v0 + 488), sel_settings);
  sub_1C2CFDC68();

  OUTLINED_FUNCTION_82_11();
  OUTLINED_FUNCTION_254();
  if (!*(_QWORD *)(v0 + 208))
  {
    OUTLINED_FUNCTION_24_46();
    sub_1C28BA958(v0 + 184, &qword_1ED7A8480);
    goto LABEL_42;
  }
  if (!OUTLINED_FUNCTION_157() || (*(_BYTE *)(v0 + 744) & 1) == 0)
  {
    OUTLINED_FUNCTION_24_46();
LABEL_42:
    if (qword_1ED7AA040 != -1)
      swift_once();
    v55 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v55, (uint64_t)qword_1ED7AA1B0);
    v56 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v56))
    {
      v57 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v57);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v58, v59, "Pattern settings indicated we should not window. Showing all results.");
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_55_19();
    v13 = (_QWORD *)OUTLINED_FUNCTION_18_50();
    v14 = sub_1C2B210E8;
    *(_QWORD *)(v0 + 648) = v13;
    goto LABEL_49;
  }
  v37 = objc_msgSend(*(id *)(v0 + 488), sel_settings);
  v38 = v37;
  sub_1C2CFDC68();
  OUTLINED_FUNCTION_55_4();
  OUTLINED_FUNCTION_150_3();
  sub_1C28C1A54();
  OUTLINED_FUNCTION_29();
  if (!*(_QWORD *)(v0 + 240))
  {
    v60 = OUTLINED_FUNCTION_24_46();
    OUTLINED_FUNCTION_78_5(v60, &qword_1ED7A8480);
LABEL_52:
    if (qword_1ED7AA040 != -1)
      swift_once();
    v61 = OUTLINED_FUNCTION_118();
    v62 = OUTLINED_FUNCTION_63_4(v61, (uint64_t)qword_1ED7AA1B0);
    sub_1C2CFD86C();
    v63 = OUTLINED_FUNCTION_123();
    v64 = OUTLINED_FUNCTION_10_1(v63);
    v65 = *(void **)(v0 + 488);
    if (v64)
    {
      v66 = (_DWORD *)OUTLINED_FUNCTION_6_0();
      v81 = OUTLINED_FUNCTION_6_0();
      v84 = v81;
      *v66 = 136315138;
      v67 = OUTLINED_FUNCTION_73_1(v81, sel_patternId);
      OUTLINED_FUNCTION_124_0();
      OUTLINED_FUNCTION_109_9();
      *(_QWORD *)(v0 + 328) = OUTLINED_FUNCTION_121_7(v68, v69, &v84);
      OUTLINED_FUNCTION_103();
      OUTLINED_FUNCTION_97();

      OUTLINED_FUNCTION_80_13(&dword_1C28B6000, (v0 + 216), v38, "Pattern %s has no defined promptType. Will show all results.");
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    v13 = (_QWORD *)OUTLINED_FUNCTION_18_50();
    v14 = sub_1C2B21058;
    *(_QWORD *)(v0 + 624) = v13;
    goto LABEL_49;
  }
  if ((OUTLINED_FUNCTION_157() & 1) == 0)
  {
    OUTLINED_FUNCTION_24_46();
    goto LABEL_52;
  }
  v40 = *(_QWORD *)(v0 + 296);
  v39 = *(void **)(v0 + 304);
  OUTLINED_FUNCTION_50_0();
  v41.value._countAndFlagsBits = v40;
  v41.value._object = v39;
  PromptType.init(settingValue:)(v41);
  v42 = v85;
  *(_QWORD *)(v0 + 552) = v85;
  if (v42)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 280) = v84;
    *(_QWORD *)(v0 + 288) = v42;
    v43 = (_QWORD *)OUTLINED_FUNCTION_18_50();
    *(_QWORD *)(v0 + 560) = v43;
    *v43 = v0;
    v43[1] = sub_1C2B20BA0;
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v83)(v0 + 248, v0 + 280, *(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 416));
  }
  OUTLINED_FUNCTION_24_46();
  if (qword_1ED7AA040 != -1)
    swift_once();
  v70 = *(_QWORD *)(v0 + 488);
  v71 = OUTLINED_FUNCTION_118();
  v72 = OUTLINED_FUNCTION_63_4(v71, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_50_0();
  v73 = v72;
  sub_1C2CFD86C();
  v74 = OUTLINED_FUNCTION_123();
  v75 = OUTLINED_FUNCTION_20_0(v74);
  v76 = *(void **)(v0 + 488);
  if (v75)
  {
    v82 = v70;
    v77 = OUTLINED_FUNCTION_6_0();
    v84 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v77 = 136315394;
    v78 = objc_msgSend(v76, sel_patternId);
    v79 = sub_1C2CFDD58();

    *(_QWORD *)(v0 + 312) = OUTLINED_FUNCTION_228_0(v79, v80, &v84);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_55();

    *(_WORD *)(v77 + 12) = 2080;
    OUTLINED_FUNCTION_50_0();
    *(_QWORD *)(v0 + 320) = sub_1C28BB120(v40, (unint64_t)v39, &v84);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_71_5(&dword_1C28B6000, 0, v82, "Pattern %s specifies an unknown prompt type of %s. Will show all results.", (uint8_t *)v77);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_29_2();
  v13 = (_QWORD *)OUTLINED_FUNCTION_18_50();
  v14 = sub_1C2B20FC8;
  *(_QWORD *)(v0 + 600) = v13;
LABEL_49:
  *v13 = v0;
  v13[1] = v14;
  return OUTLINED_FUNCTION_52_29(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 416), v83);
}

uint64_t sub_1C2B204F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22();
  *(_QWORD *)(v0 + 536) = v2;
  *(_QWORD *)(v0 + 544) = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_168_4();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B20550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  NSObject *v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  char v43;
  id v44;
  uint64_t v45;
  Swift::String_optional v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void);
  os_log_type_t v54;
  _WORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t (*v59)();
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  id v64;
  os_log_type_t v65;
  _BOOL4 v66;
  void *v67;
  _DWORD *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  os_log_type_t v75;
  _BOOL4 v76;
  void *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  OUTLINED_FUNCTION_43_2();
  a25 = v29;
  a26 = v30;
  a24 = v27;
  if (!*(_QWORD *)(v27 + 536))
  {
    OUTLINED_FUNCTION_139_6();
    if (!v31)
      swift_once();
    v40 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v40, (uint64_t)qword_1ED7AA1B0);
    v41 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_10_1(v41))
    {
      v42 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_1C28B6000, v26, v28, "Pattern settings include a narrowing prompt but the provider elected to not provide one. Assuming we are not in the narrowing case and continuing.", v42, 2u);
      OUTLINED_FUNCTION_11_0();
    }

    objc_msgSend(*(id *)(v27 + 488), sel_settings);
    v43 = MEMORY[0x1E0DEE9B8];
    sub_1C2CFDC68();
    OUTLINED_FUNCTION_55_4();
    OUTLINED_FUNCTION_83_15();
    OUTLINED_FUNCTION_29();
    if (*(_QWORD *)(v27 + 208))
    {
      if (OUTLINED_FUNCTION_157() && (*(_BYTE *)(v27 + 744) & 1) != 0)
      {
        v44 = objc_msgSend(*(id *)(v27 + 488), sel_settings);
        v45 = OUTLINED_FUNCTION_134_8();

        OUTLINED_FUNCTION_61_20();
        OUTLINED_FUNCTION_34_1();
        if (*(_QWORD *)(v27 + 240))
        {
          if ((OUTLINED_FUNCTION_157() & 1) != 0)
          {
            OUTLINED_FUNCTION_57_1();
            v46.value._countAndFlagsBits = OUTLINED_FUNCTION_117_13();
            PromptType.init(settingValue:)(v46);
            v47 = a15;
            *(_QWORD *)(v27 + 552) = a15;
            if (v47)
            {
              OUTLINED_FUNCTION_89_16();
              *(_QWORD *)(v27 + 280) = v45;
              *(_QWORD *)(v27 + 288) = v47;
              v48 = (_QWORD *)OUTLINED_FUNCTION_13_54();
              *(_QWORD *)(v27 + 560) = v48;
              v49 = OUTLINED_FUNCTION_76_21(v48);
              return OUTLINED_FUNCTION_59_28(v49, v50, v51, v52, v53);
            }
            OUTLINED_FUNCTION_24_46();
            OUTLINED_FUNCTION_139_6();
            if (!v31)
              swift_once();
            v72 = *(_QWORD *)(v27 + 488);
            v73 = OUTLINED_FUNCTION_63_4(v40, (uint64_t)qword_1ED7AA1B0);
            OUTLINED_FUNCTION_57_1();
            v74 = v73;
            sub_1C2CFD86C();
            v75 = OUTLINED_FUNCTION_123();
            v76 = OUTLINED_FUNCTION_20_0(v75);
            v77 = *(void **)(v27 + 488);
            if (v76)
            {
              v78 = OUTLINED_FUNCTION_6_0();
              a14 = OUTLINED_FUNCTION_6_0();
              *(_DWORD *)v78 = 136315394;
              v79 = objc_msgSend(v77, sel_patternId);
              v80 = sub_1C2CFDD58();

              *(_QWORD *)(v27 + 312) = OUTLINED_FUNCTION_228_0(v80, v81, &a14);
              sub_1C2CFE4D8();
              OUTLINED_FUNCTION_55();

              *(_WORD *)(v78 + 12) = 2080;
              v82 = OUTLINED_FUNCTION_57_1();
              *(_QWORD *)(v27 + 320) = OUTLINED_FUNCTION_135_8(v82, v83, v84, v85, v86);
              sub_1C2CFE4D8();
              OUTLINED_FUNCTION_67_17();
              OUTLINED_FUNCTION_71_5(&dword_1C28B6000, 0, (os_log_type_t)v72, "Pattern %s specifies an unknown prompt type of %s. Will show all results.", (uint8_t *)v78);
              OUTLINED_FUNCTION_97_16();
              OUTLINED_FUNCTION_11_0();
            }

            OUTLINED_FUNCTION_29_2();
            v58 = (_QWORD *)OUTLINED_FUNCTION_13_54();
            v59 = sub_1C2B20FC8;
            *(_QWORD *)(v27 + 600) = v58;
            goto LABEL_25;
          }
          OUTLINED_FUNCTION_24_46();
        }
        else
        {
          v63 = OUTLINED_FUNCTION_24_46();
          OUTLINED_FUNCTION_78_5(v63, &qword_1ED7A8480);
        }
        OUTLINED_FUNCTION_139_6();
        if (!v31)
          swift_once();
        v64 = OUTLINED_FUNCTION_63_4(v40, (uint64_t)qword_1ED7AA1B0);
        sub_1C2CFD86C();
        v65 = OUTLINED_FUNCTION_123();
        v66 = OUTLINED_FUNCTION_10_1(v65);
        v67 = *(void **)(v27 + 488);
        if (v66)
        {
          v68 = (_DWORD *)OUTLINED_FUNCTION_6_0();
          v87 = OUTLINED_FUNCTION_6_0();
          a14 = v87;
          *v68 = 136315138;
          v69 = OUTLINED_FUNCTION_73_1(v87, sel_patternId);
          OUTLINED_FUNCTION_124_0();
          OUTLINED_FUNCTION_109_9();
          *(_QWORD *)(v27 + 328) = OUTLINED_FUNCTION_121_7(v70, v71, &a14);
          OUTLINED_FUNCTION_103();
          OUTLINED_FUNCTION_97();

          OUTLINED_FUNCTION_80_13(&dword_1C28B6000, (v27 + 216), (os_log_type_t)(v43 + 8), "Pattern %s has no defined promptType. Will show all results.");
          OUTLINED_FUNCTION_107_1();
          OUTLINED_FUNCTION_11_0();
        }

        v58 = (_QWORD *)OUTLINED_FUNCTION_13_54();
        v59 = sub_1C2B21058;
        *(_QWORD *)(v27 + 624) = v58;
LABEL_25:
        v60 = OUTLINED_FUNCTION_85_15(v58, (uint64_t)v59);
        return OUTLINED_FUNCTION_11_8(v60, v61, v62);
      }
      OUTLINED_FUNCTION_24_46();
    }
    else
    {
      OUTLINED_FUNCTION_24_46();
      sub_1C28BA958(v27 + 184, &qword_1ED7A8480);
    }
    OUTLINED_FUNCTION_139_6();
    if (!v31)
      swift_once();
    OUTLINED_FUNCTION_23_1(v40, (uint64_t)qword_1ED7AA1B0);
    v54 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v54))
    {
      v55 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v55);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v56, v57, "Pattern settings indicated we should not window. Showing all results.");
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_55_19();
    v58 = (_QWORD *)OUTLINED_FUNCTION_13_54();
    v59 = sub_1C2B210E8;
    *(_QWORD *)(v27 + 648) = v58;
    goto LABEL_25;
  }
  OUTLINED_FUNCTION_24_46();
  OUTLINED_FUNCTION_139_6();
  if (!v31)
    swift_once();
  v32 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v32, (uint64_t)qword_1ED7AA1B0);
  v33 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_42_8(v26))
  {
    v34 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_1C28B6000, v26, v33, "Pattern settings include a narrowing prompt and the provider returned one. Will issue Narrowing Prompt.", v34, 2u);
    OUTLINED_FUNCTION_11_0();
  }
  v35 = *(void **)(v27 + 488);
  v36 = *(void **)(v27 + 464);

  OUTLINED_FUNCTION_159_4();
  OUTLINED_FUNCTION_5_2();
  sub_1C2CFD350();
  sub_1C29506EC();

  OUTLINED_FUNCTION_116_11();
  swift_release();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  v37 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_7_11(v37, v38);
}

uint64_t sub_1C2B20BA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 568) = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_168_4();
  else
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B20BF8()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if ((~*(_QWORD *)(v0 + 272) & 0xF000000000000007) != 0)
  {
    v24 = *(_QWORD *)(v0 + 248);
    v11 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 256);
    v12 = objc_msgSend(*(id *)(v0 + 488), sel_settings);
    OUTLINED_FUNCTION_149_5();
    OUTLINED_FUNCTION_148_2();
    OUTLINED_FUNCTION_62_24();
    v13 = OUTLINED_FUNCTION_126();
    if (*(_QWORD *)(v0 + 176))
    {
      v14 = *(_QWORD *)(v0 + 504);
      if (OUTLINED_FUNCTION_157())
        v14 = *(_QWORD *)(v0 + 336);
    }
    else
    {
      OUTLINED_FUNCTION_136_3(v13, &qword_1ED7A8480);
      v14 = *(_QWORD *)(v0 + 504);
    }
    v15 = objc_msgSend(*(id *)(v0 + 488), sel_settings);
    sub_1C2CFDC68();

    OUTLINED_FUNCTION_35_36();
    sub_1C28C1A54();
    v16 = OUTLINED_FUNCTION_97();
    if (*(_QWORD *)(v0 + 144))
    {
      v17 = OUTLINED_FUNCTION_157();
      if ((_DWORD)v17)
        v20 = *(_QWORD *)(v0 + 376);
      else
        v20 = 0;
      v21 = v17 ^ 1;
    }
    else
    {
      v17 = OUTLINED_FUNCTION_78_5(v16, &qword_1ED7A8480);
      v20 = 0;
      v21 = 1;
    }
    if ((v11 & 1) == 0)
      v14 = v23;
    v22 = *(_QWORD *)(v0 + 456);
    OUTLINED_FUNCTION_160_3(v17, *(_QWORD *)(v0 + 496), v18, v19);
    sub_1C2CE605C(v22, v14, v20, v21, v24);
    swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_40();
  }
  OUTLINED_FUNCTION_24_46();
  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v1, (uint64_t)qword_1ED7AA1B0);
  v2 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_20_0(v2))
  {
    v3 = (_WORD *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_91(v3);
    OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v4, v5, "Pattern settings indicate windowing but strategy did not provide windowing configuration. Showing all results.");
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_55_19();
  v6 = (_QWORD *)OUTLINED_FUNCTION_108_15();
  *(_QWORD *)(v0 + 576) = v6;
  v7 = OUTLINED_FUNCTION_86_14(v6, (uint64_t)sub_1C2B20F38);
  return OUTLINED_FUNCTION_54_31(v7, v8, v9);
}

uint64_t sub_1C2B20F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 584) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 592) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B20F8C()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B20FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 608) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 616) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B2101C()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B21058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 632) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 640) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B210AC()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B210E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 656) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 664) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B2113C()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B21178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 680) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 688) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B211CC()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B21208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 704) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 712) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B2125C()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_9_71();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B2129C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 728) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 736) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B212F0()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_147_3();

  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_3_73(v1, v2);
}

uint64_t sub_1C2B21328()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 472);
  v2 = *(void **)(v0 + 464);
  swift_willThrow();

  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B2136C()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_147_3();

  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C2B213A8()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_9_71();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B213E8()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B21424()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B21460()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B2149C()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B214D8()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B21514()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_7_70();

  OUTLINED_FUNCTION_22_53();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B21550()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void *v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(v0 + 520);
  v2 = *(void **)(v0 + 488);

  v3 = OUTLINED_FUNCTION_71_2();
  v1(v3);
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_33_33();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B215B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1C2B2483C;
  return PatternFlowProviding.makeDetailedResultFlow<A>(provider:)(a1, a4, a2, a5, a3);
}

uint64_t PatternFlowProviding.makeDetailedResultFlow<A>(provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;

  v5[23] = a4;
  v5[24] = a5;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[25] = AssociatedTypeWitness;
  v7 = sub_1C2CFE478();
  v5[26] = v7;
  v5[27] = *(_QWORD *)(v7 - 8);
  v5[28] = OUTLINED_FUNCTION_7();
  v5[29] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[30] = OUTLINED_FUNCTION_7();
  v8 = OUTLINED_FUNCTION_13_41();
  v5[31] = v8;
  v5[32] = *(_QWORD *)(v8 - 8);
  v5[33] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B216D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  OUTLINED_FUNCTION_163_5();
  v1 = v0[24];
  OUTLINED_FUNCTION_11_58(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40));
  v2 = OUTLINED_FUNCTION_117_13();
  v4 = v3(v2);
  v0[34] = v4;
  v0[35] = OUTLINED_FUNCTION_11_58(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
  v0[36] = v5;
  v6 = (void *)objc_opt_self();
  v0[37] = sub_1C2CFDD34();
  OUTLINED_FUNCTION_55();
  v0[7] = v0 + 19;
  v7 = OUTLINED_FUNCTION_56_23((uint64_t)sub_1C2B217B8);
  v0[10] = MEMORY[0x1E0C809B0];
  v0[11] = 0x40000000;
  OUTLINED_FUNCTION_158_4(v7, (uint64_t)sub_1C2B23794);
  OUTLINED_FUNCTION_111_11(v6, sel_load_patternId_completion_, v4);
  return OUTLINED_FUNCTION_67_18();
}

uint64_t sub_1C2B217B8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_15();
  *(_QWORD *)(v0 + 304) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B21800()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD *v5;
  uint64_t v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)();
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);

  v1 = *(void **)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(void **)(v0 + 152);
  *(_QWORD *)(v0 + 312) = v3;

  sub_1C2B23798(v2);
  if ((sub_1C2B23C38(v2) & 1) != 0)
  {
    v4 = objc_msgSend(v3, sel_settings);
    sub_1C2CFDC68();

    OUTLINED_FUNCTION_82_11();
    OUTLINED_FUNCTION_254();
    if (*(_QWORD *)(v0 + 144))
    {
      if (OUTLINED_FUNCTION_157() && (*(_BYTE *)(v0 + 408) & 1) != 0)
      {
        v5 = (_QWORD *)OUTLINED_FUNCTION_12_0();
        *(_QWORD *)(v0 + 320) = v5;
        *v5 = v0;
        v5[1] = sub_1C2B21A74;
        return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v21)(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 192));
      }
      OUTLINED_FUNCTION_165_3();
    }
    else
    {
      v14 = OUTLINED_FUNCTION_165_3();
      OUTLINED_FUNCTION_78_5(v14, &qword_1ED7A8480);
    }
    if (qword_1ED7AA040 != -1)
      swift_once();
    v15 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v15, (uint64_t)qword_1ED7AA1B0);
    v16 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v16))
    {
      v17 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v17);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v18, v19, "Pattern settings indicated we should not window. Showing all results.");
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_164_4();
    v12 = (_QWORD *)OUTLINED_FUNCTION_12_0();
    v13 = sub_1C2B21DE0;
    *(_QWORD *)(v0 + 360) = v12;
  }
  else
  {
    OUTLINED_FUNCTION_165_3();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v7, (uint64_t)qword_1ED7AA1B0);
    v8 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v8))
    {
      v9 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v9);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v10, v11, "We are in a mode that does not support windowing. Showing all results.");
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_164_4();
    v12 = (_QWORD *)OUTLINED_FUNCTION_12_0();
    v13 = sub_1C2B21E74;
    *(_QWORD *)(v0 + 384) = v12;
  }
  v20 = OUTLINED_FUNCTION_104_14(v12, (uint64_t)v13);
  return v21(v20);
}

uint64_t sub_1C2B21A74()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 328) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

#error "1C2B21CE4: call analysis failed (funcsize=152)"

uint64_t sub_1C2B21D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 344) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 352) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B21DA0()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_31_40();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_21_53();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B21DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 368) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 376) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B21E34()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_31_40();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_21_53();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B21E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 392) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 400) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B21EC8()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_31_40();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_21_53();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B21F08()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 296);
  v2 = *(void **)(v0 + 272);
  swift_willThrow();

  OUTLINED_FUNCTION_21_53();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B21F50()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_31_40();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_21_53();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B21F90()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_31_40();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_21_53();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B21FD0()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_31_40();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_21_53();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B22010()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_31_40();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_21_53();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B22050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1C2B2483C;
  return PatternFlowProviding.makeTableSetFlow<A>(provider:)(a1, a4, a2, a5, a3);
}

uint64_t PatternFlowProviding.makeTableSetFlow<A>(provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[51] = a4;
  v5[52] = a5;
  v5[49] = a2;
  v5[50] = a3;
  v5[48] = a1;
  v6 = OUTLINED_FUNCTION_13_41();
  v5[53] = v6;
  v5[54] = *(_QWORD *)(v6 - 8);
  v5[55] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B22118()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_163_5();
  v1 = v0[52];
  OUTLINED_FUNCTION_78_17();
  v2 = OUTLINED_FUNCTION_47_28(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32));
  v0[56] = v2;
  v0[57] = OUTLINED_FUNCTION_47_28(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24));
  v3 = (void *)objc_opt_self();
  v4 = OUTLINED_FUNCTION_118_8();
  v0[58] = v4;
  OUTLINED_FUNCTION_34_1();
  v0[7] = v0 + 44;
  v5 = OUTLINED_FUNCTION_56_23((uint64_t)sub_1C2B221F8);
  v0[10] = MEMORY[0x1E0C809B0];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  OUTLINED_FUNCTION_158_4(v5, (uint64_t)sub_1C2B23794);
  objc_msgSend(v3, sel_load_patternId_completion_, v2, v4, v6);
  return OUTLINED_FUNCTION_67_18();
}

uint64_t sub_1C2B221F8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_4_15();
  *(_QWORD *)(v0 + 472) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B22240()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_43_2();
  v2 = v0[57];
  v1 = (void *)v0[58];
  v3 = v0[55];
  v0[60] = v0[44];

  sub_1C2B23798(v3);
  v0[43] = v2;
  v0[61] = swift_getAssociatedTypeWitness();
  sub_1C2CFE088();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_1C2B222D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t (*v24)();
  id v25;
  uint64_t v26;
  Swift::String_optional v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v36;
  os_log_type_t v37;
  _WORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  _WORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  os_log_type_t v54;
  _DWORD *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  id v63;
  os_log_type_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;

  if ((sub_1C2CFE244() & 1) != 0)
  {
    OUTLINED_FUNCTION_24_46();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v18 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v18, (uint64_t)qword_1ED7AA1B0);
    v19 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v19))
    {
      v20 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v20);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v21, v22, "Table rows are empty. Making flow for empty results.");
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_55_19();
    v23 = (_QWORD *)OUTLINED_FUNCTION_13_54();
    v24 = sub_1C2B22F68;
    *(_QWORD *)(v16 + 640) = v23;
    goto LABEL_27;
  }
  if ((OUTLINED_FUNCTION_133_7(*(_QWORD *)(v16 + 440)) & 1) == 0)
  {
    OUTLINED_FUNCTION_24_46();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v36 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v36, (uint64_t)qword_1ED7AA1B0);
    v37 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v37))
    {
      v38 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v38);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v39, v40, "We are in a mode that does not support windowing. Showing all rows.");
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_55_19();
    v23 = (_QWORD *)OUTLINED_FUNCTION_13_54();
    v24 = sub_1C2B22EDC;
    *(_QWORD *)(v16 + 616) = v23;
    goto LABEL_27;
  }
  OUTLINED_FUNCTION_162_4();
  sub_1C2CFDC68();
  OUTLINED_FUNCTION_55_4();
  OUTLINED_FUNCTION_83_15();
  OUTLINED_FUNCTION_29();
  if (!*(_QWORD *)(v16 + 208))
  {
    v41 = OUTLINED_FUNCTION_24_46();
    OUTLINED_FUNCTION_78_5(v41, &qword_1ED7A8480);
    goto LABEL_22;
  }
  if (!OUTLINED_FUNCTION_157() || (*(_BYTE *)(v16 + 664) & 1) == 0)
  {
    OUTLINED_FUNCTION_24_46();
LABEL_22:
    if (qword_1ED7AA040 != -1)
      swift_once();
    v42 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v42, (uint64_t)qword_1ED7AA1B0);
    v43 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v43))
    {
      v44 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v44);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v45, v46, "Pattern settings indicated we should not window. Showing all rows.");
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_55_19();
    v23 = (_QWORD *)OUTLINED_FUNCTION_13_54();
    v24 = sub_1C2B22E50;
    *(_QWORD *)(v16 + 592) = v23;
    goto LABEL_27;
  }
  v25 = OUTLINED_FUNCTION_162_4();
  v26 = OUTLINED_FUNCTION_134_8();

  OUTLINED_FUNCTION_61_20();
  OUTLINED_FUNCTION_34_1();
  if (!*(_QWORD *)(v16 + 240))
  {
    v50 = OUTLINED_FUNCTION_24_46();
    OUTLINED_FUNCTION_78_5(v50, &qword_1ED7A8480);
LABEL_30:
    if (qword_1ED7AA040 != -1)
      swift_once();
    v51 = OUTLINED_FUNCTION_118();
    v52 = (void *)__swift_project_value_buffer(v51, (uint64_t)qword_1ED7AA1B0);
    v53 = v15;
    sub_1C2CFD86C();
    v54 = OUTLINED_FUNCTION_123();
    if (OUTLINED_FUNCTION_116_2(v54))
    {
      v55 = (_DWORD *)OUTLINED_FUNCTION_6_0();
      a14 = OUTLINED_FUNCTION_6_0();
      *v55 = 136315138;
      v56 = objc_msgSend(v53, sel_patternId);
      OUTLINED_FUNCTION_124_0();
      OUTLINED_FUNCTION_109_9();
      *(_QWORD *)(v16 + 328) = OUTLINED_FUNCTION_121_7(v57, v58, &a14);
      OUTLINED_FUNCTION_103();
      OUTLINED_FUNCTION_97();

      OUTLINED_FUNCTION_32_22(&dword_1C28B6000, v59, v60, "Pattern %s has no defined promptType. Will show all rows.");
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    v23 = (_QWORD *)OUTLINED_FUNCTION_13_54();
    v24 = sub_1C2B22DC4;
    *(_QWORD *)(v16 + 568) = v23;
    goto LABEL_27;
  }
  if ((OUTLINED_FUNCTION_157() & 1) == 0)
  {
    OUTLINED_FUNCTION_24_46();
    goto LABEL_30;
  }
  OUTLINED_FUNCTION_117_13();
  v27.value._countAndFlagsBits = sub_1C2CFDDC4();
  PromptType.init(settingValue:)(v27);
  v28 = a15;
  *(_QWORD *)(v16 + 496) = a15;
  if (v28)
  {
    OUTLINED_FUNCTION_89_16();
    *(_QWORD *)(v16 + 280) = v26;
    *(_QWORD *)(v16 + 288) = v28;
    v29 = (_QWORD *)OUTLINED_FUNCTION_13_54();
    *(_QWORD *)(v16 + 504) = v29;
    v30 = OUTLINED_FUNCTION_76_21(v29);
    return OUTLINED_FUNCTION_59_28(v30, v31, v32, v33, v34);
  }
  OUTLINED_FUNCTION_24_46();
  if (qword_1ED7AA040 != -1)
    swift_once();
  v61 = OUTLINED_FUNCTION_118();
  v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1ED7AA1B0);
  v63 = v15;
  OUTLINED_FUNCTION_57_1();
  sub_1C2CFD86C();
  v64 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_42_8(v62))
  {
    v74 = v64;
    v65 = OUTLINED_FUNCTION_6_0();
    a14 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v65 = 136315394;
    v66 = objc_msgSend(v63, sel_patternId);
    v67 = OUTLINED_FUNCTION_124_0();

    *(_QWORD *)(v16 + 312) = OUTLINED_FUNCTION_228_0(v67, v68, &a14);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_55();

    *(_WORD *)(v65 + 12) = 2080;
    v69 = OUTLINED_FUNCTION_57_1();
    *(_QWORD *)(v16 + 320) = OUTLINED_FUNCTION_135_8(v69, v70, v71, v72, v73);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_67_17();
    OUTLINED_FUNCTION_71_5(&dword_1C28B6000, v62, v74, "Pattern %s specifies an unknown prompt type of %s. Will show all rows.", (uint8_t *)v65);
    OUTLINED_FUNCTION_97_16();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_29_2();
  v23 = (_QWORD *)OUTLINED_FUNCTION_13_54();
  v24 = sub_1C2B22D38;
  *(_QWORD *)(v16 + 544) = v23;
LABEL_27:
  v47 = OUTLINED_FUNCTION_85_15(v23, (uint64_t)v24);
  return OUTLINED_FUNCTION_11_8(v47, v48, v49);
}

uint64_t sub_1C2B228D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 512) = v1;
  swift_task_dealloc();
  if (v1)
    OUTLINED_FUNCTION_168_4();
  else
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B2292C()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  id v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if ((~*(_QWORD *)(v0 + 272) & 0xF000000000000007) != 0)
  {
    v26 = *(_QWORD *)(v0 + 256);
    v24 = *(_QWORD *)(v0 + 248);
    v25 = *(_QWORD *)(v0 + 264);
    v11 = objc_msgSend(*(id *)(v0 + 480), sel_settings);
    OUTLINED_FUNCTION_134_8();

    sub_1C28C1A54();
    v12 = OUTLINED_FUNCTION_55();
    if (*(_QWORD *)(v0 + 176))
    {
      v13 = OUTLINED_FUNCTION_157();
      v14 = *(_QWORD *)(v0 + 336);
      if (!v13)
        v14 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_136_3(v12, &qword_1ED7A8480);
      v14 = 0;
      LOBYTE(v13) = 0;
    }
    if ((v25 & 1) != 0)
    {
      if ((v13 & 1) == 0)
        v14 = MEMORY[0x1C3BC8B04](*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 488));
    }
    else
    {
      v14 = v26;
    }
    v23 = v14;
    v15 = objc_msgSend(*(id *)(v0 + 480), sel_settings);
    OUTLINED_FUNCTION_134_8();

    OUTLINED_FUNCTION_35_36();
    sub_1C28C1A54();
    v16 = OUTLINED_FUNCTION_55();
    if (*(_QWORD *)(v0 + 144))
    {
      v17 = OUTLINED_FUNCTION_157();
      if ((_DWORD)v17)
        v20 = *(_QWORD *)(v0 + 376);
      else
        v20 = 0;
      v21 = v17 ^ 1;
    }
    else
    {
      v17 = OUTLINED_FUNCTION_78_5(v16, &qword_1ED7A8480);
      v20 = 0;
      v21 = 1;
    }
    v22 = *(_QWORD *)(v0 + 456);
    OUTLINED_FUNCTION_160_3(v17, *(_QWORD *)(v0 + 488), v18, v19);
    sub_1C2CE605C(v22, v23, v20, v21, v24);
    swift_getAssociatedTypeWitness();
    OUTLINED_FUNCTION_40();
  }
  OUTLINED_FUNCTION_24_46();
  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v1, (uint64_t)qword_1ED7AA1B0);
  v2 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_20_0(v2))
  {
    v3 = (_WORD *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_91(v3);
    OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v4, v5, "Pattern settings indicate windowing but strategy did not provide windowing configuration. Showing all rows.");
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_55_19();
  v6 = (_QWORD *)OUTLINED_FUNCTION_108_15();
  *(_QWORD *)(v0 + 520) = v6;
  v7 = OUTLINED_FUNCTION_86_14(v6, (uint64_t)sub_1C2B22CAC);
  return OUTLINED_FUNCTION_54_31(v7, v8, v9);
}

uint64_t sub_1C2B22CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 528) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 536) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B22D00()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B22D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 552) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 560) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B22D8C()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B22DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 576) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 584) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B22E18()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B22E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 600) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 608) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B22EA4()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B22EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 624) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 632) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B22F30()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B22F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_180_0();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v2 + 648) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 656) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B22FBC()
{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  v1 = OUTLINED_FUNCTION_52_5();
  return OUTLINED_FUNCTION_23_23(v1, v2);
}

uint64_t sub_1C2B22FF4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 464);
  v2 = *(void **)(v0 + 448);
  swift_willThrow();

  OUTLINED_FUNCTION_38_36();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B23034()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B2306C()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B230A4()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B230DC()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B23114()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B2314C()
{
  void *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_15_56();

  OUTLINED_FUNCTION_4_77();
  OUTLINED_FUNCTION_38_36();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B23184()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v1 = *(void **)(v0 + 480);

  v2 = OUTLINED_FUNCTION_71_2();
  v3(v2);
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_38_36();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B231DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B231F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = v0[12] + 56;
  swift_beginAccess();
  sub_1C28B9A04(v1, (uint64_t)(v0 + 2));
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  v0[15] = v4;
  *v4 = v0;
  v4[1] = sub_1C2B23298;
  return v6(v0[11], v0[13], v0[14], v2, v3);
}

uint64_t sub_1C2B23298()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B232F0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_173_2();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

#error "1C2B233E8: call analysis failed (funcsize=88)"

uint64_t sub_1C2B2349C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B234BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  (*(void (**)(_QWORD))(v0[13] + 16))(v0[12]);
  v1 = v0[5];
  v2 = v0[6];
  v3 = (_QWORD *)OUTLINED_FUNCTION_71_2();
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v5 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  v0[14] = v5;
  *v5 = v0;
  v5[1] = sub_1C2B23548;
  return v7(v0[8], v0[10], v0[11], v1, v2);
}

uint64_t sub_1C2B23548()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

#error "1C2B23670: call analysis failed (funcsize=88)"

void PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(shouldContinueForResponse:strategy:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  __int16 v36;
  char v37;
  char v38;

  v8 = type metadata accessor for ContinuationPromptFlow(0, a6, a8, a4);
  v16 = OUTLINED_FUNCTION_100_17(v8, v9, v10, v11, v12, v13, v14, v15, v25, v27, v28, v30, v32, v34, SWORD2(v34), SBYTE6(v34), SHIBYTE(v34));
  v17 = OUTLINED_FUNCTION_106_9((uint64_t)v16);
  OUTLINED_FUNCTION_105_13(v17, v18, v19, v20, v21, v22, v23, v24, v26, v29, v31, v33, v35, v36, v37, v38);
  OUTLINED_FUNCTION_129_6();
  OUTLINED_FUNCTION_153_3();
  OUTLINED_FUNCTION_32_21();
  OUTLINED_FUNCTION_89();
}

uint64_t sub_1C2B23798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = sub_1C2CFD0E0();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2, v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v5, v8);
  v11 = (char *)&v42 - v10;
  v13 = MEMORY[0x1E0C80A78](v9, v12);
  v15 = (char *)&v42 - v14;
  v17 = MEMORY[0x1E0C80A78](v13, v16);
  v19 = (char *)&v42 - v18;
  MEMORY[0x1E0C80A78](v17, v20);
  v22 = (char *)&v42 - v21;
  sub_1C2CFCF84();
  if (sub_1C2CFCF48())
  {
    sub_1C2CFCF24();
    swift_release();
    sub_1C2CFD56C();
    swift_release();
    v23 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v23(v22, v19, v2);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v24 = sub_1C2CFD878();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED7AA1B0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v15, v22, v2);
    v25 = sub_1C2CFD86C();
    v26 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v25, v26))
    {
      v45 = v3;
      v27 = swift_slowAlloc();
      v43 = v23;
      v28 = (uint8_t *)v27;
      v29 = swift_slowAlloc();
      v47 = v29;
      v44 = v2;
      *(_DWORD *)v28 = 136315138;
      v30 = sub_1C2CFD0C8();
      v46 = sub_1C28BB120(v30, v31, &v47);
      v2 = v44;
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v2);
      _os_log_impl(&dword_1C28B6000, v25, v26, "Retrieved a Mode of '%s' from current SiriEnvironment", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v29, -1, -1);
      v32 = v28;
      v23 = v43;
      MEMORY[0x1C3BC9DE8](v32, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v15, v2);
    }

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v23)(a1, v22, v2);
  }
  else
  {
    v45 = v3;
    sub_1C2CFCF78();
    sub_1C2CFCF24();
    swift_release();
    sub_1C2CFD56C();
    swift_release();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v33 = sub_1C2CFD878();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED7AA1B0);
    v34 = v45;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v7, v11, v2);
    v35 = sub_1C2CFD86C();
    v36 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v47 = v38;
      *(_DWORD *)v37 = 136315138;
      v44 = v2;
      v39 = sub_1C2CFD0C8();
      v46 = sub_1C28BB120(v39, v40, &v47);
      v2 = v44;
      v34 = v45;
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v2);
      _os_log_impl(&dword_1C28B6000, v35, v36, "Retrieved a Mode of '%s' from default SiriEnvironment", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v38, -1, -1);
      MEMORY[0x1C3BC9DE8](v37, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v2);
    }

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(a1, v11, v2);
  }
}

uint64_t sub_1C2B23C38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  char v13;
  uint64_t v15;

  v2 = sub_1C2CFD0E0();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2, v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5, v8);
  v10 = (char *)&v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v15 - v9, a1, v2);
  sub_1C2CFD0A4();
  sub_1C28CC7A0();
  v11 = sub_1C2CFDD28();
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v7, v2);
  if ((v11 & 1) != 0)
  {
    v13 = 1;
  }
  else
  {
    sub_1C2CFD0D4();
    v13 = sub_1C2CFDD28();
    v12(v7, v2);
  }
  v12(v10, v2);
  return v13 & 1;
}

uint64_t sub_1C2B23D50(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
    return sub_1C292A5F4(v3, a3);
  else
    return sub_1C2920A1C(v3, a2);
}

void PatternFlowProvider.outputPublisher.getter()
{
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_176_1();
  OUTLINED_FUNCTION_84_3();
}

void PatternFlowProvider.responseGenerator.getter()
{
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_176_1();
  OUTLINED_FUNCTION_84_3();
}

uint64_t PatternFlowProvider.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

void sub_1C2B23E08()
{
  PatternFlowProvider.outputPublisher.getter();
}

void sub_1C2B23E28()
{
  PatternFlowProvider.responseGenerator.getter();
}

void sub_1C2B23E48(void *a1, uint64_t a2)
{
  sub_1C2B1E19C(a1, a2);
}

_QWORD *sub_1C2B23E68(uint64_t a1, uint64_t a2)
{
  return sub_1C2B1E7E4(a1, a2);
}

_QWORD *sub_1C2B23E88(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B1E830(*a1, a2, a3);
}

uint64_t sub_1C2B23EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1C2B23F28;
  return PatternFlowProviding.makeTableSetFlow<A>(provider:)(a1, a4, a2, a5, a3);
}

uint64_t sub_1C2B23F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_15_0();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_3_73(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C2B23F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)OUTLINED_FUNCTION_0();
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_bridgeObjectRelease();
  v7 = v0 + ((v4 + v6 + 8) & ~v6) + v5[5];
  v8 = OUTLINED_FUNCTION_13_41();
  OUTLINED_FUNCTION_15_28(v8);
  v9 = OUTLINED_FUNCTION_126_10();
  if (!OUTLINED_FUNCTION_80_9(v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v7 + 256))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v10 = OUTLINED_FUNCTION_132_8();
    if (!OUTLINED_FUNCTION_22_33(v10))
      OUTLINED_FUNCTION_28_26();
    OUTLINED_FUNCTION_131_7();
  }
  OUTLINED_FUNCTION_154_3();
  OUTLINED_FUNCTION_37_33();
  OUTLINED_FUNCTION_37_33();
  OUTLINED_FUNCTION_37_33();
  OUTLINED_FUNCTION_130_7(v5[17]);
  OUTLINED_FUNCTION_37_33();
  OUTLINED_FUNCTION_130_7(v5[25]);
  return swift_deallocObject();
}

uint64_t sub_1C2B24150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_0() - 8) + 80);
  v10 = v8 + v9 + 8;
  v11 = v1 + v7;
  v12 = *(_QWORD *)(v1 + v8);
  v13 = v1 + (v10 & ~v9);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_1C28CCD60;
  return sub_1C2B2349C(a1, v11, v12, v13, v4, v5);
}

uint64_t sub_1C2B2420C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *a2;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C28CC838;
  return sub_1C2B231DC(a1, v8, a3, a4);
}

uint64_t sub_1C2B2427C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;

  v17 = (_QWORD *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_responseGenerator);
  v17[3] = type metadata accessor for ResponseFactory();
  v17[4] = &protocol witness table for ResponseFactory;
  *v17 = a2;
  sub_1C2902070(a1, a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_baseManifest);
  v18 = (_QWORD *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_rejectionOutputProducer);
  *v18 = a3;
  v18[1] = a4;
  v19 = (_QWORD *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_cancellationOutputProducer);
  *v19 = a5;
  v19[1] = a6;
  v20 = (_QWORD *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_promptPatternExecutionProducer);
  *v20 = a7;
  v20[1] = a8;
  return a9;
}

uint64_t sub_1C2B24344(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v7 = a2 & 1;
  v10 = type metadata accessor for PatternFlowProvider();
  v11 = &protocol witness table for PatternFlowProvider;
  *(_QWORD *)&v9 = a3;
  *(_BYTE *)(a4 + 16) = v7;
  *(_QWORD *)(a4 + 24) = a1;
  sub_1C28B99EC(&v9, a4 + 32);
  *(_BYTE *)(a4 + 72) = 0;
  return a4;
}

unint64_t sub_1C2B243AC()
{
  unint64_t result;

  result = qword_1EF798850;
  if (!qword_1EF798850)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF798850);
  }
  return result;
}

uint64_t sub_1C2B243E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if ((~a4 & 0xF000000000000007) != 0)
    return sub_1C2CFD350();
  return result;
}

uint64_t sub_1C2B24400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if ((~a4 & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

unint64_t sub_1C2B2441C()
{
  unint64_t result;

  result = qword_1EF798868;
  if (!qword_1EF798868)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for PromptType, &type metadata for PromptType);
    atomic_store(result, (unint64_t *)&qword_1EF798868);
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptType()
{
  return &type metadata for PromptType;
}

uint64_t dispatch thunk of PatternFlowProviding.outputPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PatternFlowProviding.responseGenerator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithOpenEndedPrompt<A>(strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithYesNoPrompt<A>(strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithConfirmationPrompt<A>(strategy:itemToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:shouldContinueForResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithContinuationPrompt(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithContinuationPrompt(shouldContinueForResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithSimpleDisambiguationPrompt<A>(items:strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 88))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeSimpleDisambiguationClarificationFlow<A>(items:strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 96))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeDetailedDisambiguationClarificationFlow<A>(provider:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_158_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_108_3(v1, (uint64_t)sub_1C2B24840);
  return OUTLINED_FUNCTION_18_1(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of PatternFlowProviding.makeResultSetFlow<A>(provider:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_158_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_108_3(v1, (uint64_t)sub_1C2B24840);
  return OUTLINED_FUNCTION_18_1(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of PatternFlowProviding.makeDetailedResultFlow<A>(provider:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_158_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_108_3(v1, (uint64_t)sub_1C2B24840);
  return OUTLINED_FUNCTION_18_1(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of PatternFlowProviding.makeTableSetFlow<A>(provider:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_158_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_108_3(v1, (uint64_t)sub_1C2B245B8);
  return OUTLINED_FUNCTION_18_1(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B245B8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_15_0();
  return OUTLINED_FUNCTION_3_73(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t method lookup function for PatternFlowProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PatternFlowProvider.__allocating_init(outputPublisher:responseGenerator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C2B245FC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9();
  v1 = (int *)OUTLINED_FUNCTION_0();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();

  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2) + v1[5];
  v4 = OUTLINED_FUNCTION_13_41();
  OUTLINED_FUNCTION_15_28(v4);
  v5 = OUTLINED_FUNCTION_126_10();
  if (!OUTLINED_FUNCTION_80_9(v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v3 + 256))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v6 = OUTLINED_FUNCTION_132_8();
    if (!OUTLINED_FUNCTION_22_33(v6))
      OUTLINED_FUNCTION_28_26();
    OUTLINED_FUNCTION_131_7();
  }
  OUTLINED_FUNCTION_154_3();
  OUTLINED_FUNCTION_37_33();
  OUTLINED_FUNCTION_37_33();
  OUTLINED_FUNCTION_37_33();
  OUTLINED_FUNCTION_130_7(v1[17]);
  OUTLINED_FUNCTION_37_33();
  OUTLINED_FUNCTION_130_7(v1[25]);
  return swift_deallocObject();
}

uint64_t sub_1C2B247A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_0() - 8) + 80);
  v5 = (uint64_t *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1C28CC838;
  return ((uint64_t (*)(uint64_t, uint64_t *, uint64_t, uint64_t))((char *)&dword_1EF7988D0 + dword_1EF7988D0))(a1, v5, v6, v7);
}

uint64_t OUTLINED_FUNCTION_3_73(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_4_77()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_7_70()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_9_71()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_13_54()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_15_56()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_18_50()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_21_53()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_22_53()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_24_46()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_31_40()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_33_33()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_34_39()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_38_36()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_47_28@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_54_31(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void OUTLINED_FUNCTION_55_19()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_56_23@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = a1;
  return swift_continuation_init();
}

uint64_t OUTLINED_FUNCTION_59_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

double OUTLINED_FUNCTION_61_20()
{
  return sub_1C28C1A54();
}

uint64_t OUTLINED_FUNCTION_64_14()
{
  uint64_t v0;

  return *(unsigned int *)(*(_QWORD *)(v0 + 48) + 4);
}

uint64_t OUTLINED_FUNCTION_67_18()
{
  return swift_continuation_await();
}

uint64_t OUTLINED_FUNCTION_76_21(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_78_17()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 40))(v1, v0);
}

void OUTLINED_FUNCTION_80_13(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

double OUTLINED_FUNCTION_83_15()
{
  return sub_1C28C1A54();
}

uint64_t OUTLINED_FUNCTION_85_15@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 400);
}

uint64_t OUTLINED_FUNCTION_86_14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 400);
}

uint64_t OUTLINED_FUNCTION_89_16()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_94_16()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_1C290DC48(v1, v4, v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_97_16()
{
  return swift_arrayDestroy();
}

uint64_t *OUTLINED_FUNCTION_100_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v17;
  uint64_t v18;
  char v19;

  a17 = v19;
  a12 = v18;
  a13 = v17;
  return __swift_allocate_boxed_opaque_existential_0(&a9);
}

uint64_t OUTLINED_FUNCTION_103_13@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 272);
}

uint64_t OUTLINED_FUNCTION_104_14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 176);
}

uint64_t OUTLINED_FUNCTION_106_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_108_15()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_109_9()
{
  void *v0;

}

id OUTLINED_FUNCTION_111_11(id a1, SEL a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(a1, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_113_9()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_115_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  unint64_t v6;
  uint64_t v7;
  va_list va;

  va_start(va, a6);
  return sub_1C28BB120(v7, v6, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_121_7(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_1C28BB120(v3, v4, a3);
}

_QWORD *OUTLINED_FUNCTION_123_9(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  va_list va;

  va_start(va, a1);
  return v3((uint64_t *)va, v2, v1);
}

uint64_t OUTLINED_FUNCTION_126_10()
{
  return type metadata accessor for NLContextUpdate();
}

uint64_t OUTLINED_FUNCTION_127_9()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_129_6()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_130_7(uint64_t a1@<X8>)
{
  uint64_t v1;

}

uint64_t OUTLINED_FUNCTION_131_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_133_7(uint64_t a1)
{
  return sub_1C2B23C38(a1);
}

uint64_t OUTLINED_FUNCTION_134_8()
{
  return sub_1C2CFDC68();
}

uint64_t OUTLINED_FUNCTION_136_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1C28BA958(v2, a2);
}

void OUTLINED_FUNCTION_147_3()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_148_2()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_149_5()
{
  return sub_1C2CFDC68();
}

uint64_t OUTLINED_FUNCTION_150_3()
{
  return 0x795474706D6F7270;
}

uint64_t OUTLINED_FUNCTION_151_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_153_3()
{
  return Flow.eraseToAnyValueFlow()();
}

uint64_t OUTLINED_FUNCTION_154_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_157_5()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_158_4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;

  v3[2] = a2;
  v3[3] = v2;
  v3[4] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_159_4()
{
  return type metadata accessor for AnyFlow();
}

uint64_t OUTLINED_FUNCTION_160_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for ListWindowedContentSource(0, a2, a3, a4);
}

id OUTLINED_FUNCTION_162_4()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3784));
}

void OUTLINED_FUNCTION_164_4()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_165_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_166_2(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v3 + 32) = a1;

}

uint64_t OUTLINED_FUNCTION_168_4()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_170_3(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_173_2()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + 16);
}

void OUTLINED_FUNCTION_175_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

}

uint64_t OUTLINED_FUNCTION_176_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C28B9A04(v1, v0);
}

uint64_t OUTLINED_FUNCTION_177_1@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(a7);
}

uint64_t sub_1C2B24CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B24D10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t (*v15)(_QWORD, id, _QWORD, uint64_t, uint64_t);

  v1 = *(void **)(*(_QWORD *)(v0 + 24) + 16);
  *(_QWORD *)(v0 + 48) = v1;
  if (v1)
  {
    v2 = qword_1ED7AA040;
    v3 = v1;
    if (v2 != -1)
      swift_once();
    v4 = sub_1C2CFD878();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED7AA1B0);
    v5 = sub_1C2CFD86C();
    v6 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1C28B6000, v5, v6, "Using PatternExecutionResult to build Output", v7, 2u);
      MEMORY[0x1C3BC9DE8](v7, -1, -1);
    }
    v8 = *(_QWORD **)(v0 + 40);

    v9 = v8 + 2;
    v10 = v8[5];
    v11 = v8[6];
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v15 = (uint64_t (*)(_QWORD, id, _QWORD, uint64_t, uint64_t))(**(int **)(v11 + 8) + *(_QWORD *)(v11 + 8));
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v12;
    *v12 = v0;
    v12[1] = sub_1C2B24E94;
    return v15(*(_QWORD *)(v0 + 16), v3, *(_QWORD *)(v0 + 32), v10, v11);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v14 + 32) = 0;
    *(_OWORD *)v14 = 0u;
    *(_OWORD *)(v14 + 16) = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1C2B24E94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C2B24EF8()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B24F24()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for PatternOutputElementConverter()
{
  return objc_opt_self();
}

uint64_t sub_1C2B24F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C2B24FDC;
  return sub_1C2B24CF4(a1, a2, a3);
}

uint64_t sub_1C2B24FDC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C2B2501C@<X0>(uint64_t a1@<X8>)
{
  return PeerInfoProviding.getDeviceIdiom()(a1);
}

uint64_t PeerInfoProviding.getDeviceIdiom()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(unsigned int *)off_1E7C6BCF8;
  v3 = sub_1C2CFD038();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

Swift::String_optional __swiftcall PeerInfoProviding.getPeerName()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  v0 = 0;
  v1 = 0;
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

void Perform.__allocating_init(interruptionPolicy:operateWithSideEffect:operation:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char *v4;

  OUTLINED_FUNCTION_21_54();
  Perform.init(interruptionPolicy:operateWithSideEffect:operation:)(v4, a2, a3, a4);
  OUTLINED_FUNCTION_8_0();
}

uint64_t OperationContext.aceService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C28B9A04(v1, a1);
}

uint64_t OperationContext.init(aceService:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C28B99EC(a1, a2);
}

void Perform.interruptionPolicy.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t Perform.withSideEffect.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

void sub_1C2B250F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_26_45();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  OUTLINED_FUNCTION_18_51();
  v3 = OUTLINED_FUNCTION_25();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
  OUTLINED_FUNCTION_21_1();
}

void sub_1C2B25160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_26_45();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  OUTLINED_FUNCTION_18_51();
  v3 = OUTLINED_FUNCTION_25();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_1C2B251D4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_1C2B251E4(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120)) = result;
  return result;
}

uint64_t Perform.init(interruptionPolicy:operateWithSideEffect:operation:)(char *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  v9 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 112);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v10 = sub_1C2CFEAF0();
  OUTLINED_FUNCTION_85(v9, 1, v11, v10);
  *(_BYTE *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120)) = 0;
  *(_BYTE *)(v4 + 16) = v8;
  *(_BYTE *)(v4 + 17) = a2;
  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = a4;
  return v4;
}

void Perform.__allocating_init<A>(interruptionPolicy:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  OUTLINED_FUNCTION_21_54();
  Perform.init<A>(interruptionPolicy:operation:)(v4, a2, a3, a4);
  OUTLINED_FUNCTION_8_0();
}

uint64_t Perform.init<A>(interruptionPolicy:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  unint64_t v18;
  char *v19;
  uint64_t v21;

  v5 = v4;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_BYTE *)MEMORY[0x1E0C80A78](a1, a2);
  v13 = v5 + *(_QWORD *)(v12 + 112);
  v14 = *(_QWORD *)(v12 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v15 = sub_1C2CFEAF0();
  OUTLINED_FUNCTION_85(v13, 1, v16, v15);
  *(_BYTE *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 120)) = 0;
  *(_BYTE *)(v5 + 16) = v11;
  *(_BYTE *)(v5 + 17) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4) & 1;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  v17((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
  v18 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = v14;
  *((_QWORD *)v19 + 3) = a3;
  *((_QWORD *)v19 + 4) = a4;
  v17(&v19[v18], (uint64_t)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(_QWORD *)(v5 + 24) = &unk_1EF7989B0;
  *(_QWORD *)(v5 + 32) = v19;
  return v5;
}

uint64_t sub_1C2B25424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 24) + *(_QWORD *)(a6 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_1C28CC838;
  return v13(a1, a2, a5, a6);
}

uint64_t sub_1C2B254B0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1C2B25508(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v10 = (uint64_t)v2 + ((v9 + 40) & ~v9);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_1C28CCD60;
  return sub_1C2B25424(a1, a2, v10, v6, v7, v8);
}

uint64_t Perform.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  __int128 v58;
  __int128 v59[2];

  v57 = (uint64_t *)a1;
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v55 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v56 = v2;
  v3 = sub_1C2CFEAF0();
  v6 = type metadata accessor for Conclude(0, v3, v4, v5);
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_125_2();
  v10 = v8 - v9;
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v52 - v13;
  v15 = sub_1C2CFE478();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x1E0C80A78](v15, v17);
  v20 = (char *)&v52 - v19;
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v18, v22);
  OUTLINED_FUNCTION_125_2();
  v25 = (_QWORD *)(v23 - v24);
  MEMORY[0x1E0C80A78](v26, v27);
  v29 = (char *)&v52 - v28;
  sub_1C2B250F4((uint64_t)v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    v30 = type metadata accessor for Abort(0);
    v31 = v57;
    v57[3] = v30;
    v31[4] = (uint64_t)&protocol witness table for Abort;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v31);
    v35 = type metadata accessor for Perform(0, v56, v33, v34);
    MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for Perform<A>, v35);
    return ActingFlow.abort(reason:)(0xD000000000000020, 0x80000001C2D31C80, boxed_opaque_existential_0);
  }
  v52 = v10;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v29, v20, v3);
  v39 = v53;
  v40 = v54;
  v41 = v56;
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120)) != 1)
    goto LABEL_9;
  (*(void (**)(_QWORD *, char *, uint64_t))(v21 + 16))(v25, v29, v3);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    OUTLINED_FUNCTION_33_14((uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
LABEL_9:
    v50 = type metadata accessor for Perform(0, v41, v37, v38);
    MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for Perform<A>, v50);
    OUTLINED_FUNCTION_34_40((uint64_t)v14);
    v51 = OUTLINED_FUNCTION_41_31((uint64_t)&protocol witness table for Conclude<A>);
    OUTLINED_FUNCTION_31_41((uint64_t)v51);
    goto LABEL_10;
  }
  *(_QWORD *)&v59[0] = *v25;
  v42 = *(void **)&v59[0];
  v43 = *(id *)&v59[0];
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_9;
  }

  v46 = type metadata accessor for Perform(0, v41, v44, v45);
  MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for Perform<A>, v46);
  v47 = v52;
  OUTLINED_FUNCTION_34_40(v52);
  sub_1C2A53604(v40, v48, (uint64_t)v14);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v47, v40);
  v49 = OUTLINED_FUNCTION_41_31((uint64_t)&protocol witness table for Conclude<A>);
  OUTLINED_FUNCTION_31_41((uint64_t)v49);

LABEL_10:
  OUTLINED_FUNCTION_33_14((uint64_t)v29, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_1C28B99EC(&v58, (uint64_t)v59);
  return sub_1C28B99EC(v59, (uint64_t)v57);
}

uint64_t type metadata accessor for Perform(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Perform);
}

uint64_t Perform.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  OUTLINED_FUNCTION_18_51();
  v2 = OUTLINED_FUNCTION_25();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t Perform.__deallocating_deinit()
{
  Perform.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B259AC@<X0>(uint64_t a1@<X8>)
{
  return Perform.action.getter(a1);
}

uint64_t Perform.yieldOnInterruption()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120)) = 1;
  return sub_1C2CFD350();
}

uint64_t Perform.execute(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v2[14] = OUTLINED_FUNCTION_33_34();
  v3 = sub_1C2CFE478();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = OUTLINED_FUNCTION_78();
  v2[18] = OUTLINED_FUNCTION_78();
  v2[19] = OUTLINED_FUNCTION_78();
  return swift_task_switch();
}

uint64_t sub_1C2B25A80()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int *v6;

  v1 = *(int **)(*(_QWORD *)(v0 + 104) + 24);
  sub_1C28B9A04(*(_QWORD *)(v0 + 96) + 40, v0 + 56);
  v2 = type metadata accessor for NoUserInteractionAceServiceInvoker();
  v3 = swift_allocObject();
  sub_1C28B99EC((__int128 *)(v0 + 56), v3 + 16);
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = &off_1E7C8ED58;
  *(_QWORD *)(v0 + 16) = v3;
  v6 = (int *)((char *)v1 + *v1);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v4;
  *v4 = v0;
  v4[1] = sub_1C2B25B3C;
  return ((uint64_t (*)(_QWORD, uint64_t))v6)(*(_QWORD *)(v0 + 152), v0 + 16);
}

uint64_t sub_1C2B25B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)v1 + 16;
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  sub_1C2ABD934(v2);
  return swift_task_switch();
}

uint64_t sub_1C2B25BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 112);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v2);
  sub_1C2B25160(v1);
  OUTLINED_FUNCTION_37_34();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2B25C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  sub_1C2B250F4(v1);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    v3 = *(void **)(v0 + 168);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    **(_QWORD **)(v0 + 144) = v3;
    swift_storeEnumTagMultiPayload();
    v7 = v3;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 112) - 8) + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 136));
  }
  v9 = *(void **)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 144);
  OUTLINED_FUNCTION_85(v10, 0, v8, *(_QWORD *)(v0 + 112));
  sub_1C2B25160(v10);

  OUTLINED_FUNCTION_37_34();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for NoUserInteractionAceServiceInvoker()
{
  return objc_opt_self();
}

void Perform.cancel(error:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int EnumTagSinglePayload;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v2 = OUTLINED_FUNCTION_33_34();
  v3 = sub_1C2CFE478();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3, v5);
  OUTLINED_FUNCTION_125_2();
  v8 = (_QWORD *)(v6 - v7);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v18 - v11;
  sub_1C2B250F4((uint64_t)&v18 - v11);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v2);
  OUTLINED_FUNCTION_33_14((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  if (EnumTagSinglePayload == 1)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v14 = sub_1C2CFD878();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED7AA1B0);
    v15 = sub_1C2CFD86C();
    v16 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1C28B6000, v15, v16, "Perform was canceled before its operation completes.", v17, 2u);
      OUTLINED_FUNCTION_11_0();
    }

    *v8 = a1;
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v2);
    OUTLINED_FUNCTION_29_1();
    sub_1C2B25160((uint64_t)v8);
  }
}

void sub_1C2B25EE4(_BYTE *a1@<X8>)
{
  Perform.interruptionPolicy.getter(a1);
}

uint64_t sub_1C2B25F04()
{
  return Perform.withSideEffect.getter() & 1;
}

uint64_t sub_1C2B25F28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28CCD60;
  return Perform.execute(with:)(a1);
}

void sub_1C2B25F78(uint64_t a1)
{
  Perform.cancel(error:)(a1);
}

BOOL sub_1C2B25F98()
{
  objc_opt_self();
  if (OUTLINED_FUNCTION_12_1())
    return 1;
  objc_opt_self();
  if (OUTLINED_FUNCTION_12_1())
    return 1;
  objc_opt_self();
  if (OUTLINED_FUNCTION_12_1())
    return 1;
  objc_opt_self();
  return OUTLINED_FUNCTION_12_1() != 0;
}

uint64_t sub_1C2B26004()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_12_6();
  v0 = OUTLINED_FUNCTION_163_2();
  return v1(v0) & 1;
}

uint64_t sub_1C2B26038()
{
  uint64_t result;
  _QWORD *v1;

  result = sub_1C2B25F98();
  if ((result & 1) != 0)
  {
    sub_1C2B26AFC();
    swift_allocError();
    *v1 = 0xD000000000000083;
    v1[1] = 0x80000001C2D34AF0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C2B260A8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B260C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_19_52();
  if (v0)
    return OUTLINED_FUNCTION_4_78(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_89_4(*(_QWORD *)(v1 + 32));
  v3 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  v4 = OUTLINED_FUNCTION_8_66(v3, (uint64_t)sub_1C2B26B38);
  return OUTLINED_FUNCTION_9_72(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C2B26114(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;

  sub_1C2B26038();
  v5 = v2[5];
  v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 40))(a1, a2 & 1, v5, v6);
}

uint64_t sub_1C2B26304(unint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  id v8;
  void *v9;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1C2CFE820();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = a2 & 1;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1C3BC9170](v6, a1);
      else
        v8 = *(id *)(a1 + 8 * v6 + 32);
      v9 = v8;
      ++v6;
      sub_1C2B26114((uint64_t)v8, v7);

    }
    while (v4 != v6);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B263D8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B263F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_19_52();
  if (v0)
    return OUTLINED_FUNCTION_4_78(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_89_4(*(_QWORD *)(v1 + 32));
  v3 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  v4 = OUTLINED_FUNCTION_8_66(v3, (uint64_t)sub_1C2B26444);
  return OUTLINED_FUNCTION_9_72(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C2B26444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_7();
  v3 = OUTLINED_FUNCTION_41();
  if (!v1)
    v3 = v0;
  return OUTLINED_FUNCTION_119_0(v3, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C2B26478(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = v5;
  *(_BYTE *)(v6 + 64) = a4;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B26494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD);

  OUTLINED_FUNCTION_19_52();
  if (v1)
    return OUTLINED_FUNCTION_4_78(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_89_4(*(_QWORD *)(v2 + 48));
  v4 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v2 + 56) = v4;
  *v4 = v2;
  v4[1] = sub_1C2B26518;
  return v5(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 64), *(_QWORD *)(v2 + 40), v0, 0);
}

uint64_t sub_1C2B26518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_7();
  v3 = OUTLINED_FUNCTION_41();
  if (!v1)
    v3 = v0;
  return OUTLINED_FUNCTION_119_0(v3, *(uint64_t (**)(void))(v2 + 8));
}

void sub_1C2B2654C()
{
  OUTLINED_FUNCTION_20_60();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2B26570()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_12_6();
  v0 = OUTLINED_FUNCTION_163_2();
  return v1(v0);
}

void sub_1C2B265A0()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  OUTLINED_FUNCTION_12_6();
  v0 = OUTLINED_FUNCTION_163_2();
  v1(v0);
  OUTLINED_FUNCTION_18();
}

void sub_1C2B265C8()
{
  OUTLINED_FUNCTION_20_60();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2B265EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B265FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_89_4(*(_QWORD *)(v0 + 16));
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = OUTLINED_FUNCTION_173(v1, (uint64_t)sub_1C2B2663C);
  return OUTLINED_FUNCTION_42_3(v2, v3, v4);
}

uint64_t sub_1C2B2663C(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_41();
  return OUTLINED_FUNCTION_126_1(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B26678()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B26688()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_89_4(*(_QWORD *)(v0 + 16));
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = OUTLINED_FUNCTION_173(v1, (uint64_t)sub_1C290FEF8);
  return OUTLINED_FUNCTION_42_3(v2, v3, v4);
}

uint64_t sub_1C2B266C8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28ECBF8;
  return sub_1C2B260A8(a1, a2, a3);
}

uint64_t sub_1C2B26730(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28ECBF8;
  return sub_1C2B263D8(a1, a2, a3);
}

uint64_t sub_1C2B26798(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1C2934C7C;
  return sub_1C2B26478(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2B26818(uint64_t a1, char a2)
{
  return sub_1C2B26114(a1, a2);
}

uint64_t sub_1C2B26838(unint64_t a1, char a2)
{
  return sub_1C2B26304(a1, a2);
}

void sub_1C2B26858()
{
  sub_1C2B265A0();
}

uint64_t sub_1C2B26878()
{
  return sub_1C2B26570();
}

void sub_1C2B26898()
{
  sub_1C2B2654C();
}

void sub_1C2B268B8()
{
  sub_1C2B265C8();
}

uint64_t sub_1C2B268D8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C2946E14;
  return sub_1C2B265EC();
}

uint64_t sub_1C2B26920()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28CC838;
  return sub_1C2B26678();
}

uint64_t sub_1C2B26968()
{
  return sub_1C2B26004() & 1;
}

ValueMetadata *type metadata accessor for OperationContext()
{
  return &type metadata for OperationContext;
}

uint64_t dispatch thunk of PerformOperation.hasSideEffect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PerformOperation.run(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C28CC838;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1C2B26A1C()
{
  uint64_t result;
  unint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  sub_1C2CFEAF0();
  result = sub_1C2CFE478();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Perform()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Perform.__allocating_init(interruptionPolicy:operateWithSideEffect:operation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of Perform.__allocating_init<A>(interruptionPolicy:operation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

unint64_t sub_1C2B26AFC()
{
  unint64_t result;

  result = qword_1EF798BC8;
  if (!qword_1EF798BC8)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for InvalidOperation, &type metadata for InvalidOperation);
    atomic_store(result, (unint64_t *)&qword_1EF798BC8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_78(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_8_66@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_9_72(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_18_51()
{
  return sub_1C2CFEAF0();
}

uint64_t OUTLINED_FUNCTION_19_52()
{
  return sub_1C2B26038();
}

_QWORD *OUTLINED_FUNCTION_20_60()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
}

uint64_t OUTLINED_FUNCTION_21_54()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_26_45()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
}

uint64_t OUTLINED_FUNCTION_31_41(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_33_34()
{
  return sub_1C2CFEAF0();
}

void OUTLINED_FUNCTION_34_40(uint64_t a1@<X8>)
{
  uint64_t v1;

  ActingFlow.conclude(with:)(v1, a1);
}

uint64_t *OUTLINED_FUNCTION_41_31@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = v1;
  *(_QWORD *)(v2 - 128) = a1;
  return __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 160));
}

uint64_t dispatch thunk of PersistenceHandler.save(flowDescriptor:variables:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_177();
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_2_75(v1, (uint64_t)sub_1C28F6E90);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PersistenceHandler.restore(flowDescriptor:variableNames:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_177();
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_2_75(v1, (uint64_t)sub_1C292FB0C);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t OUTLINED_FUNCTION_2_75@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

void PersonalDomainCheckFlow.__allocating_init(strategy:)(uint64_t a1)
{
  sub_1C2B28824(a1, sub_1C2B29F24);
}

{
  OUTLINED_FUNCTION_5_2();
  PersonalDomainCheckFlow.init(strategy:)(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B26CF0()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_75_21();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B26D0C()
{
  sub_1C2CFD350();
  SiriEnvironment.userIdentity.setter();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B26D30(uint64_t a1, uint64_t a2)
{
  return PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse(_:)(a1, a2);
}

uint64_t sub_1C2B26D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C2CFE10C();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1EF798BE0;
  v9[5] = 0;
  v9[6] = a1;
  v9[7] = a2;
  LODWORD(a1) = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  sub_1C2CFD350();
  if ((_DWORD)a1 == 1)
  {
    sub_1C28B9D6C((uint64_t)v7, &qword_1ED7A7240);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_1C2CFE100();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_1C2CFE0B8();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_1EF789D20;
  *(_QWORD *)(v13 + 24) = v9;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_10();
  v8 = v7 - v6;
  v9 = sub_1C2CFE10C();
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
  v10 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_1EF798BE0;
  v10[5] = 0;
  v10[6] = a1;
  v10[7] = a2;
  LODWORD(a1) = __swift_getEnumTagSinglePayload(v8, 1, v9);
  v11 = sub_1C2CFD350();
  if ((_DWORD)a1 == 1)
  {
    OUTLINED_FUNCTION_60_0(v11, &qword_1ED7A7240);
  }
  else
  {
    sub_1C2CFE100();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    if (v10[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1C2CFE0B8();
      swift_unknownObjectRelease();
    }
  }
  v12 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v12 + 16) = &unk_1EF789CD8;
  *(_QWORD *)(v12 + 24) = v10;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C2B270E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28BCB84;
  return PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse()(a1, a2, a3);
}

uint64_t sub_1C2B27148(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B27160()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 24) = swift_task_alloc();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  *v1 = v0;
  v1[1] = sub_1C2B271E0;
  OUTLINED_FUNCTION_44_27();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B271E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v0 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1C2B27238()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B27278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  *v3 = v0;
  v3[1] = sub_1C2B27308;
  OUTLINED_FUNCTION_44_27();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B27308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v0 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1C2B27360(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[36] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v1[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798F00);
  v1[38] = swift_task_alloc();
  v2 = sub_1C2CFBCAC();
  v1[39] = v2;
  v1[40] = *(_QWORD *)(v2 - 8);
  v1[41] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2B27408()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  v1 = qword_1ED7A4228;
  sub_1C28C72CC((uint64_t)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  v0[14] = OUTLINED_FUNCTION_72_22();
  v0[15] = &protocol witness table for RefreshableDeviceState;
  v0[11] = v1;
  sub_1C2CFCF84();
  OUTLINED_FUNCTION_38_0();
  sub_1C2CFCF78();
  v0[42] = sub_1C2CFCF24();
  OUTLINED_FUNCTION_36_0();
  sub_1C28B9A48((uint64_t)(v0 + 11), (uint64_t)(v0 + 21));
  v2 = (_QWORD *)swift_task_alloc();
  v0[43] = v2;
  *v2 = v0;
  v2[1] = sub_1C2B27504;
  return static ResponseTemplates.unsupportedSecuredRequestSetting(deviceState:)((uint64_t)(v0 + 2), (uint64_t)(v0 + 21));
}

uint64_t sub_1C2B27504()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_87_0();
  *v2 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  v4 = swift_task_dealloc();
  OUTLINED_FUNCTION_125_1(v4, &qword_1ED7A8760);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B27564()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t inited;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = v0[41];
  v3 = v0[39];
  v4 = v0[40];
  v5 = v0[38];
  v28 = v0[8];
  v27 = v0[9];
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D88330]), sel_init);
  sub_1C2CFBCA0();
  v7 = sub_1C2CFBC70();
  v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_1C29BB800(v7, v9, v6);

  sub_1C2CFD590();
  v10 = sub_1C2CFD398();
  v11 = OUTLINED_FUNCTION_365(v5);
  v12 = v1[38];
  if ((_DWORD)v11 == 1)
  {
    OUTLINED_FUNCTION_60_0(v11, &qword_1EF798F00);
LABEL_5:
    v15 = 0;
    goto LABEL_6;
  }
  sub_1C2CFD38C();
  v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v12, v10);
  if (!v14)
    goto LABEL_5;
  v15 = (void *)sub_1C2CFDD34();
  swift_bridgeObjectRelease();
LABEL_6:
  v16 = v1[37];
  v17 = (uint64_t *)v1[36];
  objc_msgSend(v6, sel_setHomeId_, v15);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D00370;
  *(_QWORD *)(inited + 32) = v6;
  sub_1C2CFDFC8();
  v19 = v6;
  RefreshableDeviceState.isTextToSpeechEnabled.getter((uint64_t)v19);
  v20 = OUTLINED_FUNCTION_240();
  v23 = OUTLINED_FUNCTION_71_23(v16, v21, v22, v20);
  *(_OWORD *)(v1 + 31) = 0u;
  v1[35] = 0;
  *(_OWORD *)(v1 + 33) = 0u;
  v17[3] = v23;
  v17[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_0(v17);
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  swift_release();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_122(v24, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_125_1(v25, &qword_1ED7A7A10);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_55();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v28, v27);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 11));
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1C2B27868()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B278BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1C2B26D44((uint64_t)sub_1C2B2A4AC, v7);
  return swift_release();
}

uint64_t sub_1C2B2798C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a4 + 8))(sub_1C2B2A4AC, v12, a3, a4);
  return swift_release();
}

uint64_t sub_1C2B27A84()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PersonalDomainCheckFlowStrategyAsync.makeUnsupportedAuthenticationSettingResponse()();
}

uint64_t sub_1C2B27AD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B27360(a1);
}

uint64_t PersonalDomainCheckFlowStrategyAsync.makeUnsupportedAuthenticationSettingResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2B27360(v2);
}

uint64_t sub_1C2B27B68()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28E1BA0;
  return PersonalDomainCheckFlowStrategyAsync.makePersonalDomainsDisabledResponse()();
}

uint64_t sub_1C2B27BB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B27C4C(a1);
}

uint64_t PersonalDomainCheckFlowStrategyAsync.makePersonalDomainsDisabledResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2B27C4C(v2);
}

uint64_t sub_1C2B27C4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[43] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v1[44] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798F00);
  v1[47] = swift_task_alloc();
  v2 = sub_1C2CFBCAC();
  v1[48] = v2;
  v1[49] = *(_QWORD *)(v2 - 8);
  v1[50] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2B27D28()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, _QWORD);

  if (qword_1EF786CE8 != -1)
    swift_once();
  v0[51] = qword_1EF7CBEC8;
  OUTLINED_FUNCTION_221();
  v1 = sub_1C2CFDC8C();
  v0[52] = v1;
  v2 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  v0[53] = v2;
  v3 = OUTLINED_FUNCTION_328(v2);
  return v5(v3, 105, v1, 0);
}

uint64_t sub_1C2B27DF4()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v1);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B27E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t inited;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v25;
  uint64_t v26;

  v25 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 64);
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 392);
  v1 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  v5 = qword_1ED7A4228;
  sub_1C28C72CC(v0 + 208);
  OUTLINED_FUNCTION_48_17();
  *(_QWORD *)(v0 + 272) = OUTLINED_FUNCTION_72_22();
  *(_QWORD *)(v0 + 280) = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)(v0 + 248) = v5;
  sub_1C2CFCF84();
  OUTLINED_FUNCTION_38_0();
  sub_1C2CFCF78();
  sub_1C2CFCF24();
  OUTLINED_FUNCTION_36_0();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D88330]), sel_init);
  sub_1C2CFBCA0();
  v7 = sub_1C2CFBC70();
  v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  sub_1C29BB800(v7, v9, v6);

  sub_1C2CFD590();
  v10 = sub_1C2CFD398();
  v11 = OUTLINED_FUNCTION_70_18(v3);
  v12 = *(_QWORD *)(v0 + 376);
  if ((_DWORD)v11 == 1)
  {
    OUTLINED_FUNCTION_60_0(v11, &qword_1EF798F00);
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  sub_1C2CFD38C();
  v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v12, v10);
  if (!v14)
    goto LABEL_7;
  v15 = (void *)sub_1C2CFDD34();
  swift_bridgeObjectRelease();
LABEL_8:
  v16 = *(_QWORD *)(v0 + 352);
  v17 = *(uint64_t **)(v0 + 344);
  objc_msgSend(v6, sel_setHomeId_, v15);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D00370;
  *(_QWORD *)(inited + 32) = v6;
  sub_1C2CFDFC8();
  v19 = v6;
  RefreshableDeviceState.isTextToSpeechEnabled.getter((uint64_t)v19);
  v20 = OUTLINED_FUNCTION_240();
  v23 = OUTLINED_FUNCTION_71_23(v16, v21, v22, v20);
  *(_OWORD *)(v0 + 104) = 0u;
  *(_QWORD *)(v0 + 120) = 0;
  *(_OWORD *)(v0 + 88) = 0u;
  v17[3] = v23;
  v17[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_0(v17);
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  swift_release();
  swift_bridgeObjectRelease();

  sub_1C28B9D6C(v0 + 88, (uint64_t *)&unk_1ED7A8750);
  sub_1C28B9D6C(v16, &qword_1ED7A7A10);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_55();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v26, v25);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 248);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_14_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2B281F4()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32[7];
  uint64_t v33;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 360);
  v1 = *(NSObject **)(v0 + 368);
  v3 = OUTLINED_FUNCTION_118();
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED7AA1B0);
  v5 = *(_QWORD *)(v3 - 8);
  (*(void (**)(NSObject *, uint64_t, uint64_t))(v5 + 16))(v1, v4, v3);
  OUTLINED_FUNCTION_22_19((uint64_t)v1);
  sub_1C28BA870((uint64_t)v1, v2, &qword_1ED7A9EC0);
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
  {
    sub_1C28B9D6C(*(_QWORD *)(v0 + 360), &qword_1ED7A9EC0);
  }
  else
  {
    OUTLINED_FUNCTION_104();
    v6 = OUTLINED_FUNCTION_123();
    if (OUTLINED_FUNCTION_126_0(v6))
    {
      v7 = OUTLINED_FUNCTION_6_0();
      v32[0] = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v7 = 136315650;
      v8 = OUTLINED_FUNCTION_39_30();
      *(_QWORD *)(v0 + 328) = sub_1C28BB120(v8, v9, v32);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_55();
      *(_WORD *)(v7 + 12) = 2048;
      *(_QWORD *)(v0 + 320) = 125;
      sub_1C2CFE4D8();
      *(_WORD *)(v7 + 22) = 2080;
      *(_QWORD *)(v0 + 336) = sub_1C28BB120(0xD000000000000034, 0x80000001C2D2F060, v32);
      sub_1C2CFE4D8();
      _os_log_impl(&dword_1C28B6000, v1, (os_log_type_t)v2, "FatalError at %s:%lu - %s", (uint8_t *)v7, 0x20u);
      OUTLINED_FUNCTION_49_1();
      OUTLINED_FUNCTION_11_0();
    }

    (*(void (**)(_QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v0 + 360), v3);
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  *(_OWORD *)(v0 + 128) = 0u;
  v10 = v0 + 128;
  *(_OWORD *)(v10 + 160) = 0u;
  *(_OWORD *)(v10 + 176) = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_QWORD *)(v10 + 32) = 0;
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_63_17();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_14_68();
  sub_1C2AFA880(v11, v12, v13, v14, v15, v16, v17, v10 + 160, v21, v22, v10, v23, v24, v25, v26, 0xD000000000000034, v2, v27, v28,
    v29,
    v30,
    v31,
    v32[0],
    v32[1],
    v32[2],
    v32[3],
    v32[4],
    v32[5],
    v32[6],
    v33);
  OUTLINED_FUNCTION_122(v18, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_125_1(v19, &qword_1ED7A8480);
  OUTLINED_FUNCTION_36_0();
  return OUTLINED_FUNCTION_43_28();
}

uint64_t sub_1C2B28500(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF798EC0 + dword_1EF798EC0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return v5(a1);
}

uint64_t sub_1C2B28564(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF798ED0 + dword_1EF798ED0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return v5(a1);
}

uint64_t sub_1C2B285C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF798EC8 + dword_1EF798EC8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return v5(a1);
}

BOOL sub_1C2B2862C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 16) & 1) == 0;
}

uint64_t sub_1C2B2863C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78C6A0);
  swift_getKeyPath();
  swift_getKeyPath();
  OUTLINED_FUNCTION_221();
  sub_1C2CFCFC0();
  OUTLINED_FUNCTION_147();
  swift_release();
  return swift_release();
}

uint64_t PersonalDomainCheckFlow.init(strategy:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v2 = v1;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78C6A0);
  swift_allocObject();
  *(_QWORD *)(v1 + 144) = sub_1C2CFCFCC();
  sub_1C28B9A48(a1, (uint64_t)&v9);
  v4 = type metadata accessor for PersonalDomainCheckFlowStrategyAsyncAdapter();
  v5 = OUTLINED_FUNCTION_5_2();
  sub_1C28B99EC(&v9, v5 + 16);
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 56) = &off_1E7C8EF30;
  *(_QWORD *)(v2 + 24) = v5;
  v6 = sub_1C2B0C6E8();
  *(_QWORD *)(v2 + 128) = &type metadata for OutputPublishers;
  *(_QWORD *)(v2 + 136) = &off_1E7C8D920;
  *(_QWORD *)(v2 + 104) = v6;
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)&v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  v7 = qword_1ED7A4228;
  v10 = type metadata accessor for RefreshableDeviceState();
  v11 = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)&v9 = v7;
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_48_17();
  sub_1C28B99EC(&v9, v2 + 64);
  *(_BYTE *)(v2 + 16) = 0;
  return v2;
}

void PersonalDomainCheckFlow.init(strategy:)(uint64_t a1)
{
  sub_1C2B28824(a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B2A054);
}

void sub_1C2B28824(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = __swift_mutable_project_boxed_opaque_existential_1(a1, v4);
  MEMORY[0x1E0C80A78](v6, v6);
  OUTLINED_FUNCTION_10();
  v9 = v8 - v7;
  (*(void (**)(uint64_t))(v10 + 16))(v8 - v7);
  a2(v9, v2, v4, v5);
  OUTLINED_FUNCTION_48_17();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B288B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for IdentifiedUser(0);
  v2[5] = OUTLINED_FUNCTION_7();
  v3 = sub_1C2CFD380();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = OUTLINED_FUNCTION_7();
  v2[9] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798C10);
  v2[10] = OUTLINED_FUNCTION_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8AC8);
  v2[11] = OUTLINED_FUNCTION_78();
  v2[12] = OUTLINED_FUNCTION_78();
  v2[13] = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B28964()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(uint64_t, uint64_t);
  _QWORD *v39;
  uint64_t v41;
  os_log_type_t v42;
  _WORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  _WORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = v1 + 8;
  v3 = v1[11];
  v4 = v1[12];
  v5 = __swift_project_boxed_opaque_existential_1(v1 + 8, v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) == 0)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v15 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_104();
    v16 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v16))
    {
      v17 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v17);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v18, v19, "Device is not a HomePod. Personal domains check is not applicable, so flow will exit and continue");
      OUTLINED_FUNCTION_11_0();
    }
    v20 = 1;
    goto LABEL_27;
  }
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v53 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  v11 = v1[11];
  v12 = v1[12];
  __swift_project_boxed_opaque_existential_1(v2, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 184))(v11, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v7, *(unsigned int *)off_1E7C6BFF0, v9);
  __swift_storeEnumTagSinglePayload(v7, 0, 1, v9);
  v13 = v8 + *(int *)(v53 + 48);
  sub_1C28BA870(v6, v8, &qword_1ED7A8AC8);
  sub_1C28BA870(v7, v13, &qword_1ED7A8AC8);
  if (__swift_getEnumTagSinglePayload(v8, 1, v9) == 1)
  {
    v14 = *(_QWORD *)(v0 + 104);
    sub_1C28B9D6C(*(_QWORD *)(v0 + 96), &qword_1ED7A8AC8);
    sub_1C28B9D6C(v14, &qword_1ED7A8AC8);
    if (OUTLINED_FUNCTION_365(v13) == 1)
    {
      sub_1C28B9D6C(*(_QWORD *)(v0 + 80), &qword_1ED7A8AC8);
LABEL_21:
      v39 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v39;
      *v39 = v0;
      v39[1] = sub_1C2B28EA4;
      return sub_1C2B28FA4();
    }
    goto LABEL_12;
  }
  sub_1C28BA870(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), &qword_1ED7A8AC8);
  v21 = OUTLINED_FUNCTION_70_18(v13);
  v23 = *(_QWORD *)(v0 + 96);
  v22 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 88);
  if (v21 == 1)
  {
    v25 = *(_QWORD *)(v0 + 48);
    v26 = *(_QWORD *)(v0 + 56);
    sub_1C28B9D6C(*(_QWORD *)(v0 + 96), &qword_1ED7A8AC8);
    sub_1C28B9D6C(v22, &qword_1ED7A8AC8);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
LABEL_12:
    sub_1C28B9D6C(*(_QWORD *)(v0 + 80), &qword_1EF798C10);
    goto LABEL_13;
  }
  v33 = *(_QWORD *)(v0 + 80);
  v35 = *(_QWORD *)(v0 + 56);
  v34 = *(_QWORD *)(v0 + 64);
  v36 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v34, v13, v36);
  sub_1C28C3364(&qword_1EF798C28, 255, (uint64_t (*)(uint64_t))off_1E7C6BFF8, (uint64_t)off_1E7C6C008);
  v37 = sub_1C2CFDD28();
  v38 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v38(v34, v36);
  OUTLINED_FUNCTION_73_20(v23);
  OUTLINED_FUNCTION_73_20(v22);
  v38(v24, v36);
  OUTLINED_FUNCTION_73_20(v33);
  if ((v37 & 1) != 0)
    goto LABEL_21;
LABEL_13:
  v27 = *(_QWORD *)(v0 + 32);
  v28 = *(_QWORD *)(v0 + 40);
  sub_1C2B2863C();
  v5 = *(NSObject **)(v28 + *(int *)(v27 + 40));
  *(_QWORD *)(v0 + 120) = v5;
  v29 = v5;
  sub_1C29D6ABC(v28);
  if (!v5)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v41 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v41, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_104();
    v42 = OUTLINED_FUNCTION_123();
    if (OUTLINED_FUNCTION_20_0(v42))
    {
      v43 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v43);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v44, v45, "No shared user info found in environment. For backwards compatibility, assuming the server has already vetted this request.");
      OUTLINED_FUNCTION_11_0();
    }
    goto LABEL_26;
  }
  if (-[NSObject personalRequestsEnabled](v29, sel_personalRequestsEnabled))
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v30 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED7AA1B0);
    OUTLINED_FUNCTION_104();
    v31 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_126_0(v31))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_50_24(&dword_1C28B6000, v5, v32, "Personal requests are enabled for current user");
      OUTLINED_FUNCTION_11_0();
    }

LABEL_26:
    v20 = 3;
LABEL_27:

    v46 = *(_QWORD *)(v0 + 24);
    static ExecuteResponse.complete()();
    *(_BYTE *)(v46 + 16) = v20;
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_14_0();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_63_0();
    return OUTLINED_FUNCTION_19_12(*(uint64_t (**)(void))(v0 + 8));
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v47 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v47, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_104();
  v48 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_20_0(v48))
  {
    v49 = (_WORD *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_91(v49);
    OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v50, v51, "Personal requests are disabled for current user");
    OUTLINED_FUNCTION_11_0();
  }

  v52 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v52;
  *v52 = v0;
  v52[1] = sub_1C2B28F20;
  return sub_1C2B29330();
}

uint64_t sub_1C2B28EA4()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B28ED8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_33_35();
  *(_BYTE *)(v1 + 16) = 2;
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  return OUTLINED_FUNCTION_94(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B28F20()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B28F54()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_176();

  OUTLINED_FUNCTION_33_35();
  *(_BYTE *)(v1 + 16) = 4;
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  return OUTLINED_FUNCTION_94(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B28FA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B28FB4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _WORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_118();
  v2 = (void *)__swift_project_value_buffer(v1, (uint64_t)qword_1ED7AA1B0);
  v0[13] = (uint64_t)v2;
  v3 = sub_1C2CFD86C();
  v4 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v3, v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
    OUTLINED_FUNCTION_50_24(&dword_1C28B6000, v3, v5, "Device is a homepod and authentication mode is for secured requests. This setting is no longer supported, so this flow will exit with validation failure and a notification will be issued to the personal device.");
    OUTLINED_FUNCTION_11_0();
  }

  sub_1C2CFD86C();
  v6 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_20_0(v6))
  {
    v7 = (_WORD *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_91(v7);
    OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v8, v9, "Attempting to publish personal domain restricted setting (user has deprecated secureRequests toggled) response");
    OUTLINED_FUNCTION_11_0();
  }
  v10 = (_QWORD *)v0[12];

  v11 = v10 + 13;
  v12 = v10[16];
  v13 = v10[17];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v14 = (_QWORD *)swift_task_alloc();
  v0[14] = (uint64_t)v14;
  *v14 = v0;
  v14[1] = sub_1C2B29100;
  return OUTLINED_FUNCTION_30_4((uint64_t)(v0 + 2), (uint64_t)&unk_1EF798EE0, v0[12], v12, v13);
}

uint64_t sub_1C2B29100()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B29154()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = *(void **)(v0 + 120);
  v2 = v1;
  v3 = v1;
  v4 = sub_1C2CFD86C();
  v5 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v10 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v7 = sub_1C2CFEA78();
    *(_QWORD *)(v0 + 88) = sub_1C28BB120(v7, v8, &v10);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_0_2();
    _os_log_impl(&dword_1C28B6000, v4, v5, "Unable to make response for unsupported personal domain authentication mode. Will ignore and Flow should exit. %s", v6, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_291();

  return OUTLINED_FUNCTION_19_12(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B292BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B292D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 24) + 24), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 48));
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1C28CEFEC;
  OUTLINED_FUNCTION_64_15();
  return OUTLINED_FUNCTION_1_64(v2, v3, v4, v5);
}

uint64_t sub_1C2B29330()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B29340()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD **)(v0 + 56);
  v2 = v1[16];
  v3 = v1[17];
  __swift_project_boxed_opaque_existential_1(v1 + 13, v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_1C2B293BC;
  return OUTLINED_FUNCTION_30_4(v0 + 16, (uint64_t)&unk_1EF798EF0, *(_QWORD *)(v0 + 56), v2, v3);
}

uint64_t sub_1C2B293BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  if (v0)
    OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B29404()
{
  uint64_t v0;

  sub_1C28B9D6C(v0 + 16, &qword_1EF7872A0);
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B29434()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  sub_1C28B9D6C(v0 + 16, &qword_1EF7872A0);
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B29474(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[32] = a1;
  v2[33] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2B294E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 264) + 24), *(_QWORD *)(*(_QWORD *)(v0 + 264) + 48));
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  *(_QWORD *)(v0 + 288) = v1;
  *v1 = v0;
  v1[1] = sub_1C2B2953C;
  OUTLINED_FUNCTION_64_15();
  return OUTLINED_FUNCTION_1_64(v2, v3, v4, v5);
}

uint64_t sub_1C2B2953C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v0 + 296) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_38();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1C2B2959C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  if (v0)
    OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B295E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[9];
  uint64_t v32;

  *(_OWORD *)(v0 + 56) = 0u;
  v1 = v0 + 56;
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(NSObject **)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 280);
  *(_OWORD *)(v0 + 72) = 0u;
  *(_QWORD *)(v0 + 88) = 0;
  sub_1C28B9D6C(v0 + 56, &qword_1EF7872A0);
  v6 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, NSObject *, uint64_t))(v6 + 16))(v4, v3, v2);
  OUTLINED_FUNCTION_22_19(v4);
  sub_1C28BA870(v4, v5, &qword_1ED7A9EC0);
  if (__swift_getEnumTagSinglePayload(v5, 1, v2) == 1)
  {
    sub_1C28B9D6C(*(_QWORD *)(v0 + 272), &qword_1ED7A9EC0);
  }
  else
  {
    OUTLINED_FUNCTION_104();
    v7 = OUTLINED_FUNCTION_123();
    if (OUTLINED_FUNCTION_20_0(v7))
    {
      v8 = OUTLINED_FUNCTION_6_0();
      v31[0] = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v8 = 136315650;
      v9 = OUTLINED_FUNCTION_39_30();
      *(_QWORD *)(v0 + 224) = sub_1C28BB120(v9, v10, v31);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2048;
      *(_QWORD *)(v0 + 208) = 297;
      sub_1C2CFE4D8();
      *(_WORD *)(v8 + 22) = 2080;
      *(_QWORD *)(v0 + 216) = sub_1C28BB120(0xD00000000000002ELL, 0x80000001C2D34C50, v31);
      sub_1C2CFE4D8();
      _os_log_impl(&dword_1C28B6000, v3, (os_log_type_t)v2, "FatalError at %s:%lu - %s", (uint8_t *)v8, 0x20u);
      OUTLINED_FUNCTION_49_1();
      OUTLINED_FUNCTION_11_0();
    }

    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 312));
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  v11 = v0 + 176;
  *(_OWORD *)(v11 - 64) = 0u;
  *(_QWORD *)(v11 - 48) = 0;
  *(_OWORD *)(v11 - 80) = 0u;
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_63_17();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_14_68();
  sub_1C2AFA880(v12, v13, v14, v15, v16, v17, v18, v11, v22, v23, v11 - 80, v24, v25, v26, v27, 0xD00000000000002ELL, v1, v28, v29,
    v30,
    v31[0],
    (void *)v31[1],
    v31[2],
    v31[3],
    v31[4],
    v31[5],
    v31[6],
    v31[7],
    v31[8],
    v32);
  OUTLINED_FUNCTION_125_1(v19, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_122(v20, &qword_1ED7A8480);
  OUTLINED_FUNCTION_36_0();
  return OUTLINED_FUNCTION_43_28();
}

uint64_t sub_1C2B298D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 256);

  sub_1C28B99EC((__int128 *)(v0 + 56), v0 + 16);
  sub_1C28B99EC((__int128 *)(v0 + 16), v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_38();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2B29944()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = (void *)v0[37];
  v2 = v0[33];
  v3 = OUTLINED_FUNCTION_118();
  v0[39] = v3;
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED7AA1B0);
  v0[40] = v4;
  v5 = v1;
  OUTLINED_FUNCTION_221();
  v6 = v1;
  OUTLINED_FUNCTION_221();
  v7 = v4;
  sub_1C2CFD86C();
  v8 = OUTLINED_FUNCTION_123();
  v9 = OUTLINED_FUNCTION_20_0(v8);
  v10 = (void *)v0[37];
  v11 = v0[33];
  if (v9)
  {
    v12 = OUTLINED_FUNCTION_6_0();
    v21 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v12 = 136315394;
    sub_1C28B9A48(v11 + 24, (uint64_t)(v0 + 17));
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798EF8);
    v13 = sub_1C2CFDDAC();
    v0[29] = sub_1C28BB120(v13, v14, &v21);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_14_2();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v0[30] = v10;
    v15 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    v16 = sub_1C2CFDDAC();
    v0[31] = sub_1C28BB120(v16, v17, &v21);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_0_2();
    _os_log_impl(&dword_1C28B6000, v7, (os_log_type_t)v2, "Error calling makePersonalDomainsDisabledResponse from %s: %s", (uint8_t *)v12, 0x16u);
    OUTLINED_FUNCTION_49_1();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_0_2();

  v18 = (_QWORD *)swift_task_alloc();
  v0[38] = v18;
  v19 = OUTLINED_FUNCTION_328(v18);
  return sub_1C2A18AF4(v19);
}

uint64_t PersonalDomainCheckFlow.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();
  return v0;
}

uint64_t PersonalDomainCheckFlow.__deallocating_deinit()
{
  PersonalDomainCheckFlow.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B29BD8()
{
  return sub_1C2B288B0();
}

uint64_t sub_1C2B29BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_86(v3);
  *v4 = v1;
  v4[1] = sub_1C28BCB84;
  return sub_1C2B288B4(a1);
}

void sub_1C2B29C48(BOOL *a1@<X8>)
{
  *a1 = sub_1C2B2862C();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B29C6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1C2B29C84()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  *v1 = v0;
  v1[1] = sub_1C2B29D0C;
  return sub_1C2CFEA24();
}

uint64_t sub_1C2B29D0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B29D64(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4, v7);
  v8 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 2;
  v11 = a2[5];
  v10 = a2[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v8, v4);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1C2B2A4AC, v13, v11, v10);
  return swift_release();
}

uint64_t sub_1C2B29E64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B29C6C(a1);
}

uint64_t sub_1C2B29EB8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PersonalDomainCheckFlowStrategyAsync.makePersonalDomainsDisabledResponse()();
}

void sub_1C2B29F08(_QWORD *a1@<X8>)
{
  sub_1C28F7ED0(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B29F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_10();
  v10 = v9 - v8;
  type metadata accessor for PersonalDomainCheckFlow();
  v11 = OUTLINED_FUNCTION_5_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, a1, a3);
  sub_1C2B2A054(v10, v11, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B29FC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B29FEC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B2798C(a1, v1[4], v1[2], v1[3]);
}

void sub_1C2B29FF8()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_75_21();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B2A018(_QWORD *a1@<X8>)
{
  sub_1C28F7ED0(a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for PersonalDomainCheckFlowStrategyAsyncAdapter()
{
  return objc_opt_self();
}

uint64_t sub_1C2B2A054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14[5];

  v14[3] = a3;
  v14[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78C6A0);
  swift_allocObject();
  *(_QWORD *)(a2 + 144) = sub_1C2CFCFCC();
  sub_1C28B9A48((uint64_t)v14, a2 + 24);
  v8 = sub_1C2B0C6E8();
  *(_QWORD *)(a2 + 128) = &type metadata for OutputPublishers;
  *(_QWORD *)(a2 + 136) = &off_1E7C8D920;
  *(_QWORD *)(a2 + 104) = v8;
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)&v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  v9 = qword_1ED7A4228;
  v12 = type metadata accessor for RefreshableDeviceState();
  v13 = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)&v11 = v9;
  sub_1C2CFD350();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C28B99EC(&v11, a2 + 64);
  *(_BYTE *)(a2 + 16) = 0;
  return a2;
}

void sub_1C2B2A18C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1C28C3364(&qword_1EF798C30, a2, (uint64_t (*)(uint64_t))type metadata accessor for PersonalDomainCheckFlow, (uint64_t)&protocol conformance descriptor for PersonalDomainCheckFlow);
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t type metadata accessor for PersonalDomainCheckFlow()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PersonalDomainCheckFlowStrategyAsync.makeUnsupportedAuthenticationSettingResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PersonalDomainCheckFlowStrategyAsync.makePersonalDomainsDisabledResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t method lookup function for PersonalDomainCheckFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.exitValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))() & 1;
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.__allocating_init(strategy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.execute()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = OUTLINED_FUNCTION_12_0();
  v4 = (_QWORD *)OUTLINED_FUNCTION_86(v3);
  *v4 = v1;
  v4[1] = sub_1C28E1BA0;
  return v6(a1);
}

uint64_t storeEnumTagSinglePayload for PersonalDomainCheckFlow.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C2B2A3C4 + 4 * byte_1C2D14BE5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C2B2A3F8 + 4 * byte_1C2D14BE0[v4]))();
}

uint64_t sub_1C2B2A3F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B2A400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2B2A408);
  return result;
}

uint64_t sub_1C2B2A414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2B2A41CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C2B2A420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B2A428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalDomainCheckFlow.State()
{
  return &type metadata for PersonalDomainCheckFlow.State;
}

ValueMetadata *type metadata accessor for DefaultPersonalDomainCheckFlowStrategy()
{
  return &type metadata for DefaultPersonalDomainCheckFlowStrategy;
}

ValueMetadata *type metadata accessor for DefaultPersonalDomainCheckFlowStrategySync()
{
  return &type metadata for DefaultPersonalDomainCheckFlowStrategySync;
}

unint64_t sub_1C2B2A468()
{
  unint64_t result;

  result = qword_1EF798E90;
  if (!qword_1EF798E90)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D14E0C, &type metadata for PersonalDomainCheckFlow.State);
    atomic_store(result, (unint64_t *)&qword_1EF798E90);
  }
  return result;
}

uint64_t sub_1C2B2A4B4(uint64_t a1)
{
  _QWORD *v1;

  return sub_1C2B29D64(a1, v1);
}

uint64_t sub_1C2B2A4C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B292BC(v2, v3);
}

uint64_t sub_1C2B2A504()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B29474(v2, v3);
}

void sub_1C2B2A548()
{
  sub_1C2B2863C();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B2A568(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  sub_1C298A598(a1);
  OUTLINED_FUNCTION_1_0();
}

void OUTLINED_FUNCTION_33_35()
{
  static ExecuteResponse.complete()();
}

void OUTLINED_FUNCTION_50_24(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

uint64_t OUTLINED_FUNCTION_71_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return type metadata accessor for AceOutput();
}

void OUTLINED_FUNCTION_73_20(uint64_t a1)
{
  uint64_t *v1;

  sub_1C28B9D6C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_75_21()
{
  return SiriEnvironment.userIdentity.getter();
}

uint64_t dispatch thunk of PlanModifier.body(modifying:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t PlatformErrorFlow.__allocating_init(outputPublisher:deviceState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;
  __int128 v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;

  sub_1C28BA8B0(a1, (uint64_t)&v9, &qword_1EF7934C8);
  if (v10)
  {
    sub_1C28B99EC(&v9, (uint64_t)&v12);
  }
  else
  {
    v4 = sub_1C2B0C6E8();
    v13 = &type metadata for OutputPublishers;
    v14 = &off_1E7C8D920;
    *(_QWORD *)&v12 = v4;
    sub_1C28BA958((uint64_t)&v9, &qword_1EF7934C8);
  }
  sub_1C28BA8B0(a2, (uint64_t)&v7, &qword_1ED7A8760);
  if (v8)
  {
    sub_1C28BA958(a2, &qword_1ED7A8760);
    sub_1C28BA958(a1, &qword_1EF7934C8);
    sub_1C28B99EC(&v7, (uint64_t)&v9);
  }
  else
  {
    if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
      swift_once();
    sub_1C28C72CC((uint64_t)&v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
    v5 = qword_1ED7A4228;
    v10 = type metadata accessor for RefreshableDeviceState();
    v11 = &protocol witness table for RefreshableDeviceState;
    *(_QWORD *)&v9 = v5;
    sub_1C2CFD350();
    sub_1C28BA958(a2, &qword_1ED7A8760);
    sub_1C28BA958(a1, &qword_1EF7934C8);
    sub_1C28BA958((uint64_t)&v7, &qword_1ED7A8760);
  }
  type metadata accessor for PlatformErrorFlow();
  swift_allocObject();
  return sub_1C2B2A80C(&v12, &v9);
}

uint64_t type metadata accessor for PlatformErrorFlow()
{
  return objc_opt_self();
}

uint64_t sub_1C2B2A80C(__int128 *a1, __int128 *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = 3;
  sub_1C28B99EC(a1, v2 + 24);
  sub_1C28B99EC(a2, v2 + 64);
  return v2;
}

BOOL sub_1C2B2A848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  unsigned __int8 v9;

  v3 = type metadata accessor for Input(0);
  static SiriKitPlatformErrorCase.fromParse(_:)(a1 + *(int *)(v3 + 20), (char *)&v9);
  v4 = v9;
  if (v9 == 3)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED7AA1B0);
    v6 = sub_1C2CFD86C();
    v7 = sub_1C2CFE298();
    if (os_log_type_enabled(v6, v7))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_87(&dword_1C28B6000, v6, v7, "PlatformErrorFlow: Unknown input, returning false");
      OUTLINED_FUNCTION_11_0();
    }

  }
  else
  {
    *(_BYTE *)(v1 + 16) = v9;
  }
  return v4 != 3;
}

uint64_t sub_1C2B2A940(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[39] = a1;
  v2[40] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v2[43] = OUTLINED_FUNCTION_1_3();
  v2[44] = type metadata accessor for AceOutput();
  v2[45] = OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36_2();
  return swift_task_switch();
}

uint64_t sub_1C2B2A9D0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t, uint64_t);

  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 320) + 16);
  if (v1 == 3)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v2 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED7AA1B0);
    v3 = sub_1C2CFD86C();
    v4 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v3, v4))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_87(&dword_1C28B6000, v3, v4, "PlatformErrorFlow: execute() called with no error case. Was on(input:) called?");
      OUTLINED_FUNCTION_11_0();
    }

    static ExecuteResponse.complete()();
    OUTLINED_FUNCTION_3_74();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_1EF786CE8 != -1)
      swift_once();
    v6 = qword_1EF7CBEC8;
    v7 = type metadata accessor for CATTemplateExecutor();
    *(_QWORD *)(v0 + 112) = v7;
    *(_QWORD *)(v0 + 120) = &off_1E7C77EF8;
    *(_QWORD *)(v0 + 88) = v6;
    sub_1C2CFD350();
    v8 = (_QWORD *)(v0 + 88);
    if (v1)
    {
      __swift_project_boxed_opaque_existential_1(v8, v7);
      v9 = (_QWORD *)OUTLINED_FUNCTION_9_6();
      if (v1 == 1)
      {
        *(_QWORD *)(v0 + 376) = v9;
        v10 = OUTLINED_FUNCTION_10_70(v9);
        v11 = 96;
      }
      else
      {
        *(_QWORD *)(v0 + 384) = v9;
        v10 = OUTLINED_FUNCTION_10_70(v9);
        v11 = 104;
      }
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v8, v7);
      v12 = (_QWORD *)OUTLINED_FUNCTION_9_6();
      *(_QWORD *)(v0 + 368) = v12;
      v10 = OUTLINED_FUNCTION_10_70(v12);
      v11 = 99;
    }
    return v13(v10, v11);
  }
}

uint64_t sub_1C2B2ABE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v2);
  if (v1)
    *(_QWORD *)(v0 + 400) = v1;
  else
    OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B2AC2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v2);
  if (v1)
    *(_QWORD *)(v0 + 400) = v1;
  else
    OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B2AC78()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v2);
  if (v1)
    *(_QWORD *)(v0 + 400) = v1;
  else
    OUTLINED_FUNCTION_16_47();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B2ACC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v10;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 360);
  v12 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD **)(v0 + 320);
  v14 = *(_OWORD *)(v0 + 64);
  v4 = v3[11];
  v5 = v3[12];
  __swift_project_boxed_opaque_existential_1(v3 + 8, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 96))(v4, v5);
  v6 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v6);
  *(_QWORD *)(v0 + 160) = 0;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  sub_1C28BA958(v0 + 128, (uint64_t *)&unk_1ED7A8750);
  sub_1C28BA958(v2, &qword_1ED7A7A10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v14, *((unint64_t *)&v14 + 1));
  swift_bridgeObjectRelease();
  v7 = v3[6];
  v8 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v7);
  *(_QWORD *)(v0 + 232) = v12;
  *(_QWORD *)(v0 + 240) = &protocol witness table for AceOutput;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 208));
  sub_1C299A0F4(v1, (uint64_t)boxed_opaque_existential_0);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 8) + *(_QWORD *)(v8 + 8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v10;
  *v10 = v0;
  v10[1] = sub_1C2B2AEB4;
  return v13(v0 + 208, v7, v8);
}

uint64_t sub_1C2B2AEB4()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_82_0(v2);
  if (v1)

  else
    __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B2AF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 400);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  v23 = 0xD00000000000001CLL;
  v24 = 0x80000001C2D31B50;
  *(_QWORD *)(v0 + 296) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  sub_1C2CFDDAC();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  v2 = v23;
  v3 = v24;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v5 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 336);
  v6 = OUTLINED_FUNCTION_118();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED7AA1B0);
  v8 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, v7, v6);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v6);
  sub_1C28BA8B0(v4, v5, &qword_1ED7A9EC0);
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    sub_1C28BA958(*(_QWORD *)(v0 + 328), &qword_1ED7A9EC0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v9 = sub_1C2CFD86C();
    v10 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = OUTLINED_FUNCTION_6_0();
      v23 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v11 = 136315650;
      v12 = sub_1C2CFE694();
      *(_QWORD *)(v0 + 304) = sub_1C28BB120(v12, v13, &v23);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2048;
      *(_QWORD *)(v0 + 280) = 53;
      sub_1C2CFE4D8();
      *(_WORD *)(v11 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 288) = sub_1C28BB120(v2, v3, &v23);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C28B6000, v9, v10, "FatalError at %s:%lu - %s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    swift_bridgeObjectRelease_n();
    (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v0 + 328), v6);
  }
  if (qword_1ED7A84D8 != -1)
    swift_once();
  *(_OWORD *)(v0 + 248) = 0u;
  v14 = v0 + 248;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 - 64) = 0u;
  *(_QWORD *)(v14 - 48) = 0;
  *(_OWORD *)(v14 - 80) = 0u;
  swift_bridgeObjectRetain();
  v15 = sub_1C2CFD350();
  LOBYTE(v17) = 44;
  sub_1C2AFA880(v15, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, v14, 0, 0, v14 - 80, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, v2, v3, v17, v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29);
  swift_bridgeObjectRelease();
  sub_1C28BA958(v14 - 80, (uint64_t *)&unk_1ED7A8750);
  sub_1C28BA958(v14, &qword_1ED7A8480);
  swift_release();
  return sub_1C2CFE7FC();
}

uint64_t sub_1C2B2B338()
{
  uint64_t v0;

  sub_1C28E0610(*(_QWORD *)(v0 + 360));
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_3_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B2B37C()
{
  uint64_t v0;

  sub_1C28E0610(*(_QWORD *)(v0 + 360));
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_3_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PlatformErrorFlow.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return v0;
}

uint64_t PlatformErrorFlow.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

BOOL sub_1C2B2B41C(uint64_t a1)
{
  return sub_1C2B2A848(a1);
}

uint64_t sub_1C2B2B440()
{
  return sub_1C2B2A93C();
}

uint64_t sub_1C2B2B460(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28D0348;
  return sub_1C2B2A940(a1);
}

unint64_t sub_1C2B2B4B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2B2B4D8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2B2B4D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF798F10;
  if (!qword_1EF798F10)
  {
    v1 = type metadata accessor for PlatformErrorFlow();
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for PlatformErrorFlow, v1);
    atomic_store(result, (unint64_t *)&qword_1EF798F10);
  }
  return result;
}

uint64_t method lookup function for PlatformErrorFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlatformErrorFlow.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PlatformErrorFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of PlatformErrorFlow.execute()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 152) + *(_QWORD *)(*(_QWORD *)v1 + 152));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C28C33A0;
  return v6(a1);
}

uint64_t getEnumTagSinglePayload for PlatformErrorFlow.State(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C2B2B5F0 + 4 * asc_1C2D14EE0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for PlatformErrorFlow.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C2B2B698 + 4 * byte_1C2D14EEA[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C2B2B6CC + 4 * byte_1C2D14EE5[v5]))();
}

uint64_t sub_1C2B2B6CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B2B6D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2B2B6DCLL);
  return result;
}

uint64_t sub_1C2B2B6E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2B2B6F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C2B2B6F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B2B6FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B2B708(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_1C2B2B71C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for PlatformErrorFlow.State()
{
  return &type metadata for PlatformErrorFlow.State;
}

uint64_t OUTLINED_FUNCTION_3_74()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_10_70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_16_47()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 + 88);
}

void PluginAction.flowHandlerId.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_0();
}

uint64_t PluginAction.input.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_76() + 20);
  return sub_1C28DD664(v3, a1);
}

uint64_t PluginAction.userData.getter()
{
  OUTLINED_FUNCTION_2_76();
  return swift_bridgeObjectRetain();
}

void PluginAction.speechPackage.getter()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + *(int *)(OUTLINED_FUNCTION_2_76() + 28));
  OUTLINED_FUNCTION_1_0();
}

void PluginAction.utterance.getter()
{
  OUTLINED_FUNCTION_2_76();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_0();
}

void PluginAction.actionParaphrase.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_2_76();
  sub_1C28D3304(v1 + *(int *)(v3 + 36), a1, &qword_1ED7A7E80);
  OUTLINED_FUNCTION_1_0();
}

void PluginAction.loggingId.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_2_76();
  sub_1C28D3304(v1 + *(int *)(v3 + 40), a1, &qword_1ED7A9228);
  OUTLINED_FUNCTION_1_0();
}

void PluginAction.init(flowHandlerId:input:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (int *)OUTLINED_FUNCTION_2_76();
  v9 = (uint64_t)a4 + v8[10];
  v10 = OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_30_0(v9, v11, v12, v10);
  v13 = (uint64_t)a4 + v8[9];
  v14 = OUTLINED_FUNCTION_11_60();
  OUTLINED_FUNCTION_30_0(v13, v15, v16, v14);
  *a4 = a1;
  a4[1] = a2;
  sub_1C2992AB4(a3, (uint64_t)a4 + v8[5]);
  *(_QWORD *)((char *)a4 + v8[6]) = 0;
  *(_QWORD *)((char *)a4 + v8[7]) = 0;
  v17 = (_QWORD *)((char *)a4 + v8[8]);
  *v17 = 0;
  v17[1] = 0;
  OUTLINED_FUNCTION_8_0();
}

void PluginAction.init(flowHandlerId:input:speechPackage:userData:loggingId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  OUTLINED_FUNCTION_26_46();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = (int *)OUTLINED_FUNCTION_2_76();
  v11 = (uint64_t)v9 + v10[9];
  v12 = OUTLINED_FUNCTION_11_60();
  OUTLINED_FUNCTION_30_0(v11, v13, v14, v12);
  *v9 = v7;
  v9[1] = v5;
  sub_1C2992AB4(v3, (uint64_t)v9 + v10[5]);
  *(_QWORD *)((char *)v9 + v10[6]) = v1;
  *(_QWORD *)((char *)v9 + v10[7]) = v2;
  v15 = (_QWORD *)((char *)v9 + v10[8]);
  *v15 = 0;
  v15[1] = 0;
  sub_1C2921AEC(v0, (uint64_t)v9 + v10[10], &qword_1ED7A9228);
  OUTLINED_FUNCTION_1();
}

void PluginAction.init(flowHandlerId:input:loggingId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  OUTLINED_FUNCTION_32_37();
  v5 = v4;
  v6 = (int *)OUTLINED_FUNCTION_2_76();
  v7 = (uint64_t)v5 + v6[10];
  v8 = OUTLINED_FUNCTION_70_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, v0, v8);
  __swift_storeEnumTagSinglePayload(v7, 0, 1, v8);
  v9 = (uint64_t)v5 + v6[9];
  v10 = OUTLINED_FUNCTION_11_60();
  OUTLINED_FUNCTION_30_0(v9, v11, v12, v10);
  *v5 = v3;
  v5[1] = v2;
  sub_1C2992AB4(v1, (uint64_t)v5 + v6[5]);
  *(_QWORD *)((char *)v5 + v6[6]) = 0;
  *(_QWORD *)((char *)v5 + v6[7]) = 0;
  v13 = (_QWORD *)((char *)v5 + v6[8]);
  *v13 = 0;
  v13[1] = 0;
  OUTLINED_FUNCTION_11();
}

void PluginAction.init(flowHandlerId:input:userData:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v10 = (int *)OUTLINED_FUNCTION_2_76();
  v11 = (uint64_t)a5 + v10[10];
  v12 = OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_30_0(v11, v13, v14, v12);
  v15 = (uint64_t)a5 + v10[9];
  v16 = OUTLINED_FUNCTION_11_60();
  OUTLINED_FUNCTION_30_0(v15, v17, v18, v16);
  *a5 = a1;
  a5[1] = a2;
  sub_1C2992AB4(a3, (uint64_t)a5 + v10[5]);
  *(_QWORD *)((char *)a5 + v10[6]) = a4;
  *(_QWORD *)((char *)a5 + v10[7]) = 0;
  v19 = (_QWORD *)((char *)a5 + v10[8]);
  *v19 = 0;
  v19[1] = 0;
  OUTLINED_FUNCTION_11();
}

void PluginAction.init(flowHandlerId:input:speechPackage:utterance:actionParaphrase:userData:loggingId:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v17;
  _QWORD *v18;

  *a9 = a1;
  a9[1] = a2;
  v17 = (int *)OUTLINED_FUNCTION_2_76();
  sub_1C2992AB4(a3, (uint64_t)a9 + v17[5]);
  *(_QWORD *)((char *)a9 + v17[6]) = a8;
  *(_QWORD *)((char *)a9 + v17[7]) = a4;
  v18 = (_QWORD *)((char *)a9 + v17[8]);
  *v18 = a5;
  v18[1] = a6;
  sub_1C2921AEC(a7, (uint64_t)a9 + v17[9], &qword_1ED7A7E80);
  sub_1C2921AEC(a10, (uint64_t)a9 + v17[10], &qword_1ED7A9228);
  OUTLINED_FUNCTION_1();
}

void PluginAction.init(flowHandlerId:input:speechPackage:userData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;
  _QWORD *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  OUTLINED_FUNCTION_32_37();
  v11 = v10;
  v12 = (int *)OUTLINED_FUNCTION_2_76();
  v13 = (uint64_t)v11 + v12[10];
  v14 = OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_30_0(v13, v15, v16, v14);
  v17 = (uint64_t)v11 + v12[9];
  v18 = OUTLINED_FUNCTION_11_60();
  OUTLINED_FUNCTION_30_0(v17, v19, v20, v18);
  *v11 = v8;
  v11[1] = v7;
  sub_1C2992AB4(v6, (uint64_t)v11 + v12[5]);
  *(_QWORD *)((char *)v11 + v12[6]) = a5;
  *(_QWORD *)((char *)v11 + v12[7]) = v5;
  v21 = (_QWORD *)((char *)v11 + v12[8]);
  *v21 = 0;
  v21[1] = 0;
  OUTLINED_FUNCTION_11();
}

void PluginAction.init(flowHandlerId:input:speechPackage:actionParaphrase:loggingId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;

  OUTLINED_FUNCTION_26_46();
  v5 = v4;
  *v4 = v6;
  v4[1] = v7;
  v8 = (int *)OUTLINED_FUNCTION_2_76();
  sub_1C2992AB4(v3, (uint64_t)v5 + v8[5]);
  v9 = (_QWORD *)((char *)v5 + v8[8]);
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)((char *)v5 + v8[7]) = v2;
  sub_1C2921AEC(v1, (uint64_t)v5 + v8[9], &qword_1ED7A7E80);
  sub_1C2921AEC(v0, (uint64_t)v5 + v8[10], &qword_1ED7A9228);
  *(_QWORD *)((char *)v5 + v8[6]) = 0;
  OUTLINED_FUNCTION_8_0();
}

uint64_t PluginAction.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_332();
  sub_1C2CFE670();
  OUTLINED_FUNCTION_19_34();
  swift_bridgeObjectRetain();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_34_1();
  sub_1C2CFDE54();
  v4 = OUTLINED_FUNCTION_2_76();
  Input.description.getter();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_34_1();
  sub_1C2CFDE54();
  v5 = *(id *)(v0 + *(int *)(v4 + 28));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8088);
  sub_1C2CFDDAC();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_19_34();
  sub_1C28D3304(v0 + *(int *)(v4 + 36), v1, &qword_1ED7A7E80);
  sub_1C2CFDDAC();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1C2B2BE6C()
{
  sub_1C2CFEAC0();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B2BE8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;
  BOOL v6;

  v2 = a1 == 0x646E6148776F6C66 && a2 == 0xED0000644972656CLL;
  if (!v2 && (OUTLINED_FUNCTION_0_75() & 1) == 0)
  {
    v5 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
    if (!v5 && (OUTLINED_FUNCTION_0_75() & 1) == 0)
    {
      v6 = a1 == 0x6174614472657375 && a2 == 0xE800000000000000;
      if (!v6
        && (OUTLINED_FUNCTION_0_75() & 1) == 0
        && (a1 != 0xD000000000000011 || a2 != 0x80000001C2D34E00)
        && (OUTLINED_FUNCTION_0_75() & 1) == 0
        && (a1 != 0xD000000000000010 || a2 != 0x80000001C2D34E20)
        && (OUTLINED_FUNCTION_0_75() & 1) == 0
        && (a1 != 0x49676E6967676F6CLL || a2 != 0xE900000000000064))
      {
        OUTLINED_FUNCTION_24_47();
        if ((OUTLINED_FUNCTION_0_75() & 1) == 0 && (a1 != 0x636E617265747475 || a2 != 0xE900000000000065))
          OUTLINED_FUNCTION_0_75();
      }
    }
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2B2C104(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C2B2C144
                                                            + 4 * asc_1C2D14FA0[a1]))(0x646E6148776F6C66, 0xED0000644972656CLL);
}

uint64_t sub_1C2B2C144()
{
  return 0x7475706E69;
}

uint64_t sub_1C2B2C158()
{
  return 0x6174614472657375;
}

unint64_t sub_1C2B2C170()
{
  return 0xD000000000000011;
}

unint64_t sub_1C2B2C190()
{
  return 0xD000000000000010;
}

uint64_t sub_1C2B2C1AC()
{
  return OUTLINED_FUNCTION_24_47();
}

uint64_t sub_1C2B2C1BC()
{
  return 0x636E617265747475;
}

void sub_1C2B2C1DC()
{
  sub_1C2B2BE6C();
}

uint64_t sub_1C2B2C1E4()
{
  unsigned __int8 *v0;

  return sub_1C2B2C104(*v0);
}

void sub_1C2B2C1EC(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1C2B2BE8C(a1, a2);
  *a3 = v4;
}

void sub_1C2B2C210(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1C2B2C21C()
{
  sub_1C2B2C8C4();
  return sub_1C2CFEB20();
}

uint64_t sub_1C2B2C244()
{
  sub_1C2B2C8C4();
  return sub_1C2CFEB2C();
}

void PluginAction.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_10();
  v47 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_11_4();
  type metadata accessor for Input(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_10();
  v14 = v13 - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF799048);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15, v17);
  OUTLINED_FUNCTION_10();
  v48 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2B2C8C4();
  sub_1C2CFEAFC();
  if (!v49)
  {
    v18 = v2;
    v19 = v14;
    v20 = sub_1C2CFE8B0();
    v22 = v21;
    v45 = v20;
    sub_1C28C3328(&qword_1EF790AD0, type metadata accessor for Input, (uint64_t)&protocol conformance descriptor for Input);
    v23 = v19;
    sub_1C2CFE8E0();
    type metadata accessor for ActionParaphrase(0);
    sub_1C28C3328(&qword_1EF799058, type metadata accessor for ActionParaphrase, (uint64_t)&protocol conformance descriptor for ActionParaphrase);
    OUTLINED_FUNCTION_7_71();
    sub_1C2CFBCAC();
    LOBYTE(v51) = 5;
    sub_1C28C3328(&qword_1ED7A72E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    OUTLINED_FUNCTION_7_71();
    LOBYTE(v50) = 2;
    sub_1C29208E0();
    OUTLINED_FUNCTION_22_54();
    OUTLINED_FUNCTION_7_71();
    if (v52 >> 60 == 15)
    {
      v43 = v18;
      v24 = 0;
    }
    else
    {
      v25 = (void *)objc_opt_self();
      v26 = (void *)sub_1C2CFBBB0();
      v51 = 0;
      v27 = objc_msgSend(v25, sel_propertyListWithData_options_format_error_, v26, 0, 0, &v51);

      if (!v27)
      {
        v31 = v51;
        OUTLINED_FUNCTION_25_45();
        sub_1C2CFBAFC();

        swift_willThrow();
        v32 = OUTLINED_FUNCTION_30_42();
        OUTLINED_FUNCTION_21_55(v32, &qword_1ED7A9228);
        sub_1C28BB37C(v18, &qword_1ED7A7E80);
        sub_1C28C9F68(v23, type metadata accessor for Input);
        OUTLINED_FUNCTION_11_58(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
        goto LABEL_3;
      }
      v43 = v18;
      v28 = v51;
      sub_1C2CFE538();
      OUTLINED_FUNCTION_30_42();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A6048);
      if (swift_dynamicCast())
        v24 = v50;
      else
        v24 = 0;
    }
    OUTLINED_FUNCTION_22_54();
    OUTLINED_FUNCTION_7_71();
    v42 = v22;
    v29 = v52;
    if (v52 >> 60 == 15)
    {
      v30 = 0;
    }
    else
    {
      v33 = (uint64_t)v51;
      v34 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
      sub_1C28C50CC(v33, v29);
      v35 = sub_1C2B16E7C(v33, v29);
      sub_1C2B2CDE4();
      v44 = v33;
      sub_1C2CFDD58();
      v30 = sub_1C2CFE3D0();
      sub_1C28EC278(v44, v29);
      v23 = v19;
      swift_bridgeObjectRelease();

    }
    LOBYTE(v51) = 6;
    v36 = sub_1C2CFE898();
    v38 = v37;
    v39 = v36;
    OUTLINED_FUNCTION_11_58(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    v40 = (int *)OUTLINED_FUNCTION_2_76();
    sub_1C2992AB4(v23, (uint64_t)a2 + v40[5]);
    sub_1C2921AEC(v43, (uint64_t)a2 + v40[9], &qword_1ED7A7E80);
    sub_1C2921AEC(v47, (uint64_t)a2 + v40[10], &qword_1ED7A9228);
    *a2 = v45;
    a2[1] = v42;
    *(uint64_t *)((char *)a2 + v40[6]) = v24;
    *(uint64_t *)((char *)a2 + v40[7]) = v30;
    v41 = (uint64_t *)((char *)a2 + v40[8]);
    *v41 = v39;
    v41[1] = v38;
  }
LABEL_3:
  __swift_destroy_boxed_opaque_existential_1(v48);
  OUTLINED_FUNCTION_44();
}

unint64_t sub_1C2B2C8C4()
{
  unint64_t result;

  result = qword_1EF799050;
  if (!qword_1EF799050)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D151B4, &type metadata for PluginAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF799050);
  }
  return result;
}

void PluginAction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;

  v4 = v1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF799068);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  OUTLINED_FUNCTION_11_4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2B2C8C4();
  sub_1C2CFEB08();
  OUTLINED_FUNCTION_28_38();
  sub_1C2CFE928();
  if (!v2)
  {
    v9 = OUTLINED_FUNCTION_2_76();
    type metadata accessor for Input(0);
    sub_1C28C3328(&qword_1EF790AA8, type metadata accessor for Input, (uint64_t)&protocol conformance descriptor for Input);
    OUTLINED_FUNCTION_46_16();
    sub_1C2CFBCAC();
    sub_1C28C3328(&qword_1ED7A7F28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    OUTLINED_FUNCTION_6_63();
    type metadata accessor for ActionParaphrase(0);
    sub_1C28C3328(&qword_1EF799070, type metadata accessor for ActionParaphrase, (uint64_t)&protocol conformance descriptor for ActionParaphrase);
    OUTLINED_FUNCTION_6_63();
    v10 = *(void **)(v4 + *(int *)(v9 + 28));
    if (v10)
    {
      v11 = objc_allocWithZone(MEMORY[0x1E0CB36F8]);
      v12 = v10;
      v13 = objc_msgSend(v11, sel_initRequiringSecureCoding_, 1);
      objc_msgSend(v13, sel_encodeObject_forKey_, v12, *MEMORY[0x1E0CB2CD0]);
      v15 = v13;
      v14 = objc_msgSend(v13, sel_encodedData);
      sub_1C2CFBBD4();

      sub_1C2920868();
      OUTLINED_FUNCTION_46_16();
      OUTLINED_FUNCTION_35_37();

    }
    OUTLINED_FUNCTION_28_38();
    sub_1C2CFE910();
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  OUTLINED_FUNCTION_44();
}

void PluginAction.init(data:)(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v4 = (int *)OUTLINED_FUNCTION_2_76();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_332();
  sub_1C2CFB9E8();
  OUTLINED_FUNCTION_27();
  sub_1C2CFB9DC();
  sub_1C28C3328(&qword_1EF799078, (uint64_t (*)(uint64_t))type metadata accessor for PluginAction, (uint64_t)&protocol conformance descriptor for PluginAction);
  sub_1C2CFB9D0();
  if (v1)
  {
    OUTLINED_FUNCTION_45_26();
    swift_release();
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_45_26();
    v7 = v2[1];
    v14 = *v2;
    sub_1C2992AB4((uint64_t)v2 + v4[5], (uint64_t)a1 + v4[5]);
    v8 = v4[8];
    v9 = *(uint64_t *)((char *)v2 + v4[7]);
    v10 = *(uint64_t *)((char *)v2 + v8);
    v11 = *(uint64_t *)((char *)v2 + v8 + 8);
    sub_1C2921AEC((uint64_t)v2 + v4[9], (uint64_t)a1 + v4[9], &qword_1ED7A7E80);
    v12 = *(uint64_t *)((char *)v2 + v4[6]);
    sub_1C2921AEC((uint64_t)v2 + v4[10], (uint64_t)a1 + v4[10], &qword_1ED7A9228);
    *a1 = v14;
    a1[1] = v7;
    *(_QWORD *)((char *)a1 + v4[6]) = v12;
    *(_QWORD *)((char *)a1 + v4[7]) = v9;
    v13 = (_QWORD *)((char *)a1 + v4[8]);
    *v13 = v10;
    v13[1] = v11;
  }
  OUTLINED_FUNCTION_44();
}

uint64_t PluginAction.serialize()()
{
  uint64_t v0;

  sub_1C2CFBA18();
  OUTLINED_FUNCTION_27();
  sub_1C2CFBA0C();
  sub_1C2CFB9F4();
  OUTLINED_FUNCTION_2_76();
  sub_1C28C3328(&qword_1EF799080, (uint64_t (*)(uint64_t))type metadata accessor for PluginAction, (uint64_t)&protocol conformance descriptor for PluginAction);
  v0 = sub_1C2CFBA00();
  swift_release();
  return v0;
}

void sub_1C2B2CDBC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  PluginAction.init(from:)(a1, a2);
}

void sub_1C2B2CDD0(_QWORD *a1)
{
  PluginAction.encode(to:)(a1);
}

unint64_t sub_1C2B2CDE4()
{
  unint64_t result;

  result = qword_1EF799060;
  if (!qword_1EF799060)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF799060);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PluginAction(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  int *v98;
  int *v99;
  void (*v100)(char *, char *, uint64_t);
  const void *v101;
  const void *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1C2CFD350();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C2CFBCAC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v109 = v12;
    v110 = v11;
    v12(v9, v10, v11);
    v13 = (int *)type metadata accessor for Input(0);
    v14 = v13[5];
    v15 = &v9[v14];
    v16 = &v10[v14];
    v17 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v18 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
        goto LABEL_19;
      case 1u:
        v20 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v15, v16, v20);
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v15[*(int *)(v21 + 48)] = *(_QWORD *)&v16[*(int *)(v21 + 48)];
        sub_1C2CFD350();
        goto LABEL_19;
      case 2u:
        v22 = *((_QWORD *)v16 + 1);
        *(_QWORD *)v15 = *(_QWORD *)v16;
        *((_QWORD *)v15 + 1) = v22;
        *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 3u:
        *(_QWORD *)v15 = *(_QWORD *)v16;
        swift_unknownObjectRetain();
        goto LABEL_19;
      case 4u:
        v23 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v15, v16, v23);
        goto LABEL_19;
      case 5u:
        v24 = *(void **)v16;
        *(_QWORD *)v15 = *(_QWORD *)v16;
        v25 = v24;
        goto LABEL_19;
      case 6u:
        v26 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v15, v16, v26);
        v98 = (int *)type metadata accessor for USOParse();
        v27 = v98[5];
        v105 = &v15[v27];
        v28 = &v16[v27];
        v29 = sub_1C2CFBF28();
        v101 = v28;
        v30 = (uint64_t)v28;
        v31 = v29;
        if (__swift_getEnumTagSinglePayload(v30, 1, v29))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v105, v101, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v105, v101, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v31);
        }
        v40 = v98[6];
        v41 = &v15[v40];
        v42 = &v16[v40];
        v43 = *((_QWORD *)v42 + 1);
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = v43;
        v44 = v98[7];
        v45 = &v15[v44];
        v46 = &v16[v44];
        v45[4] = v46[4];
        *(_DWORD *)v45 = *(_DWORD *)v46;
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 7u:
        v33 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v15, v16, v33);
        v99 = (int *)type metadata accessor for USOParse();
        v34 = v99[5];
        v106 = &v15[v34];
        v35 = &v16[v34];
        v36 = sub_1C2CFBF28();
        v102 = v35;
        v37 = (uint64_t)v35;
        v38 = v36;
        if (__swift_getEnumTagSinglePayload(v37, 1, v36))
        {
          v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(v106, v102, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v106, v102, v38);
          __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v38);
        }
        v47 = v99[6];
        v48 = &v15[v47];
        v49 = &v16[v47];
        v107 = *((_QWORD *)v49 + 1);
        *(_QWORD *)v48 = *(_QWORD *)v49;
        *((_QWORD *)v48 + 1) = v107;
        v50 = v99[7];
        v51 = &v15[v50];
        v52 = &v16[v50];
        v51[4] = v52[4];
        *(_DWORD *)v51 = *(_DWORD *)v52;
        v53 = (int *)type metadata accessor for LinkParse();
        v54 = v53[5];
        v55 = &v15[v54];
        v56 = &v16[v54];
        v103 = *((_QWORD *)v56 + 1);
        *(_QWORD *)v55 = *(_QWORD *)v56;
        *((_QWORD *)v55 + 1) = v103;
        v57 = v53[6];
        v58 = &v15[v57];
        v59 = &v16[v57];
        v60 = *((_QWORD *)v59 + 1);
        *(_QWORD *)v58 = *(_QWORD *)v59;
        *((_QWORD *)v58 + 1) = v60;
        v61 = v53[7];
        v62 = &v15[v61];
        v63 = &v16[v61];
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = *(_QWORD *)v63;
        *((_QWORD *)v62 + 1) = v64;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        break;
    }
    *(_QWORD *)&v9[v13[6]] = *(_QWORD *)&v10[v13[6]];
    v65 = v13[7];
    v66 = &v9[v65];
    v67 = &v10[v65];
    v68 = *(_QWORD *)&v10[v65 + 24];
    swift_bridgeObjectRetain();
    if (v68)
    {
      v69 = *((_QWORD *)v67 + 4);
      *((_QWORD *)v66 + 3) = v68;
      *((_QWORD *)v66 + 4) = v69;
      (**(void (***)(char *, char *, uint64_t))(v68 - 8))(v66, v67, v68);
    }
    else
    {
      v70 = *((_OWORD *)v67 + 1);
      *(_OWORD *)v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v70;
      *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
    }
    v9[v13[8]] = v10[v13[8]];
    v71 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v72 = *(void **)((char *)a2 + v71);
    *(uint64_t *)((char *)v4 + v71) = (uint64_t)v72;
    v73 = a3[8];
    v74 = a3[9];
    v75 = (uint64_t *)((char *)v4 + v73);
    v76 = (uint64_t *)((char *)a2 + v73);
    v77 = v76[1];
    *v75 = *v76;
    v75[1] = v77;
    v78 = (uint64_t *)((char *)v4 + v74);
    v79 = (uint64_t *)((char *)a2 + v74);
    v80 = type metadata accessor for ActionParaphrase(0);
    swift_bridgeObjectRetain();
    v81 = v72;
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v80))
    {
      v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      v83 = v79[1];
      *v78 = *v79;
      v78[1] = v83;
      v84 = *(int *)(v80 + 20);
      v85 = (_QWORD *)((char *)v78 + v84);
      v86 = (_QWORD *)((char *)v79 + v84);
      v87 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
      {
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        v89 = v86[1];
        *v85 = *v86;
        v85[1] = v89;
        v90 = v86[3];
        v85[2] = v86[2];
        v85[3] = v90;
        v91 = *(int *)(v87 + 24);
        v104 = (char *)v86 + v91;
        v108 = (char *)v85 + v91;
        v92 = sub_1C2CFC114();
        v100 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v100(v108, v104, v92);
        __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v87);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v80);
    }
    v93 = a3[10];
    v94 = (char *)v4 + v93;
    v95 = (char *)a2 + v93;
    if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v110))
    {
      v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    }
    else
    {
      v109(v94, v95, v110);
      __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v110);
    }
  }
  return v4;
}

uint64_t destroy for PluginAction(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  void (*v25)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1C2CFBCAC();
  v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v25(v4, v5);
  v6 = type metadata accessor for Input(0);
  v7 = (id *)(v4 + *(int *)(v6 + 20));
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v8 = sub_1C2CFCD44();
      goto LABEL_7;
    case 1u:
      v9 = sub_1C2CFCD44();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      v8 = sub_1C2CFBD9C();
LABEL_7:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      break;
    case 5u:

      break;
    case 6u:
      v10 = sub_1C2CFBFD0();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
      v11 = (uint64_t)v7 + *(int *)(type metadata accessor for USOParse() + 20);
      v12 = sub_1C2CFBF28();
      if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      goto LABEL_15;
    case 7u:
      v13 = sub_1C2CFBFD0();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v7, v13);
      v14 = (uint64_t)v7 + *(int *)(type metadata accessor for USOParse() + 20);
      v15 = sub_1C2CFBF28();
      if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      swift_bridgeObjectRelease();
      type metadata accessor for LinkParse();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  v16 = v4 + *(int *)(v6 + 28);
  if (*(_QWORD *)(v16 + 24))
    __swift_destroy_boxed_opaque_existential_1(v16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v17 = a1 + a2[9];
  v18 = type metadata accessor for ActionParaphrase(0);
  if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
  {
    swift_bridgeObjectRelease();
    v19 = v17 + *(int *)(v18 + 20);
    v20 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v19 + *(int *)(v20 + 24);
      v22 = sub_1C2CFC114();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
    }
  }
  v23 = a1 + a2[10];
  result = __swift_getEnumTagSinglePayload(v23, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v25)(v23, v5);
  return result;
}

_QWORD *initializeWithCopy for PluginAction(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  int *v96;
  int *v97;
  void (*v98)(char *, char *, uint64_t);
  const void *v99;
  const void *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C2CFBCAC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v107 = v11;
  v108 = v10;
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for Input(0);
  v13 = v12[5];
  v14 = &v8[v13];
  v15 = &v9[v13];
  v16 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v17 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      goto LABEL_17;
    case 1u:
      v18 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v15, v18);
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      *(_QWORD *)&v14[*(int *)(v19 + 48)] = *(_QWORD *)&v15[*(int *)(v19 + 48)];
      sub_1C2CFD350();
      goto LABEL_17;
    case 2u:
      v20 = *((_QWORD *)v15 + 1);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v20;
      *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 3u:
      *(_QWORD *)v14 = *(_QWORD *)v15;
      swift_unknownObjectRetain();
      goto LABEL_17;
    case 4u:
      v21 = sub_1C2CFBD9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v14, v15, v21);
      goto LABEL_17;
    case 5u:
      v22 = *(void **)v15;
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v23 = v22;
      goto LABEL_17;
    case 6u:
      v24 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v14, v15, v24);
      v96 = (int *)type metadata accessor for USOParse();
      v25 = v96[5];
      v103 = &v14[v25];
      v26 = &v15[v25];
      v27 = sub_1C2CFBF28();
      v99 = v26;
      v28 = (uint64_t)v26;
      v29 = v27;
      if (__swift_getEnumTagSinglePayload(v28, 1, v27))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v103, v99, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v103, v99, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v29);
      }
      v38 = v96[6];
      v39 = &v14[v38];
      v40 = &v15[v38];
      v41 = *((_QWORD *)v40 + 1);
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *((_QWORD *)v39 + 1) = v41;
      v42 = v96[7];
      v43 = &v14[v42];
      v44 = &v15[v42];
      v43[4] = v44[4];
      *(_DWORD *)v43 = *(_DWORD *)v44;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 7u:
      v31 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v14, v15, v31);
      v97 = (int *)type metadata accessor for USOParse();
      v32 = v97[5];
      v104 = &v14[v32];
      v33 = &v15[v32];
      v34 = sub_1C2CFBF28();
      v100 = v33;
      v35 = (uint64_t)v33;
      v36 = v34;
      if (__swift_getEnumTagSinglePayload(v35, 1, v34))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(v104, v100, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v104, v100, v36);
        __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v36);
      }
      v45 = v97[6];
      v46 = &v14[v45];
      v47 = &v15[v45];
      v105 = *((_QWORD *)v47 + 1);
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v105;
      v48 = v97[7];
      v49 = &v14[v48];
      v50 = &v15[v48];
      v49[4] = v50[4];
      *(_DWORD *)v49 = *(_DWORD *)v50;
      v51 = (int *)type metadata accessor for LinkParse();
      v52 = v51[5];
      v53 = &v14[v52];
      v54 = &v15[v52];
      v101 = *((_QWORD *)v54 + 1);
      *(_QWORD *)v53 = *(_QWORD *)v54;
      *((_QWORD *)v53 + 1) = v101;
      v55 = v51[6];
      v56 = &v14[v55];
      v57 = &v15[v55];
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      v59 = v51[7];
      v60 = &v14[v59];
      v61 = &v15[v59];
      v62 = *((_QWORD *)v61 + 1);
      *(_QWORD *)v60 = *(_QWORD *)v61;
      *((_QWORD *)v60 + 1) = v62;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_17:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      break;
  }
  *(_QWORD *)&v8[v12[6]] = *(_QWORD *)&v9[v12[6]];
  v63 = v12[7];
  v64 = &v8[v63];
  v65 = &v9[v63];
  v66 = *(_QWORD *)&v9[v63 + 24];
  swift_bridgeObjectRetain();
  if (v66)
  {
    v67 = *((_QWORD *)v65 + 4);
    *((_QWORD *)v64 + 3) = v66;
    *((_QWORD *)v64 + 4) = v67;
    (**(void (***)(char *, char *, uint64_t))(v66 - 8))(v64, v65, v66);
  }
  else
  {
    v68 = *((_OWORD *)v65 + 1);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v68;
    *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
  }
  v8[v12[8]] = v9[v12[8]];
  v69 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v70 = *(void **)((char *)a2 + v69);
  *(_QWORD *)((char *)a1 + v69) = v70;
  v71 = a3[8];
  v72 = a3[9];
  v73 = (_QWORD *)((char *)a1 + v71);
  v74 = (_QWORD *)((char *)a2 + v71);
  v75 = v74[1];
  *v73 = *v74;
  v73[1] = v75;
  v76 = (_QWORD *)((char *)a1 + v72);
  v77 = (_QWORD *)((char *)a2 + v72);
  v78 = type metadata accessor for ActionParaphrase(0);
  swift_bridgeObjectRetain();
  v79 = v70;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
  {
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    v81 = v77[1];
    *v76 = *v77;
    v76[1] = v81;
    v82 = *(int *)(v78 + 20);
    v83 = (_QWORD *)((char *)v76 + v82);
    v84 = (_QWORD *)((char *)v77 + v82);
    v85 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      v87 = v84[1];
      *v83 = *v84;
      v83[1] = v87;
      v88 = v84[3];
      v83[2] = v84[2];
      v83[3] = v88;
      v89 = *(int *)(v85 + 24);
      v102 = (char *)v84 + v89;
      v106 = (char *)v83 + v89;
      v90 = sub_1C2CFC114();
      v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v98(v106, v102, v90);
      __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v85);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
  }
  v91 = a3[10];
  v92 = (char *)a1 + v91;
  v93 = (char *)a2 + v91;
  if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v108))
  {
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
  }
  else
  {
    v107(v92, v93, v108);
    __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v108);
  }
  return a1;
}

_QWORD *assignWithCopy for PluginAction(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  void *v66;
  void *v67;
  id v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  int EnumTagSinglePayload;
  int v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  size_t v83;
  void *v84;
  const void *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  int v90;
  int v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void *__src;
  _QWORD *__srca;
  void (*__srcb)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  void (*v122)(char *, char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C2CFBCAC();
  v123 = *(_QWORD *)(v9 - 8);
  v122 = *(void (**)(char *, char *, uint64_t))(v123 + 24);
  v122(v7, v8, v9);
  v10 = type metadata accessor for Input(0);
  v11 = (int *)v10;
  if (a1 != a2)
  {
    v124 = v9;
    v12 = *(int *)(v10 + 20);
    v13 = &v7[v12];
    v14 = &v8[v12];
    sub_1C28C9F68((uint64_t)&v7[v12], type metadata accessor for Parse);
    v15 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v16 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
        goto LABEL_18;
      case 1u:
        v17 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v13, v14, v17);
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v13[*(int *)(v18 + 48)] = *(_QWORD *)&v14[*(int *)(v18 + 48)];
        sub_1C2CFD350();
        goto LABEL_18;
      case 2u:
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
        *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 3u:
        *(_QWORD *)v13 = *(_QWORD *)v14;
        swift_unknownObjectRetain();
        goto LABEL_18;
      case 4u:
        v19 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v13, v14, v19);
        goto LABEL_18;
      case 5u:
        v20 = *(void **)v14;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v21 = v20;
        goto LABEL_18;
      case 6u:
        v22 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v13, v14, v22);
        v23 = type metadata accessor for USOParse();
        v24 = *(int *)(v23 + 20);
        v115 = v23;
        __dst = &v13[v24];
        v25 = &v14[v24];
        v26 = sub_1C2CFBF28();
        __src = v25;
        v27 = (uint64_t)v25;
        v28 = v26;
        if (__swift_getEnumTagSinglePayload(v27, 1, v26))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(__dst, __src, v28);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
        }
        v35 = *(int *)(v115 + 24);
        v36 = &v13[v35];
        v37 = &v14[v35];
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
        v38 = *(int *)(v115 + 28);
        v39 = &v13[v38];
        v40 = &v14[v38];
        v41 = *(_DWORD *)v40;
        v39[4] = v40[4];
        *(_DWORD *)v39 = v41;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      case 7u:
        v30 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v13, v14, v30);
        v31 = type metadata accessor for USOParse();
        v32 = *(int *)(v31 + 20);
        v116 = v31;
        __dsta = &v13[v32];
        v33 = &v14[v32];
        __srca = (_QWORD *)sub_1C2CFBF28();
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, (uint64_t)__srca))
        {
          v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *))(*(__srca - 1) + 16))(__dsta, v33);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, (uint64_t)__srca);
        }
        v42 = *(int *)(v116 + 24);
        v43 = &v13[v42];
        v44 = &v14[v42];
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
        v45 = *(int *)(v116 + 28);
        v46 = &v13[v45];
        v47 = &v14[v45];
        v48 = *(_DWORD *)v47;
        v46[4] = v47[4];
        *(_DWORD *)v46 = v48;
        v49 = (int *)type metadata accessor for LinkParse();
        v50 = v49[5];
        v51 = &v13[v50];
        v52 = &v14[v50];
        *(_QWORD *)v51 = *(_QWORD *)v52;
        *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
        v53 = v49[6];
        v54 = &v13[v53];
        v55 = &v14[v53];
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
        v56 = v49[7];
        v57 = &v13[v56];
        v58 = &v14[v56];
        *(_QWORD *)v57 = *(_QWORD *)v58;
        *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_18:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        break;
    }
    v9 = v124;
  }
  *(_QWORD *)&v7[v11[6]] = *(_QWORD *)&v8[v11[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = v11[7];
  v60 = (uint64_t)&v7[v59];
  v61 = &v8[v59];
  v62 = *(_QWORD *)&v8[v59 + 24];
  if (*(_QWORD *)&v7[v59 + 24])
  {
    if (v62)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v60, (uint64_t *)v61);
      goto LABEL_27;
    }
    __swift_destroy_boxed_opaque_existential_1(v60);
  }
  else if (v62)
  {
    *(_QWORD *)(v60 + 24) = v62;
    *(_QWORD *)(v60 + 32) = *((_QWORD *)v61 + 4);
    (**(void (***)(uint64_t, char *))(v62 - 8))(v60, v61);
    goto LABEL_27;
  }
  v63 = *(_OWORD *)v61;
  v64 = *((_OWORD *)v61 + 1);
  *(_QWORD *)(v60 + 32) = *((_QWORD *)v61 + 4);
  *(_OWORD *)v60 = v63;
  *(_OWORD *)(v60 + 16) = v64;
LABEL_27:
  v7[v11[8]] = v8[v11[8]];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v65 = a3[7];
  v66 = *(void **)((char *)a1 + v65);
  v67 = *(void **)((char *)a2 + v65);
  *(_QWORD *)((char *)a1 + v65) = v67;
  v68 = v67;

  v69 = a3[8];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = a3[9];
  v73 = (_QWORD *)((char *)a1 + v72);
  v74 = (_QWORD *)((char *)a2 + v72);
  v75 = type metadata accessor for ActionParaphrase(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v73, 1, v75);
  v77 = __swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75);
  if (EnumTagSinglePayload)
  {
    if (!v77)
    {
      *v73 = *v74;
      v73[1] = v74[1];
      v78 = *(int *)(v75 + 20);
      v79 = (_QWORD *)((char *)v73 + v78);
      v80 = (_QWORD *)((char *)v74 + v78);
      v81 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81))
      {
        v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        *v79 = *v80;
        v79[1] = v80[1];
        v79[2] = v80[2];
        v79[3] = v80[3];
        v99 = *(int *)(v81 + 24);
        v117 = (char *)v80 + v99;
        __dstc = (char *)v79 + v99;
        v100 = sub_1C2CFC114();
        __srcb = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __srcb(__dstc, v117, v100);
        __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
      }
      v97 = (uint64_t)v73;
      v98 = v75;
      goto LABEL_40;
    }
    goto LABEL_33;
  }
  if (v77)
  {
    sub_1C28C9F68((uint64_t)v73, type metadata accessor for ActionParaphrase);
LABEL_33:
    v83 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80) - 8) + 64);
    v84 = v73;
    v85 = v74;
LABEL_34:
    memcpy(v84, v85, v83);
    goto LABEL_41;
  }
  *v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v86 = *(int *)(v75 + 20);
  v87 = (_QWORD *)((char *)v73 + v86);
  v88 = (_QWORD *)((char *)v74 + v86);
  v89 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  v90 = __swift_getEnumTagSinglePayload((uint64_t)v87, 1, v89);
  v91 = __swift_getEnumTagSinglePayload((uint64_t)v88, 1, v89);
  if (v90)
  {
    if (!v91)
    {
      *v87 = *v88;
      v87[1] = v88[1];
      v87[2] = v88[2];
      v87[3] = v88[3];
      v92 = *(int *)(v89 + 24);
      v125 = v9;
      v93 = (char *)v87 + v92;
      __dstb = (char *)v88 + v92;
      v94 = sub_1C2CFC114();
      v95 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v96 = v93;
      v9 = v125;
      v95(v96, __dstb, v94);
      v97 = (uint64_t)v87;
      v98 = v89;
LABEL_40:
      __swift_storeEnumTagSinglePayload(v97, 0, 1, v98);
      goto LABEL_41;
    }
    goto LABEL_51;
  }
  if (v91)
  {
    sub_1C28C9F68((uint64_t)v87, type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
LABEL_51:
    v83 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58) - 8) + 64);
    v84 = v87;
    v85 = v88;
    goto LABEL_34;
  }
  *v87 = *v88;
  v87[1] = v88[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v87[2] = v88[2];
  v87[3] = v88[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v108 = *(int *)(v89 + 24);
  v109 = (char *)v87 + v108;
  v110 = (char *)v88 + v108;
  v111 = sub_1C2CFC114();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 24))(v109, v110, v111);
LABEL_41:
  v101 = a3[10];
  v102 = (char *)a1 + v101;
  v103 = (char *)a2 + v101;
  v104 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v101, 1, v9);
  v105 = __swift_getEnumTagSinglePayload((uint64_t)v103, 1, v9);
  if (!v104)
  {
    if (!v105)
    {
      v122(v102, v103, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v123 + 8))(v102, v9);
    goto LABEL_46;
  }
  if (v105)
  {
LABEL_46:
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v102, v103, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for PluginAction(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *__src;
  char *__srca;
  uint64_t v71;
  uint64_t v72;
  char *__dst;
  char *__dsta;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C2CFBCAC();
  v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v76(v7, v8, v9);
  v10 = (int *)type metadata accessor for Input(0);
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v15 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      goto LABEL_6;
    case 1u:
      v16 = sub_1C2CFCD44();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v12, v13, v16);
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
      *(_QWORD *)&v12[*(int *)(v17 + 48)] = *(_QWORD *)&v13[*(int *)(v17 + 48)];
      goto LABEL_6;
    case 4u:
      v18 = sub_1C2CFBD9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v12, v13, v18);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    case 6u:
      v75 = v9;
      v19 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v12, v13, v19);
      v20 = type metadata accessor for USOParse();
      v21 = *(int *)(v20 + 20);
      v71 = v20;
      __dst = &v12[v21];
      v22 = &v13[v21];
      v23 = sub_1C2CFBF28();
      __src = v22;
      v24 = (uint64_t)v22;
      v25 = v23;
      if (__swift_getEnumTagSinglePayload(v24, 1, v23))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(__dst, __src, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v25);
      }
      *(_OWORD *)&v12[*(int *)(v71 + 24)] = *(_OWORD *)&v13[*(int *)(v71 + 24)];
      v35 = *(int *)(v71 + 28);
      v36 = &v12[v35];
      v37 = &v13[v35];
      v36[4] = v37[4];
      *(_DWORD *)v36 = *(_DWORD *)v37;
      goto LABEL_15;
    case 7u:
      v75 = v9;
      v27 = sub_1C2CFBFD0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v12, v13, v27);
      v28 = type metadata accessor for USOParse();
      v29 = *(int *)(v28 + 20);
      v72 = v28;
      __dsta = &v12[v29];
      v30 = &v13[v29];
      v31 = sub_1C2CFBF28();
      __srca = v30;
      v32 = (uint64_t)v30;
      v33 = v31;
      if (__swift_getEnumTagSinglePayload(v32, 1, v31))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
        memcpy(__dsta, __srca, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(__dsta, __srca, v33);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v33);
      }
      *(_OWORD *)&v12[*(int *)(v72 + 24)] = *(_OWORD *)&v13[*(int *)(v72 + 24)];
      v38 = *(int *)(v72 + 28);
      v39 = &v12[v38];
      v40 = &v13[v38];
      v39[4] = v40[4];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v41 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v12[v41[5]] = *(_OWORD *)&v13[v41[5]];
      *(_OWORD *)&v12[v41[6]] = *(_OWORD *)&v13[v41[6]];
      *(_OWORD *)&v12[v41[7]] = *(_OWORD *)&v13[v41[7]];
LABEL_15:
      swift_storeEnumTagMultiPayload();
      v9 = v75;
      break;
    default:
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      break;
  }
  *(_QWORD *)&v7[v10[6]] = *(_QWORD *)&v8[v10[6]];
  v42 = v10[7];
  v43 = &v7[v42];
  v44 = &v8[v42];
  v45 = *((_OWORD *)v44 + 1);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *((_OWORD *)v43 + 1) = v45;
  *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
  v7[v10[8]] = v8[v10[8]];
  v46 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v46) = *(_QWORD *)((char *)a2 + v46);
  v47 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v48 = (_OWORD *)((char *)a1 + v47);
  v49 = (_OWORD *)((char *)a2 + v47);
  v50 = type metadata accessor for ActionParaphrase(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    *v48 = *v49;
    v52 = *(int *)(v50 + 20);
    v53 = (_OWORD *)((char *)v48 + v52);
    v54 = (_OWORD *)((char *)v49 + v52);
    v55 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v57 = v54[1];
      *v53 = *v54;
      v53[1] = v57;
      v58 = *(int *)(v55 + 24);
      v59 = v9;
      v60 = (char *)v53 + v58;
      v61 = (char *)v54 + v58;
      v62 = sub_1C2CFC114();
      v63 = v60;
      v9 = v59;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v63, v61, v62);
      __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
  }
  v64 = a3[10];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v9))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v76(v65, v66, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithTake for PluginAction(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int EnumTagSinglePayload;
  int v61;
  uint64_t v62;
  _OWORD *v63;
  _OWORD *v64;
  uint64_t v65;
  uint64_t v66;
  size_t v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *__src;
  char *__srca;
  uint64_t v106;
  uint64_t v107;
  char *__dst;
  char *__dsta;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  uint64_t v112;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C2CFBCAC();
  v11 = *(_QWORD *)(v10 - 8);
  v110 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v110(v8, v9, v10);
  v12 = type metadata accessor for Input(0);
  v13 = (int *)v12;
  if (a1 != a2)
  {
    v111 = v11;
    v14 = *(int *)(v12 + 20);
    v15 = &v8[v14];
    v16 = &v9[v14];
    sub_1C28C9F68((uint64_t)&v8[v14], type metadata accessor for Parse);
    v17 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v18 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
        goto LABEL_15;
      case 1u:
        v19 = sub_1C2CFCD44();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v15, v16, v19);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0);
        *(_QWORD *)&v15[*(int *)(v20 + 48)] = *(_QWORD *)&v16[*(int *)(v20 + 48)];
        goto LABEL_15;
      case 4u:
        v21 = sub_1C2CFBD9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v15, v16, v21);
        goto LABEL_15;
      case 6u:
        v22 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v15, v16, v22);
        v23 = type metadata accessor for USOParse();
        v24 = *(int *)(v23 + 20);
        v106 = v23;
        __dst = &v15[v24];
        v25 = &v16[v24];
        v26 = sub_1C2CFBF28();
        __src = v25;
        v27 = (uint64_t)v25;
        v28 = v26;
        if (__swift_getEnumTagSinglePayload(v27, 1, v26))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(__dst, __src, v28);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
        }
        *(_OWORD *)&v15[*(int *)(v106 + 24)] = *(_OWORD *)&v16[*(int *)(v106 + 24)];
        v38 = *(int *)(v106 + 28);
        v39 = &v15[v38];
        v40 = &v16[v38];
        v39[4] = v40[4];
        *(_DWORD *)v39 = *(_DWORD *)v40;
        goto LABEL_15;
      case 7u:
        v103 = v10;
        v30 = sub_1C2CFBFD0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v15, v16, v30);
        v31 = type metadata accessor for USOParse();
        v32 = *(int *)(v31 + 20);
        v107 = v31;
        __dsta = &v15[v32];
        v33 = &v16[v32];
        v34 = sub_1C2CFBF28();
        __srca = v33;
        v35 = (uint64_t)v33;
        v36 = v34;
        if (__swift_getEnumTagSinglePayload(v35, 1, v34))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8CC0);
          memcpy(__dsta, __srca, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(__dsta, __srca, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v36);
        }
        v10 = v103;
        *(_OWORD *)&v15[*(int *)(v107 + 24)] = *(_OWORD *)&v16[*(int *)(v107 + 24)];
        v41 = *(int *)(v107 + 28);
        v42 = &v15[v41];
        v43 = &v16[v41];
        v42[4] = v43[4];
        *(_DWORD *)v42 = *(_DWORD *)v43;
        v44 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v15[v44[5]] = *(_OWORD *)&v16[v44[5]];
        *(_OWORD *)&v15[v44[6]] = *(_OWORD *)&v16[v44[6]];
        *(_OWORD *)&v15[v44[7]] = *(_OWORD *)&v16[v44[7]];
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        break;
    }
    v11 = v111;
  }
  *(_QWORD *)&v8[v13[6]] = *(_QWORD *)&v9[v13[6]];
  swift_bridgeObjectRelease();
  v45 = v13[7];
  v46 = (uint64_t)&v8[v45];
  v47 = &v9[v45];
  if (*(_QWORD *)&v8[v45 + 24])
    __swift_destroy_boxed_opaque_existential_1(v46);
  v48 = *((_OWORD *)v47 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 16) = v48;
  *(_QWORD *)(v46 + 32) = *((_QWORD *)v47 + 4);
  v8[v13[8]] = v9[v13[8]];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v49 = a3[7];
  v50 = *(void **)((char *)a1 + v49);
  *(_QWORD *)((char *)a1 + v49) = *(_QWORD *)((char *)a2 + v49);

  v51 = a3[8];
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  v55 = *v53;
  v54 = v53[1];
  *v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  v56 = a3[9];
  v57 = (uint64_t)a1 + v56;
  v58 = (uint64_t)a2 + v56;
  v59 = type metadata accessor for ActionParaphrase(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v57, 1, v59);
  v61 = __swift_getEnumTagSinglePayload(v58, 1, v59);
  if (EnumTagSinglePayload)
  {
    if (!v61)
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
      v62 = *(int *)(v59 + 20);
      v63 = (_OWORD *)(v57 + v62);
      v64 = (_OWORD *)(v58 + v62);
      v65 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
      {
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        v84 = v64[1];
        *v63 = *v64;
        v63[1] = v84;
        v85 = *(int *)(v65 + 24);
        v112 = v11;
        v86 = (char *)v63 + v85;
        v87 = (char *)v64 + v85;
        v88 = sub_1C2CFC114();
        v89 = v86;
        v11 = v112;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v89, v87, v88);
        __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
      }
      v82 = v57;
      v83 = v59;
      goto LABEL_32;
    }
    goto LABEL_25;
  }
  if (v61)
  {
    sub_1C28C9F68(v57, type metadata accessor for ActionParaphrase);
LABEL_25:
    v67 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80) - 8) + 64);
    v68 = (void *)v57;
    v69 = (const void *)v58;
LABEL_26:
    memcpy(v68, v69, v67);
    goto LABEL_33;
  }
  v70 = *(_QWORD *)(v58 + 8);
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *(_QWORD *)(v57 + 8) = v70;
  swift_bridgeObjectRelease();
  v71 = *(int *)(v59 + 20);
  v72 = v57 + v71;
  v73 = v58 + v71;
  v74 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  v75 = __swift_getEnumTagSinglePayload(v72, 1, v74);
  v76 = __swift_getEnumTagSinglePayload(v73, 1, v74);
  if (v75)
  {
    if (!v76)
    {
      v77 = *(_OWORD *)(v73 + 16);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *(_OWORD *)(v72 + 16) = v77;
      v78 = *(int *)(v74 + 24);
      v79 = v72 + v78;
      v80 = v73 + v78;
      v81 = sub_1C2CFC114();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
      v82 = v72;
      v83 = v74;
LABEL_32:
      __swift_storeEnumTagSinglePayload(v82, 0, 1, v83);
      goto LABEL_33;
    }
    goto LABEL_43;
  }
  if (v76)
  {
    sub_1C28C9F68(v72, type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
LABEL_43:
    v67 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790E58) - 8) + 64);
    v68 = (void *)v72;
    v69 = (const void *)v73;
    goto LABEL_26;
  }
  v97 = *(_QWORD *)(v73 + 8);
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_QWORD *)(v72 + 8) = v97;
  swift_bridgeObjectRelease();
  v98 = *(_QWORD *)(v73 + 24);
  *(_QWORD *)(v72 + 16) = *(_QWORD *)(v73 + 16);
  *(_QWORD *)(v72 + 24) = v98;
  swift_bridgeObjectRelease();
  v99 = *(int *)(v74 + 24);
  v100 = v72 + v99;
  v101 = v73 + v99;
  v102 = sub_1C2CFC114();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 40))(v100, v101, v102);
LABEL_33:
  v90 = a3[10];
  v91 = (char *)a1 + v90;
  v92 = (char *)a2 + v90;
  v93 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v90, 1, v10);
  v94 = __swift_getEnumTagSinglePayload((uint64_t)v92, 1, v10);
  if (!v93)
  {
    if (!v94)
    {
      v110(v91, v92, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v91, v10);
    goto LABEL_38;
  }
  if (v94)
  {
LABEL_38:
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v91, v92, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v10);
  return a1;
}

void sub_1C2B2F574(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_18();
  }
  else
  {
    v6 = type metadata accessor for Input(0);
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = a3[5];
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
      if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
      {
        v7 = v9;
        v8 = a3[9];
      }
      else
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
        v8 = a3[10];
      }
    }
    __swift_getEnumTagSinglePayload(a1 + v8, a2, v7);
  }
}

uint64_t sub_1C2B2F630(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Input(0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = a4[5];
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7E80);
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
      {
        v9 = v11;
        v10 = a4[9];
      }
      else
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9228);
        v10 = a4[10];
      }
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_1C2B2F6F0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for Input(319);
  if (v0 <= 0x3F)
  {
    sub_1C2B2F7D0(319, &qword_1ED7A8E68, (void (*)(uint64_t))type metadata accessor for ActionParaphrase);
    if (v1 <= 0x3F)
    {
      sub_1C2B2F7D0(319, (unint64_t *)&qword_1ED7A8C60, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_1C2B2F7D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1C2CFE478();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t storeEnumTagSinglePayload for PluginAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C2B2F864 + 4 * byte_1C2D14FDC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C2B2F898 + 4 * byte_1C2D14FD7[v4]))();
}

uint64_t sub_1C2B2F898(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B2F8A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2B2F8A8);
  return result;
}

uint64_t sub_1C2B2F8B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2B2F8BCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C2B2F8C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B2F8C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PluginAction.CodingKeys()
{
  return &type metadata for PluginAction.CodingKeys;
}

unint64_t sub_1C2B2F8E8()
{
  unint64_t result;

  result = qword_1EF799088;
  if (!qword_1EF799088)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D1518C, &type metadata for PluginAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF799088);
  }
  return result;
}

unint64_t sub_1C2B2F928()
{
  unint64_t result;

  result = qword_1EF799090;
  if (!qword_1EF799090)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D150FC, &type metadata for PluginAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF799090);
  }
  return result;
}

unint64_t sub_1C2B2F968()
{
  unint64_t result;

  result = qword_1EF799098;
  if (!qword_1EF799098)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D15124, &type metadata for PluginAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF799098);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_76()
{
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_6_63()
{
  return sub_1C2CFE91C();
}

uint64_t OUTLINED_FUNCTION_7_71()
{
  return sub_1C2CFE8A4();
}

uint64_t OUTLINED_FUNCTION_11_60()
{
  return type metadata accessor for ActionParaphrase(0);
}

void OUTLINED_FUNCTION_21_55(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1C28BB37C(*(_QWORD *)(v2 - 152), a2);
}

uint64_t OUTLINED_FUNCTION_24_47()
{
  return 0x49676E6967676F6CLL;
}

uint64_t OUTLINED_FUNCTION_25_45()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_42()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C28EC278(v0, *(_QWORD *)(v1 - 176));
}

uint64_t sub_1C2B2FA68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C2A06AB0;
  return PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody()(a1, a2);
}

uint64_t PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  OUTLINED_FUNCTION_36_2();
  return swift_task_switch();
}

uint64_t sub_1C2B2FAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_1C2B2FB84;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_7_47();
}

uint64_t sub_1C2B2FB84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B2FBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7992E8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a4 + 8))(sub_1C2B3104C, v12, a3, a4);
  return swift_release();
}

uint64_t sub_1C2B2FCE0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B2FBE8(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1C2B2FCEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[7];
  v2 = v0[8];
  __swift_project_boxed_opaque_existential_1(v0 + 4, v1);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1) == 0)
    return 0;
  v3 = *(_QWORD *)((char *)v0
                 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag
                 + 24);
  v4 = *(_QWORD *)((char *)v0
                 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v0 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1;
}

uint64_t PostPersonalDomainActivityNotificationFlow.__allocating_init(strategy:)(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_134_0();
  PostPersonalDomainActivityNotificationFlow.init(strategy:)(a1);
  return v2;
}

void PostPersonalDomainActivityNotificationFlow.init(strategy:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798F00);
  OUTLINED_FUNCTION_17_47();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_79_10();
  sub_1C28B9A04(a1, (uint64_t)v11);
  v7 = swift_allocObject();
  OUTLINED_FUNCTION_9_73(v7, v7 + 16);
  *(_QWORD *)(v1 + 16) = &unk_1EF799140;
  *(_QWORD *)(v1 + 24) = v7;
  if (qword_1EF786DD0 != -1)
    swift_once();
  v8 = OUTLINED_FUNCTION_7_72((uint64_t)&qword_1EF7990A0);
  OUTLINED_FUNCTION_9_73(v8, v1 + 32);
  if (qword_1EF786DD8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1EF7990C8);
  sub_1C2B30AFC(v9, v2);
  OUTLINED_FUNCTION_18_52(OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_homeInfo);
  if (qword_1EF786DE0 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_7_72((uint64_t)&qword_1EF7990E0);
  OUTLINED_FUNCTION_9_73(v10, v1 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_aceService);
  if (qword_1EF786DE8 != -1)
    swift_once();
  OUTLINED_FUNCTION_7_72((uint64_t)&byte_1EF799108);
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1C28B99EC(v11, v1 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag);
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B2FF40(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B2FF58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[4];
  v2 = swift_task_alloc();
  v0[5] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[6] = v3;
  *v3 = v0;
  v3[1] = sub_1C2B2FFF8;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_7_47();
}

uint64_t sub_1C2B2FFF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B3005C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C2B3006C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C2B30090()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  OUTLINED_FUNCTION_148(v2, (uint64_t)sub_1C2A0AF70);
  return sub_1C2B2FF40(v0 + 16);
}

uint64_t sub_1C2B300D8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7992E8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4, v7);
  v8 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2[3];
  v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, v8, v4);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1C2B3104C, v12, v9, v10);
  return swift_release();
}

uint64_t sub_1C2B301D8(void *a1, uint64_t a2, char a3)
{
  id v4;

  if ((a3 & 1) != 0)
  {
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7992E8);
    return sub_1C2CFE0C4();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7992E8);
    return sub_1C2CFE0D0();
  }
}

uint64_t PostPersonalDomainActivityNotificationFlow.__allocating_init(notificationBodyProvider:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_134_0();
  v1 = OUTLINED_FUNCTION_149_1();
  PostPersonalDomainActivityNotificationFlow.init(notificationBodyProvider:)(v1, v2);
  return v0;
}

void PostPersonalDomainActivityNotificationFlow.init(notificationBodyProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798F00);
  OUTLINED_FUNCTION_17_47();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_79_10();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v9 = qword_1EF786DD0;
  sub_1C2CFD350();
  if (v9 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_7_72((uint64_t)&qword_1EF7990A0);
  OUTLINED_FUNCTION_9_73(v10, v2 + 32);
  if (qword_1EF786DD8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v4, (uint64_t)qword_1EF7990C8);
  sub_1C2B30AFC(v11, v3);
  OUTLINED_FUNCTION_18_52(OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_homeInfo);
  if (qword_1EF786DE0 != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_7_72((uint64_t)&qword_1EF7990E0);
  OUTLINED_FUNCTION_9_73(v12, v2 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_aceService);
  if (qword_1EF786DE8 != -1)
    swift_once();
  OUTLINED_FUNCTION_7_72((uint64_t)&byte_1EF799108);
  swift_release();
  sub_1C28B99EC(&v13, v2 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag);
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B30400(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 32) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_148(v2, (uint64_t)sub_1C2B30444);
  return sub_1C2B30694();
}

uint64_t sub_1C2B30444()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3049C()
{
  uint64_t v0;

  static ExecuteResponse.complete()();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B304C4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = *(void **)(v0 + 48);
  v2 = sub_1C2CFD878();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED7AA1B0);
  v3 = v1;
  v4 = v1;
  v5 = sub_1C2CFD86C();
  v6 = sub_1C2CFE2B0();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 48);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 16) = v8;
    v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    v11 = sub_1C2CFDDAC();
    *(_QWORD *)(v0 + 24) = sub_1C28BB120(v11, v12, &v14);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_44_5();
    _os_log_impl(&dword_1C28B6000, v5, v6, "Got error generating body for personal request activity notification. Will ignore... %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  static ExecuteResponse.complete()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2B30694()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798F00);
  v1[3] = OUTLINED_FUNCTION_7();
  v2 = sub_1C2CFBCAC();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B306F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t (*v4)(void);

  if ((sub_1C2B2FCEC() & 1) != 0)
  {
    v4 = (uint64_t (*)(void))(**(int **)(v0[2] + 16) + *(_QWORD *)(v0[2] + 16));
    v1 = (_QWORD *)swift_task_alloc();
    v0[7] = v1;
    OUTLINED_FUNCTION_148(v1, (uint64_t)sub_1C2B3076C);
    v2 = v4;
  }
  else
  {
    OUTLINED_FUNCTION_20_61();
    swift_task_dealloc();
    v2 = (uint64_t (*)(void))v0[1];
  }
  return v2();
}

uint64_t sub_1C2B3076C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v7 + 8))();
  }
  else
  {
    *(_QWORD *)(v6 + 64) = a2;
    *(_QWORD *)(v6 + 72) = a1;
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_8_2();
  }
}

uint64_t sub_1C2B307F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumTagSinglePayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD **)(v0 + 16);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D88328]), sel_init);
  sub_1C2CFBCA0();
  v8 = sub_1C2CFBC70();
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1C29BB800(v8, v10, v7);
  sub_1C2B30FF0(v1, v2, v7);
  v11 = v6[7];
  v12 = v6[8];
  __swift_project_boxed_opaque_existential_1(v6 + 4, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 200))(v11, v12);
  if (v14)
  {
    v15 = (void *)sub_1C2CFDD34();
    v13 = swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_157_2(v13, sel_setOriginatingDeviceName_);

  sub_1C2B30AFC(v16 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_homeInfo, v17);
  v18 = sub_1C2CFD398();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v17, 1, v18);
  v20 = *(_QWORD *)(v0 + 24);
  if (EnumTagSinglePayload == 1)
  {
    v21 = sub_1C2B30D28(*(_QWORD *)(v0 + 24));
LABEL_8:
    v24 = 0;
    goto LABEL_9;
  }
  sub_1C2CFD38C();
  v23 = v22;
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v20, v18);
  if (!v23)
    goto LABEL_8;
  v24 = (void *)sub_1C2CFDD34();
  v21 = swift_bridgeObjectRelease();
LABEL_9:
  v25 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_157_2(v21, sel_setHomeId_);

  v26 = (_QWORD *)(v25 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_aceService);
  v27 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_aceService + 24);
  v28 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_aceService + 32);
  __swift_project_boxed_opaque_existential_1(v26, v27);
  AceServiceInvokerAsync.submitAndForget(_:)((uint64_t)v7, v27, v28);

  OUTLINED_FUNCTION_20_61();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2B309EC()
{
  uint64_t v0;
  _BYTE v2[40];

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  v0 = qword_1ED7A4228;
  qword_1EF7990B8 = type metadata accessor for RefreshableDeviceState();
  unk_1EF7990C0 = &protocol witness table for RefreshableDeviceState;
  qword_1EF7990A0 = v0;
  return sub_1C2CFD350();
}

uint64_t sub_1C2B30A78()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798F00);
  __swift_allocate_value_buffer(v0, qword_1EF7990C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF7990C8);
  sub_1C2CFCF84();
  sub_1C2CFCF78();
  sub_1C2CFCF24();
  swift_release();
  sub_1C2CFD590();
  return swift_release();
}

uint64_t sub_1C2B30AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B30B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B30B8C()
{
  uint64_t v0;
  _BYTE v2[40];

  if (qword_1ED7A4220 != -1)
    swift_once();
  sub_1C28C73A4((uint64_t)v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  v0 = qword_1ED7AA050;
  qword_1EF7990F8 = type metadata accessor for RefreshableAceServiceInvoker();
  unk_1EF799100 = &protocol witness table for RefreshableAceServiceInvoker;
  qword_1EF7990E0 = v0;
  return sub_1C2CFD350();
}

void sub_1C2B30C18()
{
  qword_1EF799120 = (uint64_t)&type metadata for FeatureFlagDefinitions.PersonalDomains;
  unk_1EF799128 = &off_1E7C83230;
  byte_1EF799108 = 0;
}

uint64_t PostPersonalDomainActivityNotificationFlow.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  sub_1C2B30D28(v0 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_homeInfo);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_aceService);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag);
  return v0;
}

uint64_t PostPersonalDomainActivityNotificationFlow.__deallocating_deinit()
{
  PostPersonalDomainActivityNotificationFlow.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B30CB4()
{
  return sub_1C2B303FC();
}

uint64_t sub_1C2B30CD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28CCD60;
  return sub_1C2B30400(a1);
}

uint64_t sub_1C2B30D28(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF798F00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C2B30D68(uint64_t a1)
{
  unint64_t result;

  result = sub_1C2B30D8C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2B30D8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF799170;
  if (!qword_1EF799170)
  {
    v1 = type metadata accessor for PostPersonalDomainActivityNotificationFlow();
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for PostPersonalDomainActivityNotificationFlow, v1);
    atomic_store(result, (unint64_t *)&qword_1EF799170);
  }
  return result;
}

uint64_t type metadata accessor for PostPersonalDomainActivityNotificationFlow()
{
  uint64_t result;

  result = qword_1EF7991F8;
  if (!qword_1EF7991F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  OUTLINED_FUNCTION_148(v3, (uint64_t)sub_1C2B31114);
  v4 = OUTLINED_FUNCTION_149_1();
  return v6(v4);
}

uint64_t sub_1C2B30E70()
{
  return type metadata accessor for PostPersonalDomainActivityNotificationFlow();
}

void sub_1C2B30E78()
{
  unint64_t v0;

  sub_1C2B30F9C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for PostPersonalDomainActivityNotificationFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.__allocating_init(strategy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.__allocating_init(notificationBodyProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.execute()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 168) + *(_QWORD *)(*(_QWORD *)v1 + 168));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C28CC838;
  return v6(a1);
}

void sub_1C2B30F9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF799210)
  {
    sub_1C2CFD398();
    v0 = sub_1C2CFE478();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF799210);
  }
}

void sub_1C2B30FF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C2CFDD34();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setNotificationBody_, v4);

}

uint64_t sub_1C2B31040(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2B300D8(a1, *(_QWORD **)(v1 + 16));
}

uint64_t objectdestroy_15Tm_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7992E8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C2B310B8(uint64_t a1, uint64_t a2, char a3)
{
  char v3;
  void *v4;
  uint64_t v5;

  v3 = a3 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7992E8);
  v4 = (void *)OUTLINED_FUNCTION_149_1();
  return sub_1C2B301D8(v4, v5, v3);
}

uint64_t OUTLINED_FUNCTION_7_72(uint64_t a1)
{
  uint64_t v1;

  return sub_1C28B9A04(a1, v1 - 88);
}

uint64_t OUTLINED_FUNCTION_9_73(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C28B99EC((__int128 *)(v2 - 88), a2);
}

uint64_t OUTLINED_FUNCTION_18_52@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1C2B30B44(v2, v1 + a1);
}

uint64_t OUTLINED_FUNCTION_20_61()
{
  return swift_task_dealloc();
}

BOOL static PrepareResponseType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PrepareResponseType.hash(into:)()
{
  return sub_1C2CFEAC0();
}

uint64_t PrepareResponseType.hashValue.getter()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  return sub_1C2CFEAD8();
}

void static PrepareResponse.ongoing<A>(next:)(uint64_t a1@<X8>)
{
  sub_1C2B312BC(0, a1);
}

void static PrepareResponse.ongoing<A>(next:childCompletion:)(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  Flow.eraseToAnyFlow()();
  v3 = v2;
  type metadata accessor for AnyChildCompletion();
  swift_getAssociatedTypeWitness();
  sub_1C2CFD350();
  AnyChildCompletion.__allocating_init<A>(_:)();
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v4;
}

void static PrepareResponse.complete()(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
}

void static PrepareResponse.complete<A>(next:)(uint64_t a1@<X8>)
{
  sub_1C2B312BC(1, a1);
}

void sub_1C2B312BC(char a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t v4;

  Flow.eraseToAnyFlow()();
  *(_BYTE *)a2 = a1;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
}

unint64_t sub_1C2B31308()
{
  unint64_t result;

  result = qword_1EF7992F0;
  if (!qword_1EF7992F0)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for PrepareResponseType, &type metadata for PrepareResponseType);
    atomic_store(result, (unint64_t *)&qword_1EF7992F0);
  }
  return result;
}

uint64_t dispatch thunk of PreparableFlow.prepare(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t storeEnumTagSinglePayload for PrepareResponseType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C2B31398 + 4 * byte_1C2D15335[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C2B313CC + 4 * byte_1C2D15330[v4]))();
}

uint64_t sub_1C2B313CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B313D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2B313DCLL);
  return result;
}

uint64_t sub_1C2B313E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2B313F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C2B313F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B313FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t assignWithCopy for PrepareResponse(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1C2CFD350();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1C2CFD350();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PrepareResponse(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrepareResponse(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrepareResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void ResponseComponents.init(dialog:_:)(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)(a3 + 104) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 8) = 0u;
  *(_QWORD *)a3 = a1;
  a2(a3);
  OUTLINED_FUNCTION_1_0();
}

id static PresentationElements.responseFrameworkPattern(patternExecutionResult:)@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = a1;
  *(_BYTE *)(a2 + 120) = 1;
  return a1;
}

uint64_t ResponseComponents.dialog.getter()
{
  return swift_bridgeObjectRetain();
}

void ResponseComponents.dialog.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ResponseComponents.dialog.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResponseComponents.resultModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C2B3160C(v1 + 8, a1);
}

uint64_t sub_1C2B3160C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7872C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ResponseComponents.resultModel.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2B3165C(a1, v1 + 8);
}

uint64_t sub_1C2B3165C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7872C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ResponseComponents.resultModel.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResponseComponents.conversationModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C2B3160C(v1 + 48, a1);
}

uint64_t ResponseComponents.conversationModel.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2B3165C(a1, v1 + 48);
}

uint64_t (*ResponseComponents.conversationModel.modify())(_QWORD)
{
  return nullsub_1;
}

void ResponseComponents.viewId.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
}

void ResponseComponents.viewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ResponseComponents.viewId.modify())(_QWORD)
{
  return nullsub_1;
}

void ResponseComponents.responseViewId.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
}

void ResponseComponents.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*ResponseComponents.responseViewId.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ResponseComponents.init(resultModel:_:)@<X0>(uint64_t a1@<X8>)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _OWORD *v5;

  *(double *)&v4 = OUTLINED_FUNCTION_12_64(a1);
  v5[3] = v4;
  v5[4] = v4;
  v5[1] = v4;
  v5[2] = v4;
  *v5 = v4;
  sub_1C28BA958((uint64_t)v5 + 8, &qword_1EF7872C0);
  OUTLINED_FUNCTION_29_39();
  v1(v3);
  return OUTLINED_FUNCTION_4_79(v2);
}

uint64_t ResponseComponents.init(conversationModel:_:)@<X0>(uint64_t a1@<X8>)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _OWORD *v5;

  *(double *)&v4 = OUTLINED_FUNCTION_12_64(a1);
  v5[4] = v4;
  v5[1] = v4;
  v5[2] = v4;
  *v5 = v4;
  v5[3] = v4;
  sub_1C28BA958((uint64_t)(v5 + 3), &qword_1EF7872C0);
  OUTLINED_FUNCTION_29_39();
  v1(v3);
  return OUTLINED_FUNCTION_4_79(v2);
}

void ResponseUpdateComponents.viewId.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_1_0();
}

uint64_t ResponseUpdateComponents.update.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C28B9A04(v1 + 16, a1);
}

uint64_t ResponseUpdateComponents.init(viewId:update:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  return sub_1C28B99EC(a3, (uint64_t)(a4 + 2));
}

void static PresentationElements.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BYTE v3[128];
  uint64_t v4;

  sub_1C293CC44(a1, (uint64_t)v3);
  sub_1C293CC44(a2, (uint64_t)&v4);
  __asm { BR              X10 }
}

uint64_t sub_1C2B318E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  id v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  void *v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  id v172;
  unint64_t v173;
  char v174;

  OUTLINED_FUNCTION_9_74(a1, a2, a3, a4, a5, a6, a7, a8, v68, v71, v73, v75, v77, v79, v81, v83, v85, v87, v89,
    v91,
    v93,
    v95,
    v97,
    v99,
    v101,
    v103,
    v105,
    v107,
    v109,
    v111,
    v113,
    v115,
    v117,
    v119,
    v121,
    v123,
    v125,
    v127,
    v129,
    v131,
    v133,
    v135,
    v137,
    v139,
    v141,
    v143,
    v145,
    v147,
    v149,
    v151,
    v153,
    v155,
    v157,
    v159,
    v161,
    v163,
    v165,
    v167,
    v169,
    v171);
  v10 = v140;
  if (!v174)
  {
    v12 = v172;
    v13 = v173;
    v14 = objc_msgSend(v140, sel_catId);
    sub_1C2CFDD58();
    OUTLINED_FUNCTION_22_55();
    v15 = objc_msgSend(v172, sel_catId);
    v16 = sub_1C2CFDD58();
    v18 = v17;

    if (v9 == v16 && v8 == v18)
    {
      v21 = swift_bridgeObjectRelease_n();
    }
    else
    {
      v20 = OUTLINED_FUNCTION_42_0();
      swift_bridgeObjectRelease();
      v21 = OUTLINED_FUNCTION_34_1();
      if ((v20 & 1) == 0)
      {
LABEL_19:

        OUTLINED_FUNCTION_53_1();
        v34 = OUTLINED_FUNCTION_70();
LABEL_20:
        OUTLINED_FUNCTION_34_41(v34, v35, v36, v37, v38, v39, v40, v41, (uint64_t)v69, (uint64_t)v72, v74, v76, v78, v80, v82, v84, v86, v88, v90,
          v92,
          v94,
          v96,
          v98,
          v100,
          v102,
          v104,
          v106,
          v108,
          v110,
          v112,
          v114,
          v116,
          v118,
          v120,
          v122,
          v124,
          v126,
          v128,
          v130,
          v132,
          v134,
          v136,
          v138,
          (uint64_t)v140,
          v142,
          v144,
          v146,
          v148,
          v150,
          v152,
          v154,
          v156,
          v158,
          v160,
          v162,
          v164,
          v166,
          v168,
          v170,
          v171);
        goto LABEL_3;
      }
    }
    v30 = v142 >> 62;
    if (v142 >> 62)
      goto LABEL_49;
    v31 = *(_QWORD *)((v142 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        v32 = sub_1C2CFE820();
        v21 = OUTLINED_FUNCTION_53_1();
      }
      else
      {
        v32 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v31 != v32)
        goto LABEL_19;
      v76 = v13;
      v69 = v12;
      v72 = v10;
      if (v30)
      {
        OUTLINED_FUNCTION_14_69();
        v33 = sub_1C2CFE820();
        v21 = OUTLINED_FUNCTION_70();
      }
      else
      {
        v33 = *(_QWORD *)((v142 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (!v33)
      {
LABEL_44:
        OUTLINED_FUNCTION_15_57(v21, v22, v23, v24, v25, v26, v27, v28, v69);
        OUTLINED_FUNCTION_70();
        swift_bridgeObjectRelease();

        OUTLINED_FUNCTION_34_41(v60, v61, v62, v63, v64, v65, v66, v67, v70, (uint64_t)v72, v74, v76, v78, v80, v82, v84, v86, v88, v90,
          v92,
          v94,
          v96,
          v98,
          v100,
          v102,
          v104,
          v106,
          v108,
          v110,
          v112,
          v114,
          v116,
          v118,
          v120,
          v122,
          v124,
          v126,
          v128,
          v130,
          v132,
          v134,
          v136,
          v138,
          (uint64_t)v140,
          v142,
          v144,
          v146,
          v148,
          v150,
          v152,
          v154,
          v156,
          v158,
          v160,
          v162,
          v164,
          v166,
          v168,
          v170,
          v171);
        v11 = 1;
        return v11 & 1;
      }
      v12 = (id)(v142 & 0xC000000000000001);
      v13 &= 0xC000000000000001;
      v74 = v76 & 0xFFFFFFFFFFFFFF8;
      v30 = 4;
      while (1)
      {
        v42 = v30 - 4;
        v43 = v12 ? (id)MEMORY[0x1C3BC9170](v30 - 4, v142) : *(id *)(v142 + 8 * v30);
        v10 = (void *)(v30 - 3);
        if (__OFADD__(v42, 1))
          break;
        v44 = v43;
        v45 = sub_1C2B32CB0(v44);
        v47 = v46;
        if (v13)
        {
          v48 = (id)MEMORY[0x1C3BC9170](v30 - 4, v76);
        }
        else
        {
          if (v42 >= *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_48;
          v48 = *(id *)(v76 + 8 * v30);
        }
        v49 = sub_1C2B32CB0(v48);
        v57 = v50;
        if (v47)
        {
          if (!v50)
          {
            OUTLINED_FUNCTION_15_57(v49, 0, v51, v52, v53, v54, v55, v56, v69);
            OUTLINED_FUNCTION_70();

            goto LABEL_46;
          }
          if (v45 == v49 && v47 == v50)
          {
            OUTLINED_FUNCTION_34_1();
            swift_bridgeObjectRelease();

          }
          else
          {
            v59 = OUTLINED_FUNCTION_42_0();
            OUTLINED_FUNCTION_34_1();
            swift_bridgeObjectRelease();

            if ((v59 & 1) == 0)
            {
              OUTLINED_FUNCTION_15_57(v21, v22, v23, v24, v25, v26, v27, v28, v69);
LABEL_46:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              goto LABEL_20;
            }
          }
        }
        else
        {

          if (v57)
          {
            OUTLINED_FUNCTION_15_57(v21, v22, v23, v24, v25, v26, v27, v28, v69);
            OUTLINED_FUNCTION_70();
            goto LABEL_46;
          }
        }
        ++v30;
        if (v10 == (void *)v33)
          goto LABEL_44;
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      OUTLINED_FUNCTION_14_69();
      v31 = sub_1C2CFE820();
      v21 = OUTLINED_FUNCTION_70();
    }
  }

  OUTLINED_FUNCTION_70();
  sub_1C28BA958((uint64_t)&v171, &qword_1EF799300);
LABEL_3:
  v11 = 0;
  return v11 & 1;
}

uint64_t sub_1C2B31DA4(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD v53[3];
  uint64_t v54;

  v4 = a1[12];
  v5 = a2[12];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = a1[11] == a2[11] && v4 == v5;
  if (v6 || (v7 = sub_1C2CFE9DC(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = a1[14];
    v10 = a2[14];
    if (v9)
    {
      if (!v10)
        return 0;
      if (a1[13] != a2[13] || v9 != v10)
      {
        v12 = sub_1C2CFE9DC();
        result = 0;
        if ((v12 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    sub_1C2B3160C((uint64_t)(a1 + 1), (uint64_t)v53);
    if (v54)
    {
      __swift_project_boxed_opaque_existential_1(v53, v54);
      v13 = sub_1C2CFBE08();
      v15 = v14;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    }
    else
    {
      sub_1C28BA958((uint64_t)v53, &qword_1EF7872C0);
      v13 = 0;
      v15 = 0xF000000000000000;
    }
    sub_1C2B3160C((uint64_t)(a2 + 1), (uint64_t)v53);
    if (v54)
    {
      __swift_project_boxed_opaque_existential_1(v53, v54);
      v16 = sub_1C2CFBE08();
      v18 = v17;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
      if (v15 >> 60 == 15)
      {
        if (v18 >> 60 != 15)
          goto LABEL_39;
      }
      else
      {
        if (v18 >> 60 == 15)
          goto LABEL_39;
        sub_1C28C50CC(v13, v15);
        v19 = MEMORY[0x1C3BC6680](v13, v15, v16, v18);
        sub_1C28EC278(v16, v18);
        sub_1C28EC278(v13, v15);
        sub_1C28EC278(v13, v15);
        if ((v19 & 1) == 0)
          return 0;
      }
    }
    else
    {
      sub_1C28BA958((uint64_t)v53, &qword_1EF7872C0);
      if (v15 >> 60 != 15)
        goto LABEL_38;
    }
    sub_1C2B3160C((uint64_t)(a1 + 6), (uint64_t)v53);
    if (v54)
    {
      __swift_project_boxed_opaque_existential_1(v53, v54);
      v13 = sub_1C2CFBE08();
      v15 = v20;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    }
    else
    {
      sub_1C28BA958((uint64_t)v53, &qword_1EF7872C0);
      v13 = 0;
      v15 = 0xF000000000000000;
    }
    sub_1C2B3160C((uint64_t)(a2 + 6), (uint64_t)v53);
    if (v54)
    {
      __swift_project_boxed_opaque_existential_1(v53, v54);
      v16 = sub_1C2CFBE08();
      v18 = v21;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
      if (v15 >> 60 == 15)
      {
        if (v18 >> 60 == 15)
        {
LABEL_43:
          v23 = *a1;
          if (v23)
          {
            v52 = *a2;
            if (*a2)
            {
              v24 = v23 >> 62;
              if (v23 >> 62)
                goto LABEL_86;
              v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
              while (1)
              {
                if (v52 >> 62)
                {
                  swift_bridgeObjectRetain();
                  v26 = sub_1C2CFE820();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v26 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                if (v25 != v26)
                  break;
                if (v24)
                {
                  swift_bridgeObjectRetain();
                  v27 = sub_1C2CFE820();
                }
                else
                {
                  v27 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain();
                }
                if (!v27)
                {
LABEL_82:
                  swift_bridgeObjectRelease();
                  return 1;
                }
                v29 = 4;
                v51 = v27;
                while (1)
                {
                  v30 = v29 - 4;
                  v31 = (v23 & 0xC000000000000001) != 0
                      ? (id)MEMORY[0x1C3BC9170](v29 - 4, v23)
                      : *(id *)(v23 + 8 * v29);
                  v32 = v31;
                  v24 = v29 - 3;
                  if (__OFADD__(v30, 1))
                    break;
                  if ((v52 & 0xC000000000000001) != 0)
                  {
                    v33 = (id)MEMORY[0x1C3BC9170](v29 - 4, v52);
                  }
                  else
                  {
                    if (v30 >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10))
                      goto LABEL_85;
                    v33 = *(id *)(v52 + 8 * v29);
                  }
                  v34 = v33;
                  v35 = objc_msgSend(v32, sel_catId);
                  v36 = sub_1C2CFDD58();
                  v38 = v37;

                  v39 = objc_msgSend(v34, sel_catId);
                  v40 = sub_1C2CFDD58();
                  v42 = v41;

                  if (v36 == v40 && v38 == v42)
                  {
                    swift_bridgeObjectRelease_n();
                  }
                  else
                  {
                    v44 = sub_1C2CFE9DC();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v44 & 1) == 0)
                    {

                      goto LABEL_53;
                    }
                  }
                  v45 = objc_msgSend(v32, sel_dialog);
                  sub_1C2B34014();
                  v46 = sub_1C2CFDFA4();

                  if (v46 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    v47 = sub_1C2CFE820();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
                  }
                  swift_bridgeObjectRelease();
                  v48 = objc_msgSend(v34, sel_dialog);
                  v49 = sub_1C2CFDFA4();

                  if (v49 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    v50 = sub_1C2CFE820();

                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);

                  }
                  swift_bridgeObjectRelease();
                  if (v47 != v50)
                    goto LABEL_53;
                  ++v29;
                  if (v24 == v51)
                    goto LABEL_82;
                }
                __break(1u);
LABEL_85:
                __break(1u);
LABEL_86:
                swift_bridgeObjectRetain();
                v25 = sub_1C2CFE820();
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              sub_1C293CD24((uint64_t)a2, (uint64_t)v53);
              sub_1C293CCF0((uint64_t)v53);
            }
          }
          else
          {
            sub_1C293CD24((uint64_t)a2, (uint64_t)v53);
            v28 = v53[0];
            swift_bridgeObjectRetain();
            sub_1C293CCF0((uint64_t)v53);
            if (!v28)
              return 1;
LABEL_53:
            swift_bridgeObjectRelease();
          }
          return 0;
        }
      }
      else if (v18 >> 60 != 15)
      {
        sub_1C28C50CC(v13, v15);
        v22 = MEMORY[0x1C3BC6680](v13, v15, v16, v18);
        sub_1C28EC278(v16, v18);
        sub_1C28EC278(v13, v15);
        sub_1C28EC278(v13, v15);
        if ((v22 & 1) == 0)
          return 0;
        goto LABEL_43;
      }
LABEL_39:
      sub_1C28EC278(v13, v15);
      sub_1C28EC278(v16, v18);
      return 0;
    }
    sub_1C28BA958((uint64_t)v53, &qword_1EF7872C0);
    if (v15 >> 60 == 15)
      goto LABEL_43;
LABEL_38:
    v16 = 0;
    v18 = 0xF000000000000000;
    goto LABEL_39;
  }
  return result;
}

uint64_t static PresentationElements.legacy(catResult:snippets:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  sub_1C29C3E24();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = a1;
  *(_BYTE *)(a2 + 120) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t static PresentationElements.legacy(dialogExecutionResult:snippets:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v3;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 120) = 0;
  v3 = a1;
  return swift_bridgeObjectRetain();
}

void static PresentationElements.responseFramework(responseComponents:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C293CD24(a1, a2);
  *(_BYTE *)(a2 + 120) = 2;
  OUTLINED_FUNCTION_1_0();
}

void static PresentationElements.responseFrameworkUpdate(updateComponents:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2B32D1C(a1, a2);
  *(_BYTE *)(a2 + 120) = 3;
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B32530()
{
  uint64_t v0;
  _BYTE v1[128];

  sub_1C293CC44(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1C2B32568()
{
  uint64_t v1;

  sub_1C2B32C84((uint64_t)&v1);
  return 0x79636167656C2ELL;
}

uint64_t sub_1C2B32604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v10;
  *v10 = v8;
  v10[1] = sub_1C28CCD60;
  v10[2] = a8;
  return swift_task_switch();
}

uint64_t PresentationElementsProviding.makePresentationElements(responseId:catId:catParameters:visualParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 16) = a8;
  return swift_task_switch();
}

uint64_t sub_1C2B32680()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_25_46();
  sub_1C2CFE670();
  OUTLINED_FUNCTION_35_38();
  OUTLINED_FUNCTION_0_79();
  OUTLINED_FUNCTION_32_38();
  OUTLINED_FUNCTION_27_41();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_79();
  OUTLINED_FUNCTION_0_79();
  OUTLINED_FUNCTION_13_55();
  sub_1C2B32D50();
  v1 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_18_53(v1, v2);
  return OUTLINED_FUNCTION_4_78(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3271C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v9;
  *v9 = v7;
  v9[1] = sub_1C28CCD60;
  v9[2] = a7;
  return swift_task_switch();
}

uint64_t PresentationElementsProviding.makePresentationElements(responseId:patternId:patternParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 16) = a7;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B3278C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_25_46();
  sub_1C2CFE670();
  OUTLINED_FUNCTION_35_38();
  OUTLINED_FUNCTION_0_79();
  OUTLINED_FUNCTION_32_38();
  OUTLINED_FUNCTION_27_41();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_79();
  OUTLINED_FUNCTION_0_79();
  OUTLINED_FUNCTION_13_55();
  sub_1C2B32D50();
  v1 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_18_53(v1, v2);
  return OUTLINED_FUNCTION_4_78(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B32828()
{
  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  sub_1C2CFDE54();
  return 0x6D656C706D696E55;
}

uint64_t sub_1C2B328AC()
{
  return sub_1C2B32828();
}

uint64_t sub_1C2B328B4()
{
  uint64_t inited;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A72C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  strcpy((char *)(inited + 32), "responseMode");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0xE000000000000000;
  result = sub_1C2CFDC8C();
  qword_1EF7992F8 = result;
  return result;
}

uint64_t sub_1C2B32940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = v6;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B32958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_19_53();
  v2 = *(_QWORD *)(v0 + 16);
  if (qword_1EF786DF0 != -1)
    swift_once();
  v3 = qword_1EF7992F8;
  *(_QWORD *)(v1 + 56) = qword_1EF7992F8;
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v4;
  OUTLINED_FUNCTION_30_43(v4, (uint64_t)sub_1C2B329FC);
  return sub_1C29C5010(v2, v5, v6, v7, 0, v3);
}

uint64_t sub_1C2B329FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_180_0();
  *v4 = *v3;
  *(_QWORD *)(v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 80) = v0;
  }
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B32A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 120) = 0;
  return OUTLINED_FUNCTION_248();
}

uint64_t sub_1C2B32A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = v6;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B32A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_19_53();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v3;
  OUTLINED_FUNCTION_30_43(v3, (uint64_t)sub_1C2B32AE4);
  return sub_1C29C5780(v2, v4, v5, v6);
}

uint64_t sub_1C2B32AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_180_0();
  v4 = *v3;
  *v5 = v4;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  *(_QWORD *)(v2 + 64) = v0;
  return OUTLINED_FUNCTION_18_0();
}

uint64_t sub_1C2B32B48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v1 + 120) = 1;
  return OUTLINED_FUNCTION_248();
}

uint64_t sub_1C2B32B60()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B32B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_1C28CC838;
  return sub_1C2B32940(a1, v12, v13, a4, a5, a6);
}

uint64_t sub_1C2B32C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_1C28CCD60;
  return sub_1C2B32A7C(a1, v12, v13, a4, a5, a6);
}

uint64_t sub_1C2B32C84(uint64_t a1)
{
  sub_1C2B33950(a1);
  return a1;
}

uint64_t sub_1C2B32CB0(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_aceId);

  if (!v2)
    return 0;
  v3 = sub_1C2CFDD58();

  return v3;
}

uint64_t sub_1C2B32D1C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ResponseUpdateComponents(a2, a1);
  return a2;
}

unint64_t sub_1C2B32D50()
{
  unint64_t result;

  result = qword_1EF799310;
  if (!qword_1EF799310)
  {
    result = MEMORY[0x1C3BC9CD4](&unk_1C2D155EC, &type metadata for PresentationError);
    atomic_store(result, (unint64_t *)&qword_1EF799310);
  }
  return result;
}

uint64_t destroy for ResponseComponents(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  if (*(_QWORD *)(a1 + 72))
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseComponents(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = a2 + 8;
  v6 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 8, v5, v6);
  }
  else
  {
    v8 = *(_OWORD *)(v5 + 16);
    *v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(v5 + 32);
  }
  v9 = (_OWORD *)(a1 + 48);
  v10 = (_OWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 72);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v11;
    *(_QWORD *)(a1 + 80) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 64);
    *v9 = *v10;
    *(_OWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  }
  v14 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v14;
  v15 = *(_QWORD *)(a2 + 104);
  v16 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResponseComponents(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 32) = v4;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 24) = v6;
LABEL_8:
  v7 = *(_QWORD *)(a2 + 72);
  if (!*(_QWORD *)(a1 + 72))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 72) = v7;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 48, a2 + 48);
      goto LABEL_15;
    }
LABEL_14:
    v8 = *(_OWORD *)(a2 + 48);
    v9 = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 64) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
LABEL_15:
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ResponseComponents(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2 + 8;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  v5 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
  *(_OWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v4 + 32);
  if (*(_QWORD *)(a1 + 72))
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseComponents(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 120))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseComponents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for ResponseComponents()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t destroy for ResponseUpdateComponents(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for ResponseUpdateComponents(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 16;
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  return a1;
}

_QWORD *assignWithCopy for ResponseUpdateComponents(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for ResponseUpdateComponents(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseUpdateComponents(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseUpdateComponents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseUpdateComponents()
{
  OUTLINED_FUNCTION_22_2();
}

void destroy for PresentationElements(uint64_t a1)
{
  switch(*(_BYTE *)(a1 + 120))
  {
    case 0:

      goto LABEL_9;
    case 1:

      break;
    case 2:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 32))
        __swift_destroy_boxed_opaque_existential_1(a1 + 8);
      if (*(_QWORD *)(a1 + 72))
        __swift_destroy_boxed_opaque_existential_1(a1 + 48);
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      break;
    default:
      return;
  }
}

void initializeWithCopy for PresentationElements(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C2B3343C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = v2;
  *(_QWORD *)(v0 + 8) = v3;
  *(_BYTE *)(v0 + 120) = 0;
  v4 = v2;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t assignWithCopy for PresentationElements(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    sub_1C2B32C84(result);
    __asm { BR              X10 }
  }
  return result;
}

void *__swift_memcpy121_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x79uLL);
}

void *assignWithTake for PresentationElements(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1C2B32C84((uint64_t)a1);
    memcpy(a1, a2, 0x79uLL);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationElements(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 121))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 120);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationElements(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 120) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 121) = 0;
    if (a2)
      *(_BYTE *)(result + 120) = -(char)a2;
  }
  return result;
}

void type metadata accessor for PresentationElements()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t dispatch thunk of PresentationElementsProviding.makePresentationElements(responseId:catId:catParameters:visualParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v13)(uint64_t);

  OUTLINED_FUNCTION_10_71();
  v13 = (uint64_t (*)(uint64_t))(**(int **)(a9 + 8) + *(_QWORD *)(a9 + 8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v10;
  *v10 = v9;
  v10[1] = sub_1C28CC838;
  v11 = OUTLINED_FUNCTION_8_67();
  return v13(v11);
}

uint64_t dispatch thunk of PresentationElementsProviding.makePresentationElements(responseId:patternId:patternParameters:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);

  OUTLINED_FUNCTION_10_71();
  v5 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v2;
  *v2 = v0;
  v2[1] = sub_1C28CCD60;
  v3 = OUTLINED_FUNCTION_8_67();
  return v5(v3);
}

uint64_t type metadata accessor for SiriKitDefaultPresentationElementsProvider()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for PresentationError()
{
  return &type metadata for PresentationError;
}

void sub_1C2B33950(uint64_t a1)
{
  int v2;

  v2 = *(unsigned __int8 *)(a1 + 120);
  while (2)
  {
    switch(v2)
    {
      case 0:

        goto LABEL_11;
      case 1:

        return;
      case 2:
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 32))
          __swift_destroy_boxed_opaque_existential_1(a1 + 8);
        if (*(_QWORD *)(a1 + 72))
          __swift_destroy_boxed_opaque_existential_1(a1 + 48);
        swift_bridgeObjectRelease();
LABEL_11:
        swift_bridgeObjectRelease();
        break;
      case 3:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
        break;
      default:
        v2 = *(_DWORD *)a1 + 4;
        continue;
    }
    break;
  }
}

uint64_t sub_1C2B33A08(uint64_t a1, uint64_t a2)
{
  int v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(unsigned __int8 *)(a2 + 120);
  while (2)
  {
    switch(v4)
    {
      case 0:
        v5 = *(void **)a2;
        v6 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v6;
        *(_BYTE *)(a1 + 120) = 0;
        v7 = v5;
        goto LABEL_14;
      case 1:
        v8 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 120) = 1;
        v9 = v8;
        return a1;
      case 2:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = (_OWORD *)(a2 + 8);
        v11 = *(_QWORD *)(a2 + 32);
        swift_bridgeObjectRetain();
        if (v11)
        {
          v12 = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 32) = v11;
          *(_QWORD *)(a1 + 40) = v12;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 8, a2 + 8, v11);
        }
        else
        {
          v18 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 8) = *v10;
          *(_OWORD *)(a1 + 24) = v18;
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        }
        v19 = (_OWORD *)(a1 + 48);
        v20 = (_OWORD *)(a2 + 48);
        v21 = *(_QWORD *)(a2 + 72);
        if (v21)
        {
          v22 = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 72) = v21;
          *(_QWORD *)(a1 + 80) = v22;
          (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v19, v20);
        }
        else
        {
          v23 = *(_OWORD *)(a2 + 64);
          *v19 = *v20;
          *(_OWORD *)(a1 + 64) = v23;
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        }
        v24 = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = v24;
        v25 = *(_QWORD *)(a2 + 104);
        v26 = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 104) = v25;
        *(_QWORD *)(a1 + 112) = v26;
        *(_BYTE *)(a1 + 120) = 2;
        swift_bridgeObjectRetain();
LABEL_14:
        swift_bridgeObjectRetain();
        break;
      case 3:
        v13 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v13;
        v14 = a2 + 16;
        v15 = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 40) = v15;
        v16 = v15;
        v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
        swift_bridgeObjectRetain();
        v17(a1 + 16, v14, v16);
        *(_BYTE *)(a1 + 120) = 3;
        break;
      default:
        v4 = *(_DWORD *)a2 + 4;
        continue;
    }
    return a1;
  }
}

uint64_t sub_1C2B33B88(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  __int128 *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 120);
    while (2)
    {
      switch(v4)
      {
        case 0:

          goto LABEL_12;
        case 1:

          break;
        case 2:
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 32))
            __swift_destroy_boxed_opaque_existential_1(a1 + 8);
          if (*(_QWORD *)(a1 + 72))
            __swift_destroy_boxed_opaque_existential_1(a1 + 48);
          swift_bridgeObjectRelease();
LABEL_12:
          swift_bridgeObjectRelease();
          break;
        case 3:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(a1 + 16);
          break;
        default:
          v4 = *(_DWORD *)a1 + 4;
          continue;
      }
      break;
    }
    v5 = *(unsigned __int8 *)(a2 + 120);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_BYTE *)(a1 + 120) = 0;
          v7 = v6;
          goto LABEL_27;
        case 1:
          v8 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_BYTE *)(a1 + 120) = 1;
          v9 = v8;
          return a1;
        case 2:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v10 = *(_QWORD *)(a2 + 32);
          swift_bridgeObjectRetain();
          if (v10)
          {
            *(_QWORD *)(a1 + 32) = v10;
            *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 8, a2 + 8, v10);
          }
          else
          {
            v14 = *(_OWORD *)(a2 + 8);
            v15 = *(_OWORD *)(a2 + 24);
            *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
            *(_OWORD *)(a1 + 8) = v14;
            *(_OWORD *)(a1 + 24) = v15;
          }
          v16 = (_OWORD *)(a1 + 48);
          v17 = (__int128 *)(a2 + 48);
          v18 = *(_QWORD *)(a2 + 72);
          if (v18)
          {
            *(_QWORD *)(a1 + 72) = v18;
            *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
            (**(void (***)(_OWORD *, __int128 *))(v18 - 8))(v16, v17);
          }
          else
          {
            v19 = *v17;
            v20 = *(_OWORD *)(a2 + 64);
            *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
            *v16 = v19;
            *(_OWORD *)(a1 + 64) = v20;
          }
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
          *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
          *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
          *(_BYTE *)(a1 + 120) = 2;
          swift_bridgeObjectRetain();
LABEL_27:
          swift_bridgeObjectRetain();
          break;
        case 3:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v11 = a2 + 16;
          v12 = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 40) = v12;
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
          swift_bridgeObjectRetain();
          v13(a1 + 16, v11, v12);
          *(_BYTE *)(a1 + 120) = 3;
          break;
        default:
          v5 = *(_DWORD *)a2 + 4;
          continue;
      }
      break;
    }
  }
  return a1;
}

uint64_t sub_1C2B33DD4(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 120);
    while (2)
    {
      switch(v4)
      {
        case 0:

          goto LABEL_12;
        case 1:

          break;
        case 2:
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 32))
            __swift_destroy_boxed_opaque_existential_1(a1 + 8);
          if (*(_QWORD *)(a1 + 72))
            __swift_destroy_boxed_opaque_existential_1(a1 + 48);
          swift_bridgeObjectRelease();
LABEL_12:
          swift_bridgeObjectRelease();
          break;
        case 3:
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(a1 + 16);
          break;
        default:
          v4 = *(_DWORD *)a1 + 4;
          continue;
      }
      break;
    }
    v5 = *(unsigned __int8 *)(a2 + 120);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = 0;
          *(_OWORD *)a1 = *(_OWORD *)a2;
          break;
        case 1:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v6 = 1;
          break;
        case 2:
          memcpy((void *)a1, (const void *)a2, 0x78uLL);
          v6 = 2;
          break;
        case 3:
          v7 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v7;
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          v6 = 3;
          break;
        default:
          v5 = *(_DWORD *)a2 + 4;
          continue;
      }
      break;
    }
    *(_BYTE *)(a1 + 120) = v6;
  }
  return a1;
}

uint64_t sub_1C2B33F20(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 121))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 120);
  if (v3 >= 4)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1C2B33F5C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 105) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 121) = 0;
    if (a2)
      *(_BYTE *)(result + 120) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C2B33FB4(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 120);
  if (result >= 4)
    return (*(_DWORD *)a1 + 4);
  return result;
}

uint64_t sub_1C2B33FD0(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 3)
  {
    v2 = a2 - 4;
    *(_QWORD *)(result + 112) = 0;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    LOBYTE(a2) = 4;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 120) = a2;
  return result;
}

void type metadata accessor for PresentationElements.PresentationElementsBase()
{
  OUTLINED_FUNCTION_22_2();
}

unint64_t sub_1C2B34014()
{
  unint64_t result;

  result = qword_1EF78C178;
  if (!qword_1EF78C178)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF78C178);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_79()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_4_79(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t OUTLINED_FUNCTION_8_67()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  return sub_1C293CC44((uint64_t)&a60, (uint64_t)&a44);
}

double OUTLINED_FUNCTION_12_64@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 112) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_55()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_14_69()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_15_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

}

uint64_t OUTLINED_FUNCTION_18_53(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

_QWORD *OUTLINED_FUNCTION_19_53()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 48) + 24), *(_QWORD *)(*(_QWORD *)(v0 + 48) + 48));
}

void OUTLINED_FUNCTION_22_55()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_27_41()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_29_39()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C28B9A04(v0, v1);
}

_QWORD *OUTLINED_FUNCTION_30_43@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_38()
{
  return sub_1C2CFEB50();
}

uint64_t OUTLINED_FUNCTION_34_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  return sub_1C2B32C84((uint64_t)&a60);
}

void Prompt.__allocating_init(for:interpreter:)()
{
  __int128 *v0;
  __int128 *v1;

  swift_allocObject();
  v0 = (__int128 *)OUTLINED_FUNCTION_149_1();
  Prompt.init(for:interpreter:)(v0, v1);
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2B341D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v5 = sub_1C29EB49C((uint64_t)sub_1C2B3811C, v4);
  swift_release();
  swift_release();
  return v5;
}

unint64_t sub_1C2B34254(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  OUTLINED_FUNCTION_21_0();
  v3 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 72) = a1;
  return sub_1C2ABBA24(v3);
}

uint64_t sub_1C2B34294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return swift_release();
}

uint64_t sub_1C2B342A4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28CCD60;
  return PromptProviding.segue()();
}

uint64_t PromptProviding.segue()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_88_1();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t sub_1C2B34350()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28CC838;
  return PromptProviding.repromptOnEmptyParse()();
}

uint64_t PromptProviding.repromptOnEmptyParse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_88_1();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t sub_1C2B343FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28CCD60;
  return PromptProviding.repromptOnLowConfidence()(a1);
}

uint64_t PromptProviding.repromptOnLowConfidence()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_86(v3);
  *v4 = v1;
  v4[1] = sub_1C28CCD60;
  return sub_1C2A18600(a1);
}

void sub_1C2B34498(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_39_31();
  OUTLINED_FUNCTION_21_0();
  v6 = type metadata accessor for Prompt.State(0, *(_QWORD *)(v2 + 80), v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v1, v6);
  OUTLINED_FUNCTION_21_1();
}

void sub_1C2B344E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_39_31();
  OUTLINED_FUNCTION_21_0();
  v6 = type metadata accessor for Prompt.State(0, *(_QWORD *)(v2 + 80), v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(v1, a1, v6);
  swift_endAccess();
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_1C2B34540()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  OUTLINED_FUNCTION_38_0();
  return v1;
}

uint64_t sub_1C2B34574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  *v3 = a1;
  v3[1] = a2;
  return swift_release();
}

void Prompt.init(for:interpreter:)(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  *v4 = nullsub_1;
  v4[1] = 0;
  sub_1C28B99EC(a1, v2 + 16);
  sub_1C28B99EC(a2, v2 + 56);
  v5 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 104);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v6 = OUTLINED_FUNCTION_50_25();
  __swift_storeEnumTagSinglePayload(v5, 1, 3, v6);
  OUTLINED_FUNCTION_18();
}

void Prompt.accept(input:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int EnumTagSinglePayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *EnumCaseMultiPayload;
  uint64_t v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v5 = v2;
  v78 = a1;
  v7 = *v2;
  v74 = type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_79_5();
  v73 = v10;
  v11 = *(_QWORD *)(v7 + 80);
  v12 = OUTLINED_FUNCTION_51_25();
  v16 = type metadata accessor for Prompt.Event(v12, v13, v14, v15);
  v76 = *(_QWORD *)(v16 - 8);
  v77 = v16;
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v17, v18);
  v75 = (uint64_t *)((char *)&v70 - v19);
  v20 = OUTLINED_FUNCTION_51_25();
  v24 = type metadata accessor for Interpretable(v20, v21, v22, v23);
  v71 = *(_QWORD *)(v24 - 8);
  v72 = v24;
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v25, v26);
  OUTLINED_FUNCTION_33_36();
  v27 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (char *)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = OUTLINED_FUNCTION_51_25();
  v36 = type metadata accessor for Prompt.State(v32, v33, v34, v35);
  v37 = *(_QWORD *)(v36 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v38, v39);
  OUTLINED_FUNCTION_23_55(v40, v70);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  OUTLINED_FUNCTION_51_25();
  v41 = sub_1C2CFEAF0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 3, v41);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v4, v36);
  if (EnumTagSinglePayload != 3)
    goto LABEL_24;
  v43 = v5[10];
  v44 = v5[11];
  __swift_project_boxed_opaque_existential_1(v5 + 7, v43);
  v45 = v78;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v78, v43, v44);
  v46 = (uint64_t)v5;
  if (__swift_getEnumTagSinglePayload(v3, 1, v11) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v31, v3, v11);
    v54 = (char *)v75;
    (*(void (**)(uint64_t *, char *, uint64_t))(v27 + 16))(v75, v31, v11);
    OUTLINED_FUNCTION_54_2();
    sub_1C2B355C4(v54);
    OUTLINED_FUNCTION_116_5(*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8));
    v55 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v56 = (uint64_t)v31;
    v57 = v11;
LABEL_10:
    v55(v56, v57);
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
LABEL_25:
    *(_BYTE *)(a2 + 40) = 2;
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v3, v72);
  v47 = type metadata accessor for Input(0);
  v48 = v73;
  sub_1C2A15858(v45 + *(int *)(v47 + 20), v73);
  EnumCaseMultiPayload = (void *)swift_getEnumCaseMultiPayload();
  sub_1C28E05E4(v48, type metadata accessor for Parse);
  if ((_DWORD)EnumCaseMultiPayload != 8)
  {
    sub_1C2B5EA0C();
    if ((v58 & 1) != 0)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v59 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v59, (uint64_t)qword_1ED7AA1B0);
      v60 = OUTLINED_FUNCTION_73_0();
      if (OUTLINED_FUNCTION_48_7(v60))
      {
        *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
        OUTLINED_FUNCTION_10_62(&dword_1C28B6000, v61, v62, "Prompt received received low confidence input. Treating as misunderstood and will re-prompt.");
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_38_37();
      OUTLINED_FUNCTION_19_54();
      sub_1C2AA12B0((uint64_t)&unk_1EF799438, v46);
      OUTLINED_FUNCTION_41_32();
      OUTLINED_FUNCTION_59_29((uint64_t)sub_1C2B35DB8);
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_56_24();
      OUTLINED_FUNCTION_38_0();
      goto LABEL_17;
    }
    if ((sub_1C2B17E7C() & 1) != 0)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v64 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v64, (uint64_t)qword_1ED7AA1B0);
      v65 = OUTLINED_FUNCTION_73_0();
      if (OUTLINED_FUNCTION_48_7(v65))
      {
        *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
        OUTLINED_FUNCTION_10_62(&dword_1C28B6000, v66, v67, "Prompt received user cancellation.");
        OUTLINED_FUNCTION_11_0();
      }

      sub_1C29E8F60();
      v68 = swift_allocError();
      v69 = (char *)v75;
      *v75 = v68;
      OUTLINED_FUNCTION_262();
      sub_1C2B355C4(v69);
      v56 = OUTLINED_FUNCTION_149_1();
      goto LABEL_10;
    }
LABEL_24:
    *(_QWORD *)a2 = 1;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    goto LABEL_25;
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v50 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v50, (uint64_t)qword_1ED7AA1B0);
  v51 = OUTLINED_FUNCTION_73_0();
  if (OUTLINED_FUNCTION_48_7(v51))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
    OUTLINED_FUNCTION_10_62(&dword_1C28B6000, v52, v53, "Prompt received empty parse. Will re-prompt.");
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_38_37();
  OUTLINED_FUNCTION_19_54();
  sub_1C2AA12B0((uint64_t)&unk_1EF799448, v46);
  OUTLINED_FUNCTION_41_32();
  OUTLINED_FUNCTION_59_29((uint64_t)sub_1C2B35DB8);
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_56_24();
  OUTLINED_FUNCTION_38_0();
LABEL_17:
  v63 = sub_1C29EB5BC((uint64_t)sub_1C2B35DD0, v46);
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_16_1();
  *(_QWORD *)(a2 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78D058);
  *(_QWORD *)(a2 + 32) = sub_1C2AA1F60();
  sub_1C2CFD350();
  sub_1C2B34254(1);
  *(_QWORD *)a2 = v63;
  *(_BYTE *)(a2 + 40) = 1;
  swift_release();
LABEL_26:
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for Prompt.Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Prompt.Event);
}

uint64_t type metadata accessor for Interpretable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Interpretable);
}

uint64_t type metadata accessor for Prompt.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Prompt.State);
}

uint64_t sub_1C2B34B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B34B90()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_7_73();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_4_80(v1);
  return OUTLINED_FUNCTION_1_64(v2, v3, v4, v5);
}

uint64_t sub_1C2B34BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B34BE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_7_73();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_4_80(v1);
  return OUTLINED_FUNCTION_1_64(v2, v3, v4, v5);
}

uint64_t sub_1C2B34C20()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C2B34C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v11;

  OUTLINED_FUNCTION_29_40(a1, a2, a3, a4);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v11 - v6;
  sub_1C2B35BA4();
  OUTLINED_FUNCTION_149_1();
  swift_storeEnumTagMultiPayload();
  sub_1C2B355C4(v7);
  v8 = OUTLINED_FUNCTION_149_1();
  return v9(v8);
}

void Prompt.action.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v3 = sub_1C2CFEAF0();
  type metadata accessor for Conclude(0, v3, v4, v5);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v6, v7);
  v20 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v8, v9);
  type metadata accessor for Yield(0);
  OUTLINED_FUNCTION_9_2();
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  MEMORY[0x1E0C80A78](v12, v13);
  type metadata accessor for Prompt.State(0, v2, v14, v15);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_23_55(v18, v20);
  v19 = (char *)sub_1C2B34E20 + 4 * byte_1C2D15640[__swift_getEnumTagSinglePayload(v1, 3, v3)];
  __asm { BR              X10 }
}

void sub_1C2B34E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;

  v5 = *(_QWORD *)(v4 - 192);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v1, v0);
  v10 = OUTLINED_FUNCTION_49_20(v6, v7, v8, v9);
  MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for Prompt<A>, v10);
  ActingFlow.conclude(with:)(v3, v2);
  v11 = *(_QWORD *)(v4 - 176);
  *(_QWORD *)(v4 - 96) = v11;
  *(_QWORD *)(v4 - 88) = &protocol witness table for Conclude<A>;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v4 - 120));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 184) + 32))(boxed_opaque_existential_0, v2, v11);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v0);
  sub_1C28B99EC((__int128 *)(v4 - 120), *(_QWORD *)(v4 - 168));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2B350F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B35108()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_7_73();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_4_80(v1);
  return OUTLINED_FUNCTION_1_64(v2, v3, v4, v5);
}

uint64_t sub_1C2B35144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B3515C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_7_73();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_4_80(v1);
  return OUTLINED_FUNCTION_1_64(v2, v3, v4, v5);
}

void sub_1C2B35198()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v0 = sub_1C2CFD878();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED7AA1B0);
  oslog = sub_1C2CFD86C();
  v1 = sub_1C2CFE2A4();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_1C28B6000, oslog, v1, "Prompt segue.", v2, 2u);
    MEMORY[0x1C3BC9DE8](v2, -1, -1);
  }

}

void sub_1C2B35264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(OUTLINED_FUNCTION_29_40(a1, a2, a3, a4) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_33_36();
  swift_storeEnumTagMultiPayload();
  sub_1C2B355C4(v4);
  OUTLINED_FUNCTION_116_5(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B352CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = *(_QWORD *)(type metadata accessor for Prompt.Event(0, *(_QWORD *)(*(_QWORD *)a2 + 80), a3, a4) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_33_36();
  *(_QWORD *)v4 = a1;
  OUTLINED_FUNCTION_262();
  v9 = a1;
  sub_1C2B355C4(v4);
  OUTLINED_FUNCTION_116_5(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B3534C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C2CFD350();
  v0 = OUTLINED_FUNCTION_149_1();
  sub_1C2B34574(v0, v1);
  return sub_1C2CFD350();
}

void sub_1C2B35388(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, v1);
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_60_19(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v4 = OUTLINED_FUNCTION_50_25();
  v5 = (char *)sub_1C2B35424 + 4 * byte_1C2D15644[__swift_getEnumTagSinglePayload(v1, 3, v4)];
  __asm { BR              X10 }
}

void sub_1C2B35424()
{
  uint64_t v0;

  OUTLINED_FUNCTION_61_21(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_18();
}

void sub_1C2B35480(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, v1);
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_60_19(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  v4 = (char *)sub_1C2B35500 + 4 * byte_1C2D15648[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1C2B35500()
{
  uint64_t v0;

  OUTLINED_FUNCTION_61_21(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_18();
}

void sub_1C2B355C4(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  os_log_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t TupleTypeMetadata2;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79[2];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v69 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_79_5();
  v67 = v6;
  v9 = type metadata accessor for Prompt.State(255, v3, v7, v8);
  v12 = type metadata accessor for Prompt.Event(255, v3, v10, v11);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v70 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  OUTLINED_FUNCTION_4_14();
  MEMORY[0x1E0C80A78](v13, v14);
  v16 = (char *)&v60 - v15;
  v17 = v9;
  v75 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_2_2();
  v73 = v20;
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  v25 = (char *)&v60 - v24;
  v26 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v23, v27);
  OUTLINED_FUNCTION_2_2();
  v68 = v28;
  v31 = MEMORY[0x1E0C80A78](v29, v30);
  v72 = (char *)&v60 - v32;
  MEMORY[0x1E0C80A78](v31, v33);
  v35 = (char *)&v60 - v34;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v36 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v36, (uint64_t)qword_1ED7AA1B0);
  v37 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v74 = a1;
  v77 = v37;
  v37(v35, a1, v12);
  sub_1C2CFD350();
  v38 = sub_1C2CFD86C();
  v39 = sub_1C2CFE2A4();
  v40 = v39;
  if (os_log_type_enabled(v38, v39))
  {
    v41 = OUTLINED_FUNCTION_6_0();
    v65 = v16;
    v42 = v41;
    v63 = OUTLINED_FUNCTION_6_0();
    v79[0] = v63;
    *(_DWORD *)v42 = 136315394;
    v71 = (void (*)(uint64_t))(v42 + 4);
    v62 = v40;
    v61 = v38;
    sub_1C2B34498((uint64_t)v25);
    sub_1C2B35388(v17);
    v44 = v43;
    v64 = v3;
    v46 = v45;
    (*(void (**)(char *, uint64_t))(v75 + 8))(v25, v17);
    v78 = sub_1C28BB120(v44, v46, v79);
    v66 = v25;
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_36_0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    v60 = v42 + 14;
    v47 = v72;
    v77(v72, v35, v12);
    v48 = *(void (**)(uint64_t))(v26 + 8);
    v49 = OUTLINED_FUNCTION_149_1();
    v48(v49);
    sub_1C2B35480(v12);
    v51 = v50;
    v53 = v52;
    v71 = v48;
    ((void (*)(char *, uint64_t))v48)(v47, v12);
    v78 = sub_1C28BB120(v51, v53, v79);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C28B6000, v61, (os_log_type_t)v62, "Prompt.handle() state: %s event: %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }
  v54 = OUTLINED_FUNCTION_149_1();
  v71 = v55;
  v55(v54);

  swift_release();
  v56 = v75;
  v57 = v73;
  sub_1C2B34498(v73);
  v58 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v16, v57, v17);
  v77(v58, v74, v12);
  v59 = (char *)&loc_1C2B359C0 + 4 * byte_1C2D1564C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C2B35BA4()
{
  void (*v0)(void);

  v0 = (void (*)(void))sub_1C2B34540();
  v0();
  return swift_release();
}

void Prompt.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v4 = type metadata accessor for Prompt.State(0, *(_QWORD *)(v1 + 80), v2, v3);
  OUTLINED_FUNCTION_33_1(v4);
  swift_release();
  OUTLINED_FUNCTION_18();
}

uint64_t Prompt.__deallocating_deinit()
{
  Prompt.deinit();
  return swift_deallocClassInstance();
}

void sub_1C2B35C50()
{
  Prompt.action.getter();
}

void sub_1C2B35C70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Prompt.accept(input:)(a1, a2);
}

uint64_t sub_1C2B35C90()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_2_41();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_31_42(v1);
  return PromptProviding.segue()();
}

uint64_t sub_1C2B35CDC()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_2_41();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_31_42(v1);
  return PromptProviding.repromptOnEmptyParse()();
}

uint64_t sub_1C2B35D28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_86(v3);
  *v4 = v1;
  v4[1] = sub_1C28CCD60;
  return PromptProviding.repromptOnLowConfidence()(a1);
}

uint64_t sub_1C2B35D74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B34BCC(v2, v3);
}

uint64_t sub_1C2B35DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1C2B34C60(v4, a2, a3, a4);
}

void sub_1C2B35DD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_35_39(a1, a2, a3, a4);
}

uint64_t sub_1C2B35DE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B34B78(v2, v3);
}

uint64_t type metadata accessor for Prompt(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Prompt);
}

uint64_t sub_1C2B35E34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B35144(v2, v3);
}

void sub_1C2B35E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_63_18(a1, a2, a3, a4);
}

void sub_1C2B35E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1C2B35264(v4, 3, a3, a4);
}

uint64_t sub_1C2B35EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Yield(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B35EEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B350F0(v2, v3);
}

uint64_t sub_1C2B35F30(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int EnumTagSinglePayload;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 > v7)
  {
    v10 = 8 * v8;
    if (v8 > 3)
      goto LABEL_8;
    v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v8);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v8);
        if (!*(_BYTE *)(a1 + v8))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v8 > 3)
          v13 = 0;
        if ((_DWORD)v8)
        {
          if (v8 > 3)
            LODWORD(v8) = 4;
          __asm { BR              X12 }
        }
        return v7 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v8);
      if (*(_WORD *)(a1 + v8))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v6 < 2)
    return 0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

void sub_1C2B3605C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  size_t v11;
  char v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (v8)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = 8 * v11;
  v13 = a3 >= v9;
  v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        v6 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v15 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v17 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_1C2B361F0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1C2B361F8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t dispatch thunk of InputInterpreting.interpret(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PromptProviding.prompt()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_88_1();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PromptProviding.segue()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_88_1();
  OUTLINED_FUNCTION_2_41();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PromptProviding.repromptOnEmptyParse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_88_1();
  OUTLINED_FUNCTION_2_41();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PromptProviding.repromptOnLowConfidence()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_88_1();
  OUTLINED_FUNCTION_2_41();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t sub_1C2B3631C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for Prompt.State(319, *(_QWORD *)(a1 + 80), a3, a4);
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Prompt()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Prompt.__allocating_init(for:interpreter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of Prompt.onReprompt(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t sub_1C2B363C4()
{
  uint64_t result;
  unint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  result = sub_1C2CFEAF0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_1C2B36438(char *__dst, char **a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  char *v10;
  char *v11;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *(_QWORD *)v3 = *a2;
    v3 = &v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    sub_1C2CFD350();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 > 1)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else if (v9 == 1)
    {
      v10 = *a2;
      v11 = *a2;
      *(_QWORD *)v3 = v10;
      v3[v5] = 1;
    }
    else
    {
      (*(void (**)(char *))(v4 + 16))(__dst);
      v3[v5] = 0;
    }
  }
  return v3;
}

void sub_1C2B36504(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 <= 1)
  {
    if (v4 == 1)

    else
      (*(void (**)(void))(v2 + 8))();
  }
}

_QWORD *sub_1C2B36540(_QWORD *__dst, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  id v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 > 1)
  {
    memcpy(__dst, a2, v5 + 1);
  }
  else if (v6 == 1)
  {
    v7 = *a2;
    v8 = *a2;
    *__dst = v7;
    *((_BYTE *)__dst + v5) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(__dst);
    *((_BYTE *)__dst + v5) = 0;
  }
  return __dst;
}

void **sub_1C2B365CC(void **__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  void *v10;
  id v11;
  unsigned int v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *((unsigned __int8 *)__dst + v7);
  v9 = *((unsigned __int8 *)__src + v7);
  if (v8 > 1)
  {
    if (v9 <= 1)
    {
      if (v9 != 1)
      {
LABEL_23:
        (*(void (**)(void **, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
        *((_BYTE *)__dst + v7) = 0;
        return __dst;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(__dst, __src, v7 + 1);
    return __dst;
  }
  if (v9 > 1)
  {
    if (v8 == 1)

    else
      (*(void (**)(void **, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    goto LABEL_15;
  }
  if (__dst != __src)
  {
    if (v8 == 1)

    else
      (*(void (**)(void **, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v12 = *((unsigned __int8 *)__src + v7);
    if (v12 >= 2)
    {
      if (v7 <= 3)
        v13 = v7;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    if (v12 != 1)
      goto LABEL_23;
LABEL_11:
    v10 = *__src;
    v11 = v10;
    *__dst = v10;
    *((_BYTE *)__dst + v7) = 1;
  }
  return __dst;
}

_QWORD *sub_1C2B36750(_QWORD *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 > 1)
  {
    memcpy(__dst, a2, v5 + 1);
  }
  else if (v6 == 1)
  {
    *__dst = *a2;
    *((_BYTE *)__dst + v5) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(__dst);
    *((_BYTE *)__dst + v5) = 0;
  }
  return __dst;
}

id *sub_1C2B367CC(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *((unsigned __int8 *)__dst + v7);
  v9 = *((unsigned __int8 *)__src + v7);
  if (v8 > 1)
  {
    if (v9 <= 1)
    {
      if (v9 != 1)
      {
LABEL_23:
        (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
        *((_BYTE *)__dst + v7) = 0;
        return __dst;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(__dst, __src, v7 + 1);
    return __dst;
  }
  if (v9 > 1)
  {
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    goto LABEL_15;
  }
  if (__dst != __src)
  {
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 != 1)
      goto LABEL_23;
LABEL_11:
    *__dst = *__src;
    *((_BYTE *)__dst + v7) = 1;
  }
  return __dst;
}

uint64_t sub_1C2B36948(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) > 3)
    goto LABEL_6;
  v8 = ((a2 + ~(-1 << v5) - 251) >> v5) + 1;
  if (HIWORD(v8))
  {
    v6 = *(_DWORD *)(a1 + v4);
    if (v6)
      goto LABEL_14;
LABEL_21:
    v10 = *(unsigned __int8 *)(a1 + v3);
    if (v10 >= 2)
      v11 = (v10 ^ 0xFF) + 1;
    else
      v11 = 0;
    if (v11 >= 4)
      return v11 - 3;
    else
      return 0;
  }
  if (v8 > 0xFF)
  {
    v6 = *(unsigned __int16 *)(a1 + v4);
    if (*(_WORD *)(a1 + v4))
      goto LABEL_14;
    goto LABEL_21;
  }
  if (v8 < 2)
    goto LABEL_21;
LABEL_6:
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 252);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B36A0C + 4 * byte_1C2D15668[(v4 - 1)]))();
}

void sub_1C2B36A64(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFC)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 251) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFB)
    __asm { BR              X11 }
  v9 = a2 - 252;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2B36C0C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unsigned int v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (v2 <= 8)
    v2 = 8;
  v3 = *(unsigned __int8 *)(a1 + v2);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

void *sub_1C2B36C38(void *result, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  size_t v4;
  int v5;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (v3 <= 8)
    v3 = 8;
  if (a2 > 0xFE)
  {
    v4 = (v3 + 1);
    if ((_DWORD)v4)
    {
      if (v4 <= 3)
        v5 = v4;
      else
        v5 = 4;
      bzero(result, v4);
      __asm { BR              X10 }
    }
  }
  else if (a2)
  {
    *((_BYTE *)result + v3) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C2B36D08()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_1C2B36D78(id *__dst, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  char *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  id v17;
  id v18;
  unsigned int v19;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = 8 * v5;
  if (v5 > 3)
    goto LABEL_8;
  v7 = ((1 << v6) + 1) >> v6;
  v8 = 2;
  if (v7 > 0xFFFD)
    v8 = 4;
  if (v7 <= 0xFD)
LABEL_8:
    v8 = 1;
  v9 = v8 + v5;
  v10 = *(_DWORD *)(v4 + 80);
  if (v9 > 0x18 || (v10 & 0x1000F8) != 0)
  {
    v12 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v12[(unsigned __int16)((v10 & 0xF8) + 23) & (unsigned __int16)~(v10 & 0xF8) & 0x1F8];
    sub_1C2CFD350();
    return v3;
  }
  if (v5 > 3)
    goto LABEL_15;
  v14 = ((1 << v6) + 1) >> v6;
  if (v14 > 0xFFFD)
  {
    v13 = *(_DWORD *)((char *)a2 + v5);
  }
  else
  {
    if (v14 <= 0xFD)
    {
LABEL_15:
      v13 = *((unsigned __int8 *)a2 + v5);
      goto LABEL_20;
    }
    v13 = *(unsigned __int16 *)((char *)a2 + v5);
  }
LABEL_20:
  if (v13 >= 2)
  {
    if (v5 <= 3)
      v15 = v5;
    else
      v15 = 4;
    __asm { BR              X13 }
  }
  if (v13 == 1)
  {
    v17 = *a2;
    v18 = *a2;
    *v3 = v17;
    if (v5 > 3)
      goto LABEL_31;
    v19 = ((1 << v6) + 1) >> v6;
    if (v19 > 0xFFFD)
    {
      *(_DWORD *)((char *)v3 + v5) = 1;
      return v3;
    }
    if (v19 <= 0xFD)
LABEL_31:
      *((_BYTE *)v3 + v5) = 1;
    else
      *(_WORD *)((char *)v3 + v5) = 1;
  }
  else
  {
    (*(void (**)(id *))(v4 + 16))(__dst);
    if (v5 <= 3)
    {
      v16 = ((1 << v6) + 1) >> v6;
      if (v16 > 0xFFFD)
      {
        *(_DWORD *)((char *)v3 + v5) = 0;
        return v3;
      }
      if (v16 > 0xFD)
      {
        *(_WORD *)((char *)v3 + v5) = 0;
        return v3;
      }
    }
    *((_BYTE *)v3 + v5) = 0;
  }
  return v3;
}

void sub_1C2B36FD0(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  if (v3 > 3)
    goto LABEL_4;
  v5 = ((1 << (8 * v3)) + 1) >> (8 * v3);
  if (v5 > 0xFFFD)
  {
    v4 = *(_DWORD *)((char *)a1 + v3);
  }
  else
  {
    if (v5 <= 0xFD)
    {
LABEL_4:
      v4 = *((unsigned __int8 *)a1 + v3);
      goto LABEL_9;
    }
    v4 = *(unsigned __int16 *)((char *)a1 + v3);
  }
LABEL_9:
  if (v4 < 2)
  {
    if (v4 == 1)

    else
      (*(void (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v6 = v3;
    else
      v6 = 4;
    ((void (*)(void))((char *)&loc_1C2B37058 + 4 * byte_1C2D1567F[v6]))();
  }
}

char *sub_1C2B370B4(char *__dst, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  id v11;
  id v12;
  unsigned int v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = 8 * v5;
  if (v5 > 3)
    goto LABEL_5;
  v8 = ((1 << v6) + 1) >> v6;
  if (v8 > 0xFFFD)
  {
    v7 = *(_DWORD *)((char *)a2 + v5);
  }
  else
  {
    if (v8 <= 0xFD)
    {
LABEL_5:
      v7 = *((unsigned __int8 *)a2 + v5);
      goto LABEL_10;
    }
    v7 = *(unsigned __int16 *)((char *)a2 + v5);
  }
LABEL_10:
  if (v7 >= 2)
  {
    if (v5 <= 3)
      v9 = v5;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    v11 = *a2;
    v12 = *a2;
    *(_QWORD *)__dst = v11;
    if (v5 > 3)
      goto LABEL_21;
    v13 = ((1 << v6) + 1) >> v6;
    if (v13 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v5] = 1;
      return __dst;
    }
    if (v13 <= 0xFD)
LABEL_21:
      __dst[v5] = 1;
    else
      *(_WORD *)&__dst[v5] = 1;
  }
  else
  {
    (*(void (**)(char *))(v4 + 16))(__dst);
    if (v5 <= 3)
    {
      v10 = ((1 << v6) + 1) >> v6;
      if (v10 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v5] = 0;
        return __dst;
      }
      if (v10 > 0xFD)
      {
        *(_WORD *)&__dst[v5] = 0;
        return __dst;
      }
    }
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_1C2B37298(id *__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  void *v16;
  id v17;
  unsigned int v18;

  if (__dst == __src)
    return __dst;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = 8 * v7;
  if (v7 > 3)
    goto LABEL_6;
  v10 = ((1 << v8) + 1) >> v8;
  if (v10 > 0xFFFD)
  {
    v9 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v10 <= 0xFD)
    {
LABEL_6:
      v9 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    v9 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  if (v9 >= 2)
  {
    if (v7 <= 3)
      v11 = v7;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v9 == 1)

  else
    (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
  if (v7 > 3)
    goto LABEL_20;
  v13 = ((1 << v8) + 1) >> v8;
  if (v13 > 0xFFFD)
  {
    v12 = *(_DWORD *)((char *)__src + v7);
  }
  else
  {
    if (v13 <= 0xFD)
    {
LABEL_20:
      v12 = *((unsigned __int8 *)__src + v7);
      goto LABEL_25;
    }
    v12 = *(unsigned __int16 *)((char *)__src + v7);
  }
LABEL_25:
  if (v12 >= 2)
  {
    if (v7 <= 3)
      v14 = v7;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  if (v12 == 1)
  {
    v16 = *__src;
    v17 = v16;
    *__dst = v16;
    if (v7 > 3)
      goto LABEL_36;
    v18 = ((1 << v8) + 1) >> v8;
    if (v18 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v18 <= 0xFD)
LABEL_36:
      *((_BYTE *)__dst + v7) = 1;
    else
      *(_WORD *)((char *)__dst + v7) = 1;
  }
  else
  {
    (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
    if (v7 <= 3)
    {
      v15 = ((1 << v8) + 1) >> v8;
      if (v15 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
      if (v15 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
    }
    *((_BYTE *)__dst + v7) = 0;
  }
  return __dst;
}

char *sub_1C2B37564(char *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = 8 * v5;
  if (v5 > 3)
    goto LABEL_5;
  v8 = ((1 << v6) + 1) >> v6;
  if (v8 > 0xFFFD)
  {
    v7 = *(_DWORD *)((char *)a2 + v5);
  }
  else
  {
    if (v8 <= 0xFD)
    {
LABEL_5:
      v7 = *((unsigned __int8 *)a2 + v5);
      goto LABEL_10;
    }
    v7 = *(unsigned __int16 *)((char *)a2 + v5);
  }
LABEL_10:
  if (v7 >= 2)
  {
    if (v5 <= 3)
      v9 = v5;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    *(_QWORD *)__dst = *a2;
    if (v5 > 3)
      goto LABEL_21;
    v11 = ((1 << v6) + 1) >> v6;
    if (v11 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v5] = 1;
      return __dst;
    }
    if (v11 <= 0xFD)
LABEL_21:
      __dst[v5] = 1;
    else
      *(_WORD *)&__dst[v5] = 1;
  }
  else
  {
    (*(void (**)(char *))(v4 + 32))(__dst);
    if (v5 <= 3)
    {
      v10 = ((1 << v6) + 1) >> v6;
      if (v10 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v5] = 0;
        return __dst;
      }
      if (v10 > 0xFD)
      {
        *(_WORD *)&__dst[v5] = 0;
        return __dst;
      }
    }
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_1C2B37740(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;

  if (__dst == __src)
    return __dst;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = 8 * v7;
  if (v7 > 3)
    goto LABEL_6;
  v10 = ((1 << v8) + 1) >> v8;
  if (v10 > 0xFFFD)
  {
    v9 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v10 <= 0xFD)
    {
LABEL_6:
      v9 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    v9 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  if (v9 >= 2)
  {
    if (v7 <= 3)
      v11 = v7;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v9 == 1)

  else
    (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
  if (v7 > 3)
    goto LABEL_20;
  v13 = ((1 << v8) + 1) >> v8;
  if (v13 > 0xFFFD)
  {
    v12 = *(_DWORD *)((char *)__src + v7);
  }
  else
  {
    if (v13 <= 0xFD)
    {
LABEL_20:
      v12 = *((unsigned __int8 *)__src + v7);
      goto LABEL_25;
    }
    v12 = *(unsigned __int16 *)((char *)__src + v7);
  }
LABEL_25:
  if (v12 >= 2)
  {
    if (v7 <= 3)
      v14 = v7;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  if (v12 == 1)
  {
    *__dst = *__src;
    if (v7 > 3)
      goto LABEL_36;
    v16 = ((1 << v8) + 1) >> v8;
    if (v16 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v16 <= 0xFD)
LABEL_36:
      *((_BYTE *)__dst + v7) = 1;
    else
      *(_WORD *)((char *)__dst + v7) = 1;
  }
  else
  {
    (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
    if (v7 <= 3)
    {
      v15 = ((1 << v8) + 1) >> v8;
      if (v15 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
      if (v15 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
    }
    *((_BYTE *)__dst + v7) = 0;
  }
  return __dst;
}

uint64_t sub_1C2B37A0C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  char v26;
  unsigned int v27;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v5 = 8 * v4;
  if (v4 > 3)
  {
    v6 = 3;
    goto LABEL_14;
  }
  v7 = ((1 << v5) + 1) >> v5;
  if (v7 >= 0xFFFE)
    v8 = 32;
  else
    v8 = 16;
  if (v7 >= 0xFE)
    v3 = v8;
  else
    v3 = 8;
  if (v7 <= 0xFFFD)
  {
    v6 = v7 + 2;
LABEL_14:
    v9 = (1 << v3) - v6;
    if ((v9 & 0x80000000) == 0)
      goto LABEL_16;
  }
  v9 = 0x7FFFFFFF;
LABEL_16:
  if (v4 > 3)
    goto LABEL_20;
  v10 = ((1 << v5) + 1) >> v5;
  v11 = 2;
  if (v10 > 0xFFFD)
    v11 = 4;
  if (v10 <= 0xFD)
LABEL_20:
    v11 = 1;
  if (!a2)
    return 0;
  if (a2 <= v9)
    goto LABEL_40;
  v12 = v11 + v4;
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((a2 - v9 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v15 < 2)
    {
LABEL_40:
      if (v9)
      {
        if (v4 > 3)
          goto LABEL_44;
        v19 = ((1 << v5) + 1) >> v5;
        if (v19 > 0xFFFD)
        {
          v21 = *(_DWORD *)(a1 + v4);
          v22 = ~v21;
          goto LABEL_54;
        }
        if (v19 >= 0xFE)
        {
          v24 = *(unsigned __int16 *)(a1 + v4);
          v21 = v24 | 0xFFFF0000;
          v22 = v24 ^ 0xFFFF;
        }
        else
        {
LABEL_44:
          v20 = *(unsigned __int8 *)(a1 + v4);
          v21 = v20 | 0xFFFFFF00;
          v22 = v20 ^ 0xFF;
          if (v4 > 3)
          {
            v23 = 3;
            goto LABEL_51;
          }
        }
        v25 = ((1 << v5) + 1) >> v5;
        if (v25 <= 0xFFFD)
        {
          v23 = v25 + 2;
          if (v25 > 0xFD)
          {
            v26 = 16;
LABEL_53:
            v27 = (1 << v26) - v23;
            if ((v27 & 0x80000000) == 0)
              goto LABEL_55;
            goto LABEL_54;
          }
LABEL_51:
          v26 = 8;
          goto LABEL_53;
        }
LABEL_54:
        v27 = 0x7FFFFFFF;
LABEL_55:
        if (v27 > v22)
          return -v21;
        else
          return 0;
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_40;
LABEL_31:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v9 + v16 + 1;
  if (v12 <= 3)
    v17 = v12;
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B37B60 + 4 * byte_1C2D156A2[v17 - 1]))();
}

void sub_1C2B37C64(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  char v6;
  char v7;
  int v8;
  unsigned int v9;
  char v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  size_t v14;
  char v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v6 = 8;
  if (v5 <= 8)
    v5 = 8;
  v7 = 8 * v5;
  if (v5 <= 3)
  {
    v9 = ((1 << v7) + 1) >> v7;
    if (v9 >= 0xFFFE)
      v10 = 32;
    else
      v10 = 16;
    if (v9 >= 0xFE)
      v6 = v10;
    else
      v6 = 8;
    if (v9 > 0xFFFD)
      goto LABEL_14;
    v8 = v9 + 2;
  }
  else
  {
    v8 = 3;
  }
  v11 = (1 << v6) - v8;
  if ((v11 & 0x80000000) == 0)
  {
LABEL_15:
    if (v5 > 3)
      goto LABEL_19;
    v12 = ((1 << v7) + 1) >> v7;
    v13 = 2;
    if (v12 > 0xFFFD)
      v13 = 4;
    if (v12 <= 0xFD)
LABEL_19:
      v13 = 1;
    v14 = v13 + v5;
    v15 = 8 * (v13 + v5);
    if (a3 <= v11)
    {
      v16 = 0u;
    }
    else if (v14 <= 3)
    {
      v18 = ((a3 - v11 + ~(-1 << v15)) >> v15) + 1;
      if (HIWORD(v18))
      {
        v16 = 4u;
      }
      else if (v18 >= 0x100)
      {
        v16 = 2;
      }
      else
      {
        v16 = v18 > 1;
      }
    }
    else
    {
      v16 = 1u;
    }
    if (v11 < a2)
    {
      v17 = ~v11 + a2;
      if (v14 < 4)
      {
        if ((_DWORD)v14)
        {
          v19 = v17 & ~(-1 << v15);
          bzero(a1, v14);
          if ((_DWORD)v14 == 3)
          {
            *a1 = v19;
            *((_BYTE *)a1 + 2) = BYTE2(v19);
          }
          else if ((_DWORD)v14 == 2)
          {
            *a1 = v19;
          }
          else
          {
            *(_BYTE *)a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, v14);
        *(_DWORD *)a1 = v17;
      }
      __asm { BR              X10 }
    }
    __asm { BR              X12 }
  }
LABEL_14:
  v11 = 0x7FFFFFFF;
  goto LABEL_15;
}

uint64_t sub_1C2B37EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (v2 > 3)
    goto LABEL_4;
  v4 = ((1 << (8 * v2)) + 1) >> (8 * v2);
  if (v4 > 0xFFFD)
  {
    v3 = *(unsigned int *)(a1 + v2);
  }
  else
  {
    if (v4 <= 0xFD)
    {
LABEL_4:
      v3 = *(unsigned __int8 *)(a1 + v2);
      goto LABEL_9;
    }
    v3 = *(unsigned __int16 *)(a1 + v2);
  }
LABEL_9:
  if (v3 < 2)
    return v3;
  if (v2 <= 3)
    v5 = v2;
  else
    v5 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B37F68 + 4 * byte_1C2D156B0[v5]))();
}

char *sub_1C2B37FAC(char *result, unsigned int a2, uint64_t a3)
{
  size_t v4;
  char *v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    if (v4 >= 4)
    {
      v5 = &result[v4];
      LOBYTE(v6) = 2;
LABEL_9:
      *v5 = v6;
      goto LABEL_18;
    }
    v6 = ((a2 - 2) >> (8 * v4)) + 2;
    v5 = &result[v4];
    v8 = ((1 << (8 * v4)) + 1) >> (8 * v4);
    if (v8 > 0xFFFD)
    {
      *(_DWORD *)v5 = v6;
    }
    else
    {
      if (v8 <= 0xFD)
        goto LABEL_9;
      *(_WORD *)v5 = v6;
    }
LABEL_18:
    if (v4 <= 3)
      v9 = v4;
    else
      v9 = 4;
    bzero(result, v4);
    __asm { BR              X10 }
  }
  if (v4 > 3)
  {
LABEL_6:
    result[v4] = a2;
    return result;
  }
  v7 = ((1 << (8 * v4)) + 1) >> (8 * v4);
  if (v7 > 0xFFFD)
  {
    *(_DWORD *)&result[v4] = a2;
  }
  else
  {
    if (v7 <= 0xFD)
      goto LABEL_6;
    *(_WORD *)&result[v4] = a2;
  }
  return result;
}

uint64_t sub_1C2B380F8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C2B3811C(uint64_t a1)
{
  uint64_t v1;

  sub_1C2AA17A4(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1C2B38124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v14;

  *(_QWORD *)(a3 + 40) = a4;
  *(_QWORD *)(a3 + 48) = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(a3 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a1, a4);
  *(_QWORD *)(a3 + 80) = a5;
  *(_QWORD *)(a3 + 88) = a7;
  v14 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(a3 + 56));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v14, a2, a5);
  *(_QWORD *)(a3 + 112) = nullsub_1;
  *(_QWORD *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  *(_WORD *)(a3 + 104) = -256;
  return a3;
}

uint64_t OUTLINED_FUNCTION_4_80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

_QWORD *OUTLINED_FUNCTION_7_73()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 24) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 40));
}

uint64_t OUTLINED_FUNCTION_18_54()
{
  return sub_1C2CFEAF0();
}

uint64_t OUTLINED_FUNCTION_19_54()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_23_55(uint64_t a1@<X8>, uint64_t a2)
{
  sub_1C2B34498((uint64_t)&a2 - a1);
}

uint64_t OUTLINED_FUNCTION_25_47()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 3, v0);
}

void OUTLINED_FUNCTION_26_47()
{
  uint64_t v0;

  sub_1C2B344E8(v0);
}

uint64_t OUTLINED_FUNCTION_29_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for Prompt.Event(0, *(_QWORD *)(*(_QWORD *)a1 + 80), a3, a4);
}

uint64_t OUTLINED_FUNCTION_31_42(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_38_37()
{
  return type metadata accessor for Inform();
}

uint64_t OUTLINED_FUNCTION_39_31()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
}

uint64_t OUTLINED_FUNCTION_41_32()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_49_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for Prompt(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_50_25()
{
  return sub_1C2CFEAF0();
}

uint64_t OUTLINED_FUNCTION_51_25()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_56_24()
{
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_57_21(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 3, a1);
}

uint64_t OUTLINED_FUNCTION_58_25(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_59_29(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return Inform.onSuccess(_:)(a1, v1, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_60_19@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_61_21@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_63_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1C2B35264(v4, 2, a3, a4);
}

void static PromptFlowProviderType.selection<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_0_80(a1, a2, a3, a4, a5);
  *v5 = v6 | 0xC000000000000000;
  OUTLINED_FUNCTION_1_0();
}

void static PromptFlowProviderType.continuation<A>(_:)(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;

  sub_1C2CE7C98(a1, a2);
  *a3 = v4 | 0x4000000000000000;
  OUTLINED_FUNCTION_1_0();
}

uint64_t static PromptFlowProviderType.== infix(_:_:)(_QWORD *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1C2B383C4 + 4 * byte_1C2D15830[*a1 >> 62]))();
}

BOOL sub_1C2B383C4@<W0>(unint64_t a1@<X8>)
{
  return a1 >> 62 == 0;
}

void static PromptFlowProviderType.action<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_0_80(a1, a2, a3, a4, a5);
  *v5 = v6;
  OUTLINED_FUNCTION_1_0();
}

void static PromptFlowProviderType.menu<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_0_80(a1, a2, a3, a4, a5);
  *v5 = v6 | 0x8000000000000000;
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for PromptFlowProviderType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptFlowProviderType);
}

uint64_t sub_1C2B38450(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7D && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1C2B384A4(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C2B384F4(_QWORD *a1)
{
  return *a1 >> 62;
}

uint64_t *sub_1C2B38500(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

void type metadata accessor for PromptFlowProviderType.ProviderType()
{
  JUMPOUT(0x1C3BC9C14);
}

void OUTLINED_FUNCTION_0_80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C2CE7BF4(a4, *(_QWORD *)(a5 + 8));
}

void PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)()
{
  OUTLINED_FUNCTION_134_0();
  PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)();
  OUTLINED_FUNCTION_8_0();
}

BOOL static ConfirmationResponse.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

__n128 sub_1C2B385A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20;
  __n128 result;

  v20 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = a3;
  *(_QWORD *)(v20 + 40) = a4;
  *(_QWORD *)(v20 + 48) = a5;
  *(_QWORD *)(v20 + 56) = a6;
  *(_QWORD *)(v20 + 64) = a7;
  *(_QWORD *)(v20 + 72) = a8;
  *(_OWORD *)(v20 + 80) = a9;
  *(_OWORD *)(v20 + 96) = a10;
  result = a11;
  *(__n128 *)(v20 + 112) = a11;
  *(_QWORD *)(v20 + 128) = a12;
  *(_QWORD *)(v20 + 136) = a13;
  return result;
}

SiriKitFlow::SimpleConfirmationResponseProvider __swiftcall SimpleConfirmationResponseProvider.init(_:)(SiriKitFlow::SimpleConfirmationResponseProvider result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result.confirmationResponse.value;
  return result;
}

void PromptForConfirmationFlow.__allocating_init(itemToConfirm:strategy:outputPublisher:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v3 = v2;
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_130_8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_1C28B9A48(v1, (uint64_t)&v9);
  v7 = type metadata accessor for OutputPublisherAsyncAdapter();
  v8 = OUTLINED_FUNCTION_5_2();
  sub_1C28B99EC(&v9, v8 + 16);
  v10 = v7;
  v11 = &protocol witness table for OutputPublisherAsyncAdapter;
  *(_QWORD *)&v9 = v8;
  sub_1C2B39354();
  __swift_destroy_boxed_opaque_existential_1(v1);
  OUTLINED_FUNCTION_21_17(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_1();
}

uint64_t ConfirmationResponse.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x657463656A65722ELL;
  else
    return 0x6D7269666E6F632ELL;
}

void ConfirmationResponse.hash(into:)()
{
  sub_1C2CFEAC0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t ConfirmationResponse.hashValue.getter()
{
  sub_1C2CFEAB4();
  sub_1C2CFEAC0();
  return sub_1C2CFEAD8();
}

void SimpleConfirmationResponseProvider.confirmationResponse.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SimpleConfirmationResponseProvider.confirmationResponse.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SimpleConfirmationResponseProvider.confirmationResponse.modify())(_QWORD)
{
  return nullsub_1;
}

void ServerProvidedSiriKitConfirmationResponseParser.parseConfirmationResponse(input:)(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;

  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = ((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = OUTLINED_FUNCTION_31_3();
  sub_1C29BA7C4(a1 + *(int *)(v8 + 20), (uint64_t)v7, type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *(uint64_t *)((char *)&v7->isa + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF7984B0) + 48));
    v10 = sub_1C2CFCD44();
    (*(void (**)(NSObject *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
    __asm { BR              X10 }
  }
  sub_1C28C9F68((uint64_t)v7, type metadata accessor for Parse);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v11, (uint64_t)qword_1ED7AA1B0);
  v12 = OUTLINED_FUNCTION_123();
  if (os_log_type_enabled(v7, v12))
  {
    v13 = (uint8_t *)OUTLINED_FUNCTION_23_2();
    *(_WORD *)v13 = 0;
    OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v7, v12, "Could not parse confirmation response from input: Input is not a NLv3 Intent with a server conversion", v13);
    OUTLINED_FUNCTION_11_0();
  }

  *a2 = 2;
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B38A44(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ServerProvidedSiriKitConfirmationResponseParser.parseConfirmationResponse(input:)(a1, a2);
}

void sub_1C2B38A5C(uint64_t a1, uint64_t a2)
{
  PromptForConfirmationFlowStrategy.makeRepromptOnLowConfidence(itemToConfirm:_:)(a1, a2);
}

void PromptForConfirmationFlowStrategy.makeRepromptOnLowConfidence(itemToConfirm:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6, v7);
  v8 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v8);
  v9 = OUTLINED_FUNCTION_5_2();
  v10 = (_QWORD *)OUTLINED_FUNCTION_54_0(v9);
  v11 = OUTLINED_FUNCTION_10_2(v10, (uint64_t)&unk_1EF7997D8);
  if ((_DWORD)a2 == 1)
  {
    OUTLINED_FUNCTION_370(v11, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (a2)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      v3 = 0;
      v4 = 0;
    }
  }
  v12 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v12 + 16) = &unk_1EF789CD8;
  *(_QWORD *)(v12 + 24) = v2;
  if (v4 | v3)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B38B74(void (*a1)(_QWORD *))
{
  PromptForConfirmationFlowStrategy.makeConfirmationRejectedResponse(_:)(a1);
}

void PromptForConfirmationFlowStrategy.makeConfirmationRejectedResponse(_:)(void (*a1)(_QWORD *))
{
  _QWORD v2[5];
  char v3;

  v2[3] = type metadata accessor for EmptyOutput();
  v2[4] = &protocol witness table for EmptyOutput;
  v2[0] = OUTLINED_FUNCTION_5_2();
  v3 = 0;
  a1(v2);
  sub_1C28BB37C((uint64_t)v2, &qword_1ED7A61D0);
}

void sub_1C2B38BF8(uint64_t a1)
{
  PromptForConfirmationFlowStrategy.makeFlowCancelledResponse(_:)(a1);
}

void PromptForConfirmationFlowStrategy.makeFlowCancelledResponse(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v7);
  v8 = OUTLINED_FUNCTION_5_2();
  v9 = (_QWORD *)OUTLINED_FUNCTION_54_0(v8);
  v10 = OUTLINED_FUNCTION_10_2(v9, (uint64_t)&unk_1EF7997E0);
  if ((_DWORD)a1 == 1)
  {
    OUTLINED_FUNCTION_370(v10, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (a1)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      v2 = 0;
      v3 = 0;
    }
  }
  v11 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v11 + 16) = &unk_1EF789CF0;
  *(_QWORD *)(v11 + 24) = v1;
  if (v3 | v2)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B38D10(uint64_t a1, uint64_t a2)
{
  PromptForConfirmationFlowStrategy.makeErrorResponse(_:_:)(a1, a2);
}

void PromptForConfirmationFlowStrategy.makeErrorResponse(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6, v7);
  v8 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v8);
  v9 = OUTLINED_FUNCTION_5_2();
  v10 = (_QWORD *)OUTLINED_FUNCTION_54_0(v9);
  v11 = OUTLINED_FUNCTION_10_2(v10, (uint64_t)&unk_1EF7997E8);
  if ((_DWORD)a2 == 1)
  {
    OUTLINED_FUNCTION_370(v11, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (a2)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      v3 = 0;
      v4 = 0;
    }
  }
  v12 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v12 + 16) = &unk_1EF789D08;
  *(_QWORD *)(v12 + 24) = v2;
  if (v4 | v3)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B38E28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2A18D94(a1);
}

uint64_t sub_1C2B38E78()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)();
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B38F38()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)();
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18600(v2);
}

uint64_t sub_1C2B38FCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()(a1);
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B3902C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(uint64_t **)(v0 + 16);
  v2 = type metadata accessor for EmptyOutput();
  v3 = OUTLINED_FUNCTION_5_2();
  v1[3] = v2;
  v1[4] = (uint64_t)&protocol witness table for EmptyOutput;
  *v1 = v3;
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_5(v4);
}

uint64_t sub_1C2B39078()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()();
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18D94(v2);
}

uint64_t sub_1C2B3910C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)();
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18AF4(v2);
}

uint64_t PromptForConfirmationFlowStrategyAsync.actionForInputWrapper(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B391B8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 32))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

void PromptForConfirmationFlow.exitValue.getter(uint64_t a1@<X8>)
{
  PromptForConfirmationFlowAsync.exitValue.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t PromptForConfirmationFlowAsync.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *v1;
  v4 = type metadata accessor for PromptForConfirmationFlowAsync.State(0, *(_QWORD *)(*v1 + 80), *(_QWORD *)(*v1 + 88), *(_QWORD *)(*v1 + 96));
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v22 - v8;
  v10 = (uint64_t)v1 + *(_QWORD *)(v3 + 128);
  OUTLINED_FUNCTION_78_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, v10, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((_DWORD)EnumCaseMultiPayload)
  {
    case 7:
      OUTLINED_FUNCTION_82_12(EnumCaseMultiPayload, v12, v13, v14);
      return swift_storeEnumTagMultiPayload();
    case 6:
      v17 = v9[8];
      *(_QWORD *)a1 = *(_QWORD *)v9;
      *(_BYTE *)(a1 + 8) = v17;
      OUTLINED_FUNCTION_82_12(EnumCaseMultiPayload, v12, v13, v14);
      return swift_storeEnumTagMultiPayload();
    case 5:
      v15 = OUTLINED_FUNCTION_82_12(EnumCaseMultiPayload, v12, v13, v14);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, v9, v15);
    default:
      v18 = sub_1C2B3A7CC();
      *(_QWORD *)a1 = v18;
      *(_BYTE *)(a1 + 8) = 0;
      OUTLINED_FUNCTION_82_12(v18, v19, v20, v21);
      OUTLINED_FUNCTION_262();
      return OUTLINED_FUNCTION_21_17((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
}

void sub_1C2B39354()
{
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_24_3();
  sub_1C2B39390();
  OUTLINED_FUNCTION_18();
}

void sub_1C2B39390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_9();
  v21 = v1;
  v22 = v0;
  v3 = v2;
  v4 = *(_QWORD *)(OUTLINED_FUNCTION_123_10() - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v20 - v7;
  OUTLINED_FUNCTION_123_10();
  swift_getAssociatedConformanceWitness();
  v9 = OUTLINED_FUNCTION_140_7();
  type metadata accessor for PromptForConfirmationFlowAsync(v9, v10, v11, v12);
  OUTLINED_FUNCTION_145((uint64_t)v8, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v13 = OUTLINED_FUNCTION_140_7();
  type metadata accessor for AnyPromptForConfirmationFlowStrategy(v13, v14, v15, v16);
  swift_unknownObjectRetain();
  sub_1C2B394CC();
  v17 = v21;
  sub_1C28B9A48(v21, (uint64_t)&v23);
  sub_1C2B39508();
  v19 = v18;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v17);
  OUTLINED_FUNCTION_33_14(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  *(_QWORD *)(v22 + 16) = v19;
  OUTLINED_FUNCTION_1();
}

void sub_1C2B394CC()
{
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_24_3();
  sub_1C2B3C72C();
  OUTLINED_FUNCTION_18();
}

void sub_1C2B39508()
{
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_24_3();
  sub_1C2B3AD94();
  OUTLINED_FUNCTION_18();
}

uint64_t PromptForConfirmationFlow.on(input:)()
{
  return PromptForConfirmationFlowAsync.on(input:)() & 1;
}

uint64_t PromptForConfirmationFlowAsync.on(input:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *EnumCaseMultiPayload;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _WORD *v37;
  uint64_t v39;
  char v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  _QWORD v55[2];
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_9();
  v59 = v1;
  v60 = v2;
  v57 = v3;
  v4 = (_QWORD *)*v0;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_0_1();
  v7 = MEMORY[0x1E0C80A78](v5, v6);
  v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v4[10];
  v12 = OUTLINED_FUNCTION_141_7(v7, v11, v4[11], v4[12]);
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x1E0C80A78](v12, v14);
  v56 = ((char *)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x1E0C80A78](v15, v17);
  v20 = (char *)v55 - v19;
  v21 = *(_QWORD *)(v10 - 8);
  v23 = MEMORY[0x1E0C80A78](v18, v22);
  v25 = (char *)v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v0;
  v27 = (char *)v0 + v4[16];
  v28 = v23;
  OUTLINED_FUNCTION_78_0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v27, v28);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v28);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v34 = OUTLINED_FUNCTION_118();
    v35 = OUTLINED_FUNCTION_23_1(v34, (uint64_t)qword_1ED7AA1B0);
    v36 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (_WORD *)OUTLINED_FUNCTION_23_2();
      OUTLINED_FUNCTION_91(v37);
      OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v35, v36, "PromptForConfirmationFlow received input but is not in the promptSent state. Ignoring.", (uint8_t *)v13);
      OUTLINED_FUNCTION_11_0();
    }

    return 0;
  }
  v55[1] = v28;
  OUTLINED_FUNCTION_145((uint64_t)v25, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32));
  v29 = OUTLINED_FUNCTION_31_3();
  sub_1C29BA7C4(v57 + *(int *)(v29 + 20), (uint64_t)v9, type metadata accessor for Parse);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1C28C9F68((uint64_t)v9, type metadata accessor for Parse);
  if ((_DWORD)EnumCaseMultiPayload != 8)
  {
    v39 = v57;
    sub_1C290A2E0();
    if ((v40 & 1) == 0)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v46 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v46, (uint64_t)qword_1ED7AA1B0);
      v47 = OUTLINED_FUNCTION_30();
      if (OUTLINED_FUNCTION_115(v47))
      {
        v48 = (uint8_t *)OUTLINED_FUNCTION_23_2();
        *(_WORD *)v48 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, EnumCaseMultiPayload, (os_log_type_t)v26, "PromptForConfirmationFlow received low confidence input. Treating as misunderstood and will reprompt.", v48);
        OUTLINED_FUNCTION_11_0();
      }
      goto LABEL_7;
    }
    v41 = v26[7];
    v42 = *(NSObject **)(v41 + 24);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v41 + 16))(&v58, v39);
    if (!(_BYTE)v58)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v49 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v49, (uint64_t)qword_1ED7AA1B0);
      v50 = OUTLINED_FUNCTION_30();
      if (OUTLINED_FUNCTION_115(v50))
      {
        v51 = (uint8_t *)OUTLINED_FUNCTION_23_2();
        *(_WORD *)v51 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v42, (os_log_type_t)v26, "PromptForConfirmationFlow received cancel action from delegate. Transitioning to cancelled state.", v51);
        OUTLINED_FUNCTION_11_0();
      }

      EnumCaseMultiPayload = v56;
      goto LABEL_32;
    }
    if (v58 == 1)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v43 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v43, (uint64_t)qword_1ED7AA1B0);
      v44 = OUTLINED_FUNCTION_30();
      if (os_log_type_enabled(v42, v44))
      {
        v45 = (uint8_t *)OUTLINED_FUNCTION_23_2();
        *(_WORD *)v45 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v42, v44, "PromptForConfirmationFlow received handle action from delegate. Transitioning to responseReceived state.", v45);
        OUTLINED_FUNCTION_11_0();
      }

      EnumCaseMultiPayload = v56;
      sub_1C29BA7C4(v39, (uint64_t)v56, type metadata accessor for Input);
      goto LABEL_32;
    }
    if (qword_1ED7AA040 != -1)
      swift_once();
    v52 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v52, (uint64_t)qword_1ED7AA1B0);
    v53 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_56(v53))
    {
      v54 = (uint8_t *)OUTLINED_FUNCTION_23_2();
      *(_WORD *)v54 = 0;
      OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v42, (os_log_type_t)v26, "PromptForConfirmationFlow received ignore action from delegate. Ignoring.", v54);
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_129_7();
    return 0;
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v31 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v31, (uint64_t)qword_1ED7AA1B0);
  v32 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_115(v32))
  {
    v33 = (uint8_t *)OUTLINED_FUNCTION_23_2();
    *(_WORD *)v33 = 0;
    OUTLINED_FUNCTION_56_0(&dword_1C28B6000, EnumCaseMultiPayload, (os_log_type_t)v26, "PromptForConfirmationFlow received empty parse. Will handle and reprompt.", v33);
    OUTLINED_FUNCTION_11_0();
  }
LABEL_7:

  OUTLINED_FUNCTION_100_18();
LABEL_32:
  swift_storeEnumTagMultiPayload();
  sub_1C2B3ABB8((uint64_t)EnumCaseMultiPayload);
  OUTLINED_FUNCTION_129_7();
  return 1;
}

void PromptForConfirmationFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1C2B3AE60(a1, a2, (uint64_t)&protocol conformance descriptor for PromptForConfirmationFlow<A>);
}

uint64_t PromptForConfirmationFlow.execute()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B39AEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return PromptForConfirmationFlowAsync.execute()(v2);
}

uint64_t PromptForConfirmationFlowAsync.execute()(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2[6] = a1;
  v2[7] = v1;
  v3 = (_QWORD *)*v1;
  OUTLINED_FUNCTION_31_3();
  v2[8] = OUTLINED_FUNCTION_1_3();
  v4 = v3[10];
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = OUTLINED_FUNCTION_157_6();
  v2[12] = OUTLINED_FUNCTION_157_6();
  v2[13] = OUTLINED_FUNCTION_157_6();
  v5 = type metadata accessor for PromptForConfirmationFlowAsync.State(0, v4, v3[11], v3[12]);
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  OUTLINED_FUNCTION_36_2();
  return swift_task_switch();
}

void sub_1C2B39BF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = v0[17];
  v3 = v0[14];
  v2 = v0[15];
  v4 = v0[7] + *(_QWORD *)(*(_QWORD *)v0[7] + 128);
  OUTLINED_FUNCTION_78_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v5 = (char *)sub_1C2B39C7C + 4 * word_1C2D158C4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C2B39C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);

  OUTLINED_FUNCTION_76(v15[15]);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v16 = OUTLINED_FUNCTION_118();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED7AA1B0);
  swift_retain_n();
  sub_1C2CFD86C();
  v18 = OUTLINED_FUNCTION_123();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = v15[16];
    v20 = v15[14];
    v21 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    a13 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v21 = 136315138;
    v13(v19, v14, v20);
    v22 = sub_1C2CFDDD0();
    v15[5] = sub_1C28BB120(v22, v23, &a13);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C28B6000, v17, v18, "PromptForConfirmationFlow is being executed in an unexpected state %s. Transitioning to error", v21, 0xCu);
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_11_0();
  }
  swift_release_n();

  v24 = v15[16];
  *(_QWORD *)v24 = sub_1C2B3A7CC();
  *(_BYTE *)(v24 + 8) = 0;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_158_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_158();
  return v25();
}

uint64_t sub_1C2B3A1D4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3A220()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3A268()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3A2B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3A2F0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3A33C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  sub_1C28C9F68(*(_QWORD *)(v0 + 64), type metadata accessor for Input);
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3A388()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3A3D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3A41C()
{
  OUTLINED_FUNCTION_79_20();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3A458()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3A4A0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_16_48();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_116_12();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3A500()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_16_48();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_116_12();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3A554()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  sub_1C28C9F68(*(_QWORD *)(v0 + 64), type metadata accessor for Input);
  OUTLINED_FUNCTION_16_48();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_116_12();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3A5B8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_16_48();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_116_12();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3A618()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_16_48();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_116_12();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_7_74();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PromptForConfirmationFlow.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PromptForConfirmationFlow.__deallocating_deinit()
{
  PromptForConfirmationFlow.deinit();
  return swift_deallocClassInstance();
}

void (*sub_1C2B3A6B4(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C2CFCFF0();
  return sub_1C294AB30;
}

uint64_t sub_1C2B3A714()
{
  return PromptForConfirmationFlow.on(input:)() & 1;
}

void sub_1C2B3A738(uint64_t a1, uint64_t a2)
{
  PromptForConfirmationFlow.execute(completion:)(a1, a2);
}

uint64_t sub_1C2B3A758(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28E1BA0;
  return PromptForConfirmationFlow.execute()(a1);
}

void sub_1C2B3A7AC(uint64_t a1@<X8>)
{
  PromptForConfirmationFlow.exitValue.getter(a1);
}

uint64_t sub_1C2B3A7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = type metadata accessor for PromptForConfirmationFlowAsync.State(0, *(_QWORD *)(*(_QWORD *)v0 + 80), *(_QWORD *)(*(_QWORD *)v0 + 88), *(_QWORD *)(*(_QWORD *)v0 + 96));
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1, v3);
  v5 = (char *)&v12 - v4;
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1C2CFE670();
  v15 = v13;
  v16 = v14;
  sub_1C2CFDE54();
  v6 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  MEMORY[0x1C3BC9CD4](&unk_1C2D15E40, v1);
  sub_1C2CFE9C4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v7 = v15;
  v8 = v16;
  type metadata accessor for CommandFailure();
  swift_allocObject();
  v9 = CommandFailure.init(errorCode:reason:)(-1, v7, v8);
  sub_1C29CD564();
  result = swift_allocError();
  *v11 = v9;
  return result;
}

uint64_t sub_1C2B3A938()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[11];
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_9();
  v36 = v1;
  v37 = v2;
  v3 = v0;
  v4 = OUTLINED_FUNCTION_144_4(v2, *(_QWORD *)(*v0 + 80), *(_QWORD *)(*v0 + 88), *(_QWORD *)(*v0 + 96));
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v30 - v8;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED7AA1B0);
  swift_retain_n();
  v11 = sub_1C2CFD86C();
  v12 = sub_1C2CFE2A4();
  v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    v14 = OUTLINED_FUNCTION_6_0();
    v30 = v5;
    v15 = v14;
    v32 = OUTLINED_FUNCTION_6_0();
    v35[0] = v32;
    *(_DWORD *)v15 = 136315394;
    v31 = v13;
    v16 = v3[8];
    v17 = v3[9];
    v19 = v3[10];
    v18 = v3[11];
    swift_bridgeObjectRetain();
    v20 = MEMORY[0x1C3BC88A0](v16, v17, v19, v18);
    v22 = v21;
    swift_bridgeObjectRelease();
    v34 = sub_1C28BB120(v20, v22, v35);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_147();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v23 = (char *)v3 + *(_QWORD *)(*v3 + 128);
    OUTLINED_FUNCTION_78_0();
    v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v9, v23, v4);
    OUTLINED_FUNCTION_147();
    sub_1C2B3BC34(v4);
    v26 = v25;
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v4);
    v33 = sub_1C28BB120(v26, v28, v35);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_147();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C28B6000, v11, (os_log_type_t)v31, "PromptForConfirmationFlow [%s] transitioned to state %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }

  return swift_release_n();
}

uint64_t sub_1C2B3ABB8(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = (char *)v1 + (*v1)[16];
  swift_beginAccess();
  v5 = type metadata accessor for PromptForConfirmationFlowAsync.State(0, v3[10], v3[11], v3[12]);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 24))(v4, a1, v5);
  swift_endAccess();
  sub_1C2B3A938();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

void PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)()
{
  _QWORD *v0;
  _QWORD *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v25 = v2;
  v4 = v3;
  v5 = *v0;
  v6 = sub_1C2CFBCAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  OUTLINED_FUNCTION_81_14();
  sub_1C2CFBC70();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v0, v6);
  sub_1C28FF700(8);
  OUTLINED_FUNCTION_128_6(v9, v10, v11, v12);
  v13 = *(_QWORD *)(v5 + 80);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 16))(v0, v4, v13);
  v15 = OUTLINED_FUNCTION_142_8();
  type metadata accessor for PromptForConfirmationFlowAsync.State(v15, v16, v17, v18);
  OUTLINED_FUNCTION_7_48();
  v19 = OUTLINED_FUNCTION_142_8();
  type metadata accessor for AnyPromptForConfirmationFlowStrategy(v19, v20, v21, v22);
  sub_1C2B3AD58();
  v24 = v23;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v13);
  v1[7] = v24;
  sub_1C28B99EC(v25, (uint64_t)(v1 + 2));
  OUTLINED_FUNCTION_1();
}

void sub_1C2B3AD58()
{
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_24_3();
  sub_1C2B3BEF0();
  OUTLINED_FUNCTION_18();
}

void sub_1C2B3AD94()
{
  _QWORD *v0;
  __int128 *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_9();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = (_QWORD *)*v0;
  v8 = sub_1C2CFBCAC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  OUTLINED_FUNCTION_81_14();
  sub_1C2CFBC70();
  OUTLINED_FUNCTION_33_14((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_1C28FF700(8);
  OUTLINED_FUNCTION_128_6(v11, v12, v13, v14);
  v15 = OUTLINED_FUNCTION_145((uint64_t)v0, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7[10] - 8) + 32));
  OUTLINED_FUNCTION_141_7(v15, v16, v7[11], v7[12]);
  OUTLINED_FUNCTION_7_48();
  v0[7] = v4;
  sub_1C28B99EC(v2, (uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_1();
}

void PromptForConfirmationFlowAsync.execute(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1C2B3AE60(a1, a2, (uint64_t)&protocol conformance descriptor for PromptForConfirmationFlowAsync<A, B>);
}

void sub_1C2B3AE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  MEMORY[0x1C3BC9CD4](a3, *v3);
  Flow.deferToExecuteAsync(_:)();
}

uint64_t sub_1C2B3AEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = OUTLINED_FUNCTION_23_56(a1, a2);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3AEEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_176();
  v1 = OUTLINED_FUNCTION_43_29();
  OUTLINED_FUNCTION_136_4(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_1C2B3AF40;
  v3 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_51_3(v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B3AF40()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_42_28();
  if (!v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    OUTLINED_FUNCTION_38();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B3AF8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = v0[7];
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0[10] - 8) + 16))(v0[12], v0[8]);
  OUTLINED_FUNCTION_262();
  OUTLINED_FUNCTION_158_5();
  static ExecuteResponse.ongoing(requireInput:)(1, v1);
  OUTLINED_FUNCTION_31();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_5(v2);
}

uint64_t sub_1C2B3AFF4()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3B024(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[7] = a1;
  v2[8] = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(*v1 + 88);
  v2[9] = v5;
  v2[10] = OUTLINED_FUNCTION_144_4(a1, v4, v5, *(_QWORD *)(v3 + 96));
  v2[11] = OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3B070()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 64) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 64) + 40));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_1C2B3B0E8;
  v2 = OUTLINED_FUNCTION_52_2();
  return sub_1C28DF498(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B3B0E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  *v3 = *v2;
  *(_QWORD *)(v0 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B3B140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(void);

  type metadata accessor for PromptResult(0, *(_QWORD *)(v4 + 72), a3, a4);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_114_11();
  OUTLINED_FUNCTION_158_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_31();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_5(v5);
}

uint64_t sub_1C2B3B1A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(*v2 + 88);
  v3[20] = v6;
  v7 = *(_QWORD *)(v4 + 96);
  v3[21] = v7;
  v3[22] = type metadata accessor for PromptForConfirmationFlowAsync.State(0, v5, v6, v7);
  v3[23] = OUTLINED_FUNCTION_1_3();
  v3[24] = *(_QWORD *)(v6 - 8);
  v3[25] = swift_task_alloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3B21C()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[26] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C2B3B274;
  return sub_1C2B3D5A4(v0[25], v0[18]);
}

uint64_t sub_1C2B3B274()
{
  OUTLINED_FUNCTION_79_20();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3B2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_176();
  (*(void (**)(_QWORD))(*(_QWORD *)(v1 + 168) + 8))(*(_QWORD *)(v1 + 160));
  v4 = *(unsigned __int8 *)(v1 + 272);
  if (v4 == 2)
  {
    OUTLINED_FUNCTION_160_4();
    OUTLINED_FUNCTION_139_7(v5, v6, v7, v8);
LABEL_5:
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1C2B3ABB8(v2);
    OUTLINED_FUNCTION_33_14(v0, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    static ExecuteResponse.complete()();
    OUTLINED_FUNCTION_115_11();
    OUTLINED_FUNCTION_38();
    v13 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
    return OUTLINED_FUNCTION_94(v13);
  }
  if ((v4 & 1) == 0)
  {
    OUTLINED_FUNCTION_160_4();
    v9 = OUTLINED_FUNCTION_145(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    OUTLINED_FUNCTION_139_7(v9, v10, v11, v12);
    goto LABEL_5;
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v1 + 152) + 16), *(_QWORD *)(*(_QWORD *)(v1 + 152) + 40));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 224) = v15;
  *v15 = v1;
  v15[1] = sub_1C2B3B3C0;
  v16 = OUTLINED_FUNCTION_52_2();
  return OUTLINED_FUNCTION_51_3(v16, v17, v18, v19, v20);
}

uint64_t sub_1C2B3B3C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  *v3 = *v2;
  *(_QWORD *)(v0 + 232) = v1;
  swift_task_dealloc();
  if (!v1)
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B3B418()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_176();
  v2 = v0[24];
  v1 = v0[25];
  v3 = v0[23];
  v4 = v0[20];
  OUTLINED_FUNCTION_130_8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  type metadata accessor for PromptResult(0, v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_114_11();
  sub_1C2B3ABB8(v3);
  OUTLINED_FUNCTION_21_17(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_115_11();
  OUTLINED_FUNCTION_38();
  v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_94(v7);
}

uint64_t sub_1C2B3B49C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  *v3 = *v2;
  *(_QWORD *)(v0 + 264) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    OUTLINED_FUNCTION_38();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B3B4FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_205();
  v1 = v0[23];
  v2 = v0[20];
  *(_QWORD *)v1 = v0[30];
  *(_BYTE *)(v1 + 8) = 1;
  type metadata accessor for PromptResult(0, v2, v3, v4);
  OUTLINED_FUNCTION_262();
  OUTLINED_FUNCTION_114_11();
  OUTLINED_FUNCTION_195();
  sub_1C2B3ABB8(v1);
  OUTLINED_FUNCTION_44_5();
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_115_11();
  OUTLINED_FUNCTION_38();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_95_18(v5);
}

uint64_t sub_1C2B3B580()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v0[27];
  v0[30] = v2;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_195();
  v4 = (void *)sub_1C2CFD86C();
  v5 = sub_1C2CFE2B0();
  if (OUTLINED_FUNCTION_14_7(v5))
  {
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_81_1(4.8149e-34);
    v6 = OUTLINED_FUNCTION_239();
    v10 = OUTLINED_FUNCTION_2_1(v6, v7, v8, v9);
    OUTLINED_FUNCTION_97_17(v10);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_68_15(&dword_1C28B6000, v11, v12, "PromptForConfirmationFlow encountered an error while trying to parse user input: %s");
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  v13 = OUTLINED_FUNCTION_97_1();
  v0[31] = v13;
  *(_QWORD *)(v13 + 16) = v1;
  *(_QWORD *)(v13 + 24) = v2;
  v14 = (_QWORD *)swift_task_alloc();
  v0[32] = v14;
  *v14 = v0;
  v14[1] = sub_1C2B3B49C;
  v15 = OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_65_2(v15, v16, v17, v18, v19);
}

uint64_t sub_1C2B3B6E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_76(v0[24]);
  v2 = v0[29];
  v0[30] = v2;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_195();
  v4 = (void *)sub_1C2CFD86C();
  v5 = sub_1C2CFE2B0();
  if (OUTLINED_FUNCTION_14_7(v5))
  {
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_81_1(4.8149e-34);
    v6 = OUTLINED_FUNCTION_239();
    v10 = OUTLINED_FUNCTION_2_1(v6, v7, v8, v9);
    OUTLINED_FUNCTION_97_17(v10);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_68_15(&dword_1C28B6000, v11, v12, "PromptForConfirmationFlow encountered an error while trying to parse user input: %s");
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  v13 = OUTLINED_FUNCTION_97_1();
  v0[31] = v13;
  *(_QWORD *)(v13 + 16) = v1;
  *(_QWORD *)(v13 + 24) = v2;
  v14 = (_QWORD *)swift_task_alloc();
  v0[32] = (uint64_t)v14;
  *v14 = v0;
  v14[1] = sub_1C2B3B49C;
  v15 = OUTLINED_FUNCTION_112_1();
  return OUTLINED_FUNCTION_65_2(v15, v16, v17, v18, v19);
}

uint64_t sub_1C2B3B84C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 240);
  swift_task_dealloc();
  swift_willThrow();

  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_95_18(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B3B8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = OUTLINED_FUNCTION_23_56(a1, a2);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3B8D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_176();
  v1 = OUTLINED_FUNCTION_43_29();
  OUTLINED_FUNCTION_136_4(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_1C2B3B92C;
  v3 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_51_3(v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B3B92C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_42_28();
  if (!v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    OUTLINED_FUNCTION_38();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B3B978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = OUTLINED_FUNCTION_23_56(a1, a2);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B3B9A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_176();
  v1 = OUTLINED_FUNCTION_43_29();
  OUTLINED_FUNCTION_136_4(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_1C2B3B92C;
  v3 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_51_3(v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B3B9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B3BA18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_166_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_110(v0);
  v2 = OUTLINED_FUNCTION_70_19(v1);
  return sub_1C2B3D5F0(v2, v3);
}

uint64_t sub_1C2B3BA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B3BA78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_166_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_110(v0);
  v2 = OUTLINED_FUNCTION_70_19(v1);
  return sub_1C2B3D63C(v2, v3);
}

uint64_t sub_1C2B3BABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B3BAD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_166_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_110(v0);
  v2 = OUTLINED_FUNCTION_70_19(v1);
  return sub_1C2B3D688(v2, v3);
}

uint64_t sub_1C2B3BB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B3BB34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_166_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return sub_1C2B3D6E4(v2);
}

uint64_t sub_1C2B3BB78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B3BB90()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_166_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return sub_1C2B3D6D4(v2);
}

uint64_t sub_1C2B3BBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B3BBF0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_166_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_110(v0);
  v2 = OUTLINED_FUNCTION_70_19(v1);
  return sub_1C2B3D6F4(v2, v3);
}

void sub_1C2B3BC34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, v1);
  (*(void (**)(char *))(v2 + 16))((char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1C2B3BCE4 + 4 * byte_1C2D158D4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C2B3BCE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  return 0x5374706D6F72702ELL;
}

void PromptForConfirmationFlowAsync.deinit()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_138_11();
  v2 = swift_bridgeObjectRelease();
  v3 = OUTLINED_FUNCTION_144_4(v2, v1[10], v1[11], v1[12]);
  OUTLINED_FUNCTION_33_1(v3);
  OUTLINED_FUNCTION_18();
}

uint64_t PromptForConfirmationFlowAsync.__deallocating_deinit()
{
  PromptForConfirmationFlowAsync.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B3BE38()
{
  return PromptForConfirmationFlowAsync.on(input:)() & 1;
}

void sub_1C2B3BE5C(uint64_t a1, uint64_t a2)
{
  PromptForConfirmationFlowAsync.execute(completion:)(a1, a2);
}

uint64_t sub_1C2B3BE7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return PromptForConfirmationFlowAsync.execute()(a1);
}

uint64_t sub_1C2B3BED0@<X0>(uint64_t a1@<X8>)
{
  return PromptForConfirmationFlowAsync.exitValue.getter(a1);
}

void sub_1C2B3BEF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_25_48();
  v0[2] = sub_1C2B3BFB0(v1, v2, v3, v4, v5);
  v0[3] = v6;
  OUTLINED_FUNCTION_25_48();
  v0[4] = sub_1C2B3C028(v7, v8, v9, v10, v11);
  v0[5] = v12;
  OUTLINED_FUNCTION_25_48();
  v0[6] = sub_1C2B3C12C(v13, v14, v15, v16, v17);
  v0[7] = v18;
  OUTLINED_FUNCTION_25_48();
  v0[8] = sub_1C2B3C230(v19, v20, v21, v22, v23);
  v0[9] = v24;
  OUTLINED_FUNCTION_25_48();
  v0[10] = sub_1C2B3C334(v25, v26, v27, v28, v29);
  v0[11] = v30;
  OUTLINED_FUNCTION_25_48();
  v0[12] = sub_1C2B3C438(v31, v32, v33, v34, v35);
  v0[13] = v36;
  OUTLINED_FUNCTION_25_48();
  v0[14] = sub_1C2B3C530(v37, v38, v39, v40, v41);
  v0[15] = v42;
  OUTLINED_FUNCTION_25_48();
  v48 = sub_1C2B3C628(v43, v44, v45, v46, v47);
  v50 = v49;
  swift_unknownObjectRelease();
  v0[16] = v48;
  v0[17] = v50;
  OUTLINED_FUNCTION_8_0();
}

uint64_t (*sub_1C2B3BFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C2B44084;
}

void *sub_1C2B3C028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF799D20;
}

uint64_t sub_1C2B3C0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 40) + *(_QWORD *)(a7 + 40));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v12;
  *v12 = v7;
  v12[1] = sub_1C28BCB84;
  return v14(a1, a2, a6, a7);
}

void *sub_1C2B3C12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF799D10;
}

uint64_t sub_1C2B3C1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 48) + *(_QWORD *)(a7 + 48));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v12;
  *v12 = v7;
  v12[1] = sub_1C28BCB84;
  return v14(a1, a2, a6, a7);
}

void *sub_1C2B3C230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF799D00;
}

uint64_t sub_1C2B3C2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 56) + *(_QWORD *)(a7 + 56));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v12;
  *v12 = v7;
  v12[1] = sub_1C28BCB84;
  return v14(a1, a2, a6, a7);
}

void *sub_1C2B3C334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF799CF0;
}

uint64_t sub_1C2B3C3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 64) + *(_QWORD *)(a7 + 64));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v12;
  *v12 = v7;
  v12[1] = sub_1C28BCB84;
  return v14(a1, a2, a6, a7);
}

void *sub_1C2B3C438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF799CE0;
}

uint64_t sub_1C2B3C4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 72) + *(_QWORD *)(a6 + 72));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = sub_1C28BCB84;
  return v12(a1, a5, a6);
}

void *sub_1C2B3C530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF799CD0;
}

uint64_t sub_1C2B3C5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 80) + *(_QWORD *)(a6 + 80));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = sub_1C28BCB84;
  return v12(a1, a5, a6);
}

void *sub_1C2B3C628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF799CC0;
}

uint64_t sub_1C2B3C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 88) + *(_QWORD *)(a7 + 88));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v12;
  *v12 = v7;
  v12[1] = sub_1C28BCB84;
  return v14(a1, a2, a6, a7);
}

void sub_1C2B3C72C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;

  OUTLINED_FUNCTION_25_48();
  v0[2] = sub_1C2B3C858(v1, v2, v3, v4, v5);
  v0[3] = v6;
  v7 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v8 = OUTLINED_FUNCTION_54_32(v7);
  v0[4] = &unk_1EF799C40;
  v0[5] = v8;
  v9 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v10 = OUTLINED_FUNCTION_54_32(v9);
  v0[6] = &unk_1EF799C50;
  v0[7] = v10;
  v11 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v12 = OUTLINED_FUNCTION_54_32(v11);
  v0[8] = &unk_1EF799C60;
  v0[9] = v12;
  v13 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v14 = OUTLINED_FUNCTION_54_32(v13);
  v0[10] = &unk_1EF799C70;
  v0[11] = v14;
  v15 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v16 = OUTLINED_FUNCTION_54_32(v15);
  v0[12] = &unk_1EF799C80;
  v0[13] = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v18 = OUTLINED_FUNCTION_54_32(v17);
  v0[14] = &unk_1EF799C90;
  v0[15] = v18;
  v19 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v20 = OUTLINED_FUNCTION_54_32(v19);
  v0[16] = &unk_1EF799CA0;
  v0[17] = v20;
  swift_unknownObjectRetain_n();
  OUTLINED_FUNCTION_8_0();
}

uint64_t (*sub_1C2B3C858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C2B44084;
}

uint64_t sub_1C2B3C8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B3C8F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_17_48(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_1C2B3C95C;
  OUTLINED_FUNCTION_0_34();
  return sub_1C2CFEA24();
}

uint64_t sub_1C2B3C95C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_40_26();
  if (v0)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    OUTLINED_FUNCTION_163();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2B3C9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v10)(uint64_t);
  uint64_t v11;

  v10 = sub_1C2B3CA18(a1, a4, a5, a6, a7);
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a7 + 40))(a3, v10, v11, a6, a7);
  return swift_release();
}

uint64_t (*sub_1C2B3CA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v10 = sub_1C2CFE0DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v18 - v13, a1, v10);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = a2;
  *((_QWORD *)v16 + 3) = a3;
  *((_QWORD *)v16 + 4) = a4;
  *((_QWORD *)v16 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v15], v14, v10);
  return sub_1C2B44004;
}

uint64_t sub_1C2B3CB1C(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v2 = sub_1C2CFE0DC();
  return sub_1C293511C(a1, v2);
}

uint64_t sub_1C2B3CB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B3CB9C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_17_48(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_145_5(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B3C95C);
  OUTLINED_FUNCTION_0_34();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B3CC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 48))(a3, sub_1C29F1DE8, v16, a6, a7);
  return swift_release();
}

uint64_t sub_1C2B3CD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B3CD2C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_17_48(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_145_5(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B3C95C);
  OUTLINED_FUNCTION_0_34();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B3CD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 56))(a3, sub_1C29F1DE8, v16, a6, a7);
  return swift_release();
}

uint64_t sub_1C2B3CE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B3CEB8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_17_48(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_145_5(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B3C95C);
  OUTLINED_FUNCTION_0_34();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B3CF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 64))(a3, sub_1C29F1DE8, v16, a6, a7);
  return swift_release();
}

uint64_t sub_1C2B3D020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B3D040()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_131_8(v1);
  *(_QWORD *)(v0 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B3D0AC);
  OUTLINED_FUNCTION_0_34();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B3D0AC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_75_22();
  if (v0)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2B3D0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a6 + 72))(sub_1C29F1DE8, v14, a5, a6);
  return swift_release();
}

uint64_t sub_1C2B3D1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B3D20C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_131_8(v1);
  *(_QWORD *)(v0 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B3D278);
  OUTLINED_FUNCTION_0_34();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B3D278()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_75_22();
  if (v0)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2B3D2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a6 + 80))(sub_1C29F1DE8, v14, a5, a6);
  return swift_release();
}

uint64_t sub_1C2B3D3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B3D3DC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_17_48(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_145_5(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B3D440);
  OUTLINED_FUNCTION_0_34();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B3D440()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_40_26();
  if (v0)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    OUTLINED_FUNCTION_163();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2B3D484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 88))(a3, sub_1C29F1DE8, v16, a6, a7);
  return swift_release();
}

void sub_1C2B3D588()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B3D5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B3D5B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_22_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_110(v0);
  v2 = OUTLINED_FUNCTION_121(v1);
  return OUTLINED_FUNCTION_24_5(v2, v3, v4);
}

uint64_t sub_1C2B3D5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B3D604()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_22_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_110(v0);
  v2 = OUTLINED_FUNCTION_121(v1);
  return OUTLINED_FUNCTION_24_5(v2, v3, v4);
}

uint64_t sub_1C2B3D63C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B3D650()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_22_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_110(v0);
  v2 = OUTLINED_FUNCTION_121(v1);
  return OUTLINED_FUNCTION_24_5(v2, v3, v4);
}

uint64_t sub_1C2B3D688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B3D69C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_22_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_110(v0);
  v2 = OUTLINED_FUNCTION_121(v1);
  return OUTLINED_FUNCTION_24_5(v2, v3, v4);
}

uint64_t sub_1C2B3D6D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B3D6E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B3D6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B3D708()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_22_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_110(v0);
  v2 = OUTLINED_FUNCTION_121(v1);
  return OUTLINED_FUNCTION_24_5(v2, v3, v4);
}

uint64_t sub_1C2B3D740()
{
  uint64_t v0;

  swift_release();
  swift_release();
  OUTLINED_FUNCTION_138_11();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C2B3D790()
{
  sub_1C2B3D740();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B3D7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B3D5A4(a1, a2);
}

uint64_t sub_1C2B3D814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B3D5F0(a1, a2);
}

uint64_t sub_1C2B3D874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B3D63C(a1, a2);
}

uint64_t sub_1C2B3D8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B3D688(a1, a2);
}

uint64_t sub_1C2B3D934(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B3D6D4(a1);
}

uint64_t sub_1C2B3D984(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B3D6E4(a1);
}

uint64_t sub_1C2B3D9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B3D6F4(a1, a2);
}

uint64_t sub_1C2B3DA34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v5 = OUTLINED_FUNCTION_9_6();
  v6 = (_QWORD *)OUTLINED_FUNCTION_86(v5);
  *v6 = v2;
  v6[1] = sub_1C28E1BA0;
  return v8(a1, a2);
}

uint64_t sub_1C2B3DA94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()(v2);
}

uint64_t sub_1C2B3DAD8()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_328(v1);
  return PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()();
}

uint64_t sub_1C2B3DB1C()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_328(v1);
  return PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)();
}

uint64_t sub_1C2B3DB68()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_17()
{
  swift_unknownObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_138_11();
  return swift_deallocObject();
}

uint64_t type metadata accessor for PromptForConfirmationFlowAsync.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptForConfirmationFlowAsync.State);
}

uint64_t type metadata accessor for AnyPromptForConfirmationFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyPromptForConfirmationFlowStrategy);
}

unint64_t sub_1C2B3DBDC()
{
  unint64_t result;

  result = qword_1EF799858[0];
  if (!qword_1EF799858[0])
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for ConfirmationResponse, &type metadata for ConfirmationResponse);
    atomic_store(result, qword_1EF799858);
  }
  return result;
}

uint64_t sub_1C2B3DC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B3DC40(a1, a2, a3, (uint64_t)&protocol conformance descriptor for PromptForConfirmationFlow<A>, (uint64_t)&protocol conformance descriptor for PromptForConfirmationFlow<A>);
}

uint64_t sub_1C2B3DC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B3DC40(a1, a2, a3, (uint64_t)&protocol conformance descriptor for PromptForConfirmationFlowAsync<A, B>, (uint64_t)&protocol conformance descriptor for PromptForConfirmationFlowAsync<A, B>);
}

uint64_t sub_1C2B3DC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1C3BC9CD4](a4);
  result = MEMORY[0x1C3BC9CD4](a5, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t dispatch thunk of ConfirmationResponseProviding.confirmationResponse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for SimpleConfirmationResponseProvider(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (v4)
        goto LABEL_15;
    }
    else
    {
      if (v3 == 2)
      {
        v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1))
          goto LABEL_17;
LABEL_15:
        v5 = (*a1 | (v4 << 8)) - 3;
        return (v5 + 1);
      }
      v4 = a1[1];
      if (a1[1])
        goto LABEL_15;
    }
  }
LABEL_17:
  if (*a1 <= 2u)
    v6 = 2;
  else
    v6 = *a1;
  v7 = v6 - 3;
  if (*a1 < 2u)
    v5 = -1;
  else
    v5 = v7;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleConfirmationResponseProvider(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C2B3DD74 + 4 * byte_1C2D158EB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C2B3DDA8 + 4 * byte_1C2D158E6[v4]))();
}

uint64_t sub_1C2B3DDA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B3DDB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2B3DDB8);
  return result;
}

uint64_t sub_1C2B3DDC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2B3DDCCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C2B3DDD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B3DDD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SimpleConfirmationResponseProvider()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t dispatch thunk of ConfirmationResponseParsing.parseConfirmationResponse(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void type metadata accessor for ServerProvidedSiriKitConfirmationResponseParser()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.parseConfirmationResponse(input:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeRepromptOnEmptyParse(itemToConfirm:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeRepromptOnLowConfidence(itemToConfirm:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeConfirmationRejectedResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeFlowCancelledResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeErrorResponse(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.actionForInput(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t type metadata accessor for PromptForConfirmationFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptForConfirmationFlow);
}

uint64_t method lookup function for PromptForConfirmationFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1C2B3E020(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = type metadata accessor for PromptForConfirmationFlowAsync.State(319, a1[10], a1[11], a1[12]);
  if (v2 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PromptForConfirmationFlowAsync(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptForConfirmationFlowAsync);
}

uint64_t method lookup function for PromptForConfirmationFlowAsync()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1C2B3E0D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C2B3E128(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  result = swift_checkMetadataState();
  if (v3 <= 0x3F)
  {
    result = type metadata accessor for Input(319);
    if (v6 <= 0x3F)
    {
      result = type metadata accessor for PromptResult(319, *(_QWORD *)(a1 + 24), v4, v5);
      if (v7 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

char *sub_1C2B3E1D8(char *a1, char **a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  BOOL v41;
  char *v42;
  char *v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  unsigned int v70;
  char *v71;
  char *v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  size_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  void *v84;
  const void *v85;
  char v86;
  unsigned int v87;
  char *v88;
  char *v89;
  unsigned int v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  _QWORD *v97;
  _QWORD *v98;
  unint64_t v99;
  unint64_t v100;
  int v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  __int128 v113;
  __int128 v114;
  unsigned int v115;
  uint64_t v116;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v132;

  v127 = *(_QWORD *)(a3 + 16);
  v129 = *(_QWORD *)(v127 - 8);
  v4 = *(_QWORD *)(v129 + 64);
  v5 = *(_QWORD *)(sub_1C2CFBCAC() - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v126 = sub_1C2CFCD44();
  v7 = *(_QWORD *)(v126 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v122 = sub_1C2CFBD9C();
  v9 = *(_QWORD *)(v122 - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v124 = sub_1C2CFBFD0();
  v11 = *(_QWORD *)(v124 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = sub_1C2CFBF28();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v10 | v12;
  v17 = v15 | (v10 | v12) & 0xF8;
  v18 = v17 | 7u;
  v19 = v6 + v18;
  v20 = (v6 + v18) & ~v18;
  v125 = v7;
  v21 = *(_QWORD *)(v7 + 64);
  v22 = v21 + 7;
  if (((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v21)
    v21 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v121 = v9;
  if (v21 <= *(_QWORD *)(v9 + 64))
    v21 = *(_QWORD *)(v9 + 64);
  v123 = v11;
  v23 = *(_QWORD *)(v11 + 64) + v15;
  if (*(_DWORD *)(v14 + 84))
    v24 = *(_QWORD *)(v14 + 64);
  else
    v24 = *(_QWORD *)(v14 + 64) + 1;
  v25 = (v24 + 7 + (v23 & ~(unint64_t)v15)) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v21 <= v26)
    v21 = (v25 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v27 = ((((((v25 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 > v27)
    v27 = v21;
  if (v27 <= 0x18)
    v28 = 24;
  else
    v28 = v27;
  if (((((v28 + v20 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41 > v4)
    v4 = ((((v28 + v20 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  v29 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v29 + 64) <= 9uLL)
    v30 = 9;
  else
    v30 = *(_QWORD *)(v29 + 64);
  v31 = 8 * v30;
  if (v30 > 3)
    goto LABEL_24;
  v32 = ((1 << v31) + 1) >> v31;
  v33 = 2;
  if (v32 > 0xFFFD)
    v33 = 4;
  if (v32 <= 0xFD)
LABEL_24:
    v33 = 1;
  v34 = v33 + v30;
  if (v34 <= v4)
    v34 = v4;
  if (v34 <= 9)
    v34 = 9;
  v35 = *(_DWORD *)(v129 + 80);
  v36 = *(_DWORD *)(v5 + 80);
  v37 = *(_DWORD *)(v29 + 80);
  v38 = v17 | ((v36 | v35) | v37) & 0xF8;
  v39 = (v16 | v15 | v35 | v36 | v37) & 0x100000;
  v41 = v34 + 1 > 0x18 || v39 != 0 || v38 > 7;
  v42 = a1;
  if (v41)
  {
    v43 = *a2;
    *(_QWORD *)a1 = *a2;
    v42 = &v43[((v38 | 7) + 16) & ~(unint64_t)(v38 | 7)];
    sub_1C2CFD350();
    return v42;
  }
  if (v30 > 3)
    goto LABEL_42;
  v44 = ((1 << v31) + 1) >> v31;
  v45 = 2;
  if (v44 > 0xFFFD)
    v45 = 4;
  if (v44 <= 0xFD)
LABEL_42:
    v45 = 1;
  v46 = v45 + v30;
  if (v46 <= v4)
    v46 = v4;
  if (v46 <= 9)
    v46 = 9;
  if (*((unsigned __int8 *)a2 + v46) >= 7u)
  {
    if (v30 > 3)
      goto LABEL_52;
    v47 = ((1 << v31) + 1) >> v31;
    v48 = 2;
    if (v47 > 0xFFFD)
      v48 = 4;
    if (v47 <= 0xFD)
LABEL_52:
      v48 = 1;
    v49 = v48 + v30;
    if (v49 <= v4)
      v49 = v4;
    if (v49 <= 9)
      LODWORD(v49) = 9;
    if (v49 <= 3)
      v50 = v49;
    else
      v50 = 4;
    __asm { BR              X15 }
  }
  switch(*((_BYTE *)a2 + v46))
  {
    case 0:
      (*(void (**)(char *, char **, uint64_t))(v129 + 16))(a1, a2, v127);
      if (v30 > 3)
        goto LABEL_66;
      v51 = ((1 << (8 * v30)) + 1) >> (8 * v30);
      v52 = 2;
      if (v51 > 0xFFFD)
        v52 = 4;
      if (v51 <= 0xFD)
LABEL_66:
        v52 = 1;
      v53 = v52 + v30;
      if (v53 <= v4)
        v53 = v4;
      if (v53 <= 9)
        v53 = 9;
      a1[v53] = 0;
      return v42;
    case 1:
      (*(void (**)(char *, char **, uint64_t))(v129 + 16))(a1, a2, v127);
      if (v30 > 3)
        goto LABEL_86;
      v57 = ((1 << (8 * v30)) + 1) >> (8 * v30);
      v58 = 2;
      if (v57 > 0xFFFD)
        v58 = 4;
      if (v57 <= 0xFD)
LABEL_86:
        v58 = 1;
      v59 = v58 + v30;
      if (v59 <= v4)
        v59 = v4;
      if (v59 <= 9)
        v59 = 9;
      v60 = 1;
      goto LABEL_194;
    case 2:
      v61 = *(_DWORD *)(v14 + 80);
      v118 = v22;
      v119 = v24 + 7;
      v120 = v13;
      v128 = v4;
      v130 = v28;
      v62 = ~v18;
      (*(void (**)(char *))(v5 + 16))(a1);
      v63 = (_QWORD *)((unint64_t)&a1[v19] & v62);
      v64 = ((unint64_t)a2 + v19) & v62;
      if (*(unsigned __int8 *)(v64 + v130) >= 8u)
      {
        if (v130 <= 3)
          v65 = v130;
        else
          v65 = 4;
        __asm { BR              X12 }
      }
      v75 = v61;
      v76 = (unint64_t)v63;
      v79 = v130 + 1;
      v80 = v24;
      v81 = ~v75;
      switch(*(_BYTE *)(v64 + v130))
      {
        case 0:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v125 + 16))(v63, v64, v126);
          *(_BYTE *)(v76 + v130) = 0;
          break;
        case 1:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v125 + 16))(v63, v64, v126);
          *(_QWORD *)((v118 + v76) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v118 + v64) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v76 + v130) = 1;
          sub_1C2CFD350();
          break;
        case 2:
          *v63 = *(_QWORD *)v64;
          v63[1] = *(_QWORD *)(v64 + 8);
          v63[2] = *(_QWORD *)(v64 + 16);
          *((_BYTE *)v63 + v130) = 2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 3:
          *v63 = *(_QWORD *)v64;
          *((_BYTE *)v63 + v130) = 3;
          swift_unknownObjectRetain();
          break;
        case 4:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v121 + 16))(v63, v64, v122);
          *(_BYTE *)(v76 + v130) = 4;
          break;
        case 5:
          v82 = *(void **)v64;
          *v63 = *(_QWORD *)v64;
          *((_BYTE *)v63 + v130) = 5;
          v83 = v82;
          break;
        case 6:
          v132 = v130 + 1;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v123 + 16))(v63, v64, v124);
          if (__swift_getEnumTagSinglePayload((v23 + v64) & v81, 1, v120))
          {
            memcpy((void *)((v23 + v76) & v81), (const void *)((v23 + v64) & v81), v80);
          }
          else
          {
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16))((v23 + v76) & v81, (v23 + v64) & v81, v120);
            __swift_storeEnumTagSinglePayload((v23 + v76) & v81, 0, 1, v120);
          }
          v92 = (_QWORD *)((v119 + ((v23 + v76) & v81)) & 0xFFFFFFFFFFFFFFF8);
          v93 = (_QWORD *)((v119 + ((v23 + v64) & v81)) & 0xFFFFFFFFFFFFFFF8);
          *v92 = *v93;
          v92[1] = v93[1];
          v94 = ((unint64_t)v92 + 19) & 0xFFFFFFFFFFFFFFF8;
          v95 = ((unint64_t)v93 + 19) & 0xFFFFFFFFFFFFFFF8;
          v96 = *(_DWORD *)v95;
          *(_BYTE *)(v94 + 4) = *(_BYTE *)(v95 + 4);
          *(_DWORD *)v94 = v96;
          *(_BYTE *)(v76 + v130) = 6;
          goto LABEL_172;
        case 7:
          v132 = v130 + 1;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v123 + 16))(v63, v64, v124);
          v84 = (void *)((v23 + v76) & v81);
          v85 = (const void *)((v23 + v64) & v81);
          if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v120))
          {
            memcpy(v84, v85, v80);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v84, v85, v120);
            __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v120);
          }
          v97 = (_QWORD *)(((unint64_t)v84 + v119) & 0xFFFFFFFFFFFFFFF8);
          v98 = (_QWORD *)(((unint64_t)v85 + v119) & 0xFFFFFFFFFFFFFFF8);
          *v97 = *v98;
          v97[1] = v98[1];
          v99 = ((unint64_t)v97 + 19) & 0xFFFFFFFFFFFFFFF8;
          v100 = ((unint64_t)v98 + 19) & 0xFFFFFFFFFFFFFFF8;
          v101 = *(_DWORD *)v100;
          *(_BYTE *)(v99 + 4) = *(_BYTE *)(v100 + 4);
          *(_DWORD *)v99 = v101;
          v102 = (_QWORD *)(((v76 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          v103 = (_QWORD *)(((v64 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          *v102 = *v103;
          v102[1] = v103[1];
          v104 = (_QWORD *)(((unint64_t)v102 + 23) & 0xFFFFFFFFFFFFFFF8);
          v105 = (_QWORD *)(((unint64_t)v103 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v104 = *v105;
          v104[1] = v105[1];
          v106 = (_QWORD *)(((unint64_t)v104 + 23) & 0xFFFFFFFFFFFFFFF8);
          v107 = (_QWORD *)(((unint64_t)v105 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v106 = *v107;
          v106[1] = v107[1];
          *(_BYTE *)(v76 + v130) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_172:
          swift_bridgeObjectRetain();
          v79 = v132;
          v42 = a1;
          break;
        default:
          memcpy(v63, (const void *)v64, v130 + 1);
          break;
      }
      v108 = (_QWORD *)(((v64 | 7) + v79) & 0xFFFFFFFFFFFFFFF8);
      v109 = (_QWORD *)(((v76 | 7) + v79) & 0xFFFFFFFFFFFFF8);
      *v109 = *v108;
      v110 = ((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8;
      v111 = ((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8;
      v112 = *(_QWORD *)(v111 + 24);
      swift_bridgeObjectRetain();
      if (v112 < 0xFFFFFFFF)
      {
        v113 = *(_OWORD *)v111;
        v114 = *(_OWORD *)(v111 + 16);
        *(_QWORD *)(v110 + 32) = *(_QWORD *)(v111 + 32);
        *(_OWORD *)v110 = v113;
        *(_OWORD *)(v110 + 16) = v114;
      }
      else
      {
        *(_QWORD *)(v110 + 24) = v112;
        *(_QWORD *)(v110 + 32) = *(_QWORD *)(v111 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v112 - 8))(v110, v111, v112);
      }
      *(_BYTE *)(v110 + 40) = *(_BYTE *)(v111 + 40);
      if (v30 > 3)
        goto LABEL_180;
      v115 = ((1 << (8 * v30)) + 1) >> (8 * v30);
      v116 = 2;
      if (v115 > 0xFFFD)
        v116 = 4;
      if (v115 <= 0xFD)
LABEL_180:
        v116 = 1;
      v59 = v116 + v30;
      if (v59 <= v128)
        v59 = v128;
      if (v59 <= 9)
        v59 = 9;
      v60 = 2;
      goto LABEL_194;
    case 3:
      (*(void (**)(char *, char **, uint64_t))(v129 + 16))(a1, a2, v127);
      if (v30 > 3)
        goto LABEL_101;
      v66 = ((1 << (8 * v30)) + 1) >> (8 * v30);
      v67 = 2;
      if (v66 > 0xFFFD)
        v67 = 4;
      if (v66 <= 0xFD)
LABEL_101:
        v67 = 1;
      v59 = v67 + v30;
      if (v59 <= v4)
        v59 = v4;
      if (v59 <= 9)
        v59 = 9;
      v60 = 3;
      goto LABEL_194;
    case 4:
      (*(void (**)(char *, char **, uint64_t))(v129 + 16))(a1, a2, v127);
      if (v30 > 3)
        goto LABEL_111;
      v68 = ((1 << (8 * v30)) + 1) >> (8 * v30);
      v69 = 2;
      if (v68 > 0xFFFD)
        v69 = 4;
      if (v68 <= 0xFD)
LABEL_111:
        v69 = 1;
      v59 = v69 + v30;
      if (v59 <= v4)
        v59 = v4;
      if (v59 <= 9)
        v59 = 9;
      v60 = 4;
      goto LABEL_194;
    case 5:
      if (v30 > 3)
        goto LABEL_118;
      v77 = ((1 << v31) + 1) >> v31;
      if (v77 > 0xFFFD)
      {
        v70 = *(_DWORD *)((char *)a2 + v30);
      }
      else if (v77 <= 0xFD)
      {
LABEL_118:
        v70 = *((unsigned __int8 *)a2 + v30);
      }
      else
      {
        v70 = *(unsigned __int16 *)((char *)a2 + v30);
      }
      if (v70 >= 2)
      {
        if (v30 <= 3)
          v78 = v30;
        else
          v78 = 4;
        __asm { BR              X13 }
      }
      if (v70 != 1)
      {
        (*(void (**)(char *, char **))(v29 + 16))(a1, a2);
        v86 = 8 * v30;
        if (v30 > 3)
        {
LABEL_155:
          a1[v30] = 0;
LABEL_158:
          if (v30 > 3)
            goto LABEL_162;
          v90 = ((1 << v86) + 1) >> v86;
          v91 = 2;
          if (v90 > 0xFFFD)
            v91 = 4;
          if (v90 <= 0xFD)
LABEL_162:
            v91 = 1;
          goto LABEL_189;
        }
        v87 = ((1 << (8 * v30)) + 1) >> (8 * v30);
        if (v87 > 0xFFFD)
        {
          *(_DWORD *)&a1[v30] = 0;
        }
        else
        {
          if (v87 <= 0xFD)
            goto LABEL_155;
          *(_WORD *)&a1[v30] = 0;
        }
        goto LABEL_187;
      }
      v88 = *a2;
      v89 = *a2;
      v86 = 8 * v30;
      *(_QWORD *)a1 = v88;
      a1[8] = *((_BYTE *)a2 + 8);
      if (v30 > 3)
        goto LABEL_157;
      v87 = ((1 << (8 * v30)) + 1) >> (8 * v30);
      if (v87 > 0xFFFD)
      {
        *(_DWORD *)&a1[v30] = 1;
      }
      else
      {
        if (v87 <= 0xFD)
        {
LABEL_157:
          a1[v30] = 1;
          goto LABEL_158;
        }
        *(_WORD *)&a1[v30] = 1;
      }
LABEL_187:
      v41 = v87 > 0xFFFD;
      v91 = 2;
      if (v41)
        v91 = 4;
LABEL_189:
      v59 = v91 + v30;
      if (v59 <= v4)
        v59 = v4;
      if (v59 <= 9)
        v59 = 9;
      v60 = 5;
LABEL_194:
      v42[v59] = v60;
      return v42;
    case 6:
      v71 = *a2;
      v72 = *a2;
      *(_QWORD *)a1 = v71;
      a1[8] = *((_BYTE *)a2 + 8);
      if (v30 > 3)
        goto LABEL_123;
      v73 = ((1 << (8 * v30)) + 1) >> (8 * v30);
      v74 = 2;
      if (v73 > 0xFFFD)
        v74 = 4;
      if (v73 <= 0xFD)
LABEL_123:
        v74 = 1;
      v59 = v74 + v30;
      if (v59 <= v4)
        v59 = v4;
      if (v59 <= 9)
        v59 = 9;
      v60 = 6;
      goto LABEL_194;
    default:
      if (v30 > 3)
        goto LABEL_76;
      v54 = ((1 << v31) + 1) >> v31;
      v55 = 2;
      if (v54 > 0xFFFD)
        v55 = 4;
      if (v54 <= 0xFD)
LABEL_76:
        v55 = 1;
      v56 = v55 + v30;
      if (v56 <= v4)
        v56 = v4;
      if (v56 <= 9)
        v56 = 9;
      memcpy(a1, a2, v56 + 1);
      return v42;
  }
}

void sub_1C2B3EF2C(id *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id *v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v65 = *(_QWORD *)(a2 + 16);
  v64 = *(_QWORD *)(v65 - 8);
  v4 = *(_QWORD *)(v64 + 64);
  v5 = sub_1C2CFBCAC();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  v6 = *(_QWORD *)(v62 + 64);
  v61 = sub_1C2CFCD44();
  v7 = *(_QWORD *)(v61 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v58 = sub_1C2CFBD9C();
  v9 = *(_QWORD *)(v58 - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v59 = sub_1C2CFBFD0();
  v11 = *(_QWORD *)(v59 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = sub_1C2CFBF28();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v10 | v12) & 0xF8 | v15 | 7;
  v17 = v6 + v16;
  v18 = (v6 + v16) & ~v16;
  v60 = v7;
  v19 = *(_QWORD *)(v7 + 64);
  if (((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
    v19 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v57 = v9;
  v20 = *(_QWORD *)(v9 + 64);
  v21 = v11;
  if (v19 <= v20)
    v19 = v20;
  v22 = *(_QWORD *)(v11 + 64) + v15;
  if (*(_DWORD *)(v14 + 84))
    v23 = *(_QWORD *)(v14 + 64);
  else
    v23 = *(_QWORD *)(v14 + 64) + 1;
  v24 = ((v22 & ~v15) + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 19) & 0xFFFFFFFFFFFFFFF8;
  if (v19 <= (v25 | 5))
    v19 = v25 | 5;
  v26 = ((((((v24 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= v26)
    v19 = v26;
  if (v19 <= 0x18)
    v27 = 24;
  else
    v27 = v19;
  v28 = ((((v27 + v18 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v28 <= v4)
    v29 = v4;
  else
    v29 = v28;
  v30 = *(_QWORD *)(a2 + 24);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = 9;
  if (*(_QWORD *)(v31 + 64) > 9uLL)
    v32 = *(_QWORD *)(v31 + 64);
  v33 = 8 * v32;
  if (v32 > 3)
    goto LABEL_24;
  v34 = ((1 << v33) + 1) >> v33;
  v35 = 2;
  if (v34 > 0xFFFD)
    v35 = 4;
  if (v34 <= 0xFD)
LABEL_24:
    v35 = 1;
  v36 = v35 + v32;
  if (v36 <= v29)
    v36 = v29;
  if (v36 <= 9)
    v36 = 9;
  if (*((unsigned __int8 *)a1 + v36) >= 7u)
  {
    if (v32 > 3)
      goto LABEL_34;
    v37 = ((1 << v33) + 1) >> v33;
    v38 = 2;
    if (v37 > 0xFFFD)
      v38 = 4;
    if (v37 <= 0xFD)
LABEL_34:
      v38 = 1;
    v39 = v38 + v32;
    if (v39 > v29)
      v29 = v39;
    if (v29 <= 9)
      LODWORD(v29) = 9;
    if (v29 <= 3)
      v40 = v29;
    else
      v40 = 4;
    __asm { BR              X17 }
  }
  switch(*((_BYTE *)a1 + v36))
  {
    case 0:
    case 1:
    case 3:
    case 4:
      v31 = v64;
      v30 = v65;
      goto LABEL_45;
    case 2:
      v56 = *(_QWORD *)(v13 - 8);
      v41 = v13;
      v42 = ~v16;
      (*(void (**)(id *, uint64_t))(v62 + 8))(a1, v63);
      v43 = (id *)(((unint64_t)a1 + v17) & v42);
      v44 = *((unsigned __int8 *)v43 + v27);
      if (v44 >= 8)
      {
        if (v27 <= 3)
          v45 = v27;
        else
          v45 = 4;
        __asm { BR              X12 }
      }
      v49 = v27 + 1;
      v50 = ~v15;
      switch(v44)
      {
        case 0u:
          v52 = v60;
          v51 = v61;
          goto LABEL_68;
        case 1u:
          (*(void (**)(id *, uint64_t))(v60 + 8))(v43, v61);
          swift_release();
          break;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_76;
        case 3u:
          swift_unknownObjectRelease();
          break;
        case 4u:
          v52 = v57;
          v51 = v58;
LABEL_68:
          (*(void (**)(id *, uint64_t))(v52 + 8))(v43, v51);
          break;
        case 5u:

          break;
        case 6u:
          (*(void (**)(id *, uint64_t))(v21 + 8))(v43, v59);
          v53 = ((unint64_t)v43 + v22) & v50;
          if (!__swift_getEnumTagSinglePayload(v53, 1, v41))
            (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v53, v41);
          goto LABEL_76;
        case 7u:
          (*(void (**)(id *, uint64_t))(v21 + 8))(v43, v59);
          v54 = ((unint64_t)v43 + v22) & v50;
          if (!__swift_getEnumTagSinglePayload(v54, 1, v41))
            (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v41);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_76:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      v55 = (((((unint64_t)v43 | 7) + v49) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v55 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v55);
      return;
    case 5:
      if (v32 > 3)
        goto LABEL_52;
      v47 = ((1 << v33) + 1) >> v33;
      if (v47 > 0xFFFD)
      {
        v46 = *(_DWORD *)((char *)a1 + v32);
      }
      else if (v47 <= 0xFD)
      {
LABEL_52:
        v46 = *((unsigned __int8 *)a1 + v32);
      }
      else
      {
        v46 = *(unsigned __int16 *)((char *)a1 + v32);
      }
      if (v46 >= 2)
      {
        if (v32 <= 3)
          v48 = v32;
        else
          v48 = 4;
        __asm { BR              X15 }
      }
      if (v46 == 1)
LABEL_82:

      else
LABEL_45:
        (*(void (**)(id *, uint64_t))(v31 + 8))(a1, v30);
      return;
    case 6:
      goto LABEL_82;
    default:
      return;
  }
}

_BYTE *sub_1C2B3F594(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int v60;
  id v61;
  id v62;
  unsigned int v63;
  uint64_t v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void *v72;
  const void *v73;
  unsigned int v74;
  id v75;
  id v76;
  unsigned int v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  unint64_t v81;
  unint64_t v82;
  int v83;
  _QWORD *v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  int v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  __int128 v100;
  __int128 v101;
  unsigned int v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v106;
  size_t __n;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v120 = *(_QWORD *)(a3 + 16);
  v118 = *(_QWORD *)(v120 - 8);
  v5 = *(_QWORD *)(v118 + 64);
  v6 = sub_1C2CFBCAC();
  v116 = *(_QWORD *)(v6 - 8);
  v117 = v6;
  v7 = *(_QWORD *)(v116 + 64);
  v115 = sub_1C2CFCD44();
  v8 = *(_QWORD *)(v115 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v111 = sub_1C2CFBD9C();
  v10 = *(_QWORD *)(v111 - 8);
  v11 = *(_DWORD *)(v10 + 80) | v9;
  v113 = sub_1C2CFBFD0();
  v12 = *(_QWORD *)(v113 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = sub_1C2CFBF28();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v11 | v13) & 0xF8 | v16 | 7;
  v18 = v7 + v17;
  v19 = (v7 + v17) & ~v17;
  v114 = v8;
  v20 = *(_QWORD *)(v8 + 64);
  v21 = v10;
  v22 = v20 + 7;
  if (((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v20)
    v20 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v20 <= *(_QWORD *)(v21 + 64))
    v20 = *(_QWORD *)(v21 + 64);
  v112 = v12;
  v23 = *(_QWORD *)(v12 + 64) + v16;
  if (*(_DWORD *)(v15 + 84))
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = *(_QWORD *)(v15 + 64) + 1;
  v25 = (v24 + 7 + (v23 & ~v16)) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v20 <= v26)
    v20 = (v25 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v27 = ((((((v25 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v20 <= v27)
    v20 = v27;
  if (v20 <= 0x18)
    v28 = 24;
  else
    v28 = v20;
  v29 = ((((v28 + v19 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v29 <= v5)
    v30 = v5;
  else
    v30 = v29;
  v31 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v31 + 64) <= 9uLL)
    v32 = 9;
  else
    v32 = *(_QWORD *)(v31 + 64);
  v33 = 8 * v32;
  if (v32 > 3)
    goto LABEL_25;
  v34 = ((1 << v33) + 1) >> v33;
  v35 = 2;
  if (v34 > 0xFFFD)
    v35 = 4;
  if (v34 <= 0xFD)
LABEL_25:
    v35 = 1;
  v36 = v35 + v32;
  if (v36 <= v30)
    v36 = v30;
  if (v36 <= 9)
    v36 = 9;
  if (*(unsigned __int8 *)(a2 + v36) >= 7u)
  {
    if (v32 > 3)
      goto LABEL_35;
    v37 = ((1 << v33) + 1) >> v33;
    v38 = 2;
    if (v37 > 0xFFFD)
      v38 = 4;
    if (v37 <= 0xFD)
LABEL_35:
      v38 = 1;
    v39 = v38 + v32;
    if (v39 <= v30)
      v39 = v30;
    if (v39 <= 9)
      LODWORD(v39) = 9;
    if (v39 <= 3)
      v40 = v39;
    else
      v40 = 4;
    __asm { BR              X15 }
  }
  switch(*(_BYTE *)(a2 + v36))
  {
    case 0:
      v41 = a1;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v118 + 16))(a1, a2, v120);
      if (v32 > 3)
        goto LABEL_49;
      v42 = ((1 << v33) + 1) >> v33;
      v43 = 2;
      if (v42 > 0xFFFD)
        v43 = 4;
      if (v42 <= 0xFD)
LABEL_49:
        v43 = 1;
      v44 = v43 + v32;
      if (v44 <= v30)
        v44 = v30;
      if (v44 <= 9)
        v44 = 9;
      a1[v44] = 0;
      return v41;
    case 1:
      v41 = a1;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v118 + 16))(a1, a2, v120);
      if (v32 > 3)
        goto LABEL_69;
      v48 = ((1 << v33) + 1) >> v33;
      v49 = 2;
      if (v48 > 0xFFFD)
        v49 = 4;
      if (v48 <= 0xFD)
LABEL_69:
        v49 = 1;
      v50 = v49 + v32;
      if (v50 <= v30)
        v50 = v30;
      if (v50 <= 9)
        v50 = 9;
      v51 = 1;
      goto LABEL_178;
    case 2:
      v106 = *(_QWORD *)(v14 - 8);
      __n = v24;
      v108 = v24 + 7;
      v109 = v14;
      v110 = v30;
      v52 = ~v17;
      v119 = v28;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v116 + 16))(a1, a2, v117);
      v53 = (unint64_t)&a1[v18] & v52;
      v54 = (v18 + a2) & v52;
      if (*(unsigned __int8 *)(v54 + v119) >= 8u)
      {
        if (v119 <= 3)
          v55 = v119;
        else
          v55 = 4;
        __asm { BR              X12 }
      }
      v65 = 8 * v32;
      v68 = v119 + 1;
      v69 = ~v16;
      switch(*(_BYTE *)(v54 + v119))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v114 + 16))(v53, v54, v115);
          *(_BYTE *)(v53 + v119) = 0;
          goto LABEL_130;
        case 1:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v114 + 16))(v53, v54, v115);
          *(_QWORD *)((v22 + v53) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v22 + v54) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v53 + v119) = 1;
          sub_1C2CFD350();
          goto LABEL_130;
        case 2:
          *(_QWORD *)v53 = *(_QWORD *)v54;
          *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
          *(_QWORD *)(v53 + 16) = *(_QWORD *)(v54 + 16);
          *(_BYTE *)(v53 + v119) = 2;
          swift_bridgeObjectRetain();
          v65 = 8 * v32;
          swift_bridgeObjectRetain();
          goto LABEL_130;
        case 3:
          *(_QWORD *)v53 = *(_QWORD *)v54;
          *(_BYTE *)(v53 + v119) = 3;
          swift_unknownObjectRetain();
          goto LABEL_130;
        case 4:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v21 + 16))(v53, v54, v111);
          *(_BYTE *)(v53 + v119) = 4;
          goto LABEL_130;
        case 5:
          v70 = *(void **)v54;
          *(_QWORD *)v53 = *(_QWORD *)v54;
          *(_BYTE *)(v53 + v119) = 5;
          v71 = v70;
          goto LABEL_130;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v112 + 16))(v53, v54, v113);
          if (__swift_getEnumTagSinglePayload((v23 + v54) & v69, 1, v109))
          {
            memcpy((void *)((v23 + v53) & v69), (const void *)((v23 + v54) & v69), __n);
          }
          else
          {
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v106 + 16))((v23 + v53) & v69, (v23 + v54) & v69, v109);
            __swift_storeEnumTagSinglePayload((v23 + v53) & v69, 0, 1, v109);
          }
          v41 = a1;
          v79 = (_QWORD *)((v108 + ((v23 + v53) & v69)) & 0xFFFFFFFFFFFFFFF8);
          v80 = (_QWORD *)((v108 + ((v23 + v54) & v69)) & 0xFFFFFFFFFFFFFFF8);
          *v79 = *v80;
          v79[1] = v80[1];
          v81 = ((unint64_t)v79 + 19) & 0xFFFFFFFFFFFFFFF8;
          v82 = ((unint64_t)v80 + 19) & 0xFFFFFFFFFFFFFFF8;
          v83 = *(_DWORD *)v82;
          *(_BYTE *)(v81 + 4) = *(_BYTE *)(v82 + 4);
          *(_DWORD *)v81 = v83;
          *(_BYTE *)(v53 + v119) = 6;
          swift_bridgeObjectRetain();
          goto LABEL_155;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v112 + 16))(v53, v54, v113);
          v72 = (void *)((v23 + v53) & v69);
          v73 = (const void *)((v23 + v54) & v69);
          if (__swift_getEnumTagSinglePayload((uint64_t)v73, 1, v109))
          {
            memcpy(v72, v73, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v106 + 16))(v72, v73, v109);
            __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v109);
          }
          v84 = (_QWORD *)(((unint64_t)v72 + v108) & 0xFFFFFFFFFFFFFFF8);
          v85 = (_QWORD *)(((unint64_t)v73 + v108) & 0xFFFFFFFFFFFFFFF8);
          *v84 = *v85;
          v84[1] = v85[1];
          v86 = ((unint64_t)v84 + 19) & 0xFFFFFFFFFFFFFFF8;
          v87 = ((unint64_t)v85 + 19) & 0xFFFFFFFFFFFFFFF8;
          v88 = *(_DWORD *)v87;
          *(_BYTE *)(v86 + 4) = *(_BYTE *)(v87 + 4);
          *(_DWORD *)v86 = v88;
          v89 = (_QWORD *)(((v53 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          v90 = (_QWORD *)(((v54 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          *v89 = *v90;
          v89[1] = v90[1];
          v91 = (_QWORD *)(((unint64_t)v89 + 23) & 0xFFFFFFFFFFFFFFF8);
          v92 = (_QWORD *)(((unint64_t)v90 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v91 = *v92;
          v91[1] = v92[1];
          v93 = (_QWORD *)(((unint64_t)v91 + 23) & 0xFFFFFFFFFFFFFFF8);
          v94 = (_QWORD *)(((unint64_t)v92 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v93 = *v94;
          v93[1] = v94[1];
          *(_BYTE *)(v53 + v119) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v41 = a1;
LABEL_155:
          v65 = 8 * v32;
          break;
        default:
          memcpy((void *)v53, (const void *)v54, v119 + 1);
LABEL_130:
          v41 = a1;
          break;
      }
      v95 = (_QWORD *)(((v54 | 7) + v68) & 0xFFFFFFFFFFFFFFF8);
      v96 = (_QWORD *)(((v53 | 7) + v68) & 0xFFFFFFFFFFFFF8);
      *v96 = *v95;
      v97 = ((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8;
      v98 = ((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8;
      v99 = *(_QWORD *)(v98 + 24);
      swift_bridgeObjectRetain();
      if (v99 < 0xFFFFFFFF)
      {
        v100 = *(_OWORD *)v98;
        v101 = *(_OWORD *)(v98 + 16);
        *(_QWORD *)(v97 + 32) = *(_QWORD *)(v98 + 32);
        *(_OWORD *)v97 = v100;
        *(_OWORD *)(v97 + 16) = v101;
      }
      else
      {
        *(_QWORD *)(v97 + 24) = v99;
        *(_QWORD *)(v97 + 32) = *(_QWORD *)(v98 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v99 - 8))(v97, v98, v99);
      }
      *(_BYTE *)(v97 + 40) = *(_BYTE *)(v98 + 40);
      if (v32 > 3)
        goto LABEL_163;
      v102 = ((1 << v65) + 1) >> v65;
      v103 = 2;
      if (v102 > 0xFFFD)
        v103 = 4;
      if (v102 <= 0xFD)
LABEL_163:
        v103 = 1;
      v50 = v103 + v32;
      if (v50 <= v110)
        v50 = v110;
      if (v50 <= 9)
        v50 = 9;
      v51 = 2;
      goto LABEL_178;
    case 3:
      v41 = a1;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v118 + 16))(a1, a2, v120);
      if (v32 > 3)
        goto LABEL_84;
      v56 = ((1 << v33) + 1) >> v33;
      v57 = 2;
      if (v56 > 0xFFFD)
        v57 = 4;
      if (v56 <= 0xFD)
LABEL_84:
        v57 = 1;
      v50 = v57 + v32;
      if (v50 <= v30)
        v50 = v30;
      if (v50 <= 9)
        v50 = 9;
      v51 = 3;
      goto LABEL_178;
    case 4:
      v41 = a1;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v118 + 16))(a1, a2, v120);
      if (v32 > 3)
        goto LABEL_94;
      v58 = ((1 << v33) + 1) >> v33;
      v59 = 2;
      if (v58 > 0xFFFD)
        v59 = 4;
      if (v58 <= 0xFD)
LABEL_94:
        v59 = 1;
      v50 = v59 + v32;
      if (v50 <= v30)
        v50 = v30;
      if (v50 <= 9)
        v50 = 9;
      v51 = 4;
      goto LABEL_178;
    case 5:
      v41 = a1;
      if (v32 > 3)
        goto LABEL_101;
      v66 = ((1 << v33) + 1) >> v33;
      if (v66 > 0xFFFD)
      {
        v60 = *(_DWORD *)(a2 + v32);
      }
      else if (v66 <= 0xFD)
      {
LABEL_101:
        v60 = *(unsigned __int8 *)(a2 + v32);
      }
      else
      {
        v60 = *(unsigned __int16 *)(a2 + v32);
      }
      if (v60 >= 2)
      {
        if (v32 <= 3)
          v67 = v32;
        else
          v67 = 4;
        __asm { BR              X13 }
      }
      if (v60 == 1)
      {
        v75 = *(id *)a2;
        v76 = *(id *)a2;
        *(_QWORD *)a1 = v75;
        a1[8] = *(_BYTE *)(a2 + 8);
        if (v32 > 3)
          goto LABEL_143;
        v74 = ((1 << v33) + 1) >> v33;
        if (v74 > 0xFFFD)
        {
          *(_DWORD *)&a1[v32] = 1;
          goto LABEL_171;
        }
        if (v74 <= 0xFD)
        {
LABEL_143:
          a1[v32] = 1;
          goto LABEL_144;
        }
        *(_WORD *)&a1[v32] = 1;
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t))(v31 + 16))(a1, a2);
        if (v32 > 3)
        {
LABEL_139:
          a1[v32] = 0;
LABEL_144:
          if (v32 > 3)
            goto LABEL_148;
          v77 = ((1 << v33) + 1) >> v33;
          v78 = 2;
          if (v77 > 0xFFFD)
            v78 = 4;
          if (v77 <= 0xFD)
LABEL_148:
            v78 = 1;
          goto LABEL_173;
        }
        v74 = ((1 << v33) + 1) >> v33;
        if (v74 > 0xFFFD)
        {
          *(_DWORD *)&a1[v32] = 0;
        }
        else
        {
          if (v74 <= 0xFD)
            goto LABEL_139;
          *(_WORD *)&a1[v32] = 0;
        }
      }
LABEL_171:
      v104 = v74 > 0xFFFD;
      v78 = 2;
      if (v104)
        v78 = 4;
LABEL_173:
      v50 = v78 + v32;
      if (v50 <= v30)
        v50 = v30;
      if (v50 <= 9)
        v50 = 9;
      v51 = 5;
LABEL_178:
      v41[v50] = v51;
      return v41;
    case 6:
      v61 = *(id *)a2;
      v62 = *(id *)a2;
      v41 = a1;
      *(_QWORD *)a1 = v61;
      a1[8] = *(_BYTE *)(a2 + 8);
      if (v32 > 3)
        goto LABEL_106;
      v63 = ((1 << v33) + 1) >> v33;
      v64 = 2;
      if (v63 > 0xFFFD)
        v64 = 4;
      if (v63 <= 0xFD)
LABEL_106:
        v64 = 1;
      v50 = v64 + v32;
      if (v50 <= v30)
        v50 = v30;
      if (v50 <= 9)
        v50 = 9;
      v51 = 6;
      goto LABEL_178;
    default:
      if (v32 > 3)
        goto LABEL_59;
      v45 = ((1 << v33) + 1) >> v33;
      v46 = 2;
      if (v45 > 0xFFFD)
        v46 = 4;
      if (v45 <= 0xFD)
LABEL_59:
        v46 = 1;
      v41 = a1;
      v47 = v46 + v32;
      if (v47 <= v30)
        v47 = v30;
      if (v47 <= 9)
        v47 = 9;
      memcpy(a1, (const void *)a2, v47 + 1);
      return v41;
  }
}

id *sub_1C2B40230(id *a1, id *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id *v46;
  id *v47;
  unint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  unsigned int v73;
  id v74;
  id v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  void *v80;
  id v81;
  void *v82;
  const void *v83;
  void *v84;
  const void *v85;
  unsigned int v86;
  id v87;
  id v88;
  unsigned int v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  unint64_t v93;
  unint64_t v94;
  int v95;
  _QWORD *v96;
  _QWORD *v97;
  unint64_t v98;
  unint64_t v99;
  int v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  __int128 v112;
  __int128 v113;
  unsigned int v114;
  uint64_t v115;
  BOOL v116;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  size_t __n;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  size_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;

  if (a1 == a2)
    return a1;
  v139 = *(_QWORD *)(a3 + 16);
  v138 = *(_QWORD *)(v139 - 8);
  v6 = *(_QWORD *)(v138 + 64);
  v135 = sub_1C2CFBCAC();
  v134 = *(_QWORD *)(v135 - 8);
  v7 = *(_QWORD *)(v134 + 64);
  v129 = sub_1C2CFCD44();
  v8 = *(_QWORD *)(v129 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v121 = sub_1C2CFBD9C();
  v10 = *(_QWORD *)(v121 - 8);
  v11 = *(_DWORD *)(v10 + 80) | v9;
  v127 = sub_1C2CFBFD0();
  v12 = *(_QWORD *)(v127 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v130 = sub_1C2CFBF28();
  v14 = *(_QWORD *)(v130 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v11 | v13) & 0xF8 | v15 | 7;
  v133 = v7 + v16;
  v17 = (v7 + v16) & ~v16;
  v128 = v8;
  v18 = *(_QWORD *)(v8 + 64);
  v119 = v18 + 7;
  v120 = v10;
  if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18)
    v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v18 <= *(_QWORD *)(v10 + 64))
    v18 = *(_QWORD *)(v10 + 64);
  v126 = v12;
  v19 = *(_QWORD *)(v12 + 64);
  v20 = *(_QWORD *)(v130 - 8);
  v125 = v19 + v15;
  v21 = (v19 + v15) & ~v15;
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = *(_QWORD *)(v14 + 64) + 1;
  __n = v22;
  v123 = v22 + 7;
  v23 = (v22 + 7 + v21) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v18 <= v24)
    v18 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v25 = ((((((v23 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= v25)
    v18 = v25;
  if (v18 <= 0x18)
    v26 = 24;
  else
    v26 = v18;
  v27 = ((((v26 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v27 <= v6)
    v28 = v6;
  else
    v28 = v27;
  v29 = *(_QWORD *)(a3 + 24);
  v131 = *(_QWORD *)(v29 - 8);
  if (*(_QWORD *)(v131 + 64) <= 9uLL)
    v30 = 9;
  else
    v30 = *(_QWORD *)(v131 + 64);
  v140 = 8 * v30;
  if (v30 > 3)
    goto LABEL_26;
  v31 = ((1 << v140) + 1) >> v140;
  v32 = 2;
  if (v31 > 0xFFFD)
    v32 = 4;
  if (v31 <= 0xFD)
LABEL_26:
    v32 = 1;
  v33 = v32 + v30;
  if (v33 <= v28)
    v33 = v28;
  if (v33 <= 9)
    v33 = 9;
  v34 = *((unsigned __int8 *)a1 + v33);
  if (v34 >= 7)
  {
    if (v30 > 3)
      goto LABEL_36;
    v35 = ((1 << v140) + 1) >> v140;
    v36 = 2;
    if (v35 > 0xFFFD)
      v36 = 4;
    if (v35 <= 0xFD)
LABEL_36:
      v36 = 1;
    v37 = v36 + v30;
    if (v37 <= v28)
      v37 = v28;
    if (v37 <= 9)
      LODWORD(v37) = 9;
    if (v37 <= 3)
      v38 = v37;
    else
      v38 = 4;
    __asm { BR              X15 }
  }
  v136 = v26 + 1;
  v137 = v26;
  v132 = ~v16;
  v124 = ~v15;
  switch(v34)
  {
    case 0u:
    case 1u:
    case 3u:
    case 4u:
      (*(void (**)(id *, uint64_t))(v138 + 8))(a1, v139);
      goto LABEL_84;
    case 2u:
      (*(void (**)(id *, uint64_t))(v134 + 8))(a1, v135);
      v39 = ((unint64_t)a1 + v133) & v132;
      if (*(unsigned __int8 *)(v39 + v137) >= 8u)
      {
        if (v137 <= 3)
          v40 = v137;
        else
          v40 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v39 + v137))
      {
        case 0:
          v45 = v8;
          v44 = v129;
          goto LABEL_69;
        case 1:
          v46 = (id *)(((unint64_t)a1 + v133) & v132);
          (*(void (**)(id *, uint64_t))(v8 + 8))(v46, v129);
          swift_release();
          goto LABEL_71;
        case 2:
          v46 = (id *)(((unint64_t)a1 + v133) & v132);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_71;
        case 3:
          v46 = (id *)(((unint64_t)a1 + v133) & v132);
          swift_unknownObjectRelease();
          goto LABEL_71;
        case 4:
          v45 = v120;
          v44 = v121;
LABEL_69:
          v46 = (id *)(((unint64_t)a1 + v133) & v132);
          (*(void (**)(id *, uint64_t))(v45 + 8))(v46, v44);
          goto LABEL_71;
        case 5:
          v46 = (id *)(((unint64_t)a1 + v133) & v132);

LABEL_71:
          v39 = (unint64_t)v46;
          break;
        case 6:
          (*(void (**)(unint64_t, uint64_t))(v126 + 8))(((unint64_t)a1 + v133) & v132, v127);
          v47 = (id *)(((unint64_t)a1 + v133) & v132);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v47 + v125) & v124, 1, v130))
            (*(void (**)(unint64_t, uint64_t))(v20 + 8))(((unint64_t)v47 + v125) & v124, v130);
          goto LABEL_78;
        case 7:
          v118 = ((unint64_t)a1 + v133) & v132;
          (*(void (**)(unint64_t, uint64_t))(v126 + 8))(v118, v127);
          if (!__swift_getEnumTagSinglePayload((v125 + v118) & v124, 1, v130))
            (*(void (**)(unint64_t, uint64_t))(v20 + 8))((v125 + v118) & v124, v130);
          swift_bridgeObjectRelease();
          v47 = (id *)(((unint64_t)a1 + v133) & v132);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_78:
          swift_bridgeObjectRelease();
          v39 = (unint64_t)v47;
          break;
        default:
          break;
      }
      v48 = (((v39 | 7) + v136) & 0xFFFFFFFFFFFFFFF8) + 15;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v48 & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_84;
    case 5u:
      if (v30 > 3)
        goto LABEL_53;
      v42 = ((1 << v140) + 1) >> v140;
      if (v42 > 0xFFFD)
      {
        v41 = *(_DWORD *)((char *)a1 + v30);
      }
      else if (v42 <= 0xFD)
      {
LABEL_53:
        v41 = *((unsigned __int8 *)a1 + v30);
      }
      else
      {
        v41 = *(unsigned __int16 *)((char *)a1 + v30);
      }
      if (v41 >= 2)
      {
        if (v30 <= 3)
          v43 = v30;
        else
          v43 = 4;
        __asm { BR              X12 }
      }
      if (v41 == 1)
        goto LABEL_83;
      (*(void (**)(id *, uint64_t))(v131 + 8))(a1, v29);
LABEL_84:
      if (v30 > 3)
        goto LABEL_88;
      v49 = ((1 << v140) + 1) >> v140;
      v50 = 2;
      if (v49 > 0xFFFD)
        v50 = 4;
      if (v49 <= 0xFD)
LABEL_88:
        v50 = 1;
      v51 = v50 + v30;
      if (v51 <= v28)
        v51 = v28;
      if (v51 <= 9)
        v51 = 9;
      if (*((unsigned __int8 *)a2 + v51) >= 7u)
      {
        if (v30 > 3)
          goto LABEL_98;
        v52 = ((1 << v140) + 1) >> v140;
        v53 = 2;
        if (v52 > 0xFFFD)
          v53 = 4;
        if (v52 <= 0xFD)
LABEL_98:
          v53 = 1;
        v54 = v53 + v30;
        if (v54 <= v28)
          v54 = v28;
        if (v54 <= 9)
          LODWORD(v54) = 9;
        if (v54 <= 3)
          v55 = v54;
        else
          v55 = 4;
        __asm { BR              X13 }
      }
      switch(*((_BYTE *)a2 + v51))
      {
        case 0:
          (*(void (**)(id *, id *, uint64_t))(v138 + 16))(a1, a2, v139);
          if (v30 > 3)
            goto LABEL_112;
          v56 = ((1 << v140) + 1) >> v140;
          v57 = 2;
          if (v56 > 0xFFFD)
            v57 = 4;
          if (v56 <= 0xFD)
LABEL_112:
            v57 = 1;
          v58 = v57 + v30;
          if (v58 <= v28)
            v58 = v28;
          if (v58 <= 9)
            v58 = 9;
          *((_BYTE *)a1 + v58) = 0;
          return a1;
        case 1:
          (*(void (**)(id *, id *, uint64_t))(v138 + 16))(a1, a2, v139);
          if (v30 > 3)
            goto LABEL_132;
          v62 = ((1 << v140) + 1) >> v140;
          v63 = 2;
          if (v62 > 0xFFFD)
            v63 = 4;
          if (v62 <= 0xFD)
LABEL_132:
            v63 = 1;
          v64 = v63 + v30;
          if (v64 <= v28)
            v64 = v28;
          if (v64 <= 9)
            v64 = 9;
          v65 = 1;
          goto LABEL_239;
        case 2:
          (*(void (**)(id *, id *, uint64_t))(v134 + 16))(a1, a2, v135);
          v66 = ((unint64_t)a1 + v133) & v132;
          v67 = ((unint64_t)a2 + v133) & v132;
          if (*(unsigned __int8 *)(v67 + v137) >= 8u)
          {
            if (v137 <= 3)
              v68 = v137;
            else
              v68 = 4;
            __asm { BR              X12 }
          }
          switch(*(_BYTE *)(v67 + v137))
          {
            case 0:
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 16))(((unint64_t)a1 + v133) & v132, v67, v129);
              *(_BYTE *)(v66 + v137) = 0;
              break;
            case 1:
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 16))(((unint64_t)a1 + v133) & v132, v67, v129);
              *(_QWORD *)((v119 + v66) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v119 + v67) & 0xFFFFFFFFFFFFF8);
              *(_BYTE *)(v66 + v137) = 1;
              sub_1C2CFD350();
              break;
            case 2:
              *(_QWORD *)v66 = *(_QWORD *)v67;
              *(_QWORD *)((((unint64_t)a1 + v133) & v132) + 8) = *(_QWORD *)(v67 + 8);
              *(_QWORD *)((((unint64_t)a1 + v133) & v132) + 0x10) = *(_QWORD *)(v67 + 16);
              *(_BYTE *)(v66 + v137) = 2;
              swift_bridgeObjectRetain();
              goto LABEL_216;
            case 3:
              *(_QWORD *)v66 = *(_QWORD *)v67;
              *(_BYTE *)(v66 + v137) = 3;
              swift_unknownObjectRetain();
              break;
            case 4:
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v120 + 16))(((unint64_t)a1 + v133) & v132, v67, v121);
              *(_BYTE *)(v66 + v137) = 4;
              break;
            case 5:
              v80 = *(void **)v67;
              *(_QWORD *)v66 = *(_QWORD *)v67;
              *(_BYTE *)(v66 + v137) = 5;
              v81 = v80;
              break;
            case 6:
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 16))(((unint64_t)a1 + v133) & v132, v67, v127);
              v82 = (void *)((v125 + v66) & v124);
              v83 = (const void *)((v125 + v67) & v124);
              if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v130))
              {
                memcpy(v82, v83, __n);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v82, v83, v130);
                __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v130);
              }
              v91 = (_QWORD *)(((unint64_t)v82 + v123) & 0xFFFFFFFFFFFFFFF8);
              v92 = (_QWORD *)(((unint64_t)v83 + v123) & 0xFFFFFFFFFFFFFFF8);
              *v91 = *v92;
              v91[1] = v92[1];
              v93 = ((unint64_t)v91 + 19) & 0xFFFFFFFFFFFFFFF8;
              v94 = ((unint64_t)v92 + 19) & 0xFFFFFFFFFFFFFFF8;
              v95 = *(_DWORD *)v94;
              *(_BYTE *)(v93 + 4) = *(_BYTE *)(v94 + 4);
              *(_DWORD *)v93 = v95;
              *(_BYTE *)(v66 + v137) = 6;
              goto LABEL_216;
            case 7:
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 16))(((unint64_t)a1 + v133) & v132, v67, v127);
              v84 = (void *)((v125 + v66) & v124);
              v85 = (const void *)((v125 + v67) & v124);
              if (__swift_getEnumTagSinglePayload((uint64_t)v85, 1, v130))
              {
                memcpy(v84, v85, __n);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v84, v85, v130);
                __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v130);
              }
              v96 = (_QWORD *)(((unint64_t)v84 + v123) & 0xFFFFFFFFFFFFFFF8);
              v97 = (_QWORD *)(((unint64_t)v85 + v123) & 0xFFFFFFFFFFFFFFF8);
              *v96 = *v97;
              v96[1] = v97[1];
              v98 = ((unint64_t)v96 + 19) & 0xFFFFFFFFFFFFFFF8;
              v99 = ((unint64_t)v97 + 19) & 0xFFFFFFFFFFFFFFF8;
              v100 = *(_DWORD *)v99;
              *(_BYTE *)(v98 + 4) = *(_BYTE *)(v99 + 4);
              *(_DWORD *)v98 = v100;
              v101 = (_QWORD *)(((v66 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
              v102 = (_QWORD *)(((v67 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
              *v101 = *v102;
              v101[1] = v102[1];
              v103 = (_QWORD *)(((unint64_t)v101 + 23) & 0xFFFFFFFFFFFFFFF8);
              v104 = (_QWORD *)(((unint64_t)v102 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v103 = *v104;
              v103[1] = v104[1];
              v105 = (_QWORD *)(((unint64_t)v103 + 23) & 0xFFFFFFFFFFFFFFF8);
              v106 = (_QWORD *)(((unint64_t)v104 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v105 = *v106;
              v105[1] = v106[1];
              *(_BYTE *)(v66 + v137) = 7;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_216:
              swift_bridgeObjectRetain();
              break;
            default:
              memcpy((void *)(((unint64_t)a1 + v133) & v132), (const void *)v67, v136);
              break;
          }
          v107 = (_QWORD *)(((v67 | 7) + v136) & 0xFFFFFFFFFFFFFFF8);
          v108 = (_QWORD *)(((v66 | 7) + v136) & 0xFFFFFFFFFFFFF8);
          *v108 = *v107;
          v109 = ((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8;
          v110 = ((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFFFF8;
          v111 = *(_QWORD *)(v110 + 24);
          swift_bridgeObjectRetain();
          if (v111 < 0xFFFFFFFF)
          {
            v112 = *(_OWORD *)v110;
            v113 = *(_OWORD *)(v110 + 16);
            *(_QWORD *)(v109 + 32) = *(_QWORD *)(v110 + 32);
            *(_OWORD *)v109 = v112;
            *(_OWORD *)(v109 + 16) = v113;
          }
          else
          {
            *(_QWORD *)(v109 + 24) = v111;
            *(_QWORD *)(v109 + 32) = *(_QWORD *)(v110 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v111 - 8))(v109, v110, v111);
          }
          *(_BYTE *)(v109 + 40) = *(_BYTE *)(v110 + 40);
          if (v30 > 3)
            goto LABEL_224;
          v114 = ((1 << v140) + 1) >> v140;
          v115 = 2;
          if (v114 > 0xFFFD)
            v115 = 4;
          if (v114 <= 0xFD)
LABEL_224:
            v115 = 1;
          v64 = v115 + v30;
          if (v64 <= v28)
            v64 = v28;
          if (v64 <= 9)
            v64 = 9;
          v65 = 2;
          goto LABEL_239;
        case 3:
          (*(void (**)(id *, id *, uint64_t))(v138 + 16))(a1, a2, v139);
          if (v30 > 3)
            goto LABEL_147;
          v69 = ((1 << v140) + 1) >> v140;
          v70 = 2;
          if (v69 > 0xFFFD)
            v70 = 4;
          if (v69 <= 0xFD)
LABEL_147:
            v70 = 1;
          v64 = v70 + v30;
          if (v64 <= v28)
            v64 = v28;
          if (v64 <= 9)
            v64 = 9;
          v65 = 3;
          goto LABEL_239;
        case 4:
          (*(void (**)(id *, id *, uint64_t))(v138 + 16))(a1, a2, v139);
          if (v30 > 3)
            goto LABEL_157;
          v71 = ((1 << v140) + 1) >> v140;
          v72 = 2;
          if (v71 > 0xFFFD)
            v72 = 4;
          if (v71 <= 0xFD)
LABEL_157:
            v72 = 1;
          v64 = v72 + v30;
          if (v64 <= v28)
            v64 = v28;
          if (v64 <= 9)
            v64 = 9;
          v65 = 4;
          goto LABEL_239;
        case 5:
          if (v30 > 3)
            goto LABEL_164;
          v78 = ((1 << v140) + 1) >> v140;
          if (v78 > 0xFFFD)
          {
            v73 = *(_DWORD *)((char *)a2 + v30);
          }
          else if (v78 <= 0xFD)
          {
LABEL_164:
            v73 = *((unsigned __int8 *)a2 + v30);
          }
          else
          {
            v73 = *(unsigned __int16 *)((char *)a2 + v30);
          }
          if (v73 >= 2)
          {
            if (v30 <= 3)
              v79 = v30;
            else
              v79 = 4;
            __asm { BR              X12 }
          }
          if (v73 != 1)
          {
            (*(void (**)(id *, id *, uint64_t))(v131 + 16))(a1, a2, v29);
            if (v30 > 3)
            {
LABEL_200:
              *((_BYTE *)a1 + v30) = 0;
LABEL_205:
              if (v30 > 3)
                goto LABEL_209;
              v89 = ((1 << v140) + 1) >> v140;
              v90 = 2;
              if (v89 > 0xFFFD)
                v90 = 4;
              if (v89 <= 0xFD)
LABEL_209:
                v90 = 1;
              goto LABEL_234;
            }
            v86 = ((1 << v140) + 1) >> v140;
            if (v86 > 0xFFFD)
            {
              *(_DWORD *)((char *)a1 + v30) = 0;
            }
            else
            {
              if (v86 <= 0xFD)
                goto LABEL_200;
              *(_WORD *)((char *)a1 + v30) = 0;
            }
            goto LABEL_232;
          }
          v87 = *a2;
          v88 = *a2;
          *a1 = v87;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          if (v30 > 3)
            goto LABEL_204;
          v86 = ((1 << v140) + 1) >> v140;
          if (v86 > 0xFFFD)
          {
            *(_DWORD *)((char *)a1 + v30) = 1;
          }
          else
          {
            if (v86 <= 0xFD)
            {
LABEL_204:
              *((_BYTE *)a1 + v30) = 1;
              goto LABEL_205;
            }
            *(_WORD *)((char *)a1 + v30) = 1;
          }
LABEL_232:
          v116 = v86 > 0xFFFD;
          v90 = 2;
          if (v116)
            v90 = 4;
LABEL_234:
          v64 = v90 + v30;
          if (v64 <= v28)
            v64 = v28;
          if (v64 <= 9)
            v64 = 9;
          v65 = 5;
LABEL_239:
          *((_BYTE *)a1 + v64) = v65;
          return a1;
        case 6:
          v74 = *a2;
          v75 = *a2;
          *a1 = v74;
          *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
          if (v30 > 3)
            goto LABEL_169;
          v76 = ((1 << v140) + 1) >> v140;
          v77 = 2;
          if (v76 > 0xFFFD)
            v77 = 4;
          if (v76 <= 0xFD)
LABEL_169:
            v77 = 1;
          v64 = v77 + v30;
          if (v64 <= v28)
            v64 = v28;
          if (v64 <= 9)
            v64 = 9;
          v65 = 6;
          goto LABEL_239;
        default:
          if (v30 > 3)
            goto LABEL_122;
          v59 = ((1 << v140) + 1) >> v140;
          v60 = 2;
          if (v59 > 0xFFFD)
            v60 = 4;
          if (v59 <= 0xFD)
LABEL_122:
            v60 = 1;
          v61 = v60 + v30;
          if (v61 <= v28)
            v61 = v28;
          if (v61 <= 9)
            v61 = 9;
          memcpy(a1, a2, v61 + 1);
          return a1;
      }
    case 6u:
LABEL_83:

      goto LABEL_84;
    default:
      goto LABEL_84;
  }
}

_BYTE *sub_1C2B413B0(_BYTE *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  char v65;
  void *v66;
  const void *v67;
  void *v68;
  const void *v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  _OWORD *v78;
  _OWORD *v79;
  unint64_t v80;
  unint64_t v81;
  int v82;
  _OWORD *v83;
  _OWORD *v84;
  _OWORD *v85;
  _OWORD *v86;
  _QWORD *v87;
  _QWORD *v88;
  unint64_t v89;
  unint64_t v90;
  __int128 v91;
  __int128 v92;
  unsigned int v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v97;
  size_t __n;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v110 = *(_QWORD *)(a3 + 16);
  v108 = *(_QWORD *)(v110 - 8);
  v5 = *(_QWORD *)(v108 + 64);
  v6 = sub_1C2CFBCAC();
  v106 = *(_QWORD *)(v6 - 8);
  v107 = v6;
  v7 = *(_QWORD *)(v106 + 64);
  v105 = sub_1C2CFCD44();
  v8 = *(_QWORD *)(v105 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v102 = sub_1C2CFBD9C();
  v10 = *(_QWORD *)(v102 - 8);
  v11 = *(_DWORD *)(v10 + 80) | v9;
  v103 = sub_1C2CFBFD0();
  v12 = *(_QWORD *)(v103 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = sub_1C2CFBF28();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v11 | v13) & 0xF8 | v16 | 7;
  v18 = v7 + v17;
  v104 = v8;
  v19 = *(_QWORD *)(v8 + 64);
  v20 = v12;
  v21 = v19 + 7;
  if (((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
    v19 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v101 = v10;
  if (v19 <= *(_QWORD *)(v10 + 64))
    v19 = *(_QWORD *)(v10 + 64);
  v22 = *(_QWORD *)(v20 + 64) + v16;
  if (*(_DWORD *)(v15 + 84))
    v23 = *(_QWORD *)(v15 + 64);
  else
    v23 = *(_QWORD *)(v15 + 64) + 1;
  v24 = (v23 + 7 + (v22 & ~v16)) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v19 <= v25)
    v19 = (v24 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v26 = ((((((v24 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= v26)
    v19 = v26;
  if (v19 <= 0x18)
    v27 = 24;
  else
    v27 = v19;
  if (((((v27 + (v18 & ~v17) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41 > v5)
    v5 = ((((v27 + (v18 & ~v17) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  v28 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v28 + 64) <= 9uLL)
    v29 = 9;
  else
    v29 = *(_QWORD *)(v28 + 64);
  v30 = 8 * v29;
  if (v29 > 3)
    goto LABEL_24;
  v31 = ((1 << v30) + 1) >> v30;
  v32 = 2;
  if (v31 > 0xFFFD)
    v32 = 4;
  if (v31 <= 0xFD)
LABEL_24:
    v32 = 1;
  v33 = v32 + v29;
  if (v33 <= v5)
    v33 = v5;
  if (v33 <= 9)
    v33 = 9;
  if (a2[v33] >= 7u)
  {
    if (v29 > 3)
      goto LABEL_34;
    v34 = ((1 << v30) + 1) >> v30;
    v35 = 2;
    if (v34 > 0xFFFD)
      v35 = 4;
    if (v34 <= 0xFD)
LABEL_34:
      v35 = 1;
    v36 = v35 + v29;
    if (v36 <= v5)
      v36 = v5;
    if (v36 <= 9)
      LODWORD(v36) = 9;
    if (v36 <= 3)
      v37 = v36;
    else
      v37 = 4;
    __asm { BR              X15 }
  }
  switch(a2[v33])
  {
    case 0u:
      v38 = a1;
      (*(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v108 + 32))(a1, a2, v110);
      if (v29 > 3)
        goto LABEL_48;
      v39 = ((1 << v30) + 1) >> v30;
      v40 = 2;
      if (v39 > 0xFFFD)
        v40 = 4;
      if (v39 <= 0xFD)
LABEL_48:
        v40 = 1;
      v41 = v40 + v29;
      if (v41 <= v5)
        v41 = v5;
      if (v41 <= 9)
        v41 = 9;
      a1[v41] = 0;
      return v38;
    case 1u:
      v38 = a1;
      (*(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v108 + 32))(a1, a2, v110);
      if (v29 > 3)
        goto LABEL_68;
      v45 = ((1 << v30) + 1) >> v30;
      v46 = 2;
      if (v45 > 0xFFFD)
        v46 = 4;
      if (v45 <= 0xFD)
LABEL_68:
        v46 = 1;
      v47 = v46 + v29;
      if (v47 <= v5)
        v47 = v5;
      if (v47 <= 9)
        v47 = 9;
      v48 = 1;
      goto LABEL_173;
    case 2u:
      v97 = *(_QWORD *)(v14 - 8);
      __n = v23;
      v99 = v23 + 7;
      v100 = v14;
      v109 = v5;
      v49 = ~v17;
      v111 = v27;
      (*(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v106 + 32))(a1, a2, v107);
      v50 = (unint64_t)&a1[v18] & v49;
      v51 = (unint64_t)&a2[v18] & v49;
      if (*(unsigned __int8 *)(v51 + v111) >= 8u)
      {
        if (v111 <= 3)
          v52 = v111;
        else
          v52 = 4;
        __asm { BR              X12 }
      }
      v62 = v111 + 1;
      v63 = ~v16;
      switch(*(_BYTE *)(v51 + v111))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v104 + 32))(v50, v51, v105);
          *(_BYTE *)(v50 + v111) = 0;
          goto LABEL_153;
        case 1:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v104 + 32))(v50, v51, v105);
          *(_QWORD *)((v21 + v50) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v21 + v51) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v50 + v111) = 1;
          goto LABEL_153;
        case 2:
          v64 = *(_OWORD *)v51;
          *(_QWORD *)(v50 + 16) = *(_QWORD *)(v51 + 16);
          *(_OWORD *)v50 = v64;
          v65 = 2;
          goto LABEL_128;
        case 3:
          *(_QWORD *)v50 = *(_QWORD *)v51;
          v65 = 3;
          goto LABEL_128;
        case 4:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 32))(v50, v51, v102);
          *(_BYTE *)(v50 + v111) = 4;
          goto LABEL_153;
        case 5:
          *(_QWORD *)v50 = *(_QWORD *)v51;
          v65 = 5;
LABEL_128:
          *(_BYTE *)(v50 + v111) = v65;
          goto LABEL_153;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v50, v51, v103);
          v66 = (void *)((v22 + v50) & v63);
          v67 = (const void *)((v22 + v51) & v63);
          if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v100))
          {
            memcpy(v66, v67, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v97 + 32))(v66, v67, v100);
            __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v100);
          }
          v73 = (_OWORD *)(((unint64_t)v66 + v99) & 0xFFFFFFFFFFFFFFF8);
          v74 = (_OWORD *)(((unint64_t)v67 + v99) & 0xFFFFFFFFFFFFFFF8);
          *v73 = *v74;
          v75 = ((unint64_t)v73 + 19) & 0xFFFFFFFFFFFFFFF8;
          v76 = ((unint64_t)v74 + 19) & 0xFFFFFFFFFFFFFFF8;
          v77 = *(_DWORD *)v76;
          *(_BYTE *)(v75 + 4) = *(_BYTE *)(v76 + 4);
          *(_DWORD *)v75 = v77;
          v38 = a1;
          *(_BYTE *)(v50 + v111) = 6;
          goto LABEL_154;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v50, v51, v103);
          v68 = (void *)((v22 + v50) & v63);
          v69 = (const void *)((v22 + v51) & v63);
          if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v100))
          {
            memcpy(v68, v69, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v97 + 32))(v68, v69, v100);
            __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v100);
          }
          v78 = (_OWORD *)(((unint64_t)v68 + v99) & 0xFFFFFFFFFFFFFFF8);
          v79 = (_OWORD *)(((unint64_t)v69 + v99) & 0xFFFFFFFFFFFFFFF8);
          *v78 = *v79;
          v80 = ((unint64_t)v78 + 19) & 0xFFFFFFFFFFFFFFF8;
          v81 = ((unint64_t)v79 + 19) & 0xFFFFFFFFFFFFFFF8;
          v82 = *(_DWORD *)v81;
          *(_BYTE *)(v80 + 4) = *(_BYTE *)(v81 + 4);
          *(_DWORD *)v80 = v82;
          v83 = (_OWORD *)(((v50 | 7) + v25) & 0xFFFFFFFFFFFFFFF8);
          v84 = (_OWORD *)(((v51 | 7) + v25) & 0xFFFFFFFFFFFFFFF8);
          *v83 = *v84;
          v85 = (_OWORD *)(((unint64_t)v83 + 23) & 0xFFFFFFFFFFFFFFF8);
          v86 = (_OWORD *)(((unint64_t)v84 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v85 = *v86;
          *(_OWORD *)(((unint64_t)v85 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v86 + 23) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v50 + v111) = 7;
          goto LABEL_153;
        default:
          memcpy((void *)v50, (const void *)v51, v111 + 1);
LABEL_153:
          v38 = a1;
LABEL_154:
          v87 = (_QWORD *)(((v50 | 7) + v62) & 0xFFFFFFFFFFFFF8);
          v88 = (_QWORD *)(((v51 | 7) + v62) & 0xFFFFFFFFFFFFFFF8);
          *v87 = *v88;
          v89 = ((unint64_t)v87 + 15) & 0xFFFFFFFFFFFFFFF8;
          v90 = ((unint64_t)v88 + 15) & 0xFFFFFFFFFFFFFFF8;
          v91 = *(_OWORD *)v90;
          v92 = *(_OWORD *)(v90 + 16);
          *(_QWORD *)(v89 + 32) = *(_QWORD *)(v90 + 32);
          *(_OWORD *)v89 = v91;
          *(_OWORD *)(v89 + 16) = v92;
          *(_BYTE *)(v89 + 40) = *(_BYTE *)(v90 + 40);
          if (v29 > 3)
            goto LABEL_158;
          v93 = ((1 << (8 * v29)) + 1) >> (8 * v29);
          v94 = 2;
          if (v93 > 0xFFFD)
            v94 = 4;
          if (v93 <= 0xFD)
LABEL_158:
            v94 = 1;
          v47 = v94 + v29;
          if (v47 <= v109)
            v47 = v109;
          if (v47 <= 9)
            v47 = 9;
          v48 = 2;
          break;
      }
      goto LABEL_173;
    case 3u:
      v38 = a1;
      (*(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v108 + 32))(a1, a2, v110);
      if (v29 > 3)
        goto LABEL_83;
      v53 = ((1 << v30) + 1) >> v30;
      v54 = 2;
      if (v53 > 0xFFFD)
        v54 = 4;
      if (v53 <= 0xFD)
LABEL_83:
        v54 = 1;
      v47 = v54 + v29;
      if (v47 <= v5)
        v47 = v5;
      if (v47 <= 9)
        v47 = 9;
      v48 = 3;
      goto LABEL_173;
    case 4u:
      v38 = a1;
      (*(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v108 + 32))(a1, a2, v110);
      if (v29 > 3)
        goto LABEL_93;
      v55 = ((1 << v30) + 1) >> v30;
      v56 = 2;
      if (v55 > 0xFFFD)
        v56 = 4;
      if (v55 <= 0xFD)
LABEL_93:
        v56 = 1;
      v47 = v56 + v29;
      if (v47 <= v5)
        v47 = v5;
      if (v47 <= 9)
        v47 = 9;
      v48 = 4;
      goto LABEL_173;
    case 5u:
      v38 = a1;
      if (v29 > 3)
        goto LABEL_100;
      v60 = ((1 << v30) + 1) >> v30;
      if (v60 > 0xFFFD)
      {
        v57 = *(_DWORD *)&a2[v29];
      }
      else if (v60 <= 0xFD)
      {
LABEL_100:
        v57 = a2[v29];
      }
      else
      {
        v57 = *(unsigned __int16 *)&a2[v29];
      }
      if (v57 >= 2)
      {
        if (v29 <= 3)
          v61 = v29;
        else
          v61 = 4;
        __asm { BR              X13 }
      }
      if (v57 == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        if (v29 > 3)
          goto LABEL_141;
        v70 = ((1 << v30) + 1) >> v30;
        if (v70 > 0xFFFD)
        {
          *(_DWORD *)&a1[v29] = 1;
          goto LABEL_166;
        }
        if (v70 <= 0xFD)
        {
LABEL_141:
          a1[v29] = 1;
          goto LABEL_142;
        }
        *(_WORD *)&a1[v29] = 1;
      }
      else
      {
        (*(void (**)(_BYTE *, unsigned __int8 *))(v28 + 32))(a1, a2);
        if (v29 > 3)
        {
LABEL_137:
          a1[v29] = 0;
LABEL_142:
          if (v29 > 3)
            goto LABEL_146;
          v71 = ((1 << v30) + 1) >> v30;
          v72 = 2;
          if (v71 > 0xFFFD)
            v72 = 4;
          if (v71 <= 0xFD)
LABEL_146:
            v72 = 1;
          goto LABEL_168;
        }
        v70 = ((1 << v30) + 1) >> v30;
        if (v70 > 0xFFFD)
        {
          *(_DWORD *)&a1[v29] = 0;
        }
        else
        {
          if (v70 <= 0xFD)
            goto LABEL_137;
          *(_WORD *)&a1[v29] = 0;
        }
      }
LABEL_166:
      v95 = v70 > 0xFFFD;
      v72 = 2;
      if (v95)
        v72 = 4;
LABEL_168:
      v47 = v72 + v29;
      if (v47 <= v5)
        v47 = v5;
      if (v47 <= 9)
        v47 = 9;
      v48 = 5;
LABEL_173:
      v38[v47] = v48;
      return v38;
    case 6u:
      v38 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      if (v29 > 3)
        goto LABEL_105;
      v58 = ((1 << v30) + 1) >> v30;
      v59 = 2;
      if (v58 > 0xFFFD)
        v59 = 4;
      if (v58 <= 0xFD)
LABEL_105:
        v59 = 1;
      v47 = v59 + v29;
      if (v47 <= v5)
        v47 = v5;
      if (v47 <= 9)
        v47 = 9;
      v48 = 6;
      goto LABEL_173;
    default:
      if (v29 > 3)
        goto LABEL_58;
      v42 = ((1 << v30) + 1) >> v30;
      v43 = 2;
      if (v42 > 0xFFFD)
        v43 = 4;
      if (v42 <= 0xFD)
LABEL_58:
        v43 = 1;
      v38 = a1;
      v44 = v43 + v29;
      if (v44 <= v5)
        v44 = v5;
      if (v44 <= 9)
        v44 = 9;
      memcpy(a1, a2, v44 + 1);
      return v38;
  }
}

id *sub_1C2B41F58(id *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id *v49;
  id *v50;
  unint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  unsigned int v62;
  uint64_t v63;
  unint64_t v64;
  unsigned int v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  unsigned int v76;
  unsigned int v77;
  uint64_t v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  __int128 v83;
  char v84;
  void *v85;
  const void *v86;
  const void *v87;
  unint64_t v88;
  unsigned int v89;
  unsigned int v90;
  uint64_t v91;
  _OWORD *v92;
  _OWORD *v93;
  unint64_t v94;
  unint64_t v95;
  int v96;
  char v97;
  void (*v98)(void *, const void *, uint64_t);
  _OWORD *v99;
  _OWORD *v100;
  unint64_t v101;
  unint64_t v102;
  int v103;
  _OWORD *v104;
  _OWORD *v105;
  _OWORD *v106;
  _OWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  unint64_t v110;
  unint64_t v111;
  __int128 v112;
  __int128 v113;
  unsigned int v114;
  uint64_t v115;
  BOOL v116;
  id *result;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  size_t __n;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  size_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;

  if (a1 == (id *)a2)
    return a1;
  v140 = *(_QWORD *)(a3 + 16);
  v139 = *(_QWORD *)(v140 - 8);
  v6 = *(_QWORD *)(v139 + 64);
  v7 = sub_1C2CFBCAC();
  v135 = *(_QWORD *)(v7 - 8);
  v136 = v7;
  v8 = *(_QWORD *)(v135 + 64);
  v129 = sub_1C2CFCD44();
  v9 = *(_QWORD *)(v129 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v121 = sub_1C2CFBD9C();
  v11 = *(_QWORD *)(v121 - 8);
  v12 = *(_DWORD *)(v11 + 80) | v10;
  v127 = sub_1C2CFBFD0();
  v13 = *(_QWORD *)(v127 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v130 = sub_1C2CFBF28();
  v15 = *(_QWORD *)(v130 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v12 | v14) & 0xF8 | v16 | 7;
  v134 = v8 + v17;
  v18 = (v8 + v17) & ~v17;
  v128 = v9;
  v19 = *(_QWORD *)(v9 + 64);
  v119 = v19 + 7;
  v120 = v11;
  if (((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
    v19 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19 <= *(_QWORD *)(v11 + 64))
    v19 = *(_QWORD *)(v11 + 64);
  v126 = v13;
  v20 = *(_QWORD *)(v13 + 64);
  v21 = *(_QWORD *)(v130 - 8);
  v125 = v20 + v16;
  v22 = (v20 + v16) & ~v16;
  if (*(_DWORD *)(v15 + 84))
    v23 = *(_QWORD *)(v15 + 64);
  else
    v23 = *(_QWORD *)(v15 + 64) + 1;
  __n = v23;
  v123 = v23 + 7;
  v24 = (v23 + 7 + v22) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v19 <= v25)
    v19 = (v24 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v26 = ((((((v24 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= v26)
    v19 = v26;
  if (v19 <= 0x18)
    v27 = 24;
  else
    v27 = v19;
  v28 = ((((v27 + v18 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v28 <= v6)
    v29 = v6;
  else
    v29 = v28;
  v132 = *(_QWORD *)(a3 + 24);
  v131 = *(_QWORD *)(v132 - 8);
  if (*(_QWORD *)(v131 + 64) <= 9uLL)
    v30 = 9;
  else
    v30 = *(_QWORD *)(v131 + 64);
  v31 = 8 * v30;
  if (v30 > 3)
    goto LABEL_26;
  v32 = ((1 << v31) + 1) >> v31;
  v33 = 2;
  if (v32 > 0xFFFD)
    v33 = 4;
  if (v32 <= 0xFD)
LABEL_26:
    v33 = 1;
  v34 = v33 + v30;
  if (v34 <= v29)
    v34 = v29;
  if (v34 <= 9)
    v34 = 9;
  v35 = *((unsigned __int8 *)a1 + v34);
  if (v35 >= 7)
  {
    if (v30 > 3)
      goto LABEL_36;
    v36 = ((1 << v31) + 1) >> v31;
    v37 = 2;
    if (v36 > 0xFFFD)
      v37 = 4;
    if (v36 <= 0xFD)
LABEL_36:
      v37 = 1;
    v38 = v37 + v30;
    if (v38 <= v29)
      v38 = v29;
    if (v38 <= 9)
      LODWORD(v38) = 9;
    if (v38 <= 3)
      v39 = v38;
    else
      v39 = 4;
    __asm { BR              X15 }
  }
  v137 = v27 + 1;
  v138 = v27;
  v133 = ~v17;
  v124 = ~v16;
  switch(v35)
  {
    case 0u:
    case 1u:
    case 3u:
    case 4u:
      v41 = v139;
      v40 = v140;
      goto LABEL_47;
    case 2u:
      (*(void (**)(id *, uint64_t))(v135 + 8))(a1, v136);
      v42 = ((unint64_t)a1 + v134) & v133;
      if (*(unsigned __int8 *)(v42 + v138) >= 8u)
      {
        if (v138 <= 3)
          v43 = v138;
        else
          v43 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v42 + v138))
      {
        case 0:
          v48 = v9;
          v47 = v129;
          goto LABEL_70;
        case 1:
          v49 = (id *)(((unint64_t)a1 + v134) & v133);
          (*(void (**)(id *, uint64_t))(v9 + 8))(v49, v129);
          swift_release();
          goto LABEL_72;
        case 2:
          v49 = (id *)(((unint64_t)a1 + v134) & v133);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_72;
        case 3:
          v49 = (id *)(((unint64_t)a1 + v134) & v133);
          swift_unknownObjectRelease();
          goto LABEL_72;
        case 4:
          v48 = v120;
          v47 = v121;
LABEL_70:
          v49 = (id *)(((unint64_t)a1 + v134) & v133);
          (*(void (**)(id *, uint64_t))(v48 + 8))(v49, v47);
          goto LABEL_72;
        case 5:
          v49 = (id *)(((unint64_t)a1 + v134) & v133);

LABEL_72:
          v42 = (unint64_t)v49;
          break;
        case 6:
          (*(void (**)(unint64_t, uint64_t))(v126 + 8))(((unint64_t)a1 + v134) & v133, v127);
          v50 = (id *)(((unint64_t)a1 + v134) & v133);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v50 + v125) & v124, 1, v130))
            (*(void (**)(unint64_t, uint64_t))(v21 + 8))(((unint64_t)v50 + v125) & v124, v130);
          goto LABEL_79;
        case 7:
          v118 = ((unint64_t)a1 + v134) & v133;
          (*(void (**)(unint64_t, uint64_t))(v126 + 8))(v118, v127);
          if (!__swift_getEnumTagSinglePayload((v125 + v118) & v124, 1, v130))
            (*(void (**)(unint64_t, uint64_t))(v21 + 8))((v125 + v118) & v124, v130);
          swift_bridgeObjectRelease();
          v50 = (id *)(((unint64_t)a1 + v134) & v133);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_79:
          swift_bridgeObjectRelease();
          v42 = (unint64_t)v50;
          break;
        default:
          break;
      }
      v51 = (((v42 | 7) + v137) & 0xFFFFFFFFFFFFFFF8) + 15;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v51 & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_85;
    case 5u:
      if (v30 > 3)
        goto LABEL_54;
      v45 = ((1 << v31) + 1) >> v31;
      if (v45 > 0xFFFD)
      {
        v44 = *(_DWORD *)((char *)a1 + v30);
      }
      else if (v45 <= 0xFD)
      {
LABEL_54:
        v44 = *((unsigned __int8 *)a1 + v30);
      }
      else
      {
        v44 = *(unsigned __int16 *)((char *)a1 + v30);
      }
      if (v44 >= 2)
      {
        if (v30 <= 3)
          v46 = v30;
        else
          v46 = 4;
        __asm { BR              X12 }
      }
      if (v44 == 1)
      {
LABEL_84:

      }
      else
      {
        v41 = *(_QWORD *)(v132 - 8);
        v40 = v132;
LABEL_47:
        (*(void (**)(id *, uint64_t))(v41 + 8))(a1, v40);
      }
LABEL_85:
      if (v30 > 3)
        goto LABEL_89;
      v52 = ((1 << v31) + 1) >> v31;
      v53 = 2;
      if (v52 > 0xFFFD)
        v53 = 4;
      if (v52 <= 0xFD)
LABEL_89:
        v53 = 1;
      v54 = v53 + v30;
      if (v54 <= v29)
        v54 = v29;
      if (v54 <= 9)
        v54 = 9;
      if (a2[v54] >= 7u)
      {
        if (v30 > 3)
          goto LABEL_99;
        v55 = ((1 << v31) + 1) >> v31;
        v56 = 2;
        if (v55 > 0xFFFD)
          v56 = 4;
        if (v55 <= 0xFD)
LABEL_99:
          v56 = 1;
        v57 = v56 + v30;
        if (v57 <= v29)
          v57 = v29;
        if (v57 <= 9)
          LODWORD(v57) = 9;
        if (v57 <= 3)
          v58 = v57;
        else
          v58 = 4;
        __asm { BR              X13 }
      }
      return result;
    case 6u:
      goto LABEL_84;
    default:
      goto LABEL_85;
  }
  switch(a2[v54])
  {
    case 0u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v139 + 32))(a1, a2, v140);
      if (v30 > 3)
        goto LABEL_113;
      v59 = ((1 << v31) + 1) >> v31;
      v60 = 2;
      if (v59 > 0xFFFD)
        v60 = 4;
      if (v59 <= 0xFD)
LABEL_113:
        v60 = 1;
      v61 = v60 + v30;
      if (v61 <= v29)
        v61 = v29;
      if (v61 <= 9)
        v61 = 9;
      *((_BYTE *)a1 + v61) = 0;
      return a1;
    case 1u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v139 + 32))(a1, a2, v140);
      if (v30 > 3)
        goto LABEL_133;
      v65 = ((1 << v31) + 1) >> v31;
      v66 = 2;
      if (v65 > 0xFFFD)
        v66 = 4;
      if (v65 <= 0xFD)
LABEL_133:
        v66 = 1;
      v67 = v66 + v30;
      if (v67 <= v29)
        v67 = v29;
      if (v67 <= 9)
        v67 = 9;
      v68 = 1;
      goto LABEL_239;
    case 2u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v135 + 32))(a1, a2, v136);
      v69 = ((unint64_t)a1 + v134) & v133;
      v70 = (unint64_t)&a2[v134] & v133;
      if (*(unsigned __int8 *)(v70 + v138) >= 8u)
      {
        if (v138 <= 3)
          v71 = v138;
        else
          v71 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v70 + v138))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 32))(((unint64_t)a1 + v134) & v133, v70, v129);
          *(_BYTE *)(v69 + v138) = 0;
          break;
        case 1:
          v81 = v138;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 32))(((unint64_t)a1 + v134) & v133, v70, v129);
          *(_QWORD *)((v119 + v69) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v119 + v70) & 0xFFFFFFFFFFFFF8);
          v82 = 1;
          goto LABEL_192;
        case 2:
          v83 = *(_OWORD *)v70;
          *(_QWORD *)((((unint64_t)a1 + v134) & v133) + 0x10) = *(_QWORD *)(v70 + 16);
          *(_OWORD *)v69 = v83;
          v84 = 2;
          goto LABEL_194;
        case 3:
          *(_QWORD *)v69 = *(_QWORD *)v70;
          v84 = 3;
          goto LABEL_194;
        case 4:
          v81 = v138;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v120 + 32))(((unint64_t)a1 + v134) & v133, v70, v121);
          v82 = 4;
LABEL_192:
          *(_BYTE *)(v69 + v81) = v82;
          break;
        case 5:
          *(_QWORD *)v69 = *(_QWORD *)v70;
          v84 = 5;
LABEL_194:
          *(_BYTE *)(v69 + v138) = v84;
          break;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 32))(((unint64_t)a1 + v134) & v133, v70, v127);
          v85 = (void *)((v125 + v69) & v124);
          v86 = (const void *)((v125 + v70) & v124);
          if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v130))
          {
            memcpy(v85, v86, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v85, v86, v130);
            __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v130);
          }
          v92 = (_OWORD *)(((unint64_t)v85 + v123) & 0xFFFFFFFFFFFFFFF8);
          v93 = (_OWORD *)(((unint64_t)v86 + v123) & 0xFFFFFFFFFFFFFFF8);
          *v92 = *v93;
          v94 = ((unint64_t)v92 + 19) & 0xFFFFFFFFFFFFFFF8;
          v95 = ((unint64_t)v93 + 19) & 0xFFFFFFFFFFFFFFF8;
          v96 = *(_DWORD *)v95;
          *(_BYTE *)(v94 + 4) = *(_BYTE *)(v95 + 4);
          *(_DWORD *)v94 = v96;
          v97 = 6;
          goto LABEL_219;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 32))(((unint64_t)a1 + v134) & v133, v70, v127);
          v141 = (void *)((v125 + v69) & v124);
          v87 = (const void *)((v125 + v70) & v124);
          if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v130))
          {
            v88 = (v125 + v69) & v124;
            memcpy(v141, v87, __n);
          }
          else
          {
            v98 = *(void (**)(void *, const void *, uint64_t))(v21 + 32);
            v88 = (v125 + v69) & v124;
            v98(v141, v87, v130);
            __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v130);
          }
          v99 = (_OWORD *)((v123 + v88) & 0xFFFFFFFFFFFFFFF8);
          v100 = (_OWORD *)(((unint64_t)v87 + v123) & 0xFFFFFFFFFFFFFFF8);
          *v99 = *v100;
          v101 = ((unint64_t)v99 + 19) & 0xFFFFFFFFFFFFFFF8;
          v102 = ((unint64_t)v100 + 19) & 0xFFFFFFFFFFFFFFF8;
          v103 = *(_DWORD *)v102;
          *(_BYTE *)(v101 + 4) = *(_BYTE *)(v102 + 4);
          *(_DWORD *)v101 = v103;
          v104 = (_OWORD *)(((v69 | 7) + v25) & 0xFFFFFFFFFFFFFFF8);
          v105 = (_OWORD *)(((v70 | 7) + v25) & 0xFFFFFFFFFFFFFFF8);
          *v104 = *v105;
          v106 = (_OWORD *)(((unint64_t)v104 + 23) & 0xFFFFFFFFFFFFFFF8);
          v107 = (_OWORD *)(((unint64_t)v105 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v106 = *v107;
          *(_OWORD *)(((unint64_t)v106 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFF8);
          v97 = 7;
LABEL_219:
          *(_BYTE *)(v69 + v138) = v97;
          break;
        default:
          memcpy((void *)(((unint64_t)a1 + v134) & v133), (const void *)v70, v137);
          break;
      }
      v108 = (_QWORD *)(((v69 | 7) + v137) & 0xFFFFFFFFFFFFF8);
      v109 = (_QWORD *)(((v70 | 7) + v137) & 0xFFFFFFFFFFFFFFF8);
      *v108 = *v109;
      v110 = ((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8;
      v111 = ((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8;
      v112 = *(_OWORD *)v111;
      v113 = *(_OWORD *)(v111 + 16);
      *(_QWORD *)(v110 + 32) = *(_QWORD *)(v111 + 32);
      *(_OWORD *)v110 = v112;
      *(_OWORD *)(v110 + 16) = v113;
      *(_BYTE *)(v110 + 40) = *(_BYTE *)(v111 + 40);
      if (v30 > 3)
        goto LABEL_224;
      v114 = ((1 << v31) + 1) >> v31;
      v115 = 2;
      if (v114 > 0xFFFD)
        v115 = 4;
      if (v114 <= 0xFD)
LABEL_224:
        v115 = 1;
      v67 = v115 + v30;
      if (v67 <= v29)
        v67 = v29;
      if (v67 <= 9)
        v67 = 9;
      v68 = 2;
      goto LABEL_239;
    case 3u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v139 + 32))(a1, a2, v140);
      if (v30 > 3)
        goto LABEL_148;
      v72 = ((1 << v31) + 1) >> v31;
      v73 = 2;
      if (v72 > 0xFFFD)
        v73 = 4;
      if (v72 <= 0xFD)
LABEL_148:
        v73 = 1;
      v67 = v73 + v30;
      if (v67 <= v29)
        v67 = v29;
      if (v67 <= 9)
        v67 = 9;
      v68 = 3;
      goto LABEL_239;
    case 4u:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v139 + 32))(a1, a2, v140);
      if (v30 > 3)
        goto LABEL_158;
      v74 = ((1 << v31) + 1) >> v31;
      v75 = 2;
      if (v74 > 0xFFFD)
        v75 = 4;
      if (v74 <= 0xFD)
LABEL_158:
        v75 = 1;
      v67 = v75 + v30;
      if (v67 <= v29)
        v67 = v29;
      if (v67 <= 9)
        v67 = 9;
      v68 = 4;
      goto LABEL_239;
    case 5u:
      if (v30 > 3)
        goto LABEL_165;
      v79 = ((1 << v31) + 1) >> v31;
      if (v79 > 0xFFFD)
      {
        v76 = *(_DWORD *)&a2[v30];
      }
      else if (v79 <= 0xFD)
      {
LABEL_165:
        v76 = a2[v30];
      }
      else
      {
        v76 = *(unsigned __int16 *)&a2[v30];
      }
      if (v76 >= 2)
      {
        if (v30 <= 3)
          v80 = v30;
        else
          v80 = 4;
        __asm { BR              X12 }
      }
      if (v76 != 1)
      {
        (*(void (**)(id *, unsigned __int8 *, uint64_t))(v131 + 32))(a1, a2, v132);
        if (v30 > 3)
        {
LABEL_203:
          *((_BYTE *)a1 + v30) = 0;
LABEL_208:
          if (v30 > 3)
            goto LABEL_212;
          v90 = ((1 << v31) + 1) >> v31;
          v91 = 2;
          if (v90 > 0xFFFD)
            v91 = 4;
          if (v90 <= 0xFD)
LABEL_212:
            v91 = 1;
          goto LABEL_234;
        }
        v89 = ((1 << v31) + 1) >> v31;
        if (v89 > 0xFFFD)
        {
          *(_DWORD *)((char *)a1 + v30) = 0;
        }
        else
        {
          if (v89 <= 0xFD)
            goto LABEL_203;
          *(_WORD *)((char *)a1 + v30) = 0;
        }
        goto LABEL_232;
      }
      *a1 = *(id *)a2;
      *((_BYTE *)a1 + 8) = a2[8];
      if (v30 > 3)
        goto LABEL_207;
      v89 = ((1 << v31) + 1) >> v31;
      if (v89 > 0xFFFD)
      {
        *(_DWORD *)((char *)a1 + v30) = 1;
      }
      else
      {
        if (v89 <= 0xFD)
        {
LABEL_207:
          *((_BYTE *)a1 + v30) = 1;
          goto LABEL_208;
        }
        *(_WORD *)((char *)a1 + v30) = 1;
      }
LABEL_232:
      v116 = v89 > 0xFFFD;
      v91 = 2;
      if (v116)
        v91 = 4;
LABEL_234:
      v67 = v91 + v30;
      if (v67 <= v29)
        v67 = v29;
      if (v67 <= 9)
        v67 = 9;
      v68 = 5;
LABEL_239:
      *((_BYTE *)a1 + v67) = v68;
      return a1;
    case 6u:
      *a1 = *(id *)a2;
      *((_BYTE *)a1 + 8) = a2[8];
      if (v30 > 3)
        goto LABEL_170;
      v77 = ((1 << v31) + 1) >> v31;
      v78 = 2;
      if (v77 > 0xFFFD)
        v78 = 4;
      if (v77 <= 0xFD)
LABEL_170:
        v78 = 1;
      v67 = v78 + v30;
      if (v67 <= v29)
        v67 = v29;
      if (v67 <= 9)
        v67 = 9;
      v68 = 6;
      goto LABEL_239;
    default:
      if (v30 > 3)
        goto LABEL_123;
      v62 = ((1 << v31) + 1) >> v31;
      v63 = 2;
      if (v62 > 0xFFFD)
        v63 = 4;
      if (v62 <= 0xFD)
LABEL_123:
        v63 = 1;
      v64 = v63 + v30;
      if (v64 <= v29)
        v64 = v29;
      if (v64 <= 9)
        v64 = 9;
      memcpy(a1, a2, v64 + 1);
      return a1;
  }
}

uint64_t sub_1C2B42F9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  int v32;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int v40;

  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v7 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v8 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v11 = *(_DWORD *)(v10 + 80) | v9;
  v12 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v11 | v13) & 0xF8 | v15 | 7;
  v17 = (v7 + v16) & ~v16;
  v18 = *(_QWORD *)(v8 + 64);
  if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18)
    v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v18 <= *(_QWORD *)(v10 + 64))
    v18 = *(_QWORD *)(v10 + 64);
  v19 = *(_DWORD *)(v14 + 84);
  v20 = *(_QWORD *)(v14 + 64) + ((*(_QWORD *)(v12 + 64) + v15) & ~v15);
  if (!v19)
    ++v20;
  v21 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v18 > v22)
    v22 = v18;
  v23 = ((((((v21 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v22 > v23)
    v23 = v22;
  if (v23 <= 0x18)
    v23 = 24;
  v24 = ((((v17 + v23 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v24 <= v6)
    v24 = v6;
  v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v25 <= 9)
    v25 = 9;
  v26 = 8 * v25;
  if (v25 > 3)
    goto LABEL_21;
  v27 = ((1 << v26) + 1) >> v26;
  v28 = 2;
  if (v27 > 0xFFFD)
    v28 = 4;
  if (v27 <= 0xFD)
LABEL_21:
    v28 = 1;
  v29 = v28 + v25;
  if (v29 <= v24)
    v29 = v24;
  if (v29 <= 9)
    v29 = 9;
  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_46;
  v30 = v29 + 1;
  v31 = 8 * v30;
  if (v30 <= 3)
  {
    v34 = ((a2 + ~(-1 << v31) - 248) >> v31) + 1;
    if (HIWORD(v34))
    {
      v32 = *(_DWORD *)(a1 + v30);
      if (!v32)
        goto LABEL_46;
      goto LABEL_37;
    }
    if (v34 > 0xFF)
    {
      v32 = *(unsigned __int16 *)(a1 + v30);
      if (!*(_WORD *)(a1 + v30))
        goto LABEL_46;
      goto LABEL_37;
    }
    if (v34 < 2)
    {
LABEL_46:
      if (v25 > 3)
        goto LABEL_50;
      v37 = ((1 << v26) + 1) >> v26;
      v38 = 2;
      if (v37 > 0xFFFD)
        v38 = 4;
      if (v37 <= 0xFD)
LABEL_50:
        v38 = 1;
      v39 = v38 + v25;
      if (v39 > v24)
        v24 = v39;
      if (v24 <= 9)
        v24 = 9;
      v40 = *(unsigned __int8 *)(a1 + v24);
      if (v40 >= 8)
        return (v40 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v32 = *(unsigned __int8 *)(a1 + v30);
  if (!*(_BYTE *)(a1 + v30))
    goto LABEL_46;
LABEL_37:
  v35 = (v32 - 1) << v31;
  if (v30 > 3)
    v35 = 0;
  if ((_DWORD)v30)
  {
    if (v30 <= 3)
      v36 = v30;
    else
      v36 = 4;
    __asm { BR              X11 }
  }
  return (v35 + 249);
}

void sub_1C2B432C0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  size_t v30;
  char v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;

  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v9 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v12 = *(_DWORD *)(v11 + 80) | v10;
  v13 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v12 | v14) & 0xF8 | v16 | 7;
  v18 = (v8 + v17) & ~v17;
  v19 = *(_QWORD *)(v9 + 64);
  if (((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
    v19 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19 <= *(_QWORD *)(v11 + 64))
    v19 = *(_QWORD *)(v11 + 64);
  v20 = *(_DWORD *)(v15 + 84);
  v21 = *(_QWORD *)(v15 + 64) + ((*(_QWORD *)(v13 + 64) + v16) & ~v16);
  if (!v20)
    ++v21;
  v22 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v19 > v23)
    v23 = v19;
  v24 = ((((((v22 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 > v24)
    v24 = v23;
  if (v24 <= 0x18)
    v24 = 24;
  v25 = ((((v18 + v24 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v25 <= v7)
    v25 = v7;
  v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v26 <= 9)
    v26 = 9;
  if (v26 > 3)
    goto LABEL_21;
  v27 = ((1 << (8 * v26)) + 1) >> (8 * v26);
  v28 = 2;
  if (v27 > 0xFFFD)
    v28 = 4;
  if (v27 <= 0xFD)
LABEL_21:
    v28 = 1;
  v29 = v28 + v26;
  if (v29 <= v25)
    v29 = v25;
  if (v29 <= 9)
    v29 = 9;
  v30 = v29 + 1;
  v31 = 8 * (v29 + 1);
  if (a3 < 0xF9)
  {
    v32 = 0u;
  }
  else if (v30 <= 3)
  {
    v34 = ((a3 + ~(-1 << v31) - 248) >> v31) + 1;
    if (HIWORD(v34))
    {
      v32 = 4u;
    }
    else if (v34 >= 0x100)
    {
      v32 = 2;
    }
    else
    {
      v32 = v34 > 1;
    }
  }
  else
  {
    v32 = 1u;
  }
  if (a2 <= 0xF8)
    __asm { BR              X13 }
  v33 = a2 - 249;
  if (v30 < 4)
  {
    if ((_DWORD)v30)
    {
      v35 = v33 & ~(-1 << v31);
      bzero(a1, v30);
      if ((_DWORD)v30 == 3)
      {
        *(_WORD *)a1 = v35;
        a1[2] = BYTE2(v35);
      }
      else if ((_DWORD)v30 == 2)
      {
        *(_WORD *)a1 = v35;
      }
      else
      {
        *a1 = v35;
      }
    }
  }
  else
  {
    bzero(a1, v30);
    *(_DWORD *)a1 = v33;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2B43658(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t result;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v5 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v6 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v9 = *(_DWORD *)(v8 + 80) | v7;
  v10 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v9 | v11) & 0xF8 | v13 | 7;
  v15 = (v5 + v14) & ~v14;
  v16 = *(_QWORD *)(v6 + 64);
  if (((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v16)
    v16 = ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v16 <= *(_QWORD *)(v8 + 64))
    v16 = *(_QWORD *)(v8 + 64);
  v17 = *(_DWORD *)(v12 + 84);
  v18 = *(_QWORD *)(v12 + 64) + ((*(_QWORD *)(v10 + 64) + v13) & ~v13);
  if (!v17)
    ++v18;
  v19 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v16 > v20)
    v20 = v16;
  v21 = ((((((v19 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v20 > v21)
    v21 = v20;
  if (v21 <= 0x18)
    v21 = 24;
  v22 = ((((v15 + v21 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v22 <= v4)
    v22 = v4;
  v23 = 9;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64) > 9uLL)
    v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  v24 = 8 * v23;
  if (v23 > 3)
    goto LABEL_21;
  v25 = ((1 << v24) + 1) >> v24;
  v26 = 2;
  if (v25 > 0xFFFD)
    v26 = 4;
  if (v25 <= 0xFD)
LABEL_21:
    v26 = 1;
  v27 = v26 + v23;
  if (v27 <= v22)
    v27 = v22;
  if (v27 <= 9)
    v27 = 9;
  result = *(unsigned __int8 *)(a1 + v27);
  if (result >= 7)
  {
    if (v23 > 3)
      goto LABEL_31;
    v29 = ((1 << v24) + 1) >> v24;
    v30 = 2;
    if (v29 > 0xFFFD)
      v30 = 4;
    if (v29 <= 0xFD)
LABEL_31:
      v30 = 1;
    v31 = v30 + v23;
    if (v31 > v22)
      v22 = v31;
    if (v22 <= 9)
      LODWORD(v22) = 9;
    if (v22 <= 3)
      v32 = v22;
    else
      v32 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_1C2B438F0(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  BOOL v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  size_t v42;
  int v43;

  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v7 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v8 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v11 = *(_DWORD *)(v10 + 80) | v9;
  v12 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v13 = *(_DWORD *)(v12 + 80);
  result = sub_1C2CFBF28();
  v15 = *(_QWORD *)(result - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v11 | v13) & 0xF8 | v16 | 7;
  v18 = (v7 + v17) & ~v17;
  v19 = *(_QWORD *)(v8 + 64);
  if (((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
    v19 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19 <= *(_QWORD *)(v10 + 64))
    v19 = *(_QWORD *)(v10 + 64);
  v20 = *(_DWORD *)(v15 + 84);
  v21 = *(_QWORD *)(v15 + 64) + ((*(_QWORD *)(v12 + 64) + v16) & ~v16);
  if (!v20)
    ++v21;
  v22 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v19 > v23)
    v23 = v19;
  v24 = ((((((v22 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 > v24)
    v24 = v23;
  if (v24 <= 0x18)
    v24 = 24;
  v25 = ((((v18 + v24 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v25 <= v6)
    v25 = v6;
  v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v26 <= 9)
    v26 = 9;
  if (a2 > 6)
  {
    v30 = 8 * v26;
    if (v26 > 3)
      goto LABEL_32;
    v31 = ((1 << v30) + 1) >> v30;
    v32 = 2;
    if (v31 > 0xFFFD)
      v32 = 4;
    if (v31 <= 0xFD)
LABEL_32:
      v32 = 1;
    v33 = v32 + v26;
    if (v33 <= v25)
      v33 = v25;
    if (v33 <= 9)
      LODWORD(v33) = 9;
    v34 = v33 > 3;
    v35 = ((a2 - 7) >> (8 * v33)) + 7;
    if (v34)
      LOBYTE(v35) = 7;
    if (v26 > 3)
      goto LABEL_43;
    v36 = ((1 << v30) + 1) >> v30;
    v37 = 2;
    if (v36 > 0xFFFD)
      v37 = 4;
    if (v36 <= 0xFD)
LABEL_43:
      v37 = 1;
    v38 = v37 + v26;
    if (v38 <= v25)
      v38 = v25;
    if (v38 <= 9)
      v38 = 9;
    a1[v38] = v35;
    if (v26 > 3)
      goto LABEL_52;
    v39 = ((1 << v30) + 1) >> v30;
    v40 = 2;
    if (v39 > 0xFFFD)
      v40 = 4;
    if (v39 <= 0xFD)
LABEL_52:
      v40 = 1;
    v41 = v40 + v26;
    if (v41 > v25)
      v25 = v41;
    if (v25 <= 9)
      v42 = 9;
    else
      v42 = v25;
    if (v42 >= 4)
      v43 = 4;
    else
      v43 = v42;
    bzero(a1, v42);
    __asm { BR              X10 }
  }
  if (v26 > 3)
    goto LABEL_22;
  v27 = ((1 << (8 * v26)) + 1) >> (8 * v26);
  v28 = 2;
  if (v27 > 0xFFFD)
    v28 = 4;
  if (v27 <= 0xFD)
LABEL_22:
    v28 = 1;
  v29 = v28 + v26;
  if (v29 > v25)
    v25 = v29;
  if (v25 <= 9)
    v25 = 9;
  a1[v25] = a2;
  return result;
}

uint64_t sub_1C2B43C50(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_1C2B43C58()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3C8D0(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B43CA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3CB78(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B43CF0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3CD08(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B43D3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3CE94(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B43D88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_67_19();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_29_41(v1);
  return sub_1C2B3D020(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B43DDC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2B43E00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_67_19();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_29_41(v1);
  return sub_1C2B3D1EC(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B43E54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3D3B8(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B43EA0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B3D484(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C2B43EB4(uint64_t a1)
{
  return sub_1C2B43ED0(a1, sub_1C2B3D2C0);
}

uint64_t sub_1C2B43EC4(uint64_t a1)
{
  return sub_1C2B43ED0(a1, sub_1C2B3D0F4);
}

uint64_t sub_1C2B43ED0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1C2B43EE8(uint64_t a1)
{
  return sub_1C2B43F7C(a1, sub_1C2B3CF1C);
}

uint64_t sub_1C2B43EF8(uint64_t a1)
{
  return sub_1C2B43F7C(a1, sub_1C2B3CD90);
}

uint64_t sub_1C2B43F08(uint64_t a1)
{
  return sub_1C2B43F7C(a1, sub_1C2B3CC00);
}

uint64_t objectdestroy_112Tm()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 - 8));
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2B43F70(uint64_t a1)
{
  return sub_1C2B43F7C(a1, sub_1C2B3C9A0);
}

uint64_t sub_1C2B43F7C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1C2B43F90()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v0 = sub_1C2CFE0DC();
  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 - 8));
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2B44004(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  sub_1C2CFE0DC();
  return sub_1C2B3CB1C(a1);
}

uint64_t sub_1C2B44088()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3C6A0(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B440D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_67_19();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_29_41(v1);
  return sub_1C2B3C5A8(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B44128()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_67_19();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_29_41(v1);
  return sub_1C2B3C4B0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B4417C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3C3AC(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B441C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3C2A8(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B44214()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3C1A4(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B44260()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B3C0A0(v2, v3, v4, v5, v6, v7, v8);
}

void sub_1C2B442AC(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 40) + 32))(a1, *(_QWORD *)(v1 + 32));
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B442D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_164();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_86(v1);
  *v2 = v0;
  v2[1] = sub_1C28BCB84;
  v3 = OUTLINED_FUNCTION_66();
  return sub_1C2B3B9FC(v3, v4, v5);
}

uint64_t sub_1C2B44320()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B3BB1C(v2, v3);
}

uint64_t sub_1C2B44364()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_164();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_86(v1);
  *v2 = v0;
  v2[1] = sub_1C28BCB84;
  v3 = OUTLINED_FUNCTION_66();
  return sub_1C2B3BBD4(v3, v4, v5);
}

uint64_t sub_1C2B443B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B3BB78(v2, v3);
}

uint64_t sub_1C2B443F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_164();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_86(v1);
  *v2 = v0;
  v2[1] = sub_1C28BCB84;
  v3 = OUTLINED_FUNCTION_66();
  return sub_1C2B3BABC(v3, v4, v5);
}

uint64_t sub_1C2B44448()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_164();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_86(v1);
  *v2 = v0;
  v2[1] = sub_1C28BCB84;
  v3 = OUTLINED_FUNCTION_66();
  return sub_1C2B3BA5C(v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_7_74()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_16_48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)v2 = v0;
  *(_BYTE *)(v2 + 8) = 0;
  return swift_storeEnumTagMultiPayload();
}

int8x16_t OUTLINED_FUNCTION_17_48(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  int8x16_t v3;
  int8x16_t result;

  *(_QWORD *)(v1 + 72) = a1;
  v2 = *(_OWORD *)(v1 + 56);
  v3 = *(int8x16_t *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 32) = v2;
  result = vextq_s8(v3, v3, 8uLL);
  *(int8x16_t *)(a1 + 48) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_23_56(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v3[10] = v5;
  v3[11] = type metadata accessor for PromptForConfirmationFlowAsync.State(0, v5, *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96));
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_29_41(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

_QWORD *OUTLINED_FUNCTION_54_32(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result[2] = v4;
  result[3] = v5;
  result[4] = v3;
  result[5] = v2;
  result[6] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_75_22()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 80) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_95_18(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_97_17(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_100_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 16))(*(_QWORD *)(v3 - 128), v1, v0);
}

uint64_t OUTLINED_FUNCTION_108_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t OUTLINED_FUNCTION_114_11()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_115_11()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_123_10()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_128_6(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[8] = result;
  v4[9] = a2;
  v4[10] = a3;
  v4[11] = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_129_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_130_8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v3, v1, v2);
}

__n128 OUTLINED_FUNCTION_131_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;

  *(_QWORD *)(v2 + 64) = a1;
  result = *(__n128 *)(v2 + 32);
  v4 = *(_OWORD *)(v2 + 48);
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_136_4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 104) = result;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_138_11()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_139_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for PromptResult(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_140_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_145_5(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_146_5()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_148_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 80) + 32))(a1, a2, *(_QWORD *)(v2 + 72));
}

uint64_t OUTLINED_FUNCTION_157_6()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_158_5()
{
  uint64_t v0;

  return sub_1C2B3ABB8(v0);
}

uint64_t PromptForConfirmationFlowReturning.__allocating_init(acceptedTransition:rejectedTransition:cancelledTransition:)(__int128 *a1, _OWORD *a2, __int128 *a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_5_2();
  PromptForConfirmationFlowReturning.init(acceptedTransition:rejectedTransition:cancelledTransition:)(a1, a2, a3);
  return v6;
}

_OWORD *PromptForConfirmationFlowReturning.init(acceptedTransition:rejectedTransition:cancelledTransition:)(__int128 *a1, _OWORD *a2, __int128 *a3)
{
  _OWORD *v3;
  __int128 v4;
  __int128 v5;

  v4 = *a1;
  v5 = *a3;
  v3[2] = *a2;
  v3[3] = v4;
  v3[1] = v5;
  return v3;
}

double sub_1C2B447BC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  double result;
  __int128 v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v5);
  v8 = type metadata accessor for PromptResult(255, AssociatedTypeWitness, v6, v7);
  v9 = sub_1C2CFE478();
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)&v16 - v11, a1);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8) != 1)
  {
    v14 = (char *)&loc_1C2B448D4 + 4 * byte_1C2D15E90[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  result = 0.0;
  *a2 = xmmword_1C2D00950;
  return result;
}

uint64_t sub_1C2B44A7C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1C3BC9CD4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PromptForConfirmationFlowReturning.deinit()
{
  uint64_t v0;

  sub_1C2969FD0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  sub_1C2969FD0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_1C2969FD0(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t PromptForConfirmationFlowReturning.__deallocating_deinit()
{
  PromptForConfirmationFlowReturning.deinit();
  return swift_deallocClassInstance();
}

double sub_1C2B44B08@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1C2B447BC(a1, a2);
}

uint64_t sub_1C2B44B28()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PromptForConfirmationFlowReturning(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptForConfirmationFlowReturning);
}

uint64_t method lookup function for PromptForConfirmationFlowReturning()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromptForConfirmationFlowReturning.__allocating_init(acceptedTransition:rejectedTransition:cancelledTransition:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowReturning.getNextGroupTransition(frameExitValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void PromptForDisambiguationFlowAsync.__allocating_init<A>(items:strategy:outputPublisher:)()
{
  swift_allocObject();
  PromptForDisambiguationFlowAsync.init<A>(items:strategy:outputPublisher:)();
}

void sub_1C2B44BEC()
{
  OUTLINED_FUNCTION_8_0();
}

void static DisambiguationResult.chosenItem(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_127_10(a1, a2, a3, a4);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v7, v8);
  v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))((char *)&v12 - v9, v5, v4);
  OUTLINED_FUNCTION_54_2();
  sub_1C2B44D2C((uint64_t)v10, v4, v11, v6);
  OUTLINED_FUNCTION_8_0();
}

void DisambiguationResult.chosenItem.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;

  v8 = v5;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = OUTLINED_FUNCTION_167_5(a1, a2, a3, a4);
  OUTLINED_FUNCTION_122_10();
  MEMORY[0x1E0C80A78](v12, v13);
  OUTLINED_FUNCTION_33_36();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v8, v11);
  OUTLINED_FUNCTION_207_1();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = OUTLINED_FUNCTION_207_1();
    v15(v14);
    v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, v6, v10);
    v16 = 0;
  }
  __swift_storeEnumTagSinglePayload(a5, v16, 1, v10);
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B44D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;

  v6 = type metadata accessor for DisambiguationResult.DisambiguationResultType(0, a2, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a4, a1, v6);
}

void static DisambiguationResult.paginate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_127_10(a1, a2, a3, a4);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_33_36();
  v10 = *(_BYTE *)(v5 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v5;
  *(_BYTE *)(v7 + 8) = v10;
  OUTLINED_FUNCTION_262();
  sub_1C2B44D2C(v7, v4, v11, v6);
  OUTLINED_FUNCTION_18();
}

void DisambiguationResult.paginationRequest.getter(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  char v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;

  type metadata accessor for DisambiguationResult.DisambiguationResultType(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 16), a2);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v4, v5);
  v7 = (char *)&v14 - v6;
  v8 = OUTLINED_FUNCTION_137_5();
  v9(v8);
  OUTLINED_FUNCTION_198_0();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *(_QWORD *)v7;
    v11 = v7[8];
  }
  else
  {
    v12 = OUTLINED_FUNCTION_198_0();
    v13(v12);
    v10 = 0;
    v11 = -1;
  }
  *(_QWORD *)a3 = v10;
  *(_BYTE *)(a3 + 8) = v11;
  OUTLINED_FUNCTION_8_0();
}

void static DisambiguationResult<A>.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_9();
  v38 = v2;
  v4 = v3;
  v6 = v5;
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v7;
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_2_2();
  v37 = v10;
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_111();
  v36 = v13;
  v16 = type metadata accessor for DisambiguationResult.DisambiguationResultType(0, v14, v14, v15);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16, v18);
  OUTLINED_FUNCTION_125_2();
  v21 = v19 - v20;
  MEMORY[0x1E0C80A78](v22, v23);
  OUTLINED_FUNCTION_192_1();
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_122_10();
  v26 = MEMORY[0x1E0C80A78](v24, v25);
  v28 = (char *)&v36 - v27;
  v29 = (char *)&v36 + *(int *)(v26 + 48) - v27;
  v39 = v17;
  OUTLINED_FUNCTION_163_6((uint64_t)&v36 - v27, v6);
  OUTLINED_FUNCTION_163_6((uint64_t)v29, v41);
  OUTLINED_FUNCTION_149_1();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_163_6(v0, (uint64_t)v28);
    v30 = *(_QWORD *)v0;
    if (OUTLINED_FUNCTION_205_2() == 1)
    {
      if (*(_BYTE *)(v0 + 8))
      {
        if (*(_BYTE *)(v0 + 8) != 1)
          __asm { BR              X11 }
        v1 = v39;
      }
      else
      {
        v1 = v39;
      }
    }
  }
  else
  {
    OUTLINED_FUNCTION_163_6(v21, (uint64_t)v28);
    if (OUTLINED_FUNCTION_205_2() == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v21, v4);
    }
    else
    {
      v31 = v40;
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
      v33 = v36;
      v32(v36, v21, v4);
      v34 = v37;
      v32(v37, (uint64_t)v29, v4);
      sub_1C2CFDD28();
      v35 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v35(v34, v4);
      v35(v33, v4);
      v1 = v39;
    }
  }
  OUTLINED_FUNCTION_33_2((uint64_t)v28, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_1();
}

void sub_1C2B450F8()
{
  static DisambiguationResult<A>.== infix(_:_:)();
}

uint64_t PromptForDisambiguationFlowStrategy.makeRepromptOnEmptyParse(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  char v13;

  v5 = *((_BYTE *)a1 + 24);
  v6 = a1[4];
  v7 = *((_BYTE *)a1 + 40);
  v9 = *a1;
  v10 = *(_OWORD *)(a1 + 1);
  v11 = v5;
  v12 = v6;
  v13 = v7;
  return (*(uint64_t (**)(uint64_t *))(a5 + 48))(&v9);
}

void sub_1C2B45154(uint64_t a1, int a2)
{
  PromptForDisambiguationFlowStrategy.makeRepromptOnLowConfidence(_:_:)(a1, a2);
}

void PromptForDisambiguationFlowStrategy.makeRepromptOnLowConfidence(_:_:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6, v7);
  v8 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v8);
  v9 = OUTLINED_FUNCTION_5_2();
  v10 = (_QWORD *)OUTLINED_FUNCTION_54_0(v9);
  v11 = OUTLINED_FUNCTION_10_2(v10, (uint64_t)&unk_1EF799E30);
  if (a2 == 1)
  {
    OUTLINED_FUNCTION_370(v11, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    v12 = sub_1C2CFE100();
    OUTLINED_FUNCTION_52_30();
    OUTLINED_FUNCTION_52_3();
    if (v12)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      v3 = 0;
      v4 = 0;
    }
  }
  v13 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v13 + 16) = &unk_1EF789CD8;
  *(_QWORD *)(v13 + 24) = v2;
  if (v4 | v3)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B45270(int a1)
{
  PromptForDisambiguationFlowStrategy.makeFlowCancelledResponse(_:)(a1);
}

void PromptForDisambiguationFlowStrategy.makeFlowCancelledResponse(_:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v7);
  v8 = OUTLINED_FUNCTION_5_2();
  v9 = (_QWORD *)OUTLINED_FUNCTION_54_0(v8);
  v10 = OUTLINED_FUNCTION_10_2(v9, (uint64_t)&unk_1EF799E38);
  if (a1 == 1)
  {
    OUTLINED_FUNCTION_370(v10, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    v11 = sub_1C2CFE100();
    OUTLINED_FUNCTION_52_30();
    OUTLINED_FUNCTION_52_3();
    if (v11)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      v2 = 0;
      v3 = 0;
    }
  }
  v12 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v12 + 16) = &unk_1EF789CF0;
  *(_QWORD *)(v12 + 24) = v1;
  if (v3 | v2)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B4538C(uint64_t a1, int a2)
{
  PromptForDisambiguationFlowStrategy.makeErrorResponse(_:_:)(a1, a2);
}

void PromptForDisambiguationFlowStrategy.makeErrorResponse(_:_:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6, v7);
  v8 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v8);
  v9 = OUTLINED_FUNCTION_5_2();
  v10 = (_QWORD *)OUTLINED_FUNCTION_54_0(v9);
  v11 = OUTLINED_FUNCTION_10_2(v10, (uint64_t)&unk_1EF799E40);
  if (a2 == 1)
  {
    OUTLINED_FUNCTION_370(v11, &qword_1ED7A7240);
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    v12 = sub_1C2CFE100();
    OUTLINED_FUNCTION_52_30();
    OUTLINED_FUNCTION_52_3();
    if (v12)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      v3 = 0;
      v4 = 0;
    }
  }
  v13 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v13 + 16) = &unk_1EF789D08;
  *(_QWORD *)(v13 + 24) = v2;
  if (v4 | v3)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B454A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v14;
  *v14 = v9;
  v14[1] = sub_1C28BCB84;
  return PromptForDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:)(a1, a2, a3, a4, v15, v16, v17, v18, a9);
}

uint64_t PromptForDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;

  OUTLINED_FUNCTION_205();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = *(_BYTE *)(v16 + 24);
  v18 = *(_QWORD *)(v16 + 32);
  v19 = *(_BYTE *)(v16 + 40);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)v16;
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v16 + 8);
  *(_BYTE *)(v9 + 40) = v17;
  *(_QWORD *)(v9 + 48) = v18;
  *(_BYTE *)(v9 + 56) = v19;
  v20 = (_QWORD *)OUTLINED_FUNCTION_9_6();
  *(_QWORD *)(v9 + 64) = v20;
  *v20 = v9;
  v20[1] = sub_1C2B455AC;
  return OUTLINED_FUNCTION_103_0(v15, v9 + 16, v13, v11, a9);
}

uint64_t sub_1C2B455AC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_11_61();
  if (!v0)
    return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B455E8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PromptForDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:)();
}

uint64_t PromptForDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18600(v2);
}

uint64_t sub_1C2B4567C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28E1BA0;
  return PromptForDisambiguationFlowStrategyAsync.makeFlowCancelledResponse()();
}

uint64_t PromptForDisambiguationFlowStrategyAsync.makeFlowCancelledResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18D94(v2);
}

uint64_t sub_1C2B45710()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PromptForDisambiguationFlowStrategyAsync.makeErrorResponse(_:)();
}

uint64_t PromptForDisambiguationFlowStrategyAsync.makeErrorResponse(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18AF4(v2);
}

uint64_t PromptForDisambiguationFlowStrategyAsync.actionForInputWrapper(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

void PromptForDisambiguationFlow.exitValue.getter(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  PromptForDisambiguationFlowAsync.exitValue.getter(a1, a2);
  OUTLINED_FUNCTION_1_0();
}

uint64_t PromptForDisambiguationFlowAsync.exitValue.getter@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *v2;
  v6 = type metadata accessor for PromptForDisambiguationFlowAsync.State(0, *(_QWORD *)(*v2 + 80), *(_QWORD *)(*v2 + 88), a1);
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_33_36();
  v10 = (uint64_t)v2 + *(_QWORD *)(v5 + 128);
  OUTLINED_FUNCTION_78_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, v10, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((_DWORD)EnumCaseMultiPayload)
  {
    case 7:
      OUTLINED_FUNCTION_82_12(EnumCaseMultiPayload, v12, v13, v14);
      return swift_storeEnumTagMultiPayload();
    case 6:
      v18 = *(_BYTE *)(v3 + 8);
      *(_QWORD *)a2 = *(_QWORD *)v3;
      *(_BYTE *)(a2 + 8) = v18;
      OUTLINED_FUNCTION_82_12(EnumCaseMultiPayload, v12, v13, v14);
      return swift_storeEnumTagMultiPayload();
    case 5:
      OUTLINED_FUNCTION_82_12(EnumCaseMultiPayload, v12, v13, v14);
      v15 = OUTLINED_FUNCTION_195_1();
      return v16(v15, v3);
    default:
      v19 = sub_1C2B46E58(EnumCaseMultiPayload, v12, v13, v14);
      *(_QWORD *)a2 = v19;
      *(_BYTE *)(a2 + 8) = 0;
      OUTLINED_FUNCTION_82_12(v19, v20, v21, v22);
      OUTLINED_FUNCTION_262();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  }
}

void sub_1C2B45910()
{
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_24_3();
  sub_1C2B4594C();
}

void sub_1C2B45940()
{
  OUTLINED_FUNCTION_18();
}

void sub_1C2B4594C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[40];

  v0 = OUTLINED_FUNCTION_131_9();
  v1 = OUTLINED_FUNCTION_131_9();
  type metadata accessor for PromptForDisambiguationFlowAsync(0, v0, v1, v2);
  v4 = type metadata accessor for AnyPromptForDisambiguationFlowStrategy(0, v0, v1, v3);
  swift_unknownObjectRetain();
  sub_1C2B45A60();
  OUTLINED_FUNCTION_196_2(v5, (uint64_t)v6);
  MEMORY[0x1C3BC9CD4](&unk_1C2D16538, v4);
  PromptForDisambiguationFlowAsync.__allocating_init<A>(items:strategy:outputPublisher:)();
}

uint64_t sub_1C2B45A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2);
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

void sub_1C2B45A60()
{
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_24_3();
  sub_1C2B4C268();
  OUTLINED_FUNCTION_18();
}

void PromptForDisambiguationFlow.__allocating_init(items:strategy:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _UNKNOWN **v7;

  sub_1C28B9A48(a3, (uint64_t)&v5);
  v3 = type metadata accessor for OutputPublisherAsyncAdapter();
  v4 = OUTLINED_FUNCTION_5_2();
  sub_1C28B99EC(&v5, v4 + 16);
  v6 = v3;
  v7 = &protocol witness table for OutputPublisherAsyncAdapter;
  *(_QWORD *)&v5 = v4;
  OUTLINED_FUNCTION_207_1();
  sub_1C2B45910();
}

uint64_t sub_1C2B45B0C(uint64_t a1)
{
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1(v1);
  return a1;
}

uint64_t PromptForDisambiguationFlow.on(input:)()
{
  char v0;

  PromptForDisambiguationFlowAsync.on(input:)();
  return v0 & 1;
}

void PromptForDisambiguationFlowAsync.on(input:)()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *isa;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *EnumCaseMultiPayload;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  _WORD *v40;
  const char *v41;
  char v42;
  Class v43;
  uint64_t v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  os_log_type_t v63;
  _WORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;

  OUTLINED_FUNCTION_9();
  v2 = v1;
  isa = v0->isa;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF788160);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_79_5();
  v72 = v6;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_125_2();
  v11 = v9 - v10;
  MEMORY[0x1E0C80A78](v12, v13);
  v15 = (char *)&v65 - v14;
  v16 = isa[11];
  v73 = isa[10];
  v18 = type metadata accessor for PromptForDisambiguationFlowAsync.State(0, v73, v16, v17);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v20);
  OUTLINED_FUNCTION_125_2();
  v23 = v21 - v22;
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v65 - v26;
  v28 = isa[16];
  v74 = v0;
  v29 = (char *)v0 + v28;
  OUTLINED_FUNCTION_78_0();
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v27, v29, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = *(_QWORD *)v27;
    v31 = *((_QWORD *)v27 + 2);
    v67 = *((_QWORD *)v27 + 1);
    v68 = v31;
    v69 = v27[24];
    v70 = *((_QWORD *)v27 + 4);
    v71 = v30;
    v19 = v27[40];
    v66 = type metadata accessor for Input(0);
    v32 = v2 + *(int *)(v66 + 20);
    sub_1C28F3FD0(v32, (uint64_t)v15, type metadata accessor for Parse);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1C28C9F68((uint64_t)v15, type metadata accessor for Parse);
    if ((_DWORD)EnumCaseMultiPayload == 8)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v34 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v34, (uint64_t)qword_1ED7AA1B0);
      v35 = OUTLINED_FUNCTION_30();
      if (OUTLINED_FUNCTION_10_1(v35))
      {
        v36 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_WORD *)v36 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, EnumCaseMultiPayload, (os_log_type_t)type metadata accessor for Parse, "PromptForDisambiguationFlow received empty parse. Will handle and reprompt.", v36);
        OUTLINED_FUNCTION_11_0();
      }

      v37 = v67;
      *(_QWORD *)v23 = v71;
      *(_QWORD *)(v23 + 8) = v37;
      *(_QWORD *)(v23 + 16) = v68;
      *(_BYTE *)(v23 + 24) = v69;
      *(_QWORD *)(v23 + 32) = v70;
      *(_BYTE *)(v23 + 40) = v19;
      OUTLINED_FUNCTION_137_5();
LABEL_39:
      swift_storeEnumTagMultiPayload();
      sub_1C2B47230(v23);
      goto LABEL_40;
    }
    sub_1C290A2E0();
    if ((v42 & 1) == 0)
    {
      if (qword_1ED7AA040 != -1)
        swift_once();
      v52 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v52, (uint64_t)qword_1ED7AA1B0);
      v53 = OUTLINED_FUNCTION_30();
      if (OUTLINED_FUNCTION_116_2(v53))
      {
        v54 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_WORD *)v54 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, EnumCaseMultiPayload, (os_log_type_t)v32, "PromptForDisambiguationFlow received low confidence input. Treating as misunderstood and will reprompt.", v54);
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_185_3(v55, v56, v57, v58);
      OUTLINED_FUNCTION_5_3();
      sub_1C28F3FD0(v2, v23, type metadata accessor for Input);
      OUTLINED_FUNCTION_61_22();
      goto LABEL_39;
    }
    v43 = v74[2].isa;
    v0 = *((_QWORD *)v43 + 5);
    (*((void (**)(uint64_t *__return_ptr, uint64_t))v43 + 4))(&v77, v2);
    if (!(_BYTE)v77)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED7AA040 != -1)
        swift_once();
      v59 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v59, (uint64_t)qword_1ED7AA1B0);
      v60 = OUTLINED_FUNCTION_30();
      if (OUTLINED_FUNCTION_10_1(v60))
      {
        v61 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_WORD *)v61 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v0, (os_log_type_t)type metadata accessor for Parse, "PromptForDisambiguationFlow received cancel action from strategy. Transitioning to cancelled state.", v61);
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_137_5();
      goto LABEL_39;
    }
    if (v77 == 1)
    {
      v65 = v2;
      if (qword_1ED7AA040 != -1)
        swift_once();
      v44 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v44, (uint64_t)qword_1ED7AA1B0);
      v45 = OUTLINED_FUNCTION_30();
      if (os_log_type_enabled(v0, v45))
      {
        v46 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_WORD *)v46 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v0, v45, "PromptForDisambiguationFlow received handle action from strategy. Transitioning to responseReceived state.", v46);
        OUTLINED_FUNCTION_11_0();
      }

      sub_1C28C3750((uint64_t)&v74[8], (uint64_t)v75, &qword_1EF7880E0);
      if (v76)
      {
        __swift_project_boxed_opaque_existential_1(v75, v76);
        sub_1C28F3FD0(v32, v11, type metadata accessor for Parse);
        v47 = v72;
        sub_1C2B4770C();
        sub_1C2CFCEE8();
        sub_1C28BB37C(v47, &qword_1EF788160);
        v48 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
      }
      else
      {
        sub_1C28BB37C((uint64_t)v75, &qword_1EF7880E0);
      }
      OUTLINED_FUNCTION_185_3(v48, v49, v50, v51);
      OUTLINED_FUNCTION_5_3();
      sub_1C28F3FD0(v65, v23, type metadata accessor for Input);
      OUTLINED_FUNCTION_61_22();
      goto LABEL_39;
    }
    swift_bridgeObjectRelease();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v62 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v62, (uint64_t)qword_1ED7AA1B0);
    v63 = OUTLINED_FUNCTION_73_0();
    if (OUTLINED_FUNCTION_48_7(v63))
    {
      v64 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v64);
      v41 = "PromptForDisambiguationFlow received ignore action from strategy. Ignoring.";
LABEL_12:
      OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v19, (os_log_type_t)v0, v41, (uint8_t *)v23);
      OUTLINED_FUNCTION_11_0();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v18);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v38 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v38, (uint64_t)qword_1ED7AA1B0);
    v39 = OUTLINED_FUNCTION_73_0();
    if (OUTLINED_FUNCTION_48_7(v39))
    {
      v40 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v40);
      v41 = "PromptForDisambiguationFlow received input but is not in the promptSent state. Ignoring.";
      goto LABEL_12;
    }
  }

LABEL_40:
  OUTLINED_FUNCTION_1();
}

void PromptForDisambiguationFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1C2B486B4(a1, a2, (uint64_t)&protocol conformance descriptor for PromptForDisambiguationFlow<A>);
}

uint64_t PromptForDisambiguationFlow.execute()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B461C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return PromptForDisambiguationFlowAsync.execute()(v2);
}

uint64_t PromptForDisambiguationFlowAsync.execute()(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[30] = a1;
  v2[31] = v1;
  v3 = *v1;
  v2[32] = type metadata accessor for Input(0);
  v4 = OUTLINED_FUNCTION_7();
  v2[33] = v4;
  v5 = *(_QWORD *)(v3 + 80);
  v2[34] = v5;
  v7 = OUTLINED_FUNCTION_168_5(v4, v5, *(_QWORD *)(v3 + 88), v6);
  v2[35] = v7;
  v2[36] = *(_QWORD *)(v7 - 8);
  v2[37] = OUTLINED_FUNCTION_107_0();
  v2[38] = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B46288()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = v0[38];
  v3 = v0[35];
  v2 = v0[36];
  v4 = v0[31] + *(_QWORD *)(*(_QWORD *)v0[31] + 128);
  OUTLINED_FUNCTION_78_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v5 = (char *)sub_1C2B46310 + 4 * word_1C2D15F24[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C2B46310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11)
{
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v16 = *(uint64_t **)(v12 + 304);
  v17 = *v16;
  *(_QWORD *)(v12 + 312) = *v16;
  OUTLINED_FUNCTION_78_18((uint64_t)v16);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v18 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v18, (uint64_t)qword_1ED7AA1B0);
  v19 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_20_0(v19))
  {
    v20 = (_WORD *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_91(v20);
    OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v21, v22, "PromptForDisambiguationFlow sending prompt for disambiguation");
    OUTLINED_FUNCTION_11_0();
  }

  *(_QWORD *)(v12 + 160) = v17;
  *(_OWORD *)(v12 + 168) = a11;
  *(_BYTE *)(v12 + 184) = v13;
  *(_QWORD *)(v12 + 192) = v14;
  *(_BYTE *)(v12 + 200) = v15;
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v12 + 320) = v23;
  OUTLINED_FUNCTION_125_7(v23);
  OUTLINED_FUNCTION_158();
  return sub_1C2B4870C(v24, v25, v26, v27);
}

uint64_t sub_1C2B46954()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 328) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B469A8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B469D8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 344) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B46A24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 368) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B46A78()
{
  uint64_t v0;

  sub_1C28C9F68(*(_QWORD *)(v0 + 264), type metadata accessor for Input);
  OUTLINED_FUNCTION_34_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B46AB8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 392) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B46B0C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_86_15();
  if (!v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B46B50()
{
  uint64_t v0;

  sub_1C28C9F68(*(_QWORD *)(v0 + 304), type metadata accessor for Input);
  OUTLINED_FUNCTION_34_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B46B90()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_70();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_117_14();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_34_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B46BE8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_70();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_117_14();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_34_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B46C38()
{
  uint64_t v0;

  sub_1C28C9F68(*(_QWORD *)(v0 + 264), type metadata accessor for Input);
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_14_70();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_117_14();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_34_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B46CA0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_70();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_117_14();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_34_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B46CF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 304);
  swift_bridgeObjectRelease();
  sub_1C28C9F68(v1, type metadata accessor for Input);
  OUTLINED_FUNCTION_14_70();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_117_14();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_34_42();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t PromptForDisambiguationFlow.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PromptForDisambiguationFlow.__deallocating_deinit()
{
  PromptForDisambiguationFlow.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B46DA0()
{
  return PromptForDisambiguationFlow.on(input:)() & 1;
}

void sub_1C2B46DC4(uint64_t a1, uint64_t a2)
{
  PromptForDisambiguationFlow.execute(completion:)(a1, a2);
}

uint64_t sub_1C2B46DE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28E1BA0;
  return PromptForDisambiguationFlow.execute()(a1);
}

void sub_1C2B46E38(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  PromptForDisambiguationFlow.exitValue.getter(a1, a2);
}

uint64_t sub_1C2B46E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v5 = type metadata accessor for PromptForDisambiguationFlowAsync.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v16 - v8;
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_1C2CFE670();
  v19 = v17;
  v20 = v18;
  sub_1C2CFDE54();
  v10 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  MEMORY[0x1C3BC9CD4](&unk_1C2D16554, v5);
  sub_1C2CFE9C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v11 = v19;
  v12 = v20;
  type metadata accessor for CommandFailure();
  swift_allocObject();
  v13 = CommandFailure.init(errorCode:reason:)(-1, v11, v12);
  sub_1C28C3328((unint64_t *)&qword_1EF79AF10, (uint64_t (*)(uint64_t))type metadata accessor for CommandFailure, (uint64_t)&protocol conformance descriptor for CommandFailure);
  result = swift_allocError();
  *v15 = v13;
  return result;
}

void sub_1C2B46FDC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_9();
  v2 = v0;
  v5 = OUTLINED_FUNCTION_168_5(v3, *(_QWORD *)(*v0 + 80), *(_QWORD *)(*v0 + 88), v4);
  OUTLINED_FUNCTION_122_10();
  MEMORY[0x1E0C80A78](v6, v7);
  v9 = (char *)&v29 - v8;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_250_0(v10, (uint64_t)qword_1ED7AA1B0);
  swift_retain_n();
  v11 = sub_1C2CFD86C();
  v12 = sub_1C2CFE2A4();
  v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    v14 = OUTLINED_FUNCTION_6_0();
    v29 = v1;
    v15 = v14;
    v31 = OUTLINED_FUNCTION_6_0();
    v34 = v31;
    *(_DWORD *)v15 = 136315394;
    v30 = v13;
    v16 = v2[13];
    v17 = v2[14];
    v19 = v2[15];
    v18 = v2[16];
    OUTLINED_FUNCTION_11_1();
    v20 = MEMORY[0x1C3BC88A0](v16, v17, v19, v18);
    v22 = v21;
    OUTLINED_FUNCTION_34_1();
    v33 = sub_1C28BB120(v20, v22, &v34);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_147();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v23 = (char *)v2 + *(_QWORD *)(*v2 + 128);
    OUTLINED_FUNCTION_78_0();
    v24 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v9, v23, v5);
    OUTLINED_FUNCTION_147();
    sub_1C2B4B6C0(v5);
    v26 = v25;
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v5);
    v32 = sub_1C28BB120(v26, v28, &v34);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_147();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C28B6000, v11, (os_log_type_t)v30, "PromptForDisambiguationFlow [%s] transitioned to state %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }

  swift_release_n();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2B47230(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 128);
  swift_beginAccess();
  v6 = type metadata accessor for PromptForDisambiguationFlowAsync.State(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v5);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v4, a1, v6);
  swift_endAccess();
  sub_1C2B46FDC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

void PromptForDisambiguationFlowAsync.init<A>(items:strategy:outputPublisher:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[2];
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v17[0] = v6;
  v17[1] = v7;
  v8 = sub_1C2CFBCAC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2CFBCA0();
  sub_1C2CFBC70();
  OUTLINED_FUNCTION_203_1((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_1C28FF700(8);
  v1[13] = v13;
  v1[14] = v14;
  v1[15] = v15;
  v1[16] = v16;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 24))(&v20, v5, v3);
  v18 = v20;
  v19 = v21;
  PaginatedItemContainer.init(items:paginationStyle:)(v17[0], (uint64_t)&v18);
}

_QWORD *sub_1C2B473A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v10 = *(_BYTE *)(v9 - 104);
  v11 = *(_QWORD *)(v9 - 96);
  v12 = *(_BYTE *)(v9 - 88);
  v13 = *(_OWORD *)(v9 - 120);
  v14 = (char *)v4 + *(_QWORD *)(*v4 + 128);
  *(_QWORD *)v14 = *(_QWORD *)(v9 - 128);
  *(_OWORD *)(v14 + 8) = v13;
  v14[24] = v10;
  *((_QWORD *)v14 + 4) = v11;
  v14[40] = v12;
  v15 = *(_QWORD *)(v6 + 88);
  type metadata accessor for PromptForDisambiguationFlowAsync.State(0, v5, v15, a4);
  OUTLINED_FUNCTION_54_2();
  type metadata accessor for AnyPromptForDisambiguationFlowStrategy(0, v5, v15, v16);
  swift_unknownObjectRetain();
  sub_1C2B474B0();
  v4[2] = v17;
  v18 = *(_QWORD *)(v9 - 168);
  sub_1C28B9A48(v18, (uint64_t)(v4 + 3));
  (*(void (**)(uint64_t, uint64_t))(v7 + 88))(v8, v7);
  sub_1C2B474EC(v19, v9 - 128);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_70();
  __swift_destroy_boxed_opaque_existential_1(v18);
  sub_1C2B4D880(v9 - 128, (uint64_t)(v4 + 8));
  return v4;
}

uint64_t type metadata accessor for DisambiguationResult.DisambiguationResultType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DisambiguationResult.DisambiguationResultType);
}

void sub_1C2B474B0()
{
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_24_3();
  sub_1C2B4BA60();
  OUTLINED_FUNCTION_18();
}

double sub_1C2B474EC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  const char *v14;
  uint64_t v15;
  _BYTE v16[24];
  ValueMetadata *v17;
  unint64_t v18;

  if (!a1)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v10 = sub_1C2CFD878();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED7AA1B0);
    v11 = sub_1C2CFD86C();
    v12 = sub_1C2CFE2B0();
    if (!os_log_type_enabled(v11, v12))
      goto LABEL_15;
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = "PromptForDisambiguationFlow PervasiveEntityResolution use case is undefined";
    goto LABEL_14;
  }
  v17 = &type metadata for FeatureFlagDefinitions.Core;
  v3 = sub_1C29652B4();
  v18 = v3;
  v16[0] = 1;
  swift_bridgeObjectRetain();
  v4 = sub_1C2CFBE20();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  if ((v4 & 1) == 0)
  {
    v17 = &type metadata for FeatureFlagDefinitions.Core;
    v18 = v3;
    v16[0] = 2;
    v5 = sub_1C2CFBE20();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    if ((v5 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED7AA040 != -1)
        swift_once();
      v15 = sub_1C2CFD878();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED7AA1B0);
      v11 = sub_1C2CFD86C();
      v12 = sub_1C2CFE2A4();
      if (!os_log_type_enabled(v11, v12))
        goto LABEL_15;
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      v14 = "PromptForDisambiguationFlow PervasiveEntityResolution data collection is not enabled";
LABEL_14:
      _os_log_impl(&dword_1C28B6000, v11, v12, v14, v13, 2u);
      MEMORY[0x1C3BC9DE8](v13, -1, -1);
LABEL_15:

      goto LABEL_16;
    }
  }
  v6 = sub_1C2CFCED0();
  v7 = sub_1C2CFCEC4();
  if (v7)
  {
    v9 = MEMORY[0x1E0D987E0];
    *(_QWORD *)(a2 + 24) = v6;
    *(_QWORD *)(a2 + 32) = v9;
    *(_QWORD *)a2 = v7;
    return result;
  }
LABEL_16:
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

void sub_1C2B4770C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  NSObject *v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  int EnumCaseMultiPayload;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  BOOL v71;
  uint64_t v72;
  uint8_t *v73;
  uint64_t v74;
  os_log_type_t v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  uint64_t v88;
  os_log_type_t v89;
  _BOOL4 v90;
  uint64_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  os_log_type_t v121;
  uint64_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  NSObject *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(_QWORD);
  os_log_type_t v132;
  uint64_t v133;
  uint8_t *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t (*v138)(_QWORD);
  uint64_t v139;
  uint64_t (*v140)(_QWORD);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  NSObject *v153;
  uint64_t *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  NSObject *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179[2];
  __int128 v180;
  __int128 v181;

  OUTLINED_FUNCTION_9();
  v2 = v1;
  v177 = v3;
  v174 = sub_1C2CFCDE0();
  v171 = *(_QWORD *)(v174 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_2_2();
  v173 = v6;
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_111();
  v172 = v9;
  v158 = sub_1C2CFD698();
  v157 = *(_QWORD *)(v158 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_79_5();
  v166 = v12;
  v167 = OUTLINED_FUNCTION_190_2();
  v176 = *(_QWORD *)(v167 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v13, v14);
  OUTLINED_FUNCTION_79_5();
  v159 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79A450);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_79_5();
  v165 = OUTLINED_FUNCTION_151_4(v18);
  v164 = *(_QWORD *)(v165 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v19, v20);
  OUTLINED_FUNCTION_79_5();
  v163 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A91F0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v22, v23);
  OUTLINED_FUNCTION_79_5();
  v175 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78CEA8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v25, v26);
  OUTLINED_FUNCTION_2_2();
  v169 = v27;
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1E0C80A78](v28, v29);
  OUTLINED_FUNCTION_111();
  v170 = v30;
  v161 = type metadata accessor for USOParse();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v31, v32);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v33, v34);
  v168 = ((char *)&v151 - v35);
  OUTLINED_FUNCTION_3_0();
  MEMORY[0x1E0C80A78](v36, v37);
  v39 = (char *)&v151 - v38;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v40, v41);
  OUTLINED_FUNCTION_10();
  v44 = v43 - v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79A458);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v45, v46);
  OUTLINED_FUNCTION_125_2();
  v49 = (char *)(v47 - v48);
  MEMORY[0x1E0C80A78](v50, v51);
  OUTLINED_FUNCTION_192_1();
  sub_1C2CFDDA0();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v52, v53);
  OUTLINED_FUNCTION_140_8();
  sub_1C2CFB8A4();
  swift_allocObject();
  v54 = sub_1C2CFB898();
  sub_1C28C3328(&qword_1ED7A8070, type metadata accessor for Parse, (uint64_t)&protocol conformance descriptor for Parse);
  v178 = v2;
  v55 = sub_1C2CFB88C();
  v57 = v56;
  v154 = (uint64_t *)v44;
  v58 = v175;
  v59 = v176;
  v155 = v49;
  v156 = v0;
  swift_release();
  sub_1C2CFDD94();
  v60 = sub_1C2CFDD70();
  if (!v61)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v69 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v69, (uint64_t)qword_1ED7AA1B0);
    v70 = OUTLINED_FUNCTION_123();
    v71 = os_log_type_enabled(v54, v70);
    v72 = v177;
    if (v71)
    {
      v73 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      *(_WORD *)v73 = 0;
      OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v54, v70, "PervasiveEntityResolution nil encoded USO parse to JSON", v73);
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_179_3();

    sub_1C28C9F68(v178, type metadata accessor for Parse);
    goto LABEL_4;
  }
  v62 = v60;
  v63 = v61;
  OUTLINED_FUNCTION_179_3();
  OUTLINED_FUNCTION_149_6();
  v64 = v174;
  __swift_storeEnumTagSinglePayload(v55, 1, 1, v174);
  v65 = v154;
  sub_1C28F3FD0(v178, (uint64_t)v154, type metadata accessor for Parse);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v153 = v62;
  switch(EnumCaseMultiPayload)
  {
    case 0:
      sub_1C28C9F68((uint64_t)v65, type metadata accessor for Parse);
      goto LABEL_21;
    case 2:
      v82 = *v65;
      v81 = v65[1];
      v83 = v65[2];
      if (v83)
      {
        OUTLINED_FUNCTION_216_2();
        v39 = v155;
        v78 = v64;
        if (*((_QWORD *)&v181 + 1))
        {
          if ((OUTLINED_FUNCTION_74_16() & 1) != 0)
          {
            OUTLINED_FUNCTION_53_1();
            v85 = OUTLINED_FUNCTION_8();
            v80 = v179[0];
            OUTLINED_FUNCTION_152_4(v85, &qword_1EF79A458);
            *(_QWORD *)v55 = v80;
            v87 = (unsigned int *)MEMORY[0x1E0D98598];
LABEL_47:
            OUTLINED_FUNCTION_143_6(v86, *v87);
            OUTLINED_FUNCTION_68_22();
            v72 = v177;
            v77 = v172;
            goto LABEL_56;
          }
          goto LABEL_39;
        }
      }
      else
      {
        v180 = 0u;
        v181 = 0u;
        OUTLINED_FUNCTION_177_2();
        v78 = v64;
      }
      OUTLINED_FUNCTION_64_4(v84, &qword_1ED7A8480);
      if (!v83)
      {
        v180 = 0u;
        v181 = 0u;
        goto LABEL_43;
      }
LABEL_39:
      sub_1C28C1A54();
      if (*((_QWORD *)&v181 + 1))
      {
        if ((OUTLINED_FUNCTION_74_16() & 1) != 0)
          goto LABEL_46;
        goto LABEL_44;
      }
LABEL_43:
      OUTLINED_FUNCTION_64_4(v116, &qword_1ED7A8480);
      if (!v83)
      {
        v180 = 0u;
        v181 = 0u;
        goto LABEL_50;
      }
LABEL_44:
      OUTLINED_FUNCTION_216_2();
      if (!*((_QWORD *)&v181 + 1))
      {
LABEL_50:
        OUTLINED_FUNCTION_64_4(v117, &qword_1ED7A8480);
        goto LABEL_51;
      }
      if ((OUTLINED_FUNCTION_74_16() & 1) != 0)
      {
LABEL_46:
        OUTLINED_FUNCTION_53_1();
        v118 = OUTLINED_FUNCTION_8();
        v80 = v179[0];
        v119 = v179[1];
        OUTLINED_FUNCTION_152_4(v118, &qword_1EF79A458);
        *(_QWORD *)v55 = v80;
        *(_QWORD *)(v55 + 8) = v119;
        v87 = (unsigned int *)MEMORY[0x1E0D98590];
        goto LABEL_47;
      }
LABEL_51:
      if (qword_1ED7AA040 != -1)
        swift_once();
      v120 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_250_0(v120, (uint64_t)qword_1ED7AA1B0);
      OUTLINED_FUNCTION_19_0();
      OUTLINED_FUNCTION_33_0();
      sub_1C2CFD86C();
      v121 = OUTLINED_FUNCTION_123();
      if (OUTLINED_FUNCTION_116_2(v121))
      {
        v122 = OUTLINED_FUNCTION_6_0();
        v152 = v63;
        v123 = (uint8_t *)v122;
        v124 = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v123 = 136315138;
        v179[0] = v124;
        *(_QWORD *)&v180 = v82;
        *((_QWORD *)&v180 + 1) = v81;
        *(_QWORD *)&v181 = v83;
        OUTLINED_FUNCTION_33_0();
        OUTLINED_FUNCTION_19_0();
        v125 = sub_1C2CFDDAC();
        *(_QWORD *)&v180 = sub_1C28BB120(v125, v126, v179);
        OUTLINED_FUNCTION_177_2();
        sub_1C2CFE4D8();
        OUTLINED_FUNCTION_29_2();
        OUTLINED_FUNCTION_29_2();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v62, (os_log_type_t)v78, "PervasiveEntityResolution could not extract selection from directInvocation:  %s.", v123);
        OUTLINED_FUNCTION_49_2();
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_29_2();
      OUTLINED_FUNCTION_29_2();
      v72 = v177;
      v80 = v171;
      v77 = v172;
      OUTLINED_FUNCTION_149_6();
      v78 = v64;
LABEL_56:
      v91 = v178;
LABEL_66:
      sub_1C28C3750(v55, (uint64_t)v39, &qword_1EF79A458);
      OUTLINED_FUNCTION_35_18((uint64_t)v39, 1, v78);
      if (!v95)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v77, v39, v78);
        v148 = OUTLINED_FUNCTION_207_1();
        v149(v148);
        sub_1C2CFCDEC();
        sub_1C28C9F68(v91, type metadata accessor for Parse);
        v150 = (*(uint64_t (**)(uint64_t, uint64_t))(v80 + 8))(v77, v78);
        OUTLINED_FUNCTION_152_4(v150, &qword_1EF79A458);
        v67 = 0;
        goto LABEL_5;
      }
      OUTLINED_FUNCTION_254();
      sub_1C28C9F68(v91, type metadata accessor for Parse);
      sub_1C28BB37C(v55, &qword_1EF79A458);
      sub_1C28BB37C((uint64_t)v39, &qword_1EF79A458);
LABEL_4:
      v67 = 1;
LABEL_5:
      v68 = sub_1C2CFCDF8();
      __swift_storeEnumTagSinglePayload(v72, v67, 1, v68);
      OUTLINED_FUNCTION_1();
      return;
    case 3:
      swift_unknownObjectRelease();
LABEL_21:
      v72 = v177;
      v77 = v172;
      v39 = v155;
      v78 = v64;
      if (qword_1ED7AA040 != -1)
        swift_once();
      v88 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v88, (uint64_t)qword_1ED7AA1B0);
      v89 = OUTLINED_FUNCTION_73_0();
      v90 = OUTLINED_FUNCTION_48_7(v89);
      v91 = v178;
      if (v90)
      {
        v92 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_WORD *)v92 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v57, (os_log_type_t)v62, "PervasiveEntityResolution currently doesn't handle NLv3/NLv4 parse.", v92);
        OUTLINED_FUNCTION_11_0();
      }

      v80 = v171;
      goto LABEL_66;
    case 6:
      sub_1C2B56F08((uint64_t)v65, (uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for USOParse);
      v93 = sub_1C2CFBF88();
      sub_1C28CAD64(v93);
      OUTLINED_FUNCTION_8();
      v94 = sub_1C2CFC090();
      OUTLINED_FUNCTION_35_18(v58, 1, v94);
      if (v95)
      {
        sub_1C28BB37C(v58, &qword_1ED7A91F0);
        v101 = OUTLINED_FUNCTION_166_3();
        v99 = v170;
        v102 = v170;
        v103 = 1;
      }
      else
      {
        v96 = v163;
        sub_1C2CFC054();
        v97 = OUTLINED_FUNCTION_181_3();
        OUTLINED_FUNCTION_33_2(v97, v98);
        v99 = v170;
        sub_1C2CFC0F0();
        OUTLINED_FUNCTION_14_5();
        v100(v96, v165);
        v101 = OUTLINED_FUNCTION_166_3();
        v102 = v99;
        v103 = 0;
      }
      __swift_storeEnumTagSinglePayload(v102, v103, 1, v101);
      v72 = v177;
      v104 = v169;
      sub_1C28C3750(v99, v169, &qword_1EF78CEA8);
      OUTLINED_FUNCTION_166_3();
      v105 = OUTLINED_FUNCTION_35_18(v104, 1, v101);
      v152 = v63;
      if (v95)
      {
        OUTLINED_FUNCTION_370(v105, &qword_1EF78CEA8);
        v106 = (uint64_t)v39;
        v78 = v64;
        goto LABEL_61;
      }
      v107 = sub_1C2CFBF64();
      OUTLINED_FUNCTION_52_30();
      v108 = *(_QWORD *)(v107 + 16);
      if (v108)
      {
        v109 = v59;
        v110 = v107 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
        v111 = *(_QWORD *)(v59 + 72);
        v55 = *(_QWORD *)(v109 + 16);
        v177 = v107;
        OUTLINED_FUNCTION_33_0();
        v112 = v167;
        v113 = v159;
        while (1)
        {
          ((void (*)(uint64_t, unint64_t, uint64_t))v55)(v113, v110, v112);
          if ((sub_1C2CFBF40() & 1) != 0)
            break;
          OUTLINED_FUNCTION_203_1(v113, *(uint64_t (**)(uint64_t, uint64_t))(v109 + 8));
          v110 += v111;
          if (!--v108)
          {
            OUTLINED_FUNCTION_8();
            v78 = v174;
            OUTLINED_FUNCTION_149_6();
            v115 = v162;
            goto LABEL_58;
          }
        }
        OUTLINED_FUNCTION_32_0();
        v115 = v162;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v162, v113, v112);
        v78 = v174;
        OUTLINED_FUNCTION_149_6();
      }
      else
      {
        v114 = 1;
        v112 = v167;
        v109 = v59;
        v115 = v162;
        v78 = v64;
      }
LABEL_58:
      __swift_storeEnumTagSinglePayload(v115, v114, 1, v112);
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_35_18(v115, 1, v112);
      v80 = v166;
      if (!v95)
      {
        OUTLINED_FUNCTION_208_0();
        v91 = v178;
        (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v115, v167);
        v142 = sub_1C2CFD68C();
        v144 = v143;
        v145 = OUTLINED_FUNCTION_48_2(v80, *(uint64_t (**)(uint64_t, _QWORD))(v157 + 8));
        OUTLINED_FUNCTION_191_3(v145, &qword_1EF78CEA8);
        sub_1C28C9F68((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for USOParse);
        OUTLINED_FUNCTION_152_4(v146, &qword_1EF79A458);
        *(_QWORD *)v55 = v142;
        *(_QWORD *)(v55 + 8) = v144;
        OUTLINED_FUNCTION_143_6(v147, *MEMORY[0x1E0D985A0]);
        OUTLINED_FUNCTION_68_22();
        v77 = v172;
        OUTLINED_FUNCTION_177_2();
        goto LABEL_66;
      }
      sub_1C28BB37C(v115, &qword_1EF79A450);
      v106 = (uint64_t)v39;
LABEL_61:
      v91 = v178;
      v127 = v168;
      v39 = v155;
      if (qword_1ED7AA040 != -1)
        swift_once();
      v128 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_250_0(v128, (uint64_t)qword_1ED7AA1B0);
      v129 = OUTLINED_FUNCTION_149_1();
      sub_1C28F3FD0(v129, v130, v131);
      sub_1C2CFD86C();
      v132 = OUTLINED_FUNCTION_249();
      if (os_log_type_enabled(v127, v132))
      {
        v133 = OUTLINED_FUNCTION_6_0();
        v177 = v106;
        v134 = (uint8_t *)v133;
        *(_QWORD *)&v180 = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v134 = 136315138;
        sub_1C28F3FD0((uint64_t)v127, v160, (uint64_t (*)(_QWORD))type metadata accessor for USOParse);
        v135 = sub_1C2CFDDAC();
        v179[0] = sub_1C28BB120(v135, v136, (uint64_t *)&v180);
        OUTLINED_FUNCTION_177_2();
        sub_1C2CFE4D8();
        swift_bridgeObjectRelease();
        v137 = OUTLINED_FUNCTION_137_5();
        sub_1C28C9F68(v137, v138);
        OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v127, v132, "PervasiveEntityResolution could not extract selection from usoParse:  %s.", v134);
        OUTLINED_FUNCTION_107_1();
        OUTLINED_FUNCTION_149_6();
        OUTLINED_FUNCTION_11_0();
      }

      v139 = OUTLINED_FUNCTION_149_1();
      sub_1C28C9F68(v139, v140);
      OUTLINED_FUNCTION_191_3(v141, &qword_1EF78CEA8);
      sub_1C28C9F68(v106, (uint64_t (*)(_QWORD))type metadata accessor for USOParse);
      v80 = v171;
      v77 = v172;
      goto LABEL_66;
    default:
      v72 = v177;
      if (qword_1ED7AA040 != -1)
        swift_once();
      v74 = OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_23_1(v74, (uint64_t)qword_1ED7AA1B0);
      v75 = OUTLINED_FUNCTION_249();
      v76 = OUTLINED_FUNCTION_48_7(v75);
      v77 = v172;
      v78 = v64;
      if (v76)
      {
        v79 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        *(_WORD *)v79 = 0;
        OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v57, (os_log_type_t)v62, "PervasiveEntityResolution unhandled response type.", v79);
        OUTLINED_FUNCTION_11_0();
      }

      sub_1C28C9F68((uint64_t)v65, type metadata accessor for Parse);
      v80 = v171;
      OUTLINED_FUNCTION_177_2();
      goto LABEL_56;
  }
}

void PromptForDisambiguationFlowAsync.execute(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1C2B486B4(a1, a2, (uint64_t)&protocol conformance descriptor for PromptForDisambiguationFlowAsync<A, B>);
}

void sub_1C2B486B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  MEMORY[0x1C3BC9CD4](a3, *v3);
  OUTLINED_FUNCTION_149_1();
  Flow.deferToExecuteAsync(_:)();
}

uint64_t sub_1C2B4870C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 272) = a1;
  *(_QWORD *)(v5 + 280) = v4;
  *(_QWORD *)(v5 + 288) = type metadata accessor for PromptForDisambiguationFlowAsync.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  *(_QWORD *)(v5 + 296) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C0);
  *(_QWORD *)(v5 + 304) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C8);
  *(_QWORD *)(v5 + 312) = swift_task_alloc();
  *(_QWORD *)(v5 + 320) = type metadata accessor for Input(0);
  v7 = swift_task_alloc();
  v8 = *a2;
  *(_QWORD *)(v5 + 328) = v7;
  *(_QWORD *)(v5 + 336) = v8;
  *(_OWORD *)(v5 + 344) = *(_OWORD *)(a2 + 1);
  *(_BYTE *)(v5 + 57) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(v5 + 360) = a2[4];
  *(_BYTE *)(v5 + 58) = *((_BYTE *)a2 + 40);
  return swift_task_switch();
}

uint64_t sub_1C2B48808()
{
  _QWORD *v0;
  __n128 *v1;
  char v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_183_0();
  v0[2] = v0[42];
  OUTLINED_FUNCTION_215_1(v2, *v1);
  v3 = (_QWORD *)swift_task_alloc();
  v0[46] = v3;
  *v3 = v0;
  v3[1] = sub_1C2B48884;
  return sub_1C2B4D32C((uint64_t)(v0 + 14), (uint64_t)(v0 + 2));
}

uint64_t sub_1C2B48884()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 376) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B488D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  os_log_type_t v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  __int128 v26;

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(void **)(v0 + 280);
  sub_1C2B49B98(v0 + 112, v2);
  OUTLINED_FUNCTION_35_18(v2, 1, v1);
  if (v4)
  {
    v5 = *(_QWORD **)(v0 + 280);
    sub_1C28BB37C(*(_QWORD *)(v0 + 312), &qword_1EF7880C8);
    v6 = v5 + 3;
    v7 = v5[6];
    v8 = v5[7];
    __swift_project_boxed_opaque_existential_1(v6, v7);
    v9 = swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v9;
    *(_QWORD *)(v9 + 16) = v0 + 112;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 408) = v10;
    *v10 = v0;
    v10[1] = sub_1C2B48B5C;
    return OUTLINED_FUNCTION_58_26(v0 + 152, (uint64_t)&unk_1EF7880D8, v9, v7, v8);
  }
  else
  {
    sub_1C2B56F08(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 328), type metadata accessor for Input);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v12 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v12, (uint64_t)qword_1ED7AA1B0);
    v13 = OUTLINED_FUNCTION_30();
    if (OUTLINED_FUNCTION_20_0(v13))
    {
      v14 = (_WORD *)OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_91(v14);
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v15, v16, "PromptForDisambiguationFlow bypassed the prompt with a learned selection");
      OUTLINED_FUNCTION_11_0();
    }
    v17 = *(_BYTE *)(v0 + 58);
    v18 = *(_QWORD *)(v0 + 360);
    v19 = *(_BYTE *)(v0 + 57);
    v20 = *(_QWORD *)(v0 + 336);
    v26 = *(_OWORD *)(v0 + 344);

    *(_QWORD *)(v0 + 64) = v20;
    *(_OWORD *)(v0 + 72) = v26;
    *(_BYTE *)(v0 + 88) = v19;
    *(_QWORD *)(v0 + 96) = v18;
    *(_BYTE *)(v0 + 104) = v17;
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v21;
    *v21 = v0;
    v21[1] = sub_1C2B48AB4;
    OUTLINED_FUNCTION_209_1();
    return sub_1C2B48F58(v22, v23, v24, v25);
  }
}

uint64_t sub_1C2B48AB4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 392) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B48B00()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_205();
  sub_1C28C9F68(*(_QWORD *)(v0 + 328), type metadata accessor for Input);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_5_4(v1);
}

uint64_t sub_1C2B48B5C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_86_15();
  if (v1)
  {
    swift_task_dealloc();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 152);
    OUTLINED_FUNCTION_38();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B48BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t (*v19)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_176();
  sub_1C28C3750(v10[35] + 64, (uint64_t)(v10 + 24), &qword_1EF7880E0);
  if (v10[27])
  {
    v11 = v10[38];
    __swift_project_boxed_opaque_existential_1(v10 + 24, v10[27]);
    sub_1C28B9A48((uint64_t)(v10 + 14), (uint64_t)(v10 + 29));
    sub_1C2B4A4C4();
    sub_1C2CFCEDC();
    sub_1C28BB37C(v11, &qword_1EF7880C0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 24));
  }
  else
  {
    sub_1C28BB37C((uint64_t)(v10 + 24), &qword_1EF7880E0);
  }
  OUTLINED_FUNCTION_183_0();
  v12 = v10[37];
  v13 = v10[34];
  v15 = *v14;
  *(_QWORD *)v12 = v10[42];
  *(_OWORD *)(v12 + 8) = v15;
  *(_BYTE *)(v12 + 24) = v16;
  *(_QWORD *)(v12 + 32) = v17;
  *(_BYTE *)(v12 + 40) = v18;
  OUTLINED_FUNCTION_262();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_117_14();
  static ExecuteResponse.ongoing(requireInput:)(1, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 14));
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_174();
  return v19(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10);
}

uint64_t sub_1C2B48CE8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_87_15();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B48D28()
{
  uint64_t v0;

  sub_1C28C9F68(*(_QWORD *)(v0 + 328), type metadata accessor for Input);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  OUTLINED_FUNCTION_87_15();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B48D84()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  OUTLINED_FUNCTION_87_15();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B48DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[7] = a1;
  v5[8] = v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  v5[9] = v7;
  v5[10] = OUTLINED_FUNCTION_168_5(a1, v6, v7, a4);
  v5[11] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B48E18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD **)(v0 + 64);
  v2 = v1[6];
  v3 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v4;
  *v4 = v0;
  v4[1] = sub_1C2B48EA0;
  return sub_1C28DF498(v0 + 16, (uint64_t)&unk_1EF79A418, *(_QWORD *)(v0 + 64), v2, v3);
}

uint64_t sub_1C2B48EA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B48EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(void);

  type metadata accessor for PromptResult(0, *(_QWORD *)(v4 + 72), a3, a4);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_114_11();
  OUTLINED_FUNCTION_193_1();
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_31();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_5(v5);
}

uint64_t sub_1C2B48F58(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v5 + 168) = a2;
  *(_QWORD *)(v5 + 176) = v4;
  *(_QWORD *)(v5 + 160) = a1;
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 80);
  *(_QWORD *)(v5 + 184) = v8;
  v9 = *(_QWORD *)(v7 + 88);
  *(_QWORD *)(v5 + 192) = v9;
  *(_QWORD *)(v5 + 200) = type metadata accessor for PromptForDisambiguationFlowAsync.State(0, v8, v9, a4);
  *(_QWORD *)(v5 + 208) = OUTLINED_FUNCTION_7();
  *(_QWORD *)(v5 + 216) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 224) = OUTLINED_FUNCTION_107_0();
  *(_QWORD *)(v5 + 232) = OUTLINED_FUNCTION_78();
  v10 = OUTLINED_FUNCTION_78();
  *(_QWORD *)(v5 + 240) = v10;
  v14 = OUTLINED_FUNCTION_167_5(v10, v11, v12, v13);
  *(_QWORD *)(v5 + 248) = v14;
  *(_QWORD *)(v5 + 256) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v5 + 264) = OUTLINED_FUNCTION_7();
  v17 = type metadata accessor for DisambiguationResult(0, v9, v15, v16);
  *(_QWORD *)(v5 + 272) = v17;
  *(_QWORD *)(v5 + 280) = *(_QWORD *)(v17 - 8);
  v18 = OUTLINED_FUNCTION_7();
  v19 = *a3;
  *(_QWORD *)(v5 + 288) = v18;
  *(_QWORD *)(v5 + 296) = v19;
  *(_OWORD *)(v5 + 304) = *(_OWORD *)(a3 + 1);
  *(_BYTE *)(v5 + 57) = *((_BYTE *)a3 + 24);
  *(_QWORD *)(v5 + 320) = a3[4];
  *(_BYTE *)(v5 + 58) = *((_BYTE *)a3 + 40);
  OUTLINED_FUNCTION_36_2();
  return swift_task_switch();
}

uint64_t sub_1C2B49048()
{
  __n128 *v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v1 = v0[3].n128_i8[10];
  v0[1].n128_u64[0] = v0[18].n128_u64[1];
  OUTLINED_FUNCTION_215_1(v1, v0[19]);
  v2 = (_QWORD *)swift_task_alloc();
  v0[20].n128_u64[1] = (unint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1C2B490C0;
  OUTLINED_FUNCTION_209_1();
  return sub_1C2B4D23C(v3, v4, v5);
}

uint64_t sub_1C2B490C0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 336) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B4910C()
{
  uint64_t v0;
  NSObject *v1;
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;

  v1 = *(NSObject **)(v0 + 264);
  (*(void (**)(NSObject *, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 16))(v1, *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 248));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = *(_QWORD *)(v0 + 264);
  if (EnumCaseMultiPayload == 1)
  {
    v4 = *(_QWORD *)v3;
    v5 = *(_BYTE *)(v3 + 8);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_118();
    OUTLINED_FUNCTION_23_1(v6, (uint64_t)qword_1ED7AA1B0);
    v7 = OUTLINED_FUNCTION_30();
    if (os_log_type_enabled(v1, v7))
    {
      v8 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v47 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v8 = 136315138;
      v9 = sub_1C2B0E950(v4, v5);
      *(_QWORD *)(v0 + 144) = sub_1C28BB120(v9, v10, &v47);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_70();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v1, v7, "PromptForDisambiguationFlow received a request to paginate from the user: %s", v8);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    v25 = *(_BYTE *)(v0 + 58);
    v26 = *(_QWORD *)(v0 + 320);
    v27 = *(_BYTE *)(v0 + 57);
    v28 = *(_QWORD *)(v0 + 208);
    v29 = *(_QWORD *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 160);
    v47 = *(_QWORD *)(v0 + 296);
    v48 = *(_OWORD *)(v0 + 304);
    v49 = v27;
    v50 = v26;
    v51 = v25;
    v52 = v4;
    v53 = v5;
    v33 = type metadata accessor for PaginatedItemContainer(0, v29, v31, v32);
    swift_bridgeObjectRetain();
    sub_1C2B0F0E0(&v52, v33);
    v34 = v49;
    v35 = v50;
    v36 = v51;
    *(_QWORD *)v28 = v47;
    *(_OWORD *)(v28 + 8) = v48;
    *(_BYTE *)(v28 + 24) = v34;
    *(_QWORD *)(v28 + 32) = v35;
    *(_BYTE *)(v28 + 40) = v36;
    OUTLINED_FUNCTION_54_2();
    sub_1C2B47230(v28);
    OUTLINED_FUNCTION_32_30();
    static ExecuteResponse.ongoing(requireInput:)(0, v30);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(*(_QWORD *)(v0 + 240), v3, *(_QWORD *)(v0 + 192));
    if (qword_1ED7AA040 != -1)
      swift_once();
    v11 = *(_QWORD *)(v0 + 192);
    v12 = OUTLINED_FUNCTION_118();
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED7AA1B0);
    v14 = OUTLINED_FUNCTION_198_0();
    v46 = v15;
    ((void (*)(uint64_t))v15)(v14);
    v16 = v13;
    sub_1C2CFD86C();
    v17 = OUTLINED_FUNCTION_30();
    v18 = OUTLINED_FUNCTION_10_1(v17);
    v19 = *(_QWORD *)(v0 + 232);
    if (v18)
    {
      v20 = *(_QWORD *)(v0 + 224);
      v44 = *(_QWORD *)(v0 + 216);
      v21 = *(_QWORD *)(v0 + 192);
      v22 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v47 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v22 = 136315138;
      v46(v20, v19, v21);
      v23 = sub_1C2CFDDAC();
      *(_QWORD *)(v0 + 152) = sub_1C28BB120(v23, v24, &v47);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v19, v21);
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v16, (os_log_type_t)v11, "PromptForDisambiguationFlow received a chosen item from the user (%s). Returning with answer.", v22);
      OUTLINED_FUNCTION_49_2();
      OUTLINED_FUNCTION_11_0();
    }
    v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 216) + 8);
    v45(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 192));

    v37 = *(_QWORD *)(v0 + 240);
    v38 = *(_QWORD *)(v0 + 208);
    v39 = *(_QWORD *)(v0 + 192);
    v46(v38, v37, v39);
    type metadata accessor for PromptResult(0, v39, v40, v41);
    OUTLINED_FUNCTION_54_2();
    swift_storeEnumTagMultiPayload();
    sub_1C2B47230(v38);
    v45(v37, v39);
    OUTLINED_FUNCTION_32_30();
    static ExecuteResponse.complete()();
  }
  OUTLINED_FUNCTION_124_9();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  v42 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return v42();
}

uint64_t sub_1C2B49584()
{
  os_log_type_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v2 = (void *)v1[42];
  v3 = OUTLINED_FUNCTION_118();
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED7AA1B0);
  v5 = v2;
  v6 = v2;
  sub_1C2CFD86C();
  v7 = OUTLINED_FUNCTION_249();
  if (OUTLINED_FUNCTION_304(v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v21 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue();
    v9 = sub_1C2CFEA78();
    v1[17] = sub_1C28BB120(v9, v10, &v21);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_206();
    OUTLINED_FUNCTION_206();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v4, v0, "PromptForDisambiguationFlow encountered an error while trying to parse user input: %s", v8);
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_206();
  OUTLINED_FUNCTION_206();

  v11 = v1[42];
  v12 = v1[22];
  v13 = OUTLINED_FUNCTION_55_20();
  v1[43] = v13;
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  v14 = (_QWORD *)swift_task_alloc();
  v1[44] = v14;
  *v14 = v1;
  v14[1] = sub_1C2B49754;
  v15 = OUTLINED_FUNCTION_50();
  return sub_1C28DF498(v15, v16, v17, v18, v19);
}

uint64_t sub_1C2B49754()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v2);
  *(_QWORD *)(v0 + 360) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
    OUTLINED_FUNCTION_38();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B497B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_205();
  v1 = v0[26];
  v2 = v0[24];
  *(_QWORD *)v1 = v0[42];
  *(_BYTE *)(v1 + 8) = 1;
  type metadata accessor for PromptResult(0, v2, v3, v4);
  OUTLINED_FUNCTION_262();
  OUTLINED_FUNCTION_114_11();
  OUTLINED_FUNCTION_195();
  sub_1C2B47230(v1);
  OUTLINED_FUNCTION_44_5();
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_124_9();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_5_4(v5);
}

uint64_t sub_1C2B49840()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 336);
  swift_task_dealloc();
  swift_willThrow();

  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2B498DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[13] = a1;
  v5[14] = v4;
  v5[15] = type metadata accessor for PromptForDisambiguationFlowAsync.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v6 = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_150_4(v6);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B4992C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  v1 = v0[14];
  v2 = OUTLINED_FUNCTION_55_20();
  v0[17] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[18] = v3;
  *v3 = v0;
  v3[1] = sub_1C2B499A0;
  v4 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_58_26(v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B499A0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_36();
  if (!v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
    OUTLINED_FUNCTION_38();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B499EC()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t (*v5)(void);

  v1 = *(_OWORD **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_OWORD *)(v0 + 16);
  v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)((char *)v1 + 25) = *(_OWORD *)(v0 + 41);
  *v1 = v3;
  v1[1] = v4;
  OUTLINED_FUNCTION_262();
  sub_1C296528C(v0 + 16);
  OUTLINED_FUNCTION_193_1();
  static ExecuteResponse.ongoing(requireInput:)(1, v2);
  OUTLINED_FUNCTION_31();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_5(v5);
}

uint64_t sub_1C2B49A58()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B49A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[13] = a1;
  v5[14] = v4;
  v5[15] = type metadata accessor for PromptForDisambiguationFlowAsync.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v6 = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_150_4(v6);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B49AD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  v1 = v0[14];
  v2 = OUTLINED_FUNCTION_55_20();
  v0[17] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[18] = v3;
  *v3 = v0;
  v3[1] = sub_1C2B49B4C;
  v4 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_58_26(v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B49B4C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_6_36();
  if (!v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
    OUTLINED_FUNCTION_38();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B49B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint8_t *v42;
  const char *v43;
  uint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  char *v56;
  int EnumTagSinglePayload;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  int *v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint8_t *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  ValueMetadata *v88;
  unint64_t v89;
  _QWORD v90[4];

  v83 = a1;
  v76 = sub_1C2CFBCAC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76, v4);
  v74 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Input(0);
  MEMORY[0x1E0C80A78](v6, v7);
  v78 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880E8);
  MEMORY[0x1E0C80A78](v9, v10);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Parse(0);
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15, v18);
  v79 = (uint64_t)&v74 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880F0);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1C2CFCE64();
  v80 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24, v25);
  v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880C0);
  MEMORY[0x1E0C80A78](v28, v29);
  v31 = (char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1C2CFCE40();
  v85 = *(_QWORD *)(v32 - 8);
  v86 = v32;
  MEMORY[0x1E0C80A78](v32, v33);
  v84 = (char *)&v74 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v2;
  sub_1C28C3750(v2 + 64, (uint64_t)&v87, &qword_1EF7880E0);
  if (!v88)
  {
    sub_1C28BB37C((uint64_t)&v87, &qword_1EF7880E0);
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v6);
  }
  v81 = (int *)v6;
  v82 = a2;
  sub_1C28B99EC(&v87, (uint64_t)v90);
  v88 = &type metadata for FeatureFlagDefinitions.Core;
  v89 = sub_1C29652B4();
  LOBYTE(v87) = 1;
  v35 = sub_1C2CFBE20();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  if ((v35 & 1) == 0)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v45 = sub_1C2CFD878();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED7AA1B0);
    v38 = sub_1C2CFD86C();
    v39 = sub_1C2CFE2A4();
    v46 = os_log_type_enabled(v38, v39);
    v41 = v82;
    if (!v46)
      goto LABEL_14;
    v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v42 = 0;
    v43 = "PromptForDisambiguationFlow PervasiveEntityResolution is not enabled";
    goto LABEL_13;
  }
  sub_1C28B9A48(v83, (uint64_t)&v87);
  sub_1C2B4A4C4();
  v36 = v86;
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v86) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v31, v36);
    __swift_project_boxed_opaque_existential_1(v90, v90[3]);
    sub_1C2CFCEF4();
    v50 = v24;
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24) == 1)
    {
      sub_1C28BB37C((uint64_t)v23, &qword_1EF7880F0);
      v41 = v82;
      if (qword_1ED7AA040 != -1)
        swift_once();
      v51 = sub_1C2CFD878();
      __swift_project_value_buffer(v51, (uint64_t)qword_1ED7AA1B0);
      v52 = sub_1C2CFD86C();
      v53 = sub_1C2CFE2A4();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_1C28B6000, v52, v53, "PromptForDisambiguationFlow PervasiveEntityResolution: nothing learned", v54, 2u);
        MEMORY[0x1C3BC9DE8](v54, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
      goto LABEL_15;
    }
    v55 = v80;
    v56 = v27;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v27, v23, v50);
    sub_1C28C3328(&qword_1ED7A7C78, type metadata accessor for Parse, (uint64_t)&protocol conformance descriptor for Parse);
    sub_1C2CFCE58();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
    v58 = v82;
    if (EnumTagSinglePayload == 1)
    {
      sub_1C28BB37C((uint64_t)v12, &qword_1EF7880E8);
      if (qword_1ED7AA040 != -1)
        swift_once();
      v59 = sub_1C2CFD878();
      __swift_project_value_buffer(v59, (uint64_t)qword_1ED7AA1B0);
      v60 = sub_1C2CFD86C();
      v61 = sub_1C2CFE2B0();
      v62 = os_log_type_enabled(v60, v61);
      v63 = v81;
      if (v62)
      {
        v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v64 = 0;
        _os_log_impl(&dword_1C28B6000, v60, v61, "PromptForDisambiguationFlow could not decode parse, starting fresh", v64, 2u);
        MEMORY[0x1C3BC9DE8](v64, -1, -1);
      }

    }
    else
    {
      v65 = v79;
      sub_1C2B56F08((uint64_t)v12, v79, type metadata accessor for Parse);
      sub_1C28F3FD0(v65, (uint64_t)v17, type metadata accessor for Parse);
      v63 = v81;
      v66 = (uint64_t)v78;
      v67 = &v78[v81[7]];
      *((_QWORD *)v67 + 4) = 0;
      *(_OWORD *)v67 = 0u;
      *((_OWORD *)v67 + 1) = 0u;
      sub_1C28F3FD0((uint64_t)v17, v66 + v63[5], type metadata accessor for Parse);
      *(_QWORD *)(v66 + v63[6]) = MEMORY[0x1E0DEE9D8];
      v68 = v74;
      sub_1C2CFBCA0();
      sub_1C28C9F68((uint64_t)v17, type metadata accessor for Parse);
      (*(void (**)(uint64_t, char *, uint64_t))(v75 + 32))(v66, v68, v76);
      *(_BYTE *)(v66 + v63[8]) = 0;
      (*(void (**)(__int128 *__return_ptr, uint64_t))(*(_QWORD *)(v77 + 16) + 32))(&v87, v66);
      if (v87 == 1)
      {
        sub_1C28C9F68(v65, type metadata accessor for Parse);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v50);
        (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
        sub_1C2B56F08(v66, v58, type metadata accessor for Input);
        v47 = v58;
        v48 = 0;
LABEL_37:
        v49 = (uint64_t)v63;
        goto LABEL_16;
      }
      if (qword_1ED7AA040 != -1)
        swift_once();
      v69 = sub_1C2CFD878();
      __swift_project_value_buffer(v69, (uint64_t)qword_1ED7AA1B0);
      v70 = sub_1C2CFD86C();
      v71 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v72 = 0;
        _os_log_impl(&dword_1C28B6000, v70, v71, "PromptForDisambiguationFlow learned selection rejected, starting fresh", v72, 2u);
        v73 = v72;
        v65 = v79;
        MEMORY[0x1C3BC9DE8](v73, -1, -1);
      }

      sub_1C28C9F68(v66, type metadata accessor for Input);
      sub_1C28C9F68(v65, type metadata accessor for Parse);
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v50);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
    v47 = v58;
    v48 = 1;
    goto LABEL_37;
  }
  sub_1C28BB37C((uint64_t)v31, &qword_1EF7880C0);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v37 = sub_1C2CFD878();
  __swift_project_value_buffer(v37, (uint64_t)qword_1ED7AA1B0);
  v38 = sub_1C2CFD86C();
  v39 = sub_1C2CFE2A4();
  v40 = os_log_type_enabled(v38, v39);
  v41 = v82;
  if (!v40)
    goto LABEL_14;
  v42 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v42 = 0;
  v43 = "PromptForDisambiguationFlow Could not extract choices for PervasiveEntityResolution";
LABEL_13:
  _os_log_impl(&dword_1C28B6000, v38, v39, v43, v42, 2u);
  MEMORY[0x1C3BC9DE8](v42, -1, -1);
LABEL_14:

LABEL_15:
  v47 = v41;
  v48 = 1;
  v49 = (uint64_t)v81;
LABEL_16:
  __swift_storeEnumTagSinglePayload(v47, v48, 1, v49);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
}

uint64_t sub_1C2B4A48C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B4A49C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1C28B9A48(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_24(v1);
}

void sub_1C2B4A4C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, _QWORD);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  int64_t v122;
  uint64_t *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v127;
  BOOL v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(uint64_t, _QWORD);
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(uint64_t, _QWORD);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v159;
  uint64_t v160;
  unint64_t i;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(uint64_t);
  BOOL v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(uint64_t, uint64_t, uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void (*v193)(uint64_t, uint64_t, uint64_t);
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226[5];
  uint64_t v227;
  uint64_t v228[6];

  OUTLINED_FUNCTION_9();
  v2 = v1;
  v209 = v3;
  v218 = sub_1C2CFC1EC();
  v220 = *(_QWORD *)(v218 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v4, v5);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_15_34(v12);
  v13 = sub_1C2CFD698();
  v223 = *(_QWORD *)(v13 - 8);
  v224 = v13;
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_111();
  v222 = v18;
  v221 = OUTLINED_FUNCTION_190_2();
  v225 = *(_QWORD *)(v221 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v19, v20);
  OUTLINED_FUNCTION_140_8();
  v215 = sub_1C2CFBF70();
  v214 = *(_QWORD *)(v215 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v21, v22);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_111();
  v213 = OUTLINED_FUNCTION_151_4(v25);
  v212 = *(_QWORD *)(v213 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v26, v27);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v28, v29);
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_15_34(v30);
  v219 = sub_1C2CFC090();
  v217 = *(_QWORD *)(v219 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v31, v32);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v33, v34);
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_15_34(v35);
  v202 = sub_1C2CFC1A4();
  v36 = *(_QWORD *)(v202 - 8);
  MEMORY[0x1E0C80A78](v202, v37);
  OUTLINED_FUNCTION_79_5();
  OUTLINED_FUNCTION_15_34(v38);
  v39 = sub_1C2CFC174();
  v210 = *(_QWORD *)(v39 - 8);
  OUTLINED_FUNCTION_9_2();
  MEMORY[0x1E0C80A78](v40, v41);
  OUTLINED_FUNCTION_125_2();
  v44 = v42 - v43;
  v47 = MEMORY[0x1E0C80A78](v45, v46);
  v49 = (char *)&v190 - v48;
  MEMORY[0x1E0C80A78](v47, v50);
  OUTLINED_FUNCTION_111();
  v196 = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7CC8);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v52, v53);
  OUTLINED_FUNCTION_10();
  v56 = v55 - v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v57, v58);
  OUTLINED_FUNCTION_10();
  v61 = v60 - v59;
  OUTLINED_FUNCTION_196_2(v62, (uint64_t)v228);
  v63 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  v64 = type metadata accessor for AceOutput();
  v216 = v63;
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_storeEnumTagSinglePayload(v56, 1, 1, v64);
    v66 = &qword_1ED7A7CC8;
    v67 = v56;
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_68_22();
  sub_1C28C3750(v56 + *(int *)(v64 + 28), v61, &qword_1ED7A7A10);
  sub_1C28C9F68(v56, (uint64_t (*)(_QWORD))type metadata accessor for AceOutput);
  v65 = type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_35_18(v61, 1, v65);
  if (v175)
  {
    v66 = &qword_1ED7A7A10;
    v67 = v61;
LABEL_6:
    sub_1C28BB37C(v67, v66);
    goto LABEL_7;
  }
  v77 = *(_QWORD *)(v61 + 216);
  OUTLINED_FUNCTION_11_1();
  sub_1C28C9F68(v61, (uint64_t (*)(_QWORD))type metadata accessor for NLContextUpdate);
  if (!v77)
  {
LABEL_7:
    if (qword_1ED7AA040 == -1)
      goto LABEL_8;
    goto LABEL_122;
  }
  v78 = *(_QWORD *)(v77 + 16);
  if (!v78)
    goto LABEL_19;
  OUTLINED_FUNCTION_121_8();
  v80 = v77 + v79;
  v81 = v77;
  v83 = *(_QWORD *)(v82 + 72);
  v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
  v216 = v81;
  swift_bridgeObjectRetain();
  while (1)
  {
    v84(v44, v80, v39);
    if ((sub_1C2CFC138() & 1) != 0)
      break;
    OUTLINED_FUNCTION_14_5();
    v85(v44, v39);
    v80 += v83;
    if (!--v78)
    {
      OUTLINED_FUNCTION_34_1();
LABEL_19:
      if (qword_1ED7AA040 == -1)
      {
LABEL_20:
        v86 = OUTLINED_FUNCTION_118();
        OUTLINED_FUNCTION_250_0(v86, (uint64_t)qword_1ED7AA1B0);
        OUTLINED_FUNCTION_11_1();
        sub_1C2CFD86C();
        v87 = OUTLINED_FUNCTION_249();
        if (OUTLINED_FUNCTION_304(v87))
        {
          v88 = (uint8_t *)OUTLINED_FUNCTION_6_0();
          v228[0] = OUTLINED_FUNCTION_6_0();
          *(_DWORD *)v88 = 136315138;
          v89 = OUTLINED_FUNCTION_11_1();
          v90 = MEMORY[0x1C3BC8A74](v89, v39);
          v92 = v91;
          swift_bridgeObjectRelease();
          v226[0] = sub_1C28BB120(v90, v92, v228);
          OUTLINED_FUNCTION_161_3();
          OUTLINED_FUNCTION_29_2();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v36, (os_log_type_t)v2, "PromptForDisambiguationFlow no choice found in SDA: %s", v88);
          OUTLINED_FUNCTION_107_1();
          OUTLINED_FUNCTION_11_0();
        }
        OUTLINED_FUNCTION_29_2();

        goto LABEL_11;
      }
LABEL_127:
      swift_once();
      goto LABEL_20;
    }
  }
  v191 = v2;
  OUTLINED_FUNCTION_254();
  v93 = *(void (**)(char *, uint64_t, uint64_t))(v210 + 32);
  v93(v49, v44, v39);
  OUTLINED_FUNCTION_254();
  v93(v196, (uint64_t)v49, v39);
  v94 = v199;
  sub_1C2CFC120();
  v95 = sub_1C2CFBF88();
  OUTLINED_FUNCTION_48_2(v94, *(uint64_t (**)(uint64_t, _QWORD))(v36 + 8));
  v96 = *(_QWORD *)(v95 + 16);
  v97 = MEMORY[0x1E0DEE9D8];
  v199 = v39;
  v216 = v96;
  v192 = v95;
  if (!v96)
  {
    v101 = (uint64_t *)MEMORY[0x1E0DEE9D8];
    v102 = v220;
    goto LABEL_52;
  }
  OUTLINED_FUNCTION_121_8();
  v195 = v95 + v98;
  v194 = *(_QWORD *)(v99 + 72);
  v193 = *(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16);
  swift_bridgeObjectRetain();
  v100 = 0;
  v101 = (uint64_t *)v97;
  v102 = v220;
  v103 = v200;
  while (1)
  {
    v202 = v100;
    v193(v103, v195 + v194 * v100, v219);
    sub_1C2CFC054();
    v104 = v208;
    sub_1C2CFC0F0();
    v105 = OUTLINED_FUNCTION_181_3();
    OUTLINED_FUNCTION_48_2(v105, v106);
    v107 = sub_1C2CFBF64();
    OUTLINED_FUNCTION_48_2(v104, *(uint64_t (**)(uint64_t, _QWORD))(v214 + 8));
    v108 = *(_QWORD *)(v107 + 16);
    if (v108)
    {
      v198 = v101;
      v228[0] = v97;
      sub_1C28E990C();
      OUTLINED_FUNCTION_121_8();
      v197 = v107;
      v110 = v107 + v109;
      v112 = *(_QWORD *)(v111 + 72);
      v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 16);
      do
      {
        v114 = v221;
        v113(v0, v110, v221);
        v115 = v222;
        OUTLINED_FUNCTION_208_0();
        v116 = v115;
        v117 = sub_1C2CFD68C();
        v119 = v118;
        (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v115, v224);
        (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v0, v114);
        if ((OUTLINED_FUNCTION_135_9() & 1) == 0)
        {
          OUTLINED_FUNCTION_70_20();
          v116 = v228[0];
        }
        v120 = *(_QWORD *)(v116 + 16);
        if (v120 >= *(_QWORD *)(v116 + 24) >> 1)
        {
          OUTLINED_FUNCTION_113_10();
          v116 = v228[0];
        }
        *(_QWORD *)(v116 + 16) = v120 + 1;
        v121 = v116 + 16 * v120;
        *(_QWORD *)(v121 + 32) = v117;
        *(_QWORD *)(v121 + 40) = v119;
        v110 += v112;
        --v108;
      }
      while (v108);
      OUTLINED_FUNCTION_73_2();
      v102 = v220;
      v39 = v199;
      v103 = v200;
      v101 = v198;
    }
    else
    {
      OUTLINED_FUNCTION_70();
      v116 = v97;
    }
    (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v103, v219);
    v122 = *(_QWORD *)(v116 + 16);
    v36 = v101[2];
    v2 = v36 + v122;
    if (__OFADD__(v36, v122))
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      swift_once();
LABEL_8:
      v68 = OUTLINED_FUNCTION_118();
      v69 = OUTLINED_FUNCTION_250_0(v68, (uint64_t)qword_1ED7AA1B0);
      OUTLINED_FUNCTION_196_2(v69, (uint64_t)v228);
      sub_1C2CFD86C();
      v70 = OUTLINED_FUNCTION_249();
      if (OUTLINED_FUNCTION_304(v70))
      {
        v71 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        v227 = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v71 = 136315138;
        sub_1C28B9A48((uint64_t)v228, (uint64_t)v226);
        v72 = sub_1C2CFDDAC();
        v226[0] = sub_1C28BB120(v72, v73, &v227);
        OUTLINED_FUNCTION_161_3();
        OUTLINED_FUNCTION_34_1();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v228);
        OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v36, (os_log_type_t)v2, "PromptForDisambiguationFlow no nluSystemDialogActs found in: %s", v71);
        OUTLINED_FUNCTION_107_1();
        OUTLINED_FUNCTION_11_0();
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v228);
LABEL_11:
      OUTLINED_FUNCTION_77_22();
      v74 = 1;
      v75 = v209;
      goto LABEL_12;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v2 > (uint64_t)((unint64_t)v101[3] >> 1))
    {
      sub_1C28FD5D0();
      v101 = v123;
    }
    v36 = v202;
    if (!*(_QWORD *)(v116 + 16))
    {
      if (v122)
        goto LABEL_118;
      goto LABEL_49;
    }
    v124 = v101[2];
    if ((uint64_t)(((unint64_t)v101[3] >> 1) - v124) < v122)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    v125 = (unint64_t)&v101[2 * v124 + 4];
    if (v116 + 32 < v125 + 16 * v122 && v125 < v116 + 32 + 16 * v122)
      break;
    swift_arrayInitWithCopy();
    if (v122)
    {
      v127 = v101[2];
      v128 = __OFADD__(v127, v122);
      v129 = v127 + v122;
      if (v128)
        goto LABEL_125;
      v101[2] = v129;
    }
LABEL_49:
    v100 = v36 + 1;
    OUTLINED_FUNCTION_32_0();
    v97 = MEMORY[0x1E0DEE9D8];
    if (v100 == v216)
    {
      OUTLINED_FUNCTION_73_2();
LABEL_52:
      v130 = v101[2];
      v198 = v101;
      if (v130)
      {
        v131 = v101 + 5;
        v2 = MEMORY[0x1E0DEE9D8];
        do
        {
          v133 = *(v131 - 1);
          v132 = *v131;
          v134 = HIBYTE(*v131) & 0xF;
          if ((*v131 & 0x2000000000000000) == 0)
            v134 = v133 & 0xFFFFFFFFFFFFLL;
          if (v134)
          {
            OUTLINED_FUNCTION_19_0();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v228[0] = v2;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              OUTLINED_FUNCTION_70_20();
              v2 = v228[0];
            }
            v136 = *(_QWORD *)(v2 + 16);
            if (v136 >= *(_QWORD *)(v2 + 24) >> 1)
            {
              OUTLINED_FUNCTION_113_10();
              v2 = v228[0];
            }
            *(_QWORD *)(v2 + 16) = v136 + 1;
            v137 = v2 + 16 * v136;
            *(_QWORD *)(v137 + 32) = v133;
            *(_QWORD *)(v137 + 40) = v132;
            v102 = v220;
          }
          v131 += 2;
          --v130;
        }
        while (v130);
      }
      else
      {
        v2 = MEMORY[0x1E0DEE9D8];
      }
      OUTLINED_FUNCTION_73_2();
      v138 = MEMORY[0x1E0DEE9D8];
      v225 = v2;
      if (v216)
      {
        OUTLINED_FUNCTION_121_8();
        v140 = v192 + v139;
        v36 = *(_QWORD *)(v141 + 72);
        v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 16);
        swift_bridgeObjectRetain();
        v143 = MEMORY[0x1E0DEE9D8];
        LOBYTE(v2) = v205;
        do
        {
          v144 = v203;
          v145 = v219;
          v142(v203, v140, v219);
          v146 = v204;
          sub_1C2CFC054();
          sub_1C2CFC0F0();
          OUTLINED_FUNCTION_14_5();
          OUTLINED_FUNCTION_48_2(v146, v147);
          v148 = sub_1C2CFBF58();
          v149 = OUTLINED_FUNCTION_181_3();
          OUTLINED_FUNCTION_48_2(v149, v150);
          (*(void (**)(uint64_t, uint64_t))(v217 + 8))(v144, v145);
          v151 = *(_QWORD *)(v148 + 16);
          v152 = *(_QWORD *)(v143 + 16);
          if (__OFADD__(v152, v151))
            goto LABEL_120;
          if (!swift_isUniquelyReferenced_nonNull_native() || v152 + v151 > *(_QWORD *)(v143 + 24) >> 1)
          {
            sub_1C28FD370();
            v143 = v153;
          }
          if (*(_QWORD *)(v148 + 16))
          {
            v154 = *(_QWORD *)(v143 + 16);
            if ((*(_QWORD *)(v143 + 24) >> 1) - v154 < v151)
              goto LABEL_124;
            v155 = (*(unsigned __int8 *)(v220 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v220 + 80);
            v156 = *(_QWORD *)(v220 + 72);
            v157 = v143 + v155 + v156 * v154;
            if (v148 + v155 < v157 + v156 * v151 && v157 < v148 + v155 + v156 * v151)
              goto LABEL_128;
            swift_arrayInitWithCopy();
            if (v151)
            {
              v159 = *(_QWORD *)(v143 + 16);
              v128 = __OFADD__(v159, v151);
              v160 = v159 + v151;
              if (v128)
                goto LABEL_126;
              *(_QWORD *)(v143 + 16) = v160;
            }
          }
          else if (v151)
          {
            goto LABEL_121;
          }
          OUTLINED_FUNCTION_32_0();
          v140 += v36;
          --v216;
        }
        while (v216);
        v36 = v192;
        OUTLINED_FUNCTION_8();
        v102 = v220;
        LOBYTE(v2) = v225;
        v138 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v143 = MEMORY[0x1E0DEE9D8];
        v36 = v192;
      }
      OUTLINED_FUNCTION_8();
      v228[0] = v138;
      v222 = *(_QWORD *)(v143 + 16);
      if (v222)
      {
        for (i = 0; v222 != i; ++i)
        {
          if (i >= *(_QWORD *)(v143 + 16))
            goto LABEL_119;
          v162 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
          v163 = *(_QWORD *)(v102 + 72);
          v164 = v211;
          OUTLINED_FUNCTION_175_4(v211, v143 + v162 + v163 * i);
          v165 = sub_1C2CFC1D4();
          v167 = v166;
          swift_bridgeObjectRelease();
          if ((v167 & 0x2000000000000000) != 0)
            v36 = HIBYTE(v167) & 0xF;
          else
            v36 = v165 & 0xFFFFFFFFFFFFLL;
          v168 = v206;
          OUTLINED_FUNCTION_175_4(v206, v164);
          if (v36)
          {
            v169 = v168;
            sub_1C2CFC1E0();
            v170 = sub_1C2CFD68C();
            v172 = v171;
            v173 = OUTLINED_FUNCTION_181_3();
            v174(v173);
            v175 = v170 == 0x64695F6D657469 && v172 == 0xE700000000000000;
            if (v175)
            {
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_203_1(v169, *(uint64_t (**)(uint64_t, uint64_t))(v220 + 8));
              LOBYTE(v2) = v225;
LABEL_101:
              OUTLINED_FUNCTION_175_4(v201, v211);
              if ((OUTLINED_FUNCTION_135_9() & 1) == 0)
              {
                sub_1C28E97A0();
                v172 = v228[0];
              }
              v176 = *(_QWORD *)(v172 + 16);
              v36 = v176 + 1;
              if (v176 >= *(_QWORD *)(v172 + 24) >> 1)
              {
                sub_1C28E97A0();
                v172 = v228[0];
              }
              *(_QWORD *)(v172 + 16) = v36;
              OUTLINED_FUNCTION_175_4(v172 + v162 + v176 * v163, v201);
              v228[0] = v172;
              v102 = v220;
              goto LABEL_106;
            }
            v36 = sub_1C2CFE9DC();
            OUTLINED_FUNCTION_32_0();
            v102 = v220;
            v172 = *(_QWORD *)(v220 + 8);
            OUTLINED_FUNCTION_202_1(v169);
            LOBYTE(v2) = v225;
            if ((v36 & 1) != 0)
              goto LABEL_101;
          }
          else
          {
            OUTLINED_FUNCTION_202_1(v168);
            LOBYTE(v2) = v225;
          }
          OUTLINED_FUNCTION_202_1(v211);
LABEL_106:
          v39 = v199;
        }
      }
      OUTLINED_FUNCTION_53_1();
      v177 = v228[0];
      v178 = *(_QWORD *)(v228[0] + 16);
      if (v178)
      {
        v228[0] = MEMORY[0x1E0DEE9D8];
        sub_1C28E990C();
        v179 = *(unsigned __int8 *)(v102 + 80);
        v225 = v177;
        v180 = v177 + ((v179 + 32) & ~v179);
        v181 = *(_QWORD *)(v102 + 72);
        v182 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16);
        do
        {
          v183 = v207;
          v182(v207, v180, v218);
          v184 = sub_1C2CFC1D4();
          v186 = v185;
          OUTLINED_FUNCTION_33_2(v183, *(uint64_t (**)(uint64_t, uint64_t))(v102 + 8));
          if ((OUTLINED_FUNCTION_135_9() & 1) == 0)
          {
            OUTLINED_FUNCTION_70_20();
            v183 = v228[0];
          }
          v187 = *(_QWORD *)(v183 + 16);
          if (v187 >= *(_QWORD *)(v183 + 24) >> 1)
          {
            sub_1C28E990C();
            v183 = v228[0];
          }
          *(_QWORD *)(v183 + 16) = v187 + 1;
          v188 = v183 + 16 * v187;
          *(_QWORD *)(v188 + 32) = v184;
          *(_QWORD *)(v188 + 40) = v186;
          v180 += v181;
          --v178;
          v102 = v220;
        }
        while (v178);
        swift_release();
        v39 = v199;
      }
      else
      {
        OUTLINED_FUNCTION_147();
      }
      v75 = v209;
      OUTLINED_FUNCTION_198_0();
      sub_1C2CFCE34();
      __swift_destroy_boxed_opaque_existential_1(v191);
      OUTLINED_FUNCTION_14_5();
      v189((uint64_t)v196, v39);
      v74 = 0;
LABEL_12:
      v76 = sub_1C2CFCE40();
      __swift_storeEnumTagSinglePayload(v75, v74, 1, v76);
      OUTLINED_FUNCTION_1();
      return;
    }
  }
LABEL_128:
  sub_1C2CFE850();
  __break(1u);
}

uint64_t sub_1C2B4B520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B4B53C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_123_11();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  v2 = OUTLINED_FUNCTION_211_1(v1);
  return sub_1C2B4D3CC(v2, v3);
}

uint64_t sub_1C2B4B584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B4B5A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_123_11();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  v2 = OUTLINED_FUNCTION_211_1(v1);
  return sub_1C2B4D46C(v2, v3);
}

uint64_t sub_1C2B4B5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B4B600()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return sub_1C2B4D4D0(v2);
}

uint64_t sub_1C2B4B64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B4B668()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C2978DCC;
  return sub_1C2B4D528(v0[2], v0[4]);
}

void sub_1C2B4B6C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1, v1);
  (*(void (**)(char *))(v2 + 16))((char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1C2B4B758 + 4 * byte_1C2D15F3B[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C2B4B758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return 0x646574726174732ELL;
}

void PromptForDisambiguationFlowAsync.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 3));
  sub_1C28BB37C((uint64_t)(v0 + 8), &qword_1EF7880E0);
  v2 = swift_bridgeObjectRelease();
  v4 = OUTLINED_FUNCTION_168_5(v2, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v3);
  OUTLINED_FUNCTION_33_1(v4);
  OUTLINED_FUNCTION_18();
}

uint64_t PromptForDisambiguationFlowAsync.__deallocating_deinit()
{
  PromptForDisambiguationFlowAsync.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B4B9A8()
{
  char v0;

  PromptForDisambiguationFlowAsync.on(input:)();
  return v0 & 1;
}

void sub_1C2B4B9CC(uint64_t a1, uint64_t a2)
{
  PromptForDisambiguationFlowAsync.execute(completion:)(a1, a2);
}

uint64_t sub_1C2B4B9EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return PromptForDisambiguationFlowAsync.execute()(a1);
}

uint64_t sub_1C2B4BA40@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return PromptForDisambiguationFlowAsync.exitValue.getter(a1, a2);
}

void sub_1C2B4BA60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_25_48();
  v0[2] = sub_1C2B4BB04(v1, v2, v3, v4, v5);
  v0[3] = v6;
  v7 = OUTLINED_FUNCTION_16_49();
  v0[4] = sub_1C2B4BB7C(v7, v8, v9, v10, v11);
  v0[5] = v12;
  v13 = OUTLINED_FUNCTION_16_49();
  v0[6] = sub_1C2B4BBF4(v13, v14, v15, v16, v17);
  v0[7] = v18;
  v19 = OUTLINED_FUNCTION_16_49();
  v0[8] = sub_1C2B4BD68(v19, v20, v21, v22, v23);
  v0[9] = v24;
  v25 = OUTLINED_FUNCTION_16_49();
  v0[10] = sub_1C2B4BE94(v25, v26, v27, v28, v29);
  v0[11] = v30;
  v31 = OUTLINED_FUNCTION_16_49();
  v0[12] = sub_1C2B4BFC0(v31, v32, v33, v34, v35);
  v0[13] = v36;
  v37 = OUTLINED_FUNCTION_16_49();
  v0[14] = sub_1C2B4C0EC(v37, v38, v39, v40, v41);
  v0[15] = v42;
  v43 = OUTLINED_FUNCTION_16_49();
  v48 = sub_1C2B4C164(v43, v44, v45, v46, v47);
  v50 = v49;
  swift_unknownObjectRelease();
  v0[16] = v48;
  v0[17] = v50;
  OUTLINED_FUNCTION_8_0();
}

uint64_t (*sub_1C2B4BB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C2B56BCC;
}

uint64_t (*sub_1C2B4BB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C2B44084;
}

void *sub_1C2B4BBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF79A408;
}

uint64_t sub_1C2B4BC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = *(_BYTE *)(a3 + 24);
  v14 = *(_QWORD *)(a3 + 32);
  v15 = *(_BYTE *)(a3 + 40);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)a3;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a3 + 8);
  *(_BYTE *)(v8 + 40) = v13;
  *(_QWORD *)(v8 + 48) = v14;
  *(_BYTE *)(v8 + 56) = v15;
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 40) + *(_QWORD *)(a8 + 40));
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 64) = v16;
  *v16 = v8;
  v16[1] = sub_1C2B4BD2C;
  return v18(a1, a2, v8 + 16, a7, a8);
}

uint64_t sub_1C2B4BD2C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_11_61();
  if (!v0)
    return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void *sub_1C2B4BD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF79A3F8;
}

uint64_t sub_1C2B4BDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(_BYTE *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)a2;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(v7 + 40) = v11;
  *(_QWORD *)(v7 + 48) = v12;
  *(_BYTE *)(v7 + 56) = v13;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 48) + *(_QWORD *)(a7 + 48));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 64) = v14;
  *v14 = v7;
  v14[1] = sub_1C2B4BD2C;
  return v16(a1, v7 + 16, a6, a7);
}

void *sub_1C2B4BE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF79A3E8;
}

uint64_t sub_1C2B4BF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(_BYTE *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)a2;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(v7 + 40) = v11;
  *(_QWORD *)(v7 + 48) = v12;
  *(_BYTE *)(v7 + 56) = v13;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 56) + *(_QWORD *)(a7 + 56));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 64) = v14;
  *v14 = v7;
  v14[1] = sub_1C2B4BD2C;
  return v16(a1, v7 + 16, a6, a7);
}

void *sub_1C2B4BFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF79A3D8;
}

uint64_t sub_1C2B4C038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(_BYTE *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)a2;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(v7 + 40) = v11;
  *(_QWORD *)(v7 + 48) = v12;
  *(_BYTE *)(v7 + 56) = v13;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 64) + *(_QWORD *)(a7 + 64));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 64) = v14;
  *v14 = v7;
  v14[1] = sub_1C2B4BD2C;
  return v16(a1, v7 + 16, a6, a7);
}

void *sub_1C2B4C0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF79A3C8;
}

void *sub_1C2B4C164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EF79A3B8;
}

uint64_t sub_1C2B4C1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 80) + *(_QWORD *)(a7 + 80));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v12;
  *v12 = v7;
  v12[1] = sub_1C28BCB84;
  return v14(a1, a2, a6, a7);
}

void sub_1C2B4C268()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;

  OUTLINED_FUNCTION_25_48();
  v0[2] = sub_1C2B4C380(v1, v2, v3, v4, v5);
  v0[3] = v6;
  v7 = OUTLINED_FUNCTION_16_49();
  v0[4] = sub_1C2B4C3F8(v7, v8, v9, v10, v11);
  v0[5] = v12;
  v13 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v14 = OUTLINED_FUNCTION_54_32(v13);
  v0[6] = &unk_1EF79A358;
  v0[7] = v14;
  v15 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v16 = OUTLINED_FUNCTION_54_32(v15);
  v0[8] = &unk_1EF79A368;
  v0[9] = v16;
  v17 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v18 = OUTLINED_FUNCTION_54_32(v17);
  v0[10] = &unk_1EF79A378;
  v0[11] = v18;
  v19 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v20 = OUTLINED_FUNCTION_54_32(v19);
  v0[12] = &unk_1EF79A388;
  v0[13] = v20;
  v21 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v22 = OUTLINED_FUNCTION_54_32(v21);
  v0[14] = &unk_1EF79A398;
  v0[15] = v22;
  v23 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v24 = OUTLINED_FUNCTION_54_32(v23);
  v0[16] = &unk_1EF79A3A8;
  v0[17] = v24;
  swift_unknownObjectRetain_n();
  OUTLINED_FUNCTION_8_0();
}

uint64_t (*sub_1C2B4C380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C2B56BCC;
}

uint64_t (*sub_1C2B4C3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C2B44084;
}

uint64_t sub_1C2B4C470(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v9;

  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 112) = a8;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 72) = a2;
  *(_QWORD *)(v8 + 80) = a4;
  *(_QWORD *)(v8 + 64) = a1;
  v9 = a3[1];
  *(_OWORD *)(v8 + 16) = *a3;
  *(_OWORD *)(v8 + 32) = v9;
  *(_OWORD *)(v8 + 41) = *(_OWORD *)((char *)a3 + 25);
  return swift_task_switch();
}

uint64_t sub_1C2B4C4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v3;
  v8 = *(_OWORD *)(v0 + 96);
  v4 = *(int8x16_t *)(v0 + 72);
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v8;
  *(_QWORD *)(v3 + 40) = v1;
  *(int8x16_t *)(v3 + 48) = vextq_s8(v4, v4, 8uLL);
  *(_QWORD *)(v3 + 64) = v0 + 16;
  *(_QWORD *)(v0 + 128) = swift_task_alloc();
  type metadata accessor for DisambiguationResult(0, v8, v5, v6);
  OUTLINED_FUNCTION_189((uint64_t)sub_1C2B4C55C);
  OUTLINED_FUNCTION_7_75();
  return sub_1C2CFEA24();
}

uint64_t sub_1C2B4C55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v0 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1C2B4C5B4()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B4C5E0(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int128 v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  __int128 v15;
  _OWORD v16[2];

  v11 = a4[1];
  v15 = *a4;
  v16[0] = v11;
  *(_OWORD *)((char *)v16 + 9) = *(__int128 *)((char *)a4 + 25);
  v12 = sub_1C2B4C670(a1, a5, a6, a7, a8);
  (*(void (**)(uint64_t, __int128 *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(a8 + 40))(a3, &v15, v12, v13, a7, a8);
  return swift_release();
}

uint64_t (*sub_1C2B4C670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  uint64_t v18;

  type metadata accessor for DisambiguationResult(255, a3, a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v10 = sub_1C2CFE0DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v12);
  v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v18 - v13, a1, v10);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = a2;
  *((_QWORD *)v16 + 3) = a3;
  *((_QWORD *)v16 + 4) = a4;
  *((_QWORD *)v16 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v15], v14, v10);
  return sub_1C2B56B10;
}

uint64_t sub_1C2B4C784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  type metadata accessor for DisambiguationResult(255, a4, a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v5 = sub_1C2CFE0DC();
  return sub_1C293511C(a1, v5);
}

uint64_t sub_1C2B4C7EC(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)(v7 + 96) = a6;
  *(_QWORD *)(v7 + 104) = a7;
  *(_QWORD *)(v7 + 80) = a4;
  *(_QWORD *)(v7 + 88) = a5;
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = a3;
  v8 = a2[1];
  *(_OWORD *)(v7 + 16) = *a2;
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 41) = *(_OWORD *)((char *)a2 + 25);
  return swift_task_switch();
}

uint64_t sub_1C2B4C81C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_96_13();
  OUTLINED_FUNCTION_84_17(v1);
  *(_QWORD *)(v0 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_189((uint64_t)sub_1C2B4C884);
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_7_47();
}

uint64_t sub_1C2B4C884()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_42_29();
  if (v0)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    OUTLINED_FUNCTION_182_1();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2B4C8C8()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B4C8F4(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v19;
  _OWORD v20[2];

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14);
  v15 = a3[1];
  v19 = *a3;
  v20[0] = v15;
  *(_OWORD *)((char *)v20 + 9) = *(__int128 *)((char *)a3 + 25);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(__int128 *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 48))(&v19, sub_1C2B56A08, v17, a6, a7);
  return swift_release();
}

uint64_t sub_1C2B4CA08(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)(v7 + 96) = a6;
  *(_QWORD *)(v7 + 104) = a7;
  *(_QWORD *)(v7 + 80) = a4;
  *(_QWORD *)(v7 + 88) = a5;
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = a3;
  v8 = a2[1];
  *(_OWORD *)(v7 + 16) = *a2;
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 41) = *(_OWORD *)((char *)a2 + 25);
  return swift_task_switch();
}

uint64_t sub_1C2B4CA38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_96_13();
  OUTLINED_FUNCTION_84_17(v1);
  *(_QWORD *)(v0 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_189((uint64_t)sub_1C2B4CAA0);
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_7_47();
}

uint64_t sub_1C2B4CAA0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_42_29();
  if (v0)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    OUTLINED_FUNCTION_182_1();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2B4CAE4(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v19;
  _OWORD v20[2];

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14);
  v15 = a3[1];
  v19 = *a3;
  v20[0] = v15;
  *(_OWORD *)((char *)v20 + 9) = *(__int128 *)((char *)a3 + 25);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(__int128 *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 56))(&v19, sub_1C2B56A08, v17, a6, a7);
  return swift_release();
}

uint64_t sub_1C2B4CBF8(uint64_t a1)
{
  _QWORD v2[5];
  __int128 v3[2];
  char v4;

  sub_1C28C3750(a1, (uint64_t)v3, &qword_1ED7A61D0);
  if ((v4 & 1) != 0)
  {
    v2[0] = *(_QWORD *)&v3[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
    return sub_1C2CFE0C4();
  }
  else
  {
    sub_1C28B99EC(v3, (uint64_t)v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
    return sub_1C2CFE0D0();
  }
}

uint64_t sub_1C2B4CC7C(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)(v7 + 96) = a6;
  *(_QWORD *)(v7 + 104) = a7;
  *(_QWORD *)(v7 + 80) = a4;
  *(_QWORD *)(v7 + 88) = a5;
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = a3;
  v8 = a2[1];
  *(_OWORD *)(v7 + 16) = *a2;
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 41) = *(_OWORD *)((char *)a2 + 25);
  return swift_task_switch();
}

uint64_t sub_1C2B4CCAC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_96_13();
  OUTLINED_FUNCTION_84_17(v1);
  *(_QWORD *)(v0 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_189((uint64_t)sub_1C2B4CAA0);
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_7_47();
}

uint64_t sub_1C2B4CD14(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v19;
  _OWORD v20[2];

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14);
  v15 = a3[1];
  v19 = *a3;
  v20[0] = v15;
  *(_OWORD *)((char *)v20 + 9) = *(__int128 *)((char *)a3 + 25);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(__int128 *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 64))(&v19, sub_1C2B56A08, v17, a6, a7);
  return swift_release();
}

uint64_t sub_1C2B4CE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B4CE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 48) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  *v4 = v0;
  v4[1] = sub_1C2B4CEC8;
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B4CEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v0 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1C2B4CF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a6 + 72))(sub_1C2B56A08, v14, a5, a6);
  return swift_release();
}

uint64_t sub_1C2B4D018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B4D03C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int8x16_t v3;
  _QWORD *v4;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  v2 = *(_OWORD *)(v0 + 56);
  v3 = *(int8x16_t *)(v0 + 24);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 32) = v2;
  *(int8x16_t *)(v1 + 48) = vextq_s8(v3, v3, 8uLL);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  *v4 = v0;
  v4[1] = sub_1C2B4D0C4;
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1C2B4D0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_138(v3);
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_1C2B4D11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 80))(a3, sub_1C2B56A08, v16, a6, a7);
  return swift_release();
}

void sub_1C2B4D220()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 32))();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B4D23C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 72) = a2;
  v5 = *a3;
  *(_QWORD *)(v4 + 80) = v3;
  *(_QWORD *)(v4 + 88) = v5;
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a3 + 1);
  *(_BYTE *)(v4 + 57) = *((_BYTE *)a3 + 24);
  *(_QWORD *)(v4 + 112) = a3[4];
  *(_BYTE *)(v4 + 58) = *((_BYTE *)a3 + 40);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B4D274()
{
  __n128 *v0;
  char v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = v0[3].n128_i8[10];
  v0[1].n128_u64[0] = v0[5].n128_u64[1];
  v2 = (_QWORD *)OUTLINED_FUNCTION_21_56(v1, v0[6]);
  v0[7].n128_u64[1] = (unint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1C2B4D2E0;
  OUTLINED_FUNCTION_209_1();
  return v4();
}

uint64_t sub_1C2B4D2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v2 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B4D32C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_43_30(a1, a2);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B4D344()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_109_10();
  *(_QWORD *)(v0 + 16) = v1;
  v3 = (_QWORD *)OUTLINED_FUNCTION_21_56(v2, *(__n128 *)(v0 + 88));
  *(_QWORD *)(v0 + 112) = v3;
  v4 = OUTLINED_FUNCTION_81_15(v3);
  return OUTLINED_FUNCTION_54_1(v4, v5, v6);
}

uint64_t sub_1C2B4D390()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_142_1();
  if (!v0)
    return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B4D3CC(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_43_30(a1, a2);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B4D3E4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_109_10();
  *(_QWORD *)(v0 + 16) = v1;
  v3 = (_QWORD *)OUTLINED_FUNCTION_21_56(v2, *(__n128 *)(v0 + 88));
  *(_QWORD *)(v0 + 112) = v3;
  v4 = OUTLINED_FUNCTION_81_15(v3);
  return OUTLINED_FUNCTION_54_1(v4, v5, v6);
}

uint64_t sub_1C2B4D430()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_142_1();
  if (!v0)
    return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B4D46C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_43_30(a1, a2);
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B4D484()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_109_10();
  *(_QWORD *)(v0 + 16) = v1;
  v3 = (_QWORD *)OUTLINED_FUNCTION_21_56(v2, *(__n128 *)(v0 + 88));
  *(_QWORD *)(v0 + 112) = v3;
  v4 = OUTLINED_FUNCTION_81_15(v3);
  return OUTLINED_FUNCTION_54_1(v4, v5, v6);
}

uint64_t sub_1C2B4D4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B4D4E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)OUTLINED_FUNCTION_22_5();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return v4(v2);
}

uint64_t sub_1C2B4D528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B4D53C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD);

  v1 = (_QWORD *)OUTLINED_FUNCTION_22_5();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_1C297A218;
  return v3(v0[2], v0[3]);
}

uint64_t sub_1C2B4D58C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C2B4D5E0()
{
  sub_1C2B4D58C();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B4D604(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28BCB84;
  return sub_1C2B4D23C(a1, a2, a3);
}

uint64_t sub_1C2B4D66C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B4D32C(a1, a2);
}

uint64_t sub_1C2B4D6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B4D3CC(a1, a2);
}

uint64_t sub_1C2B4D72C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B4D46C(a1, a2);
}

uint64_t sub_1C2B4D78C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B4D4D0(a1);
}

uint64_t sub_1C2B4D7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B4D528(a1, a2);
}

uint64_t sub_1C2B4D840()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for PromptForDisambiguationFlowAsync.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptForDisambiguationFlowAsync.State);
}

uint64_t type metadata accessor for AnyPromptForDisambiguationFlowStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyPromptForDisambiguationFlowStrategy);
}

uint64_t sub_1C2B4D880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7880E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C2B4D8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2B4D8F0(a1, a2, a3, (uint64_t)&protocol conformance descriptor for PromptForDisambiguationFlow<A>, (uint64_t)&protocol conformance descriptor for PromptForDisambiguationFlow<A>);
}

void sub_1C2B4D8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2B4D8F0(a1, a2, a3, (uint64_t)&protocol conformance descriptor for PromptForDisambiguationFlowAsync<A, B>, (uint64_t)&protocol conformance descriptor for PromptForDisambiguationFlowAsync<A, B>);
}

void sub_1C2B4D8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_QWORD *)(a1 + 8) = MEMORY[0x1C3BC9CD4](a4);
  *(_QWORD *)(a1 + 16) = MEMORY[0x1C3BC9CD4](a5, a2);
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2B4D930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for DisambiguationResult.DisambiguationResultType(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 16), a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1C2B4D9A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 9uLL)
    v5 = 9;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    sub_1C2CFD350();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      *(_QWORD *)a1 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_BYTE *)(a1 + v5) = 1;
    }
    else
    {
      (*(void (**)(uint64_t))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1C2B4DABC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 9)
    v3 = 9;
  v4 = *(unsigned __int8 *)(result + v3);
  if (v4 < 2)
  {
    if (v4 != 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1C2B4DB04 + 4 * byte_1C2D15F48[v5]))();
  }
  return result;
}

uint64_t sub_1C2B4DB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 9uLL)
    v5 = 9;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(v4 + 16))(a1);
    v8 = 0;
  }
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1C2B4DC34(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if ((uint64_t *)a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 9uLL)
      v7 = 9;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 != 1)
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_QWORD *)a1 = v12;
      v13 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      v13 = 0;
    }
    *(_BYTE *)(a1 + v7) = v13;
  }
  return a1;
}

uint64_t sub_1C2B4DDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 9uLL)
    v5 = 9;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(v4 + 32))(a1);
    v8 = 0;
  }
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1C2B4DE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 9uLL)
      v7 = 9;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 != 1)
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *(unsigned __int8 *)(a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v12 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *(_BYTE *)(a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1C2B4E020(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 9;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 9uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B4E0E4 + 4 * byte_1C2D15F6B[(v4 - 1)]))();
}

void sub_1C2B4E130(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 9)
    v5 = 9;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for DisambiguationResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DisambiguationResult);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makePromptForDisambiguation(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makeRepromptOnEmptyParse(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makeRepromptOnLowConfidence(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makeFlowCancelledResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makeErrorResponse(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.paginationStyle()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.actionForInput(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.parseDisambiguationResponse(input:paginatedItems:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = OUTLINED_FUNCTION_12_0();
  v12 = (_QWORD *)OUTLINED_FUNCTION_86(v11);
  *v12 = v5;
  v12[1] = sub_1C28BCB84;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makePromptForDisambiguation(paginatedItems:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makeFlowCancelledResponse()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v7 = OUTLINED_FUNCTION_12_0();
  v8 = (_QWORD *)OUTLINED_FUNCTION_86(v7);
  *v8 = v3;
  v8[1] = sub_1C28E1BA0;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makeErrorResponse(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t type metadata accessor for PromptForDisambiguationFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptForDisambiguationFlow);
}

uint64_t method lookup function for PromptForDisambiguationFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1C2B4E518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for PromptForDisambiguationFlowAsync.State(319, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a4);
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PromptForDisambiguationFlowAsync(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptForDisambiguationFlowAsync);
}

uint64_t method lookup function for PromptForDisambiguationFlowAsync()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowAsync.__allocating_init<A>(items:strategy:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1C2B4E5D4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C2B4E624(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  const char *v9;
  const char *v10;
  char *v11;
  char *v12;
  const char *v13;
  uint64_t v14;
  void *v15;

  v9 = ")";
  v10 = ")";
  result = type metadata accessor for Input(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v11 = &v8;
    swift_getTupleTypeLayout2();
    v12 = &v7;
    v13 = ")";
    result = type metadata accessor for PromptResult(319, *(_QWORD *)(a1 + 24), v4, v5);
    if (v6 <= 0x3F)
    {
      v14 = *(_QWORD *)(result - 8) + 64;
      v15 = &unk_1C2D164C0;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

char *sub_1C2B4E6F0(char *a1, char **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  int v39;
  unsigned int v40;
  BOOL v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  void (*v67)(char *, char **, uint64_t);
  _QWORD *v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char **, uint64_t);
  _QWORD *v72;
  unint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  unsigned int v79;
  char v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unsigned int v89;
  uint64_t v90;
  size_t v91;
  void *v92;
  id v93;
  void *v94;
  const void *v95;
  void *v96;
  const void *v97;
  size_t v98;
  void *v99;
  id v100;
  void *v101;
  const void *v102;
  void *v103;
  const void *v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  unsigned int v110;
  char *v111;
  uint64_t v112;
  char v113;
  char *v114;
  unsigned int v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  unint64_t v119;
  unint64_t v120;
  int v121;
  _QWORD *v122;
  _QWORD *v123;
  unint64_t v124;
  unint64_t v125;
  int v126;
  _QWORD *v127;
  _QWORD *v128;
  _QWORD *v129;
  _QWORD *v130;
  _QWORD *v131;
  _QWORD *v132;
  _QWORD *v133;
  _QWORD *v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  __int128 v138;
  __int128 v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  __int128 v143;
  uint64_t v144;
  unsigned int v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  unint64_t v149;
  unint64_t v150;
  int v151;
  _QWORD *v152;
  _QWORD *v153;
  unint64_t v154;
  unint64_t v155;
  int v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  _QWORD *v160;
  _QWORD *v161;
  _QWORD *v162;
  _QWORD *v163;
  _QWORD *v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  __int128 v168;
  __int128 v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  __int128 v173;
  uint64_t v174;
  unsigned int v175;
  uint64_t v176;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  char v185;
  size_t __n;
  size_t __na;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  size_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;

  v4 = sub_1C2CFBCAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v200 = sub_1C2CFCD44();
  v7 = *(_QWORD *)(v200 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v196 = sub_1C2CFBD9C();
  v9 = *(_QWORD *)(v196 - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v199 = sub_1C2CFBFD0();
  v11 = *(_QWORD *)(v199 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = sub_1C2CFBF28();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v15;
  v17 = v10 | v12;
  v18 = v15 | (v10 | v12) & 0xF8;
  v19 = v18 | 7u;
  v20 = v6 + v19;
  v21 = (v6 + v19) & ~v19;
  v22 = *(_QWORD *)(v7 + 64);
  v23 = v22 + 7;
  if (((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v22)
    v22 = ((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v22 <= *(_QWORD *)(v9 + 64))
    v22 = *(_QWORD *)(v9 + 64);
  v198 = *(_QWORD *)(v11 + 64) + v15;
  if (*(_DWORD *)(v14 + 84))
    v24 = *(_QWORD *)(v14 + 64);
  else
    v24 = *(_QWORD *)(v14 + 64) + 1;
  v197 = v24;
  v25 = v24 + 7;
  v26 = (v24 + 7 + (v198 & ~(unint64_t)v15)) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v22 <= v27)
    v22 = (v26 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v28 = ((((((v26 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v22 > v28)
    v28 = v22;
  if (v28 <= 0x18)
    v29 = 24;
  else
    v29 = v28;
  v30 = (v29 + v21 + 8) & 0xFFFFFFFFFFFFFFF8;
  v31 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v32 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v32 + 64) <= 9uLL)
    v33 = 9;
  else
    v33 = *(_QWORD *)(v32 + 64);
  v34 = 8 * v33;
  if (v33 > 3)
    goto LABEL_22;
  v35 = ((1 << v34) + 1) >> v34;
  v36 = 2;
  if (v35 > 0xFFFD)
    v36 = 4;
  if (v35 <= 0xFD)
LABEL_22:
    v36 = 1;
  v37 = v36 + v33;
  if (v31 > v37)
    v37 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v37 <= 0x29)
    v37 = 41;
  v38 = *(_DWORD *)(v5 + 80);
  v39 = *(_DWORD *)(v32 + 80);
  v40 = (v39 | v38) & 0xF8 | v18;
  if (((v17 | v15 | v38 | v39) & 0x100000) != 0 || (v37 + 1 <= 0x18 ? (v41 = v40 > 7) : (v41 = 1), v41))
  {
    v50 = *a2;
    *(_QWORD *)a1 = *a2;
    v51 = &v50[((v40 | 7) + 16) & ~(unint64_t)(v40 | 7)];
    sub_1C2CFD350();
    return v51;
  }
  if (v33 > 3)
    goto LABEL_36;
  v42 = ((1 << v34) + 1) >> v34;
  v43 = 2;
  if (v42 > 0xFFFD)
    v43 = 4;
  if (v42 <= 0xFD)
LABEL_36:
    v43 = 1;
  v44 = v43 + v33;
  if (v31 > v44)
    v44 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v44 <= 0x29)
    v44 = 41;
  v45 = *((unsigned __int8 *)a2 + v44);
  if (v45 >= 7)
  {
    if (v33 > 3)
      goto LABEL_46;
    v46 = ((1 << v34) + 1) >> v34;
    v47 = 2;
    if (v46 > 0xFFFD)
      v47 = 4;
    if (v46 <= 0xFD)
LABEL_46:
      v47 = 1;
    v48 = v47 + v33;
    if (v31 > v48)
      v48 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    if (v48 <= 0x29)
      LODWORD(v48) = 41;
    if (v48 <= 3)
      v49 = v48;
    else
      v49 = 4;
    __asm { BR              X16 }
  }
  v52 = ~v19;
  switch(v45)
  {
    case 0u:
      v53 = 8 * v33;
      v51 = a1;
      *(_QWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      a1[24] = *((_BYTE *)a2 + 24);
      *((_QWORD *)a1 + 4) = a2[4];
      a1[40] = *((_BYTE *)a2 + 40);
      v54 = v33;
      swift_bridgeObjectRetain();
      if (v54 > 3)
        goto LABEL_61;
      v55 = ((1 << v53) + 1) >> v53;
      v56 = 2;
      if (v55 > 0xFFFD)
        v56 = 4;
      if (v55 <= 0xFD)
LABEL_61:
        v56 = 1;
      v57 = v56 + v54;
      if (v31 > v57)
        v57 = v31;
      if (v57 <= 0x29)
        v57 = 41;
      a1[v57] = 0;
      return v51;
    case 1u:
      v61 = 8 * v33;
      v51 = a1;
      *(_QWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      a1[24] = *((_BYTE *)a2 + 24);
      *((_QWORD *)a1 + 4) = a2[4];
      a1[40] = *((_BYTE *)a2 + 40);
      v62 = v33;
      swift_bridgeObjectRetain();
      if (v62 > 3)
        goto LABEL_81;
      v63 = ((1 << v61) + 1) >> v61;
      v64 = 2;
      if (v63 > 0xFFFD)
        v64 = 4;
      if (v63 <= 0xFD)
LABEL_81:
        v64 = 1;
      v65 = v64 + v62;
      if (v31 > v65)
        v65 = v31;
      if (v65 <= 0x29)
        v65 = 41;
      v66 = 1;
      goto LABEL_217;
    case 2u:
      v178 = ~v16;
      v180 = v13;
      v182 = v25;
      __n = v29 + 1;
      v188 = v30;
      v184 = 8 * v33;
      v190 = v33;
      v192 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v67 = *(void (**)(char *, char **, uint64_t))(v5 + 16);
      v51 = a1;
      v194 = v29;
      v67(a1, a2, v4);
      v68 = (_QWORD *)((unint64_t)&a1[v20] & v52);
      v69 = ((unint64_t)a2 + v20) & v52;
      if (*(unsigned __int8 *)(v69 + v194) >= 8u)
      {
        if (v194 <= 3)
          v70 = v194;
        else
          v70 = 4;
        __asm { BR              X12 }
      }
      v87 = (unint64_t)&a1[v20] & v52;
      switch(*(_BYTE *)(v69 + v194))
      {
        case 0:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v7 + 16))(v68, v69, v200);
          *(_BYTE *)(v87 + v194) = 0;
          goto LABEL_175;
        case 1:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v7 + 16))(v68, v69, v200);
          *(_QWORD *)((v23 + v87) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v23 + v69) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v87 + v194) = 1;
          sub_1C2CFD350();
          goto LABEL_175;
        case 2:
          *v68 = *(_QWORD *)v69;
          v68[1] = *(_QWORD *)(v69 + 8);
          v68[2] = *(_QWORD *)(v69 + 16);
          *((_BYTE *)v68 + v194) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_174;
        case 3:
          *v68 = *(_QWORD *)v69;
          *((_BYTE *)v68 + v194) = 3;
          swift_unknownObjectRetain();
          goto LABEL_175;
        case 4:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v9 + 16))(v68, v69, v196);
          *(_BYTE *)(v87 + v194) = 4;
          goto LABEL_175;
        case 5:
          v92 = *(void **)v69;
          *v68 = *(_QWORD *)v69;
          *((_BYTE *)v68 + v194) = 5;
          v93 = v92;
          goto LABEL_175;
        case 6:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v11 + 16))(v68, v69, v199);
          v94 = (void *)((v198 + v87) & v178);
          v95 = (const void *)((v198 + v69) & v178);
          if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v180))
          {
            memcpy(v94, v95, v197);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v94, v95, v180);
            __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v180);
          }
          v117 = (_QWORD *)(((unint64_t)v94 + v182) & 0xFFFFFFFFFFFFFFF8);
          v118 = (_QWORD *)(((unint64_t)v95 + v182) & 0xFFFFFFFFFFFFFFF8);
          *v117 = *v118;
          v117[1] = v118[1];
          v119 = ((unint64_t)v117 + 19) & 0xFFFFFFFFFFFFFFF8;
          v120 = ((unint64_t)v118 + 19) & 0xFFFFFFFFFFFFFFF8;
          v121 = *(_DWORD *)v120;
          *(_BYTE *)(v119 + 4) = *(_BYTE *)(v120 + 4);
          *(_DWORD *)v119 = v121;
          *(_BYTE *)(v87 + v194) = 6;
          goto LABEL_174;
        case 7:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v11 + 16))(v68, v69, v199);
          v96 = (void *)((v198 + v87) & v178);
          v97 = (const void *)((v198 + v69) & v178);
          if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v180))
          {
            memcpy(v96, v97, v197);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v96, v97, v180);
            __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v180);
          }
          v122 = (_QWORD *)(((unint64_t)v96 + v182) & 0xFFFFFFFFFFFFFFF8);
          v123 = (_QWORD *)(((unint64_t)v97 + v182) & 0xFFFFFFFFFFFFFFF8);
          *v122 = *v123;
          v122[1] = v123[1];
          v124 = ((unint64_t)v122 + 19) & 0xFFFFFFFFFFFFFFF8;
          v125 = ((unint64_t)v123 + 19) & 0xFFFFFFFFFFFFFFF8;
          v126 = *(_DWORD *)v125;
          *(_BYTE *)(v124 + 4) = *(_BYTE *)(v125 + 4);
          *(_DWORD *)v124 = v126;
          v127 = (_QWORD *)(((v87 | 7) + v27) & 0xFFFFFFFFFFFFFFF8);
          v128 = (_QWORD *)(((v69 | 7) + v27) & 0xFFFFFFFFFFFFFFF8);
          *v127 = *v128;
          v127[1] = v128[1];
          v129 = (_QWORD *)(((unint64_t)v127 + 23) & 0xFFFFFFFFFFFFFFF8);
          v130 = (_QWORD *)(((unint64_t)v128 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v129 = *v130;
          v129[1] = v130[1];
          v131 = (_QWORD *)(((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8);
          v132 = (_QWORD *)(((unint64_t)v130 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v131 = *v132;
          v131[1] = v132[1];
          *(_BYTE *)(v87 + v194) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_174:
          swift_bridgeObjectRetain();
LABEL_175:
          v91 = __n;
          break;
        default:
          v91 = __n;
          memcpy(v68, (const void *)v69, __n);
          break;
      }
      v133 = (_QWORD *)(((v69 | 7) + v91) & 0xFFFFFFFFFFFFFFF8);
      v134 = (_QWORD *)(((v87 | 7) + v91) & 0xFFFFFFFFFFFFF8);
      *v134 = *v133;
      v135 = ((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8;
      v136 = ((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFFFF8;
      v137 = *(_QWORD *)(v136 + 24);
      swift_bridgeObjectRetain();
      if (v137 < 0xFFFFFFFF)
      {
        v138 = *(_OWORD *)v136;
        v139 = *(_OWORD *)(v136 + 16);
        *(_QWORD *)(v135 + 32) = *(_QWORD *)(v136 + 32);
        *(_OWORD *)v135 = v138;
        *(_OWORD *)(v135 + 16) = v139;
      }
      else
      {
        *(_QWORD *)(v135 + 24) = v137;
        *(_QWORD *)(v135 + 32) = *(_QWORD *)(v136 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v137 - 8))(v135, v136, v137);
      }
      *(_BYTE *)(v135 + 40) = *(_BYTE *)(v136 + 40);
      v140 = ((v188 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v141 = (unint64_t)&a1[v140 + 7] & 0xFFFFFFFFFFFFFFF8;
      v142 = ((unint64_t)a2 + v140 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v141 = *(_QWORD *)v142;
      v143 = *(_OWORD *)(v142 + 8);
      *(_BYTE *)(v141 + 24) = *(_BYTE *)(v142 + 24);
      *(_OWORD *)(v141 + 8) = v143;
      v144 = *(_QWORD *)(v142 + 32);
      *(_BYTE *)(v141 + 40) = *(_BYTE *)(v142 + 40);
      *(_QWORD *)(v141 + 32) = v144;
      swift_bridgeObjectRetain();
      if (v190 > 3)
        goto LABEL_183;
      v145 = ((1 << v184) + 1) >> v184;
      v146 = 2;
      if (v145 > 0xFFFD)
        v146 = 4;
      if (v145 <= 0xFD)
LABEL_183:
        v146 = 1;
      v65 = v146 + v190;
      if (v192 > v65)
        v65 = v192;
      if (v65 <= 0x29)
        v65 = 41;
      v66 = 2;
      goto LABEL_217;
    case 3u:
      v179 = ~v16;
      v181 = v13;
      v183 = v25;
      __na = v29 + 1;
      v189 = v30;
      v185 = 8 * v33;
      v191 = v33;
      v193 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v71 = *(void (**)(char *, char **, uint64_t))(v5 + 16);
      v51 = a1;
      v195 = v29;
      v71(a1, a2, v4);
      v72 = (_QWORD *)((unint64_t)&a1[v20] & v52);
      v73 = ((unint64_t)a2 + v20) & v52;
      if (*(unsigned __int8 *)(v73 + v195) >= 8u)
      {
        if (v195 <= 3)
          v74 = v195;
        else
          v74 = 4;
        __asm { BR              X12 }
      }
      v88 = (unint64_t)&a1[v20] & v52;
      switch(*(_BYTE *)(v73 + v195))
      {
        case 0:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v7 + 16))(v72, v73, v200);
          *(_BYTE *)(v88 + v195) = 0;
          goto LABEL_194;
        case 1:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v7 + 16))(v72, v73, v200);
          *(_QWORD *)((v23 + v88) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v23 + v73) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v88 + v195) = 1;
          sub_1C2CFD350();
          goto LABEL_194;
        case 2:
          *v72 = *(_QWORD *)v73;
          v72[1] = *(_QWORD *)(v73 + 8);
          v72[2] = *(_QWORD *)(v73 + 16);
          *((_BYTE *)v72 + v195) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_193;
        case 3:
          *v72 = *(_QWORD *)v73;
          *((_BYTE *)v72 + v195) = 3;
          swift_unknownObjectRetain();
          goto LABEL_194;
        case 4:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v9 + 16))(v72, v73, v196);
          *(_BYTE *)(v88 + v195) = 4;
          goto LABEL_194;
        case 5:
          v99 = *(void **)v73;
          *v72 = *(_QWORD *)v73;
          *((_BYTE *)v72 + v195) = 5;
          v100 = v99;
          goto LABEL_194;
        case 6:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v11 + 16))(v72, v73, v199);
          v101 = (void *)((v198 + v88) & v179);
          v102 = (const void *)((v198 + v73) & v179);
          if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v181))
          {
            memcpy(v101, v102, v197);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v101, v102, v181);
            __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v181);
          }
          v147 = (_QWORD *)(((unint64_t)v101 + v183) & 0xFFFFFFFFFFFFFFF8);
          v148 = (_QWORD *)(((unint64_t)v102 + v183) & 0xFFFFFFFFFFFFFFF8);
          *v147 = *v148;
          v147[1] = v148[1];
          v149 = ((unint64_t)v147 + 19) & 0xFFFFFFFFFFFFFFF8;
          v150 = ((unint64_t)v148 + 19) & 0xFFFFFFFFFFFFFFF8;
          v151 = *(_DWORD *)v150;
          *(_BYTE *)(v149 + 4) = *(_BYTE *)(v150 + 4);
          *(_DWORD *)v149 = v151;
          *(_BYTE *)(v88 + v195) = 6;
          goto LABEL_193;
        case 7:
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v11 + 16))(v72, v73, v199);
          v103 = (void *)((v198 + v88) & v179);
          v104 = (const void *)((v198 + v73) & v179);
          if (__swift_getEnumTagSinglePayload((uint64_t)v104, 1, v181))
          {
            memcpy(v103, v104, v197);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v103, v104, v181);
            __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v181);
          }
          v152 = (_QWORD *)(((unint64_t)v103 + v183) & 0xFFFFFFFFFFFFFFF8);
          v153 = (_QWORD *)(((unint64_t)v104 + v183) & 0xFFFFFFFFFFFFFFF8);
          *v152 = *v153;
          v152[1] = v153[1];
          v154 = ((unint64_t)v152 + 19) & 0xFFFFFFFFFFFFFFF8;
          v155 = ((unint64_t)v153 + 19) & 0xFFFFFFFFFFFFFFF8;
          v156 = *(_DWORD *)v155;
          *(_BYTE *)(v154 + 4) = *(_BYTE *)(v155 + 4);
          *(_DWORD *)v154 = v156;
          v157 = (_QWORD *)(((v88 | 7) + v27) & 0xFFFFFFFFFFFFFFF8);
          v158 = (_QWORD *)(((v73 | 7) + v27) & 0xFFFFFFFFFFFFFFF8);
          *v157 = *v158;
          v157[1] = v158[1];
          v159 = (_QWORD *)(((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8);
          v160 = (_QWORD *)(((unint64_t)v158 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v159 = *v160;
          v159[1] = v160[1];
          v161 = (_QWORD *)(((unint64_t)v159 + 23) & 0xFFFFFFFFFFFFFFF8);
          v162 = (_QWORD *)(((unint64_t)v160 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v161 = *v162;
          v161[1] = v162[1];
          *(_BYTE *)(v88 + v195) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_193:
          swift_bridgeObjectRetain();
LABEL_194:
          v98 = __na;
          break;
        default:
          v98 = __na;
          memcpy(v72, (const void *)v73, __na);
          break;
      }
      v163 = (_QWORD *)(((v73 | 7) + v98) & 0xFFFFFFFFFFFFFFF8);
      v164 = (_QWORD *)(((v88 | 7) + v98) & 0xFFFFFFFFFFFFF8);
      *v164 = *v163;
      v165 = ((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8;
      v166 = ((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8;
      v167 = *(_QWORD *)(v166 + 24);
      swift_bridgeObjectRetain();
      if (v167 < 0xFFFFFFFF)
      {
        v168 = *(_OWORD *)v166;
        v169 = *(_OWORD *)(v166 + 16);
        *(_QWORD *)(v165 + 32) = *(_QWORD *)(v166 + 32);
        *(_OWORD *)v165 = v168;
        *(_OWORD *)(v165 + 16) = v169;
      }
      else
      {
        *(_QWORD *)(v165 + 24) = v167;
        *(_QWORD *)(v165 + 32) = *(_QWORD *)(v166 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v167 - 8))(v165, v166, v167);
      }
      *(_BYTE *)(v165 + 40) = *(_BYTE *)(v166 + 40);
      v170 = ((v189 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v171 = (unint64_t)&a1[v170 + 7] & 0xFFFFFFFFFFFFFFF8;
      v172 = ((unint64_t)a2 + v170 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v171 = *(_QWORD *)v172;
      v173 = *(_OWORD *)(v172 + 8);
      *(_BYTE *)(v171 + 24) = *(_BYTE *)(v172 + 24);
      *(_OWORD *)(v171 + 8) = v173;
      v174 = *(_QWORD *)(v172 + 32);
      *(_BYTE *)(v171 + 40) = *(_BYTE *)(v172 + 40);
      *(_QWORD *)(v171 + 32) = v174;
      swift_bridgeObjectRetain();
      if (v191 > 3)
        goto LABEL_202;
      v175 = ((1 << v185) + 1) >> v185;
      v176 = 2;
      if (v175 > 0xFFFD)
        v176 = 4;
      if (v175 <= 0xFD)
LABEL_202:
        v176 = 1;
      v65 = v176 + v191;
      if (v193 > v65)
        v65 = v193;
      if (v65 <= 0x29)
        v65 = 41;
      v66 = 3;
      goto LABEL_217;
    case 4u:
      v75 = 8 * v33;
      v51 = a1;
      *(_QWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      a1[24] = *((_BYTE *)a2 + 24);
      *((_QWORD *)a1 + 4) = a2[4];
      a1[40] = *((_BYTE *)a2 + 40);
      v76 = v33;
      swift_bridgeObjectRetain();
      if (v76 > 3)
        goto LABEL_101;
      v77 = ((1 << v75) + 1) >> v75;
      v78 = 2;
      if (v77 > 0xFFFD)
        v78 = 4;
      if (v77 <= 0xFD)
LABEL_101:
        v78 = 1;
      v65 = v78 + v76;
      if (v31 > v65)
        v65 = v31;
      if (v65 <= 0x29)
        v65 = 41;
      v66 = 4;
      goto LABEL_217;
    case 5u:
      v51 = a1;
      if (v33 > 3)
        goto LABEL_108;
      v89 = ((1 << v34) + 1) >> v34;
      if (v89 > 0xFFFD)
      {
        v79 = *(_DWORD *)((char *)a2 + v33);
      }
      else if (v89 <= 0xFD)
      {
LABEL_108:
        v79 = *((unsigned __int8 *)a2 + v33);
      }
      else
      {
        v79 = *(unsigned __int16 *)((char *)a2 + v33);
      }
      if (v79 >= 2)
      {
        if (v33 <= 3)
          v90 = v33;
        else
          v90 = 4;
        __asm { BR              X13 }
      }
      if (v79 != 1)
      {
        v105 = 8 * v33;
        v106 = v33;
        (*(void (**)(char *, char **))(v32 + 16))(a1, a2);
        v107 = v106;
        v108 = v31;
        v109 = v105;
        if (v106 > 3)
        {
LABEL_158:
          a1[v106] = 0;
LABEL_163:
          if (v107 > 3)
            goto LABEL_167;
          v115 = ((1 << v109) + 1) >> v109;
          v116 = 2;
          if (v115 > 0xFFFD)
            v116 = 4;
          if (v115 <= 0xFD)
LABEL_167:
            v116 = 1;
          goto LABEL_212;
        }
        v110 = ((1 << v105) + 1) >> v105;
        if (v110 > 0xFFFD)
        {
          *(_DWORD *)&a1[v106] = 0;
        }
        else
        {
          if (v110 <= 0xFD)
            goto LABEL_158;
          *(_WORD *)&a1[v106] = 0;
        }
        goto LABEL_210;
      }
      v111 = *a2;
      v112 = v33;
      v113 = 8 * v33;
      v114 = *a2;
      v109 = v113;
      v107 = v112;
      v108 = v31;
      *(_QWORD *)a1 = v111;
      a1[8] = *((_BYTE *)a2 + 8);
      if (v112 > 3)
        goto LABEL_162;
      v110 = ((1 << v113) + 1) >> v113;
      if (v110 > 0xFFFD)
      {
        *(_DWORD *)&a1[v112] = 1;
      }
      else
      {
        if (v110 <= 0xFD)
        {
LABEL_162:
          a1[v112] = 1;
          goto LABEL_163;
        }
        *(_WORD *)&a1[v112] = 1;
      }
LABEL_210:
      v41 = v110 > 0xFFFD;
      v116 = 2;
      if (v41)
        v116 = 4;
LABEL_212:
      v65 = v116 + v107;
      if (v108 > v65)
        v65 = v108;
      if (v65 <= 0x29)
        v65 = 41;
      v66 = 5;
LABEL_217:
      v51[v65] = v66;
      return v51;
    case 6u:
      v80 = 8 * v33;
      v81 = *a2;
      v82 = v33;
      v83 = *a2;
      v84 = v82;
      v51 = a1;
      *(_QWORD *)a1 = v81;
      a1[8] = *((_BYTE *)a2 + 8);
      if (v84 > 3)
        goto LABEL_113;
      v85 = ((1 << v80) + 1) >> v80;
      v86 = 2;
      if (v85 > 0xFFFD)
        v86 = 4;
      if (v85 <= 0xFD)
LABEL_113:
        v86 = 1;
      v65 = v86 + v84;
      if (v31 > v65)
        v65 = v31;
      if (v65 <= 0x29)
        v65 = 41;
      v66 = 6;
      goto LABEL_217;
    default:
      if (v33 > 3)
        goto LABEL_71;
      v58 = ((1 << v34) + 1) >> v34;
      v59 = 2;
      if (v58 > 0xFFFD)
        v59 = 4;
      if (v58 <= 0xFD)
LABEL_71:
        v59 = 1;
      v51 = a1;
      v60 = v59 + v33;
      if (v31 > v60)
        v60 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v60 <= 0x29)
        v60 = 41;
      memcpy(a1, a2, v60 + 1);
      return v51;
  }
}

void sub_1C2B4FA00(id *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = *(_QWORD *)(sub_1C2CFBCAC() - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v53 = sub_1C2CFCD44();
  v5 = *(_QWORD *)(v53 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v51 = sub_1C2CFBD9C();
  v7 = *(_QWORD *)(v51 - 8);
  v8 = *(_DWORD *)(v7 + 80) | v6;
  v52 = sub_1C2CFBFD0();
  v9 = *(_QWORD *)(v52 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = sub_1C2CFBF28();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v8 | v10) & 0xF8 | v13 | 7;
  v15 = v4 + v14;
  v16 = (v4 + v14) & ~v14;
  v17 = *(_QWORD *)(v5 + 64);
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17)
    v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v17 <= *(_QWORD *)(v7 + 64))
    v17 = *(_QWORD *)(v7 + 64);
  v18 = *(_QWORD *)(v9 + 64) + v13;
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  v20 = ((v18 & ~v13) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8;
  if (v17 <= (v21 | 5))
    v17 = v21 | 5;
  v22 = ((((((v20 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v17 <= v22)
    v17 = v22;
  if (v17 <= 0x18)
    v23 = 24;
  else
    v23 = v17;
  v24 = (v23 + v16 + 8) & 0xFFFFFFFFFFFFFFF8;
  v25 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v26 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v27 = 9;
  if (*(_QWORD *)(v26 + 64) > 9uLL)
    v27 = *(_QWORD *)(v26 + 64);
  v28 = 8 * v27;
  if (v27 > 3)
    goto LABEL_21;
  v29 = ((1 << v28) + 1) >> v28;
  v30 = 2;
  if (v29 > 0xFFFD)
    v30 = 4;
  if (v29 <= 0xFD)
LABEL_21:
    v30 = 1;
  v31 = v30 + v27;
  if (v25 > v31)
    v31 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v31 <= 0x29)
    v31 = 41;
  v32 = *((unsigned __int8 *)a1 + v31);
  if (v32 >= 7)
  {
    if (v27 > 3)
      goto LABEL_31;
    v33 = ((1 << v28) + 1) >> v28;
    v34 = 2;
    if (v33 > 0xFFFD)
      v34 = 4;
    if (v33 <= 0xFD)
LABEL_31:
      v34 = 1;
    v35 = v34 + v27;
    if (v25 <= v35)
      v25 = v35;
    if (v25 <= 0x29)
      LODWORD(v25) = 41;
    if (v25 <= 3)
      v36 = v25;
    else
      v36 = 4;
    __asm { BR              X3 }
  }
  v37 = ~v14;
  switch(v32)
  {
    case 0u:
    case 1u:
    case 4u:
      goto LABEL_82;
    case 2u:
      v48 = ~v13;
      v49 = v11;
      v50 = v23 + 1;
      (*(void (**)(void))(v3 + 8))();
      v38 = (id *)(((unint64_t)a1 + v15) & v37);
      if (*((unsigned __int8 *)v38 + v23) >= 8u)
      {
        if (v23 <= 3)
          v39 = v23;
        else
          v39 = 4;
        __asm { BR              X12 }
      }
      v42 = v23 + 1;
      switch(*((_BYTE *)v38 + v23))
      {
        case 0:
          goto LABEL_66;
        case 1:
          goto LABEL_67;
        case 2:
          goto LABEL_68;
        case 3:
          goto LABEL_69;
        case 4:
          goto LABEL_70;
        case 5:
          goto LABEL_71;
        case 6:
          goto LABEL_72;
        case 7:
          goto LABEL_75;
        default:
          goto LABEL_80;
      }
      goto LABEL_80;
    case 3u:
      v48 = ~v13;
      v49 = v11;
      v50 = v23 + 1;
      (*(void (**)(void))(v3 + 8))();
      v38 = (id *)(((unint64_t)a1 + v15) & v37);
      if (*((unsigned __int8 *)v38 + v23) >= 8u)
      {
        if (v23 <= 3)
          v40 = v23;
        else
          v40 = 4;
        __asm { BR              X12 }
      }
      v42 = v23 + 1;
      switch(*((_BYTE *)v38 + v23))
      {
        case 0:
LABEL_66:
          (*(void (**)(id *, uint64_t))(v5 + 8))(v38, v53);
          goto LABEL_79;
        case 1:
LABEL_67:
          (*(void (**)(id *, uint64_t))(v5 + 8))(v38, v53);
          swift_release();
          goto LABEL_79;
        case 2:
LABEL_68:
          swift_bridgeObjectRelease();
          goto LABEL_78;
        case 3:
LABEL_69:
          swift_unknownObjectRelease();
          goto LABEL_79;
        case 4:
LABEL_70:
          (*(void (**)(id *, uint64_t))(v7 + 8))(v38, v51);
          goto LABEL_79;
        case 5:
LABEL_71:

          goto LABEL_79;
        case 6:
LABEL_72:
          (*(void (**)(id *, uint64_t))(v9 + 8))(v38, v52);
          v45 = ((unint64_t)v38 + v18) & v48;
          if (!__swift_getEnumTagSinglePayload(v45, 1, v49))
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v45, v49);
          goto LABEL_78;
        case 7:
LABEL_75:
          (*(void (**)(id *, uint64_t))(v9 + 8))(v38, v52);
          v46 = ((unint64_t)v38 + v18) & v48;
          if (!__swift_getEnumTagSinglePayload(v46, 1, v49))
            (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v46, v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_78:
          swift_bridgeObjectRelease();
LABEL_79:
          v42 = v50;
          break;
        default:
          break;
      }
LABEL_80:
      v47 = ((((unint64_t)v38 | 7) + v42) & 0xFFFFFFFFFFFFFFF8) + 15;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v47 & 0xFFFFFFFFFFFFFFF8);
LABEL_82:
      swift_bridgeObjectRelease();
      return;
    case 5u:
      if (v27 > 3)
        goto LABEL_52;
      v43 = ((1 << v28) + 1) >> v28;
      if (v43 > 0xFFFD)
      {
        v41 = *(_DWORD *)((char *)a1 + v27);
      }
      else if (v43 <= 0xFD)
      {
LABEL_52:
        v41 = *((unsigned __int8 *)a1 + v27);
      }
      else
      {
        v41 = *(unsigned __int16 *)((char *)a1 + v27);
      }
      if (v41 >= 2)
      {
        if (v27 <= 3)
          v44 = v27;
        else
          v44 = 4;
        __asm { BR              X15 }
      }
      if (v41 == 1)
LABEL_85:

      else
        (*(void (**)(void))(v26 + 8))();
      return;
    case 6u:
      goto LABEL_85;
    default:
      return;
  }
}

char *sub_1C2B5015C(char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  size_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void (*v50)(char *);
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *);
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int v61;
  unint64_t v62;
  id v63;
  id v64;
  unsigned int v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  size_t v70;
  void *v71;
  id v72;
  void *v73;
  const void *v74;
  void *v75;
  const void *v76;
  unint64_t v77;
  size_t v78;
  void *v79;
  id v80;
  void *v81;
  const void *v82;
  void *v83;
  const void *v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  unsigned int v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  unint64_t v96;
  unint64_t v97;
  int v98;
  _QWORD *v99;
  _QWORD *v100;
  unint64_t v101;
  unint64_t v102;
  int v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  __int128 v115;
  __int128 v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  __int128 v120;
  uint64_t v121;
  unsigned int v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  unint64_t v126;
  unint64_t v127;
  int v128;
  _QWORD *v129;
  _QWORD *v130;
  unint64_t v131;
  unint64_t v132;
  int v133;
  _QWORD *v134;
  _QWORD *v135;
  _QWORD *v136;
  _QWORD *v137;
  _QWORD *v138;
  _QWORD *v139;
  _QWORD *v140;
  _QWORD *v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  __int128 v145;
  __int128 v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  __int128 v150;
  uint64_t v151;
  unsigned int v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  size_t v160;
  size_t v161;
  size_t __n;
  size_t __na;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;

  v4 = *(_QWORD *)(sub_1C2CFBCAC() - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v174 = sub_1C2CFCD44();
  v6 = *(_QWORD *)(v174 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v171 = sub_1C2CFBD9C();
  v8 = *(_QWORD *)(v171 - 8);
  v9 = *(_DWORD *)(v8 + 80) | v7;
  v173 = sub_1C2CFBFD0();
  v10 = *(_QWORD *)(v173 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = sub_1C2CFBF28();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v9 | v11) & 0xF8 | v14 | 7;
  v16 = v5 + v15;
  v17 = *(_QWORD *)(v6 + 64);
  v170 = v17 + 7;
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17)
    v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v17 <= *(_QWORD *)(v8 + 64))
    v17 = *(_QWORD *)(v8 + 64);
  v172 = *(_QWORD *)(v10 + 64) + v14;
  if (*(_DWORD *)(v13 + 84))
    v18 = *(_QWORD *)(v13 + 64);
  else
    v18 = *(_QWORD *)(v13 + 64) + 1;
  v19 = (v18 + 7 + (v172 & ~v14)) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v17 <= v20)
    v17 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v21 = ((((((v19 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v17 <= v21)
    v17 = v21;
  if (v17 <= 0x18)
    v22 = 24;
  else
    v22 = v17;
  v23 = (v22 + ((v5 + v15) & ~v15) + 8) & 0xFFFFFFFFFFFFFFF8;
  v24 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v25 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v25 + 64) <= 9uLL)
    v26 = 9;
  else
    v26 = *(_QWORD *)(v25 + 64);
  v27 = 8 * v26;
  if (v26 > 3)
    goto LABEL_22;
  v28 = ((1 << v27) + 1) >> v27;
  v29 = 2;
  if (v28 > 0xFFFD)
    v29 = 4;
  if (v28 <= 0xFD)
LABEL_22:
    v29 = 1;
  v30 = v29 + v26;
  if (v24 > v30)
    v30 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v30 <= 0x29)
    v30 = 41;
  v31 = *((unsigned __int8 *)a2 + v30);
  if (v31 >= 7)
  {
    if (v26 > 3)
      goto LABEL_32;
    v32 = ((1 << v27) + 1) >> v27;
    v33 = 2;
    if (v32 > 0xFFFD)
      v33 = 4;
    if (v32 <= 0xFD)
LABEL_32:
      v33 = 1;
    v34 = v33 + v26;
    if (v24 > v34)
      v34 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    if (v34 <= 0x29)
      LODWORD(v34) = 41;
    if (v34 <= 3)
      v35 = v34;
    else
      v35 = 4;
    __asm { BR              X16 }
  }
  v36 = ~v15;
  switch(v31)
  {
    case 0u:
      v37 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v38 = a1;
      *(_QWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      a1[24] = *((_BYTE *)a2 + 24);
      *((_QWORD *)a1 + 4) = a2[4];
      a1[40] = *((_BYTE *)a2 + 40);
      swift_bridgeObjectRetain();
      if (v26 > 3)
        goto LABEL_46;
      v39 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      v40 = 2;
      if (v39 > 0xFFFD)
        v40 = 4;
      if (v39 <= 0xFD)
LABEL_46:
        v40 = 1;
      v41 = v40 + v26;
      if (v37 > v41)
        v41 = v37;
      if (v41 <= 0x29)
        v41 = 41;
      a1[v41] = 0;
      return v38;
    case 1u:
      v45 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v38 = a1;
      *(_QWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      a1[24] = *((_BYTE *)a2 + 24);
      *((_QWORD *)a1 + 4) = a2[4];
      a1[40] = *((_BYTE *)a2 + 40);
      swift_bridgeObjectRetain();
      if (v26 > 3)
        goto LABEL_66;
      v46 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      v47 = 2;
      if (v46 > 0xFFFD)
        v47 = 4;
      if (v46 <= 0xFD)
LABEL_66:
        v47 = 1;
      v48 = v47 + v26;
      if (v45 > v48)
        v48 = v45;
      if (v48 <= 0x29)
        v48 = 41;
      v49 = 1;
      goto LABEL_200;
    case 2u:
      v156 = ~v14;
      v158 = v12;
      v160 = v18 + 7;
      __n = v22 + 1;
      v164 = v23;
      v166 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v50 = *(void (**)(char *))(v4 + 16);
      v38 = a1;
      v168 = v22;
      v50(a1);
      v51 = (_QWORD *)((unint64_t)&a1[v16] & v36);
      v52 = ((unint64_t)a2 + v16) & v36;
      if (*(unsigned __int8 *)(v52 + v168) >= 8u)
      {
        if (v168 <= 3)
          v53 = v168;
        else
          v53 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v52 + v168))
      {
        case 0:
          v69 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v6 + 16))(v51, v52, v174);
          *(_BYTE *)(v69 + v168) = 0;
          goto LABEL_158;
        case 1:
          v69 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v6 + 16))(v51, v52, v174);
          *(_QWORD *)((v170 + v69) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v170 + v52) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v69 + v168) = 1;
          sub_1C2CFD350();
          goto LABEL_158;
        case 2:
          v69 = (unint64_t)&a1[v16] & v36;
          *v51 = *(_QWORD *)v52;
          v51[1] = *(_QWORD *)(v52 + 8);
          v51[2] = *(_QWORD *)(v52 + 16);
          *((_BYTE *)v51 + v168) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_155;
        case 3:
          v69 = (unint64_t)&a1[v16] & v36;
          *v51 = *(_QWORD *)v52;
          *((_BYTE *)v51 + v168) = 3;
          swift_unknownObjectRetain();
          goto LABEL_158;
        case 4:
          v69 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v8 + 16))(v51, v52, v171);
          *(_BYTE *)(v69 + v168) = 4;
          goto LABEL_158;
        case 5:
          v71 = *(void **)v52;
          v69 = (unint64_t)&a1[v16] & v36;
          *v51 = *(_QWORD *)v52;
          *((_BYTE *)v51 + v168) = 5;
          v72 = v71;
          goto LABEL_158;
        case 6:
          v69 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v10 + 16))(v51, v52, v173);
          v73 = (void *)((v172 + v69) & v156);
          v74 = (const void *)((v172 + v52) & v156);
          if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v158))
          {
            memcpy(v73, v74, v18);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v73, v74, v158);
            __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v158);
          }
          v94 = (_QWORD *)(((unint64_t)v73 + v160) & 0xFFFFFFFFFFFFFFF8);
          v95 = (_QWORD *)(((unint64_t)v74 + v160) & 0xFFFFFFFFFFFFFFF8);
          *v94 = *v95;
          v94[1] = v95[1];
          v96 = ((unint64_t)v94 + 19) & 0xFFFFFFFFFFFFFFF8;
          v97 = ((unint64_t)v95 + 19) & 0xFFFFFFFFFFFFFFF8;
          v98 = *(_DWORD *)v97;
          *(_BYTE *)(v96 + 4) = *(_BYTE *)(v97 + 4);
          *(_DWORD *)v96 = v98;
          *(_BYTE *)(v69 + v168) = 6;
LABEL_155:
          swift_bridgeObjectRetain();
          goto LABEL_158;
        case 7:
          v69 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v10 + 16))(v51, v52, v173);
          v75 = (void *)((v172 + v69) & v156);
          v76 = (const void *)((v172 + v52) & v156);
          if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v158))
          {
            memcpy(v75, v76, v18);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v75, v76, v158);
            __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v158);
          }
          v99 = (_QWORD *)(((unint64_t)v75 + v160) & 0xFFFFFFFFFFFFFFF8);
          v100 = (_QWORD *)(((unint64_t)v76 + v160) & 0xFFFFFFFFFFFFFFF8);
          *v99 = *v100;
          v99[1] = v100[1];
          v101 = ((unint64_t)v99 + 19) & 0xFFFFFFFFFFFFFFF8;
          v102 = ((unint64_t)v100 + 19) & 0xFFFFFFFFFFFFFFF8;
          v103 = *(_DWORD *)v102;
          *(_BYTE *)(v101 + 4) = *(_BYTE *)(v102 + 4);
          *(_DWORD *)v101 = v103;
          v104 = (_QWORD *)(((v69 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          v105 = (_QWORD *)(((v52 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *v104 = *v105;
          v104[1] = v105[1];
          v106 = (_QWORD *)(((unint64_t)v104 + 23) & 0xFFFFFFFFFFFFFFF8);
          v107 = (_QWORD *)(((unint64_t)v105 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v106 = *v107;
          v106[1] = v107[1];
          v108 = (_QWORD *)(((unint64_t)v106 + 23) & 0xFFFFFFFFFFFFFFF8);
          v109 = (_QWORD *)(((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v108 = *v109;
          v108[1] = v109[1];
          *(_BYTE *)(v69 + v168) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v38 = a1;
LABEL_158:
          v70 = __n;
          break;
        default:
          v69 = (unint64_t)&a1[v16] & v36;
          v70 = __n;
          memcpy(v51, (const void *)v52, __n);
          break;
      }
      v110 = (_QWORD *)(((v52 | 7) + v70) & 0xFFFFFFFFFFFFFFF8);
      v111 = (_QWORD *)(((v69 | 7) + v70) & 0xFFFFFFFFFFFFF8);
      *v111 = *v110;
      v112 = ((unint64_t)v111 + 15) & 0xFFFFFFFFFFFFFFF8;
      v113 = ((unint64_t)v110 + 15) & 0xFFFFFFFFFFFFFFF8;
      v114 = *(_QWORD *)(v113 + 24);
      swift_bridgeObjectRetain();
      if (v114 < 0xFFFFFFFF)
      {
        v115 = *(_OWORD *)v113;
        v116 = *(_OWORD *)(v113 + 16);
        *(_QWORD *)(v112 + 32) = *(_QWORD *)(v113 + 32);
        *(_OWORD *)v112 = v115;
        *(_OWORD *)(v112 + 16) = v116;
      }
      else
      {
        *(_QWORD *)(v112 + 24) = v114;
        *(_QWORD *)(v112 + 32) = *(_QWORD *)(v113 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v114 - 8))(v112, v113, v114);
      }
      *(_BYTE *)(v112 + 40) = *(_BYTE *)(v113 + 40);
      v117 = ((v164 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v118 = (unint64_t)&v38[v117 + 7] & 0xFFFFFFFFFFFFFFF8;
      v119 = ((unint64_t)a2 + v117 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v118 = *(_QWORD *)v119;
      v120 = *(_OWORD *)(v119 + 8);
      *(_BYTE *)(v118 + 24) = *(_BYTE *)(v119 + 24);
      *(_OWORD *)(v118 + 8) = v120;
      v121 = *(_QWORD *)(v119 + 32);
      *(_BYTE *)(v118 + 40) = *(_BYTE *)(v119 + 40);
      *(_QWORD *)(v118 + 32) = v121;
      swift_bridgeObjectRetain();
      if (v26 > 3)
        goto LABEL_166;
      v122 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      v123 = 2;
      if (v122 > 0xFFFD)
        v123 = 4;
      if (v122 <= 0xFD)
LABEL_166:
        v123 = 1;
      v48 = v123 + v26;
      if (v166 > v48)
        v48 = v166;
      if (v48 <= 0x29)
        v48 = 41;
      v49 = 2;
      goto LABEL_200;
    case 3u:
      v157 = ~v14;
      v159 = v12;
      v161 = v18 + 7;
      __na = v22 + 1;
      v165 = v23;
      v167 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v54 = *(void (**)(char *))(v4 + 16);
      v38 = a1;
      v169 = v22;
      v54(a1);
      v55 = (_QWORD *)((unint64_t)&a1[v16] & v36);
      v56 = ((unint64_t)a2 + v16) & v36;
      if (*(unsigned __int8 *)(v56 + v169) >= 8u)
      {
        if (v169 <= 3)
          v57 = v169;
        else
          v57 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v56 + v169))
      {
        case 0:
          v77 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v6 + 16))(v55, v56, v174);
          *(_BYTE *)(v77 + v169) = 0;
          goto LABEL_177;
        case 1:
          v77 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v6 + 16))(v55, v56, v174);
          *(_QWORD *)((v170 + v77) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v170 + v56) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v77 + v169) = 1;
          sub_1C2CFD350();
          goto LABEL_177;
        case 2:
          v77 = (unint64_t)&a1[v16] & v36;
          *v55 = *(_QWORD *)v56;
          v55[1] = *(_QWORD *)(v56 + 8);
          v55[2] = *(_QWORD *)(v56 + 16);
          *((_BYTE *)v55 + v169) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_174;
        case 3:
          v77 = (unint64_t)&a1[v16] & v36;
          *v55 = *(_QWORD *)v56;
          *((_BYTE *)v55 + v169) = 3;
          swift_unknownObjectRetain();
          goto LABEL_177;
        case 4:
          v77 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v8 + 16))(v55, v56, v171);
          *(_BYTE *)(v77 + v169) = 4;
          goto LABEL_177;
        case 5:
          v79 = *(void **)v56;
          v77 = (unint64_t)&a1[v16] & v36;
          *v55 = *(_QWORD *)v56;
          *((_BYTE *)v55 + v169) = 5;
          v80 = v79;
          goto LABEL_177;
        case 6:
          v77 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v10 + 16))(v55, v56, v173);
          v81 = (void *)((v172 + v77) & v157);
          v82 = (const void *)((v172 + v56) & v157);
          if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v159))
          {
            memcpy(v81, v82, v18);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v81, v82, v159);
            __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v159);
          }
          v124 = (_QWORD *)(((unint64_t)v81 + v161) & 0xFFFFFFFFFFFFFFF8);
          v125 = (_QWORD *)(((unint64_t)v82 + v161) & 0xFFFFFFFFFFFFFFF8);
          *v124 = *v125;
          v124[1] = v125[1];
          v126 = ((unint64_t)v124 + 19) & 0xFFFFFFFFFFFFFFF8;
          v127 = ((unint64_t)v125 + 19) & 0xFFFFFFFFFFFFFFF8;
          v128 = *(_DWORD *)v127;
          *(_BYTE *)(v126 + 4) = *(_BYTE *)(v127 + 4);
          *(_DWORD *)v126 = v128;
          *(_BYTE *)(v77 + v169) = 6;
LABEL_174:
          swift_bridgeObjectRetain();
          goto LABEL_177;
        case 7:
          v77 = (unint64_t)&a1[v16] & v36;
          (*(void (**)(_QWORD *, unint64_t, uint64_t))(v10 + 16))(v55, v56, v173);
          v83 = (void *)((v172 + v77) & v157);
          v84 = (const void *)((v172 + v56) & v157);
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v159))
          {
            memcpy(v83, v84, v18);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v83, v84, v159);
            __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v159);
          }
          v129 = (_QWORD *)(((unint64_t)v83 + v161) & 0xFFFFFFFFFFFFFFF8);
          v130 = (_QWORD *)(((unint64_t)v84 + v161) & 0xFFFFFFFFFFFFFFF8);
          *v129 = *v130;
          v129[1] = v130[1];
          v131 = ((unint64_t)v129 + 19) & 0xFFFFFFFFFFFFFFF8;
          v132 = ((unint64_t)v130 + 19) & 0xFFFFFFFFFFFFFFF8;
          v133 = *(_DWORD *)v132;
          *(_BYTE *)(v131 + 4) = *(_BYTE *)(v132 + 4);
          *(_DWORD *)v131 = v133;
          v134 = (_QWORD *)(((v77 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          v135 = (_QWORD *)(((v56 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *v134 = *v135;
          v134[1] = v135[1];
          v136 = (_QWORD *)(((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8);
          v137 = (_QWORD *)(((unint64_t)v135 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v136 = *v137;
          v136[1] = v137[1];
          v138 = (_QWORD *)(((unint64_t)v136 + 23) & 0xFFFFFFFFFFFFFFF8);
          v139 = (_QWORD *)(((unint64_t)v137 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v138 = *v139;
          v138[1] = v139[1];
          *(_BYTE *)(v77 + v169) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v38 = a1;
LABEL_177:
          v78 = __na;
          break;
        default:
          v77 = (unint64_t)&a1[v16] & v36;
          v78 = __na;
          memcpy(v55, (const void *)v56, __na);
          break;
      }
      v140 = (_QWORD *)(((v56 | 7) + v78) & 0xFFFFFFFFFFFFFFF8);
      v141 = (_QWORD *)(((v77 | 7) + v78) & 0xFFFFFFFFFFFFF8);
      *v141 = *v140;
      v142 = ((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8;
      v143 = ((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8;
      v144 = *(_QWORD *)(v143 + 24);
      swift_bridgeObjectRetain();
      if (v144 < 0xFFFFFFFF)
      {
        v145 = *(_OWORD *)v143;
        v146 = *(_OWORD *)(v143 + 16);
        *(_QWORD *)(v142 + 32) = *(_QWORD *)(v143 + 32);
        *(_OWORD *)v142 = v145;
        *(_OWORD *)(v142 + 16) = v146;
      }
      else
      {
        *(_QWORD *)(v142 + 24) = v144;
        *(_QWORD *)(v142 + 32) = *(_QWORD *)(v143 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v144 - 8))(v142, v143, v144);
      }
      *(_BYTE *)(v142 + 40) = *(_BYTE *)(v143 + 40);
      v147 = ((v165 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v148 = (unint64_t)&v38[v147 + 7] & 0xFFFFFFFFFFFFFFF8;
      v149 = ((unint64_t)a2 + v147 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v148 = *(_QWORD *)v149;
      v150 = *(_OWORD *)(v149 + 8);
      *(_BYTE *)(v148 + 24) = *(_BYTE *)(v149 + 24);
      *(_OWORD *)(v148 + 8) = v150;
      v151 = *(_QWORD *)(v149 + 32);
      *(_BYTE *)(v148 + 40) = *(_BYTE *)(v149 + 40);
      *(_QWORD *)(v148 + 32) = v151;
      swift_bridgeObjectRetain();
      if (v26 > 3)
        goto LABEL_185;
      v152 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      v153 = 2;
      if (v152 > 0xFFFD)
        v153 = 4;
      if (v152 <= 0xFD)
LABEL_185:
        v153 = 1;
      v48 = v153 + v26;
      if (v167 > v48)
        v48 = v167;
      if (v48 <= 0x29)
        v48 = 41;
      v49 = 3;
      goto LABEL_200;
    case 4u:
      v58 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v38 = a1;
      *(_QWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
      a1[24] = *((_BYTE *)a2 + 24);
      *((_QWORD *)a1 + 4) = a2[4];
      a1[40] = *((_BYTE *)a2 + 40);
      swift_bridgeObjectRetain();
      if (v26 > 3)
        goto LABEL_86;
      v59 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      v60 = 2;
      if (v59 > 0xFFFD)
        v60 = 4;
      if (v59 <= 0xFD)
LABEL_86:
        v60 = 1;
      v48 = v60 + v26;
      if (v58 > v48)
        v48 = v58;
      if (v48 <= 0x29)
        v48 = 41;
      v49 = 4;
      goto LABEL_200;
    case 5u:
      v38 = a1;
      if (v26 > 3)
        goto LABEL_93;
      v67 = ((1 << v27) + 1) >> v27;
      if (v67 > 0xFFFD)
      {
        v61 = *(_DWORD *)((char *)a2 + v26);
      }
      else if (v67 <= 0xFD)
      {
LABEL_93:
        v61 = *((unsigned __int8 *)a2 + v26);
      }
      else
      {
        v61 = *(unsigned __int16 *)((char *)a2 + v26);
      }
      if (v61 >= 2)
      {
        if (v26 <= 3)
          v68 = v26;
        else
          v68 = 4;
        __asm { BR              X13 }
      }
      if (v61 == 1)
      {
        v89 = *a2;
        v90 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
        v91 = (id)*a2;
        v87 = 8 * v26;
        v86 = v90;
        *(_QWORD *)a1 = v89;
        a1[8] = *((_BYTE *)a2 + 8);
        if (v26 > 3)
          goto LABEL_145;
        v88 = ((1 << (8 * v26)) + 1) >> (8 * v26);
        if (v88 > 0xFFFD)
        {
          *(_DWORD *)&a1[v26] = 1;
          goto LABEL_193;
        }
        if (v88 <= 0xFD)
        {
LABEL_145:
          a1[v26] = 1;
          goto LABEL_146;
        }
        *(_WORD *)&a1[v26] = 1;
      }
      else
      {
        v85 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
        (*(void (**)(char *))(v25 + 16))(a1);
        v86 = v85;
        v87 = 8 * v26;
        if (v26 > 3)
        {
LABEL_141:
          a1[v26] = 0;
LABEL_146:
          if (v26 > 3)
            goto LABEL_150;
          v92 = ((1 << v87) + 1) >> v87;
          v93 = 2;
          if (v92 > 0xFFFD)
            v93 = 4;
          if (v92 <= 0xFD)
LABEL_150:
            v93 = 1;
          goto LABEL_195;
        }
        v88 = ((1 << (8 * v26)) + 1) >> (8 * v26);
        if (v88 > 0xFFFD)
        {
          *(_DWORD *)&a1[v26] = 0;
        }
        else
        {
          if (v88 <= 0xFD)
            goto LABEL_141;
          *(_WORD *)&a1[v26] = 0;
        }
      }
LABEL_193:
      v154 = v88 > 0xFFFD;
      v93 = 2;
      if (v154)
        v93 = 4;
LABEL_195:
      v48 = v93 + v26;
      if (v86 > v48)
        v48 = v86;
      if (v48 <= 0x29)
        v48 = 41;
      v49 = 5;
LABEL_200:
      v38[v48] = v49;
      return v38;
    case 6u:
      v62 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v63 = (id)*a2;
      v64 = (id)*a2;
      v38 = a1;
      *(_QWORD *)a1 = v63;
      a1[8] = *((_BYTE *)a2 + 8);
      if (v26 > 3)
        goto LABEL_98;
      v65 = ((1 << (8 * v26)) + 1) >> (8 * v26);
      v66 = 2;
      if (v65 > 0xFFFD)
        v66 = 4;
      if (v65 <= 0xFD)
LABEL_98:
        v66 = 1;
      v48 = v66 + v26;
      if (v62 > v48)
        v48 = v62;
      if (v48 <= 0x29)
        v48 = 41;
      v49 = 6;
      goto LABEL_200;
    default:
      if (v26 > 3)
        goto LABEL_56;
      v42 = ((1 << v27) + 1) >> v27;
      v43 = 2;
      if (v42 > 0xFFFD)
        v43 = 4;
      if (v42 <= 0xFD)
LABEL_56:
        v43 = 1;
      v38 = a1;
      v44 = v43 + v26;
      if (v24 > v44)
        v44 = ((v23 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v44 <= 0x29)
        v44 = 41;
      memcpy(a1, a2, v44 + 1);
      return v38;
  }
}

uint64_t sub_1C2B513CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  __int128 v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int v72;
  char v73;
  uint64_t v74;
  id v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  void *v80;
  id v81;
  void *v82;
  const void *v83;
  void *v84;
  unint64_t v85;
  void *v86;
  id v87;
  void *v88;
  const void *v89;
  void *v90;
  unint64_t v91;
  unsigned int v92;
  char v93;
  uint64_t v94;
  id v95;
  unsigned int v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  unint64_t v100;
  unint64_t v101;
  int v102;
  void (*v103)(void *, const void *, uint64_t);
  _QWORD *v104;
  _QWORD *v105;
  unint64_t v106;
  unint64_t v107;
  int v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  __int128 v120;
  __int128 v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  __int128 v125;
  uint64_t v126;
  unsigned int v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  unint64_t v131;
  unint64_t v132;
  int v133;
  void (*v134)(void *, const void *, uint64_t);
  _QWORD *v135;
  _QWORD *v136;
  unint64_t v137;
  unint64_t v138;
  int v139;
  _QWORD *v140;
  _QWORD *v141;
  _QWORD *v142;
  _QWORD *v143;
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  __int128 v151;
  __int128 v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  __int128 v156;
  uint64_t v157;
  unsigned int v158;
  uint64_t v159;
  BOOL v160;
  uint64_t result;
  char v162;
  char v163;
  char v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  size_t __n;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  const void *v182;
  const void *v183;
  unint64_t v184;
  size_t v185;
  uint64_t v186;

  if ((uint64_t *)a1 == a2)
    return a1;
  v6 = sub_1C2CFBCAC();
  v180 = *(_QWORD *)(v6 - 8);
  v181 = v6;
  v7 = *(_QWORD *)(v180 + 64);
  v176 = sub_1C2CFCD44();
  v8 = *(_QWORD *)(v176 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v167 = sub_1C2CFBD9C();
  v10 = *(_QWORD *)(v167 - 8);
  v11 = *(_DWORD *)(v10 + 80) | v9;
  v175 = sub_1C2CFBFD0();
  v12 = *(_QWORD *)(v175 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v177 = sub_1C2CFBF28();
  v14 = *(_QWORD *)(v177 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v11 | v13) & 0xF8 | v15 | 7;
  v179 = v7 + v16;
  v17 = *(_QWORD *)(v8 + 64);
  v165 = v17 + 7;
  v166 = v10;
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17)
    v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v17 <= *(_QWORD *)(v10 + 64))
    v17 = *(_QWORD *)(v10 + 64);
  v173 = v12;
  v174 = *(_QWORD *)(v12 + 64) + v15;
  if (*(_DWORD *)(v14 + 84))
    v18 = *(_QWORD *)(v14 + 64);
  else
    v18 = *(_QWORD *)(v14 + 64) + 1;
  __n = v18;
  v169 = v18 + 7;
  v19 = (v18 + 7 + (v174 & ~v15)) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v17 <= v20)
    v17 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v21 = ((((((v19 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v17 <= v21)
    v17 = v21;
  if (v17 <= 0x18)
    v22 = 24;
  else
    v22 = v17;
  v184 = (v22 + ((v7 + v16) & ~v16) + 8) & 0xFFFFFFFFFFFFFFF8;
  v23 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v171 = *(_QWORD *)(a3 + 24);
  v170 = *(_QWORD *)(v171 - 8);
  if (*(_QWORD *)(v170 + 64) <= 9uLL)
    v24 = 9;
  else
    v24 = *(_QWORD *)(v170 + 64);
  v25 = 8 * v24;
  if (v24 > 3)
    goto LABEL_23;
  v26 = ((1 << v25) + 1) >> v25;
  v27 = 2;
  if (v26 > 0xFFFD)
    v27 = 4;
  if (v26 <= 0xFD)
LABEL_23:
    v27 = 1;
  v28 = v27 + v24;
  if (v23 > v28)
    v28 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v28 <= 0x29)
    v28 = 41;
  v29 = *(unsigned __int8 *)(a1 + v28);
  if (v29 >= 7)
  {
    if (v24 > 3)
      goto LABEL_33;
    v30 = ((1 << v25) + 1) >> v25;
    v31 = 2;
    if (v30 > 0xFFFD)
      v31 = 4;
    if (v30 <= 0xFD)
LABEL_33:
      v31 = 1;
    v32 = v31 + v24;
    if (v23 > v32)
      v32 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    if (v32 <= 0x29)
      LODWORD(v32) = 41;
    if (v32 <= 3)
      v33 = v32;
    else
      v33 = 4;
    __asm { BR              X15 }
  }
  v185 = v22 + 1;
  v178 = ~v16;
  v172 = ~v15;
  v186 = v22;
  switch(v29)
  {
    case 0u:
    case 1u:
    case 4u:
      swift_bridgeObjectRelease();
      goto LABEL_86;
    case 2u:
      v162 = 8 * v24;
      (*(void (**)(uint64_t, uint64_t))(v180 + 8))(a1, v181);
      v34 = (id *)((v179 + a1) & v178);
      if (*((unsigned __int8 *)v34 + v186) >= 8u)
      {
        if (v186 <= 3)
          v35 = v186;
        else
          v35 = 4;
        __asm { BR              X12 }
      }
      switch(*((_BYTE *)v34 + v186))
      {
        case 0:
          goto LABEL_67;
        case 1:
          goto LABEL_68;
        case 2:
          goto LABEL_69;
        case 3:
          goto LABEL_70;
        case 4:
          goto LABEL_71;
        case 5:
          goto LABEL_72;
        case 6:
          goto LABEL_73;
        case 7:
          goto LABEL_76;
        default:
          goto LABEL_80;
      }
      goto LABEL_80;
    case 3u:
      v162 = 8 * v24;
      (*(void (**)(uint64_t, uint64_t))(v180 + 8))(a1, v181);
      v34 = (id *)((v179 + a1) & v178);
      if (*((unsigned __int8 *)v34 + v186) >= 8u)
      {
        if (v186 <= 3)
          v36 = v186;
        else
          v36 = 4;
        __asm { BR              X12 }
      }
      switch(*((_BYTE *)v34 + v186))
      {
        case 0:
LABEL_67:
          (*(void (**)(id *, uint64_t))(v8 + 8))(v34, v176);
          break;
        case 1:
LABEL_68:
          (*(void (**)(id *, uint64_t))(v8 + 8))(v34, v176);
          swift_release();
          break;
        case 2:
LABEL_69:
          swift_bridgeObjectRelease();
          goto LABEL_79;
        case 3:
LABEL_70:
          swift_unknownObjectRelease();
          break;
        case 4:
LABEL_71:
          (*(void (**)(id *, uint64_t))(v166 + 8))(v34, v167);
          break;
        case 5:
LABEL_72:

          break;
        case 6:
LABEL_73:
          (*(void (**)(id *, uint64_t))(v12 + 8))(v34, v175);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v34 + v174) & v172, 1, v177))
            (*(void (**)(unint64_t, uint64_t))(v14 + 8))(((unint64_t)v34 + v174) & v172, v177);
          goto LABEL_79;
        case 7:
LABEL_76:
          (*(void (**)(id *, uint64_t))(v12 + 8))(v34, v175);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v34 + v174) & v172, 1, v177))
            (*(void (**)(unint64_t, uint64_t))(v14 + 8))(((unint64_t)v34 + v174) & v172, v177);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_79:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
LABEL_80:
      swift_bridgeObjectRelease();
      v40 = (((((unint64_t)v34 | 7) + v185) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(_QWORD *)(v40 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v40);
      swift_bridgeObjectRelease();
      v25 = v162;
      goto LABEL_86;
    case 5u:
      if (v24 > 3)
        goto LABEL_55;
      v38 = ((1 << v25) + 1) >> v25;
      if (v38 > 0xFFFD)
      {
        v37 = *(_DWORD *)(a1 + v24);
      }
      else if (v38 <= 0xFD)
      {
LABEL_55:
        v37 = *(unsigned __int8 *)(a1 + v24);
      }
      else
      {
        v37 = *(unsigned __int16 *)(a1 + v24);
      }
      if (v37 >= 2)
      {
        if (v24 <= 3)
          v39 = v24;
        else
          v39 = 4;
        __asm { BR              X12 }
      }
      if (v37 == 1)
LABEL_85:

      else
        (*(void (**)(uint64_t, uint64_t))(v170 + 8))(a1, v171);
LABEL_86:
      if (v24 > 3)
        goto LABEL_90;
      v41 = ((1 << v25) + 1) >> v25;
      v42 = 2;
      if (v41 > 0xFFFD)
        v42 = 4;
      if (v41 <= 0xFD)
LABEL_90:
        v42 = 1;
      v43 = v42 + v24;
      if (v23 > v43)
        v43 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v43 <= 0x29)
        v43 = 41;
      if (*((unsigned __int8 *)a2 + v43) >= 7u)
      {
        if (v24 > 3)
          goto LABEL_100;
        v44 = ((1 << v25) + 1) >> v25;
        v45 = 2;
        if (v44 > 0xFFFD)
          v45 = 4;
        if (v44 <= 0xFD)
LABEL_100:
          v45 = 1;
        v46 = v45 + v24;
        if (v23 > v46)
          v46 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
        if (v46 <= 0x29)
          LODWORD(v46) = 41;
        if (v46 <= 3)
          v47 = v46;
        else
          v47 = 4;
        __asm { BR              X13 }
      }
      return result;
    case 6u:
      goto LABEL_85;
    default:
      goto LABEL_86;
  }
  switch(*((_BYTE *)a2 + v43))
  {
    case 0:
      *(_QWORD *)a1 = *a2;
      v48 = *(_OWORD *)(a2 + 1);
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_OWORD *)(a1 + 8) = v48;
      v49 = a2[4];
      *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
      *(_QWORD *)(a1 + 32) = v49;
      swift_bridgeObjectRetain();
      if (v24 > 3)
        goto LABEL_114;
      v50 = ((1 << v25) + 1) >> v25;
      v51 = 2;
      if (v50 > 0xFFFD)
        v51 = 4;
      if (v50 <= 0xFD)
LABEL_114:
        v51 = 1;
      v52 = v51 + v24;
      if (v23 > v52)
        v52 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v52 <= 0x29)
        v52 = 41;
      *(_BYTE *)(a1 + v52) = 0;
      return a1;
    case 1:
      *(_QWORD *)a1 = *a2;
      v56 = *(_OWORD *)(a2 + 1);
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_OWORD *)(a1 + 8) = v56;
      v57 = a2[4];
      *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
      *(_QWORD *)(a1 + 32) = v57;
      swift_bridgeObjectRetain();
      if (v24 > 3)
        goto LABEL_134;
      v58 = ((1 << v25) + 1) >> v25;
      v59 = 2;
      if (v58 > 0xFFFD)
        v59 = 4;
      if (v58 <= 0xFD)
LABEL_134:
        v59 = 1;
      v60 = v59 + v24;
      if (v23 > v60)
        v60 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v60 <= 0x29)
        v60 = 41;
      v61 = 1;
      goto LABEL_268;
    case 2:
      v163 = v25;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v180 + 16))(a1, a2, v181);
      v62 = (v179 + a1) & v178;
      v63 = ((unint64_t)a2 + v179) & v178;
      if (*(unsigned __int8 *)(v63 + v186) >= 8u)
      {
        if (v186 <= 3)
          v64 = v186;
        else
          v64 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v63 + v186))
      {
        case 0:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v176);
          *(_BYTE *)(v62 + v186) = 0;
          break;
        case 1:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v176);
          *(_QWORD *)((v165 + v62) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v165 + v63) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v62 + v186) = 1;
          sub_1C2CFD350();
          break;
        case 2:
          *(_QWORD *)v62 = *(_QWORD *)v63;
          *(_QWORD *)(((v179 + a1) & v178) + 8) = *(_QWORD *)((((unint64_t)a2 + v179) & v178) + 8);
          *(_QWORD *)(((v179 + a1) & v178) + 0x10) = *(_QWORD *)((((unint64_t)a2 + v179) & v178) + 0x10);
          *(_BYTE *)(v62 + v186) = 2;
          goto LABEL_225;
        case 3:
          *(_QWORD *)v62 = *(_QWORD *)v63;
          *(_BYTE *)(v62 + v186) = 3;
          swift_unknownObjectRetain();
          break;
        case 4:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v166 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v167);
          *(_BYTE *)(v62 + v186) = 4;
          break;
        case 5:
          v80 = *(void **)v63;
          *(_QWORD *)v62 = *(_QWORD *)v63;
          *(_BYTE *)(v62 + v186) = 5;
          v81 = v80;
          break;
        case 6:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v173 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v175);
          v82 = (void *)((v174 + v62) & v172);
          v83 = (const void *)((v174 + v63) & v172);
          if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v177))
          {
            memcpy(v82, v83, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v82, v83, v177);
            __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v177);
          }
          v98 = (_QWORD *)(((unint64_t)v82 + v169) & 0xFFFFFFFFFFFFFFF8);
          v99 = (_QWORD *)(((unint64_t)v83 + v169) & 0xFFFFFFFFFFFFFFF8);
          *v98 = *v99;
          v98[1] = v99[1];
          v100 = ((unint64_t)v98 + 19) & 0xFFFFFFFFFFFFFFF8;
          v101 = ((unint64_t)v99 + 19) & 0xFFFFFFFFFFFFFFF8;
          v102 = *(_DWORD *)v101;
          *(_BYTE *)(v100 + 4) = *(_BYTE *)(v101 + 4);
          *(_DWORD *)v100 = v102;
          *(_BYTE *)(v62 + v186) = 6;
          goto LABEL_226;
        case 7:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v173 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v175);
          v84 = (void *)((v174 + v62) & v172);
          v182 = (const void *)((v174 + v63) & v172);
          if (__swift_getEnumTagSinglePayload((uint64_t)v182, 1, v177))
          {
            v85 = (v174 + v63) & v172;
            memcpy(v84, v182, __n);
          }
          else
          {
            v103 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
            v85 = (v174 + v63) & v172;
            v103(v84, v182, v177);
            __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v177);
          }
          v104 = (_QWORD *)(((unint64_t)v84 + v169) & 0xFFFFFFFFFFFFFFF8);
          v105 = (_QWORD *)((v169 + v85) & 0xFFFFFFFFFFFFFFF8);
          *v104 = *v105;
          v104[1] = v105[1];
          v106 = ((unint64_t)v104 + 19) & 0xFFFFFFFFFFFFFFF8;
          v107 = ((unint64_t)v105 + 19) & 0xFFFFFFFFFFFFFFF8;
          v108 = *(_DWORD *)v107;
          *(_BYTE *)(v106 + 4) = *(_BYTE *)(v107 + 4);
          *(_DWORD *)v106 = v108;
          v109 = (_QWORD *)(((v62 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          v110 = (_QWORD *)(((v63 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *v109 = *v110;
          v109[1] = v110[1];
          v111 = (_QWORD *)(((unint64_t)v109 + 23) & 0xFFFFFFFFFFFFFFF8);
          v112 = (_QWORD *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v111 = *v112;
          v111[1] = v112[1];
          v113 = (_QWORD *)(((unint64_t)v111 + 23) & 0xFFFFFFFFFFFFFFF8);
          v114 = (_QWORD *)(((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v113 = *v114;
          v113[1] = v114[1];
          *(_BYTE *)(v62 + v186) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_225:
          swift_bridgeObjectRetain();
LABEL_226:
          swift_bridgeObjectRetain();
          break;
        default:
          memcpy((void *)((v179 + a1) & v178), (const void *)(((unint64_t)a2 + v179) & v178), v185);
          break;
      }
      v115 = (_QWORD *)(((v63 | 7) + v185) & 0xFFFFFFFFFFFFFFF8);
      v116 = (_QWORD *)(((v62 | 7) + v185) & 0xFFFFFFFFFFFFF8);
      *v116 = *v115;
      v117 = ((unint64_t)v116 + 15) & 0xFFFFFFFFFFFFFFF8;
      v118 = ((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8;
      v119 = *(_QWORD *)(v118 + 24);
      swift_bridgeObjectRetain();
      if (v119 < 0xFFFFFFFF)
      {
        v120 = *(_OWORD *)v118;
        v121 = *(_OWORD *)(v118 + 16);
        *(_QWORD *)(v117 + 32) = *(_QWORD *)(v118 + 32);
        *(_OWORD *)v117 = v120;
        *(_OWORD *)(v117 + 16) = v121;
      }
      else
      {
        *(_QWORD *)(v117 + 24) = v119;
        *(_QWORD *)(v117 + 32) = *(_QWORD *)(v118 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v119 - 8))(v117, v118, v119);
      }
      *(_BYTE *)(v117 + 40) = *(_BYTE *)(v118 + 40);
      v122 = ((v184 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v123 = (a1 + v122 + 7) & 0xFFFFFFFFFFFFFFF8;
      v124 = ((unint64_t)a2 + v122 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v123 = *(_QWORD *)v124;
      v125 = *(_OWORD *)(v124 + 8);
      *(_BYTE *)(v123 + 24) = *(_BYTE *)(v124 + 24);
      *(_OWORD *)(v123 + 8) = v125;
      v126 = *(_QWORD *)(v124 + 32);
      *(_BYTE *)(v123 + 40) = *(_BYTE *)(v124 + 40);
      *(_QWORD *)(v123 + 32) = v126;
      swift_bridgeObjectRetain();
      if (v24 > 3)
        goto LABEL_234;
      v127 = ((1 << v163) + 1) >> v163;
      v128 = 2;
      if (v127 > 0xFFFD)
        v128 = 4;
      if (v127 <= 0xFD)
LABEL_234:
        v128 = 1;
      v60 = v128 + v24;
      if (v23 > v60)
        v60 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v60 <= 0x29)
        v60 = 41;
      v61 = 2;
      goto LABEL_268;
    case 3:
      v164 = v25;
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v180 + 16))(a1, a2, v181);
      v65 = (v179 + a1) & v178;
      v66 = ((unint64_t)a2 + v179) & v178;
      if (*(unsigned __int8 *)(v66 + v186) >= 8u)
      {
        if (v186 <= 3)
          v67 = v186;
        else
          v67 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v66 + v186))
      {
        case 0:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v176);
          *(_BYTE *)(v65 + v186) = 0;
          break;
        case 1:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v176);
          *(_QWORD *)((v165 + v65) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v165 + v66) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v65 + v186) = 1;
          sub_1C2CFD350();
          break;
        case 2:
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *(_QWORD *)(((v179 + a1) & v178) + 8) = *(_QWORD *)((((unint64_t)a2 + v179) & v178) + 8);
          *(_QWORD *)(((v179 + a1) & v178) + 0x10) = *(_QWORD *)((((unint64_t)a2 + v179) & v178) + 0x10);
          *(_BYTE *)(v65 + v186) = 2;
          goto LABEL_244;
        case 3:
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *(_BYTE *)(v65 + v186) = 3;
          swift_unknownObjectRetain();
          break;
        case 4:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v166 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v167);
          *(_BYTE *)(v65 + v186) = 4;
          break;
        case 5:
          v86 = *(void **)v66;
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *(_BYTE *)(v65 + v186) = 5;
          v87 = v86;
          break;
        case 6:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v173 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v175);
          v88 = (void *)((v174 + v65) & v172);
          v89 = (const void *)((v174 + v66) & v172);
          if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v177))
          {
            memcpy(v88, v89, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v88, v89, v177);
            __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v177);
          }
          v129 = (_QWORD *)(((unint64_t)v88 + v169) & 0xFFFFFFFFFFFFFFF8);
          v130 = (_QWORD *)(((unint64_t)v89 + v169) & 0xFFFFFFFFFFFFFFF8);
          *v129 = *v130;
          v129[1] = v130[1];
          v131 = ((unint64_t)v129 + 19) & 0xFFFFFFFFFFFFFFF8;
          v132 = ((unint64_t)v130 + 19) & 0xFFFFFFFFFFFFFFF8;
          v133 = *(_DWORD *)v132;
          *(_BYTE *)(v131 + 4) = *(_BYTE *)(v132 + 4);
          *(_DWORD *)v131 = v133;
          *(_BYTE *)(v65 + v186) = 6;
          goto LABEL_245;
        case 7:
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v173 + 16))((v179 + a1) & v178, ((unint64_t)a2 + v179) & v178, v175);
          v90 = (void *)((v174 + v65) & v172);
          v183 = (const void *)((v174 + v66) & v172);
          if (__swift_getEnumTagSinglePayload((uint64_t)v183, 1, v177))
          {
            v91 = (v174 + v66) & v172;
            memcpy(v90, v183, __n);
          }
          else
          {
            v134 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
            v91 = (v174 + v66) & v172;
            v134(v90, v183, v177);
            __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v177);
          }
          v135 = (_QWORD *)(((unint64_t)v90 + v169) & 0xFFFFFFFFFFFFFFF8);
          v136 = (_QWORD *)((v169 + v91) & 0xFFFFFFFFFFFFFFF8);
          *v135 = *v136;
          v135[1] = v136[1];
          v137 = ((unint64_t)v135 + 19) & 0xFFFFFFFFFFFFFFF8;
          v138 = ((unint64_t)v136 + 19) & 0xFFFFFFFFFFFFFFF8;
          v139 = *(_DWORD *)v138;
          *(_BYTE *)(v137 + 4) = *(_BYTE *)(v138 + 4);
          *(_DWORD *)v137 = v139;
          v140 = (_QWORD *)(((v65 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          v141 = (_QWORD *)(((v66 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *v140 = *v141;
          v140[1] = v141[1];
          v142 = (_QWORD *)(((unint64_t)v140 + 23) & 0xFFFFFFFFFFFFFFF8);
          v143 = (_QWORD *)(((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v142 = *v143;
          v142[1] = v143[1];
          v144 = (_QWORD *)(((unint64_t)v142 + 23) & 0xFFFFFFFFFFFFFFF8);
          v145 = (_QWORD *)(((unint64_t)v143 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v144 = *v145;
          v144[1] = v145[1];
          *(_BYTE *)(v65 + v186) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_244:
          swift_bridgeObjectRetain();
LABEL_245:
          swift_bridgeObjectRetain();
          break;
        default:
          memcpy((void *)((v179 + a1) & v178), (const void *)(((unint64_t)a2 + v179) & v178), v185);
          break;
      }
      v146 = (_QWORD *)(((v66 | 7) + v185) & 0xFFFFFFFFFFFFFFF8);
      v147 = (_QWORD *)(((v65 | 7) + v185) & 0xFFFFFFFFFFFFF8);
      *v147 = *v146;
      v148 = ((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8;
      v149 = ((unint64_t)v146 + 15) & 0xFFFFFFFFFFFFFFF8;
      v150 = *(_QWORD *)(v149 + 24);
      swift_bridgeObjectRetain();
      if (v150 < 0xFFFFFFFF)
      {
        v151 = *(_OWORD *)v149;
        v152 = *(_OWORD *)(v149 + 16);
        *(_QWORD *)(v148 + 32) = *(_QWORD *)(v149 + 32);
        *(_OWORD *)v148 = v151;
        *(_OWORD *)(v148 + 16) = v152;
      }
      else
      {
        *(_QWORD *)(v148 + 24) = v150;
        *(_QWORD *)(v148 + 32) = *(_QWORD *)(v149 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v150 - 8))(v148, v149, v150);
      }
      *(_BYTE *)(v148 + 40) = *(_BYTE *)(v149 + 40);
      v153 = ((v184 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v154 = (a1 + v153 + 7) & 0xFFFFFFFFFFFFFFF8;
      v155 = ((unint64_t)a2 + v153 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v154 = *(_QWORD *)v155;
      v156 = *(_OWORD *)(v155 + 8);
      *(_BYTE *)(v154 + 24) = *(_BYTE *)(v155 + 24);
      *(_OWORD *)(v154 + 8) = v156;
      v157 = *(_QWORD *)(v155 + 32);
      *(_BYTE *)(v154 + 40) = *(_BYTE *)(v155 + 40);
      *(_QWORD *)(v154 + 32) = v157;
      swift_bridgeObjectRetain();
      if (v24 > 3)
        goto LABEL_253;
      v158 = ((1 << v164) + 1) >> v164;
      v159 = 2;
      if (v158 > 0xFFFD)
        v159 = 4;
      if (v158 <= 0xFD)
LABEL_253:
        v159 = 1;
      v60 = v159 + v24;
      if (v23 > v60)
        v60 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v60 <= 0x29)
        v60 = 41;
      v61 = 3;
      goto LABEL_268;
    case 4:
      *(_QWORD *)a1 = *a2;
      v68 = *(_OWORD *)(a2 + 1);
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_OWORD *)(a1 + 8) = v68;
      v69 = a2[4];
      *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
      *(_QWORD *)(a1 + 32) = v69;
      swift_bridgeObjectRetain();
      if (v24 > 3)
        goto LABEL_154;
      v70 = ((1 << v25) + 1) >> v25;
      v71 = 2;
      if (v70 > 0xFFFD)
        v71 = 4;
      if (v70 <= 0xFD)
LABEL_154:
        v71 = 1;
      v60 = v71 + v24;
      if (v23 > v60)
        v60 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v60 <= 0x29)
        v60 = 41;
      v61 = 4;
      goto LABEL_268;
    case 5:
      if (v24 > 3)
        goto LABEL_161;
      v78 = ((1 << v25) + 1) >> v25;
      if (v78 > 0xFFFD)
      {
        v72 = *(_DWORD *)((char *)a2 + v24);
      }
      else if (v78 <= 0xFD)
      {
LABEL_161:
        v72 = *((unsigned __int8 *)a2 + v24);
      }
      else
      {
        v72 = *(unsigned __int16 *)((char *)a2 + v24);
      }
      if (v72 >= 2)
      {
        if (v24 <= 3)
          v79 = v24;
        else
          v79 = 4;
        __asm { BR              X12 }
      }
      if (v72 != 1)
      {
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v170 + 16))(a1, a2, v171);
        if (v24 > 3)
        {
LABEL_209:
          *(_BYTE *)(a1 + v24) = 0;
LABEL_214:
          if (v24 > 3)
            goto LABEL_218;
          v96 = ((1 << v25) + 1) >> v25;
          v97 = 2;
          if (v96 > 0xFFFD)
            v97 = 4;
          if (v96 <= 0xFD)
LABEL_218:
            v97 = 1;
          goto LABEL_263;
        }
        v92 = ((1 << v25) + 1) >> v25;
        if (v92 > 0xFFFD)
        {
          *(_DWORD *)(a1 + v24) = 0;
        }
        else
        {
          if (v92 <= 0xFD)
            goto LABEL_209;
          *(_WORD *)(a1 + v24) = 0;
        }
        goto LABEL_261;
      }
      v93 = v25;
      v94 = *a2;
      v95 = (id)*a2;
      *(_QWORD *)a1 = v94;
      v25 = v93;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      if (v24 > 3)
        goto LABEL_213;
      v92 = ((1 << v93) + 1) >> v93;
      if (v92 > 0xFFFD)
      {
        *(_DWORD *)(a1 + v24) = 1;
      }
      else
      {
        if (v92 <= 0xFD)
        {
LABEL_213:
          *(_BYTE *)(a1 + v24) = 1;
          goto LABEL_214;
        }
        *(_WORD *)(a1 + v24) = 1;
      }
LABEL_261:
      v160 = v92 > 0xFFFD;
      v97 = 2;
      if (v160)
        v97 = 4;
LABEL_263:
      v60 = v97 + v24;
      if (v23 > v60)
        v60 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v60 <= 0x29)
        v60 = 41;
      v61 = 5;
LABEL_268:
      *(_BYTE *)(a1 + v60) = v61;
      return a1;
    case 6:
      v73 = v25;
      v74 = *a2;
      v75 = (id)*a2;
      *(_QWORD *)a1 = v74;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      if (v24 > 3)
        goto LABEL_166;
      v76 = ((1 << v73) + 1) >> v73;
      v77 = 2;
      if (v76 > 0xFFFD)
        v77 = 4;
      if (v76 <= 0xFD)
LABEL_166:
        v77 = 1;
      v60 = v77 + v24;
      if (v23 > v60)
        v60 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v60 <= 0x29)
        v60 = 41;
      v61 = 6;
      goto LABEL_268;
    default:
      if (v24 > 3)
        goto LABEL_124;
      v53 = ((1 << v25) + 1) >> v25;
      v54 = 2;
      if (v53 > 0xFFFD)
        v54 = 4;
      if (v53 <= 0xFD)
LABEL_124:
        v54 = 1;
      v55 = v54 + v24;
      if (v23 > v55)
        v55 = ((v184 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v55 <= 0x29)
        v55 = 41;
      memcpy((void *)a1, a2, v55 + 1);
      return a1;
  }
}

_OWORD *sub_1C2B52B1C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  size_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  _OWORD *v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  __int128 v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  void (*v51)(_OWORD *, _OWORD *, uint64_t);
  _OWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(_OWORD *, _OWORD *, uint64_t);
  _OWORD *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __int128 v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  size_t v71;
  unint64_t v72;
  char v73;
  unint64_t v74;
  _OWORD *v75;
  unint64_t v76;
  uint64_t v77;
  char v78;
  __int128 v79;
  char v80;
  unint64_t v81;
  _OWORD *v82;
  void *v83;
  const void *v84;
  unint64_t v85;
  void *v86;
  const void *v87;
  void *v88;
  const void *v89;
  size_t v90;
  unint64_t v91;
  char v92;
  unint64_t v93;
  _OWORD *v94;
  unint64_t v95;
  uint64_t v96;
  char v97;
  __int128 v98;
  char v99;
  unint64_t v100;
  _OWORD *v101;
  void *v102;
  const void *v103;
  unint64_t v104;
  void *v105;
  const void *v106;
  unint64_t v107;
  unsigned int v108;
  unsigned int v109;
  uint64_t v110;
  _OWORD *v111;
  _OWORD *v112;
  unint64_t v113;
  unint64_t v114;
  int v115;
  _OWORD *v116;
  _OWORD *v117;
  unint64_t v118;
  unint64_t v119;
  int v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _OWORD *v124;
  _QWORD *v125;
  _QWORD *v126;
  unint64_t v127;
  unint64_t v128;
  __int128 v129;
  __int128 v130;
  unint64_t v131;
  _OWORD *v132;
  __int128 *v133;
  __int128 v134;
  __int128 v135;
  unsigned int v136;
  uint64_t v137;
  _OWORD *v138;
  _OWORD *v139;
  unint64_t v140;
  unint64_t v141;
  int v142;
  _OWORD *v143;
  _OWORD *v144;
  unint64_t v145;
  unint64_t v146;
  int v147;
  _OWORD *v148;
  _OWORD *v149;
  _OWORD *v150;
  _OWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  unint64_t v154;
  unint64_t v155;
  __int128 v156;
  __int128 v157;
  unint64_t v158;
  _OWORD *v159;
  __int128 *v160;
  __int128 v161;
  __int128 v162;
  unsigned int v163;
  uint64_t v164;
  BOOL v165;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  size_t v171;
  size_t v172;
  size_t __n;
  size_t __na;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;

  v4 = sub_1C2CFBCAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v185 = sub_1C2CFCD44();
  v7 = *(_QWORD *)(v185 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v182 = sub_1C2CFBD9C();
  v9 = *(_QWORD *)(v182 - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v184 = sub_1C2CFBFD0();
  v11 = *(_QWORD *)(v184 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = sub_1C2CFBF28();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v10 | v12) & 0xF8 | v15 | 7;
  v17 = v6 + v16;
  v18 = *(_QWORD *)(v7 + 64);
  v181 = v18 + 7;
  if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18)
    v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v18 <= *(_QWORD *)(v9 + 64))
    v18 = *(_QWORD *)(v9 + 64);
  v183 = *(_QWORD *)(v11 + 64) + v15;
  if (*(_DWORD *)(v14 + 84))
    v19 = *(_QWORD *)(v14 + 64);
  else
    v19 = *(_QWORD *)(v14 + 64) + 1;
  v20 = (v19 + 7 + (v183 & ~v15)) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v18 <= v21)
    v18 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v22 = ((((((v20 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= v22)
    v18 = v22;
  if (v18 <= 0x18)
    v23 = 24;
  else
    v23 = v18;
  v24 = (v23 + (v17 & ~v16) + 8) & 0xFFFFFFFFFFFFFFF8;
  v25 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v26 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v26 + 64) <= 9uLL)
    v27 = 9;
  else
    v27 = *(_QWORD *)(v26 + 64);
  v28 = 8 * v27;
  if (v27 > 3)
    goto LABEL_22;
  v29 = ((1 << v28) + 1) >> v28;
  v30 = 2;
  if (v29 > 0xFFFD)
    v30 = 4;
  if (v29 <= 0xFD)
LABEL_22:
    v30 = 1;
  v31 = v30 + v27;
  if (v25 > v31)
    v31 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v31 <= 0x29)
    v31 = 41;
  v32 = *((unsigned __int8 *)a2 + v31);
  if (v32 >= 7)
  {
    if (v27 > 3)
      goto LABEL_32;
    v33 = ((1 << v28) + 1) >> v28;
    v34 = 2;
    if (v33 > 0xFFFD)
      v34 = 4;
    if (v33 <= 0xFD)
LABEL_32:
      v34 = 1;
    v35 = v34 + v27;
    if (v25 > v35)
      v35 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    if (v35 <= 0x29)
      LODWORD(v35) = 41;
    if (v35 <= 3)
      v36 = v35;
    else
      v36 = 4;
    __asm { BR              X16 }
  }
  v37 = ~v16;
  switch(v32)
  {
    case 0u:
      v38 = a2[1];
      v39 = a1;
      *a1 = *a2;
      a1[1] = v38;
      *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      if (v27 > 3)
        goto LABEL_46;
      v40 = ((1 << v28) + 1) >> v28;
      v41 = 2;
      if (v40 > 0xFFFD)
        v41 = 4;
      if (v40 <= 0xFD)
LABEL_46:
        v41 = 1;
      v42 = v41 + v27;
      if (v25 > v42)
        v42 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v42 <= 0x29)
        v42 = 41;
      *((_BYTE *)a1 + v42) = 0;
      return v39;
    case 1u:
      v46 = a2[1];
      v39 = a1;
      *a1 = *a2;
      a1[1] = v46;
      *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      if (v27 > 3)
        goto LABEL_66;
      v47 = ((1 << v28) + 1) >> v28;
      v48 = 2;
      if (v47 > 0xFFFD)
        v48 = 4;
      if (v47 <= 0xFD)
LABEL_66:
        v48 = 1;
      v49 = v48 + v27;
      if (v25 > v49)
        v49 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v49 <= 0x29)
        v49 = 41;
      v50 = 1;
      goto LABEL_200;
    case 2u:
      v167 = ~v15;
      v169 = v13;
      v171 = v19 + 7;
      __n = v23 + 1;
      v175 = (v23 + (v17 & ~v16) + 8) & 0xFFFFFFFFFFFFFFF8;
      v177 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v51 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(v5 + 32);
      v39 = a1;
      v179 = v23;
      v51(a1, a2, v4);
      v52 = a2;
      v53 = ((unint64_t)a1 + v17) & v37;
      v54 = ((unint64_t)a2 + v17) & v37;
      if (*(unsigned __int8 *)(v54 + v179) >= 8u)
      {
        if (v179 <= 3)
          v55 = v179;
        else
          v55 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v54 + v179))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(((unint64_t)a1 + v17) & v37, ((unint64_t)a2 + v17) & v37, v185);
          v53 = ((unint64_t)a1 + v17) & v37;
          v52 = a2;
          *(_BYTE *)(v53 + v179) = 0;
          goto LABEL_123;
        case 1:
          v75 = (_OWORD *)(((unint64_t)a1 + v17) & v37);
          v76 = ((unint64_t)a2 + v17) & v37;
          v77 = v179;
          (*(void (**)(_OWORD *, unint64_t, uint64_t))(v7 + 32))(v75, v76, v185);
          v53 = (unint64_t)v75;
          v52 = a2;
          *(_QWORD *)(((unint64_t)v75 + v181) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v181 + v54) & 0xFFFFFFFFFFFFF8);
          v78 = 1;
          goto LABEL_120;
        case 2:
          v79 = *(_OWORD *)v54;
          *(_QWORD *)((((unint64_t)a1 + v17) & v37) + 0x10) = *(_QWORD *)((((unint64_t)a2 + v17) & v37)
                                                                               + 0x10);
          *(_OWORD *)v53 = v79;
          v80 = 2;
          goto LABEL_122;
        case 3:
          *(_QWORD *)v53 = *(_QWORD *)v54;
          v80 = 3;
          goto LABEL_122;
        case 4:
          v75 = (_OWORD *)(((unint64_t)a1 + v17) & v37);
          v81 = ((unint64_t)a2 + v17) & v37;
          v77 = v179;
          (*(void (**)(_OWORD *, unint64_t, uint64_t))(v9 + 32))(v75, v81, v182);
          v53 = (unint64_t)v75;
          v52 = a2;
          v78 = 4;
LABEL_120:
          *((_BYTE *)v75 + v77) = v78;
          goto LABEL_123;
        case 5:
          *(_QWORD *)v53 = *(_QWORD *)v54;
          v80 = 5;
LABEL_122:
          *(_BYTE *)(v53 + v179) = v80;
LABEL_123:
          v72 = v177;
          goto LABEL_164;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))(v53, v54, v184);
          v82 = (_OWORD *)(((unint64_t)a1 + v17) & v37);
          v83 = (void *)(((unint64_t)v82 + v183) & v167);
          v84 = (const void *)((v183 + v54) & v167);
          if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v169))
          {
            memcpy(v83, v84, v19);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v83, v84, v169);
            __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v169);
          }
          v111 = (_OWORD *)(((unint64_t)v83 + v171) & 0xFFFFFFFFFFFFFFF8);
          v112 = (_OWORD *)(((unint64_t)v84 + v171) & 0xFFFFFFFFFFFFFFF8);
          *v111 = *v112;
          v113 = ((unint64_t)v111 + 19) & 0xFFFFFFFFFFFFFFF8;
          v114 = ((unint64_t)v112 + 19) & 0xFFFFFFFFFFFFFFF8;
          v115 = *(_DWORD *)v114;
          *(_BYTE *)(v113 + 4) = *(_BYTE *)(v114 + 4);
          *(_DWORD *)v113 = v115;
          v53 = (unint64_t)v82;
          *((_BYTE *)v82 + v179) = 6;
          goto LABEL_163;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))(v53, v54, v184);
          v85 = ((unint64_t)a1 + v17) & v37;
          v86 = (void *)((v183 + v85) & v167);
          v87 = (const void *)((v183 + v54) & v167);
          if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v169))
          {
            memcpy(v86, v87, v19);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v86, v87, v169);
            __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v169);
          }
          v116 = (_OWORD *)(((unint64_t)v86 + v171) & 0xFFFFFFFFFFFFFFF8);
          v117 = (_OWORD *)(((unint64_t)v87 + v171) & 0xFFFFFFFFFFFFFFF8);
          *v116 = *v117;
          v118 = ((unint64_t)v116 + 19) & 0xFFFFFFFFFFFFFFF8;
          v119 = ((unint64_t)v117 + 19) & 0xFFFFFFFFFFFFFFF8;
          v120 = *(_DWORD *)v119;
          *(_BYTE *)(v118 + 4) = *(_BYTE *)(v119 + 4);
          *(_DWORD *)v118 = v120;
          v53 = v85;
          v121 = (_OWORD *)(((v85 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          v122 = (_OWORD *)(((v54 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          *v121 = *v122;
          v123 = (_OWORD *)(((unint64_t)v121 + 23) & 0xFFFFFFFFFFFFFFF8);
          v124 = (_OWORD *)(((unint64_t)v122 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v123 = *v124;
          *(_OWORD *)(((unint64_t)v123 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v85 + v179) = 7;
LABEL_163:
          v72 = v177;
          v52 = a2;
LABEL_164:
          v73 = 8 * v27;
          v71 = __n;
          v74 = v175;
          break;
        default:
          v69 = (void *)(((unint64_t)a1 + v17) & v37);
          v70 = (const void *)(((unint64_t)a2 + v17) & v37);
          v71 = __n;
          memcpy(v69, v70, __n);
          v53 = (unint64_t)v69;
          v52 = a2;
          v72 = v177;
          v73 = 8 * v27;
          v74 = v175;
          break;
      }
      v125 = (_QWORD *)(((v53 | 7) + v71) & 0xFFFFFFFFFFFFF8);
      v126 = (_QWORD *)(((v54 | 7) + v71) & 0xFFFFFFFFFFFFFFF8);
      *v125 = *v126;
      v127 = ((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8;
      v128 = ((unint64_t)v126 + 15) & 0xFFFFFFFFFFFFFFF8;
      v129 = *(_OWORD *)v128;
      v130 = *(_OWORD *)(v128 + 16);
      *(_QWORD *)(v127 + 32) = *(_QWORD *)(v128 + 32);
      *(_OWORD *)v127 = v129;
      *(_OWORD *)(v127 + 16) = v130;
      *(_BYTE *)(v127 + 40) = *(_BYTE *)(v128 + 40);
      v131 = ((v74 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v132 = (_OWORD *)(((unint64_t)a1 + v131 + 7) & 0xFFFFFFFFFFFFFFF8);
      v133 = (__int128 *)(((unint64_t)v52 + v131 + 7) & 0xFFFFFFFFFFFFFFF8);
      v134 = *v133;
      v135 = v133[1];
      *(_OWORD *)((char *)v132 + 25) = *(__int128 *)((char *)v133 + 25);
      *v132 = v134;
      v132[1] = v135;
      if (v27 > 3)
        goto LABEL_169;
      v136 = ((1 << v73) + 1) >> v73;
      v137 = 2;
      if (v136 > 0xFFFD)
        v137 = 4;
      if (v136 <= 0xFD)
LABEL_169:
        v137 = 1;
      v49 = v137 + v27;
      if (v72 > v49)
        v49 = v72;
      if (v49 <= 0x29)
        v49 = 41;
      v50 = 2;
      goto LABEL_200;
    case 3u:
      v168 = ~v15;
      v170 = v13;
      v172 = v19 + 7;
      __na = v23 + 1;
      v176 = (v23 + (v17 & ~v16) + 8) & 0xFFFFFFFFFFFFFFF8;
      v178 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      v56 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(v5 + 32);
      v39 = a1;
      v180 = v23;
      v56(a1, a2, v4);
      v57 = a2;
      v58 = ((unint64_t)a1 + v17) & v37;
      v59 = ((unint64_t)a2 + v17) & v37;
      if (*(unsigned __int8 *)(v59 + v180) >= 8u)
      {
        if (v180 <= 3)
          v60 = v180;
        else
          v60 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v59 + v180))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(((unint64_t)a1 + v17) & v37, ((unint64_t)a2 + v17) & v37, v185);
          v58 = ((unint64_t)a1 + v17) & v37;
          v57 = a2;
          *(_BYTE *)(v58 + v180) = 0;
          goto LABEL_138;
        case 1:
          v94 = (_OWORD *)(((unint64_t)a1 + v17) & v37);
          v95 = ((unint64_t)a2 + v17) & v37;
          v96 = v180;
          (*(void (**)(_OWORD *, unint64_t, uint64_t))(v7 + 32))(v94, v95, v185);
          v58 = (unint64_t)v94;
          v57 = a2;
          *(_QWORD *)(((unint64_t)v94 + v181) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v181 + v59) & 0xFFFFFFFFFFFFF8);
          v97 = 1;
          goto LABEL_135;
        case 2:
          v98 = *(_OWORD *)v59;
          *(_QWORD *)((((unint64_t)a1 + v17) & v37) + 0x10) = *(_QWORD *)((((unint64_t)a2 + v17) & v37)
                                                                               + 0x10);
          *(_OWORD *)v58 = v98;
          v99 = 2;
          goto LABEL_137;
        case 3:
          *(_QWORD *)v58 = *(_QWORD *)v59;
          v99 = 3;
          goto LABEL_137;
        case 4:
          v94 = (_OWORD *)(((unint64_t)a1 + v17) & v37);
          v100 = ((unint64_t)a2 + v17) & v37;
          v96 = v180;
          (*(void (**)(_OWORD *, unint64_t, uint64_t))(v9 + 32))(v94, v100, v182);
          v58 = (unint64_t)v94;
          v57 = a2;
          v97 = 4;
LABEL_135:
          *((_BYTE *)v94 + v96) = v97;
          goto LABEL_138;
        case 5:
          *(_QWORD *)v58 = *(_QWORD *)v59;
          v99 = 5;
LABEL_137:
          *(_BYTE *)(v58 + v180) = v99;
LABEL_138:
          v91 = v178;
          goto LABEL_180;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))(v58, v59, v184);
          v101 = (_OWORD *)(((unint64_t)a1 + v17) & v37);
          v102 = (void *)(((unint64_t)v101 + v183) & v168);
          v103 = (const void *)((v183 + v59) & v168);
          if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v170))
          {
            memcpy(v102, v103, v19);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v102, v103, v170);
            __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v170);
          }
          v138 = (_OWORD *)(((unint64_t)v102 + v172) & 0xFFFFFFFFFFFFFFF8);
          v139 = (_OWORD *)(((unint64_t)v103 + v172) & 0xFFFFFFFFFFFFFFF8);
          *v138 = *v139;
          v140 = ((unint64_t)v138 + 19) & 0xFFFFFFFFFFFFFFF8;
          v141 = ((unint64_t)v139 + 19) & 0xFFFFFFFFFFFFFFF8;
          v142 = *(_DWORD *)v141;
          *(_BYTE *)(v140 + 4) = *(_BYTE *)(v141 + 4);
          *(_DWORD *)v140 = v142;
          v58 = (unint64_t)v101;
          *((_BYTE *)v101 + v180) = 6;
          goto LABEL_179;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))(v58, v59, v184);
          v104 = ((unint64_t)a1 + v17) & v37;
          v105 = (void *)((v183 + v104) & v168);
          v106 = (const void *)((v183 + v59) & v168);
          if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, v170))
          {
            memcpy(v105, v106, v19);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v105, v106, v170);
            __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v170);
          }
          v143 = (_OWORD *)(((unint64_t)v105 + v172) & 0xFFFFFFFFFFFFFFF8);
          v144 = (_OWORD *)(((unint64_t)v106 + v172) & 0xFFFFFFFFFFFFFFF8);
          *v143 = *v144;
          v145 = ((unint64_t)v143 + 19) & 0xFFFFFFFFFFFFFFF8;
          v146 = ((unint64_t)v144 + 19) & 0xFFFFFFFFFFFFFFF8;
          v147 = *(_DWORD *)v146;
          *(_BYTE *)(v145 + 4) = *(_BYTE *)(v146 + 4);
          *(_DWORD *)v145 = v147;
          v58 = v104;
          v148 = (_OWORD *)(((v104 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          v149 = (_OWORD *)(((v59 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          *v148 = *v149;
          v150 = (_OWORD *)(((unint64_t)v148 + 23) & 0xFFFFFFFFFFFFFFF8);
          v151 = (_OWORD *)(((unint64_t)v149 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v150 = *v151;
          *(_OWORD *)(((unint64_t)v150 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v151 + 23) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v104 + v180) = 7;
LABEL_179:
          v91 = v178;
          v57 = a2;
LABEL_180:
          v92 = 8 * v27;
          v90 = __na;
          v93 = v176;
          break;
        default:
          v88 = (void *)(((unint64_t)a1 + v17) & v37);
          v89 = (const void *)(((unint64_t)a2 + v17) & v37);
          v90 = __na;
          memcpy(v88, v89, __na);
          v58 = (unint64_t)v88;
          v57 = a2;
          v91 = v178;
          v92 = 8 * v27;
          v93 = v176;
          break;
      }
      v152 = (_QWORD *)(((v58 | 7) + v90) & 0xFFFFFFFFFFFFF8);
      v153 = (_QWORD *)(((v59 | 7) + v90) & 0xFFFFFFFFFFFFFFF8);
      *v152 = *v153;
      v154 = ((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFFFF8;
      v155 = ((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8;
      v156 = *(_OWORD *)v155;
      v157 = *(_OWORD *)(v155 + 16);
      *(_QWORD *)(v154 + 32) = *(_QWORD *)(v155 + 32);
      *(_OWORD *)v154 = v156;
      *(_OWORD *)(v154 + 16) = v157;
      *(_BYTE *)(v154 + 40) = *(_BYTE *)(v155 + 40);
      v158 = ((v93 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v159 = (_OWORD *)(((unint64_t)a1 + v158 + 7) & 0xFFFFFFFFFFFFFFF8);
      v160 = (__int128 *)(((unint64_t)v57 + v158 + 7) & 0xFFFFFFFFFFFFFFF8);
      v161 = *v160;
      v162 = v160[1];
      *(_OWORD *)((char *)v159 + 25) = *(__int128 *)((char *)v160 + 25);
      *v159 = v161;
      v159[1] = v162;
      if (v27 > 3)
        goto LABEL_185;
      v163 = ((1 << v92) + 1) >> v92;
      v164 = 2;
      if (v163 > 0xFFFD)
        v164 = 4;
      if (v163 <= 0xFD)
LABEL_185:
        v164 = 1;
      v49 = v164 + v27;
      if (v91 > v49)
        v49 = v91;
      if (v49 <= 0x29)
        v49 = 41;
      v50 = 3;
      goto LABEL_200;
    case 4u:
      v61 = a2[1];
      v39 = a1;
      *a1 = *a2;
      a1[1] = v61;
      *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      if (v27 > 3)
        goto LABEL_86;
      v62 = ((1 << v28) + 1) >> v28;
      v63 = 2;
      if (v62 > 0xFFFD)
        v63 = 4;
      if (v62 <= 0xFD)
LABEL_86:
        v63 = 1;
      v49 = v63 + v27;
      if (v25 > v49)
        v49 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v49 <= 0x29)
        v49 = 41;
      v50 = 4;
      goto LABEL_200;
    case 5u:
      v39 = a1;
      if (v27 > 3)
        goto LABEL_93;
      v67 = ((1 << v28) + 1) >> v28;
      if (v67 > 0xFFFD)
      {
        v64 = *(_DWORD *)((char *)a2 + v27);
      }
      else if (v67 <= 0xFD)
      {
LABEL_93:
        v64 = *((unsigned __int8 *)a2 + v27);
      }
      else
      {
        v64 = *(unsigned __int16 *)((char *)a2 + v27);
      }
      if (v64 >= 2)
      {
        if (v27 <= 3)
          v68 = v27;
        else
          v68 = 4;
        __asm { BR              X13 }
      }
      if (v64 == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        if (v27 > 3)
          goto LABEL_151;
        v108 = ((1 << v28) + 1) >> v28;
        if (v108 > 0xFFFD)
        {
          *(_DWORD *)((char *)a1 + v27) = 1;
          goto LABEL_193;
        }
        if (v108 <= 0xFD)
        {
LABEL_151:
          *((_BYTE *)a1 + v27) = 1;
          goto LABEL_152;
        }
        *(_WORD *)((char *)a1 + v27) = 1;
      }
      else
      {
        v107 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
        (*(void (**)(_OWORD *))(v26 + 32))(a1);
        v25 = v107;
        v28 = 8 * v27;
        if (v27 > 3)
        {
LABEL_147:
          *((_BYTE *)a1 + v27) = 0;
LABEL_152:
          if (v27 > 3)
            goto LABEL_156;
          v109 = ((1 << v28) + 1) >> v28;
          v110 = 2;
          if (v109 > 0xFFFD)
            v110 = 4;
          if (v109 <= 0xFD)
LABEL_156:
            v110 = 1;
          goto LABEL_195;
        }
        v108 = ((1 << (8 * v27)) + 1) >> (8 * v27);
        if (v108 > 0xFFFD)
        {
          *(_DWORD *)((char *)a1 + v27) = 0;
        }
        else
        {
          if (v108 <= 0xFD)
            goto LABEL_147;
          *(_WORD *)((char *)a1 + v27) = 0;
        }
      }
LABEL_193:
      v165 = v108 > 0xFFFD;
      v110 = 2;
      if (v165)
        v110 = 4;
LABEL_195:
      v49 = v110 + v27;
      if (v25 > v49)
        v49 = v25;
      if (v49 <= 0x29)
        v49 = 41;
      v50 = 5;
LABEL_200:
      *((_BYTE *)v39 + v49) = v50;
      return v39;
    case 6u:
      v39 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      if (v27 > 3)
        goto LABEL_98;
      v65 = ((1 << v28) + 1) >> v28;
      v66 = 2;
      if (v65 > 0xFFFD)
        v66 = 4;
      if (v65 <= 0xFD)
LABEL_98:
        v66 = 1;
      v49 = v66 + v27;
      if (v25 > v49)
        v49 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v49 <= 0x29)
        v49 = 41;
      v50 = 6;
      goto LABEL_200;
    default:
      if (v27 > 3)
        goto LABEL_56;
      v43 = ((1 << v28) + 1) >> v28;
      v44 = 2;
      if (v43 > 0xFFFD)
        v44 = 4;
      if (v43 <= 0xFD)
LABEL_56:
        v44 = 1;
      v39 = a1;
      v45 = v44 + v27;
      if (v25 > v45)
        v45 = ((v24 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v45 <= 0x29)
        v45 = 41;
      memcpy(a1, a2, v45 + 1);
      return v39;
  }
}

id *sub_1C2B53B78(id *a1, id *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  id *v40;
  id *v41;
  id *v42;
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __int128 v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  __int128 v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  __int128 v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  __int128 v79;
  char v80;
  const void *v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char v86;
  __int128 v87;
  char v88;
  const void *v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unsigned int v93;
  unsigned int v94;
  uint64_t v95;
  void (*v96)(void *, const void *, uint64_t);
  _OWORD *v97;
  _OWORD *v98;
  unint64_t v99;
  unint64_t v100;
  int v101;
  char v102;
  void (*v103)(void *, const void *, uint64_t);
  _OWORD *v104;
  _OWORD *v105;
  unint64_t v106;
  unint64_t v107;
  int v108;
  _OWORD *v109;
  _OWORD *v110;
  _OWORD *v111;
  _OWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  unint64_t v115;
  unint64_t v116;
  __int128 v117;
  __int128 v118;
  unint64_t v119;
  _OWORD *v120;
  __int128 *v121;
  __int128 v122;
  __int128 v123;
  unsigned int v124;
  uint64_t v125;
  void (*v126)(void *, const void *, uint64_t);
  _OWORD *v127;
  _OWORD *v128;
  unint64_t v129;
  unint64_t v130;
  int v131;
  char v132;
  void (*v133)(void *, const void *, uint64_t);
  _OWORD *v134;
  _OWORD *v135;
  unint64_t v136;
  unint64_t v137;
  int v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _OWORD *v142;
  _QWORD *v143;
  _QWORD *v144;
  unint64_t v145;
  unint64_t v146;
  __int128 v147;
  __int128 v148;
  unint64_t v149;
  _OWORD *v150;
  __int128 *v151;
  __int128 v152;
  __int128 v153;
  unsigned int v154;
  uint64_t v155;
  BOOL v156;
  id *result;
  id *v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  size_t __n;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  void *v177;
  uint64_t v178;
  void *v179;
  const void *v180;
  void *v181;
  const void *v182;
  unint64_t v183;
  size_t v184;
  uint64_t v185;

  if (a1 == a2)
    return a1;
  v6 = sub_1C2CFBCAC();
  v175 = *(_QWORD *)(v6 - 8);
  v178 = v6;
  v7 = *(_QWORD *)(v175 + 64);
  v171 = sub_1C2CFCD44();
  v8 = *(_QWORD *)(v171 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v161 = sub_1C2CFBD9C();
  v10 = *(_QWORD *)(v161 - 8);
  v11 = *(_DWORD *)(v10 + 80) | v9;
  v170 = sub_1C2CFBFD0();
  v12 = *(_QWORD *)(v170 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v172 = sub_1C2CFBF28();
  v14 = *(_QWORD *)(v172 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v11 | v13) & 0xF8 | v15 | 7;
  v174 = v7 + v16;
  v17 = *(_QWORD *)(v8 + 64);
  v159 = v17 + 7;
  v160 = v10;
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17)
    v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v17 <= *(_QWORD *)(v10 + 64))
    v17 = *(_QWORD *)(v10 + 64);
  v167 = v12;
  v168 = *(_QWORD *)(v12 + 64) + v15;
  v169 = v8;
  if (*(_DWORD *)(v14 + 84))
    v18 = *(_QWORD *)(v14 + 64);
  else
    v18 = *(_QWORD *)(v14 + 64) + 1;
  __n = v18;
  v163 = v18 + 7;
  v19 = (v18 + 7 + (v168 & ~v15)) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v17 <= v20)
    v17 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v21 = ((((((v19 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v17 <= v21)
    v17 = v21;
  if (v17 <= 0x18)
    v22 = 24;
  else
    v22 = v17;
  v183 = (v22 + ((v7 + v16) & ~v16) + 8) & 0xFFFFFFFFFFFFFFF8;
  v23 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v165 = *(_QWORD *)(a3 + 24);
  v164 = *(_QWORD *)(v165 - 8);
  if (*(_QWORD *)(v164 + 64) <= 9uLL)
    v24 = 9;
  else
    v24 = *(_QWORD *)(v164 + 64);
  v25 = 8 * v24;
  if (v24 > 3)
    goto LABEL_23;
  v26 = ((1 << v25) + 1) >> v25;
  v27 = 2;
  if (v26 > 0xFFFD)
    v27 = 4;
  if (v26 <= 0xFD)
LABEL_23:
    v27 = 1;
  v28 = v27 + v24;
  if (v23 > v28)
    v28 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v28 <= 0x29)
    v28 = 41;
  v29 = *((unsigned __int8 *)a1 + v28);
  if (v29 >= 7)
  {
    if (v24 > 3)
      goto LABEL_33;
    v30 = ((1 << v25) + 1) >> v25;
    v31 = 2;
    if (v30 > 0xFFFD)
      v31 = 4;
    if (v30 <= 0xFD)
LABEL_33:
      v31 = 1;
    v32 = v31 + v24;
    if (v23 > v32)
      v32 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    if (v32 <= 0x29)
      LODWORD(v32) = 41;
    if (v32 <= 3)
      v33 = v32;
    else
      v33 = 4;
    __asm { BR              X15 }
  }
  v184 = v22 + 1;
  v173 = ~v16;
  v166 = ~v15;
  v185 = v22;
  switch(v29)
  {
    case 0u:
    case 1u:
    case 4u:
      goto LABEL_82;
    case 2u:
      (*(void (**)(id *, uint64_t))(v175 + 8))(a1, v178);
      v34 = ((unint64_t)a1 + v174) & v173;
      if (*(unsigned __int8 *)(v34 + v185) >= 8u)
      {
        if (v185 <= 3)
          v35 = v185;
        else
          v35 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v34 + v185))
      {
        case 0:
          goto LABEL_66;
        case 1:
          goto LABEL_67;
        case 2:
          goto LABEL_68;
        case 3:
          goto LABEL_69;
        case 4:
          goto LABEL_70;
        case 5:
          goto LABEL_71;
        case 6:
          goto LABEL_73;
        case 7:
          goto LABEL_76;
        default:
          goto LABEL_80;
      }
      goto LABEL_80;
    case 3u:
      (*(void (**)(id *, uint64_t))(v175 + 8))(a1, v178);
      v34 = ((unint64_t)a1 + v174) & v173;
      if (*(unsigned __int8 *)(v34 + v185) >= 8u)
      {
        if (v185 <= 3)
          v36 = v185;
        else
          v36 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v34 + v185))
      {
        case 0:
LABEL_66:
          v40 = (id *)v34;
          (*(void (**)(unint64_t, uint64_t))(v169 + 8))(v34, v171);
          goto LABEL_72;
        case 1:
LABEL_67:
          v40 = (id *)v34;
          (*(void (**)(unint64_t, uint64_t))(v169 + 8))(v34, v171);
          swift_release();
          goto LABEL_72;
        case 2:
LABEL_68:
          v40 = (id *)v34;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_72;
        case 3:
LABEL_69:
          v40 = (id *)v34;
          swift_unknownObjectRelease();
          goto LABEL_72;
        case 4:
LABEL_70:
          v40 = (id *)v34;
          (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v34, v161);
          goto LABEL_72;
        case 5:
LABEL_71:
          v40 = (id *)v34;

LABEL_72:
          v34 = (unint64_t)v40;
          break;
        case 6:
LABEL_73:
          v41 = (id *)v34;
          (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v34, v170);
          v42 = v41;
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v41 + v168) & v166, 1, v172))
            (*(void (**)(unint64_t, uint64_t))(v14 + 8))(((unint64_t)v41 + v168) & v166, v172);
          goto LABEL_79;
        case 7:
LABEL_76:
          v158 = (id *)v34;
          (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v34, v170);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v158 + v168) & v166, 1, v172))
            (*(void (**)(unint64_t, uint64_t))(v14 + 8))(((unint64_t)v158 + v168) & v166, v172);
          swift_bridgeObjectRelease();
          v42 = v158;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_79:
          swift_bridgeObjectRelease();
          v34 = (unint64_t)v42;
          break;
        default:
          break;
      }
LABEL_80:
      v43 = (((v34 | 7) + v184) & 0xFFFFFFFFFFFFFFF8) + 15;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v43 & 0xFFFFFFFFFFFFFFF8);
LABEL_82:
      swift_bridgeObjectRelease();
      goto LABEL_86;
    case 5u:
      if (v24 > 3)
        goto LABEL_54;
      v38 = ((1 << v25) + 1) >> v25;
      if (v38 > 0xFFFD)
      {
        v37 = *(_DWORD *)((char *)a1 + v24);
      }
      else if (v38 <= 0xFD)
      {
LABEL_54:
        v37 = *((unsigned __int8 *)a1 + v24);
      }
      else
      {
        v37 = *(unsigned __int16 *)((char *)a1 + v24);
      }
      if (v37 >= 2)
      {
        if (v24 <= 3)
          v39 = v24;
        else
          v39 = 4;
        __asm { BR              X12 }
      }
      if (v37 == 1)
LABEL_85:

      else
        (*(void (**)(id *, uint64_t))(v164 + 8))(a1, v165);
LABEL_86:
      if (v24 > 3)
        goto LABEL_90;
      v44 = ((1 << v25) + 1) >> v25;
      v45 = 2;
      if (v44 > 0xFFFD)
        v45 = 4;
      if (v44 <= 0xFD)
LABEL_90:
        v45 = 1;
      v46 = v45 + v24;
      if (v23 > v46)
        v46 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v46 <= 0x29)
        v46 = 41;
      if (*((unsigned __int8 *)a2 + v46) >= 7u)
      {
        if (v24 > 3)
          goto LABEL_100;
        v47 = ((1 << v25) + 1) >> v25;
        v48 = 2;
        if (v47 > 0xFFFD)
          v48 = 4;
        if (v47 <= 0xFD)
LABEL_100:
          v48 = 1;
        v49 = v48 + v24;
        if (v23 > v49)
          v49 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
        if (v49 <= 0x29)
          LODWORD(v49) = 41;
        if (v49 <= 3)
          v50 = v49;
        else
          v50 = 4;
        __asm { BR              X13 }
      }
      return result;
    case 6u:
      goto LABEL_85;
    default:
      goto LABEL_86;
  }
  switch(*((_BYTE *)a2 + v46))
  {
    case 0:
      v51 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v51;
      *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      if (v24 > 3)
        goto LABEL_114;
      v52 = ((1 << v25) + 1) >> v25;
      v53 = 2;
      if (v52 > 0xFFFD)
        v53 = 4;
      if (v52 <= 0xFD)
LABEL_114:
        v53 = 1;
      v54 = v53 + v24;
      if (v23 > v54)
        v54 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v54 <= 0x29)
        v54 = 41;
      *((_BYTE *)a1 + v54) = 0;
      return a1;
    case 1:
      v58 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v58;
      *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      if (v24 > 3)
        goto LABEL_134;
      v59 = ((1 << v25) + 1) >> v25;
      v60 = 2;
      if (v59 > 0xFFFD)
        v60 = 4;
      if (v59 <= 0xFD)
LABEL_134:
        v60 = 1;
      v61 = v60 + v24;
      if (v23 > v61)
        v61 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v61 <= 0x29)
        v61 = 41;
      v62 = 1;
      goto LABEL_264;
    case 2:
      (*(void (**)(id *, id *, uint64_t))(v175 + 32))(a1, a2, v178);
      v63 = ((unint64_t)a1 + v174) & v173;
      v64 = ((unint64_t)a2 + v174) & v173;
      if (*(unsigned __int8 *)(v64 + v185) >= 8u)
      {
        if (v185 <= 3)
          v65 = v185;
        else
          v65 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v64 + v185))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v169 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v171);
          *(_BYTE *)(v63 + v185) = 0;
          break;
        case 1:
          v77 = v185;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v169 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v171);
          *(_QWORD *)((v159 + v63) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v159 + v64) & 0xFFFFFFFFFFFFF8);
          v78 = 1;
          goto LABEL_188;
        case 2:
          v79 = *(_OWORD *)v64;
          *(_QWORD *)((((unint64_t)a1 + v174) & v173) + 0x10) = *(_QWORD *)((((unint64_t)a2 + v174) & v173)
                                                                                 + 0x10);
          *(_OWORD *)v63 = v79;
          v80 = 2;
          goto LABEL_190;
        case 3:
          *(_QWORD *)v63 = *(_QWORD *)v64;
          v80 = 3;
          goto LABEL_190;
        case 4:
          v77 = v185;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v160 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v161);
          v78 = 4;
LABEL_188:
          *(_BYTE *)(v63 + v77) = v78;
          break;
        case 5:
          *(_QWORD *)v63 = *(_QWORD *)v64;
          v80 = 5;
LABEL_190:
          *(_BYTE *)(v63 + v185) = v80;
          break;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v167 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v170);
          v179 = (void *)((v168 + v63) & v166);
          v81 = (const void *)((v168 + v64) & v166);
          if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v172))
          {
            v82 = (v168 + v63) & v166;
            memcpy(v179, v81, __n);
          }
          else
          {
            v96 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
            v82 = (v168 + v63) & v166;
            v96(v179, v81, v172);
            __swift_storeEnumTagSinglePayload((uint64_t)v179, 0, 1, v172);
          }
          v97 = (_OWORD *)((v163 + v82) & 0xFFFFFFFFFFFFFFF8);
          v98 = (_OWORD *)(((unint64_t)v81 + v163) & 0xFFFFFFFFFFFFFFF8);
          *v97 = *v98;
          v99 = ((unint64_t)v97 + 19) & 0xFFFFFFFFFFFFFFF8;
          v100 = ((unint64_t)v98 + 19) & 0xFFFFFFFFFFFFFFF8;
          v101 = *(_DWORD *)v100;
          *(_BYTE *)(v99 + 4) = *(_BYTE *)(v100 + 4);
          *(_DWORD *)v99 = v101;
          v102 = 6;
          goto LABEL_229;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v167 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v170);
          v176 = (void *)((v168 + v63) & v166);
          v180 = (const void *)((v168 + v64) & v166);
          if (__swift_getEnumTagSinglePayload((uint64_t)v180, 1, v172))
          {
            v84 = (v168 + v63) & v166;
            v83 = (v168 + v64) & v166;
            memcpy(v176, v180, __n);
          }
          else
          {
            v103 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
            v84 = (v168 + v63) & v166;
            v103(v176, v180, v172);
            v83 = (v168 + v64) & v166;
            __swift_storeEnumTagSinglePayload((uint64_t)v176, 0, 1, v172);
          }
          v104 = (_OWORD *)((v163 + v84) & 0xFFFFFFFFFFFFFFF8);
          v105 = (_OWORD *)((v163 + v83) & 0xFFFFFFFFFFFFFFF8);
          *v104 = *v105;
          v106 = ((unint64_t)v104 + 19) & 0xFFFFFFFFFFFFFFF8;
          v107 = ((unint64_t)v105 + 19) & 0xFFFFFFFFFFFFFFF8;
          v108 = *(_DWORD *)v107;
          *(_BYTE *)(v106 + 4) = *(_BYTE *)(v107 + 4);
          *(_DWORD *)v106 = v108;
          v109 = (_OWORD *)(((v63 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          v110 = (_OWORD *)(((v64 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *v109 = *v110;
          v111 = (_OWORD *)(((unint64_t)v109 + 23) & 0xFFFFFFFFFFFFFFF8);
          v112 = (_OWORD *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v111 = *v112;
          *(_OWORD *)(((unint64_t)v111 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFF8);
          v102 = 7;
LABEL_229:
          *(_BYTE *)(v63 + v185) = v102;
          break;
        default:
          memcpy((void *)(((unint64_t)a1 + v174) & v173), (const void *)(((unint64_t)a2 + v174) & v173), v184);
          break;
      }
      v113 = (_QWORD *)(((v63 | 7) + v184) & 0xFFFFFFFFFFFFF8);
      v114 = (_QWORD *)(((v64 | 7) + v184) & 0xFFFFFFFFFFFFFFF8);
      *v113 = *v114;
      v115 = ((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8;
      v116 = ((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8;
      v117 = *(_OWORD *)v116;
      v118 = *(_OWORD *)(v116 + 16);
      *(_QWORD *)(v115 + 32) = *(_QWORD *)(v116 + 32);
      *(_OWORD *)v115 = v117;
      *(_OWORD *)(v115 + 16) = v118;
      *(_BYTE *)(v115 + 40) = *(_BYTE *)(v116 + 40);
      v119 = ((v183 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v120 = (_OWORD *)(((unint64_t)a1 + v119 + 7) & 0xFFFFFFFFFFFFFFF8);
      v121 = (__int128 *)(((unint64_t)a2 + v119 + 7) & 0xFFFFFFFFFFFFFFF8);
      v122 = *v121;
      v123 = v121[1];
      *(_OWORD *)((char *)v120 + 25) = *(__int128 *)((char *)v121 + 25);
      *v120 = v122;
      v120[1] = v123;
      if (v24 > 3)
        goto LABEL_234;
      v124 = ((1 << v25) + 1) >> v25;
      v125 = 2;
      if (v124 > 0xFFFD)
        v125 = 4;
      if (v124 <= 0xFD)
LABEL_234:
        v125 = 1;
      v61 = v125 + v24;
      if (v23 > v61)
        v61 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v61 <= 0x29)
        v61 = 41;
      v62 = 2;
      goto LABEL_264;
    case 3:
      (*(void (**)(id *, id *, uint64_t))(v175 + 32))(a1, a2, v178);
      v66 = ((unint64_t)a1 + v174) & v173;
      v67 = ((unint64_t)a2 + v174) & v173;
      if (*(unsigned __int8 *)(v67 + v185) >= 8u)
      {
        if (v185 <= 3)
          v68 = v185;
        else
          v68 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v67 + v185))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v169 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v171);
          *(_BYTE *)(v66 + v185) = 0;
          break;
        case 1:
          v85 = v185;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v169 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v171);
          *(_QWORD *)((v159 + v66) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v159 + v67) & 0xFFFFFFFFFFFFF8);
          v86 = 1;
          goto LABEL_202;
        case 2:
          v87 = *(_OWORD *)v67;
          *(_QWORD *)((((unint64_t)a1 + v174) & v173) + 0x10) = *(_QWORD *)((((unint64_t)a2 + v174) & v173)
                                                                                 + 0x10);
          *(_OWORD *)v66 = v87;
          v88 = 2;
          goto LABEL_204;
        case 3:
          *(_QWORD *)v66 = *(_QWORD *)v67;
          v88 = 3;
          goto LABEL_204;
        case 4:
          v85 = v185;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v160 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v161);
          v86 = 4;
LABEL_202:
          *(_BYTE *)(v66 + v85) = v86;
          break;
        case 5:
          *(_QWORD *)v66 = *(_QWORD *)v67;
          v88 = 5;
LABEL_204:
          *(_BYTE *)(v66 + v185) = v88;
          break;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v167 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v170);
          v181 = (void *)((v168 + v66) & v166);
          v89 = (const void *)((v168 + v67) & v166);
          if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v172))
          {
            v90 = (v168 + v66) & v166;
            memcpy(v181, v89, __n);
          }
          else
          {
            v126 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
            v90 = (v168 + v66) & v166;
            v126(v181, v89, v172);
            __swift_storeEnumTagSinglePayload((uint64_t)v181, 0, 1, v172);
          }
          v127 = (_OWORD *)((v163 + v90) & 0xFFFFFFFFFFFFFFF8);
          v128 = (_OWORD *)(((unint64_t)v89 + v163) & 0xFFFFFFFFFFFFFFF8);
          *v127 = *v128;
          v129 = ((unint64_t)v127 + 19) & 0xFFFFFFFFFFFFFFF8;
          v130 = ((unint64_t)v128 + 19) & 0xFFFFFFFFFFFFFFF8;
          v131 = *(_DWORD *)v130;
          *(_BYTE *)(v129 + 4) = *(_BYTE *)(v130 + 4);
          *(_DWORD *)v129 = v131;
          v132 = 6;
          goto LABEL_244;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v167 + 32))(((unint64_t)a1 + v174) & v173, ((unint64_t)a2 + v174) & v173, v170);
          v177 = (void *)((v168 + v66) & v166);
          v182 = (const void *)((v168 + v67) & v166);
          if (__swift_getEnumTagSinglePayload((uint64_t)v182, 1, v172))
          {
            v92 = (v168 + v66) & v166;
            v91 = (v168 + v67) & v166;
            memcpy(v177, v182, __n);
          }
          else
          {
            v133 = *(void (**)(void *, const void *, uint64_t))(v14 + 32);
            v92 = (v168 + v66) & v166;
            v133(v177, v182, v172);
            v91 = (v168 + v67) & v166;
            __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, v172);
          }
          v134 = (_OWORD *)((v163 + v92) & 0xFFFFFFFFFFFFFFF8);
          v135 = (_OWORD *)((v163 + v91) & 0xFFFFFFFFFFFFFFF8);
          *v134 = *v135;
          v136 = ((unint64_t)v134 + 19) & 0xFFFFFFFFFFFFFFF8;
          v137 = ((unint64_t)v135 + 19) & 0xFFFFFFFFFFFFFFF8;
          v138 = *(_DWORD *)v137;
          *(_BYTE *)(v136 + 4) = *(_BYTE *)(v137 + 4);
          *(_DWORD *)v136 = v138;
          v139 = (_OWORD *)(((v66 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          v140 = (_OWORD *)(((v67 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *v139 = *v140;
          v141 = (_OWORD *)(((unint64_t)v139 + 23) & 0xFFFFFFFFFFFFFFF8);
          v142 = (_OWORD *)(((unint64_t)v140 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v141 = *v142;
          *(_OWORD *)(((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v142 + 23) & 0xFFFFFFFFFFFFF8);
          v132 = 7;
LABEL_244:
          *(_BYTE *)(v66 + v185) = v132;
          break;
        default:
          memcpy((void *)(((unint64_t)a1 + v174) & v173), (const void *)(((unint64_t)a2 + v174) & v173), v184);
          break;
      }
      v143 = (_QWORD *)(((v66 | 7) + v184) & 0xFFFFFFFFFFFFF8);
      v144 = (_QWORD *)(((v67 | 7) + v184) & 0xFFFFFFFFFFFFFFF8);
      *v143 = *v144;
      v145 = ((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8;
      v146 = ((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8;
      v147 = *(_OWORD *)v146;
      v148 = *(_OWORD *)(v146 + 16);
      *(_QWORD *)(v145 + 32) = *(_QWORD *)(v146 + 32);
      *(_OWORD *)v145 = v147;
      *(_OWORD *)(v145 + 16) = v148;
      *(_BYTE *)(v145 + 40) = *(_BYTE *)(v146 + 40);
      v149 = ((v183 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v150 = (_OWORD *)(((unint64_t)a1 + v149 + 7) & 0xFFFFFFFFFFFFFFF8);
      v151 = (__int128 *)(((unint64_t)a2 + v149 + 7) & 0xFFFFFFFFFFFFFFF8);
      v152 = *v151;
      v153 = v151[1];
      *(_OWORD *)((char *)v150 + 25) = *(__int128 *)((char *)v151 + 25);
      *v150 = v152;
      v150[1] = v153;
      if (v24 > 3)
        goto LABEL_249;
      v154 = ((1 << v25) + 1) >> v25;
      v155 = 2;
      if (v154 > 0xFFFD)
        v155 = 4;
      if (v154 <= 0xFD)
LABEL_249:
        v155 = 1;
      v61 = v155 + v24;
      if (v23 > v61)
        v61 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v61 <= 0x29)
        v61 = 41;
      v62 = 3;
      goto LABEL_264;
    case 4:
      v69 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v69;
      *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      if (v24 > 3)
        goto LABEL_154;
      v70 = ((1 << v25) + 1) >> v25;
      v71 = 2;
      if (v70 > 0xFFFD)
        v71 = 4;
      if (v70 <= 0xFD)
LABEL_154:
        v71 = 1;
      v61 = v71 + v24;
      if (v23 > v61)
        v61 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v61 <= 0x29)
        v61 = 41;
      v62 = 4;
      goto LABEL_264;
    case 5:
      if (v24 > 3)
        goto LABEL_161;
      v75 = ((1 << v25) + 1) >> v25;
      if (v75 > 0xFFFD)
      {
        v72 = *(_DWORD *)((char *)a2 + v24);
      }
      else if (v75 <= 0xFD)
      {
LABEL_161:
        v72 = *((unsigned __int8 *)a2 + v24);
      }
      else
      {
        v72 = *(unsigned __int16 *)((char *)a2 + v24);
      }
      if (v72 >= 2)
      {
        if (v24 <= 3)
          v76 = v24;
        else
          v76 = 4;
        __asm { BR              X12 }
      }
      if (v72 != 1)
      {
        (*(void (**)(id *, id *, uint64_t))(v164 + 32))(a1, a2, v165);
        if (v24 > 3)
        {
LABEL_213:
          *((_BYTE *)a1 + v24) = 0;
LABEL_218:
          if (v24 > 3)
            goto LABEL_222;
          v94 = ((1 << v25) + 1) >> v25;
          v95 = 2;
          if (v94 > 0xFFFD)
            v95 = 4;
          if (v94 <= 0xFD)
LABEL_222:
            v95 = 1;
          goto LABEL_259;
        }
        v93 = ((1 << v25) + 1) >> v25;
        if (v93 > 0xFFFD)
        {
          *(_DWORD *)((char *)a1 + v24) = 0;
        }
        else
        {
          if (v93 <= 0xFD)
            goto LABEL_213;
          *(_WORD *)((char *)a1 + v24) = 0;
        }
        goto LABEL_257;
      }
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      if (v24 > 3)
        goto LABEL_217;
      v93 = ((1 << v25) + 1) >> v25;
      if (v93 > 0xFFFD)
      {
        *(_DWORD *)((char *)a1 + v24) = 1;
      }
      else
      {
        if (v93 <= 0xFD)
        {
LABEL_217:
          *((_BYTE *)a1 + v24) = 1;
          goto LABEL_218;
        }
        *(_WORD *)((char *)a1 + v24) = 1;
      }
LABEL_257:
      v156 = v93 > 0xFFFD;
      v95 = 2;
      if (v156)
        v95 = 4;
LABEL_259:
      v61 = v95 + v24;
      if (v23 > v61)
        v61 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v61 <= 0x29)
        v61 = 41;
      v62 = 5;
LABEL_264:
      *((_BYTE *)a1 + v61) = v62;
      return a1;
    case 6:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      if (v24 > 3)
        goto LABEL_166;
      v73 = ((1 << v25) + 1) >> v25;
      v74 = 2;
      if (v73 > 0xFFFD)
        v74 = 4;
      if (v73 <= 0xFD)
LABEL_166:
        v74 = 1;
      v61 = v74 + v24;
      if (v23 > v61)
        v61 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v61 <= 0x29)
        v61 = 41;
      v62 = 6;
      goto LABEL_264;
    default:
      if (v24 > 3)
        goto LABEL_124;
      v55 = ((1 << v25) + 1) >> v25;
      v56 = 2;
      if (v55 > 0xFFFD)
        v56 = 4;
      if (v55 <= 0xFD)
LABEL_124:
        v56 = 1;
      v57 = v56 + v24;
      if (v23 > v57)
        v57 = ((v183 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v57 <= 0x29)
        v57 = 41;
      memcpy(a1, a2, v57 + 1);
      return a1;
  }
}

uint64_t sub_1C2B550C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  unsigned int v39;

  v6 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v7 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v11 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v10 | v12) & 0xF8 | v14 | 7;
  v16 = (v6 + v15) & ~v15;
  v17 = *(_QWORD *)(v7 + 64);
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17)
    v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v17 <= *(_QWORD *)(v9 + 64))
    v17 = *(_QWORD *)(v9 + 64);
  v18 = *(_DWORD *)(v13 + 84);
  v19 = *(_QWORD *)(v13 + 64) + ((*(_QWORD *)(v11 + 64) + v14) & ~v14);
  if (!v18)
    ++v19;
  v20 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v17 > v21)
    v21 = v17;
  v22 = ((((((v20 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 > v22)
    v22 = v21;
  if (v22 <= 0x18)
    v22 = 24;
  v23 = ((((v16 + v22 + 8) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v24 <= 9)
    v24 = 9;
  v25 = 8 * v24;
  if (v24 > 3)
    goto LABEL_19;
  v26 = ((1 << v25) + 1) >> v25;
  v27 = 2;
  if (v26 > 0xFFFD)
    v27 = 4;
  if (v26 <= 0xFD)
LABEL_19:
    v27 = 1;
  v28 = v27 + v24;
  if (v23 > v28)
    v28 = v23;
  if (v28 <= 0x29)
    v28 = 41;
  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_44;
  v29 = v28 + 1;
  v30 = 8 * v29;
  if (v29 <= 3)
  {
    v33 = ((a2 + ~(-1 << v30) - 248) >> v30) + 1;
    if (HIWORD(v33))
    {
      v31 = *(_DWORD *)(a1 + v29);
      if (!v31)
        goto LABEL_44;
      goto LABEL_35;
    }
    if (v33 > 0xFF)
    {
      v31 = *(unsigned __int16 *)(a1 + v29);
      if (!*(_WORD *)(a1 + v29))
        goto LABEL_44;
      goto LABEL_35;
    }
    if (v33 < 2)
    {
LABEL_44:
      if (v24 > 3)
        goto LABEL_48;
      v36 = ((1 << v25) + 1) >> v25;
      v37 = 2;
      if (v36 > 0xFFFD)
        v37 = 4;
      if (v36 <= 0xFD)
LABEL_48:
        v37 = 1;
      v38 = v37 + v24;
      if (v23 <= v38)
        v23 = v38;
      if (v23 <= 0x29)
        v23 = 41;
      v39 = *(unsigned __int8 *)(a1 + v23);
      if (v39 >= 8)
        return (v39 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v31 = *(unsigned __int8 *)(a1 + v29);
  if (!*(_BYTE *)(a1 + v29))
    goto LABEL_44;
LABEL_35:
  v34 = (v31 - 1) << v30;
  if (v29 > 3)
    v34 = 0;
  if ((_DWORD)v29)
  {
    if (v29 <= 3)
      v35 = v29;
    else
      v35 = 4;
    __asm { BR              X11 }
  }
  return (v34 + 249);
}

void sub_1C2B553D8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  size_t v30;
  char v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;

  v8 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v9 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v12 = *(_DWORD *)(v11 + 80) | v10;
  v13 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v12 | v14) & 0xF8 | v16 | 7;
  v18 = (v8 + v17) & ~v17;
  v19 = *(_QWORD *)(v9 + 64);
  if (((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
    v19 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19 <= *(_QWORD *)(v11 + 64))
    v19 = *(_QWORD *)(v11 + 64);
  v20 = *(_DWORD *)(v15 + 84);
  v21 = *(_QWORD *)(v15 + 64) + ((*(_QWORD *)(v13 + 64) + v16) & ~v16);
  if (!v20)
    ++v21;
  v22 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v19 > v23)
    v23 = v19;
  v24 = ((((((v22 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 > v24)
    v24 = v23;
  if (v24 <= 0x18)
    v24 = 24;
  v25 = ((((v18 + v24 + 8) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v26 <= 9)
    v26 = 9;
  if (v26 > 3)
    goto LABEL_19;
  v27 = ((1 << (8 * v26)) + 1) >> (8 * v26);
  v28 = 2;
  if (v27 > 0xFFFD)
    v28 = 4;
  if (v27 <= 0xFD)
LABEL_19:
    v28 = 1;
  v29 = v28 + v26;
  if (v25 > v29)
    v29 = v25;
  if (v29 <= 0x29)
    v29 = 41;
  v30 = v29 + 1;
  v31 = 8 * (v29 + 1);
  if (a3 < 0xF9)
  {
    v32 = 0u;
  }
  else if (v30 <= 3)
  {
    v34 = ((a3 + ~(-1 << v31) - 248) >> v31) + 1;
    if (HIWORD(v34))
    {
      v32 = 4u;
    }
    else if (v34 >= 0x100)
    {
      v32 = 2;
    }
    else
    {
      v32 = v34 > 1;
    }
  }
  else
  {
    v32 = 1u;
  }
  if (a2 <= 0xF8)
    __asm { BR              X13 }
  v33 = a2 - 249;
  if (v30 < 4)
  {
    if ((_DWORD)v30)
    {
      v35 = v33 & ~(-1 << v31);
      bzero(a1, v30);
      if ((_DWORD)v30 == 3)
      {
        *(_WORD *)a1 = v35;
        a1[2] = BYTE2(v35);
      }
      else if ((_DWORD)v30 == 2)
      {
        *(_WORD *)a1 = v35;
      }
      else
      {
        *a1 = v35;
      }
    }
  }
  else
  {
    bzero(a1, v30);
    *(_DWORD *)a1 = v33;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2B55750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v5 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v8 = *(_DWORD *)(v7 + 80) | v6;
  v9 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 | v10) & 0xF8 | v12 | 7;
  v14 = (v4 + v13) & ~v13;
  v15 = *(_QWORD *)(v5 + 64);
  if (((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v15)
    v15 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v15 <= *(_QWORD *)(v7 + 64))
    v15 = *(_QWORD *)(v7 + 64);
  v16 = *(_DWORD *)(v11 + 84);
  v17 = *(_QWORD *)(v11 + 64) + ((*(_QWORD *)(v9 + 64) + v12) & ~v12);
  if (!v16)
    ++v17;
  v18 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v15 > v19)
    v19 = v15;
  v20 = ((((((v18 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 > v20)
    v20 = v19;
  if (v20 <= 0x18)
    v20 = 24;
  v21 = ((((v14 + v20 + 8) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v22 = 9;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64) > 9uLL)
    v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  v23 = 8 * v22;
  if (v22 > 3)
    goto LABEL_19;
  v24 = ((1 << v23) + 1) >> v23;
  v25 = 2;
  if (v24 > 0xFFFD)
    v25 = 4;
  if (v24 <= 0xFD)
LABEL_19:
    v25 = 1;
  v26 = v25 + v22;
  if (v21 > v26)
    v26 = v21;
  if (v26 <= 0x29)
    v26 = 41;
  result = *(unsigned __int8 *)(a1 + v26);
  if (result >= 7)
  {
    if (v22 > 3)
      goto LABEL_29;
    v28 = ((1 << v23) + 1) >> v23;
    v29 = 2;
    if (v28 > 0xFFFD)
      v29 = 4;
    if (v28 <= 0xFD)
LABEL_29:
      v29 = 1;
    v30 = v29 + v22;
    if (v21 <= v30)
      v21 = v30;
    if (v21 <= 0x29)
      LODWORD(v21) = 41;
    if (v21 <= 3)
      v31 = v21;
    else
      v31 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_1C2B559CC(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  size_t v41;
  int v42;

  v6 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v7 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v11 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v12 = *(_DWORD *)(v11 + 80);
  result = sub_1C2CFBF28();
  v14 = *(_QWORD *)(result - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v10 | v12) & 0xF8 | v15 | 7;
  v17 = (v6 + v16) & ~v16;
  v18 = *(_QWORD *)(v7 + 64);
  if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18)
    v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v18 <= *(_QWORD *)(v9 + 64))
    v18 = *(_QWORD *)(v9 + 64);
  v19 = *(_DWORD *)(v14 + 84);
  v20 = *(_QWORD *)(v14 + 64) + ((*(_QWORD *)(v11 + 64) + v15) & ~v15);
  if (!v19)
    ++v20;
  v21 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v18 > v22)
    v22 = v18;
  v23 = ((((((v21 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v22 > v23)
    v23 = v22;
  if (v23 <= 0x18)
    v23 = 24;
  v24 = ((((v17 + v23 + 8) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v25 <= 9)
    v25 = 9;
  if (a2 > 6)
  {
    v29 = 8 * v25;
    if (v25 > 3)
      goto LABEL_30;
    v30 = ((1 << v29) + 1) >> v29;
    v31 = 2;
    if (v30 > 0xFFFD)
      v31 = 4;
    if (v30 <= 0xFD)
LABEL_30:
      v31 = 1;
    v32 = v31 + v25;
    if (v24 > v32)
      v32 = v24;
    if (v32 <= 0x29)
      LODWORD(v32) = 41;
    v33 = v32 > 3;
    v34 = ((a2 - 7) >> (8 * v32)) + 7;
    if (v33)
      LOBYTE(v34) = 7;
    if (v25 > 3)
      goto LABEL_41;
    v35 = ((1 << v29) + 1) >> v29;
    v36 = 2;
    if (v35 > 0xFFFD)
      v36 = 4;
    if (v35 <= 0xFD)
LABEL_41:
      v36 = 1;
    v37 = v36 + v25;
    if (v24 > v37)
      v37 = v24;
    if (v37 <= 0x29)
      v37 = 41;
    a1[v37] = v34;
    if (v25 > 3)
      goto LABEL_50;
    v38 = ((1 << v29) + 1) >> v29;
    v39 = 2;
    if (v38 > 0xFFFD)
      v39 = 4;
    if (v38 <= 0xFD)
LABEL_50:
      v39 = 1;
    v40 = v39 + v25;
    if (v24 <= v40)
      v24 = v40;
    if (v24 <= 0x29)
      v41 = 41;
    else
      v41 = v24;
    if (v41 >= 4)
      v42 = 4;
    else
      v42 = v41;
    bzero(a1, v41);
    __asm { BR              X10 }
  }
  if (v25 > 3)
    goto LABEL_20;
  v26 = ((1 << (8 * v25)) + 1) >> (8 * v25);
  v27 = 2;
  if (v26 > 0xFFFD)
    v27 = 4;
  if (v26 <= 0xFD)
LABEL_20:
    v27 = 1;
  v28 = v27 + v25;
  if (v24 <= v28)
    v24 = v28;
  if (v24 <= 0x29)
    v24 = 41;
  a1[v24] = a2;
  return result;
}

uint64_t sub_1C2B55D18()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1C2B55D88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 9uLL)
    v5 = 9;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    sub_1C2CFD350();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      *(_QWORD *)a1 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_BYTE *)(a1 + v5) = 1;
    }
    else
    {
      (*(void (**)(uint64_t))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1C2B55EA4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 9)
    v3 = 9;
  v4 = *(unsigned __int8 *)(result + v3);
  if (v4 < 2)
  {
    if (v4 != 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1C2B55EEC + 4 * byte_1C2D16122[v5]))();
  }
  return result;
}

uint64_t sub_1C2B55F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 9uLL)
    v5 = 9;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(v4 + 16))(a1);
    v8 = 0;
  }
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1C2B5601C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if ((uint64_t *)a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 9uLL)
      v7 = 9;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 != 1)
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 24));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_QWORD *)a1 = v12;
      v13 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      v13 = 0;
    }
    *(_BYTE *)(a1 + v7) = v13;
  }
  return a1;
}

uint64_t sub_1C2B561A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 9uLL)
    v5 = 9;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v8 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(v4 + 32))(a1);
    v8 = 0;
  }
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1C2B56280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 9uLL)
      v7 = 9;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 != 1)
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 24));
    v10 = *(unsigned __int8 *)(a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v12 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *(_BYTE *)(a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1C2B56408(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 9;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) > 9uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B564CC + 4 * byte_1C2D16145[(v4 - 1)]))();
}

void sub_1C2B56518(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v5 <= 9)
    v5 = 9;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2B566BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 9;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64) > 9uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B56704 + 4 * byte_1C2D16153[v3]))();
}

void sub_1C2B5674C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) <= 9uLL)
    v4 = 9;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1C2B56814()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_133_8();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_72_23(v1);
  return sub_1C2B4C470(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C2B56870()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B4C7EC(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B568BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B4CA08(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B56908()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B4CC7C(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B56954()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_67_19();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_29_41(v1);
  return sub_1C2B4CE28(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B569A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B4D018(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B569F4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B4D11C(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C2B56A0C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B4CF20(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C2B56A20(uint64_t a1)
{
  return sub_1C2B43F7C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2B4CD14);
}

uint64_t sub_1C2B56A30(uint64_t a1)
{
  return sub_1C2B43F7C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2B4CAE4);
}

uint64_t sub_1C2B56A40(uint64_t a1)
{
  return sub_1C2B43F7C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2B4C8F4);
}

void sub_1C2B56A50(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  sub_1C2B4CBF8(a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B56A90(uint64_t a1)
{
  uint64_t v1;

  return sub_1C2B4C5E0(a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(__int128 **)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C2B56AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for DisambiguationResult(255, *(_QWORD *)(v4 + 24), a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v5 = sub_1C2CFE0DC();
  OUTLINED_FUNCTION_11_2(*(_QWORD *)(v5 - 8));
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2B56B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  type metadata accessor for DisambiguationResult(255, v7, a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C2CFE0DC() - 8) + 80);
  return sub_1C2B4C784(a1, v4 + ((v8 + 48) & ~v8), v6, v7);
}

uint64_t sub_1C2B56BA8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2B56BD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B4C1DC(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B56C1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_67_19();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_29_41(v1);
  return sub_1C2B3C4B0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B56C70()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B4C038(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B56CBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B4BF0C(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B56D08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_12_65();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_26_37(v1);
  OUTLINED_FUNCTION_174();
  return sub_1C2B4BDE0(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B56D54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_133_8();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_72_23(v1);
  return sub_1C2B4BC6C(v2, v3, v4, v5, v6, v7, v8, v9);
}

void sub_1C2B56DB0()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 40) + 24))(*(_QWORD *)(v0 + 32));
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B56DD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B4B5E8(v2, v3);
}

uint64_t sub_1C2B56E18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_164();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_86(v1);
  *v2 = v0;
  v2[1] = sub_1C28BCB84;
  v3 = OUTLINED_FUNCTION_66();
  return sub_1C2B4B64C(v3, v4, v5);
}

uint64_t sub_1C2B56E68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_164();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_86(v1);
  *v2 = v0;
  v2[1] = sub_1C28BCB84;
  v3 = OUTLINED_FUNCTION_66();
  return sub_1C2B4B520(v3, v4, v5);
}

uint64_t sub_1C2B56EB8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_164();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_86(v1);
  *v2 = v0;
  v2[1] = sub_1C28BCB84;
  v3 = OUTLINED_FUNCTION_66();
  return sub_1C2B4B584(v3, v4, v5);
}

void sub_1C2B56F08(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_303(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_195_1();
  v5(v4, v3);
  OUTLINED_FUNCTION_1_0();
}

uint64_t OUTLINED_FUNCTION_11_61()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 296);
  *(_QWORD *)v2 = v0;
  *(_BYTE *)(v2 + 8) = 0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_16_49()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_56@<X0>(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;

  *(__n128 *)(v4 + 24) = a2;
  *(_BYTE *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 48) = v2;
  *(_BYTE *)(v4 + 56) = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_34_42()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_55_20()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_58_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C28DF498(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_61_22()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 224);
  *(_QWORD *)v0 = *(_QWORD *)(v3 - 192);
  *(_QWORD *)(v0 + 8) = v4;
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v3 - 216);
  *(_BYTE *)(v0 + 24) = *(_DWORD *)(v3 - 204);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v3 - 200);
  *(_BYTE *)(v0 + 40) = v2;
  return v1;
}

uint64_t OUTLINED_FUNCTION_74_16()
{
  return swift_dynamicCast();
}

__n128 OUTLINED_FUNCTION_78_18@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)(a1 + 8);
}

__n128 OUTLINED_FUNCTION_84_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  *(_QWORD *)(v3 + 112) = a1;
  result = *(__n128 *)(v3 + 80);
  v5 = *(_OWORD *)(v3 + 96);
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = v2;
  *(_QWORD *)(a1 + 56) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_86_15()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 416) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_87_15()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_96_13()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_113_10()
{
  sub_1C28E990C();
}

__n128 OUTLINED_FUNCTION_123_11()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 80);
  result = *(__n128 *)(v1 + 25);
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 32) = v3;
  *(__n128 *)(v0 + 41) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_124_9()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_127_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for DisambiguationResult.DisambiguationResultType(0, a2, a2, a4);
}

uint64_t OUTLINED_FUNCTION_131_9()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_140_8()
{
  return 0;
}

__n128 OUTLINED_FUNCTION_150_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __n128 result;

  *(_QWORD *)(v2 + 128) = a1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v3;
  result = *(__n128 *)(v1 + 25);
  *(__n128 *)(v2 + 41) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_151_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_1C2CFC114();
}

void OUTLINED_FUNCTION_152_4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1C28BB37C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_161_3()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_163_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_166_3()
{
  return sub_1C2CFBF70();
}

uint64_t OUTLINED_FUNCTION_167_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for DisambiguationResult.DisambiguationResultType(0, v4, v4, a4);
}

uint64_t OUTLINED_FUNCTION_168_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for PromptForDisambiguationFlowAsync.State(0, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_175_4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_179_3()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C28C516C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_181_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_182_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_185_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for PaginatedItemContainer(255, *(_QWORD *)(v4 - 176), a3, a4);
}

uint64_t OUTLINED_FUNCTION_190_2()
{
  return sub_1C2CFBF4C();
}

void OUTLINED_FUNCTION_191_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1C28BB37C(*(_QWORD *)(v2 - 216), a2);
}

uint64_t OUTLINED_FUNCTION_192_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_193_1()
{
  uint64_t v0;

  return sub_1C2B47230(v0);
}

uint64_t OUTLINED_FUNCTION_195_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_196_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C28B9A48(v2, a2);
}

uint64_t OUTLINED_FUNCTION_198_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_202_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_203_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_205_2()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_207_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_208_0()
{
  return sub_1C2CFBF34();
}

uint64_t OUTLINED_FUNCTION_211_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 64);
}

void OUTLINED_FUNCTION_215_1(char a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;

  *(__n128 *)(v4 + 24) = a2;
  *(_BYTE *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 48) = v2;
  *(_BYTE *)(v4 + 56) = a1;
}

double OUTLINED_FUNCTION_216_2()
{
  return sub_1C28C1A54();
}

void sub_1C2B573B4(uint64_t a1)
{
  PromptForValueFlowStrategy.makeRepromptOnLowConfidence(_:)(a1);
}

void PromptForValueFlowStrategy.makeRepromptOnLowConfidence(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v7);
  v8 = OUTLINED_FUNCTION_5_2();
  v9 = (_QWORD *)OUTLINED_FUNCTION_54_0(v8);
  OUTLINED_FUNCTION_10_2(v9, (uint64_t)&unk_1EF79A460);
  if ((_DWORD)a1 == 1)
  {
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (a1)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      v2 = 0;
      v3 = 0;
    }
  }
  v10 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v10 + 16) = &unk_1EF789CD8;
  *(_QWORD *)(v10 + 24) = v1;
  if (v3 | v2)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B574C4(uint64_t a1)
{
  PromptForValueFlowStrategy.makeFlowCancelledResponse(_:)(a1);
}

void PromptForValueFlowStrategy.makeFlowCancelledResponse(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v5, v6);
  v7 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v7);
  v8 = OUTLINED_FUNCTION_5_2();
  v9 = (_QWORD *)OUTLINED_FUNCTION_54_0(v8);
  OUTLINED_FUNCTION_10_2(v9, (uint64_t)&unk_1EF79A468);
  if ((_DWORD)a1 == 1)
  {
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (a1)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      v2 = 0;
      v3 = 0;
    }
  }
  v10 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v10 + 16) = &unk_1EF789CF0;
  *(_QWORD *)(v10 + 24) = v1;
  if (v3 | v2)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B575D4(uint64_t a1, uint64_t a2)
{
  PromptForValueFlowStrategy.makeErrorResponse(_:_:)(a1, a2);
}

void PromptForValueFlowStrategy.makeErrorResponse(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v6, v7);
  v8 = OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_24_2(v8);
  v9 = OUTLINED_FUNCTION_5_2();
  v10 = (_QWORD *)OUTLINED_FUNCTION_54_0(v9);
  OUTLINED_FUNCTION_10_2(v10, (uint64_t)&unk_1EF79A470);
  if ((_DWORD)a2 == 1)
  {
    OUTLINED_FUNCTION_125();
    OUTLINED_FUNCTION_53_0();
  }
  else
  {
    sub_1C2CFE100();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_52_3();
    if (a2)
    {
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_36();
      OUTLINED_FUNCTION_37_1();
    }
    else
    {
      v3 = 0;
      v4 = 0;
    }
  }
  v11 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v11 + 16) = &unk_1EF789D08;
  *(_QWORD *)(v11 + 24) = v2;
  if (v4 | v3)
    OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_42();
  swift_release();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B576E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()();
}

uint64_t PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t sub_1C2B57794()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()();
}

uint64_t PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18600(v2);
}

uint64_t sub_1C2B57828()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28E1BA0;
  return PromptForValueFlowStrategyAsync.makeFlowCancelledResponse()();
}

uint64_t PromptForValueFlowStrategyAsync.makeFlowCancelledResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18D94(v2);
}

uint64_t sub_1C2B578BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C28BCB84;
  return PromptForValueFlowStrategyAsync.makeErrorResponse(_:)();
}

uint64_t PromptForValueFlowStrategyAsync.makeErrorResponse(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return sub_1C2A18AF4(v2);
}

uint64_t PromptForValueFlowStrategyAsync.actionForInputWrapper(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B57968()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

void PromptForValueFlow.exitValue.getter(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  PromptForValueFlowAsync.exitValue.getter(a1, a2, a3);
  OUTLINED_FUNCTION_1_0();
}

uint64_t PromptForValueFlowAsync.exitValue.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *v3;
  v6 = type metadata accessor for PromptForValueFlowAsync.State(0, *(_QWORD *)(*v3 + 80), a1, a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6, v8);
  v10 = (char *)&v23 - v9;
  v11 = (uint64_t)v3 + *(_QWORD *)(v5 + 112);
  OUTLINED_FUNCTION_78_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 3)
  {
    v18 = v10[8];
    *(_QWORD *)a3 = *(_QWORD *)v10;
    *(_BYTE *)(a3 + 8) = v18;
    OUTLINED_FUNCTION_82_12(EnumCaseMultiPayload, v13, v14, v15);
    return OUTLINED_FUNCTION_104_15();
  }
  else if ((_DWORD)EnumCaseMultiPayload == 2)
  {
    v16 = OUTLINED_FUNCTION_82_12(EnumCaseMultiPayload, v13, v14, v15);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a3, v10, v16);
  }
  else
  {
    v19 = sub_1C2B57DF0(EnumCaseMultiPayload, v13, v14, v15);
    *(_QWORD *)a3 = v19;
    *(_BYTE *)(a3 + 8) = 0;
    OUTLINED_FUNCTION_82_12(v19, v20, v21, v22);
    OUTLINED_FUNCTION_104_15();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

void PromptForValueFlow.__allocating_init(strategy:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_5_2();
  PromptForValueFlow.init(strategy:outputPublisher:)(a1, a2);
  OUTLINED_FUNCTION_18();
}

uint64_t PromptForValueFlow.init(strategy:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;

  v3 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for PromptForValueFlowAsync(0, AssociatedTypeWitness, v6, v7);
  v12 = OUTLINED_FUNCTION_118_9(v8, v9, v10, v11);
  swift_unknownObjectRetain();
  sub_1C2B57C3C();
  v14 = v13;
  sub_1C28B9A04(a2, (uint64_t)&v20);
  v15 = type metadata accessor for OutputPublisherAsyncAdapter();
  v16 = OUTLINED_FUNCTION_5_2();
  sub_1C28B99EC(&v20, v16 + 16);
  v21 = v15;
  v22 = &protocol witness table for OutputPublisherAsyncAdapter;
  *(_QWORD *)&v20 = v16;
  MEMORY[0x1C3BC9CD4](&unk_1C2D16A20, v12);
  PromptForValueFlowAsync.__allocating_init<A>(strategy:outputPublisher:)(v14, &v20);
  v18 = v17;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a2);
  *(_QWORD *)(v3 + 16) = v18;
  return v3;
}

void sub_1C2B57C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_2();
  v0 = OUTLINED_FUNCTION_24_3();
  sub_1C28FF888(v0, v1, v2);
  OUTLINED_FUNCTION_18();
}

uint64_t PromptForValueFlow.on(input:)(uint64_t a1)
{
  return PromptForValueFlowAsync.on(input:)(a1) & 1;
}

void PromptForValueFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1C2B3AE60(a1, a2, (uint64_t)&protocol conformance descriptor for PromptForValueFlow<A>);
}

uint64_t PromptForValueFlow.execute()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B57CB8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_152_3();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return PromptForValueFlowAsync.execute()(v2);
}

uint64_t PromptForValueFlow.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PromptForValueFlow.__deallocating_deinit()
{
  PromptForValueFlow.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B57D38(uint64_t a1)
{
  return PromptForValueFlow.on(input:)(a1) & 1;
}

void sub_1C2B57D5C(uint64_t a1, uint64_t a2)
{
  PromptForValueFlow.execute(completion:)(a1, a2);
}

uint64_t sub_1C2B57D7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28E1BA0;
  return PromptForValueFlow.execute()(a1);
}

void sub_1C2B57DD0(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  PromptForValueFlow.exitValue.getter(a1, a2, a3);
}

uint64_t sub_1C2B57DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v5 = type metadata accessor for PromptForValueFlowAsync.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v7);
  v9 = (char *)&v16 - v8;
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_1C2CFE670();
  v19 = v17;
  v20 = v18;
  sub_1C2CFDE54();
  v10 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  MEMORY[0x1C3BC9CD4](&unk_1C2D169F8, v5);
  sub_1C2CFE9C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v11 = v19;
  v12 = v20;
  type metadata accessor for CommandFailure();
  swift_allocObject();
  v13 = CommandFailure.init(errorCode:reason:)(-1, v11, v12);
  sub_1C29CD564();
  result = swift_allocError();
  *v15 = v13;
  return result;
}

void sub_1C2B57F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_2();
  v0 = OUTLINED_FUNCTION_24_3();
  sub_1C28FF7E0(v0, v1, v2);
  OUTLINED_FUNCTION_18();
}

void PromptForValueFlowAsync.execute(completion:)(uint64_t a1, uint64_t a2)
{
  sub_1C2B3AE60(a1, a2, (uint64_t)&protocol conformance descriptor for PromptForValueFlowAsync<A>);
}

uint64_t sub_1C2B57FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[7] = a1;
  v5[8] = v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v5[9] = v6;
  v5[10] = OUTLINED_FUNCTION_119_10(a1, v6, a3, a4);
  v5[11] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B57FF0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_53_4();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  OUTLINED_FUNCTION_186_0(v1);
  v2 = OUTLINED_FUNCTION_52_2();
  return OUTLINED_FUNCTION_30_4(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B58040()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    OUTLINED_FUNCTION_167_1();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B5809C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v5 = *(_QWORD *)(v4 + 88);
  type metadata accessor for PromptResult(0, *(_QWORD *)(v4 + 72), a3, a4);
  OUTLINED_FUNCTION_197();
  OUTLINED_FUNCTION_197();
  sub_1C2907360(v5);
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_31();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_5(v6);
}

uint64_t sub_1C2B58104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[8] = a2;
  v5[9] = v4;
  v5[7] = a1;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v5[10] = v6;
  v5[11] = type metadata accessor for PromptForValueFlowAsync.State(0, v6, a3, a4);
  v5[12] = OUTLINED_FUNCTION_7();
  v7 = sub_1C2CFE478();
  v5[13] = v7;
  v5[14] = *(_QWORD *)(v7 - 8);
  v5[15] = OUTLINED_FUNCTION_7();
  v5[16] = *(_QWORD *)(v6 - 8);
  v5[17] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B5818C()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C2B581E4;
  return sub_1C2B5955C(v0[15], v0[8]);
}

uint64_t sub_1C2B581E4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B58230()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int EnumTagSinglePayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v1 = v0[15];
  v2 = v0[10];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v2);
  v4 = v0[12];
  if (EnumTagSinglePayload == 1)
  {
    v5 = (*(uint64_t (**)(uint64_t, _QWORD))(v0[14] + 8))(v1, v0[13]);
    OUTLINED_FUNCTION_82_12(v5, v6, v7, v8);
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_197();
    OUTLINED_FUNCTION_122_11();
  }
  else
  {
    v10 = v0[16];
    v9 = v0[17];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v1, v2);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, v9, v2);
    OUTLINED_FUNCTION_82_12(v11, v12, v13, v14);
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_197();
    OUTLINED_FUNCTION_122_11();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v2);
  }
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_101_14();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  v15 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_5(v15);
}

uint64_t sub_1C2B58344()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_176();
  v1 = v0[19];
  v2 = (_QWORD *)v0[9];
  v3 = v2[6];
  v4 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v3);
  v5 = swift_task_alloc();
  v0[20] = v5;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v1;
  v6 = (_QWORD *)swift_task_alloc();
  v0[21] = v6;
  *v6 = v0;
  v6[1] = sub_1C2B583EC;
  return sub_1C28DF498((uint64_t)(v0 + 2), (uint64_t)&unk_1EF79A8F8, v5, v3, v4);
}

uint64_t sub_1C2B583EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    OUTLINED_FUNCTION_38();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B58454()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_205();
  v1 = v0[12];
  v2 = v0[10];
  *(_QWORD *)v1 = v0[19];
  *(_BYTE *)(v1 + 8) = 1;
  type metadata accessor for PromptResult(0, v2, v3, v4);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_197();
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_122_11();
  OUTLINED_FUNCTION_44_5();
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_101_14();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_5_4(v5);
}

uint64_t sub_1C2B584D8()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_205();
  v1 = *(void **)(v0 + 152);
  swift_task_dealloc();
  swift_willThrow();

  OUTLINED_FUNCTION_31();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B58538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[7] = a1;
  v5[8] = v4;
  v5[9] = type metadata accessor for PromptForValueFlowAsync.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v5[10] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B58584()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_53_4();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  OUTLINED_FUNCTION_186_0(v1);
  v2 = OUTLINED_FUNCTION_52_2();
  return OUTLINED_FUNCTION_30_4(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B585D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_31_6();
  if (!v0)
    OUTLINED_FUNCTION_167_1();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_10_4();
}

uint64_t sub_1C2B58614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[7] = a1;
  v5[8] = v4;
  v5[9] = type metadata accessor for PromptForValueFlowAsync.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v5[10] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B58660()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_53_4();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  OUTLINED_FUNCTION_186_0(v1);
  v2 = OUTLINED_FUNCTION_52_2();
  return OUTLINED_FUNCTION_30_4(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B586B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B586C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_152_3();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return sub_1C2B595AC(v2);
}

uint64_t sub_1C2B5870C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B58724()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_152_3();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return sub_1C2B595BC(v2);
}

uint64_t sub_1C2B58768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B58780()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_152_3();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_76_3(v1);
  return sub_1C2B3D6D4(v2);
}

uint64_t sub_1C2B587C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B587E0()
{
  uint64_t *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_152_3();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1C2978DCC;
  return sub_1C2B595CC(v0[2], v0[4]);
}

void sub_1C2B58838(uint64_t a1, uint64_t a2)
{
  PromptForValueFlowAsync.execute(completion:)(a1, a2);
}

uint64_t sub_1C2B58858@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return PromptForValueFlowAsync.exitValue.getter(a1, a2, a3);
}

uint64_t sub_1C2B58878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 24) + *(_QWORD *)(a6 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_1C28BCB84;
  return v13(a1, a2, a5, a6);
}

uint64_t sub_1C2B58904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 48) + *(_QWORD *)(a5 + 48));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_1C28BCB84;
  return v11(a1, a4, a5);
}

uint64_t sub_1C2B58984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 56) + *(_QWORD *)(a5 + 56));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_1C28BCB84;
  return v11(a1, a4, a5);
}

uint64_t sub_1C2B58A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 64) + *(_QWORD *)(a6 + 64));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_1C28BCB84;
  return v13(a1, a2, a5, a6);
}

uint64_t sub_1C2B58A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B58AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int8x16_t v3;

  v2 = OUTLINED_FUNCTION_112_8();
  *(_QWORD *)(v1 + 64) = v2;
  v3 = *(int8x16_t *)(v1 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 32) = v0;
  *(int8x16_t *)(v2 + 40) = vextq_s8(v3, v3, 8uLL);
  *(_QWORD *)(v1 + 72) = swift_task_alloc();
  sub_1C2CFE478();
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B3D278);
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_15_58();
}

uint64_t sub_1C2B58B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v9 = sub_1C2B58BB4(a1, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a6 + 24))(a3, v9, v10, a5, a6);
  return swift_release();
}

uint64_t (*sub_1C2B58BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;

  sub_1C2CFE478();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v8 = sub_1C2CFE0DC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v16 - v11, a1, v8);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a2;
  *((_QWORD *)v14 + 3) = a3;
  *((_QWORD *)v14 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v12, v8);
  return sub_1C2B5E844;
}

uint64_t sub_1C2B58CC0(uint64_t a1)
{
  uint64_t v2;

  sub_1C2CFE478();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v2 = sub_1C2CFE0DC();
  return sub_1C293511C(a1, v2);
}

uint64_t sub_1C2B58D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B58D48()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_50_26();
  OUTLINED_FUNCTION_42_30(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_77(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B58DB0);
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_15_58();
}

uint64_t sub_1C2B58DB0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_91_1();
  if (v0)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    OUTLINED_FUNCTION_64_6();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2B58DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 32))(sub_1C29F1DE8, v13, a4, a5);
  return swift_release();
}

uint64_t sub_1C2B58EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B58F0C()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_50_26();
  OUTLINED_FUNCTION_42_30(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_77(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B58F74);
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_15_58();
}

uint64_t sub_1C2B58F74()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_91_1();
  if (v0)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_10_4();
  }
  else
  {
    OUTLINED_FUNCTION_64_6();
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C2B58FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 40))(sub_1C29F1DE8, v13, a4, a5);
  return swift_release();
}

uint64_t sub_1C2B590B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B590D0()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_50_26();
  OUTLINED_FUNCTION_42_30(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_77(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B58F74);
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_15_58();
}

uint64_t sub_1C2B59138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 48))(sub_1C29F1DE8, v13, a4, a5);
  return swift_release();
}

uint64_t sub_1C2B59230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B59250()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_50_26();
  OUTLINED_FUNCTION_42_30(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_77(v1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B58F74);
  OUTLINED_FUNCTION_7_75();
  return OUTLINED_FUNCTION_15_58();
}

uint64_t sub_1C2B592B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 56))(sub_1C29F1DE8, v13, a4, a5);
  return swift_release();
}

uint64_t sub_1C2B593B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B593D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int8x16_t v3;

  v2 = OUTLINED_FUNCTION_112_8();
  *(_QWORD *)(v1 + 64) = v2;
  v3 = *(int8x16_t *)(v1 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 32) = v0;
  *(int8x16_t *)(v2 + 40) = vextq_s8(v3, v3, 8uLL);
  *(_QWORD *)(v1 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A5DB0);
  OUTLINED_FUNCTION_62((uint64_t)sub_1C2B3D0AC);
  OUTLINED_FUNCTION_7_75();
  return sub_1C2CFEA24();
}

uint64_t sub_1C2B59458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78A0D8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a6 + 64))(a3, sub_1C29F1DE8, v15, a5, a6);
  return swift_release();
}

uint64_t sub_1C2B5955C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B59570()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_22_5();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = OUTLINED_FUNCTION_121(v1);
  return OUTLINED_FUNCTION_24_5(v2, v3, v4);
}

uint64_t sub_1C2B595AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B595BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B595CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B595E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_22_5();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = OUTLINED_FUNCTION_121(v1);
  return OUTLINED_FUNCTION_24_5(v2, v3, v4);
}

uint64_t sub_1C2B5961C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 128))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793BC8);
    sub_1C2CFDDAC();
  }
  sub_1C2CFE670();
  sub_1C2CFDE54();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  sub_1C2CFDE54();
  return 0;
}

uint64_t sub_1C2B596F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B5955C(a1, a2);
}

uint64_t sub_1C2B59758(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2901BA4(a1);
}

uint64_t sub_1C2B597A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B595AC(a1);
}

uint64_t sub_1C2B597F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B595BC(a1);
}

uint64_t sub_1C2B59848(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B3D6D4(a1);
}

uint64_t sub_1C2B59898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B595CC(a1, a2);
}

uint64_t sub_1C2B598F8()
{
  return sub_1C2B5961C();
}

uint64_t sub_1C2B59918()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_2_41();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_86(v1);
  *v2 = v0;
  v2[1] = sub_1C28BCB84;
  return PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()();
}

uint64_t sub_1C2B59974()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_328(v1);
  return PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()();
}

uint64_t sub_1C2B599BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B599E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B3DC40(a1, a2, a3, (uint64_t)&protocol conformance descriptor for PromptForValueFlow<A>, (uint64_t)&protocol conformance descriptor for PromptForValueFlow<A>);
}

uint64_t sub_1C2B599F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B3DC40(a1, a2, a3, (uint64_t)&protocol conformance descriptor for PromptForValueFlowAsync<A>, (uint64_t)&protocol conformance descriptor for PromptForValueFlowAsync<A>);
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.parseResponseValue(input:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.makeRepromptOnEmptyParse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.makeRepromptOnLowConfidence(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.makeFlowCancelledResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.makeErrorResponse(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.actionForInput(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.parseValueResponse(input:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makePromptForValue()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_2_41();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_2_41();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makeFlowCancelledResponse()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_2_41();
  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_13(v1);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makeErrorResponse(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_177();
  v0 = OUTLINED_FUNCTION_9_6();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_6(v1);
  return OUTLINED_FUNCTION_103_0(v2, v3, v4, v5, v6);
}

uint64_t type metadata accessor for PromptForValueFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptForValueFlow);
}

uint64_t method lookup function for PromptForValueFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromptForValueFlow.__allocating_init(strategy:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for PromptForValueFlowAsync()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromptForValueFlowAsync.__allocating_init<A>(strategy:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

char *sub_1C2B59BF4(char *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  id *v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  BOOL v45;
  char *v46;
  char *v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *);
  id *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *);
  id *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  char v72;
  id v73;
  uint64_t v74;
  char *v75;
  unsigned int v76;
  uint64_t v77;
  unint64_t v78;
  unsigned int v79;
  char v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  unsigned int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  void *v88;
  size_t v89;
  void *v90;
  id v91;
  void *v92;
  const void *v93;
  void *v94;
  const void *v95;
  void *v96;
  size_t v97;
  void *v98;
  id v99;
  void *v100;
  const void *v101;
  void *v102;
  const void *v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  unsigned int v108;
  char *v109;
  uint64_t v110;
  char v111;
  char *v112;
  unsigned int v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  _QWORD *v120;
  _QWORD *v121;
  unint64_t v122;
  unint64_t v123;
  int v124;
  _QWORD *v125;
  _QWORD *v126;
  _QWORD *v127;
  _QWORD *v128;
  _QWORD *v129;
  _QWORD *v130;
  _QWORD *v131;
  _QWORD *v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  __int128 v136;
  __int128 v137;
  unsigned int v138;
  uint64_t v139;
  unint64_t v140;
  unsigned int v141;
  _QWORD *v142;
  _QWORD *v143;
  unint64_t v144;
  unint64_t v145;
  int v146;
  _QWORD *v147;
  _QWORD *v148;
  unint64_t v149;
  unint64_t v150;
  int v151;
  _QWORD *v152;
  _QWORD *v153;
  _QWORD *v154;
  _QWORD *v155;
  _QWORD *v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  __int128 v163;
  __int128 v164;
  unsigned int v165;
  uint64_t v166;
  unsigned int v167;
  unsigned int v168;
  size_t v170;
  size_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  size_t __n;
  size_t __na;
  char v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;

  v5 = *(_QWORD *)(sub_1C2CFBCAC() - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v189 = sub_1C2CFCD44();
  v7 = *(_QWORD *)(v189 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v186 = sub_1C2CFBD9C();
  v9 = *(_QWORD *)(v186 - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v188 = sub_1C2CFBFD0();
  v11 = *(_QWORD *)(v188 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = sub_1C2CFBF28();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v15;
  v17 = v10 | v12;
  v18 = v15 | (v10 | v12) & 0xF8;
  v19 = v18 | 7u;
  v20 = v6 + v19;
  v187 = v7;
  v21 = *(_QWORD *)(v7 + 64);
  v22 = v21 + 7;
  if (((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v21)
    v21 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v21 <= *(_QWORD *)(v9 + 64))
    v21 = *(_QWORD *)(v9 + 64);
  v23 = *(_QWORD *)(v11 + 64) + v15;
  if (*(_DWORD *)(v14 + 84))
    v24 = *(_QWORD *)(v14 + 64);
  else
    v24 = *(_QWORD *)(v14 + 64) + 1;
  v25 = (v24 + 7 + (v23 & ~(unint64_t)v15)) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v21 <= v26)
    v21 = (v25 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v27 = ((((((v25 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 > v27)
    v27 = v21;
  if (v27 <= 0x18)
    v28 = 24;
  else
    v28 = v27;
  v29 = ((((v28 + (v20 & ~v19) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  v30 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v30 + 64) <= 9uLL)
    v31 = 9;
  else
    v31 = *(_QWORD *)(v30 + 64);
  v32 = 8 * v31;
  if (v31 > 3)
    goto LABEL_22;
  v33 = ((1 << v32) + 1) >> v32;
  v34 = 2;
  if (v33 > 0xFFFD)
    v34 = 4;
  if (v33 <= 0xFD)
LABEL_22:
    v34 = 1;
  v35 = v34 + v31;
  if (v35 <= v29)
    v35 = ((((v28 + (v20 & ~v19) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v35 <= 9)
    v35 = 9;
  v36 = a2;
  if (v35 > 3)
    goto LABEL_31;
  v37 = ((1 << (8 * v35)) + 3) >> (8 * v35);
  v38 = 2;
  if (v37 > 0xFFFB)
    v38 = 4;
  if (v37 <= 0xFB)
LABEL_31:
    v38 = 1;
  v39 = v38 + v35;
  v40 = *(_DWORD *)(v5 + 80);
  v41 = *(_DWORD *)(v30 + 80);
  v42 = (v41 | v40) & 0xF8 | v18;
  v43 = (v17 | v15 | v40 | v41) & 0x100000;
  v45 = v39 > 0x18 || v43 != 0 || v42 > 7;
  if (v45)
  {
    v46 = (char *)*a2;
    *(_QWORD *)a1 = *a2;
    v47 = &v46[((v42 | 7) + 16) & ~(unint64_t)(v42 | 7)];
    sub_1C2CFD350();
    return v47;
  }
  if (v31 > 3)
    goto LABEL_45;
  v48 = ((1 << v32) + 1) >> v32;
  v49 = 2;
  if (v48 > 0xFFFD)
    v49 = 4;
  if (v48 <= 0xFD)
LABEL_45:
    v49 = 1;
  v50 = v49 + v31;
  if (v50 <= v29)
    v50 = ((((v28 + (v20 & ~v19) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v50 <= 9)
    v50 = 9;
  if (v50 > 3)
    goto LABEL_51;
  v52 = ((1 << (8 * v50)) + 3) >> (8 * v50);
  if (v52 > 0xFFFB)
  {
    v51 = *(_DWORD *)((char *)a2 + v50);
  }
  else
  {
    if (v52 <= 0xFB)
    {
LABEL_51:
      v51 = *((unsigned __int8 *)a2 + v50);
      goto LABEL_56;
    }
    v51 = *(unsigned __int16 *)((char *)a2 + v50);
  }
LABEL_56:
  if (v51 >= 4)
  {
    if (v31 > 3)
      goto LABEL_61;
    v53 = ((1 << v32) + 1) >> v32;
    v54 = 2;
    if (v53 > 0xFFFD)
      v54 = 4;
    if (v53 <= 0xFD)
LABEL_61:
      v54 = 1;
    v55 = v54 + v31;
    if (v55 <= v29)
      v55 = ((((v28 + (v20 & ~v19) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
    if (v55 <= 9)
      LODWORD(v55) = 9;
    if (v55 <= 3)
      v56 = v55;
    else
      v56 = 4;
    __asm { BR              X16 }
  }
  v57 = ~v19;
  switch(v51)
  {
    case 0u:
      v170 = v24;
      v172 = ~v16;
      v58 = v23;
      v174 = v13;
      v176 = v24 + 7;
      __n = v28 + 1;
      v180 = 8 * v31;
      v182 = v31;
      v184 = ((((v28 + (v20 & ~v19) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v59 = *(void (**)(char *))(v5 + 16);
      v47 = a1;
      v190 = v28;
      v60 = v36;
      v59(a1);
      v61 = (unint64_t)&a1[v20] & v57;
      v62 = ((unint64_t)v60 + v20) & v57;
      if (*(unsigned __int8 *)(v62 + v190) >= 8u)
      {
        if (v190 <= 3)
          v63 = v190;
        else
          v63 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v62 + v190))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v187 + 16))((unint64_t)&a1[v20] & v57, v62, v189);
          *(_BYTE *)(v61 + v190) = 0;
          goto LABEL_167;
        case 1:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v187 + 16))((unint64_t)&a1[v20] & v57, v62, v189);
          *(_QWORD *)((v22 + v61) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v22 + v62) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v61 + v190) = 1;
          sub_1C2CFD350();
          goto LABEL_167;
        case 2:
          *(_QWORD *)v61 = *(_QWORD *)v62;
          *(_QWORD *)(((unint64_t)&a1[v20] & v57) + 8) = *(_QWORD *)(v62 + 8);
          *(_QWORD *)(((unint64_t)&a1[v20] & v57) + 0x10) = *(_QWORD *)(v62 + 16);
          *(_BYTE *)(v61 + v190) = 2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_167;
        case 3:
          *(_QWORD *)v61 = *(_QWORD *)v62;
          *(_BYTE *)(v61 + v190) = 3;
          swift_unknownObjectRetain();
          goto LABEL_167;
        case 4:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((unint64_t)&a1[v20] & v57, v62, v186);
          *(_BYTE *)(v61 + v190) = 4;
          goto LABEL_167;
        case 5:
          v90 = *(void **)v62;
          *(_QWORD *)v61 = *(_QWORD *)v62;
          *(_BYTE *)(v61 + v190) = 5;
          v91 = v90;
          goto LABEL_167;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((unint64_t)&a1[v20] & v57, v62, v188);
          v92 = (void *)((v58 + v61) & v172);
          v93 = (const void *)((v58 + v62) & v172);
          if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v174))
          {
            memcpy(v92, v93, v170);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v92, v93, v174);
            __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v174);
          }
          v115 = (_QWORD *)(((unint64_t)v92 + v176) & 0xFFFFFFFFFFFFFFF8);
          v116 = (_QWORD *)(((unint64_t)v93 + v176) & 0xFFFFFFFFFFFFFFF8);
          *v115 = *v116;
          v115[1] = v116[1];
          v117 = ((unint64_t)v115 + 19) & 0xFFFFFFFFFFFFFFF8;
          v118 = ((unint64_t)v116 + 19) & 0xFFFFFFFFFFFFFFF8;
          v119 = *(_DWORD *)v118;
          *(_BYTE *)(v117 + 4) = *(_BYTE *)(v118 + 4);
          *(_DWORD *)v117 = v119;
          *(_BYTE *)(v61 + v190) = 6;
          goto LABEL_166;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((unint64_t)&a1[v20] & v57, v62, v188);
          v94 = (void *)((v58 + v61) & v172);
          v95 = (const void *)((v58 + v62) & v172);
          if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v174))
          {
            memcpy(v94, v95, v170);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v94, v95, v174);
            __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v174);
          }
          v120 = (_QWORD *)(((unint64_t)v94 + v176) & 0xFFFFFFFFFFFFFFF8);
          v121 = (_QWORD *)(((unint64_t)v95 + v176) & 0xFFFFFFFFFFFFFFF8);
          *v120 = *v121;
          v120[1] = v121[1];
          v122 = ((unint64_t)v120 + 19) & 0xFFFFFFFFFFFFFFF8;
          v123 = ((unint64_t)v121 + 19) & 0xFFFFFFFFFFFFFFF8;
          v124 = *(_DWORD *)v123;
          *(_BYTE *)(v122 + 4) = *(_BYTE *)(v123 + 4);
          *(_DWORD *)v122 = v124;
          v125 = (_QWORD *)(((v61 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          v126 = (_QWORD *)(((v62 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          *v125 = *v126;
          v125[1] = v126[1];
          v127 = (_QWORD *)(((unint64_t)v125 + 23) & 0xFFFFFFFFFFFFFFF8);
          v128 = (_QWORD *)(((unint64_t)v126 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v127 = *v128;
          v127[1] = v128[1];
          v129 = (_QWORD *)(((unint64_t)v127 + 23) & 0xFFFFFFFFFFFFFFF8);
          v130 = (_QWORD *)(((unint64_t)v128 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v129 = *v130;
          v129[1] = v130[1];
          *(_BYTE *)(v61 + v190) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_166:
          swift_bridgeObjectRetain();
          v47 = a1;
LABEL_167:
          v89 = __n;
          break;
        default:
          v88 = (void *)((unint64_t)&a1[v20] & v57);
          v89 = __n;
          memcpy(v88, (const void *)v62, __n);
          break;
      }
      v131 = (_QWORD *)(((v62 | 7) + v89) & 0xFFFFFFFFFFFFFFF8);
      v132 = (_QWORD *)(((v61 | 7) + v89) & 0xFFFFFFFFFFFFF8);
      *v132 = *v131;
      v133 = ((unint64_t)v132 + 15) & 0xFFFFFFFFFFFFFFF8;
      v134 = ((unint64_t)v131 + 15) & 0xFFFFFFFFFFFFFFF8;
      v135 = *(_QWORD *)(v134 + 24);
      swift_bridgeObjectRetain();
      if (v135 < 0xFFFFFFFF)
      {
        v136 = *(_OWORD *)v134;
        v137 = *(_OWORD *)(v134 + 16);
        *(_QWORD *)(v133 + 32) = *(_QWORD *)(v134 + 32);
        *(_OWORD *)v133 = v136;
        *(_OWORD *)(v133 + 16) = v137;
      }
      else
      {
        *(_QWORD *)(v133 + 24) = v135;
        *(_QWORD *)(v133 + 32) = *(_QWORD *)(v134 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v135 - 8))(v133, v134, v135);
      }
      *(_BYTE *)(v133 + 40) = *(_BYTE *)(v134 + 40);
      if (v182 > 3)
        goto LABEL_175;
      v138 = ((1 << v180) + 1) >> v180;
      v139 = 2;
      if (v138 > 0xFFFD)
        v139 = 4;
      if (v138 <= 0xFD)
LABEL_175:
        v139 = 1;
      v140 = v139 + v182;
      if (v140 <= v184)
        v140 = v184;
      if (v140 <= 9)
        v140 = 9;
      if (v140 > 3)
        goto LABEL_183;
      v141 = ((1 << (8 * v140)) + 3) >> (8 * v140);
      if (v141 > 0xFFFB)
      {
        *(_DWORD *)&v47[v140] = 0;
      }
      else if (v141 > 0xFB)
      {
        *(_WORD *)&v47[v140] = 0;
      }
      else
      {
LABEL_183:
        v47[v140] = 0;
      }
      return v47;
    case 1u:
      v171 = v24;
      v173 = ~v16;
      v64 = v23;
      v175 = v13;
      v177 = v24 + 7;
      __na = v28 + 1;
      v181 = 8 * v31;
      v183 = v31;
      v185 = ((((v28 + (v20 & ~v19) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      v65 = *(void (**)(char *))(v5 + 16);
      v47 = a1;
      v191 = v28;
      v66 = v36;
      v65(a1);
      v67 = (unint64_t)&a1[v20] & v57;
      v68 = ((unint64_t)v66 + v20) & v57;
      if (*(unsigned __int8 *)(v68 + v191) >= 8u)
      {
        if (v191 <= 3)
          v69 = v191;
        else
          v69 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v68 + v191))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v187 + 16))((unint64_t)&a1[v20] & v57, v68, v189);
          *(_BYTE *)(v67 + v191) = 0;
          goto LABEL_191;
        case 1:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v187 + 16))((unint64_t)&a1[v20] & v57, v68, v189);
          *(_QWORD *)((v22 + v67) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v22 + v68) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v67 + v191) = 1;
          sub_1C2CFD350();
          goto LABEL_191;
        case 2:
          *(_QWORD *)v67 = *(_QWORD *)v68;
          *(_QWORD *)(((unint64_t)&a1[v20] & v57) + 8) = *(_QWORD *)(v68 + 8);
          *(_QWORD *)(((unint64_t)&a1[v20] & v57) + 0x10) = *(_QWORD *)(v68 + 16);
          *(_BYTE *)(v67 + v191) = 2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_191;
        case 3:
          *(_QWORD *)v67 = *(_QWORD *)v68;
          *(_BYTE *)(v67 + v191) = 3;
          swift_unknownObjectRetain();
          goto LABEL_191;
        case 4:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((unint64_t)&a1[v20] & v57, v68, v186);
          *(_BYTE *)(v67 + v191) = 4;
          goto LABEL_191;
        case 5:
          v98 = *(void **)v68;
          *(_QWORD *)v67 = *(_QWORD *)v68;
          *(_BYTE *)(v67 + v191) = 5;
          v99 = v98;
          goto LABEL_191;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((unint64_t)&a1[v20] & v57, v68, v188);
          v100 = (void *)((v64 + v67) & v173);
          v101 = (const void *)((v64 + v68) & v173);
          if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v175))
          {
            memcpy(v100, v101, v171);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v100, v101, v175);
            __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v175);
          }
          v142 = (_QWORD *)(((unint64_t)v100 + v177) & 0xFFFFFFFFFFFFFFF8);
          v143 = (_QWORD *)(((unint64_t)v101 + v177) & 0xFFFFFFFFFFFFFFF8);
          *v142 = *v143;
          v142[1] = v143[1];
          v144 = ((unint64_t)v142 + 19) & 0xFFFFFFFFFFFFFFF8;
          v145 = ((unint64_t)v143 + 19) & 0xFFFFFFFFFFFFFFF8;
          v146 = *(_DWORD *)v145;
          *(_BYTE *)(v144 + 4) = *(_BYTE *)(v145 + 4);
          *(_DWORD *)v144 = v146;
          *(_BYTE *)(v67 + v191) = 6;
          goto LABEL_190;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((unint64_t)&a1[v20] & v57, v68, v188);
          v102 = (void *)((v64 + v67) & v173);
          v103 = (const void *)((v64 + v68) & v173);
          if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v175))
          {
            memcpy(v102, v103, v171);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v102, v103, v175);
            __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v175);
          }
          v147 = (_QWORD *)(((unint64_t)v102 + v177) & 0xFFFFFFFFFFFFFFF8);
          v148 = (_QWORD *)(((unint64_t)v103 + v177) & 0xFFFFFFFFFFFFFFF8);
          *v147 = *v148;
          v147[1] = v148[1];
          v149 = ((unint64_t)v147 + 19) & 0xFFFFFFFFFFFFFFF8;
          v150 = ((unint64_t)v148 + 19) & 0xFFFFFFFFFFFFFFF8;
          v151 = *(_DWORD *)v150;
          *(_BYTE *)(v149 + 4) = *(_BYTE *)(v150 + 4);
          *(_DWORD *)v149 = v151;
          v152 = (_QWORD *)(((v67 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          v153 = (_QWORD *)(((v68 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          *v152 = *v153;
          v152[1] = v153[1];
          v154 = (_QWORD *)(((unint64_t)v152 + 23) & 0xFFFFFFFFFFFFFFF8);
          v155 = (_QWORD *)(((unint64_t)v153 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v154 = *v155;
          v154[1] = v155[1];
          v156 = (_QWORD *)(((unint64_t)v154 + 23) & 0xFFFFFFFFFFFFFFF8);
          v157 = (_QWORD *)(((unint64_t)v155 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v156 = *v157;
          v156[1] = v157[1];
          *(_BYTE *)(v67 + v191) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_190:
          swift_bridgeObjectRetain();
          v47 = a1;
LABEL_191:
          v97 = __na;
          break;
        default:
          v96 = (void *)((unint64_t)&a1[v20] & v57);
          v97 = __na;
          memcpy(v96, (const void *)v68, __na);
          break;
      }
      v158 = (_QWORD *)(((v68 | 7) + v97) & 0xFFFFFFFFFFFFFFF8);
      v159 = (_QWORD *)(((v67 | 7) + v97) & 0xFFFFFFFFFFFFF8);
      *v159 = *v158;
      v160 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
      v161 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
      v162 = *(_QWORD *)(v161 + 24);
      swift_bridgeObjectRetain();
      if (v162 < 0xFFFFFFFF)
      {
        v163 = *(_OWORD *)v161;
        v164 = *(_OWORD *)(v161 + 16);
        *(_QWORD *)(v160 + 32) = *(_QWORD *)(v161 + 32);
        *(_OWORD *)v160 = v163;
        *(_OWORD *)(v160 + 16) = v164;
      }
      else
      {
        *(_QWORD *)(v160 + 24) = v162;
        *(_QWORD *)(v160 + 32) = *(_QWORD *)(v161 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v162 - 8))(v160, v161, v162);
      }
      *(_BYTE *)(v160 + 40) = *(_BYTE *)(v161 + 40);
      if (v183 > 3)
        goto LABEL_199;
      v165 = ((1 << v181) + 1) >> v181;
      v166 = 2;
      if (v165 > 0xFFFD)
        v166 = 4;
      if (v165 <= 0xFD)
LABEL_199:
        v166 = 1;
      v78 = v166 + v183;
      if (v78 <= v185)
        v78 = v185;
      if (v78 <= 9)
        v78 = 9;
      if (v78 <= 3)
      {
        v86 = 1;
        v167 = ((1 << (8 * v78)) + 3) >> (8 * v78);
        if (v167 > 0xFFFB)
          goto LABEL_222;
        if (v167 > 0xFB)
          goto LABEL_224;
      }
      v80 = 1;
      goto LABEL_220;
    case 2u:
      v47 = a1;
      if (v31 > 3)
        goto LABEL_84;
      v70 = ((1 << v32) + 1) >> v32;
      if (v70 > 0xFFFD)
      {
        v71 = *(_DWORD *)((char *)a2 + v31);
      }
      else if (v70 > 0xFD)
      {
        v71 = *(unsigned __int16 *)((char *)a2 + v31);
      }
      else
      {
LABEL_84:
        v71 = *((unsigned __int8 *)a2 + v31);
      }
      if (v71 >= 2)
      {
        if (v31 <= 3)
          v87 = v31;
        else
          v87 = 4;
        __asm { BR              X13 }
      }
      if (v71 == 1)
      {
        v109 = (char *)*a2;
        v110 = v31;
        v111 = 8 * v31;
        v112 = (char *)*a2;
        v106 = v111;
        v107 = v110;
        *(_QWORD *)a1 = v109;
        a1[8] = *((_BYTE *)a2 + 8);
        if (v110 > 3)
          goto LABEL_154;
        v108 = ((1 << v111) + 1) >> v111;
        if (v108 > 0xFFFD)
        {
          *(_DWORD *)&a1[v110] = 1;
          goto LABEL_210;
        }
        if (v108 <= 0xFD)
        {
LABEL_154:
          a1[v110] = 1;
          goto LABEL_155;
        }
        *(_WORD *)&a1[v110] = 1;
      }
      else
      {
        v104 = v31;
        v105 = 8 * v31;
        (*(void (**)(char *, id *))(v30 + 16))(a1, a2);
        v106 = v105;
        v107 = v104;
        if (v104 > 3)
        {
LABEL_150:
          a1[v104] = 0;
LABEL_155:
          if (v107 > 3)
            goto LABEL_159;
          v113 = ((1 << v106) + 1) >> v106;
          v114 = 2;
          if (v113 > 0xFFFD)
            v114 = 4;
          if (v113 <= 0xFD)
LABEL_159:
            v114 = 1;
          goto LABEL_212;
        }
        v108 = ((1 << v105) + 1) >> v105;
        if (v108 > 0xFFFD)
        {
          *(_DWORD *)&a1[v104] = 0;
        }
        else
        {
          if (v108 <= 0xFD)
            goto LABEL_150;
          *(_WORD *)&a1[v104] = 0;
        }
      }
LABEL_210:
      v45 = v108 > 0xFFFD;
      v114 = 2;
      if (v45)
        v114 = 4;
LABEL_212:
      v78 = v114 + v107;
      if (v78 <= v29)
        v78 = v29;
      if (v78 <= 9)
        v78 = 9;
      if (v78 > 3)
      {
LABEL_219:
        v80 = 2;
LABEL_220:
        v47[v78] = v80;
        return v47;
      }
      v168 = ((1 << (8 * v78)) + 3) >> (8 * v78);
      if (v168 > 0xFFFB)
      {
        v86 = 2;
LABEL_222:
        *(_DWORD *)&v47[v78] = v86;
      }
      else
      {
        if (v168 <= 0xFB)
          goto LABEL_219;
        LOWORD(v86) = 2;
LABEL_224:
        *(_WORD *)&v47[v78] = v86;
      }
      return v47;
    case 3u:
      v72 = 8 * v31;
      v73 = *a2;
      v74 = v31;
      v75 = (char *)*a2;
      v47 = a1;
      *(_QWORD *)a1 = v73;
      a1[8] = *((_BYTE *)a2 + 8);
      if (v74 > 3)
        goto LABEL_89;
      v76 = ((1 << v72) + 1) >> v72;
      v77 = 2;
      if (v76 > 0xFFFD)
        v77 = 4;
      if (v76 <= 0xFD)
LABEL_89:
        v77 = 1;
      v78 = v77 + v74;
      if (v78 <= v29)
        v78 = v29;
      if (v78 <= 9)
        v78 = 9;
      if (v78 > 3)
        goto LABEL_97;
      v79 = ((1 << (8 * v78)) + 3) >> (8 * v78);
      if (v79 > 0xFFFB)
      {
        v86 = 3;
        goto LABEL_222;
      }
      if (v79 <= 0xFB)
      {
LABEL_97:
        v80 = 3;
        goto LABEL_220;
      }
      LOWORD(v86) = 3;
      goto LABEL_224;
    default:
      if (v31 > 3)
        goto LABEL_102;
      v81 = ((1 << v32) + 1) >> v32;
      v82 = 2;
      if (v81 > 0xFFFD)
        v82 = 4;
      if (v81 <= 0xFD)
LABEL_102:
        v82 = 1;
      v47 = a1;
      v83 = v82 + v31;
      if (v83 <= v29)
        v83 = ((((v28 + (v20 & ~v19) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v83 <= 9)
        v83 = 9;
      if (v83 > 3)
        goto LABEL_111;
      v84 = ((1 << (8 * v83)) + 3) >> (8 * v83);
      v85 = 2;
      if (v84 > 0xFFFB)
        v85 = 4;
      if (v84 <= 0xFB)
LABEL_111:
        v85 = 1;
      memcpy(a1, a2, v85 + v83);
      return v47;
  }
}

_BYTE *sub_1C2B5AE24(_BYTE *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_BYTE *, char *, uint64_t);
  _BYTE *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(_BYTE *, char *, uint64_t);
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  unsigned int v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  unsigned int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  void *v67;
  size_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  char v73;
  __int128 v74;
  char v75;
  unint64_t v76;
  unint64_t v77;
  void *v78;
  const void *v79;
  void *v80;
  const void *v81;
  void *v82;
  size_t v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  uint64_t v87;
  char v88;
  __int128 v89;
  char v90;
  unint64_t v91;
  unint64_t v92;
  void *v93;
  const void *v94;
  void *v95;
  const void *v96;
  uint64_t v97;
  char v98;
  unsigned int v99;
  unsigned int v100;
  uint64_t v101;
  _OWORD *v102;
  _OWORD *v103;
  unint64_t v104;
  unint64_t v105;
  int v106;
  char v107;
  _OWORD *v108;
  _OWORD *v109;
  unint64_t v110;
  unint64_t v111;
  int v112;
  _OWORD *v113;
  _OWORD *v114;
  _OWORD *v115;
  _OWORD *v116;
  _QWORD *v117;
  _QWORD *v118;
  unint64_t v119;
  unint64_t v120;
  __int128 v121;
  __int128 v122;
  unsigned int v123;
  uint64_t v124;
  unint64_t v125;
  unsigned int v126;
  _OWORD *v127;
  _OWORD *v128;
  unint64_t v129;
  unint64_t v130;
  int v131;
  char v132;
  _OWORD *v133;
  _OWORD *v134;
  unint64_t v135;
  unint64_t v136;
  int v137;
  _OWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  _OWORD *v141;
  _QWORD *v142;
  _QWORD *v143;
  unint64_t v144;
  unint64_t v145;
  __int128 v146;
  __int128 v147;
  unsigned int v148;
  uint64_t v149;
  unsigned int v150;
  BOOL v151;
  unsigned int v152;
  uint64_t v154;
  uint64_t v155;
  size_t v156;
  size_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  size_t __n;
  size_t __na;
  char v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;

  v5 = sub_1C2CFBCAC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v174 = sub_1C2CFCD44();
  v8 = *(_QWORD *)(v174 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v171 = sub_1C2CFBD9C();
  v10 = *(_QWORD *)(v171 - 8);
  v11 = *(_DWORD *)(v10 + 80) | v9;
  v173 = sub_1C2CFBFD0();
  v12 = *(_QWORD *)(v173 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = sub_1C2CFBF28();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v11 | v13) & 0xF8 | v16 | 7;
  v18 = v7 + v17;
  v172 = v8;
  v19 = *(_QWORD *)(v8 + 64);
  v20 = v19 + 7;
  if (((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
    v19 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v170 = v10;
  v21 = *(_QWORD *)(v10 + 64);
  v22 = v12;
  if (v19 <= v21)
    v19 = v21;
  v23 = *(_QWORD *)(v12 + 64) + v16;
  if (*(_DWORD *)(v15 + 84))
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = *(_QWORD *)(v15 + 64) + 1;
  v25 = (v24 + 7 + (v23 & ~v16)) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v19 <= v26)
    v19 = (v25 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v27 = ((((((v25 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= v27)
    v19 = v27;
  if (v19 <= 0x18)
    v28 = 24;
  else
    v28 = v19;
  v29 = ((((v28 + (v18 & ~v17) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  v30 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v30 + 64) <= 9uLL)
    v31 = 9;
  else
    v31 = *(_QWORD *)(v30 + 64);
  v32 = 8 * v31;
  if (v31 > 3)
    goto LABEL_22;
  v33 = ((1 << v32) + 1) >> v32;
  v34 = 2;
  if (v33 > 0xFFFD)
    v34 = 4;
  if (v33 <= 0xFD)
LABEL_22:
    v34 = 1;
  v35 = v34 + v31;
  if (v35 <= v29)
    v35 = ((((v28 + (v18 & ~v17) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v35 <= 9)
    v35 = 9;
  if (v35 > 3)
    goto LABEL_28;
  v37 = ((1 << (8 * v35)) + 3) >> (8 * v35);
  if (v37 > 0xFFFB)
  {
    v36 = *(_DWORD *)&a2[v35];
  }
  else
  {
    if (v37 <= 0xFB)
    {
LABEL_28:
      v36 = a2[v35];
      goto LABEL_33;
    }
    v36 = *(unsigned __int16 *)&a2[v35];
  }
LABEL_33:
  if (v36 >= 4)
  {
    if (v31 > 3)
      goto LABEL_38;
    v38 = ((1 << v32) + 1) >> v32;
    v39 = 2;
    if (v38 > 0xFFFD)
      v39 = 4;
    if (v38 <= 0xFD)
LABEL_38:
      v39 = 1;
    v40 = v39 + v31;
    if (v40 <= v29)
      v40 = ((((v28 + (v18 & ~v17) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
    if (v40 <= 9)
      LODWORD(v40) = 9;
    if (v40 <= 3)
      v41 = v40;
    else
      v41 = 4;
    __asm { BR              X16 }
  }
  v42 = ~v17;
  v43 = ~v16;
  switch(v36)
  {
    case 0u:
      v154 = *(_QWORD *)(v14 - 8);
      v156 = v24;
      v158 = v14;
      v160 = v24 + 7;
      __n = v28 + 1;
      v164 = 8 * v31;
      v166 = v31;
      v44 = *(void (**)(_BYTE *, char *, uint64_t))(v6 + 32);
      v45 = a1;
      v168 = v28;
      v44(a1, a2, v5);
      v46 = (unint64_t)&a1[v18] & v42;
      v47 = (unint64_t)&a2[v18] & v42;
      if (*(unsigned __int8 *)(v47 + v168) >= 8u)
      {
        if (v168 <= 3)
          v48 = v168;
        else
          v48 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v47 + v168))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v172 + 32))((unint64_t)&a1[v18] & v42, v47, v174);
          *(_BYTE *)(v46 + v168) = 0;
          goto LABEL_148;
        case 1:
          v71 = (unint64_t)&a1[v18] & v42;
          v72 = v168;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v172 + 32))(v71, v47, v174);
          *(_QWORD *)((v20 + v46) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v20 + v47) & 0xFFFFFFFFFFFFF8);
          v73 = 1;
          goto LABEL_106;
        case 2:
          v74 = *(_OWORD *)v47;
          *(_QWORD *)(((unint64_t)&a1[v18] & v42) + 0x10) = *(_QWORD *)(v47 + 16);
          *(_OWORD *)v46 = v74;
          v75 = 2;
          goto LABEL_108;
        case 3:
          *(_QWORD *)v46 = *(_QWORD *)v47;
          v75 = 3;
          goto LABEL_108;
        case 4:
          v76 = (unint64_t)&a1[v18] & v42;
          v72 = v168;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 32))(v76, v47, v171);
          v73 = 4;
LABEL_106:
          *(_BYTE *)(v46 + v72) = v73;
          goto LABEL_148;
        case 5:
          *(_QWORD *)v46 = *(_QWORD *)v47;
          v75 = 5;
LABEL_108:
          *(_BYTE *)(v46 + v168) = v75;
          goto LABEL_148;
        case 6:
          v77 = v29;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32))(v46, v47, v173);
          v78 = (void *)((v23 + v46) & v43);
          v79 = (const void *)((v23 + v47) & v43);
          if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v158))
          {
            memcpy(v78, v79, v156);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v154 + 32))(v78, v79, v158);
            __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v158);
          }
          v102 = (_OWORD *)(((unint64_t)v78 + v160) & 0xFFFFFFFFFFFFFFF8);
          v103 = (_OWORD *)(((unint64_t)v79 + v160) & 0xFFFFFFFFFFFFFFF8);
          *v102 = *v103;
          v104 = ((unint64_t)v102 + 19) & 0xFFFFFFFFFFFFFFF8;
          v105 = ((unint64_t)v103 + 19) & 0xFFFFFFFFFFFFFFF8;
          v106 = *(_DWORD *)v105;
          *(_BYTE *)(v104 + 4) = *(_BYTE *)(v105 + 4);
          *(_DWORD *)v104 = v106;
          v107 = 6;
          goto LABEL_147;
        case 7:
          v77 = v29;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32))(v46, v47, v173);
          v80 = (void *)((v23 + v46) & v43);
          v81 = (const void *)((v23 + v47) & v43);
          if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, v158))
          {
            memcpy(v80, v81, v156);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v154 + 32))(v80, v81, v158);
            __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v158);
          }
          v108 = (_OWORD *)(((unint64_t)v80 + v160) & 0xFFFFFFFFFFFFFFF8);
          v109 = (_OWORD *)(((unint64_t)v81 + v160) & 0xFFFFFFFFFFFFFFF8);
          *v108 = *v109;
          v110 = ((unint64_t)v108 + 19) & 0xFFFFFFFFFFFFFFF8;
          v111 = ((unint64_t)v109 + 19) & 0xFFFFFFFFFFFFFFF8;
          v112 = *(_DWORD *)v111;
          *(_BYTE *)(v110 + 4) = *(_BYTE *)(v111 + 4);
          *(_DWORD *)v110 = v112;
          v113 = (_OWORD *)(((v46 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          v114 = (_OWORD *)(((v47 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          *v113 = *v114;
          v115 = (_OWORD *)(((unint64_t)v113 + 23) & 0xFFFFFFFFFFFFFFF8);
          v116 = (_OWORD *)(((unint64_t)v114 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v115 = *v116;
          *(_OWORD *)(((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFF8);
          v107 = 7;
LABEL_147:
          *(_BYTE *)(v46 + v168) = v107;
          v29 = v77;
LABEL_148:
          v69 = v166;
          v70 = v164;
          v68 = __n;
          break;
        default:
          v67 = (void *)((unint64_t)&a1[v18] & v42);
          v68 = __n;
          memcpy(v67, (const void *)v47, __n);
          v69 = v166;
          v70 = v164;
          break;
      }
      v117 = (_QWORD *)(((v46 | 7) + v68) & 0xFFFFFFFFFFFFF8);
      v118 = (_QWORD *)(((v47 | 7) + v68) & 0xFFFFFFFFFFFFFFF8);
      *v117 = *v118;
      v119 = ((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8;
      v120 = ((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8;
      v121 = *(_OWORD *)v120;
      v122 = *(_OWORD *)(v120 + 16);
      *(_QWORD *)(v119 + 32) = *(_QWORD *)(v120 + 32);
      *(_OWORD *)v119 = v121;
      *(_OWORD *)(v119 + 16) = v122;
      *(_BYTE *)(v119 + 40) = *(_BYTE *)(v120 + 40);
      if (v69 > 3)
        goto LABEL_153;
      v123 = ((1 << v70) + 1) >> v70;
      v124 = 2;
      if (v123 > 0xFFFD)
        v124 = 4;
      if (v123 <= 0xFD)
LABEL_153:
        v124 = 1;
      v125 = v124 + v69;
      if (v125 <= v29)
        v125 = v29;
      if (v125 <= 9)
        v125 = 9;
      if (v125 > 3)
        goto LABEL_161;
      v126 = ((1 << (8 * v125)) + 3) >> (8 * v125);
      if (v126 > 0xFFFB)
      {
        *(_DWORD *)&a1[v125] = 0;
      }
      else if (v126 > 0xFB)
      {
        *(_WORD *)&a1[v125] = 0;
      }
      else
      {
LABEL_161:
        a1[v125] = 0;
      }
      return v45;
    case 1u:
      v155 = *(_QWORD *)(v14 - 8);
      v157 = v24;
      v159 = v14;
      v161 = v24 + 7;
      __na = v28 + 1;
      v165 = 8 * v31;
      v167 = v31;
      v49 = *(void (**)(_BYTE *, char *, uint64_t))(v6 + 32);
      v45 = a1;
      v169 = v28;
      v49(a1, a2, v5);
      v50 = (unint64_t)&a1[v18] & v42;
      v51 = (unint64_t)&a2[v18] & v42;
      if (*(unsigned __int8 *)(v51 + v169) >= 8u)
      {
        if (v169 <= 3)
          v52 = v169;
        else
          v52 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v51 + v169))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v172 + 32))((unint64_t)&a1[v18] & v42, v51, v174);
          *(_BYTE *)(v50 + v169) = 0;
          goto LABEL_169;
        case 1:
          v86 = (unint64_t)&a1[v18] & v42;
          v87 = v169;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v172 + 32))(v86, v51, v174);
          *(_QWORD *)((v20 + v50) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v20 + v51) & 0xFFFFFFFFFFFFF8);
          v88 = 1;
          goto LABEL_120;
        case 2:
          v89 = *(_OWORD *)v51;
          *(_QWORD *)(((unint64_t)&a1[v18] & v42) + 0x10) = *(_QWORD *)(v51 + 16);
          *(_OWORD *)v50 = v89;
          v90 = 2;
          goto LABEL_122;
        case 3:
          *(_QWORD *)v50 = *(_QWORD *)v51;
          v90 = 3;
          goto LABEL_122;
        case 4:
          v91 = (unint64_t)&a1[v18] & v42;
          v87 = v169;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 32))(v91, v51, v171);
          v88 = 4;
LABEL_120:
          *(_BYTE *)(v50 + v87) = v88;
          goto LABEL_169;
        case 5:
          *(_QWORD *)v50 = *(_QWORD *)v51;
          v90 = 5;
LABEL_122:
          *(_BYTE *)(v50 + v169) = v90;
          goto LABEL_169;
        case 6:
          v92 = v29;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32))(v50, v51, v173);
          v93 = (void *)((v23 + v50) & v43);
          v94 = (const void *)((v23 + v51) & v43);
          if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v159))
          {
            memcpy(v93, v94, v157);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v155 + 32))(v93, v94, v159);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v159);
          }
          v127 = (_OWORD *)(((unint64_t)v93 + v161) & 0xFFFFFFFFFFFFFFF8);
          v128 = (_OWORD *)(((unint64_t)v94 + v161) & 0xFFFFFFFFFFFFFFF8);
          *v127 = *v128;
          v129 = ((unint64_t)v127 + 19) & 0xFFFFFFFFFFFFFFF8;
          v130 = ((unint64_t)v128 + 19) & 0xFFFFFFFFFFFFFFF8;
          v131 = *(_DWORD *)v130;
          *(_BYTE *)(v129 + 4) = *(_BYTE *)(v130 + 4);
          *(_DWORD *)v129 = v131;
          v132 = 6;
          goto LABEL_168;
        case 7:
          v92 = v29;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32))(v50, v51, v173);
          v95 = (void *)((v23 + v50) & v43);
          v96 = (const void *)((v23 + v51) & v43);
          if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v159))
          {
            memcpy(v95, v96, v157);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v155 + 32))(v95, v96, v159);
            __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v159);
          }
          v133 = (_OWORD *)(((unint64_t)v95 + v161) & 0xFFFFFFFFFFFFFFF8);
          v134 = (_OWORD *)(((unint64_t)v96 + v161) & 0xFFFFFFFFFFFFFFF8);
          *v133 = *v134;
          v135 = ((unint64_t)v133 + 19) & 0xFFFFFFFFFFFFFFF8;
          v136 = ((unint64_t)v134 + 19) & 0xFFFFFFFFFFFFFFF8;
          v137 = *(_DWORD *)v136;
          *(_BYTE *)(v135 + 4) = *(_BYTE *)(v136 + 4);
          *(_DWORD *)v135 = v137;
          v138 = (_OWORD *)(((v50 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          v139 = (_OWORD *)(((v51 | 7) + v26) & 0xFFFFFFFFFFFFFFF8);
          *v138 = *v139;
          v140 = (_OWORD *)(((unint64_t)v138 + 23) & 0xFFFFFFFFFFFFFFF8);
          v141 = (_OWORD *)(((unint64_t)v139 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v140 = *v141;
          *(_OWORD *)(((unint64_t)v140 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFF8);
          v132 = 7;
LABEL_168:
          *(_BYTE *)(v50 + v169) = v132;
          v29 = v92;
LABEL_169:
          v84 = v167;
          v85 = v165;
          v83 = __na;
          break;
        default:
          v82 = (void *)((unint64_t)&a1[v18] & v42);
          v83 = __na;
          memcpy(v82, (const void *)v51, __na);
          v84 = v167;
          v85 = v165;
          break;
      }
      v142 = (_QWORD *)(((v50 | 7) + v83) & 0xFFFFFFFFFFFFF8);
      v143 = (_QWORD *)(((v51 | 7) + v83) & 0xFFFFFFFFFFFFFFF8);
      *v142 = *v143;
      v144 = ((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8;
      v145 = ((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8;
      v146 = *(_OWORD *)v145;
      v147 = *(_OWORD *)(v145 + 16);
      *(_QWORD *)(v144 + 32) = *(_QWORD *)(v145 + 32);
      *(_OWORD *)v144 = v146;
      *(_OWORD *)(v144 + 16) = v147;
      *(_BYTE *)(v144 + 40) = *(_BYTE *)(v145 + 40);
      if (v84 > 3)
        goto LABEL_174;
      v148 = ((1 << v85) + 1) >> v85;
      v149 = 2;
      if (v148 > 0xFFFD)
        v149 = 4;
      if (v148 <= 0xFD)
LABEL_174:
        v149 = 1;
      v57 = v149 + v84;
      if (v57 <= v29)
        v57 = v29;
      if (v57 <= 9)
        v57 = 9;
      if (v57 <= 3)
      {
        v65 = 1;
        v150 = ((1 << (8 * v57)) + 3) >> (8 * v57);
        if (v150 > 0xFFFB)
          goto LABEL_197;
        if (v150 > 0xFB)
          goto LABEL_199;
      }
      v59 = 1;
      goto LABEL_195;
    case 2u:
      v45 = a1;
      if (v31 > 3)
        goto LABEL_61;
      v53 = ((1 << v32) + 1) >> v32;
      if (v53 > 0xFFFD)
      {
        v54 = *(_DWORD *)&a2[v31];
      }
      else if (v53 > 0xFD)
      {
        v54 = *(unsigned __int16 *)&a2[v31];
      }
      else
      {
LABEL_61:
        v54 = a2[v31];
      }
      if (v54 >= 2)
      {
        if (v31 <= 3)
          v66 = v31;
        else
          v66 = 4;
        __asm { BR              X13 }
      }
      if (v54 == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        if (v31 > 3)
          goto LABEL_135;
        v99 = ((1 << v32) + 1) >> v32;
        if (v99 > 0xFFFD)
        {
          *(_DWORD *)&a1[v31] = 1;
          goto LABEL_185;
        }
        if (v99 <= 0xFD)
        {
LABEL_135:
          a1[v31] = 1;
          goto LABEL_136;
        }
        *(_WORD *)&a1[v31] = 1;
      }
      else
      {
        v97 = v31;
        v98 = 8 * v31;
        (*(void (**)(_BYTE *, char *))(v30 + 32))(a1, a2);
        v32 = v98;
        v31 = v97;
        if (v97 > 3)
        {
LABEL_131:
          a1[v97] = 0;
LABEL_136:
          if (v31 > 3)
            goto LABEL_140;
          v100 = ((1 << v32) + 1) >> v32;
          v101 = 2;
          if (v100 > 0xFFFD)
            v101 = 4;
          if (v100 <= 0xFD)
LABEL_140:
            v101 = 1;
          goto LABEL_187;
        }
        v99 = ((1 << v98) + 1) >> v98;
        if (v99 > 0xFFFD)
        {
          *(_DWORD *)&a1[v97] = 0;
        }
        else
        {
          if (v99 <= 0xFD)
            goto LABEL_131;
          *(_WORD *)&a1[v97] = 0;
        }
      }
LABEL_185:
      v151 = v99 > 0xFFFD;
      v101 = 2;
      if (v151)
        v101 = 4;
LABEL_187:
      v57 = v101 + v31;
      if (v57 <= v29)
        v57 = v29;
      if (v57 <= 9)
        v57 = 9;
      if (v57 > 3)
      {
LABEL_194:
        v59 = 2;
LABEL_195:
        v45[v57] = v59;
        return v45;
      }
      v152 = ((1 << (8 * v57)) + 3) >> (8 * v57);
      if (v152 > 0xFFFB)
      {
        v65 = 2;
LABEL_197:
        *(_DWORD *)&v45[v57] = v65;
      }
      else
      {
        if (v152 <= 0xFB)
          goto LABEL_194;
        LOWORD(v65) = 2;
LABEL_199:
        *(_WORD *)&v45[v57] = v65;
      }
      return v45;
    case 3u:
      v45 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      if (v31 > 3)
        goto LABEL_66;
      v55 = ((1 << v32) + 1) >> v32;
      v56 = 2;
      if (v55 > 0xFFFD)
        v56 = 4;
      if (v55 <= 0xFD)
LABEL_66:
        v56 = 1;
      v57 = v56 + v31;
      if (v57 <= v29)
        v57 = ((((v28 + (v18 & ~v17) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v57 <= 9)
        v57 = 9;
      if (v57 > 3)
        goto LABEL_74;
      v58 = ((1 << (8 * v57)) + 3) >> (8 * v57);
      if (v58 > 0xFFFB)
      {
        v65 = 3;
        goto LABEL_197;
      }
      if (v58 <= 0xFB)
      {
LABEL_74:
        v59 = 3;
        goto LABEL_195;
      }
      LOWORD(v65) = 3;
      goto LABEL_199;
    default:
      if (v31 > 3)
        goto LABEL_79;
      v60 = ((1 << v32) + 1) >> v32;
      v61 = 2;
      if (v60 > 0xFFFD)
        v61 = 4;
      if (v60 <= 0xFD)
LABEL_79:
        v61 = 1;
      v45 = a1;
      v62 = v61 + v31;
      if (v62 <= v29)
        v62 = ((((v28 + (v18 & ~v17) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      if (v62 <= 9)
        v62 = 9;
      if (v62 > 3)
        goto LABEL_88;
      v63 = ((1 << (8 * v62)) + 3) >> (8 * v62);
      v64 = 2;
      if (v63 > 0xFFFB)
        v64 = 4;
      if (v63 <= 0xFB)
LABEL_88:
        v64 = 1;
      memcpy(a1, a2, v64 + v62);
      return v45;
  }
}

id *sub_1C2B5BDC8(id *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  unsigned int v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  unsigned int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char v71;
  __int128 v72;
  void *v73;
  const void *v74;
  void *v75;
  const void *v76;
  char v77;
  __int128 v78;
  void *v79;
  const void *v80;
  void *v81;
  const void *v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;
  _OWORD *v86;
  _OWORD *v87;
  unint64_t v88;
  unint64_t v89;
  int v90;
  _OWORD *v91;
  _OWORD *v92;
  unint64_t v93;
  unint64_t v94;
  int v95;
  _OWORD *v96;
  _OWORD *v97;
  _OWORD *v98;
  _OWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  unint64_t v102;
  unint64_t v103;
  __int128 v104;
  __int128 v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  unsigned int v109;
  _OWORD *v110;
  _OWORD *v111;
  unint64_t v112;
  unint64_t v113;
  int v114;
  _OWORD *v115;
  _OWORD *v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  _OWORD *v120;
  _OWORD *v121;
  _OWORD *v122;
  _OWORD *v123;
  _QWORD *v124;
  _QWORD *v125;
  unint64_t v126;
  unint64_t v127;
  __int128 v128;
  __int128 v129;
  unsigned int v130;
  uint64_t v131;
  unsigned int v132;
  BOOL v133;
  unsigned int v134;
  id *result;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  size_t __n;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  char v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  size_t v156;

  if (a1 == (id *)a2)
    return a1;
  v6 = sub_1C2CFBCAC();
  v154 = *(_QWORD *)(v6 - 8);
  v155 = v6;
  v7 = *(_QWORD *)(v154 + 64);
  v147 = sub_1C2CFCD44();
  v8 = *(_QWORD *)(v147 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v138 = sub_1C2CFBD9C();
  v10 = *(_QWORD *)(v138 - 8);
  v11 = *(_DWORD *)(v10 + 80) | v9;
  v146 = sub_1C2CFBFD0();
  v12 = *(_QWORD *)(v146 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v148 = sub_1C2CFBF28();
  v14 = *(_QWORD *)(v148 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v11 | v13) & 0xF8 | v15 | 7;
  v153 = v7 + v16;
  v17 = *(_QWORD *)(v8 + 64);
  v137 = v17 + 7;
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17)
    v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v17 <= *(_QWORD *)(v10 + 64))
    v17 = *(_QWORD *)(v10 + 64);
  v144 = *(_QWORD *)(v12 + 64) + v15;
  v145 = v8;
  v136 = *(_QWORD *)(v148 - 8);
  if (*(_DWORD *)(v14 + 84))
    v18 = *(_QWORD *)(v14 + 64);
  else
    v18 = *(_QWORD *)(v14 + 64) + 1;
  __n = v18;
  v140 = v18 + 7;
  v19 = (v18 + 7 + (v144 & ~v15)) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v17 <= v20)
    v17 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  v21 = ((((((v19 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v17 <= v21)
    v17 = v21;
  if (v17 <= 0x18)
    v22 = 24;
  else
    v22 = v17;
  v23 = ((((v22 + ((v7 + v16) & ~v16) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  v142 = *(_QWORD *)(a3 + 16);
  v141 = *(_QWORD *)(v142 - 8);
  if (*(_QWORD *)(v141 + 64) <= 9uLL)
    v24 = 9;
  else
    v24 = *(_QWORD *)(v141 + 64);
  v25 = 8 * v24;
  if (v24 > 3)
    goto LABEL_23;
  v26 = ((1 << v25) + 1) >> v25;
  v27 = 2;
  if (v26 > 0xFFFD)
    v27 = 4;
  if (v26 <= 0xFD)
LABEL_23:
    v27 = 1;
  v28 = v27 + v24;
  if (v28 <= v23)
    v28 = v23;
  if (v28 <= 9)
    v28 = 9;
  if (v28 > 3)
    goto LABEL_29;
  v30 = ((1 << (8 * v28)) + 3) >> (8 * v28);
  if (v30 > 0xFFFB)
  {
    v29 = *(_DWORD *)((char *)a1 + v28);
    goto LABEL_34;
  }
  if (v30 <= 0xFB)
LABEL_29:
    v29 = *((unsigned __int8 *)a1 + v28);
  else
    v29 = *(unsigned __int16 *)((char *)a1 + v28);
LABEL_34:
  if (v29 >= 4)
  {
    if (v24 > 3)
      goto LABEL_39;
    v31 = ((1 << v25) + 1) >> v25;
    v32 = 2;
    if (v31 > 0xFFFD)
      v32 = 4;
    if (v31 <= 0xFD)
LABEL_39:
      v32 = 1;
    v33 = v32 + v24;
    if (v33 <= v23)
      v33 = v23;
    if (v33 <= 9)
      LODWORD(v33) = 9;
    if (v33 <= 3)
      v34 = v33;
    else
      v34 = 4;
    __asm { BR              X15 }
  }
  v156 = v22 + 1;
  v152 = ~v16;
  v143 = ~v15;
  switch(v29)
  {
    case 0u:
      v149 = 8 * v24;
      (*(void (**)(id *, uint64_t))(v154 + 8))(a1, v155);
      v35 = (id *)(((unint64_t)a1 + v153) & v152);
      if (*((unsigned __int8 *)v35 + v22) >= 8u)
      {
        if (v22 <= 3)
          v36 = v22;
        else
          v36 = 4;
        __asm { BR              X12 }
      }
      switch(*((_BYTE *)v35 + v22))
      {
        case 0:
          goto LABEL_72;
        case 1:
          goto LABEL_73;
        case 2:
          goto LABEL_74;
        case 3:
          goto LABEL_75;
        case 4:
          goto LABEL_76;
        case 5:
          goto LABEL_77;
        case 6:
          goto LABEL_78;
        case 7:
          goto LABEL_81;
        default:
          goto LABEL_85;
      }
      goto LABEL_85;
    case 1u:
      v149 = 8 * v24;
      (*(void (**)(id *, uint64_t))(v154 + 8))(a1, v155);
      v35 = (id *)(((unint64_t)a1 + v153) & v152);
      if (*((unsigned __int8 *)v35 + v22) >= 8u)
      {
        if (v22 <= 3)
          v37 = v22;
        else
          v37 = 4;
        __asm { BR              X12 }
      }
      switch(*((_BYTE *)v35 + v22))
      {
        case 0:
LABEL_72:
          (*(void (**)(id *, uint64_t))(v145 + 8))(v35, v147);
          break;
        case 1:
LABEL_73:
          (*(void (**)(id *, uint64_t))(v145 + 8))(v35, v147);
          swift_release();
          break;
        case 2:
LABEL_74:
          swift_bridgeObjectRelease();
          goto LABEL_84;
        case 3:
LABEL_75:
          swift_unknownObjectRelease();
          break;
        case 4:
LABEL_76:
          (*(void (**)(id *, uint64_t))(v10 + 8))(v35, v138);
          break;
        case 5:
LABEL_77:

          break;
        case 6:
LABEL_78:
          (*(void (**)(id *, uint64_t))(v12 + 8))(v35, v146);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v35 + v144) & v143, 1, v148))
            (*(void (**)(unint64_t, uint64_t))(v136 + 8))(((unint64_t)v35 + v144) & v143, v148);
          goto LABEL_84;
        case 7:
LABEL_81:
          (*(void (**)(id *, uint64_t))(v12 + 8))(v35, v146);
          if (!__swift_getEnumTagSinglePayload(((unint64_t)v35 + v144) & v143, 1, v148))
            (*(void (**)(unint64_t, uint64_t))(v136 + 8))(((unint64_t)v35 + v144) & v143, v148);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_84:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
LABEL_85:
      swift_bridgeObjectRelease();
      v41 = (((((unint64_t)v35 | 7) + v156) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      v25 = v149;
      if (*(_QWORD *)(v41 + 24) >= 0xFFFFFFFFuLL)
        __swift_destroy_boxed_opaque_existential_1(v41);
      goto LABEL_90;
    case 2u:
      if (v24 > 3)
        goto LABEL_62;
      v38 = ((1 << v25) + 1) >> v25;
      if (v38 > 0xFFFD)
      {
        v39 = *(_DWORD *)((char *)a1 + v24);
      }
      else if (v38 > 0xFD)
      {
        v39 = *(unsigned __int16 *)((char *)a1 + v24);
      }
      else
      {
LABEL_62:
        v39 = *((unsigned __int8 *)a1 + v24);
      }
      if (v39 >= 2)
      {
        if (v24 <= 3)
          v40 = v24;
        else
          v40 = 4;
        __asm { BR              X12 }
      }
      if (v39 == 1)
LABEL_89:

      else
        (*(void (**)(id *, uint64_t))(v141 + 8))(a1, v142);
LABEL_90:
      if (v24 > 3)
        goto LABEL_94;
      v42 = ((1 << v25) + 1) >> v25;
      v43 = 2;
      if (v42 > 0xFFFD)
        v43 = 4;
      if (v42 <= 0xFD)
LABEL_94:
        v43 = 1;
      v44 = v43 + v24;
      if (v44 <= v23)
        v44 = v23;
      if (v44 <= 9)
        v44 = 9;
      if (v44 > 3)
        goto LABEL_100;
      v46 = ((1 << (8 * v44)) + 3) >> (8 * v44);
      if (v46 > 0xFFFB)
      {
        v45 = *(_DWORD *)&a2[v44];
      }
      else if (v46 <= 0xFB)
      {
LABEL_100:
        v45 = a2[v44];
      }
      else
      {
        v45 = *(unsigned __int16 *)&a2[v44];
      }
      if (v45 >= 4)
      {
        if (v24 > 3)
          goto LABEL_110;
        v47 = ((1 << v25) + 1) >> v25;
        v48 = 2;
        if (v47 > 0xFFFD)
          v48 = 4;
        if (v47 <= 0xFD)
LABEL_110:
          v48 = 1;
        v49 = v48 + v24;
        if (v49 <= v23)
          v49 = v23;
        if (v49 <= 9)
          LODWORD(v49) = 9;
        if (v49 <= 3)
          v50 = v49;
        else
          v50 = 4;
        __asm { BR              X13 }
      }
      return result;
    case 3u:
      goto LABEL_89;
    default:
      goto LABEL_90;
  }
  switch(v45)
  {
    case 0u:
      v150 = v25;
      (*(void (**)(id *, char *, uint64_t))(v154 + 32))(a1, a2, v155);
      v51 = ((unint64_t)a1 + v153) & v152;
      v52 = (unint64_t)&a2[v153] & v152;
      if (*(unsigned __int8 *)(v52 + v22) >= 8u)
      {
        if (v22 <= 3)
          v53 = v22;
        else
          v53 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v52 + v22))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v145 + 32))(((unint64_t)a1 + v153) & v152, v52, v147);
          *(_BYTE *)(v51 + v22) = 0;
          break;
        case 1:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v145 + 32))(((unint64_t)a1 + v153) & v152, v52, v147);
          *(_QWORD *)((v137 + v51) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v137 + v52) & 0xFFFFFFFFFFFFF8);
          v71 = 1;
          goto LABEL_215;
        case 2:
          v72 = *(_OWORD *)v52;
          *(_QWORD *)((((unint64_t)a1 + v153) & v152) + 0x10) = *(_QWORD *)(v52 + 16);
          *(_OWORD *)v51 = v72;
          v71 = 2;
          goto LABEL_215;
        case 3:
          *(_QWORD *)v51 = *(_QWORD *)v52;
          v71 = 3;
          goto LABEL_215;
        case 4:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)a1 + v153) & v152, v52, v138);
          v71 = 4;
          goto LABEL_215;
        case 5:
          *(_QWORD *)v51 = *(_QWORD *)v52;
          v71 = 5;
          goto LABEL_215;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 32))(((unint64_t)a1 + v153) & v152, v52, v146);
          v73 = (void *)((v144 + v51) & v143);
          v74 = (const void *)((v144 + v52) & v143);
          if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v148))
          {
            memcpy(v73, v74, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v136 + 32))(v73, v74, v148);
            __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v148);
          }
          v86 = (_OWORD *)(((unint64_t)v73 + v140) & 0xFFFFFFFFFFFFFFF8);
          v87 = (_OWORD *)(((unint64_t)v74 + v140) & 0xFFFFFFFFFFFFFFF8);
          *v86 = *v87;
          v88 = ((unint64_t)v86 + 19) & 0xFFFFFFFFFFFFFFF8;
          v89 = ((unint64_t)v87 + 19) & 0xFFFFFFFFFFFFFFF8;
          v90 = *(_DWORD *)v89;
          *(_BYTE *)(v88 + 4) = *(_BYTE *)(v89 + 4);
          *(_DWORD *)v88 = v90;
          v71 = 6;
          goto LABEL_215;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 32))(((unint64_t)a1 + v153) & v152, v52, v146);
          v75 = (void *)((v144 + v51) & v143);
          v76 = (const void *)((v144 + v52) & v143);
          if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v148))
          {
            memcpy(v75, v76, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v136 + 32))(v75, v76, v148);
            __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v148);
          }
          v91 = (_OWORD *)(((unint64_t)v75 + v140) & 0xFFFFFFFFFFFFFFF8);
          v92 = (_OWORD *)(((unint64_t)v76 + v140) & 0xFFFFFFFFFFFFFFF8);
          *v91 = *v92;
          v93 = ((unint64_t)v91 + 19) & 0xFFFFFFFFFFFFFFF8;
          v94 = ((unint64_t)v92 + 19) & 0xFFFFFFFFFFFFFFF8;
          v95 = *(_DWORD *)v94;
          *(_BYTE *)(v93 + 4) = *(_BYTE *)(v94 + 4);
          *(_DWORD *)v93 = v95;
          v96 = (_OWORD *)(((v51 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          v97 = (_OWORD *)(((v52 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *v96 = *v97;
          v98 = (_OWORD *)(((unint64_t)v96 + 23) & 0xFFFFFFFFFFFFFFF8);
          v99 = (_OWORD *)(((unint64_t)v97 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v98 = *v99;
          *(_OWORD *)(((unint64_t)v98 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v99 + 23) & 0xFFFFFFFFFFFFF8);
          v71 = 7;
LABEL_215:
          *(_BYTE *)(v51 + v22) = v71;
          break;
        default:
          memcpy((void *)(((unint64_t)a1 + v153) & v152), (const void *)v52, v156);
          break;
      }
      v100 = (_QWORD *)(((v51 | 7) + v156) & 0xFFFFFFFFFFFFF8);
      v101 = (_QWORD *)(((v52 | 7) + v156) & 0xFFFFFFFFFFFFFFF8);
      *v100 = *v101;
      v102 = ((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8;
      v103 = ((unint64_t)v101 + 15) & 0xFFFFFFFFFFFFFFF8;
      v104 = *(_OWORD *)v103;
      v105 = *(_OWORD *)(v103 + 16);
      *(_QWORD *)(v102 + 32) = *(_QWORD *)(v103 + 32);
      *(_OWORD *)v102 = v104;
      *(_OWORD *)(v102 + 16) = v105;
      *(_BYTE *)(v102 + 40) = *(_BYTE *)(v103 + 40);
      if (v24 > 3)
        goto LABEL_220;
      v106 = ((1 << v150) + 1) >> v150;
      v107 = 2;
      if (v106 > 0xFFFD)
        v107 = 4;
      if (v106 <= 0xFD)
LABEL_220:
        v107 = 1;
      v108 = v107 + v24;
      if (v108 <= v23)
        v108 = v23;
      if (v108 <= 9)
        v108 = 9;
      if (v108 > 3)
        goto LABEL_228;
      v109 = ((1 << (8 * v108)) + 3) >> (8 * v108);
      if (v109 > 0xFFFB)
      {
        *(_DWORD *)((char *)a1 + v108) = 0;
      }
      else if (v109 > 0xFB)
      {
        *(_WORD *)((char *)a1 + v108) = 0;
      }
      else
      {
LABEL_228:
        *((_BYTE *)a1 + v108) = 0;
      }
      return a1;
    case 1u:
      v151 = v25;
      (*(void (**)(id *, char *, uint64_t))(v154 + 32))(a1, a2, v155);
      v54 = ((unint64_t)a1 + v153) & v152;
      v55 = (unint64_t)&a2[v153] & v152;
      if (*(unsigned __int8 *)(v55 + v22) >= 8u)
      {
        if (v22 <= 3)
          v56 = v22;
        else
          v56 = 4;
        __asm { BR              X12 }
      }
      switch(*(_BYTE *)(v55 + v22))
      {
        case 0:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v145 + 32))(((unint64_t)a1 + v153) & v152, v55, v147);
          *(_BYTE *)(v54 + v22) = 0;
          break;
        case 1:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v145 + 32))(((unint64_t)a1 + v153) & v152, v55, v147);
          *(_QWORD *)((v137 + v54) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v137 + v55) & 0xFFFFFFFFFFFFF8);
          v77 = 1;
          goto LABEL_235;
        case 2:
          v78 = *(_OWORD *)v55;
          *(_QWORD *)((((unint64_t)a1 + v153) & v152) + 0x10) = *(_QWORD *)(v55 + 16);
          *(_OWORD *)v54 = v78;
          v77 = 2;
          goto LABEL_235;
        case 3:
          *(_QWORD *)v54 = *(_QWORD *)v55;
          v77 = 3;
          goto LABEL_235;
        case 4:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)a1 + v153) & v152, v55, v138);
          v77 = 4;
          goto LABEL_235;
        case 5:
          *(_QWORD *)v54 = *(_QWORD *)v55;
          v77 = 5;
          goto LABEL_235;
        case 6:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 32))(((unint64_t)a1 + v153) & v152, v55, v146);
          v79 = (void *)((v144 + v54) & v143);
          v80 = (const void *)((v144 + v55) & v143);
          if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v148))
          {
            memcpy(v79, v80, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v136 + 32))(v79, v80, v148);
            __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v148);
          }
          v110 = (_OWORD *)(((unint64_t)v79 + v140) & 0xFFFFFFFFFFFFFFF8);
          v111 = (_OWORD *)(((unint64_t)v80 + v140) & 0xFFFFFFFFFFFFFFF8);
          *v110 = *v111;
          v112 = ((unint64_t)v110 + 19) & 0xFFFFFFFFFFFFFFF8;
          v113 = ((unint64_t)v111 + 19) & 0xFFFFFFFFFFFFFFF8;
          v114 = *(_DWORD *)v113;
          *(_BYTE *)(v112 + 4) = *(_BYTE *)(v113 + 4);
          *(_DWORD *)v112 = v114;
          v77 = 6;
          goto LABEL_235;
        case 7:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 32))(((unint64_t)a1 + v153) & v152, v55, v146);
          v81 = (void *)((v144 + v54) & v143);
          v82 = (const void *)((v144 + v55) & v143);
          if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v148))
          {
            memcpy(v81, v82, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v136 + 32))(v81, v82, v148);
            __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v148);
          }
          v115 = (_OWORD *)(((unint64_t)v81 + v140) & 0xFFFFFFFFFFFFFFF8);
          v116 = (_OWORD *)(((unint64_t)v82 + v140) & 0xFFFFFFFFFFFFFFF8);
          *v115 = *v116;
          v117 = ((unint64_t)v115 + 19) & 0xFFFFFFFFFFFFFFF8;
          v118 = ((unint64_t)v116 + 19) & 0xFFFFFFFFFFFFFFF8;
          v119 = *(_DWORD *)v118;
          *(_BYTE *)(v117 + 4) = *(_BYTE *)(v118 + 4);
          *(_DWORD *)v117 = v119;
          v120 = (_OWORD *)(((v54 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          v121 = (_OWORD *)(((v55 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *v120 = *v121;
          v122 = (_OWORD *)(((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8);
          v123 = (_OWORD *)(((unint64_t)v121 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v122 = *v123;
          *(_OWORD *)(((unint64_t)v122 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v123 + 23) & 0xFFFFFFFFFFFFF8);
          v77 = 7;
LABEL_235:
          *(_BYTE *)(v54 + v22) = v77;
          break;
        default:
          memcpy((void *)(((unint64_t)a1 + v153) & v152), (const void *)v55, v156);
          break;
      }
      v124 = (_QWORD *)(((v54 | 7) + v156) & 0xFFFFFFFFFFFFF8);
      v125 = (_QWORD *)(((v55 | 7) + v156) & 0xFFFFFFFFFFFFFFF8);
      *v124 = *v125;
      v126 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
      v127 = ((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8;
      v128 = *(_OWORD *)v127;
      v129 = *(_OWORD *)(v127 + 16);
      *(_QWORD *)(v126 + 32) = *(_QWORD *)(v127 + 32);
      *(_OWORD *)v126 = v128;
      *(_OWORD *)(v126 + 16) = v129;
      *(_BYTE *)(v126 + 40) = *(_BYTE *)(v127 + 40);
      if (v24 > 3)
        goto LABEL_240;
      v130 = ((1 << v151) + 1) >> v151;
      v131 = 2;
      if (v130 > 0xFFFD)
        v131 = 4;
      if (v130 <= 0xFD)
LABEL_240:
        v131 = 1;
      v61 = v131 + v24;
      if (v61 <= v23)
        v61 = v23;
      if (v61 <= 9)
        v61 = 9;
      if (v61 <= 3)
      {
        v69 = 1;
        v132 = ((1 << (8 * v61)) + 3) >> (8 * v61);
        if (v132 > 0xFFFB)
          goto LABEL_263;
        if (v132 > 0xFB)
          goto LABEL_265;
      }
      v63 = 1;
      goto LABEL_261;
    case 2u:
      if (v24 > 3)
        goto LABEL_133;
      v57 = ((1 << v25) + 1) >> v25;
      if (v57 > 0xFFFD)
      {
        v58 = *(_DWORD *)&a2[v24];
      }
      else if (v57 > 0xFD)
      {
        v58 = *(unsigned __int16 *)&a2[v24];
      }
      else
      {
LABEL_133:
        v58 = a2[v24];
      }
      if (v58 >= 2)
      {
        if (v24 <= 3)
          v70 = v24;
        else
          v70 = 4;
        __asm { BR              X12 }
      }
      if (v58 == 1)
      {
        *a1 = *(id *)a2;
        *((_BYTE *)a1 + 8) = a2[8];
        if (v24 > 3)
          goto LABEL_203;
        v83 = ((1 << v25) + 1) >> v25;
        if (v83 > 0xFFFD)
        {
          *(_DWORD *)((char *)a1 + v24) = 1;
          goto LABEL_251;
        }
        if (v83 <= 0xFD)
        {
LABEL_203:
          *((_BYTE *)a1 + v24) = 1;
          goto LABEL_204;
        }
        *(_WORD *)((char *)a1 + v24) = 1;
      }
      else
      {
        (*(void (**)(id *, char *, uint64_t))(v141 + 32))(a1, a2, v142);
        if (v24 > 3)
        {
LABEL_199:
          *((_BYTE *)a1 + v24) = 0;
LABEL_204:
          if (v24 > 3)
            goto LABEL_208;
          v84 = ((1 << v25) + 1) >> v25;
          v85 = 2;
          if (v84 > 0xFFFD)
            v85 = 4;
          if (v84 <= 0xFD)
LABEL_208:
            v85 = 1;
          goto LABEL_253;
        }
        v83 = ((1 << v25) + 1) >> v25;
        if (v83 > 0xFFFD)
        {
          *(_DWORD *)((char *)a1 + v24) = 0;
        }
        else
        {
          if (v83 <= 0xFD)
            goto LABEL_199;
          *(_WORD *)((char *)a1 + v24) = 0;
        }
      }
LABEL_251:
      v133 = v83 > 0xFFFD;
      v85 = 2;
      if (v133)
        v85 = 4;
LABEL_253:
      v61 = v85 + v24;
      if (v61 <= v23)
        v61 = v23;
      if (v61 <= 9)
        v61 = 9;
      if (v61 > 3)
      {
LABEL_260:
        v63 = 2;
LABEL_261:
        *((_BYTE *)a1 + v61) = v63;
        return a1;
      }
      v134 = ((1 << (8 * v61)) + 3) >> (8 * v61);
      if (v134 > 0xFFFB)
      {
        v69 = 2;
LABEL_263:
        *(_DWORD *)((char *)a1 + v61) = v69;
      }
      else
      {
        if (v134 <= 0xFB)
          goto LABEL_260;
        LOWORD(v69) = 2;
LABEL_265:
        *(_WORD *)((char *)a1 + v61) = v69;
      }
      return a1;
    case 3u:
      *a1 = *(id *)a2;
      *((_BYTE *)a1 + 8) = a2[8];
      if (v24 > 3)
        goto LABEL_138;
      v59 = ((1 << v25) + 1) >> v25;
      v60 = 2;
      if (v59 > 0xFFFD)
        v60 = 4;
      if (v59 <= 0xFD)
LABEL_138:
        v60 = 1;
      v61 = v60 + v24;
      if (v61 <= v23)
        v61 = v23;
      if (v61 <= 9)
        v61 = 9;
      if (v61 > 3)
        goto LABEL_146;
      v62 = ((1 << (8 * v61)) + 3) >> (8 * v61);
      if (v62 > 0xFFFB)
      {
        v69 = 3;
        goto LABEL_263;
      }
      if (v62 <= 0xFB)
      {
LABEL_146:
        v63 = 3;
        goto LABEL_261;
      }
      LOWORD(v69) = 3;
      goto LABEL_265;
    default:
      if (v24 > 3)
        goto LABEL_151;
      v64 = ((1 << v25) + 1) >> v25;
      v65 = 2;
      if (v64 > 0xFFFD)
        v65 = 4;
      if (v64 <= 0xFD)
LABEL_151:
        v65 = 1;
      v66 = v65 + v24;
      if (v66 <= v23)
        v66 = v23;
      if (v66 <= 9)
        v66 = 9;
      if (v66 > 3)
        goto LABEL_160;
      v67 = ((1 << (8 * v66)) + 3) >> (8 * v66);
      v68 = 2;
      if (v67 > 0xFFFB)
        v68 = 4;
      if (v67 <= 0xFB)
LABEL_160:
        v68 = 1;
      memcpy(a1, a2, v68 + v66);
      return a1;
  }
}

uint64_t sub_1C2B5D278(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  int v31;
  unsigned int v32;
  char v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  unsigned int v49;
  int v50;
  char v51;
  int v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  unsigned int v57;
  char v58;
  int v59;
  unsigned int v60;
  char v61;
  unsigned int v62;

  v6 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v7 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v11 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v10 | v12) & 0xF8 | v14 | 7;
  v16 = (v6 + v15) & ~v15;
  v17 = *(_QWORD *)(v7 + 64);
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17)
    v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v17 <= *(_QWORD *)(v9 + 64))
    v17 = *(_QWORD *)(v9 + 64);
  v18 = *(_DWORD *)(v13 + 84);
  v19 = *(_QWORD *)(v13 + 64) + ((*(_QWORD *)(v11 + 64) + v14) & ~v14);
  if (!v18)
    ++v19;
  v20 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v17 > v21)
    v21 = v17;
  v22 = ((((((v20 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 > v22)
    v22 = v21;
  if (v22 <= 0x18)
    v22 = 24;
  v23 = ((((v16 + v22 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (v24 <= 9)
    v24 = 9;
  v25 = 8 * v24;
  if (v24 > 3)
    goto LABEL_19;
  v26 = ((1 << v25) + 1) >> v25;
  v27 = 2;
  if (v26 > 0xFFFD)
    v27 = 4;
  if (v26 <= 0xFD)
LABEL_19:
    v27 = 1;
  v28 = v27 + v24;
  if (v28 <= v23)
    v28 = v23;
  v29 = 9;
  if (v28 > 9)
    v29 = v28;
  v30 = 8;
  if (v29 > 3)
  {
    v31 = 5;
    goto LABEL_34;
  }
  v32 = ((1 << (8 * v29)) + 3) >> (8 * v29);
  if (v32 >= 0xFFFC)
    v33 = 32;
  else
    v33 = 16;
  if (v32 >= 0xFC)
    v30 = v33;
  else
    v30 = 8;
  if (v32 <= 0xFFFB)
  {
    v31 = v32 + 4;
LABEL_34:
    v34 = (1 << v30) - v31;
    if ((v34 & 0x80000000) == 0)
      goto LABEL_36;
  }
  v34 = 0x7FFFFFFF;
LABEL_36:
  if (v24 > 3)
    goto LABEL_40;
  v35 = ((1 << v25) + 1) >> v25;
  v36 = 2;
  if (v35 > 0xFFFD)
    v36 = 4;
  if (v35 <= 0xFD)
LABEL_40:
    v36 = 1;
  v37 = v36 + v24;
  if (v37 <= v23)
    v37 = v23;
  if (v37 <= 9)
    v37 = 9;
  if (v37 > 3)
    goto LABEL_49;
  v38 = ((1 << (8 * v37)) + 3) >> (8 * v37);
  v39 = 2;
  if (v38 > 0xFFFB)
    v39 = 4;
  if (v38 <= 0xFB)
LABEL_49:
    v39 = 1;
  if (!a2)
    return 0;
  if (a2 <= v34)
    goto LABEL_69;
  v40 = v39 + v37;
  v41 = 8 * v40;
  if (v40 <= 3)
  {
    v43 = ((a2 - v34 + ~(-1 << v41)) >> v41) + 1;
    if (HIWORD(v43))
    {
      v42 = *(_DWORD *)(a1 + v40);
      if (!v42)
        goto LABEL_69;
      goto LABEL_60;
    }
    if (v43 > 0xFF)
    {
      v42 = *(unsigned __int16 *)(a1 + v40);
      if (!*(_WORD *)(a1 + v40))
        goto LABEL_69;
      goto LABEL_60;
    }
    if (v43 < 2)
    {
LABEL_69:
      if (v34)
      {
        if (v24 > 3)
          goto LABEL_74;
        v46 = ((1 << v25) + 1) >> v25;
        v47 = 2;
        if (v46 > 0xFFFD)
          v47 = 4;
        if (v46 <= 0xFD)
LABEL_74:
          v47 = 1;
        v48 = v47 + v24;
        if (v48 <= v23)
          v48 = v23;
        if (v48 <= 9)
          v48 = 9;
        if (v48 > 3)
          goto LABEL_82;
        v49 = ((1 << (8 * v48)) + 3) >> (8 * v48);
        if (v49 > 0xFFFB)
        {
          v52 = 0;
          v50 = *(_DWORD *)(a1 + v48);
          goto LABEL_86;
        }
        if (v49 > 0xFB)
        {
          v50 = *(unsigned __int16 *)(a1 + v48);
          v51 = 16;
        }
        else
        {
LABEL_82:
          v50 = *(unsigned __int8 *)(a1 + v48);
          v51 = 8;
        }
        v52 = -1 << v51;
LABEL_86:
        v53 = v52 | v50;
        if (v24 > 3)
          goto LABEL_90;
        v54 = ((1 << v25) + 1) >> v25;
        v55 = 2;
        if (v54 > 0xFFFD)
          v55 = 4;
        if (v54 <= 0xFD)
LABEL_90:
          v55 = 1;
        v56 = v55 + v24;
        if (v56 > v23)
          v23 = v56;
        v57 = 9;
        if (v23 > 9)
          v57 = v23;
        v58 = 8;
        if (v57 <= 3)
        {
          v60 = ((1 << (8 * v57)) + 3) >> (8 * v57);
          if (v60 >= 0xFFFC)
            v61 = 32;
          else
            v61 = 16;
          if (v60 >= 0xFC)
            v58 = v61;
          else
            v58 = 8;
          if (v60 > 0xFFFB)
          {
LABEL_106:
            v62 = 0x7FFFFFFF;
LABEL_107:
            if (v62 > ~v53)
              return -v53;
            else
              return 0;
          }
          v59 = v60 + 4;
        }
        else
        {
          v59 = 5;
        }
        v62 = (1 << v58) - v59;
        if ((v62 & 0x80000000) == 0)
          goto LABEL_107;
        goto LABEL_106;
      }
      return 0;
    }
  }
  v42 = *(unsigned __int8 *)(a1 + v40);
  if (!*(_BYTE *)(a1 + v40))
    goto LABEL_69;
LABEL_60:
  v44 = (v42 - 1) << v41;
  if (v40 > 3)
    v44 = 0;
  if ((_DWORD)v40)
  {
    if (v40 <= 3)
      v45 = v40;
    else
      v45 = 4;
    __asm { BR              X12 }
  }
  return v34 + v44 + 1;
}

void sub_1C2B5D790(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  char v32;
  int v33;
  unsigned int v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int v40;
  uint64_t v41;
  size_t v42;
  char v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;

  v8 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v9 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v12 = *(_DWORD *)(v11 + 80) | v10;
  v13 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v12 | v14) & 0xF8 | v16 | 7;
  v18 = (v8 + v17) & ~v17;
  v19 = *(_QWORD *)(v9 + 64);
  if (((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
    v19 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v19 <= *(_QWORD *)(v11 + 64))
    v19 = *(_QWORD *)(v11 + 64);
  v20 = *(_DWORD *)(v15 + 84);
  v21 = *(_QWORD *)(v15 + 64) + ((*(_QWORD *)(v13 + 64) + v16) & ~v16);
  if (!v20)
    ++v21;
  v22 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v19 > v23)
    v23 = v19;
  v24 = ((((((v22 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 > v24)
    v24 = v23;
  if (v24 <= 0x18)
    v24 = 24;
  v25 = ((((v18 + v24 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v26 <= 9)
    v26 = 9;
  v27 = 8 * v26;
  if (v26 > 3)
    goto LABEL_19;
  v28 = ((1 << v27) + 1) >> v27;
  v29 = 2;
  if (v28 > 0xFFFD)
    v29 = 4;
  if (v28 <= 0xFD)
LABEL_19:
    v29 = 1;
  v30 = v29 + v26;
  if (v30 <= v25)
    v30 = v25;
  v31 = 9;
  if (v30 > 9)
    v31 = v30;
  v32 = 8;
  if (v31 <= 3)
  {
    v34 = ((1 << (8 * v31)) + 3) >> (8 * v31);
    if (v34 >= 0xFFFC)
      v35 = 32;
    else
      v35 = 16;
    if (v34 >= 0xFC)
      v32 = v35;
    else
      v32 = 8;
    if (v34 > 0xFFFB)
      goto LABEL_35;
    v33 = v34 + 4;
  }
  else
  {
    v33 = 5;
  }
  v36 = (1 << v32) - v33;
  if ((v36 & 0x80000000) == 0)
  {
LABEL_36:
    if (v26 > 3)
      goto LABEL_40;
    v37 = ((1 << v27) + 1) >> v27;
    v38 = 2;
    if (v37 > 0xFFFD)
      v38 = 4;
    if (v37 <= 0xFD)
LABEL_40:
      v38 = 1;
    v39 = v38 + v26;
    if (v39 <= v25)
      v39 = v25;
    if (v39 <= 9)
      v39 = 9;
    if (v39 > 3)
      goto LABEL_49;
    v40 = ((1 << (8 * v39)) + 3) >> (8 * v39);
    v41 = 2;
    if (v40 > 0xFFFB)
      v41 = 4;
    if (v40 <= 0xFB)
LABEL_49:
      v41 = 1;
    v42 = v41 + v39;
    v43 = 8 * (v41 + v39);
    if (a3 <= v36)
    {
      v44 = 0u;
    }
    else if (v42 <= 3)
    {
      v46 = ((a3 - v36 + ~(-1 << v43)) >> v43) + 1;
      if (HIWORD(v46))
      {
        v44 = 4u;
      }
      else if (v46 >= 0x100)
      {
        v44 = 2;
      }
      else
      {
        v44 = v46 > 1;
      }
    }
    else
    {
      v44 = 1u;
    }
    if (v36 < a2)
    {
      v45 = ~v36 + a2;
      if (v42 < 4)
      {
        if ((_DWORD)v42)
        {
          v47 = v45 & ~(-1 << v43);
          bzero(a1, v42);
          if ((_DWORD)v42 == 3)
          {
            *(_WORD *)a1 = v47;
            a1[2] = BYTE2(v47);
          }
          else if ((_DWORD)v42 == 2)
          {
            *(_WORD *)a1 = v47;
          }
          else
          {
            *a1 = v47;
          }
        }
      }
      else
      {
        bzero(a1, v42);
        *(_DWORD *)a1 = v45;
      }
      __asm { BR              X10 }
    }
    __asm { BR              X13 }
  }
LABEL_35:
  v36 = 0x7FFFFFFF;
  goto LABEL_36;
}

uint64_t sub_1C2B5DC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v4 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v5 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v8 = *(_DWORD *)(v7 + 80) | v6;
  v9 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(sub_1C2CFBF28() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v8 | v10) & 0xF8 | v12 | 7;
  v14 = (v4 + v13) & ~v13;
  v15 = *(_QWORD *)(v5 + 64);
  if (((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v15)
    v15 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v15 <= *(_QWORD *)(v7 + 64))
    v15 = *(_QWORD *)(v7 + 64);
  v16 = *(_DWORD *)(v11 + 84);
  v17 = *(_QWORD *)(v11 + 64) + ((*(_QWORD *)(v9 + 64) + v12) & ~v12);
  if (!v16)
    ++v17;
  v18 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v15 > v19)
    v19 = v15;
  v20 = ((((((v18 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 > v20)
    v20 = v19;
  if (v20 <= 0x18)
    v20 = 24;
  v21 = ((((v14 + v20 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (v22 <= 9)
    v22 = 9;
  v23 = 8 * v22;
  if (v22 > 3)
    goto LABEL_19;
  v24 = ((1 << v23) + 1) >> v23;
  v25 = 2;
  if (v24 > 0xFFFD)
    v25 = 4;
  if (v24 <= 0xFD)
LABEL_19:
    v25 = 1;
  v26 = v25 + v22;
  if (v26 <= v21)
    v26 = v21;
  if (v26 <= 9)
    v26 = 9;
  if (v26 > 3)
    goto LABEL_25;
  v28 = ((1 << (8 * v26)) + 3) >> (8 * v26);
  if (v28 > 0xFFFB)
  {
    result = *(unsigned int *)(a1 + v26);
  }
  else
  {
    if (v28 <= 0xFB)
    {
LABEL_25:
      result = *(unsigned __int8 *)(a1 + v26);
      goto LABEL_30;
    }
    result = *(unsigned __int16 *)(a1 + v26);
  }
LABEL_30:
  if (result >= 4)
  {
    if (v22 > 3)
      goto LABEL_35;
    v29 = ((1 << v23) + 1) >> v23;
    v30 = 2;
    if (v29 > 0xFFFD)
      v30 = 4;
    if (v29 <= 0xFD)
LABEL_35:
      v30 = 1;
    v31 = v30 + v22;
    if (v31 > v21)
      v21 = v31;
    if (v21 <= 9)
      LODWORD(v21) = 9;
    if (v21 <= 3)
      v32 = v21;
    else
      v32 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_1C2B5DEF8(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  char v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  size_t v44;
  int v45;

  v6 = *(_QWORD *)(*(_QWORD *)(sub_1C2CFBCAC() - 8) + 64);
  v7 = *(_QWORD *)(sub_1C2CFCD44() - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(sub_1C2CFBD9C() - 8);
  v10 = *(_DWORD *)(v9 + 80) | v8;
  v11 = *(_QWORD *)(sub_1C2CFBFD0() - 8);
  v12 = *(_DWORD *)(v11 + 80);
  result = sub_1C2CFBF28();
  v14 = *(_QWORD *)(result - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v10 | v12) & 0xF8 | v15 | 7;
  v17 = (v6 + v16) & ~v16;
  v18 = *(_QWORD *)(v7 + 64);
  if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18)
    v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v18 <= *(_QWORD *)(v9 + 64))
    v18 = *(_QWORD *)(v9 + 64);
  v19 = *(_DWORD *)(v14 + 84);
  v20 = *(_QWORD *)(v14 + 64) + ((*(_QWORD *)(v11 + 64) + v15) & ~v15);
  if (!v19)
    ++v20;
  v21 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v18 > v22)
    v22 = v18;
  v23 = ((((((v21 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v22 > v23)
    v23 = v22;
  if (v23 <= 0x18)
    v23 = 24;
  v24 = ((((v17 + v23 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (v25 <= 9)
    v25 = 9;
  if (a2 > 3)
  {
    v29 = 8 * v25;
    if (v25 > 3)
      goto LABEL_31;
    v30 = ((1 << v29) + 1) >> v29;
    v31 = 2;
    if (v30 > 0xFFFD)
      v31 = 4;
    if (v30 <= 0xFD)
LABEL_31:
      v31 = 1;
    v32 = v31 + v25;
    if (v32 <= v24)
      v32 = v24;
    if (v32 <= 9)
      LODWORD(v32) = 9;
    v33 = v32 > 3;
    v34 = 8 * v32;
    if (v33)
      v35 = 4;
    else
      v35 = ((a2 - 4) >> v34) + 4;
    if (v25 > 3)
      goto LABEL_43;
    v36 = ((1 << v29) + 1) >> v29;
    v37 = 2;
    if (v36 > 0xFFFD)
      v37 = 4;
    if (v36 <= 0xFD)
LABEL_43:
      v37 = 1;
    v38 = v37 + v25;
    if (v38 <= v24)
      v38 = v24;
    if (v38 <= 9)
      v38 = 9;
    if (v38 > 3)
      goto LABEL_49;
    v40 = ((1 << (8 * v38)) + 3) >> (8 * v38);
    if (v40 > 0xFFFB)
    {
      *(_DWORD *)&a1[v38] = v35;
      goto LABEL_58;
    }
    if (v40 <= 0xFB)
LABEL_49:
      a1[v38] = v35;
    else
      *(_WORD *)&a1[v38] = v35;
LABEL_58:
    if (v25 > 3)
      goto LABEL_62;
    v41 = ((1 << v29) + 1) >> v29;
    v42 = 2;
    if (v41 > 0xFFFD)
      v42 = 4;
    if (v41 <= 0xFD)
LABEL_62:
      v42 = 1;
    v43 = v42 + v25;
    if (v43 > v24)
      v24 = v43;
    if (v24 <= 9)
      v44 = 9;
    else
      v44 = v24;
    if (v44 >= 4)
      v45 = 4;
    else
      v45 = v44;
    bzero(a1, v44);
    __asm { BR              X10 }
  }
  if (v25 > 3)
    goto LABEL_20;
  v26 = ((1 << (8 * v25)) + 1) >> (8 * v25);
  v27 = 2;
  if (v26 > 0xFFFD)
    v27 = 4;
  if (v26 <= 0xFD)
LABEL_20:
    v27 = 1;
  v28 = v27 + v25;
  if (v28 > v24)
    v24 = v28;
  if (v24 <= 9)
    v24 = 9;
  if (v24 > 3)
    goto LABEL_26;
  v39 = ((1 << (8 * v24)) + 3) >> (8 * v24);
  if (v39 > 0xFFFB)
  {
    *(_DWORD *)&a1[v24] = a2;
  }
  else
  {
    if (v39 <= 0xFB)
    {
LABEL_26:
      a1[v24] = a2;
      return result;
    }
    *(_WORD *)&a1[v24] = a2;
  }
  return result;
}

uint64_t sub_1C2B5E2C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_53_26();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_16_50(v1);
  return sub_1C2B58A04(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B5E318()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_71_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_2_77(v1);
  OUTLINED_FUNCTION_164_3();
  return sub_1C2B58984(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B5E364()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_71_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_2_77(v1);
  OUTLINED_FUNCTION_164_3();
  return sub_1C2B58904(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B5E3B0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2B5E3D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_71_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_2_77(v1);
  OUTLINED_FUNCTION_164_3();
  return sub_1C28DDA04(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B5E420()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_53_26();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_16_50(v1);
  return sub_1C2B58878(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B5E474()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B58768(v2, v3);
}

uint64_t sub_1C2B5E4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_164();
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_86(v4);
  *v5 = v3;
  v5[1] = sub_1C28BCB84;
  return sub_1C2B587C4(v0, v2, v1);
}

uint64_t sub_1C2B5E514()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B5870C(v2, v3);
}

uint64_t sub_1C2B5E558()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B586B0(v2, v3);
}

uint64_t sub_1C2B5E59C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_53_26();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_16_50(v1);
  return sub_1C2B58A90(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B5E5F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_71_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_2_77(v1);
  OUTLINED_FUNCTION_164_3();
  return sub_1C2B58D28(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B5E63C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_71_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_2_77(v1);
  OUTLINED_FUNCTION_164_3();
  return sub_1C2B58EEC(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B5E688()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_71_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_2_77(v1);
  OUTLINED_FUNCTION_164_3();
  return sub_1C2B590B0(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B5E6D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_71_1();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_2_77(v1);
  OUTLINED_FUNCTION_164_3();
  return sub_1C2B59230(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B5E720()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_53_26();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_16_50(v1);
  return sub_1C2B593B0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B5E774(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B59458(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C2B5E788(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B592B8(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C2B5E798(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B59138(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C2B5E7A8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B58FB8(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C2B5E7B8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B58DF4(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C2B5E7C8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1C2B58B40(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C2B5E7D8()
{
  uint64_t v0;

  sub_1C2CFE478();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v0 = sub_1C2CFE0DC();
  OUTLINED_FUNCTION_11_2(*(_QWORD *)(v0 - 8));
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2B5E844(uint64_t a1)
{
  sub_1C2CFE478();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  sub_1C2CFE0DC();
  return sub_1C2B58CC0(a1);
}

uint64_t OUTLINED_FUNCTION_2_77(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_8_68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)v2 = v0;
  *(_BYTE *)(v2 + 8) = 0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_15_58()
{
  return sub_1C2CFEA24();
}

uint64_t OUTLINED_FUNCTION_16_50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_26_48()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_32_39()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_50_26()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_95_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t OUTLINED_FUNCTION_101_14()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_104_15()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_108_17()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[12] + 8))(v0[14], v0[11]);
}

uint64_t OUTLINED_FUNCTION_114_12()
{
  uint64_t v0;

  return sub_1C2907360(v0);
}

uint64_t OUTLINED_FUNCTION_121_9(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  return sub_1C29E8EE0(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_122_11()
{
  uint64_t v0;

  return sub_1C2907360(v0);
}

void sub_1C2B5EA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_5_73();
  OUTLINED_FUNCTION_7_76();
  MEMORY[0x1E0C80A78](v2, v3);
  v4 = OUTLINED_FUNCTION_0_81();
  OUTLINED_FUNCTION_3_75(v4);
  if (OUTLINED_FUNCTION_6_5() == 2)
  {
    v5 = OUTLINED_FUNCTION_4_81();
    if (v5 == v6 && v1 == 0x80000001C2D2B0E0)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_8();
    }
    else
    {
      OUTLINED_FUNCTION_1_70();
      OUTLINED_FUNCTION_9_75();
      OUTLINED_FUNCTION_8();
    }
  }
  else
  {
    sub_1C2A2F8C4(v0);
  }
  OUTLINED_FUNCTION_18();
}

uint64_t OUTLINED_FUNCTION_0_81()
{
  return type metadata accessor for Input(0);
}

uint64_t OUTLINED_FUNCTION_1_70()
{
  return sub_1C2CFE9DC();
}

uint64_t OUTLINED_FUNCTION_3_75(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1C2A15858(v2 + *(int *)(a1 + 20), v1);
}

uint64_t OUTLINED_FUNCTION_4_81()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_5_73()
{
  return type metadata accessor for Parse(0);
}

uint64_t OUTLINED_FUNCTION_9_75()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2B5EB34(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = type metadata accessor for USOKeyPath(319, a1[2], a1[3], a1[4]);
  if (v2 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C2B5EBA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((v7 + ((v6 + 48) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    v3 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    v11 = a2[1];
    *v3 = *a2;
    v3[1] = v11;
    v12 = (_QWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    v14 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = ((unint64_t)v14 + v6 + 16) & ~v6;
    v18 = ((unint64_t)v15 + v6 + 16) & ~v6;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C2CFD350();
    v19(v17, v18, v4);
    v20 = (_QWORD *)((v7 + v17) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)((v7 + v18) & 0xFFFFFFFFFFFFFFF8);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    sub_1C2CFD350();
  }
  sub_1C2CFD350();
  return v3;
}

uint64_t sub_1C2B5ED04(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                                              + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  swift_release();
  return swift_release();
}

_QWORD *sub_1C2B5ED9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = (_QWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v7 + v12 + 16) & ~v12;
  v14 = ((unint64_t)v8 + v12 + 16) & ~v12;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2CFD350();
  v15(v13, v14, v10);
  v16 = *(_QWORD *)(v11 + 64) + 7;
  v17 = (_QWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  sub_1C2CFD350();
  sub_1C2CFD350();
  return a1;
}

_QWORD *sub_1C2B5EEA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  sub_1C2CFD350();
  swift_release();
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 16) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  sub_1C2CFD350();
  swift_release();
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  sub_1C2CFD350();
  swift_release();
  return a1;
}

_OWORD *sub_1C2B5EFD8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v6 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v7 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_OWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  *(_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1C2B5F090(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  unint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  swift_release();
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v9 + v12 + 16) & ~v12;
  v14 = ((unint64_t)v10 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v13, v14);
  v15 = *(_QWORD *)(v11 + 64) + 7;
  v16 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = v15 + v14;
  v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v16 = *(_OWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v18 & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C2B5F194(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if ((v6 & 0x80000000) != 0)
    {
      return __swift_getEnumTagSinglePayload((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & ~v8, v6, v4);
    }
    else
    {
      v13 = *(_QWORD *)(a1 + 8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
  }
  else
  {
    if (((((((*(_QWORD *)(v5 + 64) + ((v8 + 48) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C2B5F228 + 4 * byte_1C2D16A40[v11]))();
  }
}

void sub_1C2B5F2B4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64)
         + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v6 >= a3)
  {
    v10 = 0u;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~*(unsigned __int8 *)(v5 + 80)) + 7) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v6)
  {
    if ((_DWORD)v7)
    {
      v11 = ~v6 + a2;
      bzero(a1, v7);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1C2B5F3BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;

  *((_BYTE *)v5 + v6) = 0;
  if ((_DWORD)a1)
  {
    if ((a2 & 0x80000000) != 0)
    {
      return __swift_storeEnumTagSinglePayload(((((((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v4 + 16) & a4, a1, a2, a3);
    }
    else if ((a1 & 0x80000000) != 0)
    {
      *v5 = a1 ^ 0x80000000;
      v5[1] = 0;
    }
    else
    {
      v5[1] = (a1 - 1);
    }
  }
  return result;
}

uint64_t type metadata accessor for PromptInputResolver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptInputResolver);
}

uint64_t sub_1C2B5F45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;

  v7 = type metadata accessor for USOKeyPath(0, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a5, a1, v7);
}

uint64_t sub_1C2B5F498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  void *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  char v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  void *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint8_t *v149;
  uint8_t *v150;
  __int128 v151[2];
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v147 = a3;
  v5 = *(_QWORD *)(a2 + 16);
  v130 = sub_1C2CFC3C0();
  OUTLINED_FUNCTION_0_32(*(_QWORD *)(v130 - 8));
  MEMORY[0x1E0C80A78](v6, v7);
  OUTLINED_FUNCTION_9_28((uint64_t)&v121 - v8);
  v127 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_79_5();
  OUTLINED_FUNCTION_9_28(v11);
  v150 = (uint8_t *)a2;
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v14, v15);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v16, v17);
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v20, v21);
  OUTLINED_FUNCTION_9_28((uint64_t)&v121 - v22);
  v142 = v5;
  v23 = sub_1C2CFC438();
  v132 = sub_1C2CFE478();
  OUTLINED_FUNCTION_0_32(*(_QWORD *)(v132 - 8));
  MEMORY[0x1E0C80A78](v24, v25);
  OUTLINED_FUNCTION_9_28((uint64_t)&v121 - v26);
  v143 = v23;
  OUTLINED_FUNCTION_0_32(*(_QWORD *)(v23 - 8));
  MEMORY[0x1E0C80A78](v27, v28);
  OUTLINED_FUNCTION_9_28((uint64_t)&v121 - v29);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793EA0);
  MEMORY[0x1E0C80A78](v30, v31);
  OUTLINED_FUNCTION_79_5();
  v146 = v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF78BDD0);
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33, v35);
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_41_1();
  v38 = MEMORY[0x1E0C80A78](v36, v37);
  v141 = (uint64_t)&v121 - v39;
  MEMORY[0x1E0C80A78](v38, v40);
  v42 = (char *)&v121 - v41;
  v148 = type metadata accessor for Input(0);
  MEMORY[0x1E0C80A78](v148, v43);
  v45 = (char *)&v121 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v46 = sub_1C2CFD878();
  v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1ED7AA1B0);
  v149 = (uint8_t *)a1;
  sub_1C28DD664(a1, (uint64_t)v45);
  v145 = v47;
  v48 = sub_1C2CFD86C();
  v49 = sub_1C2CFE2A4();
  v50 = os_log_type_enabled(v48, v49);
  v135 = v13;
  if (v50)
  {
    v51 = OUTLINED_FUNCTION_6_0();
    v144 = v34;
    v52 = (uint8_t *)v51;
    v53 = OUTLINED_FUNCTION_6_0();
    v138 = v42;
    v153 = v53;
    *(_DWORD *)v52 = 136315138;
    v54 = Input.description.getter();
    v56 = OUTLINED_FUNCTION_8_64(v54, v55);
    OUTLINED_FUNCTION_5_74(v56);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    sub_1C297A05C((uint64_t)v45);
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v48, v49, "[PromptInputResolver] Resolving user input %s", v52);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  sub_1C297A05C((uint64_t)v45);

  v57 = v150;
  if ((sub_1C2B17E7C() & 1) != 0)
  {
    sub_1C29E8F60();
    v58 = swift_allocError();
    v59 = v147;
    *v147 = v58;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
    v60 = OUTLINED_FUNCTION_18_54();
LABEL_7:
    swift_storeEnumTagMultiPayload();
    v61 = (uint64_t)v59;
    v62 = 0;
    v63 = 1;
    v64 = v60;
    return __swift_storeEnumTagSinglePayload(v61, v62, v63, v64);
  }
  if (!sub_1C2B18638())
  {
    v66 = v146;
    __swift_storeEnumTagSinglePayload(v146, 1, 1, v33);
    goto LABEL_14;
  }
  v65 = sub_1C2CFCC0C();
  swift_release();
  v66 = v146;
  sub_1C28CAC54(v65);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v66, 1, v33) == 1)
  {
LABEL_14:
    sub_1C28BA958(v66, &qword_1EF793EA0);
    v85 = (void *)OUTLINED_FUNCTION_8_69();
    v86 = sub_1C2CFE2B0();
    if (OUTLINED_FUNCTION_48_7(v86))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_30_6(&dword_1C28B6000, v87, v88, "[PromptInputResolver] Could not extract task from input.");
      OUTLINED_FUNCTION_11_0();
    }

    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v42, v66, v33);
  OUTLINED_FUNCTION_16_51(v141, (uint64_t)v42);
  v67 = *((_QWORD *)v57 + 4);
  v68 = v140;
  v69 = v142;
  sub_1C2CFC42C();
  v70 = v143;
  if (__swift_getEnumTagSinglePayload(v68, 1, v143) == 1)
  {
    v144 = v34;
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v68, v132);
    v71 = v133;
    OUTLINED_FUNCTION_16_51(v133, (uint64_t)v42);
    v72 = OUTLINED_FUNCTION_8_69();
    v73 = sub_1C2CFE2B0();
    v74 = (void (*)(char *, uint64_t))v73;
    if (os_log_type_enabled(v72, v73))
    {
      v75 = OUTLINED_FUNCTION_6_0();
      v138 = v42;
      v76 = v75;
      v77 = OUTLINED_FUNCTION_6_0();
      v150 = (uint8_t *)v12;
      v153 = v77;
      *(_DWORD *)v76 = 136315394;
      LODWORD(v149) = (_DWORD)v74;
      OUTLINED_FUNCTION_16_51(v141, v71);
      v78 = sub_1C2CFDDAC();
      *(_QWORD *)&v151[0] = OUTLINED_FUNCTION_8_64(v78, v79);
      OUTLINED_FUNCTION_11_62();
      swift_bridgeObjectRelease();
      v122 = v33;
      OUTLINED_FUNCTION_10_72();
      *(_WORD *)(v76 + 12) = 2080;
      v80 = v128;
      sub_1C2CFC4A4();
      v81 = v130;
      v82 = sub_1C2CFC3A8();
      v84 = v83;
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v80, v81);
      *(_QWORD *)&v151[0] = sub_1C28BB120(v82, v84, &v153);
      OUTLINED_FUNCTION_11_62();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C28B6000, v72, (os_log_type_t)v149, "[PromptInputResolver] Could not cast %s to DynamicTask<%s>).", (uint8_t *)v76, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_10_72();
    v74(v42, v33);
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
    OUTLINED_FUNCTION_18_54();
    v61 = OUTLINED_FUNCTION_24_48();
    return __swift_storeEnumTagSinglePayload(v61, v62, v63, v64);
  }
  v90 = v137;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 32))(v137, v68, v70);
  v91 = type metadata accessor for USOKeyPath(0, v69, v12, v67);
  v92 = v134;
  if ((USOKeyPath.nodeExists(_:)() & 1) == 0)
  {
    v107 = v126;
    (*(void (**)(uint64_t *, uint64_t, uint8_t *))(v127 + 16))(v126, v92, v150);
    v108 = OUTLINED_FUNCTION_8_69();
    v109 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v108, v109))
    {
      v138 = v42;
      v110 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v153 = OUTLINED_FUNCTION_6_0();
      v144 = v34;
      *(_DWORD *)v110 = 136315138;
      v149 = v110 + 4;
      v122 = v33;
      v111 = *v107;
      v112 = v107[1];
      swift_bridgeObjectRetain();
      v113 = sub_1C28BB120(v111, v112, &v153);
      OUTLINED_FUNCTION_5_74(v113);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_13_56();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v108, v109, "[PromptInputResolver] No node found for input and USOKeyPath %s.", v110);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    OUTLINED_FUNCTION_13_56();
    OUTLINED_FUNCTION_1_71();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v42, v33);
    goto LABEL_17;
  }
  USOKeyPath.getValue(_:)(v90, v91);
  v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 16);
  OUTLINED_FUNCTION_23_57(v125);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79AA18);
  v94 = swift_dynamicCast();
  v144 = v34;
  if ((v94 & 1) == 0)
  {
    v152 = 0;
    memset(v151, 0, sizeof(v151));
    sub_1C28BA958((uint64_t)v151, qword_1EF79AA20);
    v98 = v124;
LABEL_31:
    v93(v98, v136, v12);
    v114 = OUTLINED_FUNCTION_8_69();
    v115 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v114, v115))
    {
      v138 = v42;
      v116 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v153 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v116 = 136315138;
      v150 = v116 + 4;
      OUTLINED_FUNCTION_23_57(v123);
      v117 = sub_1C2CFDDAC();
      v119 = OUTLINED_FUNCTION_8_64(v117, v118);
      OUTLINED_FUNCTION_5_74(v119);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v135 + 8));
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v114, v115, "[PromptInputResolver] Resolved input to value: %s", v116);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }

    v120 = v135;
    OUTLINED_FUNCTION_22_56(*(uint64_t (**)(uint64_t, uint64_t))(v135 + 8));
    OUTLINED_FUNCTION_1_71();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v42, v33);
    v59 = v147;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v120 + 32))(v147, v136, v12);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
    v60 = OUTLINED_FUNCTION_18_54();
    goto LABEL_7;
  }
  sub_1C28B99EC(v151, (uint64_t)&v153);
  v95 = v154;
  v96 = v155;
  __swift_project_boxed_opaque_existential_1(&v153, v154);
  v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 8))(v95, v96);
  v98 = v124;
  if ((v97 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
    goto LABEL_31;
  }
  v99 = (void *)OUTLINED_FUNCTION_8_69();
  v100 = sub_1C2CFE2B0();
  if (OUTLINED_FUNCTION_48_7(v100))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
    OUTLINED_FUNCTION_30_6(&dword_1C28B6000, v101, v102, "[PromptInputResolver] No value was found for this input.");
    OUTLINED_FUNCTION_11_0();
  }

  (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v136, v12);
  OUTLINED_FUNCTION_1_71();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v42, v33);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  OUTLINED_FUNCTION_18_54();
  v103 = OUTLINED_FUNCTION_24_48();
  __swift_storeEnumTagSinglePayload(v103, v104, v105, v106);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
}

uint64_t OUTLINED_FUNCTION_1_71()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 272) + 8))(v0, *(_QWORD *)(v1 - 240));
}

uint64_t OUTLINED_FUNCTION_3_76()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 272) + 8))(*(_QWORD *)(v0 - 288), *(_QWORD *)(v0 - 240));
}

uint64_t OUTLINED_FUNCTION_5_74(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  return v1 - 176;
}

uint64_t OUTLINED_FUNCTION_8_69()
{
  return sub_1C2CFD86C();
}

uint64_t OUTLINED_FUNCTION_10_72()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 232) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_11_62()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_13_56()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 184));
}

uint64_t OUTLINED_FUNCTION_16_51(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_20_62()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 280);
}

uint64_t OUTLINED_FUNCTION_22_56@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_23_57(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t OUTLINED_FUNCTION_24_48()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 208);
}

uint64_t sub_1C2B601BC(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2B601F0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = v8;
  sub_1C2CFD350();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1C2B60268(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  v4 = a2[11];
  a1[10] = a2[10];
  a1[11] = v4;
  sub_1C2CFD350();
  swift_release();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t sub_1C2B602E4(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2B6035C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C2B6039C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for PromptOutputGenerator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromptOutputGenerator);
}

uint64_t sub_1C2B60404@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v10 = *a5;
  v11 = a5[1];
  sub_1C28B99EC(a1, (uint64_t)a6);
  result = sub_1C28B99EC(a2, (uint64_t)(a6 + 5));
  a6[10] = a3;
  a6[11] = a4;
  a6[12] = v10;
  a6[13] = v11;
  return result;
}

uint64_t sub_1C2B6045C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[57] = a2;
  v3[58] = v2;
  v3[56] = a1;
  v3[59] = type metadata accessor for NLContextUpdate();
  v3[60] = OUTLINED_FUNCTION_7();
  v4 = sub_1C2CFC174();
  v3[61] = v4;
  v3[62] = *(_QWORD *)(v4 - 8);
  v3[63] = OUTLINED_FUNCTION_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v3[64] = OUTLINED_FUNCTION_7();
  v5 = sub_1C2CFBCAC();
  v3[65] = v5;
  v3[66] = *(_QWORD *)(v5 - 8);
  v3[67] = OUTLINED_FUNCTION_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79AAB8);
  v3[68] = OUTLINED_FUNCTION_7();
  v3[69] = type metadata accessor for OutputGenerationManifest();
  v3[70] = swift_task_alloc();
  v3[71] = swift_task_alloc();
  v3[72] = type metadata accessor for ResponseBundle();
  v3[73] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B60558()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[58];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[74] = v4;
  *v4 = v0;
  v4[1] = sub_1C2B605D8;
  return v6(v0[73], v2, v3);
}

uint64_t sub_1C2B605D8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_87_0();
  *v2 = *v1;
  *(_QWORD *)(v3 + 600) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B60628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumTagSinglePayload;
  uint64_t v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v3 = *(_QWORD *)(v2 + 552);
  v4 = *(_QWORD *)(v2 + 544);
  v5 = *(_QWORD *)(v2 + 456);
  OUTLINED_FUNCTION_26_49(*(_QWORD *)(v2 + 584) + *(int *)(*(_QWORD *)(v2 + 576) + 28), a2, &qword_1EF79AAB8);
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_25_49(v2 + 16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1, v3);
  v8 = *(_QWORD *)(v2 + 568);
  if (EnumTagSinglePayload == 1)
  {
    v9 = *(_QWORD **)(v2 + 560);
    v61 = *(_QWORD *)(v2 + 568);
    v10 = *(int **)(v2 + 552);
    v62 = *(_QWORD *)(v2 + 544);
    v11 = *(_QWORD *)(v2 + 536);
    v58 = *(_QWORD *)(v2 + 528);
    v59 = *(_QWORD *)(v2 + 520);
    v12 = *(_QWORD *)(v2 + 472);
    v60 = *(_QWORD *)(v2 + 456);
    v14 = *(_QWORD *)(v2 + 112);
    v13 = *(_QWORD *)(v2 + 120);
    *((_BYTE *)v9 + v10[6]) = 0;
    *((_BYTE *)v9 + v10[7]) = 0;
    v55 = v10[8];
    v56 = v12;
    v54 = v10[9];
    *((_BYTE *)v9 + v10[10]) = 0;
    v15 = (uint64_t)v9 + v10[11];
    __swift_storeEnumTagSinglePayload(v15, 1, 1, v12);
    v16 = v10[12];
    *(_QWORD *)((char *)v9 + v16) = 0;
    v17 = (_QWORD *)((char *)v9 + v10[13]);
    *v17 = 0;
    v17[1] = 0;
    v18 = (_QWORD *)((char *)v9 + v10[14]);
    *v18 = 0;
    v18[1] = 0;
    *((_BYTE *)v9 + v10[15]) = 0;
    *(_QWORD *)((char *)v9 + v10[17]) = 0;
    v19 = (char *)v9 + v10[18];
    *(_QWORD *)v19 = 0;
    *((_WORD *)v19 + 4) = 512;
    *((_BYTE *)v9 + v10[19]) = 0;
    *((_BYTE *)v9 + v10[20]) = 0;
    v57 = v10[21];
    *((_BYTE *)v9 + v57) = 0;
    *((_BYTE *)v9 + v10[22]) = 0;
    *((_BYTE *)v9 + v10[23]) = 0;
    v20 = (_QWORD *)((char *)v9 + v10[24]);
    *v20 = 0;
    v20[1] = 0;
    *(_QWORD *)((char *)v9 + v10[25]) = 0;
    *v9 = v14;
    v9[1] = v13;
    v21 = (uint64_t)v9 + v10[5];
    swift_bridgeObjectRetain();
    sub_1C2901F48(v21);
    *((_BYTE *)v9 + v54) = 1;
    *((_BYTE *)v9 + v55) = 0;
    sub_1C28BB37C(v15, &qword_1ED7A7A10);
    __swift_storeEnumTagSinglePayload(v15, 1, 1, v56);
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v9 + v16) = 0;
    sub_1C2CFBCA0();
    v22 = sub_1C2CFBC70();
    v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v11, v59);
    v25 = (_QWORD *)((char *)v9 + v10[16]);
    *v25 = v22;
    v25[1] = v24;
    *((_BYTE *)v9 + v55) = 1;
    *((_BYTE *)v9 + v57) = 1;
    sub_1C2902070((uint64_t)v9, v61);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2 + 16, v60);
    sub_1C28BB37C(v62, &qword_1EF79AAB8);
  }
  else
  {
    v26 = *(_QWORD *)(v2 + 544);
    (*(void (**)(uint64_t, _QWORD))(v6 + 8))(v2 + 16, *(_QWORD *)(v2 + 456));
    sub_1C2902070(v26, v8);
  }
  v27 = *(_QWORD *)(v2 + 512);
  v28 = *(_QWORD *)(v2 + 472);
  v29 = *(_QWORD *)(v2 + 568) + *(int *)(*(_QWORD *)(v2 + 552) + 44);
  sub_1C28BA870(v29, v27, &qword_1ED7A7A10);
  LODWORD(v28) = __swift_getEnumTagSinglePayload(v27, 1, v28);
  sub_1C28BB37C(v27, &qword_1ED7A7A10);
  if ((_DWORD)v28 == 1)
  {
    v30 = *(_QWORD *)(v2 + 600);
    (*(void (**)(void))(*(_QWORD *)(v2 + 464) + 80))();
    if (v30)
    {
      sub_1C28C9F68(*(_QWORD *)(v2 + 584), (uint64_t (*)(_QWORD))type metadata accessor for ResponseBundle);
      OUTLINED_FUNCTION_23_3(v31, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
      swift_task_dealloc();
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_31();
      OUTLINED_FUNCTION_14_0();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_63_0();
      OUTLINED_FUNCTION_141_4();
      OUTLINED_FUNCTION_67();
      OUTLINED_FUNCTION_55_2();
      __asm { BR              X0 }
    }
    v33 = *(_QWORD *)(v2 + 496);
    v34 = *(_QWORD *)(v2 + 480);
    v35 = *(_QWORD *)(v2 + 472);
    NLContextUpdate.init()(v34);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF787290);
    v36 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1C2D002E0;
    OUTLINED_FUNCTION_25_49(v37 + v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32));
    swift_bridgeObjectRelease();
    *(_QWORD *)(v34 + 216) = v37;
    sub_1C28BB37C(v29, &qword_1ED7A7A10);
    sub_1C28FBA24(v34, v29);
    v38 = __swift_storeEnumTagSinglePayload(v29, 0, 1, v35);
    OUTLINED_FUNCTION_23_3(v38, (uint64_t (*)(_QWORD))type metadata accessor for NLContextUpdate);
  }
  v39 = *(_QWORD *)(v2 + 584) + 8;
  sub_1C28BA870(v39, v2 + 168, &qword_1EF7872C0);
  if (*(_QWORD *)(v2 + 192))
  {
    v40 = *(_QWORD *)(v2 + 584);
    sub_1C28B99EC((__int128 *)(v2 + 168), v2 + 128);
    OUTLINED_FUNCTION_26_49(v40 + 48, v41, &qword_1EF7872C0);
    if (*(_QWORD *)(v2 + 432))
    {
      v42 = *(_QWORD **)(v2 + 584);
      sub_1C28B99EC((__int128 *)(v2 + 408), v2 + 368);
      OUTLINED_FUNCTION_21_57();
      *(_QWORD *)(v2 + 608) = *v42;
      swift_bridgeObjectRetain();
      v43 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v2 + 616) = v43;
      *v43 = v2;
      v43[1] = sub_1C2B60CD8;
      OUTLINED_FUNCTION_55_2();
      __asm { BR              X7 }
    }
    __swift_destroy_boxed_opaque_existential_1(v2 + 128);
    v45 = v2 + 408;
  }
  else
  {
    v45 = v2 + 168;
  }
  sub_1C28BB37C(v45, &qword_1EF7872C0);
  OUTLINED_FUNCTION_26_49(v39, v46, &qword_1EF7872C0);
  v47 = *(_QWORD **)(v2 + 584);
  if (*(_QWORD *)(v2 + 272))
  {
    sub_1C28B99EC((__int128 *)(v2 + 248), v2 + 208);
    OUTLINED_FUNCTION_20_63();
    *(_QWORD *)(v2 + 624) = *v47;
    OUTLINED_FUNCTION_7_77();
    v48 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 632) = v48;
    OUTLINED_FUNCTION_27_42(v48);
  }
  else
  {
    sub_1C28BB37C(v2 + 248, &qword_1EF7872C0);
    sub_1C28BA870((uint64_t)(v47 + 6), v2 + 328, &qword_1EF7872C0);
    v49 = *(_QWORD **)(v2 + 584);
    if (!*(_QWORD *)(v2 + 352))
    {
      sub_1C28BB37C(v2 + 328, &qword_1EF7872C0);
      OUTLINED_FUNCTION_20_63();
      *(_QWORD *)(v2 + 656) = *v49;
      swift_bridgeObjectRetain();
      v52 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v2 + 664) = v52;
      *v52 = v2;
      v52[1] = sub_1C2B60EE8;
      OUTLINED_FUNCTION_55_2();
      __asm { BR              X5 }
    }
    sub_1C28B99EC((__int128 *)(v2 + 328), v2 + 288);
    OUTLINED_FUNCTION_21_57();
    *(_QWORD *)(v2 + 640) = *v49;
    OUTLINED_FUNCTION_7_77();
    v50 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 648) = v50;
    OUTLINED_FUNCTION_27_42(v50);
  }
  OUTLINED_FUNCTION_55_2();
  __asm { BR              X6 }
}

uint64_t sub_1C2B60CD8()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B60D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_72_5();
  __swift_destroy_boxed_opaque_existential_1(v0 + 368);
  v1 = __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  OUTLINED_FUNCTION_43_4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ResponseBundle);
  OUTLINED_FUNCTION_2_78();
  OUTLINED_FUNCTION_43_4(v2, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_141_4();
  OUTLINED_FUNCTION_67();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_0_82(v3);
}

uint64_t sub_1C2B60D90()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B60DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_72_5();
  v1 = __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  OUTLINED_FUNCTION_23_3(v1, (uint64_t (*)(_QWORD))type metadata accessor for ResponseBundle);
  OUTLINED_FUNCTION_2_78();
  OUTLINED_FUNCTION_43_4(v2, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_141_4();
  OUTLINED_FUNCTION_67();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_0_82(v3);
}

uint64_t sub_1C2B60E3C()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B60E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_72_5();
  v1 = __swift_destroy_boxed_opaque_existential_1(v0 + 288);
  OUTLINED_FUNCTION_23_3(v1, (uint64_t (*)(_QWORD))type metadata accessor for ResponseBundle);
  OUTLINED_FUNCTION_2_78();
  OUTLINED_FUNCTION_43_4(v2, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_141_4();
  OUTLINED_FUNCTION_67();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_0_82(v3);
}

uint64_t sub_1C2B60EE8()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B60F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_72_5();
  sub_1C28C9F68(*(_QWORD *)(v0 + 584), (uint64_t (*)(_QWORD))type metadata accessor for ResponseBundle);
  OUTLINED_FUNCTION_2_78();
  OUTLINED_FUNCTION_43_4(v1, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_141_4();
  OUTLINED_FUNCTION_67();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_0_82(v2);
}

uint64_t sub_1C2B60F8C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_2_78();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_141_4();
  OUTLINED_FUNCTION_67();
  return OUTLINED_FUNCTION_0_82(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B60FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C29DDC8C;
  return sub_1C2B6045C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_0_82(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_7_77()
{
  return swift_bridgeObjectRetain();
}

_QWORD *OUTLINED_FUNCTION_20_63()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64));
}

_QWORD *OUTLINED_FUNCTION_21_57()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64));
}

uint64_t OUTLINED_FUNCTION_25_49@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

void OUTLINED_FUNCTION_26_49(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1C28BA870(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_27_42(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 448);
}

void PromptResult.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = MEMORY[0x1E0C80A78](a1, v1);
  MEMORY[0x1E0C80A78](v2, v3);
  (*(void (**)(char *))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_1C2B6119C + 4 * byte_1C2D16AF0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1C2B6119C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
  *(_QWORD *)(v4 - 64) = 0;
  *(_QWORD *)(v4 - 56) = 0xE000000000000000;
  sub_1C2CFE670();
  v5 = *(_QWORD *)(v4 - 56);
  *(_QWORD *)(v4 - 64) = *(_QWORD *)(v4 - 64);
  *(_QWORD *)(v4 - 56) = v5;
  sub_1C2CFDE54();
  sub_1C2CFE9B8();
  v6 = *(_QWORD *)(v4 - 64);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v6;
}

id *sub_1C2B61328(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  id v16;
  id v17;
  unsigned int v18;

  if (__dst == __src)
    return __dst;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 9uLL)
    v7 = 9;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = 8 * v7;
  if (v7 > 3)
    goto LABEL_6;
  v10 = ((1 << v8) + 1) >> v8;
  if (v10 > 0xFFFD)
  {
    v9 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v10 <= 0xFD)
    {
LABEL_6:
      v9 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    v9 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  if (v9 >= 2)
  {
    if (v7 <= 3)
      v11 = v7;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v9 == 1)

  else
    (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
  if (v7 > 3)
    goto LABEL_20;
  v13 = ((1 << v8) + 1) >> v8;
  if (v13 > 0xFFFD)
  {
    v12 = *(_DWORD *)((char *)__src + v7);
  }
  else
  {
    if (v13 <= 0xFD)
    {
LABEL_20:
      v12 = *((unsigned __int8 *)__src + v7);
      goto LABEL_25;
    }
    v12 = *(unsigned __int16 *)((char *)__src + v7);
  }
LABEL_25:
  if (v12 >= 2)
  {
    if (v7 <= 3)
      v14 = v7;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  if (v12 == 1)
  {
    v16 = *__src;
    v17 = *__src;
    *__dst = v16;
    *((_BYTE *)__dst + 8) = *((_BYTE *)__src + 8);
    if (v7 > 3)
      goto LABEL_36;
    v18 = ((1 << v8) + 1) >> v8;
    if (v18 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v18 <= 0xFD)
LABEL_36:
      *((_BYTE *)__dst + v7) = 1;
    else
      *(_WORD *)((char *)__dst + v7) = 1;
  }
  else
  {
    (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
    if (v7 <= 3)
    {
      v15 = ((1 << v8) + 1) >> v8;
      if (v15 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
      if (v15 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
    }
    *((_BYTE *)__dst + v7) = 0;
  }
  return __dst;
}

char *sub_1C2B615FC(char *__dst, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 9uLL)
    v5 = 9;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = 8 * v5;
  if (v5 > 3)
    goto LABEL_5;
  v8 = ((1 << v6) + 1) >> v6;
  if (v8 > 0xFFFD)
  {
    v7 = *(_DWORD *)(a2 + v5);
  }
  else
  {
    if (v8 <= 0xFD)
    {
LABEL_5:
      v7 = *(unsigned __int8 *)(a2 + v5);
      goto LABEL_10;
    }
    v7 = *(unsigned __int16 *)(a2 + v5);
  }
LABEL_10:
  if (v7 >= 2)
  {
    if (v5 <= 3)
      v9 = v5;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    *(_QWORD *)__dst = *(_QWORD *)a2;
    __dst[8] = *(_BYTE *)(a2 + 8);
    if (v5 > 3)
      goto LABEL_21;
    v11 = ((1 << v6) + 1) >> v6;
    if (v11 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v5] = 1;
      return __dst;
    }
    if (v11 <= 0xFD)
LABEL_21:
      __dst[v5] = 1;
    else
      *(_WORD *)&__dst[v5] = 1;
  }
  else
  {
    (*(void (**)(char *))(v4 + 32))(__dst);
    if (v5 <= 3)
    {
      v10 = ((1 << v6) + 1) >> v6;
      if (v10 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v5] = 0;
        return __dst;
      }
      if (v10 > 0xFD)
      {
        *(_WORD *)&__dst[v5] = 0;
        return __dst;
      }
    }
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_1C2B617E0(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;

  if (__dst == __src)
    return __dst;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 9uLL)
    v7 = 9;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = 8 * v7;
  if (v7 > 3)
    goto LABEL_6;
  v10 = ((1 << v8) + 1) >> v8;
  if (v10 > 0xFFFD)
  {
    v9 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v10 <= 0xFD)
    {
LABEL_6:
      v9 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    v9 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  if (v9 >= 2)
  {
    if (v7 <= 3)
      v11 = v7;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v9 == 1)

  else
    (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
  if (v7 > 3)
    goto LABEL_20;
  v13 = ((1 << v8) + 1) >> v8;
  if (v13 > 0xFFFD)
  {
    v12 = *(_DWORD *)((char *)__src + v7);
  }
  else
  {
    if (v13 <= 0xFD)
    {
LABEL_20:
      v12 = *((unsigned __int8 *)__src + v7);
      goto LABEL_25;
    }
    v12 = *(unsigned __int16 *)((char *)__src + v7);
  }
LABEL_25:
  if (v12 >= 2)
  {
    if (v7 <= 3)
      v14 = v7;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  if (v12 == 1)
  {
    *__dst = *__src;
    *((_BYTE *)__dst + 8) = *((_BYTE *)__src + 8);
    if (v7 > 3)
      goto LABEL_36;
    v16 = ((1 << v8) + 1) >> v8;
    if (v16 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v16 <= 0xFD)
LABEL_36:
      *((_BYTE *)__dst + v7) = 1;
    else
      *(_WORD *)((char *)__dst + v7) = 1;
  }
  else
  {
    (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
    if (v7 <= 3)
    {
      v15 = ((1 << v8) + 1) >> v8;
      if (v15 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
      if (v15 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
    }
    *((_BYTE *)__dst + v7) = 0;
  }
  return __dst;
}

uint64_t sub_1C2B61AB4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  char v5;
  int v6;
  unsigned int v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  char v26;
  unsigned int v27;

  v3 = 9;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 9uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v4 = 8;
  v5 = 8 * v3;
  if (v3 > 3)
  {
    v6 = 3;
    goto LABEL_13;
  }
  v7 = ((1 << v5) + 1) >> v5;
  if (v7 >= 0xFFFE)
    v8 = 32;
  else
    v8 = 16;
  if (v7 >= 0xFE)
    v4 = v8;
  else
    v4 = 8;
  if (v7 <= 0xFFFD)
  {
    v6 = v7 + 2;
LABEL_13:
    v9 = (1 << v4) - v6;
    if ((v9 & 0x80000000) == 0)
      goto LABEL_15;
  }
  v9 = 0x7FFFFFFF;
LABEL_15:
  if (v3 > 3)
    goto LABEL_19;
  v10 = ((1 << v5) + 1) >> v5;
  v11 = 2;
  if (v10 > 0xFFFD)
    v11 = 4;
  if (v10 <= 0xFD)
LABEL_19:
    v11 = 1;
  if (!a2)
    return 0;
  if (a2 <= v9)
    goto LABEL_39;
  v12 = v11 + v3;
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((a2 - v9 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_39;
      goto LABEL_30;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_39;
      goto LABEL_30;
    }
    if (v15 < 2)
    {
LABEL_39:
      if (v9)
      {
        if (v3 > 3)
          goto LABEL_43;
        v19 = ((1 << v5) + 1) >> v5;
        if (v19 > 0xFFFD)
        {
          v21 = *(_DWORD *)(a1 + v3);
          v22 = ~v21;
          goto LABEL_53;
        }
        if (v19 >= 0xFE)
        {
          v24 = *(unsigned __int16 *)(a1 + v3);
          v21 = v24 | 0xFFFF0000;
          v22 = v24 ^ 0xFFFF;
        }
        else
        {
LABEL_43:
          v20 = *(unsigned __int8 *)(a1 + v3);
          v21 = v20 | 0xFFFFFF00;
          v22 = v20 ^ 0xFF;
          if (v3 > 3)
          {
            v23 = 3;
            goto LABEL_50;
          }
        }
        v25 = ((1 << v5) + 1) >> v5;
        if (v25 <= 0xFFFD)
        {
          v23 = v25 + 2;
          if (v25 > 0xFD)
          {
            v26 = 16;
LABEL_52:
            v27 = (1 << v26) - v23;
            if ((v27 & 0x80000000) == 0)
              goto LABEL_54;
            goto LABEL_53;
          }
LABEL_50:
          v26 = 8;
          goto LABEL_52;
        }
LABEL_53:
        v27 = 0x7FFFFFFF;
LABEL_54:
        if (v27 > v22)
          return -v21;
        else
          return 0;
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_39;
LABEL_30:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v9 + v16 + 1;
  if (v12 <= 3)
    v17 = v12;
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B61C0C + 4 * byte_1C2D16B1C[v17 - 1]))();
}

void sub_1C2B61D10(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  char v6;
  char v7;
  int v8;
  unsigned int v9;
  char v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  size_t v14;
  char v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 9)
    v5 = 9;
  v6 = 8;
  v7 = 8 * v5;
  if (v5 <= 3)
  {
    v9 = ((1 << v7) + 1) >> v7;
    if (v9 >= 0xFFFE)
      v10 = 32;
    else
      v10 = 16;
    if (v9 >= 0xFE)
      v6 = v10;
    else
      v6 = 8;
    if (v9 > 0xFFFD)
      goto LABEL_14;
    v8 = v9 + 2;
  }
  else
  {
    v8 = 3;
  }
  v11 = (1 << v6) - v8;
  if ((v11 & 0x80000000) == 0)
  {
LABEL_15:
    if (v5 > 3)
      goto LABEL_19;
    v12 = ((1 << v7) + 1) >> v7;
    v13 = 2;
    if (v12 > 0xFFFD)
      v13 = 4;
    if (v12 <= 0xFD)
LABEL_19:
      v13 = 1;
    v14 = v13 + v5;
    v15 = 8 * (v13 + v5);
    if (a3 <= v11)
    {
      v16 = 0u;
    }
    else if (v14 <= 3)
    {
      v18 = ((a3 - v11 + ~(-1 << v15)) >> v15) + 1;
      if (HIWORD(v18))
      {
        v16 = 4u;
      }
      else if (v18 >= 0x100)
      {
        v16 = 2;
      }
      else
      {
        v16 = v18 > 1;
      }
    }
    else
    {
      v16 = 1u;
    }
    if (v11 < a2)
    {
      v17 = ~v11 + a2;
      if (v14 < 4)
      {
        if ((_DWORD)v14)
        {
          v19 = v17 & ~(-1 << v15);
          bzero(a1, v14);
          if ((_DWORD)v14 == 3)
          {
            *a1 = v19;
            *((_BYTE *)a1 + 2) = BYTE2(v19);
          }
          else if ((_DWORD)v14 == 2)
          {
            *a1 = v19;
          }
          else
          {
            *(_BYTE *)a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, v14);
        *(_DWORD *)a1 = v17;
      }
      __asm { BR              X10 }
    }
    __asm { BR              X12 }
  }
LABEL_14:
  v11 = 0x7FFFFFFF;
  goto LABEL_15;
}

uint64_t sub_1C2B61F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = 9;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 9uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (v2 > 3)
    goto LABEL_4;
  v4 = ((1 << (8 * v2)) + 1) >> (8 * v2);
  if (v4 > 0xFFFD)
  {
    v3 = *(unsigned int *)(a1 + v2);
  }
  else
  {
    if (v4 <= 0xFD)
    {
LABEL_4:
      v3 = *(unsigned __int8 *)(a1 + v2);
      goto LABEL_9;
    }
    v3 = *(unsigned __int16 *)(a1 + v2);
  }
LABEL_9:
  if (v3 < 2)
    return v3;
  if (v2 <= 3)
    v5 = v2;
  else
    v5 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B62018 + 4 * byte_1C2D16B2A[v5]))();
}

char *sub_1C2B6205C(char *result, unsigned int a2, uint64_t a3)
{
  size_t v4;
  char *v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 9uLL)
    v4 = 9;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    if (v4 >= 4)
    {
      v5 = &result[v4];
      LOBYTE(v6) = 2;
LABEL_9:
      *v5 = v6;
      goto LABEL_18;
    }
    v6 = ((a2 - 2) >> (8 * v4)) + 2;
    v5 = &result[v4];
    v8 = ((1 << (8 * v4)) + 1) >> (8 * v4);
    if (v8 > 0xFFFD)
    {
      *(_DWORD *)v5 = v6;
    }
    else
    {
      if (v8 <= 0xFD)
        goto LABEL_9;
      *(_WORD *)v5 = v6;
    }
LABEL_18:
    if (v4 <= 3)
      v9 = v4;
    else
      v9 = 4;
    bzero(result, v4);
    __asm { BR              X10 }
  }
  if (v4 > 3)
  {
LABEL_6:
    result[v4] = a2;
    return result;
  }
  v7 = ((1 << (8 * v4)) + 1) >> (8 * v4);
  if (v7 > 0xFFFD)
  {
    *(_DWORD *)&result[v4] = a2;
  }
  else
  {
    if (v7 <= 0xFD)
      goto LABEL_6;
    *(_WORD *)&result[v4] = a2;
  }
  return result;
}

uint64_t sub_1C2B621A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1C28E990C();
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      OUTLINED_FUNCTION_57_1();
      if (v8 >= v7 >> 1)
        sub_1C28E990C();
      v4 += 3;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void static ProtectedAppCheck.clientForExecutionDevice.getter(_QWORD *a1@<X8>)
{
  _QWORD *v2;

  a1[3] = &type metadata for AppInstallationCheckingClient;
  a1[4] = &off_1E7C91BC8;
  v2 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  *a1 = v2;
  v2[5] = &type metadata for AppProtectionFrameworkClient;
  v2[6] = &off_1E7C91BB0;
  v2[2] = 0xD000000000000012;
  v2[3] = 0x80000001C2D29780;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B622E8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1C2B6230C()
{
  OUTLINED_FUNCTION_12_62();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B6232C()
{
  OUTLINED_FUNCTION_11_13();
  OUTLINED_FUNCTION_1_0();
}

uint64_t ProtectedAppCheckStrategy.protectedAppCheckShouldProduceOutputForHiddenApps(_:)()
{
  return 1;
}

void sub_1C2B62354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2B62370(a1, a2, a3);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B62370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  objc_allocWithZone(MEMORY[0x1E0CA5870]);
  swift_bridgeObjectRetain();
  v5 = sub_1C2B688C8(a2, a3, 0);
  v7 = v5;
  if (!v5)
    return 0;
  v8 = objc_msgSend(v5, sel_localizedName);
  v6 = sub_1C2CFDD58();

  return v6;
}

uint64_t ProtectedAppCheckStrategy.protectedAppCheck(_:needsAppNameForAppID:)()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;

  v0 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  OUTLINED_FUNCTION_33_0();
  v1 = OUTLINED_FUNCTION_71_0();
  v3 = OUTLINED_FUNCTION_114_13(v1, v2);
  if (v0)
  {

  }
  else
  {
    v4 = v3;
    if (v3)
    {
      v5 = objc_msgSend(v3, sel_localizedName);
      sub_1C2CFDD58();

    }
  }
  return OUTLINED_FUNCTION_136();
}

uint64_t ProtectedAppCheck.__allocating_init(appIDs:strategy:client:deviceState:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  ProtectedAppCheck.init(appIDs:strategy:client:deviceState:outputPublisher:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1C2B62534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 64) + 40);
  *v3 = a2;
  v3[1] = a3;
  return swift_continuation_throwingResume();
}

void sub_1C2B62544(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;

  v2 = a1;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v3 = 0;
    v20 = a2 + 7;
    v21 = a1 + 32;
    v4 = MEMORY[0x1E0DEE9D8];
    while (v3 < *(_QWORD *)(v2 + 16))
    {
      v5 = v3++;
      v6 = a2;
      v7 = a2[2];
      if (v7)
      {
        v8 = (uint64_t *)(v21 + 16 * v5);
        v9 = *v8;
        v10 = v8[1];
        v11 = a2[4];
        v12 = a2[5];
        v13 = v11 == *v8 && v12 == v10;
        if (v13 || (sub_1C2CFE9DC() & 1) != 0)
        {
LABEL_20:
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1C28E990C();
          v18 = *(_QWORD *)(v4 + 16);
          if (v18 >= *(_QWORD *)(v4 + 24) >> 1)
            sub_1C28E990C();
          *(_QWORD *)(v4 + 16) = v18 + 1;
          v19 = v4 + 16 * v18;
          *(_QWORD *)(v19 + 32) = v9;
          *(_QWORD *)(v19 + 40) = v10;
        }
        else if (v7 != 1)
        {
          v14 = v20;
          v15 = 1;
          while (1)
          {
            v16 = v15 + 1;
            if (__OFADD__(v15, 1))
              break;
            v17 = *(v14 - 1) == v9 && *v14 == v10;
            if (v17 || (sub_1C2CFE9DC() & 1) != 0)
              goto LABEL_20;
            v14 += 2;
            ++v15;
            if (v16 == v7)
              goto LABEL_25;
          }
          __break(1u);
          break;
        }
      }
LABEL_25:
      v2 = a1;
      a2 = v6;
      if (v3 == v23)
        goto LABEL_26;
    }
    __break(1u);
  }
  else
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t ProtectedAppCheck.__allocating_init(appID:strategy:)(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _BYTE v9[24];
  void *v10;
  _UNKNOWN **v11;

  sub_1C2B69914();
  if (v8)
  {
    sub_1C28B99EC(&v7, (uint64_t)v9);
  }
  else
  {
    v10 = &unk_1E7C91A40;
    v11 = &off_1E7C91B80;
    sub_1C28BB37C((uint64_t)&v7, (uint64_t *)&unk_1EF79AAC0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9D30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  sub_1C28B9A48((uint64_t)v9, (uint64_t)&v7);
  v5 = ProtectedAppCheck.__allocating_init(appIDs:strategy:)();
  OUTLINED_FUNCTION_40_2(v5, (uint64_t *)&unk_1EF79AAC0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v5;
}

uint64_t ProtectedAppCheck.__allocating_init(appIDs:strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD v4[2];
  uint64_t v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _BYTE v10[40];

  OUTLINED_FUNCTION_66_16();
  sub_1C28B9A48(v0, (uint64_t)v10);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  v7 = 0;
  memset(v6, 0, sizeof(v6));
  OUTLINED_FUNCTION_118_10();
  memset(v4, 0, sizeof(v4));
  v5 = 0;
  v2 = OUTLINED_FUNCTION_27();
  ProtectedAppCheck.init(appIDs:strategy:client:deviceState:outputPublisher:)(v1, (uint64_t)v10, (uint64_t)v8, (uint64_t)v6, (uint64_t)v4);
  OUTLINED_FUNCTION_353();
  return v2;
}

id sub_1C2B62868()
{
  id v0;
  unsigned int v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC12A0]), sel_init);
  v1 = objc_msgSend(v0, sel_canEvaluatePolicy_error_, 1, 0);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v2 = sub_1C2CFD878();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED7AA1B0);
  v3 = v0;
  v4 = sub_1C2CFD86C();
  v5 = sub_1C2CFE298();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    if (v1)
    {
      sub_1C2CFDE54();
      v12 = objc_msgSend(v3, sel_biometryType);
      type metadata accessor for LABiometryType(0);
      sub_1C2CFE7C0();
      v8 = 0;
      v9 = 0xE000000000000000;
    }
    else
    {
      v9 = 0x80000001C2D355C0;
      v8 = 0xD000000000000010;
    }
    v13 = sub_1C28BB120(v8, v9, &v14);
    sub_1C2CFE4D8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C28B6000, v4, v5, "DeviceState: biometric policy %s.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v7, -1, -1);
    MEMORY[0x1C3BC9DE8](v6, -1, -1);

    if (v1)
      goto LABEL_10;
  }
  else
  {

    if (v1)
    {
LABEL_10:
      v10 = objc_msgSend(v3, sel_biometryType, v12, v13);
      goto LABEL_11;
    }
  }
  v10 = 0;
LABEL_11:

  return v10;
}

uint64_t sub_1C2B62ACC(uint64_t a1, uint64_t a2)
{
  ProtectedAppCheckStrategy.protectedAppCheck(_:appsToIncludeInLockedAppDialog:)();
  return a2;
}

uint64_t sub_1C2B62AF0()
{
  return ProtectedAppCheckStrategy.protectedAppCheck(_:needsAppNameForAppID:)();
}

uint64_t static ProtectedAppStatus.uninstalled(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_WORD *)(a3 + 16) = 0;
  return OUTLINED_FUNCTION_12_62();
}

uint64_t static ProtectedAppStatus.hidden(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_WORD *)(a3 + 16) = 256;
  return OUTLINED_FUNCTION_12_62();
}

uint64_t static ProtectedAppStatus.locked(_:isAccessible:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 17) = 2;
  *(_BYTE *)(a4 + 16) = a3;
  return OUTLINED_FUNCTION_12_62();
}

Swift::Void __swiftcall ProtectedAppStatus.markAccessible(_:)(Swift::Bool a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = a1;
}

uint64_t static ProtectedAppStatus.normal(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_WORD *)(a3 + 16) = 769;
  return OUTLINED_FUNCTION_12_62();
}

SiriKitFlow::ProtectedAppStatus::AppState_optional __swiftcall ProtectedAppStatus.AppState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  SiriKitFlow::ProtectedAppStatus::AppState_optional result;

  v2 = v1;
  v3 = sub_1C2CFE868();
  OUTLINED_FUNCTION_8();
  v4 = 4;
  if (v3 < 4)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_18();
  return result;
}

uint64_t ProtectedAppStatus.AppState.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_18_55();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C2B62BCC + 4 * byte_1C2D16BB0[v1]))(v0);
}

uint64_t sub_1C2B62BCC()
{
  return OUTLINED_FUNCTION_85_16();
}

uint64_t sub_1C2B62BE0()
{
  return OUTLINED_FUNCTION_84_18();
}

uint64_t sub_1C2B62BF4()
{
  return 0x6C616D726F6ELL;
}

void sub_1C2B62C08(char *a1)
{
  sub_1C2AF8CD4(*a1);
}

void sub_1C2B62C14()
{
  sub_1C293B5BC();
}

void sub_1C2B62C1C(uint64_t a1)
{
  char *v1;

  sub_1C2AB04D8(a1, *v1);
}

void sub_1C2B62C24()
{
  sub_1C293B910();
}

SiriKitFlow::ProtectedAppStatus::AppState_optional sub_1C2B62C2C(Swift::String *a1)
{
  return ProtectedAppStatus.AppState.init(rawValue:)(*a1);
}

void sub_1C2B62C38(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = ProtectedAppStatus.AppState.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void ProtectedAppStatus.appID.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

uint64_t ProtectedAppStatus.isAccessible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

void ProtectedAppStatus.state.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

void ProtectedAppStatus.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 17);
  sub_1C2CFE670();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_71_2();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_70();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_150_5();
  OUTLINED_FUNCTION_8();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_18_55();
  __asm { BR              X9 }
}

uint64_t sub_1C2B62D9C()
{
  uint64_t v1;

  OUTLINED_FUNCTION_85_16();
  OUTLINED_FUNCTION_150_5();
  OUTLINED_FUNCTION_8();
  sub_1C2CFDE54();
  return v1;
}

unint64_t static ProtectedAppCheck.unlockAppCompleteIdentifier.getter()
{
  return 0xD000000000000038;
}

void static ProtectedAppCheck.client(for:)(_QWORD *a1@<X8>)
{
  _QWORD *v2;

  if ((sub_1C2CFD1DC() & 1) != 0 || (sub_1C2CFD1D0() & 1) != 0 || (sub_1C2CFD1E8() & 1) != 0)
  {
    a1[3] = &type metadata for AppInstallationCheckingClient;
    a1[4] = &off_1E7C91BC8;
    v2 = (_QWORD *)OUTLINED_FUNCTION_5_2();
    *a1 = v2;
    v2[5] = &type metadata for AppProtectionFrameworkClient;
    v2[6] = &off_1E7C91BB0;
    v2[2] = 0xD000000000000012;
    v2[3] = 0x80000001C2D29780;
  }
  else
  {
    a1[3] = &type metadata for UnconditionalSuccessClient;
    a1[4] = &off_1E7C91B68;
    *a1 = 0xD000000000000014;
    a1[1] = 0x80000001C2D35470;
  }
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2B62ED8(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = a1 & 1;
  result = OUTLINED_FUNCTION_21_0();
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t ProtectedAppCheck.appIDs.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1C2B62F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  os_log_t v13[2];
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for ProtectedAppCheck.State(0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v6 = sub_1C2CFD878();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED7AA1B0);
  swift_retain_n();
  v13[0] = (os_log_t)sub_1C2CFD86C();
  v7 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v13[0], v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v14 = v9;
    v10 = v1 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_state;
    swift_beginAccess();
    sub_1C28F3FD0(v10, (uint64_t)v5, type metadata accessor for ProtectedAppCheck.State);
    v11 = sub_1C2CFDDAC();
    v13[1] = (os_log_t)sub_1C28BB120(v11, v12, &v14);
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C28B6000, v13[0], v7, "PAC: ProtectedAppCheck flow transitioned to state %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v9, -1, -1);
    MEMORY[0x1C3BC9DE8](v8, -1, -1);
  }
  else
  {
    swift_release_n();
  }

}

void sub_1C2B6314C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_21_0();
  v0 = OUTLINED_FUNCTION_71_2();
  sub_1C2B69A2C(v0, v1);
  swift_endAccess();
  sub_1C2B62F18();
  OUTLINED_FUNCTION_43_4(v2, type metadata accessor for ProtectedAppCheck.State);
}

void sub_1C2B631B4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;

  v3 = v2 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult);
  *(_QWORD *)v3 = a1;
  v5 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(v3 + 8) = a2;
  sub_1C29E32A4(v4, v5);
}

uint64_t ProtectedAppCheck.init(appIDs:strategy:client:deviceState:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  ValueMetadata *v41;
  _UNKNOWN **v42;

  v6 = v5;
  type metadata accessor for ResponseFactory();
  v12 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v12 + 40) = &type metadata for DialogUsageProvider;
  *(_QWORD *)(v12 + 48) = &protocol witness table for DialogUsageProvider;
  *(_QWORD *)(v6 + 192) = v12;
  v13 = v6 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_state;
  v14 = OUTLINED_FUNCTION_70_0();
  __swift_storeEnumTagSinglePayload(v13, 1, 4, v14);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_appsRemainInaccessible) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_noAppsRequireUnlock) = 0;
  v15 = v6 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = -1;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses) = MEMORY[0x1E0DEE9D8];
  v16 = sub_1C2B63464(a1);
  OUTLINED_FUNCTION_32_0();
  *(_QWORD *)(v6 + 24) = v16;
  sub_1C28B9A48(a2, v6 + 32);
  *(_BYTE *)(v6 + 16) = 0;
  sub_1C2B69914();
  sub_1C2B69914();
  if (v38)
  {
    OUTLINED_FUNCTION_14_44(v17, v18, v19, v20, v21, v22, v23, v24, v36, v37, v38, v39, v40);
  }
  else
  {
    if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
      swift_once();
    sub_1C28C72CC((uint64_t)&v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    v25 = qword_1ED7A4228;
    v41 = (ValueMetadata *)type metadata accessor for RefreshableDeviceState();
    v42 = &protocol witness table for RefreshableDeviceState;
    *(_QWORD *)&v40 = v25;
    OUTLINED_FUNCTION_38_0();
    sub_1C28BB37C((uint64_t)&v36, &qword_1ED7A8760);
  }
  sub_1C28B99EC(&v40, v6 + 112);
  sub_1C2B69914();
  if (v38)
  {
    sub_1C28BB37C(a5, &qword_1EF7934C8);
    sub_1C28BB37C(a4, &qword_1ED7A8760);
    sub_1C28BB37C(a3, &qword_1EF78A5B8);
    v26 = __swift_destroy_boxed_opaque_existential_1(a2);
    OUTLINED_FUNCTION_14_44(v26, v27, v28, v29, v30, v31, v32, v33, v36, v37, v38, v39, v40);
  }
  else
  {
    v34 = sub_1C2B0C6E8();
    v41 = &type metadata for OutputPublishers;
    v42 = &off_1E7C8D920;
    *(_QWORD *)&v40 = v34;
    sub_1C28BB37C(a5, &qword_1EF7934C8);
    sub_1C28BB37C(a4, &qword_1ED7A8760);
    sub_1C28BB37C(a3, &qword_1EF78A5B8);
    __swift_destroy_boxed_opaque_existential_1(a2);
    sub_1C28BB37C((uint64_t)&v36, &qword_1EF7934C8);
  }
  sub_1C28B99EC(&v40, v6 + 152);
  return v6;
}

uint64_t sub_1C2B63464(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[8];
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9E8];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (uint64_t *)(a1 + 40);
    v4 = MEMORY[0x1E0DEE9D8];
    do
    {
      v6 = *(v3 - 1);
      v5 = *v3;
      swift_bridgeObjectRetain_n();
      v7 = sub_1C2A65BD0((uint64_t)v13, v6, v5);
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C28FD5D0();
          v4 = v10;
        }
        v8 = *(_QWORD *)(v4 + 16);
        if (v8 >= *(_QWORD *)(v4 + 24) >> 1)
        {
          sub_1C28FD5D0();
          v4 = v11;
        }
        *(_QWORD *)(v4 + 16) = v8 + 1;
        v9 = v4 + 16 * v8;
        *(_QWORD *)(v9 + 32) = v6;
        *(_QWORD *)(v9 + 40) = v5;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C2B635A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  NSObject *v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v35;
  os_log_type_t v36;
  _WORD *v37;
  const char *v38;
  uint64_t v39;
  os_log_type_t v40;
  _WORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  __int128 v48;
  __int128 v49;

  v45 = a1;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v2, v3);
  OUTLINED_FUNCTION_10();
  v6 = (_QWORD *)(v5 - v4);
  v7 = OUTLINED_FUNCTION_70_0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  OUTLINED_FUNCTION_10();
  v12 = v11 - v10;
  type metadata accessor for ProtectedAppCheck.State(0);
  OUTLINED_FUNCTION_0_1();
  v15 = MEMORY[0x1E0C80A78](v13, v14);
  v43 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15, v17);
  v20 = (char *)&v42 - v19;
  MEMORY[0x1E0C80A78](v18, v21);
  v23 = (uint64_t)&v42 - v22;
  v44 = v1;
  v24 = v1 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_state;
  v25 = v7;
  OUTLINED_FUNCTION_21_0();
  sub_1C28F3FD0(v24, v23, type metadata accessor for ProtectedAppCheck.State);
  LODWORD(v7) = __swift_getEnumTagSinglePayload(v23, 4, v7);
  sub_1C28C9F68(v23, type metadata accessor for ProtectedAppCheck.State);
  if ((_DWORD)v7 == 1)
    return 1;
  sub_1C28F3FD0(v24, (uint64_t)v20, type metadata accessor for ProtectedAppCheck.State);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v20, 4, v25))
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12, v20, v25);
    v29 = type metadata accessor for Input(0);
    sub_1C28F3FD0(v45 + *(int *)(v29 + 20), (uint64_t)v6, type metadata accessor for Parse);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v25);
      v27 = type metadata accessor for Parse;
      v28 = (uint64_t)v6;
      goto LABEL_22;
    }
    v30 = v6[1];
    v31 = v6[2];
    if ((*v6 != 0xD000000000000038 || v30 != 0x80000001C2D35430) && (OUTLINED_FUNCTION_42_0() & 1) == 0)
    {
      OUTLINED_FUNCTION_10_46();
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_32_0();
      return 0;
    }
    if (v31)
    {
      sub_1C28C1A54();
      OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_32_0();
      if (*((_QWORD *)&v49 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v32 = v46;
          v30 = v47;
          if (v32 == sub_1C2CFBC70() && v30 == v33)
          {
            OUTLINED_FUNCTION_29_2();
          }
          else
          {
            v31 = v33;
            v23 = OUTLINED_FUNCTION_42_0();
            OUTLINED_FUNCTION_29();
            OUTLINED_FUNCTION_32_0();
            if ((v23 & 1) == 0)
            {
              if (qword_1ED7AA040 != -1)
                swift_once();
              v35 = OUTLINED_FUNCTION_118();
              OUTLINED_FUNCTION_23_1(v35, (uint64_t)qword_1ED7AA1B0);
              v36 = OUTLINED_FUNCTION_123();
              if (OUTLINED_FUNCTION_116_2(v36))
              {
                v37 = (_WORD *)OUTLINED_FUNCTION_6_0();
                OUTLINED_FUNCTION_91(v37);
                v38 = "PAC: received unlock DI for another request? Unsure how to proceed; resetting";
                goto LABEL_30;
              }
              goto LABEL_31;
            }
          }
          OUTLINED_FUNCTION_91_20(v43, 3);
          OUTLINED_FUNCTION_10_46();
          return 1;
        }
LABEL_26:
        if (qword_1ED7AA040 != -1)
          swift_once();
        v39 = OUTLINED_FUNCTION_118();
        OUTLINED_FUNCTION_23_1(v39, (uint64_t)qword_1ED7AA1B0);
        v40 = OUTLINED_FUNCTION_123();
        if (OUTLINED_FUNCTION_116_2(v40))
        {
          v41 = (_WORD *)OUTLINED_FUNCTION_6_0();
          OUTLINED_FUNCTION_91(v41);
          v38 = "PAC: received unlock DI that is missing an id; resetting the flow";
LABEL_30:
          OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v31, (os_log_type_t)v30, v38, (uint8_t *)v23);
          OUTLINED_FUNCTION_11_0();
        }
LABEL_31:

        OUTLINED_FUNCTION_91_20(v43, 1);
        OUTLINED_FUNCTION_10_46();
        return 0;
      }
    }
    else
    {
      OUTLINED_FUNCTION_29();
      swift_bridgeObjectRelease();
      v48 = 0u;
      v49 = 0u;
    }
    sub_1C28BB37C((uint64_t)&v48, &qword_1ED7A8480);
    goto LABEL_26;
  }
  v27 = type metadata accessor for ProtectedAppCheck.State;
  v28 = (uint64_t)v20;
LABEL_22:
  sub_1C28C9F68(v28, v27);
  return 0;
}

uint64_t sub_1C2B639F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  type metadata accessor for ProtectedAppCheck.State(0);
  v2[7] = OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B63A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  char *v6;

  v1 = *(_QWORD *)(v0 + 56);
  OUTLINED_FUNCTION_21_0();
  v2 = OUTLINED_FUNCTION_194();
  sub_1C28F3FD0(v2, v3, v4);
  v5 = OUTLINED_FUNCTION_70_0();
  v6 = (char *)sub_1C2B63AA8 + 4 * byte_1C2D16BB8[__swift_getEnumTagSinglePayload(v1, 4, v5)];
  __asm { BR              X10 }
}

void sub_1C2B63AA8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C28C9F68(*(_QWORD *)(v1 + 56), type metadata accessor for ProtectedAppCheck.State);
  if (qword_1ED7AA040 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v2, (uint64_t)qword_1ED7AA1B0);
  v3 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_20_0(v3))
  {
    v4 = (_WORD *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_91(v4);
    OUTLINED_FUNCTION_27_4(&dword_1C28B6000, v0, v5, "PAC: invoking execute() while still waiting for an unlock response");
    OUTLINED_FUNCTION_11_0();
  }
  v6 = *(_QWORD *)(v1 + 40);

  static ExecuteResponse.ongoing(requireInput:)(1, v6);
  swift_task_dealloc();
  __asm { BR              X0 }
}

uint64_t sub_1C2B63C70()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B63CA4()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B63CCC()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B63D00()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B63D34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B63D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(void))
{
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint8_t *v43;

  OUTLINED_FUNCTION_43_2();
  sub_1C2B69914();
  if (*(_QWORD *)(v14 + 80))
  {
    sub_1C28B99EC((__int128 *)(v14 + 56), v14 + 16);
  }
  else
  {
    OUTLINED_FUNCTION_118_10();
    sub_1C28C3328(&qword_1EF79AB38, type metadata accessor for ProtectedAppCheck, (uint64_t)&protocol conformance descriptor for ProtectedAppCheck);
    sub_1C2CFCFFC();
    sub_1C2CFCF3C();
    OUTLINED_FUNCTION_36_0();
    static ProtectedAppCheck.client(for:)((_QWORD *)(v14 + 16));
    swift_release();
    sub_1C28BB37C(v14 + 56, &qword_1EF78A5B8);
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v15 = OUTLINED_FUNCTION_118();
  *(_QWORD *)(v14 + 248) = __swift_project_value_buffer(v15, (uint64_t)qword_1ED7AA1B0);
  sub_1C28B9A48(v14 + 16, v14 + 96);
  v16 = sub_1C2CFD86C();
  v17 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v18 = 136315138;
    v43 = v18;
    v19 = *(_QWORD *)(v14 + 120);
    v20 = *(_QWORD *)(v14 + 128);
    v21 = (_QWORD *)OUTLINED_FUNCTION_71_2();
    __swift_project_boxed_opaque_existential_1(v21, v22);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
    *(_QWORD *)(v14 + 232) = OUTLINED_FUNCTION_131_10(v23, v24, v25, v26, v27, v28, v29, v30);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_353();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v16, v17, "PAC: rebuilding statuses using %s", v43);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_353();

  v31 = *(_QWORD *)(v14 + 240);
  v32 = OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses;
  *(_QWORD *)(v14 + 256) = OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses;
  v33 = (_QWORD *)(v31 + v32);
  OUTLINED_FUNCTION_21_0();
  *v33 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v34 = *(_QWORD **)(v31 + 24);
  *(_QWORD *)(v14 + 264) = v34;
  v35 = v34[2];
  *(_QWORD *)(v14 + 272) = v35;
  if (v35)
  {
    *(_QWORD *)(v14 + 280) = 0;
    v36 = v34[4];
    *(_QWORD *)(v14 + 288) = v36;
    v37 = v34[5];
    *(_QWORD *)(v14 + 296) = v37;
    v38 = *(_QWORD *)(v14 + 40);
    v39 = *(_QWORD *)(v14 + 48);
    swift_bridgeObjectRetain();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v14 + 16), v38);
    OUTLINED_FUNCTION_120_11(*(int **)(v39 + 8));
    OUTLINED_FUNCTION_50_0();
    v40 = swift_task_alloc();
    v41 = (_QWORD *)OUTLINED_FUNCTION_98_13(v40);
    *v41 = v14;
    v41[1] = sub_1C2B64030;
    return OUTLINED_FUNCTION_27_43(v14 + 184, v36, v37, v38, v39, a14);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v14 + 16);
    return OUTLINED_FUNCTION_6_4(*(uint64_t (**)(void))(v14 + 8));
  }
}

uint64_t sub_1C2B64030()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B64064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v30;
  char v31;
  char v32;
  NSObject *v33;
  os_log_type_t v34;
  unint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t (*v72)(void);

  OUTLINED_FUNCTION_43_2();
  a25 = v27;
  a26 = v28;
  a24 = v26;
  v29 = *(uint64_t (**)(void))(v26 + 184);
  v30 = *(_QWORD *)(v26 + 192);
  v31 = *(_BYTE *)(v26 + 200);
  v32 = *(_BYTE *)(v26 + 201);
  OUTLINED_FUNCTION_31_9();
  OUTLINED_FUNCTION_3_1();
  v33 = sub_1C2CFD86C();
  v34 = sub_1C2CFE2A4();
  v72 = v29;
  v70 = v32;
  v71 = v31;
  if (os_log_type_enabled(v33, v34))
  {
    v35 = *(_QWORD *)(v26 + 296);
    v69 = *(_QWORD *)(v26 + 288);
    v36 = v29;
    v37 = OUTLINED_FUNCTION_6_0();
    a15 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v37 = 136315394;
    OUTLINED_FUNCTION_12();
    *(_QWORD *)(v37 + 4) = sub_1C28BB120(v69, v35, &a15);
    OUTLINED_FUNCTION_26_10();
    *(_WORD *)(v37 + 12) = 2080;
    *(_QWORD *)(v26 + 208) = v36;
    *(_QWORD *)(v26 + 216) = v30;
    *(_BYTE *)(v26 + 224) = v31;
    *(_BYTE *)(v26 + 225) = v32;
    ProtectedAppStatus.debugDescription.getter();
    *(_QWORD *)(v37 + 14) = OUTLINED_FUNCTION_131_10(v38, v39, v40, v41, v42, v43, v44, v45);
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_29_2();
    _os_log_impl(&dword_1C28B6000, v33, v34, "PAC: status for %s: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_29_2();

  v46 = (uint64_t *)(*(_QWORD *)(v26 + 240) + *(_QWORD *)(v26 + 256));
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_21_0();
  v47 = *v46;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v46 = v47;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v63 = *(_QWORD *)(v26 + 256);
    v64 = *(_QWORD *)(v26 + 240);
    OUTLINED_FUNCTION_145_6();
    v47 = v65;
    *(_QWORD *)(v64 + v63) = v65;
  }
  v49 = *(_QWORD *)(v47 + 16);
  if (v49 >= *(_QWORD *)(v47 + 24) >> 1)
  {
    v66 = *(_QWORD *)(v26 + 256);
    v67 = *(_QWORD *)(v26 + 240);
    OUTLINED_FUNCTION_145_6();
    v47 = v68;
    *(_QWORD *)(v67 + v66) = v68;
  }
  v50 = *(_QWORD *)(v26 + 272);
  v51 = *(_QWORD *)(v26 + 280) + 1;
  *(_QWORD *)(v47 + 16) = v49 + 1;
  v52 = v47 + 24 * v49;
  *(_QWORD *)(v52 + 32) = v72;
  *(_QWORD *)(v52 + 40) = v30;
  *(_BYTE *)(v52 + 48) = v71;
  *(_BYTE *)(v52 + 49) = v70;
  swift_endAccess();
  if (v51 == v50)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_116_4();
    return OUTLINED_FUNCTION_6_4(*(uint64_t (**)(void))(v26 + 8));
  }
  else
  {
    v54 = *(_QWORD *)(v26 + 280) + 1;
    *(_QWORD *)(v26 + 280) = v54;
    v55 = *(_QWORD *)(v26 + 264) + 16 * v54;
    v56 = *(_QWORD *)(v55 + 32);
    *(_QWORD *)(v26 + 288) = v56;
    v57 = *(_QWORD *)(v55 + 40);
    *(_QWORD *)(v26 + 296) = v57;
    v58 = *(_QWORD *)(v26 + 40);
    v59 = *(_QWORD *)(v26 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v26 + 16), v58);
    OUTLINED_FUNCTION_120_11(*(int **)(v59 + 8));
    OUTLINED_FUNCTION_57_1();
    v60 = swift_task_alloc();
    v61 = (_QWORD *)OUTLINED_FUNCTION_98_13(v60);
    v62 = OUTLINED_FUNCTION_10_0(v61);
    return OUTLINED_FUNCTION_27_43(v62, v56, v57, v58, v59, v72);
  }
}

uint64_t sub_1C2B64320(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[21] = a1;
  v2[22] = v1;
  type metadata accessor for ProtectedAppCheck.State(0);
  v2[23] = OUTLINED_FUNCTION_1_3();
  v2[24] = type metadata accessor for SiriKitEventPayload(0);
  v2[25] = OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B64370()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  _QWORD *v9;

  if (qword_1ED7AA040 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_118();
  v2 = __swift_project_value_buffer(v1, (uint64_t)qword_1ED7AA1B0);
  v3 = v2;
  v0[26] = v2;
  OUTLINED_FUNCTION_38_0();
  v4 = OUTLINED_FUNCTION_153();
  v5 = sub_1C2CFE298();
  v6 = OUTLINED_FUNCTION_20_0(v5);
  v7 = v0[22];
  if (v6)
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v8 = 134217984;
    v0[20] = *(_QWORD *)(*(_QWORD *)(v7 + 24) + 16);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_374();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v4, v3, "PAC: Beginning app unlock request for %ld app(s)", v8);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_374();

  v9 = (_QWORD *)swift_task_alloc();
  v0[27] = v9;
  OUTLINED_FUNCTION_101_15(v9, (uint64_t)sub_1C2B64498);
  return sub_1C2B63D34();
}

uint64_t sub_1C2B64498()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B644CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  NSObject *v19;
  uint64_t v20;
  int v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  os_log_type_t v28;
  uint8_t *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _WORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  os_log_type_t v42;
  _WORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_21_0();
  v1 = OUTLINED_FUNCTION_33_0();
  v2 = sub_1C2B64E98(v1);
  v4 = v3;
  OUTLINED_FUNCTION_8();
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = *(_QWORD **)(v0 + 176);
    v6 = (_QWORD *)sub_1C2B621A8(v2);
    OUTLINED_FUNCTION_32_0();
    v7 = v5[7];
    v8 = v5[8];
    __swift_project_boxed_opaque_existential_1(v5 + 4, v7);
    v9 = (*(uint64_t (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v8 + 8))(v5, v6, v7, v8);
    sub_1C2B62544(v9, v6);
    v11 = v10;
  }
  else
  {
    OUTLINED_FUNCTION_32_0();
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (v11[2])
  {
    v12 = *(_QWORD **)(v0 + 176);
    v13 = v11[4];
    *(_QWORD *)(v0 + 224) = v13;
    v14 = v11[5];
    *(_QWORD *)(v0 + 232) = v14;
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_254();
    OUTLINED_FUNCTION_32_0();
    v15 = v12 + 14;
    v16 = v12[17];
    v17 = v12[18];
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 104))(v16, v17);
    v19 = *(NSObject **)(v0 + 208);
    if ((v18 & 1) != 0)
    {
      v20 = *(_QWORD *)(v0 + 176);
      OUTLINED_FUNCTION_8();
      v21 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult + 8);
      v22 = sub_1C2CFD86C();
      if (v21 == 255)
      {
        v42 = sub_1C2CFE2A4();
        if (OUTLINED_FUNCTION_32_11(v42))
        {
          v43 = (_WORD *)OUTLINED_FUNCTION_6_0();
          OUTLINED_FUNCTION_91(v43);
          OUTLINED_FUNCTION_27_4(&dword_1C28B6000, v22, v44, "PAC: Device is locked, will push UnlockDeviceFlow, which should make locked apps accessible as a side-effect.");
          OUTLINED_FUNCTION_11_0();
        }
        v45 = *(_QWORD *)(v0 + 168);

        sub_1C2B6600C(v45);
      }
      else
      {
        v23 = sub_1C2CFE2B0();
        if (OUTLINED_FUNCTION_32_11(v23))
        {
          v24 = (uint8_t *)OUTLINED_FUNCTION_6_0();
          *(_WORD *)v24 = 0;
          OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v22, (os_log_type_t)v21, "PAC: Device is still locked after we already pushed deviceUnlockFlow. Stopping execution.", v24);
          OUTLINED_FUNCTION_11_0();
        }

        static ExecuteResponse.complete()();
      }
      OUTLINED_FUNCTION_115_11();
      OUTLINED_FUNCTION_38();
      return OUTLINED_FUNCTION_37(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      OUTLINED_FUNCTION_31_9();
      sub_1C2CFD86C();
      v28 = OUTLINED_FUNCTION_30();
      if (OUTLINED_FUNCTION_116_2(v28))
      {
        v29 = (uint8_t *)OUTLINED_FUNCTION_6_0();
        v46 = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v29 = 136315138;
        OUTLINED_FUNCTION_33_0();
        *(_QWORD *)(v0 + 136) = sub_1C28BB120(v13, v14, &v46);
        OUTLINED_FUNCTION_78_3();
        OUTLINED_FUNCTION_26_10();
        OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v19, (os_log_type_t)v17, "PAC: Device is unlocked, will send an unlocked request for app %s", v29);
        OUTLINED_FUNCTION_107_1();
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_29_2();
      v30 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 240) = v30;
      OUTLINED_FUNCTION_101_15(v30, (uint64_t)sub_1C2B648A8);
      OUTLINED_FUNCTION_32_4();
      return sub_1C2B651AC(v31, v32);
    }
  }
  else
  {
    v25 = *(_QWORD *)(v4 + 16);
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_254();
    if (v25)
    {
      v26 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 288) = v26;
      OUTLINED_FUNCTION_101_15(v26, (uint64_t)sub_1C2B64B30);
      OUTLINED_FUNCTION_32_4();
      return sub_1C2B66350();
    }
    else
    {
      v33 = *(NSObject **)(v0 + 208);
      sub_1C2CFD86C();
      v34 = OUTLINED_FUNCTION_30();
      if (OUTLINED_FUNCTION_20_0(v34))
      {
        v35 = (_WORD *)OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_91(v35);
        OUTLINED_FUNCTION_27_4(&dword_1C28B6000, v33, v36, "PAC: Flow returned no apps which require unlock, and no apps are hidden. Guard will pass.");
        OUTLINED_FUNCTION_11_0();
      }
      v37 = *(_QWORD *)(v0 + 176);

      *(_BYTE *)(v37 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_noAppsRequireUnlock) = 1;
      v38 = OUTLINED_FUNCTION_70_0();
      OUTLINED_FUNCTION_7_78(v38);
      v39 = swift_task_alloc();
      v40 = (_QWORD *)OUTLINED_FUNCTION_98_13(v39);
      OUTLINED_FUNCTION_96_14(v40);
      OUTLINED_FUNCTION_32_4();
      return sub_1C2B677A8(v41);
    }
  }
}

uint64_t sub_1C2B648A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B6490C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_105();
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 256) = qword_1ED7AA130;
  sub_1C2CFD41C();
  OUTLINED_FUNCTION_221();
  v2 = sub_1C2CFD3E0();
  *(_QWORD *)(v0 + 264) = v2;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  type metadata accessor for SiriKitEvent(0);
  *(_BYTE *)v1 = 32;
  OUTLINED_FUNCTION_58_27();
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 24) = v2;
  OUTLINED_FUNCTION_221();
  sub_1C2B69914();
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  sub_1C2B69914();
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_BYTE *)(v1 + 184) = 124;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_38_0();
  SiriKitEvent.__allocating_init(_:builder:)(v1, 0);
  v6 = v5;
  *(_QWORD *)(v0 + 272) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v7;
  *v7 = v0;
  v7[1] = sub_1C2B64A78;
  return OUTLINED_FUNCTION_25_50(v6);
}

uint64_t sub_1C2B64A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_87_0();
  v1 = v0 + 16;
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_143();
  sub_1C28BB37C(v1, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_40_2(v2, &qword_1ED7A8480);
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_36_2();
  return swift_task_switch();
}

uint64_t sub_1C2B64AFC()
{
  uint64_t v0;

  static ExecuteResponse.ongoing(requireInput:)(1, *(_QWORD *)(v0 + 168));
  OUTLINED_FUNCTION_115_11();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B64B30()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 296) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B64B7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_7_78(v0);
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_98_13(v1);
  v3 = OUTLINED_FUNCTION_96_14(v2);
  return OUTLINED_FUNCTION_59_30(v3);
}

uint64_t sub_1C2B64BC0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_82_0(&v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24((uint64_t (*)(void))v0[1]);
}

uint64_t sub_1C2B64C04()
{
  os_log_type_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint8_t *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_226();
  v2 = *(NSObject **)(v1 + 208);
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_195();
  sub_1C2CFD86C();
  v3 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_126_0(v3))
  {
    v4 = *(void **)(v1 + 248);
    v5 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v5 = 136315138;
    *(_QWORD *)(v1 + 128) = v4;
    v6 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    v7 = OUTLINED_FUNCTION_68_23();
    *(_QWORD *)(v1 + 112) = OUTLINED_FUNCTION_83_16(v7, v8, v9);
    OUTLINED_FUNCTION_40_27();
    OUTLINED_FUNCTION_97();

    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v2, v0, "PAC: Error sending unlock request: %s", v5);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  v10 = *(_QWORD *)(v1 + 184);
  v11 = OUTLINED_FUNCTION_70_0();
  __swift_storeEnumTagSinglePayload(v10, 4, 4, v11);
  sub_1C2B6314C();
  OUTLINED_FUNCTION_44_5();
  static ExecuteResponse.complete()();
  OUTLINED_FUNCTION_115_11();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_11_10(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B64D6C()
{
  _QWORD *v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_226();
  v3 = v0[26];
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_195();
  sub_1C2CFD86C();
  v4 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_10_1(v4))
  {
    v5 = v0[37];
    v6 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_115_12(4.8149e-34);
    *(_QWORD *)(v2 + 144) = v5;
    OUTLINED_FUNCTION_195();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    v7 = OUTLINED_FUNCTION_68_23();
    v0[19] = OUTLINED_FUNCTION_83_16(v7, v8, v9);
    OUTLINED_FUNCTION_40_27();
    OUTLINED_FUNCTION_97();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v3, v1, "PAC: Could not produce unlock dialog: %s", v6);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  v10 = OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_7_78(v10);
  v11 = swift_task_alloc();
  v12 = (_QWORD *)OUTLINED_FUNCTION_98_13(v11);
  v13 = OUTLINED_FUNCTION_96_14(v12);
  return OUTLINED_FUNCTION_26_50(v13);
}

uint64_t sub_1C2B64E98(uint64_t a1)
{
  uint64_t v2;
  char v3;

  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_67_20();
    OUTLINED_FUNCTION_18_55();
    __asm { BR              X8 }
  }
  v2 = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_118_10();
  sub_1C28C3328(&qword_1EF79AB38, type metadata accessor for ProtectedAppCheck, (uint64_t)&protocol conformance descriptor for ProtectedAppCheck);
  sub_1C2CFCFFC();
  sub_1C2CFCF3C();
  OUTLINED_FUNCTION_36_0();
  v3 = sub_1C2CFD1E8();
  swift_release();
  if ((v3 & 1) != 0)
  {
    sub_1C293F5E8();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

uint64_t sub_1C2B651AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[43] = a2;
  v3[44] = v2;
  v3[42] = a1;
  OUTLINED_FUNCTION_0();
  v3[45] = OUTLINED_FUNCTION_1_3();
  type metadata accessor for ProtectedAppCheck.State(0);
  v3[46] = OUTLINED_FUNCTION_1_3();
  v4 = OUTLINED_FUNCTION_70_0();
  v3[47] = v4;
  v3[48] = *(_QWORD *)(v4 - 8);
  v3[49] = OUTLINED_FUNCTION_107_0();
  v3[50] = swift_task_alloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6521C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_43_2();
  v34 = v1;
  v35 = v2;
  v33 = v0;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_118();
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED7AA1B0);
  *(_QWORD *)(v0 + 408) = v4;
  OUTLINED_FUNCTION_31_9();
  sub_1C2CFD86C();
  v5 = OUTLINED_FUNCTION_30();
  v6 = OUTLINED_FUNCTION_126_0(v5);
  v7 = *(_QWORD *)(v0 + 344);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 336);
    v9 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v30 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v9 = 136315138;
    OUTLINED_FUNCTION_3_1();
    *(_QWORD *)(v0 + 328) = sub_1C28BB120(v8, v7, &v30);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v4, (os_log_type_t)v4, "PAC: Pushing sendUnlockRequest for app: %s", v9);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_29_2();
  v10 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 376);
  v12 = *(_QWORD *)(v0 + 384);
  v13 = *(_QWORD *)(v0 + 368);
  v15 = *(_QWORD *)(v0 + 344);
  v14 = *(_QWORD **)(v0 + 352);
  v16 = *(_QWORD *)(v0 + 336);
  sub_1C2CFBCA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v10, v11);
  __swift_storeEnumTagSinglePayload(v13, 0, 4, v11);
  sub_1C2B6314C();
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 304) = sub_1C2CFDC8C();
  v18 = v14[7];
  v19 = v14[8];
  __swift_project_boxed_opaque_existential_1(v14 + 4, v18);
  v20 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 40))(v14, v16, v15, v18, v19);
  if (v21)
  {
    v32 = v17;
    v30 = v20;
    v31 = v21;
    sub_1C2A3D1B8();
  }
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC(v0 + 192);
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);
  OUTLINED_FUNCTION_221();
  v22 = sub_1C2B62868();
  v24 = v23;
  swift_release();
  *(_BYTE *)(v0 + 520) = v24;
  if ((v24 & 1) == 0)
  {
    if (v22 == (id)1)
    {
      v32 = v17;
      v25 = 0x44496863756F74;
      v26 = 0xE700000000000000;
    }
    else
    {
      if (v22 != (id)2)
        goto LABEL_15;
      v32 = v17;
      v25 = 0x444965636166;
      v26 = 0xE600000000000000;
    }
    v30 = v25;
    v31 = v26;
    sub_1C2A3D1B8();
  }
LABEL_15:
  if (qword_1EF786CE8 != -1)
    swift_once();
  v27 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 416) = v27;
  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v28;
  OUTLINED_FUNCTION_148(v28, (uint64_t)sub_1C2B655A8);
  return sub_1C29C5664(164, v27);
}

uint64_t sub_1C2B655A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 432) = a1;
  *(_QWORD *)(v3 + 440) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B65610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char v24;
  id v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = *(_QWORD *)(v0 + 392);
  v30 = *(_QWORD *)(v0 + 384);
  v31 = *(_QWORD *)(v0 + 376);
  v1 = *(_QWORD *)(v0 + 352);
  v28 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 336);
  sub_1C2AB73D8();
  v3 = sub_1C2A455B4();
  *(_QWORD *)(v0 + 448) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79AF20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D00CD0;
  *(_QWORD *)(v0 + 288) = 25705;
  *(_QWORD *)(v0 + 296) = 0xE200000000000000;
  v5 = MEMORY[0x1E0DEA968];
  OUTLINED_FUNCTION_125_8();
  v6 = sub_1C2CFBC70();
  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = v7;
  *(_QWORD *)(v0 + 272) = 7368801;
  *(_QWORD *)(v0 + 280) = 0xE300000000000000;
  OUTLINED_FUNCTION_125_8();
  *(_QWORD *)(inited + 168) = v5;
  *(_QWORD *)(inited + 144) = v2;
  *(_QWORD *)(inited + 152) = v28;
  OUTLINED_FUNCTION_3_1();
  v8 = sub_1C2CFDC8C();
  sub_1C2A46A04(v8, v3);
  v9 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 136));
  OUTLINED_FUNCTION_121_10();
  DeviceState.asInvocationContext.getter();
  v11 = v10;
  v12 = objc_msgSend(v9, sel_runSiriKitExecutorCommandWithContext_payload_, v10, v3);
  *(_QWORD *)(v0 + 456) = v12;

  v13 = objc_msgSend(v9, sel_wrapCommandInStartLocalRequest_, v12);
  *(_QWORD *)(v0 + 464) = v13;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D885B8]), sel_init);
  *(_QWORD *)(v0 + 472) = v14;
  sub_1C2CFBCA0();
  sub_1C2CFBC70();
  v15 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  *(_QWORD *)(v0 + 480) = v15;
  v15(v29, v31);
  v16 = OUTLINED_FUNCTION_71_0();
  sub_1C29BB800(v16, v17, v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
  v18 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v18 + 16) = xmmword_1C2D00370;
  *(_QWORD *)(v18 + 32) = v13;
  OUTLINED_FUNCTION_151_5();
  v19 = v13;
  OUTLINED_FUNCTION_139_8((uint64_t)v19, v20, (SEL *)&selRef_setSuccessCommands_);
  v21 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v21 + 16) = xmmword_1C2D00370;
  *(_QWORD *)(v21 + 32) = v19;
  OUTLINED_FUNCTION_151_5();
  v22 = v19;
  OUTLINED_FUNCTION_139_8((uint64_t)v22, v23, (SEL *)&selRef_setFailureCommands_);
  sub_1C2B69718(v2, v28, v14);
  if (qword_1ED7A7F80 != -1)
    swift_once();
  v24 = *(_BYTE *)(v0 + 520);
  v25 = v14;
  OUTLINED_FUNCTION_50_0();
  sub_1C2B08890();
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v26;
  *v26 = v0;
  v26[1] = sub_1C2B65960;
  return sub_1C2B65E1C(v0 + 232, *(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 360), (v24 & 1) == 0);
}

uint64_t sub_1C2B65960()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 496) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B659AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 352) + 152), *(_QWORD *)(*(_QWORD *)(v0 + 352) + 176));
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 504) = v1;
  v2 = OUTLINED_FUNCTION_63_19(v1, (uint64_t)sub_1C2B65A04);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t sub_1C2B65A04()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 512) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B65A50()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_105();
  v2 = *(void **)(v0 + 472);
  v1 = *(void (**)(uint64_t))(v0 + 480);
  v4 = *(void **)(v0 + 456);
  v3 = *(void **)(v0 + 464);
  v5 = *(void **)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 360);

  OUTLINED_FUNCTION_116_4();
  sub_1C28C9F68(v6, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  v7 = OUTLINED_FUNCTION_71_2();
  v1(v7);
  OUTLINED_FUNCTION_135_10();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_19_12(v8);
}

uint64_t sub_1C2B65AD4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 384) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376));
  OUTLINED_FUNCTION_134_9();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B65B24()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)(v0 + 472);
  v1 = *(void (**)(uint64_t))(v0 + 480);
  v4 = *(void **)(v0 + 456);
  v3 = *(void **)(v0 + 464);
  v5 = *(void **)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 360);

  sub_1C28C9F68(v6, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  v7 = OUTLINED_FUNCTION_71_0();
  v1(v7);
  OUTLINED_FUNCTION_134_9();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B65BBC()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  id v3;
  id v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;

  v1 = *(void **)(v0 + 512);
  v2 = *(NSObject **)(v0 + 408);
  v3 = v1;
  v4 = v1;
  sub_1C2CFD86C();
  v5 = OUTLINED_FUNCTION_30();
  if (os_log_type_enabled(v2, v5))
  {
    v6 = *(void **)(v0 + 512);
    v7 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v21 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v7 = 136315138;
    *(_QWORD *)(v0 + 312) = v6;
    v8 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    v9 = sub_1C2CFDDAC();
    *(_QWORD *)(v0 + 320) = sub_1C28BB120(v9, v10, &v21);
    OUTLINED_FUNCTION_78_3();
    OUTLINED_FUNCTION_254();
    OUTLINED_FUNCTION_13_29();
    OUTLINED_FUNCTION_13_29();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v2, v5, "PAC: Error caught while publishing unlock output: %s. Ignoring and continuing with ProtectedAppCheck flow.", v7);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  v11 = *(void **)(v0 + 472);
  v20 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
  v13 = *(void **)(v0 + 456);
  v12 = *(void **)(v0 + 464);
  v14 = *(void **)(v0 + 432);
  v15 = *(_QWORD *)(v0 + 400);
  v16 = *(_QWORD *)(v0 + 376);
  v17 = *(_QWORD *)(v0 + 360);

  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  __swift_destroy_boxed_opaque_existential_1(v0 + 232);
  sub_1C28C9F68(v17, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  v20(v15, v16);
  OUTLINED_FUNCTION_135_10();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  v18 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return v18();
}

uint64_t sub_1C2B65E1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *v7;

  *(_BYTE *)(v4 + 120) = a4;
  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = a3;
  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 80) = type metadata accessor for AceOutput();
  *(_QWORD *)(v4 + 88) = OUTLINED_FUNCTION_1_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  *(_QWORD *)(v4 + 96) = OUTLINED_FUNCTION_1_3();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 104) = v7;
  OUTLINED_FUNCTION_148(v7, (uint64_t)sub_1C2B65EA8);
  return sub_1C2BEE9DC(a2, a3);
}

uint64_t sub_1C2B65EA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *v2;
  v6 = *v2;
  OUTLINED_FUNCTION_82_0(&v6);
  if (v1)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_31();
    return OUTLINED_FUNCTION_29_5((uint64_t (*)(void))v2[1]);
  }
  else
  {
    *(_QWORD *)(v4 + 112) = a1;
    OUTLINED_FUNCTION_36_2();
    return swift_task_switch();
  }
}

uint64_t sub_1C2B65F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_105();
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(uint64_t **)(v0 + 56);
  v6 = *(void **)(v0 + 64);
  v7 = *(_BYTE *)(v0 + 120) & 1;
  OUTLINED_FUNCTION_0();
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  sub_1C2B69914();
  v5[3] = v4;
  v5[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_0(v5);
  *(_OWORD *)(v3 + 104) = 0u;
  *(_QWORD *)(v3 + 120) = 0;
  *(_OWORD *)(v3 + 88) = 0u;
  v8 = v6;
  sub_1C28DF608(v0 + 16, v3 + 88);
  *(_BYTE *)(v3 + *(int *)(v4 + 32)) = v7;
  *(_QWORD *)v3 = v1;
  sub_1C293D290(v2, v3 + *(int *)(v4 + 28));
  *(_QWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_BYTE *)(v3 + 80) = 1;
  v9 = OUTLINED_FUNCTION_136();
  sub_1C28F31CC(v9, v10, v11);
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_38();
  v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_19_12(v12);
}

void sub_1C2B6600C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[40];
  _BYTE v12[40];

  type metadata accessor for ProtectedAppCheck.State(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v3, v4);
  OUTLINED_FUNCTION_10();
  v7 = v6 - v5;
  type metadata accessor for ProtectedAppDeviceUnlockStrategy();
  v8 = OUTLINED_FUNCTION_5_2();
  sub_1C28B9A48(v1 + 112, (uint64_t)v12);
  sub_1C28B9A48(v1 + 152, (uint64_t)v11);
  type metadata accessor for UnlockDeviceFlowAsync(0);
  v9 = OUTLINED_FUNCTION_27();
  sub_1C2B6975C(v8, (uint64_t)v12, (uint64_t)v11, v9);
  v10 = OUTLINED_FUNCTION_70_0();
  __swift_storeEnumTagSinglePayload(v7, 2, 4, v10);
  sub_1C2B6314C();
  OUTLINED_FUNCTION_38_0();
  sub_1C29DA7C4((uint64_t)sub_1C2B6990C, v1, a1);
  OUTLINED_FUNCTION_36_0();
  swift_release();
  OUTLINED_FUNCTION_18();
}

void sub_1C2B660E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v2 = type metadata accessor for ProtectedAppCheck.State(0);
  MEMORY[0x1E0C80A78](v2, v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)a1;
  v7 = *(unsigned __int8 *)(a1 + 8);
  if (v7 == 1)
  {
    v8 = v6;
    if (qword_1ED7AA040 != -1)
      swift_once();
    v9 = sub_1C2CFD878();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED7AA1B0);
    v10 = v6;
    v11 = v6;
    v12 = sub_1C2CFD86C();
    v13 = sub_1C2CFE2B0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v19[0] = swift_slowAlloc();
      *(_DWORD *)v14 = 138412290;
      v15 = v6;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      v19[1] = v16;
      sub_1C2CFE4D8();
      v17 = v19[0];
      *(_QWORD *)v19[0] = v16;
      sub_1C2987570(v6, 1);
      sub_1C2987570(v6, 1);
      _os_log_impl(&dword_1C28B6000, v12, v13, "PAC: Failed device unlock with error: %@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79AEF0);
      swift_arrayDestroy();
      MEMORY[0x1C3BC9DE8](v17, -1, -1);
      MEMORY[0x1C3BC9DE8](v14, -1, -1);

      sub_1C2987570(v6, 1);
    }
    else
    {
      sub_1C2987570(v6, 1);
      sub_1C2987570(v6, 1);

    }
  }
  sub_1C2964BEC(v6, v7);
  sub_1C2B631B4((uint64_t)v6, v7);
  v18 = sub_1C2CFBCAC();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 4, v18);
  sub_1C2B6314C();
}

uint64_t sub_1C2B66350()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[16] = v0;
  v1[17] = type metadata accessor for SiriKitEventPayload(0);
  v1[18] = OUTLINED_FUNCTION_1_3();
  v2 = OUTLINED_FUNCTION_70_0();
  v1[19] = v2;
  v1[20] = *(_QWORD *)(v2 - 8);
  v1[21] = swift_task_alloc();
  v1[22] = OUTLINED_FUNCTION_0();
  v1[23] = OUTLINED_FUNCTION_107_0();
  v1[24] = swift_task_alloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B663D4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v1 = (_QWORD *)v0[16];
  v2 = v1[7];
  v3 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v2);
  if (((*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v3 + 24))(v1, v2, v3) & 1) != 0)
  {
    *(_BYTE *)(v0[16] + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_appsRemainInaccessible) = 1;
    if (qword_1EF786CE8 != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_81_16();
    v0[25] = v4;
    v5 = OUTLINED_FUNCTION_81_16();
    v0[26] = v5;
    v6 = (_QWORD *)swift_task_alloc();
    v0[27] = v6;
    OUTLINED_FUNCTION_148(v6, (uint64_t)sub_1C2B66510);
    return sub_1C29C4EEC(18, v4, 0, v5);
  }
  else
  {
    OUTLINED_FUNCTION_45_27();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
    return OUTLINED_FUNCTION_10_5(v8);
  }
}

uint64_t sub_1C2B66510(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 224) = a1;
  *(_QWORD *)(v3 + 232) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_0();
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B66580()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;

  if (qword_1ED7A7FB0 != -1)
    swift_once();
  v26 = (void *)v0[28];
  v1 = (uint64_t *)v0[23];
  v2 = v0[21];
  v3 = (int *)v0[22];
  v23 = v0[20];
  v24 = v0[19];
  v25 = v0[24];
  v5 = qword_1ED7A7FA0;
  v4 = *(_QWORD *)algn_1ED7A7FA8;
  *((_BYTE *)v1 + v3[6]) = 0;
  *((_BYTE *)v1 + v3[7]) = 0;
  v6 = v3[9];
  v22 = v3[8];
  *((_BYTE *)v1 + v3[10]) = 0;
  v7 = (uint64_t)v1 + v3[11];
  type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_4_2();
  v8 = v3[12];
  *(uint64_t *)((char *)v1 + v8) = 0;
  v9 = (uint64_t *)((char *)v1 + v3[13]);
  *v9 = 0;
  v9[1] = 0;
  v10 = (uint64_t *)((char *)v1 + v3[14]);
  *v10 = 0;
  v10[1] = 0;
  *((_BYTE *)v1 + v3[15]) = 0;
  *(uint64_t *)((char *)v1 + v3[17]) = 0;
  v11 = (char *)v1 + v3[18];
  *(_QWORD *)v11 = 0;
  *((_WORD *)v11 + 4) = 512;
  *((_BYTE *)v1 + v3[19]) = 0;
  *((_BYTE *)v1 + v3[20]) = 0;
  *((_BYTE *)v1 + v3[21]) = 0;
  *((_BYTE *)v1 + v3[22]) = 0;
  *((_BYTE *)v1 + v3[23]) = 0;
  v12 = (uint64_t *)((char *)v1 + v3[24]);
  *v12 = 0;
  v12[1] = 0;
  *(uint64_t *)((char *)v1 + v3[25]) = 0;
  *v1 = v5;
  v1[1] = v4;
  v13 = (uint64_t)v1 + v3[5];
  swift_bridgeObjectRetain();
  sub_1C2901F48(v13);
  *((_BYTE *)v1 + v6) = 1;
  *((_BYTE *)v1 + v22) = 0;
  sub_1C28BB37C(v7, &qword_1ED7A7A10);
  OUTLINED_FUNCTION_4_2();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v1 + v8) = 0;
  sub_1C2CFBCA0();
  v14 = sub_1C2CFBC70();
  v16 = v15;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v2, v24);
  v17 = (uint64_t *)((char *)v1 + v3[16]);
  *v17 = v14;
  v17[1] = v16;
  sub_1C28F31CC((uint64_t)v1, v25, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
  v18 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v18 + 16) = xmmword_1C2D00370;
  *(_QWORD *)(v18 + 32) = v26;
  v27 = v18;
  sub_1C2CFDFC8();
  v0[30] = v27;
  v19 = v26;
  v20 = (_QWORD *)swift_task_alloc();
  v0[31] = v20;
  *v20 = v0;
  v20[1] = sub_1C2B667E8;
  return sub_1C2BEF60C((uint64_t)(v0 + 2), v27, v0[24]);
}

uint64_t sub_1C2B667E8()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B66820()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 128) + 152), *(_QWORD *)(*(_QWORD *)(v0 + 128) + 176));
  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 256) = v1;
  v2 = OUTLINED_FUNCTION_63_19(v1, (uint64_t)sub_1C2B66878);
  return OUTLINED_FUNCTION_106(v2, v3, v4, v5);
}

uint64_t sub_1C2B66878()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 264) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B668C4()
{
  NSObject *v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v19;
  uint64_t (*v20)(void);

  OUTLINED_FUNCTION_105();
  if (qword_1ED7AA040 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_23_1(v3, (uint64_t)qword_1ED7AA1B0);
  v4 = OUTLINED_FUNCTION_30();
  if (OUTLINED_FUNCTION_126_0(v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_WORD *)v5 = 0;
    OUTLINED_FUNCTION_56_0(&dword_1C28B6000, v0, v1, "PAC: produceOutputForHiddenAppIfNecessary: showing app not found", v5);
    OUTLINED_FUNCTION_11_0();
  }

  v6 = (_QWORD *)OUTLINED_FUNCTION_194();
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v8 = OUTLINED_FUNCTION_121_10();
  if ((sub_1C28E1AC0(v8) & 1) != 0)
  {
    if (qword_1ED7A84D8 != -1)
      swift_once();
    v9 = *(_QWORD *)(v2 + 144);
    *(_QWORD *)(v2 + 272) = qword_1ED7AA130;
    *(_OWORD *)(v2 + 112) = 0u;
    *(_OWORD *)(v2 + 96) = 0u;
    v10 = *(_QWORD *)(v2 + 40);
    v11 = *(_QWORD *)(v2 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), v10);
    v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    sub_1C2CFD350();
    v12(v10, v11);
    type metadata accessor for SiriKitEvent(0);
    *(_BYTE *)v9 = 119;
    OUTLINED_FUNCTION_58_27();
    *(_QWORD *)(v9 + 8) = v13;
    *(_QWORD *)(v9 + 16) = v14;
    *(_QWORD *)(v9 + 32) = 0;
    *(_QWORD *)(v9 + 40) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    sub_1C2CFD350();
    sub_1C2B69914();
    *(_QWORD *)(v9 + 80) = 0;
    *(_QWORD *)(v9 + 88) = 0;
    sub_1C2B69914();
    *(_OWORD *)(v9 + 136) = 0u;
    *(_OWORD *)(v9 + 152) = 0u;
    *(_OWORD *)(v9 + 168) = 0u;
    *(_BYTE *)(v9 + 184) = 29;
    swift_storeEnumTagMultiPayload();
    SiriKitEvent.__allocating_init(_:builder:)(v9, 0);
    v16 = v15;
    *(_QWORD *)(v2 + 280) = v15;
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 288) = v17;
    *v17 = v2;
    v17[1] = sub_1C2B66AF8;
    return OUTLINED_FUNCTION_25_50(v16);
  }
  else
  {
    v19 = *(void **)(v2 + 224);
    sub_1C28C9F68(*(_QWORD *)(v2 + 192), (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);

    OUTLINED_FUNCTION_353();
    OUTLINED_FUNCTION_45_27();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    v20 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
    return OUTLINED_FUNCTION_19_12(v20);
  }
}

uint64_t sub_1C2B66AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_87_0();
  v1 = v0 + 56;
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_143();
  sub_1C28BB37C(v1, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_40_2(v2, &qword_1ED7A8480);
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B66B6C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_103_14();
  OUTLINED_FUNCTION_43_4(v0, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_116_4();
  OUTLINED_FUNCTION_45_27();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_29_5(v1);
}

uint64_t sub_1C2B66BB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_92_18();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B66C00()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103_14();
  OUTLINED_FUNCTION_43_4(v1, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_116_4();
  OUTLINED_FUNCTION_92_18();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B66C54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2[14] = a1;
  v2[15] = v1;
  type metadata accessor for ProtectedAppCheck.State(0);
  v2[16] = OUTLINED_FUNCTION_1_3();
  v3 = (_QWORD *)swift_task_alloc();
  v2[17] = v3;
  OUTLINED_FUNCTION_148(v3, (uint64_t)sub_1C2B66CA8);
  return sub_1C2B63D34();
}

uint64_t sub_1C2B66CA8()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B66CDC()
{
  unint64_t i;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  BOOL v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  os_log_type_t v54;
  NSObject *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  if (qword_1ED7AA040 != -1)
LABEL_45:
    swift_once();
  v1 = OUTLINED_FUNCTION_118();
  *(_QWORD *)(i + 144) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_26_21();
  v2 = OUTLINED_FUNCTION_153();
  v3 = sub_1C2CFE2A4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(i + 120);
  v56 = i;
  if (v4)
  {
    v54 = v3;
    v55 = v2;
    v6 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v59 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v6 = 136315138;
    v7 = (uint64_t *)(v5 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses);
    OUTLINED_FUNCTION_21_0();
    v8 = *v7;
    v9 = *(_QWORD *)(*v7 + 16);
    v10 = MEMORY[0x1E0DEE9D8];
    if (v9)
    {
      v60 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1C28E990C();
      v10 = v60;
      v11 = v8 + 49;
      do
      {
        ProtectedAppStatus.debugDescription.getter();
        v13 = v12;
        v15 = v14;
        v60 = v10;
        v16 = *(_QWORD *)(v10 + 16);
        if (v16 >= *(_QWORD *)(v10 + 24) >> 1)
        {
          sub_1C28E990C();
          v10 = v60;
        }
        v11 += 24;
        *(_QWORD *)(v10 + 16) = v16 + 1;
        v17 = v10 + 16 * v16;
        *(_QWORD *)(v17 + 32) = v13;
        *(_QWORD *)(v17 + 40) = v15;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(v56 + 96) = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8468);
    sub_1C28EA4F8();
    v18 = sub_1C2CFDD1C();
    v20 = v19;
    OUTLINED_FUNCTION_254();
    *(_QWORD *)(v56 + 104) = sub_1C28BB120(v18, v20, &v59);
    sub_1C2CFE4D8();
    swift_release_n();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v55, v54, "PAC: handleUnlockResponse: statuses=%s", v6);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_82_13();
  v21 = *(_QWORD *)(i + 120) + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses;
  OUTLINED_FUNCTION_21_0();
  if (*(_QWORD *)(*(_QWORD *)v21 + 16))
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_67_20();
    OUTLINED_FUNCTION_18_55();
    __asm { BR              X8 }
  }
  v23 = MEMORY[0x1E0DEE9D8];
  v24 = MEMORY[0x1E0DEE9D8];
  v25 = *(_QWORD *)(i + 120);
  v26 = sub_1C2B621A8(MEMORY[0x1E0DEE9D8]);
  v27 = sub_1C2AB0C80(v26);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v25 + 32), *(_QWORD *)(v25 + 56));
  sub_1C2B621A8(v23);
  swift_release();
  v28 = OUTLINED_FUNCTION_136();
  v30 = v29(v28);
  OUTLINED_FUNCTION_70();
  v58 = *(_QWORD *)(v30 + 16);
  if (v58)
  {
    v31 = 0;
    v57 = v27 + 56;
    v32 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if (v31 >= *(_QWORD *)(v30 + 16))
      {
        __break(1u);
        goto LABEL_45;
      }
      if (*(_QWORD *)(v27 + 16))
      {
        v33 = (uint64_t *)(v30 + 32 + 16 * v31);
        v35 = *v33;
        v34 = v33[1];
        sub_1C2CFEAB4();
        swift_bridgeObjectRetain();
        sub_1C2CFDCF8();
        v36 = sub_1C2CFEAD8();
        i = -1 << *(_BYTE *)(v27 + 32);
        v37 = v36 & ~i;
        if (((*(_QWORD *)(v57 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
        {
          v38 = *(_QWORD *)(v27 + 48);
          v39 = (_QWORD *)(v38 + 16 * v37);
          v40 = *v39 == v35 && v39[1] == v34;
          if (v40 || (OUTLINED_FUNCTION_42_0() & 1) != 0)
          {
LABEL_23:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_15_43();
              v32 = v46;
            }
            i = *(_QWORD *)(v32 + 16);
            if (i >= *(_QWORD *)(v32 + 24) >> 1)
            {
              OUTLINED_FUNCTION_15_43();
              v32 = v47;
            }
            *(_QWORD *)(v32 + 16) = i + 1;
            v41 = v32 + 16 * i;
            *(_QWORD *)(v41 + 32) = v35;
            *(_QWORD *)(v41 + 40) = v34;
            goto LABEL_37;
          }
          v42 = v37 + 1;
          v43 = ~i;
          for (i = v42 & ~i; ((*(_QWORD *)(v57 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v43)
          {
            v44 = (_QWORD *)(v38 + 16 * i);
            v45 = *v44 == v35 && v44[1] == v34;
            if (v45 || (OUTLINED_FUNCTION_42_0() & 1) != 0)
              goto LABEL_23;
          }
        }
        swift_bridgeObjectRelease();
      }
LABEL_37:
      if (++v31 == v58)
      {
        OUTLINED_FUNCTION_254();
        OUTLINED_FUNCTION_8();
        i = v56;
        goto LABEL_40;
      }
    }
  }
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_8();
  v32 = MEMORY[0x1E0DEE9D8];
LABEL_40:
  v48 = *(_QWORD *)(v32 + 16);
  OUTLINED_FUNCTION_70();
  if (v48 && *(_QWORD *)(v24 + 16))
  {
    *(_BYTE *)(*(_QWORD *)(i + 120) + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_appsRemainInaccessible) = 1;
    OUTLINED_FUNCTION_127();
    v49 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(i + 152) = v49;
    *v49 = i;
    v49[1] = sub_1C2B675B0;
    return sub_1C2B66350();
  }
  else
  {
    OUTLINED_FUNCTION_127();
    v51 = OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_7_78(v51);
    v52 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(i + 168) = v52;
    v53 = OUTLINED_FUNCTION_95_20(v52);
    return sub_1C2B677A8(v53);
  }
}

uint64_t sub_1C2B675B0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B675FC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_7_78(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v2;
  v3 = OUTLINED_FUNCTION_95_20(v2);
  return OUTLINED_FUNCTION_59_30(v3);
}

uint64_t sub_1C2B67644()
{
  uint64_t v0;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B67678()
{
  _QWORD *v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_226();
  v3 = v0[18];
  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_195();
  sub_1C2CFD86C();
  v4 = OUTLINED_FUNCTION_123();
  if (OUTLINED_FUNCTION_10_1(v4))
  {
    v5 = v0[20];
    v6 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_115_12(4.8149e-34);
    *(_QWORD *)(v2 + 72) = v5;
    OUTLINED_FUNCTION_195();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    v7 = OUTLINED_FUNCTION_68_23();
    v0[10] = OUTLINED_FUNCTION_83_16(v7, v8, v9);
    OUTLINED_FUNCTION_40_27();
    OUTLINED_FUNCTION_97();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v3, v1, "PAC: Could not produce unlock dialog: %s", v6);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  v10 = OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_7_78(v10);
  v11 = (_QWORD *)swift_task_alloc();
  v0[21] = v11;
  v12 = OUTLINED_FUNCTION_95_20(v11);
  return OUTLINED_FUNCTION_26_50(v12);
}

uint64_t sub_1C2B677A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 216) = a1;
  *(_QWORD *)(v2 + 224) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B677B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  int v30;
  uint64_t v32;
  _BYTE *v33;
  int v34;
  _BYTE *v35;
  NSObject *v36;
  uint64_t v37;
  os_log_type_t v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;

  OUTLINED_FUNCTION_105();
  a19 = v21;
  a20 = v22;
  a18 = v20;
  v23 = *(_QWORD **)(v20 + 224);
  v24 = v23[7];
  v25 = v23[8];
  __swift_project_boxed_opaque_existential_1(v23 + 4, v24);
  v26 = (char *)v23 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses;
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_21_0();
  v27 = *(_QWORD *)v26;
  v28 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v25 + 32);
  swift_bridgeObjectRetain();
  v28(v23, v27, v24, v25);
  swift_bridgeObjectRelease();
  if (*((_BYTE *)v23 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_appsRemainInaccessible) == 1)
  {
    v29 = *(_QWORD *)(v20 + 224);
LABEL_14:
    OUTLINED_FUNCTION_21_0();
    *(_BYTE *)(v29 + 16) = 1;
    goto LABEL_15;
  }
  v29 = *(_QWORD *)(v20 + 224);
  v30 = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult + 8);
  if (v30 != 255 && (v30 & 1) != 0)
    goto LABEL_14;
  v32 = *(_QWORD *)(*(_QWORD *)v26 + 16);
  if (v32)
  {
    v33 = (_BYTE *)(*(_QWORD *)v26 + 48);
    while ((*v33 & 1) == 0)
    {
      v33 += 24;
      if (!--v32)
      {
        v34 = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_noAppsRequireUnlock);
        v35 = (_BYTE *)(v29 + 16);
        if (v34 == 1)
        {
          OUTLINED_FUNCTION_21_0();
          *v35 = 0;
        }
        else
        {
          OUTLINED_FUNCTION_21_0();
          *v35 = 1;
        }
        goto LABEL_15;
      }
    }
  }
  OUTLINED_FUNCTION_21_0();
  *(_BYTE *)(v29 + 16) = 0;
LABEL_15:
  if (qword_1ED7AA040 != -1)
    swift_once();
  v36 = *(NSObject **)(v20 + 224);
  v37 = OUTLINED_FUNCTION_118();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED7AA1B0);
  OUTLINED_FUNCTION_26_21();
  OUTLINED_FUNCTION_153();
  v39 = OUTLINED_FUNCTION_30();
  v40 = OUTLINED_FUNCTION_20_0(v39);
  v41 = *(_QWORD *)(v20 + 224);
  if (v40)
  {
    v42 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    a9 = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v42 = 136315138;
    OUTLINED_FUNCTION_21_0();
    if (*(_BYTE *)(v41 + 16))
      v43 = 1818845542;
    else
      v43 = 1936941424;
    *(_QWORD *)(v20 + 208) = sub_1C28BB120(v43, 0xE400000000000000, &a9);
    OUTLINED_FUNCTION_78_3();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_82_13();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v36, v38, "PAC: Exiting flow with exitValue: %s", v42);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_82_13();

  static ExecuteResponse.complete()();
  return OUTLINED_FUNCTION_11_10(*(uint64_t (**)(void))(v20 + 8));
}

uint64_t ProtectedAppCheck.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  sub_1C28BB37C(v0 + 72, &qword_1EF78A5B8);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  swift_release();
  sub_1C28C9F68(v0 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_state, type metadata accessor for ProtectedAppCheck.State);
  sub_1C29E32A4(*(void **)(v0 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult), *(_BYTE *)(v0 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult + 8));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProtectedAppCheck.__deallocating_deinit()
{
  ProtectedAppCheck.deinit();
  return swift_deallocClassInstance();
}

void sub_1C2B67B3C(uint64_t a1)
{
  sub_1C2B635A0(a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B67B5C()
{
  return sub_1C2B639F0();
}

uint64_t sub_1C2B67B7C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_10_0(v1);
  return sub_1C2B639F4(v2);
}

void sub_1C2B67BC4(_BYTE *a1@<X8>)
{
  *a1 = sub_1C2A4067C();
  OUTLINED_FUNCTION_1_0();
}

uint64_t ProtectedAppCheckClient.loggingDescription.getter()
{
  sub_1C2CFE9B8();
  return 0;
}

uint64_t sub_1C2B67C34@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = &unk_1EF79AF50;
  a2[1] = v5;
  return sub_1C2CFD350();
}

uint64_t sub_1C2B67C84(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v5 = *a2;
  v6 = a2[1];
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a3 + *a3);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28F5008;
  return v9(a1, v5, v6);
}

uint64_t sub_1C2B67CFC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  sub_1C2CFD350();
  result = swift_release();
  *a2 = &unk_1EF79AF40;
  a2[1] = v5;
  return result;
}

uint64_t sub_1C2B67D60(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int *v8;

  v4[2] = a2;
  v4[3] = a3;
  v8 = (int *)((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_1C292B794;
  return ((uint64_t (*)(uint64_t, _QWORD *))v8)(a1, v4 + 2);
}

void CustomProtectedAppCheckClient.status.getter()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

void CustomProtectedAppCheckClient.status.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_release();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_18();
}

uint64_t (*CustomProtectedAppCheckClient.status.modify())(_QWORD)
{
  return nullsub_1;
}

void CustomProtectedAppCheckClient.init(status:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_66_16();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v0;
  *v3 = &unk_1EF79AB20;
  v3[1] = v4;
  v3[2] = 0x6D6F74737543;
  v3[3] = 0xE600000000000000;
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2B67E88(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;

  a4(a2, a3);
  return sub_1C2B69A24(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t CustomProtectedAppCheckClient.status(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v7 = OUTLINED_FUNCTION_12_0();
  v8 = (_QWORD *)OUTLINED_FUNCTION_86(v7);
  *v8 = v3;
  v8[1] = sub_1C28F5008;
  return v10(a1, a2, a3);
}

void CustomProtectedAppCheckClient.loggingDescription.getter()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B67F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28F5008;
  return CustomProtectedAppCheckClient.status(for:)(a1, a2, a3);
}

uint64_t sub_1C2B67FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B67FD8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  id v9;
  unsigned __int8 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  OUTLINED_FUNCTION_12();
  v2 = OUTLINED_FUNCTION_194();
  v4 = OUTLINED_FUNCTION_114_13(v2, v3);
  *(_QWORD *)(v0 + 48) = v4;
  if (v1)
  {

LABEL_3:
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)v6 = *(_QWORD *)(v0 + 24);
LABEL_4:
    *(_QWORD *)(v6 + 8) = v5;
    *(_WORD *)(v6 + 16) = 0;
    OUTLINED_FUNCTION_33_0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = v4;
  if (!v4)
    goto LABEL_3;
  v9 = objc_msgSend(v4, sel_applicationState);
  v10 = objc_msgSend(v9, sel_isInstalled);

  if ((v10 & 1) == 0)
  {
    v15 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 16);

    *(_QWORD *)v6 = v15;
    goto LABEL_4;
  }
  v11 = *(_QWORD **)(v0 + 40);
  v12 = v11[3];
  v13 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v16 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v13 + 8) + *(_QWORD *)(v13 + 8));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v14;
  *v14 = v0;
  v14[1] = sub_1C2B68118;
  return v16(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v12, v13);
}

uint64_t sub_1C2B68118()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6814C()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_1C2B68174()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t sub_1C2B68214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28F5008;
  return sub_1C2B67FBC(a1, a2, a3);
}

uint64_t sub_1C2B68280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B6829C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(void);

  v1 = v0[4];
  v2 = v0[2];
  *(_QWORD *)v2 = v0[3];
  *(_QWORD *)(v2 + 8) = v1;
  *(_WORD *)(v2 + 16) = 769;
  v4 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_24(v4);
}

uint64_t sub_1C2B682DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28F5008;
  return sub_1C2B68280(a1, a2, a3);
}

uint64_t sub_1C2B68358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  v4 = sub_1C2CFCDC8();
  v3[20] = v4;
  v3[21] = *(_QWORD *)(v4 - 8);
  v3[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2B683BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 104))(*(_QWORD *)(v0 + 176), *MEMORY[0x1E0CF9620], *(_QWORD *)(v0 + 160));
  v1 = sub_1C2CFCDBC();
  v2 = OUTLINED_FUNCTION_71_0();
  v3(v2);
  if ((v1 & 1) == 0)
  {
LABEL_7:
    v9 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 136);
    *(_QWORD *)v11 = *(_QWORD *)(v0 + 144);
    v13 = 3;
    v12 = 1;
    goto LABEL_8;
  }
  v4 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_194();
  v5 = (void *)sub_1C2CFDD34();
  v6 = objc_msgSend(v4, sel_applicationWithBundleIdentifier_, v5);
  *(_QWORD *)(v0 + 184) = v6;

  v8 = OUTLINED_FUNCTION_225_0(v7, sel_isHidden);
  if (!(_DWORD)v8)
  {
    if (OUTLINED_FUNCTION_225_0((uint64_t)v8, sel_isLocked))
    {
      v14 = objc_msgSend((id)objc_opt_self(), sel_sharedGuard);
      *(_QWORD *)(v0 + 192) = v14;
      *(_QWORD *)(v0 + 56) = v0 + 120;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1C2B68578;
      v15 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
      v16 = (_QWORD *)(v0 + 80);
      v16[1] = 0x40000000;
      v16[2] = sub_1C2B687C8;
      v16[3] = &block_descriptor_8;
      v16[4] = v15;
      objc_msgSend(v14, sel_getIsChallengeCurrentlyRequiredForSubject_completion_, v6, v16);
      return swift_continuation_await();
    }

    goto LABEL_7;
  }
  v10 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 136);

  v12 = 0;
  *(_QWORD *)v11 = v10;
  v13 = 1;
LABEL_8:
  *(_QWORD *)(v11 + 8) = v9;
  *(_BYTE *)(v11 + 16) = v12;
  *(_BYTE *)(v11 + 17) = v13;
  OUTLINED_FUNCTION_80_14();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B68578()
{
  uint64_t v0;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B685C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(void **)(v1 + 184);
  v2 = *(void **)(v1 + 192);
  v4 = *(void **)(v1 + 120);
  v5 = OUTLINED_FUNCTION_225_0(a1, sel_BOOLValue);

  v6 = *(_QWORD *)(v1 + 152);
  v7 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)v7 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v7 + 8) = v6;
  *(_BYTE *)(v7 + 17) = 2;
  *(_BYTE *)(v7 + 16) = v5 ^ 1;
  OUTLINED_FUNCTION_80_14();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C2B6862C()
{
  uint64_t v0;
  os_log_type_t v1;
  void *v2;
  NSObject *v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(void **)(v0 + 192);
  swift_willThrow();

  if (qword_1ED7AA040 != -1)
    swift_once();
  v3 = *(NSObject **)(v0 + 200);
  v4 = OUTLINED_FUNCTION_118();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED7AA1B0);
  v5 = v3;
  v6 = v3;
  OUTLINED_FUNCTION_153();
  v7 = OUTLINED_FUNCTION_123();
  v8 = OUTLINED_FUNCTION_10_1(v7);
  v9 = *(void **)(v0 + 184);
  if (v8)
  {
    v10 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v11 = (_QWORD *)OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v10 = 138412290;
    OUTLINED_FUNCTION_195();
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 128) = v12;
    sub_1C2CFE4D8();
    *v11 = v12;
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_44_5();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v3, v1, "PAC: Error during getIsChallengeCurrentlyRequired: %@", v10);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79AEF0);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();
  OUTLINED_FUNCTION_44_5();

  v13 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)v14 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v14 + 8) = v13;
  *(_WORD *)(v14 + 16) = 513;
  OUTLINED_FUNCTION_80_14();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_37(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B687C8(uint64_t result, void *a2, void *a3)
{
  id v3;

  if (a3)
  {
    v3 = a3;
    return sub_1C292A5A8();
  }
  else if (a2)
  {
    return sub_1C2920A20(*(_QWORD *)(result + 32), (uint64_t)a2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2B68818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C28F5008;
  return sub_1C2B68358(a1, a2, a3);
}

void sub_1C2B68894(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 32) = &type metadata for FeatureFlagDefinitions.Core;
  *(_QWORD *)(a1 + 40) = &off_1E7C83240;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1C2B688B4(uint64_t a1@<X8>)
{
  sub_1C2B68894(a1);
}

id sub_1C2B688C8(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1C2CFDD34();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1C2CFBAFC();

    swift_willThrow();
  }
  return v6;
}

uint64_t type metadata accessor for ProtectedAppCheck(uint64_t a1)
{
  return sub_1C28B9018(a1, (uint64_t *)&unk_1EF79ABB8);
}

uint64_t type metadata accessor for ProtectedAppCheck.State(uint64_t a1)
{
  return sub_1C28B9018(a1, (uint64_t *)&unk_1EF79AEB8);
}

uint64_t sub_1C2B689C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_132_9();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_41_33(v1);
  return OUTLINED_FUNCTION_42_31(v2, v3, v4, v5, v6, v7);
}

unint64_t sub_1C2B68A14()
{
  unint64_t result;

  result = qword_1EF79AB30;
  if (!qword_1EF79AB30)
  {
    result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for ProtectedAppStatus.AppState, &type metadata for ProtectedAppStatus.AppState);
    atomic_store(result, (unint64_t *)&qword_1EF79AB30);
  }
  return result;
}

void sub_1C2B68A50(uint64_t a1)
{
  uint64_t v2;

  sub_1C28C3328(&qword_1EF79AB38, type metadata accessor for ProtectedAppCheck, (uint64_t)&protocol conformance descriptor for ProtectedAppCheck);
  *(_QWORD *)(a1 + 16) = v2;
}

void sub_1C2B68A8C(_BYTE *a1@<X8>)
{
  *a1 = sub_1C2A4067C();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B68AB0(char *a1)
{
  sub_1C2B62ED8(*a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheck(_:appsToBeUnlocked:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheck(_:appsToIncludeInLockedAppDialog:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheckShouldProduceOutputForHiddenApps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheck(_:didProduce:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheck(_:needsAppNameForAppID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

void sub_1C2B68B04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1_0();
}

uint64_t assignWithCopy for ProtectedAppStatus(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ProtectedAppStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProtectedAppStatus(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 18))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProtectedAppStatus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ProtectedAppStatus()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t storeEnumTagSinglePayload for ProtectedAppStatus.AppState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C2B68CC0 + 4 * byte_1C2D16BCA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C2B68CF4 + 4 * byte_1C2D16BC5[v4]))();
}

uint64_t sub_1C2B68CF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B68CFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C2B68D04);
  return result;
}

uint64_t sub_1C2B68D10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C2B68D18);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C2B68D1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C2B68D24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ProtectedAppStatus.AppState()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t sub_1C2B68D3C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ProtectedAppCheck.State(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ProtectedAppCheck()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProtectedAppCheck.exitValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))() & 1;
}

uint64_t dispatch thunk of ProtectedAppCheck.__allocating_init(appIDs:strategy:client:deviceState:outputPublisher:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of ProtectedAppCheck.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ProtectedAppCheck.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ProtectedAppCheck.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_10_0(v1);
  return v4(v2);
}

uint64_t dispatch thunk of ProtectedAppCheckClient.status(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = OUTLINED_FUNCTION_12_0();
  v12 = (_QWORD *)OUTLINED_FUNCTION_86(v11);
  *v12 = v5;
  v12[1] = sub_1C28F5008;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ProtectedAppCheckClient.loggingDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t destroy for CustomProtectedAppCheckClient()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CustomProtectedAppCheckClient(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1C2CFD350();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CustomProtectedAppCheckClient(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  sub_1C2CFD350();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CustomProtectedAppCheckClient(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomProtectedAppCheckClient(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomProtectedAppCheckClient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CustomProtectedAppCheckClient()
{
  OUTLINED_FUNCTION_22_2();
}

uint64_t type metadata accessor for ProtectedAppDeviceUnlockStrategy()
{
  return objc_opt_self();
}

uint64_t *sub_1C2B690E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    sub_1C2CFD350();
  }
  else
  {
    v7 = sub_1C2CFBCAC();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 4, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_1C2B69198(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1C2CFBCAC();
  result = __swift_getEnumTagSinglePayload(a1, 4, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *sub_1C2B691F0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C2CFBCAC();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v6);
  }
  return a1;
}

void *sub_1C2B69284(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;

  v6 = sub_1C2CFBCAC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 4, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 4, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v6);
  return a1;
}

void *sub_1C2B69368(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C2CFBCAC();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v6);
  }
  return a1;
}

void *sub_1C2B693FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;

  v6 = sub_1C2CFBCAC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 4, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 4, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v6);
  return a1;
}

uint64_t sub_1C2B694E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C2B694EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_70_0();
  __swift_getEnumTagSinglePayload(a1, a2, v4);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B69528()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C2B69534(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 4);
  else
    v5 = 0;
  v6 = OUTLINED_FUNCTION_70_0();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1C2B6957C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C2CFBCAC();
  return __swift_getEnumTagSinglePayload(a1, 4, v2);
}

uint64_t sub_1C2B695AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C2CFBCAC();
  return __swift_storeEnumTagSinglePayload(a1, a2, 4, v4);
}

uint64_t sub_1C2B695E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C2CFBCAC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnconditionalSuccessClient()
{
  return &type metadata for UnconditionalSuccessClient;
}

void type metadata accessor for EmptyProtectedAppCheckStrategy()
{
  OUTLINED_FUNCTION_22_2();
}

void _s11SiriKitFlow26UnconditionalSuccessClientVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_1_0();
}

ValueMetadata *type metadata accessor for AppProtectionFrameworkClient()
{
  return &type metadata for AppProtectionFrameworkClient;
}

ValueMetadata *type metadata accessor for AppInstallationCheckingClient()
{
  return &type metadata for AppInstallationCheckingClient;
}

void sub_1C2B696B0(uint64_t a1, void *a2, SEL *a3)
{
  id v5;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EF787BB0);
  v5 = (id)sub_1C2CFDF98();
  OUTLINED_FUNCTION_70();
  objc_msgSend(a2, *a3, v5);

}

void sub_1C2B69718(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C2CFDD34();
  objc_msgSend(a3, sel_setAppBundleId_, v4);

}

uint64_t sub_1C2B6975C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  v7 = sub_1C2CFBCAC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2CFBCA0();
  sub_1C2CFBC70();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_1C28FF700(8);
  *(_QWORD *)(a4 + 120) = v12;
  *(_QWORD *)(a4 + 128) = v13;
  *(_QWORD *)(a4 + 136) = v14;
  *(_QWORD *)(a4 + 144) = v15;
  v16 = sub_1C2CFD350();
  sub_1C2C71ED4(v16);
  *(_QWORD *)(a4 + 32) = v17;
  sub_1C28B9A48(a2, a4 + 40);
  sub_1C28B9A48(a3, a4 + 80);
  type metadata accessor for CommandFailure();
  swift_allocObject();
  v18 = CommandFailure.init(errorCode:reason:)(-1, 0x656C706D6F636E49, 0xEA00000000006574);
  sub_1C28C3328((unint64_t *)&qword_1EF79AF10, (uint64_t (*)(uint64_t))type metadata accessor for CommandFailure, (uint64_t)&protocol conformance descriptor for CommandFailure);
  v19 = swift_allocError();
  *v20 = v18;
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_release();
  *(_QWORD *)(a4 + 16) = v19;
  *(_BYTE *)(a4 + 24) = 1;
  type metadata accessor for UnlockDeviceFlowAsync.State(0);
  swift_storeEnumTagMultiPayload();
  return a4;
}

void sub_1C2B6990C(uint64_t a1)
{
  sub_1C2B660E8(a1);
}

void sub_1C2B69914()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_66_16();
  v1 = __swift_instantiateConcreteTypeFromMangledName(v0);
  OUTLINED_FUNCTION_59(v1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B6993C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B69960()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_132_9();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_41_33(v1);
  return OUTLINED_FUNCTION_42_31(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C2B699A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(int **)(v2 + 16);
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_86(v7);
  *v8 = v3;
  v8[1] = sub_1C28F5008;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_1EF79AF48 + dword_1EF79AF48))(a1, a2, v6);
}

uint64_t sub_1C2B69A24(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C2B69A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ProtectedAppCheck.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_7_78(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 4, 4, a1);
  sub_1C2B6314C();
}

uint64_t OUTLINED_FUNCTION_18_55()
{
  return 0x6C6174736E696E75;
}

uint64_t OUTLINED_FUNCTION_25_50(uint64_t a1)
{
  return sub_1C28E1C24(a1);
}

uint64_t OUTLINED_FUNCTION_26_50(uint64_t a1)
{
  return sub_1C2B677A8(a1);
}

uint64_t OUTLINED_FUNCTION_27_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_39_32()
{
  return 0x6C616D726F6ELL;
}

uint64_t OUTLINED_FUNCTION_40_27()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_41_33(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_45_27()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_59_30(uint64_t a1)
{
  return sub_1C2B677A8(a1);
}

uint64_t OUTLINED_FUNCTION_63_19@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_80_14()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_83_16(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_1C28BB120(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_84_18()
{
  return 0x64656B636F6CLL;
}

uint64_t OUTLINED_FUNCTION_85_16()
{
  return 0x6E6564646968;
}

void OUTLINED_FUNCTION_91_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(a1, a2, 4, v2);
  sub_1C2B6314C();
}

uint64_t OUTLINED_FUNCTION_92_18()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_94_17(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 40);
}

uint64_t OUTLINED_FUNCTION_95_20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 112);
}

uint64_t OUTLINED_FUNCTION_96_14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 168);
}

uint64_t OUTLINED_FUNCTION_98_13(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 304) = result;
  return result;
}

_QWORD *OUTLINED_FUNCTION_101_15@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

void OUTLINED_FUNCTION_103_14()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_111_12()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_114_13(uint64_t a1, uint64_t a2)
{
  return sub_1C2B688C8(a1, a2, 0);
}

void OUTLINED_FUNCTION_115_12(float a1)
{
  float *v1;

  *v1 = a1;
}

char *OUTLINED_FUNCTION_120_11@<X0>(int *a1@<X8>)
{
  return (char *)a1 + *a1;
}

uint64_t OUTLINED_FUNCTION_121_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_131_10(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_1C28BB120(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_134_9()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_139_8(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  void *v4;

  sub_1C2B696B0(v3, v4, a3);
}

void OUTLINED_FUNCTION_145_6()
{
  sub_1C2B06780();
}

uint64_t OUTLINED_FUNCTION_150_5()
{
  return sub_1C2CFDE54();
}

uint64_t OUTLINED_FUNCTION_151_5()
{
  return sub_1C2CFDFC8();
}

uint64_t dispatch thunk of ProtectedAppCheckClientOverridable.protectedAppClientOverride.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProtectedAppCheckClientOverridable.protectedAppClientOverride.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ProtectedAppCheckClientOverridable.protectedAppClientOverride.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t ProtoJsonCoder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ProtoJsonCoder.init()()
{
  uint64_t v0;

  return v0;
}

void sub_1C2B69D64(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0xD00000000000002ELL;
  *(_QWORD *)(a1 + 8) = 0x80000001C2D355E0;
  *(_BYTE *)(a1 + 16) = 1;
}

uint64_t ProtoJsonCoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ProtoJsonCoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1C2B69DA4(uint64_t a1@<X8>)
{
  sub_1C2B69D64(a1);
}

uint64_t type metadata accessor for ProtoJsonCoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for ProtoJsonCoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProtoJsonCoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ProtoJsonCoder.toJsonDictionary(data:typeName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t ProtoJsonCoding.makeSlotDescriptionForEncoding(parameterName:intentSlotDescription:selectionItem:typeNamesByValueType:)(uint64_t a1, uint64_t a2, uint64_t a3, id a4, void *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t inited;
  uint64_t v24;
  id v25;
  void *v26;
  int v27;
  uint64_t v28;
  id v29;
  __CFString *v30;
  __CFString *v31;
  __CFString *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD v68[2];

  v7 = v6;
  v63 = a5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v14 = MEMORY[0x1E0C80A78](v12, v13);
  v62 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14, v16);
  v61 = (uint64_t)&v60 - v18;
  v19 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v17, v20);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A61A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2D002E0;
  *(_QWORD *)(inited + 32) = 1701667182;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v60 = a1;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  OUTLINED_FUNCTION_57_1();
  v24 = sub_1C2CFDC8C();
  if (a4)
  {
    v25 = objc_msgSend(a4, sel_value);
    if (v25)
    {
      v26 = v25;
      a4 = objc_msgSend(v25, sel_type);

      v27 = 0;
      goto LABEL_6;
    }
    a4 = 0;
  }
  v27 = 1;
LABEL_6:
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v7, a6);
  if (v27)
  {
    v29 = OUTLINED_FUNCTION_73_1(v28, sel_valueType);
    a4 = (id)sub_1C2B6A8C4((uint64_t)v29);
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, a6);
  switch((int)a4)
  {
    case 1:
      v30 = CFSTR("String");
      goto LABEL_53;
    case 2:
      v30 = CFSTR("Double");
      goto LABEL_53;
    case 3:
      v30 = CFSTR("Integer");
      goto LABEL_53;
    case 4:
      v30 = CFSTR("Contact");
      goto LABEL_53;
    case 5:
      v30 = CFSTR("DateTimeRange");
      goto LABEL_53;
    case 6:
      v30 = CFSTR("Location");
      goto LABEL_53;
    case 7:
      v30 = CFSTR("DataString");
      goto LABEL_53;
    case 8:
      v30 = CFSTR("Long");
      goto LABEL_53;
    case 9:
      v30 = CFSTR("PaymentMethod");
      goto LABEL_53;
    case 10:
      v30 = CFSTR("Temperature");
      goto LABEL_53;
    case 11:
      v30 = CFSTR("Distance");
      goto LABEL_53;
    case 12:
      v30 = CFSTR("FinancialAccount");
      goto LABEL_53;
    case 13:
      v30 = CFSTR("BillType");
      goto LABEL_53;
    case 14:
      v30 = CFSTR("Mass");
      goto LABEL_53;
    case 15:
      v30 = CFSTR("Volume");
      goto LABEL_53;
    case 16:
      v30 = CFSTR("Speed");
      goto LABEL_53;
    case 17:
      v30 = CFSTR("Energy");
      goto LABEL_53;
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
LABEL_14:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown: %i)"), a4);
      v30 = (__CFString *)objc_claimAutoreleasedReturnValue();
      goto LABEL_54;
    case 50:
      v30 = CFSTR("StringList");
      goto LABEL_53;
    case 51:
      v30 = CFSTR("DoubleList");
      goto LABEL_53;
    case 52:
      v30 = CFSTR("IntegerList");
      goto LABEL_53;
    case 53:
      v30 = CFSTR("ContactList");
      goto LABEL_53;
    case 54:
      v30 = CFSTR("DateTimeRangeList");
      goto LABEL_53;
    case 55:
      v30 = CFSTR("LocationList");
      goto LABEL_53;
    case 56:
      v30 = CFSTR("DataStringList");
      goto LABEL_53;
    case 57:
      v30 = CFSTR("LongList");
      goto LABEL_53;
    case 58:
      v30 = CFSTR("PaymentMethodList");
      goto LABEL_53;
    case 59:
      v30 = CFSTR("TemperatureList");
      goto LABEL_53;
    case 60:
      v30 = CFSTR("DistanceList");
      goto LABEL_53;
    default:
      switch((int)a4)
      {
        case 'd':
          v30 = CFSTR("PrimitiveBool");
          break;
        case 'e':
          v30 = CFSTR("PrimitiveInt");
          break;
        case 'f':
          v30 = CFSTR("PrimitiveLong");
          break;
        case 'g':
          v30 = CFSTR("PrimitiveDouble");
          break;
        case 'h':
          v30 = CFSTR("PrimitiveString");
          break;
        case 'i':
          v30 = CFSTR("DateTime");
          break;
        case 'j':
          goto LABEL_14;
        case 'k':
          v30 = CFSTR("Intent");
          break;
        case 'l':
          v30 = CFSTR("ModifyRelationship");
          break;
        case 'm':
          v30 = CFSTR("ModifyNickname");
          break;
        case 'n':
          v30 = CFSTR("CalendarEvent");
          break;
        case 'o':
          v30 = CFSTR("EventParticipant");
          break;
        case 'p':
          v30 = CFSTR("EventAttribute");
          break;
        default:
          if ((_DWORD)a4 != 1000)
            goto LABEL_14;
          v30 = CFSTR("Extension");
          break;
      }
LABEL_53:
      v31 = v30;
LABEL_54:
      v32 = v30;
      v33 = sub_1C2CFDD58();
      v35 = v34;

      swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v64 = v24;
      sub_1C2AFFE18(v33, v35, 0x70795465756C6176, 0xE900000000000065);
      v36 = OUTLINED_FUNCTION_5_75();
      if ((_DWORD)a4 == 1000)
      {
        v37 = OUTLINED_FUNCTION_73_1(v36, (const char *)&selRef_setCatId_);
        sub_1C28C182C((uint64_t)v37, (uint64_t)v63);
        if (!v39)
        {
          *(_QWORD *)&v64 = 0;
          *((_QWORD *)&v64 + 1) = 0xE000000000000000;
          sub_1C2CFE670();
          OUTLINED_FUNCTION_19_34();
          sub_1C2CFDE54();
          v45 = OUTLINED_FUNCTION_19_34();
          *(_QWORD *)&v68[0] = OUTLINED_FUNCTION_73_1(v45, (const char *)&selRef_setCatId_);
          sub_1C2CFE988();
          sub_1C2CFDE54();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_19_34();
          v46 = v64;
          if (qword_1ED7AA040 != -1)
            swift_once();
          v47 = sub_1C2CFD878();
          v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1ED7AA1B0);
          v49 = *(_QWORD *)(v47 - 8);
          v50 = v61;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v61, v48, v47);
          __swift_storeEnumTagSinglePayload(v50, 0, 1, v47);
          v51 = v50;
          v52 = v62;
          sub_1C294E19C(v51, v62);
          if (__swift_getEnumTagSinglePayload(v52, 1, v47) == 1)
          {
            sub_1C28BA958(v62, &qword_1ED7A9EC0);
          }
          else
          {
            swift_bridgeObjectRetain_n();
            v53 = sub_1C2CFD86C();
            v54 = sub_1C2CFE2B0();
            if (os_log_type_enabled(v53, v54))
            {
              v55 = swift_slowAlloc();
              v63 = (void *)swift_slowAlloc();
              *(_QWORD *)&v64 = v63;
              *(_DWORD *)v55 = 136315650;
              v56 = sub_1C2CFE694();
              *(_QWORD *)&v68[0] = sub_1C28BB120(v56, v57, (uint64_t *)&v64);
              OUTLINED_FUNCTION_1_72();
              swift_bridgeObjectRelease();
              *(_WORD *)(v55 + 12) = 2048;
              *(_QWORD *)&v68[0] = 28;
              sub_1C2CFE4D8();
              *(_WORD *)(v55 + 22) = 2080;
              OUTLINED_FUNCTION_57_1();
              *(_QWORD *)&v68[0] = sub_1C28BB120(v46, *((unint64_t *)&v46 + 1), (uint64_t *)&v64);
              OUTLINED_FUNCTION_1_72();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1C28B6000, v53, v54, "FatalError at %s:%lu - %s", (uint8_t *)v55, 0x20u);
              swift_arrayDestroy();
              OUTLINED_FUNCTION_11_0();
            }
            swift_bridgeObjectRelease_n();

            (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v62, v47);
          }
          if (qword_1ED7A84D8 != -1)
            swift_once();
          memset(v68, 0, sizeof(v68));
          v66 = 0;
          v64 = 0u;
          v65 = 0u;
          OUTLINED_FUNCTION_57_1();
          v58 = sub_1C2CFD350();
          LOBYTE(v59) = 44;
          sub_1C2AFA880(v58, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)v68, 0, 0, (uint64_t)&v64, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, v46, *((uint64_t *)&v46 + 1), v59, v60,
            v61,
            v62,
            v63,
            v64,
            *((uint64_t *)&v64 + 1),
            v65,
            *((uint64_t *)&v65 + 1),
            v66,
            v67,
            *(uint64_t *)&v68[0],
            SBYTE8(v68[0]));
          swift_bridgeObjectRelease();
          sub_1C28BA958((uint64_t)&v64, (uint64_t *)&unk_1ED7A8750);
          sub_1C28BA958((uint64_t)v68, &qword_1ED7A8480);
          swift_release();
          sub_1C2CFE7FC();
          __break(1u);
          JUMPOUT(0x1C2B6A7A0);
        }
        v40 = v38;
        v41 = v39;
        swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v64 = v32;
        sub_1C2AFFE18(v40, v41, 0xD000000000000021, 0x80000001C2D35780);
        OUTLINED_FUNCTION_5_75();
      }
      sub_1C290C630((uint64_t)v32);
      v43 = v42;
      swift_bridgeObjectRelease();
      return v43;
  }
}

uint64_t sub_1C2B6A8C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 - 10;
  result = 1;
  switch(v1)
  {
    case 0:
      result = 4;
      break;
    case 2:
      result = 7;
      break;
    case 4:
      result = 105;
      break;
    case 6:
      result = 5;
      break;
    case 11:
      result = 2;
      break;
    case 14:
      result = 3;
      break;
    case 16:
      result = 8;
      break;
    case 17:
      result = 6;
      break;
    case 20:
      return result;
    case 22:
      result = 10;
      break;
    default:
      result = 1000;
      break;
  }
  return result;
}

uint64_t ProtoJsonCoding.makeSelectionItemForEncoding(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(a3 + 8))(a1, 0xD00000000000001CLL, 0x80000001C2D357B0, a2, a3);
}

uint64_t ProtoJsonCoding.makeIntentForEncoding(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = objc_msgSend(a1, sel_backingStore);
  v7 = objc_msgSend(a1, sel_typeName);
  v8 = sub_1C2CFDD58();
  v10 = v9;

  (*(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8))(v6, v8, v10, a2, a3);
  return swift_bridgeObjectRelease();
}

void ProtoJsonCoding.makeIntentResponseForEncoding(_:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD v20[2];
  char v21;

  if (!a1)
    goto LABEL_9;
  v7 = a1;
  v8 = objc_msgSend(v7, sel__payloadResponseMessageData);
  if (!v8)
  {

LABEL_9:
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    *(_BYTE *)(a4 + 16) = 0;
    return;
  }
  v9 = v8;
  v10 = sub_1C2CFBBD4();
  v12 = v11;

  v13 = objc_msgSend(v7, sel__payloadResponseTypeName);
  if (v13)
  {
    v14 = v13;
    v15 = sub_1C2CFDD58();
    v17 = v16;

    (*(void (**)(_QWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 16))(v20, v10, v12, v15, v17, a2, a3);
    swift_bridgeObjectRelease();
    v18 = v21;
    if (v21)
      v19 = v20[1];
    else
      v19 = 0;
    *(_QWORD *)a4 = v20[0];
    *(_QWORD *)(a4 + 8) = v19;
    *(_BYTE *)(a4 + 16) = v18;
    sub_1C2B6AB74();
    sub_1C28C516C(v10, v12);

    sub_1C2B6AB80();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C2B6AB74()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2B6AB80()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_72()
{
  return sub_1C2CFE4D8();
}

uint64_t OUTLINED_FUNCTION_5_75()
{
  return swift_bridgeObjectRelease();
}

uint64_t ProtoJsonCoding.toJsonDictionary(pbObject:typeName:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v12 = MEMORY[0x1E0C80A78](v10, v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)&v35 - v16;
  v18 = objc_msgSend(a1, sel_data);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1C2CFBBD4();
    v22 = v21;

    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16))(v20, v22, a2, a3, a4, a5);
    return sub_1C28C516C(v20, v22);
  }
  else
  {
    *(_QWORD *)&v37 = 0;
    *((_QWORD *)&v37 + 1) = 0xE000000000000000;
    sub_1C2CFE670();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v37 = 0xD000000000000028;
    *((_QWORD *)&v37 + 1) = 0x80000001C2D359C0;
    sub_1C2CFDE54();
    v24 = *((_QWORD *)&v37 + 1);
    v36 = v37;
    if (qword_1ED7AA040 != -1)
      swift_once();
    v25 = sub_1C2CFD878();
    v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED7AA1B0);
    v27 = *(_QWORD *)(v25 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v17, v26, v25);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v25);
    sub_1C294E19C((uint64_t)v17, (uint64_t)v14);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v25) == 1)
    {
      sub_1C28BA958((uint64_t)v14, &qword_1ED7A9EC0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v28 = sub_1C2CFD86C();
      v29 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        *(_QWORD *)&v37 = v35;
        *(_DWORD *)v30 = 136315650;
        v31 = sub_1C2CFE694();
        *(_QWORD *)&v41 = sub_1C28BB120(v31, v32, (uint64_t *)&v37);
        OUTLINED_FUNCTION_0_83();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2048;
        *(_QWORD *)&v41 = 62;
        sub_1C2CFE4D8();
        *(_WORD *)(v30 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v41 = sub_1C28BB120(v36, v24, (uint64_t *)&v37);
        OUTLINED_FUNCTION_0_83();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C28B6000, v28, v29, "FatalError at %s:%lu - %s", (uint8_t *)v30, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v25);
    }
    if (qword_1ED7A84D8 != -1)
      swift_once();
    v41 = 0u;
    v42 = 0u;
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    swift_bridgeObjectRetain();
    v33 = sub_1C2CFD350();
    LOBYTE(v34) = 44;
    sub_1C2AFA880(v33, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)&v41, 0, 0, (uint64_t)&v37, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, v36, v24, v34, v35,
      v36,
      v37,
      *((void **)&v37 + 1),
      v38,
      *((uint64_t *)&v38 + 1),
      v39,
      v40,
      v41,
      *((uint64_t *)&v41 + 1),
      v42,
      SBYTE8(v42));
    swift_bridgeObjectRelease();
    sub_1C28BA958((uint64_t)&v37, (uint64_t *)&unk_1ED7A8750);
    sub_1C28BA958((uint64_t)&v41, &qword_1ED7A8480);
    swift_release();
    result = sub_1C2CFE7FC();
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtoJsonEncodingError()
{
  return &type metadata for ProtoJsonEncodingError;
}

uint64_t dispatch thunk of ProtoJsonCoding.toJsonDictionary(pbObject:typeName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ProtoJsonCoding.toJsonDictionary(data:typeName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t OUTLINED_FUNCTION_0_83()
{
  return sub_1C2CFE4D8();
}

void ReactiveFlowPlan.pushIfNil<A>(flowProducer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, v6);
  v18[0] = a1;
  v18[1] = a2;
  v16 = type metadata accessor for OptionalFlowMappingModifier(0, a3, a4, a5);
  v17 = MEMORY[0x1C3BC9CD4](&unk_1C2D170DC, v16);
  sub_1C2ADB6B8((uint64_t)v14, (uint64_t)v18, a3, v16, v17, a6);
  sub_1C2CFD350();
  OUTLINED_FUNCTION_11();
}

uint64_t type metadata accessor for OptionalFlowMappingModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalFlowMappingModifier);
}

void sub_1C2B6B168(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for OptionalFlowMappingModifier(255, *a1, a1[1], a1[2]);
  v3 = MEMORY[0x1C3BC9CD4](&unk_1C2D170DC, v2);
  type metadata accessor for ModifiedPlan(255, v1, v2, v3);
  JUMPOUT(0x1C3BC9CD4);
}

uint64_t sub_1C2B6B1C8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C2B6B204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_1_73();
  MEMORY[0x1E0C80A78](v0, v1);
  (*(void (**)(char *))(v3 + 16))((char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C2B6B290();
  sub_1C2CFD350();
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1C2B6B290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;

  OUTLINED_FUNCTION_1_73();
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5);
  result = type metadata accessor for OptionalFlowMappingPlan(0, v2, v1, v0);
  v8 = (_QWORD *)(v5 + *(int *)(result + 44));
  *v8 = v4;
  v8[1] = v3;
  return result;
}

void sub_1C2B6B2F0()
{
  sub_1C2B6B204();
}

uint64_t type metadata accessor for OptionalFlowMappingPlan(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalFlowMappingPlan);
}

uint64_t sub_1C2B6B310()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C2B6B388(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  sub_1C2CFD350();
  return v4;
}

uint64_t sub_1C2B6B438(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1C2B6B478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  sub_1C2CFD350();
  return a1;
}

uint64_t sub_1C2B6B4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  sub_1C2CFD350();
  swift_release();
  return a1;
}

uint64_t sub_1C2B6B544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C2B6B5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C2B6B604(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C2B6B680 + 4 * byte_1C2D17080[v11]))();
  }
}

void sub_1C2B6B700(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1C2B6B7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

void sub_1C2B6B87C(uint64_t *a1)
{
  type metadata accessor for OptionalFlowMappingPlan(255, *a1, a1[1], a1[2]);
  JUMPOUT(0x1C3BC9CD4);
}

uint64_t sub_1C2B6B8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v8 = type metadata accessor for OptionalFlowMappingPlan(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v52 = v8;
  v53 = v10;
  MEMORY[0x1E0C80A78](v8, v11);
  v13 = (char *)&v40 - v12;
  v50 = a3;
  v14 = sub_1C2CFE478();
  type metadata accessor for _FlowPlanEvent(255, v14, v15, v16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v17 = OUTLINED_FUNCTION_3_77();
  type metadata accessor for _FlowPlanEvent(255, a3, v18, v19);
  v20 = OUTLINED_FUNCTION_3_77();
  v21 = MEMORY[0x1E0C95D90];
  v49 = v17;
  v48 = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95D90], v17);
  v42 = v20;
  v22 = sub_1C2CFD9B0();
  v51 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22, v23);
  v46 = (char *)&v40 - v24;
  v25 = MEMORY[0x1C3BC9CD4](v21, v20);
  v45 = v25;
  v44 = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95950], v22);
  v54 = v20;
  v55 = v22;
  v56 = v25;
  v57 = v44;
  v26 = sub_1C2CFD998();
  v47 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26, v27);
  v29 = (char *)&v40 - v28;
  v41 = a4;
  v30 = a2;
  v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 48))(a1, a2, a4);
  v54 = v43;
  v31 = v9;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v33 = v52;
  v32(v13, a1, v52);
  v34 = (*(unsigned __int8 *)(v31 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v35 = (char *)swift_allocObject();
  v36 = v50;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v36;
  *((_QWORD *)v35 + 4) = v41;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v35[v34], v13, v33);
  v37 = v46;
  sub_1C2CFDAE8();
  swift_release();
  MEMORY[0x1C3BC8564](v22, v44, v45);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v37, v22);
  MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95870], v26);
  v38 = sub_1C2CFDAB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v26);
  return v38;
}

uint64_t sub_1C2B6BB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t result;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v111 = a2;
  v118 = a6;
  v119 = a1;
  v115 = a3;
  v116 = a5;
  v7 = type metadata accessor for OptionalFlowMappingPlan(0, a3, a4, a5);
  v113 = *(_QWORD *)(v7 - 8);
  v114 = v7;
  v110 = *(_QWORD *)(v113 + 64);
  MEMORY[0x1E0C80A78](v7, v8);
  v112 = (char *)&v89 - v9;
  v10 = sub_1C2CFE478();
  v13 = type metadata accessor for _FlowPlanEvent(255, v10, v11, v12);
  v14 = sub_1C2CFDA7C();
  v105 = *(_QWORD *)(v14 - 8);
  v106 = v14;
  MEMORY[0x1E0C80A78](v14, v15);
  v104 = (char *)&v89 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v18 = sub_1C2CFEAE4();
  v108 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18, v19);
  v107 = (char *)&v89 - v20;
  type metadata accessor for _FlowPlanEvent(255, a4, v21, v22);
  v23 = sub_1C2CFEAE4();
  v117 = v17;
  v24 = sub_1C2CFDA1C();
  v25 = MEMORY[0x1E0C964C8];
  v26 = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C964C8], v23);
  v27 = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95F48], v24);
  v120 = v23;
  v121 = v24;
  v97 = v26;
  v122 = v26;
  v123 = v27;
  v28 = sub_1C2CFD9C8();
  v29 = MEMORY[0x1C3BC9CD4](v25, v18);
  v109 = v18;
  v103 = v29;
  v30 = sub_1C2CFD9B0();
  v31 = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95A60], v28);
  v32 = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95950], v30);
  v120 = v28;
  v121 = v30;
  v122 = v31;
  v123 = v32;
  v102 = sub_1C2CFD998();
  v101 = *(_QWORD *)(v102 - 8);
  v34 = MEMORY[0x1E0C80A78](v102, v33);
  v100 = (char *)&v89 - v35;
  MEMORY[0x1E0C80A78](v34, v36);
  v91 = (char *)&v89 - v37;
  v96 = sub_1C2CFDA7C();
  v94 = *(_QWORD *)(v96 - 8);
  v39 = MEMORY[0x1E0C80A78](v96, v38);
  v90 = (char *)&v89 - v40;
  v98 = v23;
  v95 = *(_QWORD *)(v23 - 8);
  v42 = MEMORY[0x1E0C80A78](v39, v41);
  v92 = (char *)&v89 - v43;
  v93 = *(_QWORD *)(a4 - 8);
  v45 = MEMORY[0x1E0C80A78](v42, v44);
  v89 = (char *)&v89 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *(_QWORD *)(v13 - 8);
  v49 = MEMORY[0x1E0C80A78](v45, v48);
  v51 = (char *)&v89 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x1E0C80A78](v49, v52);
  v55 = (char *)&v89 - v54;
  v56 = *(_QWORD *)(v10 - 8);
  v58 = MEMORY[0x1E0C80A78](v53, v57);
  v60 = (char *)&v89 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v58, v61);
  v63 = (char *)&v89 - v62;
  v99 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  v99(v55, v119, v13);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v65 = v10;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v55, v13);
LABEL_5:
    if (qword_1EF786E68 != -1)
      swift_once();
    v66 = sub_1C2CFD878();
    __swift_project_value_buffer(v66, (uint64_t)qword_1EF7CC000);
    v67 = sub_1C2CFD86C();
    v68 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v69 = 0;
      _os_log_impl(&dword_1C28B6000, v67, v68, "#OptionalFlowMappingPlan: upstream value is nil, interrupting for a resolution", v69, 2u);
      MEMORY[0x1C3BC9DE8](v69, -1, -1);
    }

    v99(v51, v119, v13);
    v70 = v104;
    sub_1C2CFDA88();
    v71 = v106;
    sub_1C2CFDA70();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v70, v71);
    v73 = v112;
    v72 = v113;
    v74 = v114;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v112, v111, v114);
    v75 = (*(unsigned __int8 *)(v72 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
    v76 = (char *)swift_allocObject();
    *((_QWORD *)v76 + 2) = v115;
    *((_QWORD *)v76 + 3) = a4;
    *((_QWORD *)v76 + 4) = v116;
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(&v76[v75], v73, v74);
    sub_1C2AB5DF0((uint64_t)sub_1C2B6C588, (uint64_t)v76, v109, v65, a4);
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v63, v55, v10);
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v60, v63, v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v60, 1, a4) == 1)
  {
    v64 = *(void (**)(char *, uint64_t))(v56 + 8);
    v64(v63, v10);
    v65 = v10;
    v64(v60, v10);
    goto LABEL_5;
  }
  v77 = v93;
  v78 = v89;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v89, v60, a4);
  if (qword_1EF786E68 != -1)
    swift_once();
  v79 = sub_1C2CFD878();
  __swift_project_value_buffer(v79, (uint64_t)qword_1EF7CC000);
  v80 = sub_1C2CFD86C();
  v81 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v80, v81))
  {
    v82 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v82 = 0;
    _os_log_impl(&dword_1C28B6000, v80, v81, "#OptionalFlowMappingPlan: upstream value not nil, sending completed message", v82, 2u);
    MEMORY[0x1C3BC9DE8](v82, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v91, v78, a4);
  swift_storeEnumTagMultiPayload();
  v83 = v90;
  sub_1C2CFDA88();
  v84 = v92;
  v85 = v96;
  sub_1C2CFDA70();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v83, v85);
  v86 = v98;
  v87 = sub_1C2CFDAB8();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v84, v86);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v78, a4);
  result = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v63, v10);
  *v118 = v87;
  return result;
}

uint64_t sub_1C2B6C404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  v6 = type metadata accessor for OptionalFlowMappingPlan(0, a3, a4, a5);
  return (*(uint64_t (**)(void))(a2 + *(int *)(v6 + 44)))();
}

uint64_t sub_1C2B6C454(uint64_t a1, uint64_t *a2)
{
  return sub_1C2B6B8A8(a1, a2[2], a2[3], a2[4]);
}

unint64_t sub_1C2B6C464(uint64_t a1)
{
  MEMORY[0x1C3BC9CD4](&unk_1C2D17150, a1);
  return ReactiveFlowPlan.description.getter();
}

uint64_t sub_1C2B6C498(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&unk_1C2D17128);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2B6C4C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  v1 = OUTLINED_FUNCTION_0_84(a1);
  return sub_1C2B6BB90(v1, v2, v3, v4, v5, v6);
}

uint64_t objectdestroyTm_18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for OptionalFlowMappingPlan(0, v1, v0[3], v0[4]) - 8)
                          + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))((uint64_t)v0 + ((v2 + 40) & ~v2), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B6C588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_0_84(a1);
  return sub_1C2B6C404(v1, v2, v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_0_84(uint64_t a1)
{
  uint64_t *v1;

  type metadata accessor for OptionalFlowMappingPlan(0, v1[2], v1[3], v1[4]);
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_77()
{
  return sub_1C2CFD9EC();
}

void ReactiveFlowPlan.push<A>(flowProducer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, v6);
  v18[0] = a1;
  v18[1] = a2;
  v16 = type metadata accessor for FlowMappingModifier(0, a3, a4, a5);
  v17 = MEMORY[0x1C3BC9CD4](&unk_1C2D1728C, v16);
  sub_1C2ADB6B8((uint64_t)v14, (uint64_t)v18, a3, v16, v17, a6);
  sub_1C2CFD350();
  OUTLINED_FUNCTION_11();
}

{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_72_4();
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v6, v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v15[5] = a1;
  v15[6] = a2;
  v18[0] = sub_1C2B6C8DC;
  v18[1] = v15;
  v16 = type metadata accessor for FlowMappingModifier(0, a3, a4, a5);
  v17 = MEMORY[0x1C3BC9CD4](&unk_1C2D1728C, v16);
  sub_1C2ADB6B8(v6, (uint64_t)v18, a3, v16, v17, a6);
  sub_1C2CFD350();
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1C2B6C7EC@<X0>(uint64_t a1@<X0>, void (*a2)(__int128 *__return_ptr, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t **a6@<X8>)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t result;
  __int128 v12[2];

  v9 = type metadata accessor for ResultUpcastingFlow(0, a5, a3, a4);
  a2(v12, a1);
  v10 = sub_1C2B6C874(v12);
  a6[3] = (uint64_t *)v9;
  result = MEMORY[0x1C3BC9CD4](&unk_1C2D17270, v9);
  a6[4] = (uint64_t *)result;
  *a6 = v10;
  return result;
}

uint64_t *sub_1C2B6C874(__int128 *a1)
{
  swift_allocObject();
  return sub_1C2B6CDE0(a1);
}

uint64_t type metadata accessor for FlowMappingModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowMappingModifier);
}

uint64_t sub_1C2B6C8B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B6C8DC@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;

  return sub_1C2B6C7EC(a1, *(void (**)(__int128 *__return_ptr, uint64_t))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1C2B6C8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for ResultUpcastingFlow.State(319, *(_QWORD *)(a1 + 80), a3, a4);
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1C2B6C95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_73();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_72_4();
  (*(void (**)(uint64_t))(v3 + 16))(v0);
  sub_1C2B6C9D8();
  sub_1C2CFD350();
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1C2B6C9D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;

  OUTLINED_FUNCTION_1_73();
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5);
  result = type metadata accessor for FlowMappingPlan(0, v2, v1, v0);
  v8 = (_QWORD *)(v5 + *(int *)(result + 44));
  *v8 = v4;
  v8[1] = v3;
  return result;
}

void sub_1C2B6CA38()
{
  sub_1C2B6C95C();
}

void sub_1C2B6CA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _FlowPlanEvent(255, a3, a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  OUTLINED_FUNCTION_3_78();
  sub_1C2CFEAE4();
  OUTLINED_FUNCTION_3_78();
  sub_1C2CFDA1C();
  OUTLINED_FUNCTION_12_55();
}

void sub_1C2B6CAC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95F48], v1);
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = a1;
  *(_QWORD *)(v3 - 88) = v5;
  sub_1C2CFD9C8();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v3 - 160) = AssociatedTypeWitness;
  type metadata accessor for _FlowPlanEvent(255, AssociatedTypeWitness, v7, v8);
  v9 = sub_1C2CFD9EC();
  *(_QWORD *)(v3 - 168) = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95D90], v9);
  sub_1C2CFD9B0();
  OUTLINED_FUNCTION_12_55();
}

void sub_1C2B6CB74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95950], v3);
  *(_QWORD *)(v7 - 112) = v4;
  *(_QWORD *)(v7 - 104) = v3;
  *(_QWORD *)(v7 - 96) = a1;
  *(_QWORD *)(v7 - 88) = v9;
  v10 = sub_1C2CFD998();
  *(_QWORD *)(v7 - 136) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10, v11);
  *(_QWORD *)(v7 - 152) = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95870], v10);
  v12 = sub_1C2CFD980();
  *(_QWORD *)(v7 - 144) = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12, v13);
  *(_QWORD *)(v7 - 112) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, v1, v2);
  v14 = *(_QWORD *)(v7 - 128);
  v15 = type metadata accessor for FlowMappingPlan(0, v1, v14, v2);
  sub_1C2AB5DF0(*(_QWORD *)(v6 + *(int *)(v15 + 44)), *(_QWORD *)(v6 + *(int *)(v15 + 44) + 8), v5, *(_QWORD *)(v7 - 160), v14);
}

void sub_1C2B6CC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0xE000000000000000;
  sub_1C2CFE670();
  v5 = *(_QWORD *)(v4 - 104);
  *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 112);
  *(_QWORD *)(v4 - 104) = v5;
  sub_1C2CFDE54();
  *(_QWORD *)(v4 - 120) = v0;
  MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95D98], v3);
  sub_1C2CFE9C4();
  sub_1C2CFDE54();
  sub_1C2CFEB50();
  sub_1C2CFDE54();
  swift_bridgeObjectRelease();
  sub_1C2CFDE54();
  sub_1C2BB6624(*(_QWORD *)(v4 - 112), *(_QWORD *)(v4 - 104), v1, *(_QWORD *)(v4 - 152));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v2, v1);
  OUTLINED_FUNCTION_12_55();
}

uint64_t sub_1C2B6CD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1C2CFDAB8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v0);
  return v3;
}

void sub_1C2B6CD9C(uint64_t a1, uint64_t *a2)
{
  sub_1C2B6CA4C(a1, a2[2], a2[3], a2[4]);
}

unint64_t sub_1C2B6CDAC(uint64_t a1)
{
  MEMORY[0x1C3BC9CD4](&unk_1C2D172F0, a1);
  return ReactiveFlowPlan.description.getter();
}

uint64_t *sub_1C2B6CDE0(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  sub_1C28B99EC(a1, (uint64_t)v1 + *(_QWORD *)(*v1 + 88));
  type metadata accessor for ResultUpcastingFlow.State(0, *(_QWORD *)(v2 + 80), v3, v4);
  swift_storeEnumTagMultiPayload();
  return v1;
}

uint64_t sub_1C2B6CE34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47[3];
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _UNKNOWN **v51;
  _QWORD v52[3];
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  _UNKNOWN **v56;

  v2 = v1;
  v46 = a1;
  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  v5 = sub_1C2CFEAF0();
  v44 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v41 - v7;
  *(_QWORD *)&v45 = type metadata accessor for Conclude(0, v5, v9, v10);
  v43 = *(_QWORD *)(v45 - 8);
  v12 = MEMORY[0x1E0C80A78](v45, v11);
  v42 = (uint64_t)&v41 - v13;
  v14 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v12, v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ResultUpcastingFlow.State(0, v4, v18, v19);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20, v22);
  v24 = (__int128 *)((char *)&v41 - v23);
  v25 = v2 + *(_QWORD *)(v3 + 88);
  swift_beginAccess();
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v21 + 16))(v24, v25, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, __int128 *, uint64_t))(v14 + 32))(v17, v24, v4);
    *(_QWORD *)&v54 = v2;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v8, v17, v4);
    swift_storeEnumTagMultiPayload();
    v28 = type metadata accessor for ResultUpcastingFlow(0, v4, v26, v27);
    MEMORY[0x1C3BC9CD4](&unk_1C2D17270, v28);
    v29 = v42;
    ActingFlow.conclude(with:)((uint64_t)v8, v42);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v5);
    v30 = v45;
    v55 = v45;
    v56 = &protocol witness table for Conclude<A>;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v54);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v43 + 32))(boxed_opaque_existential_0, v29, v30);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v4);
    return sub_1C28B99EC(&v54, v46);
  }
  else
  {
    sub_1C28B99EC(v24, (uint64_t)&v54);
    v33 = v55;
    v34 = (uint64_t)v56;
    __swift_project_boxed_opaque_existential_1(&v54, v55);
    *(_QWORD *)&v53 = type metadata accessor for LifeCycleModifierFlow(0, v4, v35, v36);
    *((_QWORD *)&v53 + 1) = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for LifeCycleModifierFlow<A>, v53);
    sub_1C2CFD350();
    ActingFlow.onCompletion(_:)((uint64_t)sub_1C2B6DD98, v2, v33, v34, v52);
    swift_release();
    v45 = v53;
    v37 = v53;
    v38 = __swift_project_boxed_opaque_existential_1(v52, v53);
    v48 = v45;
    v39 = __swift_allocate_boxed_opaque_existential_0(v47);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v39, v38, v37);
    v50 = type metadata accessor for Delegate(0);
    v51 = &protocol witness table for Delegate;
    v40 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v49);
    sub_1C28B9A04((uint64_t)v47, (uint64_t)v40);
    type metadata accessor for FlowActionType(0);
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    sub_1C28B99EC(&v49, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
  }
}

uint64_t sub_1C2B6D1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v6 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v7 = type metadata accessor for ResultUpcastingFlow.State(0, v6, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7, v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10, v13);
  v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))((char *)&v18 - v14, a1, v6);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v15, v7);
  v16 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v16, v12, v7);
  return swift_endAccess();
}

uint64_t sub_1C2B6D300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 88);
  v6 = type metadata accessor for ResultUpcastingFlow.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v4;
}

uint64_t sub_1C2B6D344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2B6D300(a1, a2, a3, a4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResultUpcastingFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResultUpcastingFlow);
}

uint64_t type metadata accessor for ResultUpcastingFlow.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResultUpcastingFlow.State);
}

void sub_1C2B6D37C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for FlowMappingModifier(255, *a1, a1[1], a1[2]);
  v3 = MEMORY[0x1C3BC9CD4](&unk_1C2D1728C, v2);
  type metadata accessor for ModifiedPlan(255, v1, v2, v3);
  JUMPOUT(0x1C3BC9CD4);
}

uint64_t sub_1C2B6D3DC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C2B6D450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x28)
    v3 = 40;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
    else
      return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1C2B6D498 + 4 * byte_1C2D17170[v5]))();
  }
}

uint64_t sub_1C2B6D4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x28uLL)
    v5 = 40;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(uint64_t))(v4 + 16))(a1);
    v8 = 1;
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v9;
    (**(void (***)(uint64_t))(v9 - 8))(a1);
    v8 = 0;
  }
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1C2B6D5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x28uLL)
      v7 = 40;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      __swift_destroy_boxed_opaque_existential_1(a1);
    v10 = *(unsigned __int8 *)(a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v13 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1, a2);
      v12 = 0;
    }
    *(_BYTE *)(a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1C2B6D77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x28uLL)
    v5 = 40;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(uint64_t))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1C2B6D858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x28uLL)
      v7 = 40;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      __swift_destroy_boxed_opaque_existential_1(a1);
    v10 = *(unsigned __int8 *)(a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      v13 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v13;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_BYTE *)(a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1C2B6D9EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 40;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x28uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B6DAB0 + 4 * byte_1C2D17193[(v4 - 1)]))();
}

void sub_1C2B6DAFC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x28)
    v5 = 40;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1C2B6DCA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 40;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x28uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C2B6DCE8 + 4 * byte_1C2D171A1[v3]))();
}

uint64_t sub_1C2B6DD30@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2B6CE34(a1);
}

uint64_t sub_1C2B6DD50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for FlowMappingPlan(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowMappingPlan);
}

uint64_t sub_1C2B6DD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1C2B6D1E8(a1, v4, a3, a4);
}

uint64_t sub_1C2B6DDA0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C2B6DE1C + 4 * byte_1C2D171A6[v11]))();
  }
}

void sub_1C2B6DE9C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1C2B6DF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

void sub_1C2B6E018(uint64_t *a1)
{
  type metadata accessor for FlowMappingPlan(255, *a1, a1[1], a1[2]);
  JUMPOUT(0x1C3BC9CD4);
}

uint64_t sub_1C2B6E044(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&unk_1C2D172C8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_78()
{
  return 255;
}

void ReactiveFlowPlan.pushOnError(flowProducer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];

  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v5, v12);
  v13 = OUTLINED_FUNCTION_38_8();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v17[0] = sub_1C2B6E1F4;
  v17[1] = v13;
  v15 = type metadata accessor for ErrorReportingFlowModifier(0, a3, a4, v14);
  v16 = MEMORY[0x1C3BC9CD4](&unk_1C2D173A8, v15);
  sub_1C2ADB6B8(v5, (uint64_t)v17, a3, v15, v16, a5);
  sub_1C2CFD350();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B6E150@<X0>(void (*a1)(_QWORD *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_0;
  __int128 v7;
  _QWORD v8[3];
  __int128 v9;

  a1(v8);
  v7 = v9;
  v3 = v9;
  v4 = __swift_project_boxed_opaque_existential_1(v8, v9);
  *(_OWORD *)(a2 + 24) = v7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_0, v4, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_1C2B6E1D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B6E1F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C2B6E150(*(void (**)(_QWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t type metadata accessor for ErrorReportingFlowModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ErrorReportingFlowModifier);
}

void sub_1C2B6E208(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = type metadata accessor for ErrorReportingFlowModifier(255, *a1, a1[1], a4);
  v6 = MEMORY[0x1C3BC9CD4](&unk_1C2D173A8, v5);
  type metadata accessor for ModifiedPlan(255, v4, v5, v6);
  JUMPOUT(0x1C3BC9CD4);
}

uint64_t sub_1C2B6E264()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C2B6E298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_79();
  MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_2_6();
  (*(void (**)(uint64_t))(v3 + 16))(v0);
  sub_1C2B6E30C();
  sub_1C2CFD350();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B6E30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_2_79();
  (*(void (**)(uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4);
  v7 = (_QWORD *)(v4 + *(int *)(type metadata accessor for ErrorReportingFlowPlan(0, v1, v0, v6) + 36));
  *v7 = v3;
  v7[1] = v2;
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B6E35C()
{
  sub_1C2B6E298();
}

uint64_t type metadata accessor for ErrorReportingFlowPlan(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ErrorReportingFlowPlan);
}

uint64_t sub_1C2B6E378()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2B6E3F0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C2B6E46C + 4 * byte_1C2D17310[v11]))();
  }
}

void sub_1C2B6E4EC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1C2B6E5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
    }
  }
  return result;
}

void sub_1C2B6E668(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ErrorReportingFlowPlan(255, *a1, a1[1], a4);
  JUMPOUT(0x1C3BC9CD4);
}

void sub_1C2B6E690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for _FlowPlanEvent(255, AssociatedTypeWitness, v0, v1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7A8B60);
  OUTLINED_FUNCTION_1_74();
  v2 = sub_1C2CFEAE4();
  OUTLINED_FUNCTION_1_74();
  sub_1C2CFD9EC();
  OUTLINED_FUNCTION_1_74();
  sub_1C2CFDA1C();
  MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C964C8], v2);
  OUTLINED_FUNCTION_12_55();
}

void sub_1C2B6E74C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = a1;
  sub_1C2CFD9C8();
  *(_QWORD *)(v5 - 152) = MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95D90], v1);
  OUTLINED_FUNCTION_12_55();
}

void sub_1C2B6E788(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v3;
  *(_QWORD *)(v4 - 88) = a1;
  sub_1C2CFD9BC();
  OUTLINED_FUNCTION_12_55();
}

void sub_1C2B6E7AC()
{
  sub_1C2CFD9B0();
  OUTLINED_FUNCTION_12_55();
}

void sub_1C2B6E7D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v3;
  *(_QWORD *)(v4 - 96) = v2;
  *(_QWORD *)(v4 - 88) = a1;
  v5 = sub_1C2CFD998();
  *(_QWORD *)(v4 - 136) = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_12_55();
}

void sub_1C2B6E820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = sub_1C2CFD980();
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5, v6);
  *(_QWORD *)(v4 - 112) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, v1, v2);
  v8 = (uint64_t *)(v3 + *(int *)(type metadata accessor for ErrorReportingFlowPlan(0, v1, v2, v7) + 36));
  v10 = *v8;
  v9 = v8[1];
  v11 = OUTLINED_FUNCTION_38_8();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  sub_1C2CFD350();
  sub_1C2AB67E0((uint64_t)sub_1C2B6EA50, v11, v0, *(_QWORD *)(v4 - 128));
}

uint64_t sub_1C2B6E8DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  *(_QWORD *)(v7 - 112) = 0;
  *(_QWORD *)(v7 - 104) = 0xE000000000000000;
  sub_1C2CFE670();
  v8 = *(_QWORD *)(v7 - 104);
  *(_QWORD *)(v7 - 112) = *(_QWORD *)(v7 - 112);
  *(_QWORD *)(v7 - 104) = v8;
  sub_1C2CFDE54();
  *(_QWORD *)(v7 - 120) = v1;
  MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C95D98], v0);
  sub_1C2CFE9C4();
  sub_1C2CFDE54();
  sub_1C2BB6624(*(_QWORD *)(v7 - 112), *(_QWORD *)(v7 - 104), v3, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 136) + 8))(v5, v3);
  MEMORY[0x1C3BC9CD4](MEMORY[0x1E0C957C0], v4);
  v9 = sub_1C2CFDAB8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 144) + 8))(v6, v4);
  return v9;
}

void sub_1C2B6E9E4()
{
  sub_1C2B6E690();
}

unint64_t sub_1C2B6E9F0(uint64_t a1)
{
  MEMORY[0x1C3BC9CD4](&unk_1C2D17420, a1);
  return ReactiveFlowPlan.description.getter();
}

uint64_t sub_1C2B6EA24(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&unk_1C2D173F8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2B6EA50(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t OUTLINED_FUNCTION_1_74()
{
  return 255;
}

uint64_t RawDucTemplatingParameter.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C28C3708(v1 + 16, a1);
}

uint64_t RawDucTemplatingParameter.conceptType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawDucTemplatingParameter.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  OUTLINED_FUNCTION_0_85();
  *(_QWORD *)(v3 + 48) = v4;
  *(_QWORD *)(v3 + 56) = v5;
  sub_1C29D95E0(a1, v3 + 16);
  return v2;
}

uint64_t RawDucTemplatingParameter.init(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_0_85();
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  sub_1C29D95E0(v3, v0 + 16);
  return v0;
}

uint64_t RawDucTemplatingParameter.deinit()
{
  uint64_t v0;

  sub_1C29D967C(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RawDucTemplatingParameter.__deallocating_deinit()
{
  uint64_t v0;

  sub_1C29D967C(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B6EB9C()
{
  return RawDucTemplatingParameter.conceptType.getter();
}

uint64_t type metadata accessor for RawDucTemplatingParameter()
{
  return objc_opt_self();
}

uint64_t method lookup function for RawDucTemplatingParameter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RawDucTemplatingParameter.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RawDucTemplatingParameter.encode(protoJsonCoding:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1C2B6EC14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_1C2CFD4C4();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6EC5C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v2 = v0[5];
  v1 = (uint64_t *)v0[6];
  v3 = v0[4];
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v2 + 16))(v1, v0[3], v3);
  v4 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == *MEMORY[0x1E0D97998])
  {
    OUTLINED_FUNCTION_101_16();
    v5 = *v1;
    v0[11] = v5;
    v6 = (_QWORD *)swift_task_alloc();
    v0[12] = v6;
    *v6 = v0;
    v6[1] = sub_1C2B6EE94;
    v7 = OUTLINED_FUNCTION_75_23();
    return sub_1C2B6F728(v7, v5);
  }
  else if (v4 == *MEMORY[0x1E0D979A0])
  {
    OUTLINED_FUNCTION_101_16();
    swift_release();
    v9 = (_QWORD *)swift_task_alloc();
    v0[7] = v9;
    *v9 = v0;
    v9[1] = sub_1C2B6EDD8;
    v10 = OUTLINED_FUNCTION_75_23();
    return sub_1C2B6F55C(v10);
  }
  else if (v4 == *MEMORY[0x1E0D97990])
  {
    v11 = (_QWORD *)swift_task_alloc();
    v0[9] = v11;
    *v11 = v0;
    v11[1] = sub_1C2B6EE48;
    OUTLINED_FUNCTION_75_23();
    OUTLINED_FUNCTION_36_2();
    return sub_1C2B6F030(v12, v13, v14);
  }
  else
  {
    v15 = (_QWORD *)swift_task_alloc();
    v0[14] = v15;
    *v15 = v0;
    v15[1] = sub_1C2B6EF0C;
    v16 = OUTLINED_FUNCTION_75_23();
    return sub_1C2A18AF4(v16);
  }
}

uint64_t sub_1C2B6EDD8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 64) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6EE24()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_71_24();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_24(v0);
}

uint64_t sub_1C2B6EE48()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6EE94()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 104) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6EEE0()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_71_24();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_24(v0);
}

uint64_t sub_1C2B6EF0C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_97_18(v0);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6EF4C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_71_24();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_24(v1);
}

uint64_t sub_1C2B6EF7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_76(*(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_71_24();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B6EFB0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_71_24();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B6EFD8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_71_24();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B6F000()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_71_24();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B6F030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[43] = a2;
  v3[44] = a3;
  v3[42] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v3[45] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6F078()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_205();
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  v1 = qword_1ED7A4228;
  v2 = OUTLINED_FUNCTION_49_21();
  v0[46] = v2;
  v0[14] = v2;
  v0[15] = &protocol witness table for RefreshableDeviceState;
  v0[11] = v1;
  OUTLINED_FUNCTION_38_0();
  v3 = (_QWORD *)swift_task_alloc();
  v0[47] = v3;
  *v3 = v0;
  v3[1] = sub_1C2B6F148;
  return static ErrorTemplates.appNotFoundOnDevice(deviceState:)((uint64_t)(v0 + 2), (uint64_t)(v0 + 11));
}

uint64_t sub_1C2B6F148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 384) = v0;
  v2 = swift_task_dealloc();
  OUTLINED_FUNCTION_36_1(v2, &qword_1ED7A8760);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B6F1A8()
{
  uint64_t v0;
  __int128 v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 392) = *(_QWORD *)(v0 + 16);
  v1 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 416) = v1;
  *(_QWORD *)(v0 + 432) = *(_QWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 440) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 456) = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 328) = MEMORY[0x1E0DEE9D8];
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v2;
  *v2 = v0;
  v2[1] = sub_1C2B6F22C;
  v3 = OUTLINED_FUNCTION_200(*(_QWORD *)(v0 + 344));
  return sub_1C2B71848(v3, v4);
}

uint64_t sub_1C2B6F22C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_149();
  OUTLINED_FUNCTION_151();
  *(_QWORD *)(v2 + 472) = v1;
  OUTLINED_FUNCTION_167_0();
  if (v0)

  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6F280()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  MEMORY[0x1C3BC8A44](*(id *)(v0 + 472));
  if (*(_QWORD *)((*(_QWORD *)(v0 + 328) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 328) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    OUTLINED_FUNCTION_104_16();
  v1 = *(void **)(v0 + 472);
  sub_1C2CFE040();
  sub_1C2CFDFC8();

  v20 = *(_QWORD *)(v0 + 448);
  OUTLINED_FUNCTION_136_5();
  OUTLINED_FUNCTION_67_21();
  OUTLINED_FUNCTION_232_0();
  OUTLINED_FUNCTION_94_18((uint64_t)&protocol witness table for RefreshableDeviceState);
  OUTLINED_FUNCTION_131_11();
  __swift_destroy_boxed_opaque_existential_1(v0 + 248);
  v2 = OUTLINED_FUNCTION_38_0();
  RefreshableDeviceState.isTextToSpeechEnabled.getter(v2);
  v4 = v3;
  v5 = OUTLINED_FUNCTION_27_0();
  v8 = OUTLINED_FUNCTION_41_34(v5, v6, v7, v5);
  *(_OWORD *)(v0 + 288) = 0u;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_QWORD *)(v0 + 320) = 0;
  v9 = OUTLINED_FUNCTION_126_11(v8, (uint64_t)&protocol witness table for AceOutput);
  OUTLINED_FUNCTION_82_14((uint64_t)v9, v10, v4 & 1, v11, v12, v13, v14, MEMORY[0x1E0DEE9D8], v0 + 288, v0 + 288, v18);
  OUTLINED_FUNCTION_97();
  v15 = sub_1C28BB3A4(v0 + 288, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_93_17(v15, &qword_1ED7A7A10);
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v19, v20);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_0();
  v16 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_19(v16);
}

uint64_t sub_1C2B6F3FC()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B6F428()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v21 = *(_QWORD *)(v0 + 448);
  OUTLINED_FUNCTION_136_5();
  v18 = *(_QWORD *)(v0 + 408);
  OUTLINED_FUNCTION_67_21();
  OUTLINED_FUNCTION_232_0();
  OUTLINED_FUNCTION_94_18((uint64_t)&protocol witness table for RefreshableDeviceState);
  OUTLINED_FUNCTION_131_11();
  __swift_destroy_boxed_opaque_existential_1(v0 + 248);
  v1 = OUTLINED_FUNCTION_38_0();
  RefreshableDeviceState.isTextToSpeechEnabled.getter(v1);
  v3 = v2;
  v4 = OUTLINED_FUNCTION_27_0();
  v7 = OUTLINED_FUNCTION_41_34(v4, v5, v6, v4);
  *(_OWORD *)(v0 + 288) = 0u;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_QWORD *)(v0 + 320) = 0;
  v8 = OUTLINED_FUNCTION_126_11(v7, (uint64_t)&protocol witness table for AceOutput);
  OUTLINED_FUNCTION_82_14((uint64_t)v8, v9, v3 & 1, v10, v11, v12, v13, MEMORY[0x1E0DEE9D8], v0 + 288, v18, v19);
  v14 = OUTLINED_FUNCTION_97();
  v15 = OUTLINED_FUNCTION_146_6(v14, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_93_17(v15, &qword_1ED7A7A10);
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v20, v21);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_0();
  v16 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_10_19(v16);
}

uint64_t sub_1C2B6F55C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[2] = a1;
  v2 = OUTLINED_FUNCTION_70_0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = OUTLINED_FUNCTION_7();
  v1[6] = OUTLINED_FUNCTION_0();
  v1[7] = OUTLINED_FUNCTION_39();
  v1[8] = OUTLINED_FUNCTION_78();
  v3 = (_QWORD *)swift_task_alloc();
  v1[9] = v3;
  OUTLINED_FUNCTION_148(v3, (uint64_t)sub_1C2B6F5D0);
  return sub_1C2BF2D54();
}

uint64_t sub_1C2B6F5D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_30(a1);
  if (v1)
  {
    OUTLINED_FUNCTION_34_18();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_18_0();
  }
}

#error "1C2B6F65C: call analysis failed (funcsize=45)"

uint64_t sub_1C2B6F6EC()
{
  OUTLINED_FUNCTION_140_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6F728(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[141] = a2;
  v2[140] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v2[142] = OUTLINED_FUNCTION_7();
  v3 = OUTLINED_FUNCTION_17_24();
  v2[143] = v3;
  v2[144] = *(_QWORD *)(v3 - 8);
  v2[145] = OUTLINED_FUNCTION_7();
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268) - 8);
  v2[146] = v4;
  v2[147] = *(_QWORD *)(v4 + 64);
  v2[148] = OUTLINED_FUNCTION_16_52();
  v2[149] = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B6F7B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_176();
  v1 = v0[141];
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_77_24();
  v2 = OUTLINED_FUNCTION_81_17();
  OUTLINED_FUNCTION_100_19(v2);
  v3 = OUTLINED_FUNCTION_141_8();
  if (v4)
  {
    v0[135] = v3;
    v0[136] = v4;
    OUTLINED_FUNCTION_59_31();
    v0[137] = v5;
    v0[138] = 0xE900000000000065;
    sub_1C28BFDE4();
    sub_1C28BFD6C();
    OUTLINED_FUNCTION_111_13();
    OUTLINED_FUNCTION_34_1();
  }
  OUTLINED_FUNCTION_106_10();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_137_6(v1);
}

uint64_t sub_1C2B6F9AC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_111_3();
  OUTLINED_FUNCTION_65_5();
  *(_QWORD *)(v1 + 1216) = v2;
  OUTLINED_FUNCTION_167_0();
  if (v0)
  {

    return OUTLINED_FUNCTION_62_25();
  }
  else
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_8_2();
  }
}

uint64_t sub_1C2B6FA30()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_149_0();
  MEMORY[0x1C3BC8A44](*(id *)(v0 + 1216));
  if (*(_QWORD *)((*(_QWORD *)(v0 + 1112) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 1112) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    OUTLINED_FUNCTION_104_16();
  v1 = *(void **)(v0 + 1216);
  sub_1C2CFE040();
  sub_1C2CFDFC8();

  return OUTLINED_FUNCTION_62_25();
}

uint64_t sub_1C2B6FAC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1224) = v0;
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B6FB04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(_QWORD *)(v0 + 752);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_12();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C28F8E6C(v1, v2);
  swift_bridgeObjectRetain();
  sub_1C28C72CC(v0 + 968);
  OUTLINED_FUNCTION_353();
  v3 = qword_1ED7A4228;
  *(_QWORD *)(v0 + 832) = OUTLINED_FUNCTION_49_21();
  *(_QWORD *)(v0 + 840) = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)(v0 + 808) = v3;
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_88_15();
  OUTLINED_FUNCTION_353();
  v4 = OUTLINED_FUNCTION_38_0();
  RefreshableDeviceState.isTextToSpeechEnabled.getter(v4);
  v5 = OUTLINED_FUNCTION_27_0();
  v8 = OUTLINED_FUNCTION_41_34(v5, v6, v7, v5);
  *(_OWORD *)(v0 + 928) = 0u;
  *(_OWORD *)(v0 + 944) = 0u;
  *(_QWORD *)(v0 + 960) = 0;
  OUTLINED_FUNCTION_135_11(v8, (uint64_t)&protocol witness table for AceOutput);
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  v9 = OUTLINED_FUNCTION_70();
  v10 = OUTLINED_FUNCTION_45_28(v9, (uint64_t *)&unk_1ED7A8750);
  OUTLINED_FUNCTION_93_17(v10, &qword_1ED7A7A10);
  OUTLINED_FUNCTION_353();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_29();
  sub_1C28F90E8(v1, v2);
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_36_0();
  return swift_asyncLet_finish();
}

uint64_t sub_1C2B6FD10()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B6FD1C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_110_11();
  OUTLINED_FUNCTION_36_1(v0, &qword_1EF790268);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_5_4(v1);
}

uint64_t sub_1C2B6FD64()
{
  return swift_asyncLet_finish();
}

uint64_t sub_1C2B6FD7C()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B6FD88()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_110_11();
  OUTLINED_FUNCTION_36_1(v1, &qword_1EF790268);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B6FDD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[2] = a1;
  v2 = OUTLINED_FUNCTION_70_0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = OUTLINED_FUNCTION_7();
  v1[6] = OUTLINED_FUNCTION_0();
  v1[7] = OUTLINED_FUNCTION_39();
  v1[8] = OUTLINED_FUNCTION_78();
  v3 = (_QWORD *)swift_task_alloc();
  v1[9] = v3;
  OUTLINED_FUNCTION_148(v3, (uint64_t)sub_1C2B6FE40);
  return OUTLINED_FUNCTION_90_14();
}

uint64_t sub_1C2B6FE40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_30(a1);
  if (v1)
  {
    OUTLINED_FUNCTION_34_18();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_18_0();
  }
}

#error "1C2B6FECC: call analysis failed (funcsize=45)"

uint64_t sub_1C2B6FF5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[2] = a1;
  v2 = OUTLINED_FUNCTION_70_0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = OUTLINED_FUNCTION_7();
  v1[6] = OUTLINED_FUNCTION_0();
  v1[7] = OUTLINED_FUNCTION_39();
  v1[8] = OUTLINED_FUNCTION_78();
  v3 = (_QWORD *)swift_task_alloc();
  v1[9] = v3;
  OUTLINED_FUNCTION_148(v3, (uint64_t)sub_1C2B6FFC8);
  return OUTLINED_FUNCTION_90_14();
}

uint64_t sub_1C2B6FFC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_30(a1);
  if (v1)
  {
    OUTLINED_FUNCTION_34_18();
    OUTLINED_FUNCTION_31();
    OUTLINED_FUNCTION_49_0();
    return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_18_0();
  }
}

#error "1C2B70054: call analysis failed (funcsize=45)"

uint64_t sub_1C2B700E4()
{
  OUTLINED_FUNCTION_140_3();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B70120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_102_12(v1, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_29_5(v2);
}

uint64_t sub_1C2B7016C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_102_12(v1, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  swift_task_dealloc();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B701C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[155] = a4;
  v4[154] = a3;
  v4[153] = a2;
  v4[152] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v4[156] = OUTLINED_FUNCTION_7();
  v5 = OUTLINED_FUNCTION_17_24();
  v4[157] = v5;
  v4[158] = *(_QWORD *)(v5 - 8);
  v4[159] = OUTLINED_FUNCTION_7();
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268) - 8);
  v4[160] = v6;
  v4[161] = *(_QWORD *)(v6 + 64);
  v4[162] = OUTLINED_FUNCTION_16_52();
  v4[163] = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B70254()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  v1 = v0[153];
  sub_1C28C72CC((uint64_t)(v0 + 121));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 121));
  v2 = OUTLINED_FUNCTION_38_0();
  RefreshableDeviceState.isTextToSpeechEnabled.getter(v2);
  v4 = v3;
  OUTLINED_FUNCTION_36_0();
  type metadata accessor for ViewFactory();
  inited = swift_initStackObject();
  v0[164] = inited;
  *(_BYTE *)(inited + 16) = v4 & 1;
  sub_1C28C72CC((uint64_t)(v0 + 101));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 101));
  v6 = OUTLINED_FUNCTION_52_4();
  RefreshableDeviceState.siriLocale.getter(v6);
  v7 = OUTLINED_FUNCTION_141_8();
  if (v8)
  {
    v0[148] = v7;
    v0[149] = v8;
    OUTLINED_FUNCTION_59_31();
    v0[150] = v9;
    v0[151] = 0xE900000000000065;
    sub_1C28BFDE4();
    sub_1C28BFD6C();
    sub_1C2CFDD04();
    OUTLINED_FUNCTION_55();
  }
  OUTLINED_FUNCTION_106_10();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_137_6(v1);
}

uint64_t sub_1C2B704D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_111_3();
  OUTLINED_FUNCTION_65_5();
  *(_QWORD *)(v1 + 1336) = v2;
  *(_QWORD *)(v1 + 1344) = v0;
  OUTLINED_FUNCTION_167_0();
  if (v0)
    return OUTLINED_FUNCTION_73_21();
  else
    return OUTLINED_FUNCTION_62_25();
}

uint64_t sub_1C2B70554()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1352) = v0;
  return OUTLINED_FUNCTION_28_4();
}

void sub_1C2B70574()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[93];
  v2 = v0[94];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C28F8E6C(v1, v2);
  swift_bridgeObjectRetain();
  sub_1C28C72CC((uint64_t)(v0 + 131));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 131));
  v3 = qword_1ED7A4228;
  v0[114] = OUTLINED_FUNCTION_49_21();
  v0[115] = &protocol witness table for RefreshableDeviceState;
  v0[111] = v3;
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_88_15();
  OUTLINED_FUNCTION_353();
  v4 = sub_1C2CFD350();
  RefreshableDeviceState.isTextToSpeechEnabled.getter(v4);
  sub_1C290E0E0();
}

uint64_t sub_1C2B707C4()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B707D0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_205();
  v0 = swift_release();
  OUTLINED_FUNCTION_36_1(v0, &qword_1EF790268);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_5_4(v1);
}

uint64_t sub_1C2B70830()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B7083C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_149_0();
  v1 = OUTLINED_FUNCTION_76_22();
  OUTLINED_FUNCTION_146_6(v1, &qword_1EF790268);
  OUTLINED_FUNCTION_4_60();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B70894()
{
  swift_release();
  OUTLINED_FUNCTION_89_17();
  return OUTLINED_FUNCTION_69_6();
}

uint64_t sub_1C2B708D4()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B708E0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_149_0();
  v1 = OUTLINED_FUNCTION_76_22();
  OUTLINED_FUNCTION_146_6(v1, &qword_1EF790268);
  OUTLINED_FUNCTION_4_60();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B70938(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[12] = a1;
  v2 = OUTLINED_FUNCTION_70_0();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = OUTLINED_FUNCTION_7();
  v1[16] = OUTLINED_FUNCTION_0();
  v1[17] = OUTLINED_FUNCTION_39();
  v1[18] = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B70994()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_61_12();
  v1 = OUTLINED_FUNCTION_27_44();
  OUTLINED_FUNCTION_87_16(v1, (uint64_t)&protocol witness table for RefreshableDeviceState);
  OUTLINED_FUNCTION_38_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_95_2();
  *(_QWORD *)(v0 + 152) = v2;
  v3 = OUTLINED_FUNCTION_65_19(v2, (uint64_t)sub_1C2B70A20);
  return sub_1C2BF3128(v3);
}

uint64_t sub_1C2B70A20(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_15_59(a1);
  OUTLINED_FUNCTION_36_1(v1, &qword_1ED7A8760);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

#error "1C2B70AAC: call analysis failed (funcsize=45)"

uint64_t sub_1C2B70B3C()
{
  OUTLINED_FUNCTION_141_1();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B70B78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[2] = a1;
  v2 = OUTLINED_FUNCTION_70_0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = OUTLINED_FUNCTION_7();
  v1[6] = OUTLINED_FUNCTION_0();
  v1[7] = OUTLINED_FUNCTION_39();
  v1[8] = OUTLINED_FUNCTION_78();
  v3 = (_QWORD *)swift_task_alloc();
  v1[9] = v3;
  OUTLINED_FUNCTION_148(v3, (uint64_t)sub_1C2B6FE40);
  return static ResponsePatterns.taskComplete()();
}

uint64_t sub_1C2B70BF0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[15] = a1;
  v2[16] = a2;
  v3 = OUTLINED_FUNCTION_70_0();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = OUTLINED_FUNCTION_7();
  v2[20] = OUTLINED_FUNCTION_0();
  v2[21] = OUTLINED_FUNCTION_39();
  v2[22] = OUTLINED_FUNCTION_78();
  v4 = OUTLINED_FUNCTION_17_24();
  v2[23] = v4;
  v2[24] = *(_QWORD *)(v4 - 8);
  v2[25] = OUTLINED_FUNCTION_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  v2[26] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B70C7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_176();
  v1 = v0[16];
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_77_24();
  v2 = OUTLINED_FUNCTION_81_17();
  OUTLINED_FUNCTION_100_19(v2);
  v3 = OUTLINED_FUNCTION_141_8();
  if (v4)
  {
    v0[11] = v3;
    v0[12] = v4;
    OUTLINED_FUNCTION_59_31();
    v0[13] = v5;
    v0[14] = 0xE900000000000065;
    sub_1C28BFDE4();
    sub_1C28BFD6C();
    OUTLINED_FUNCTION_111_13();
    OUTLINED_FUNCTION_34_1();
  }
  OUTLINED_FUNCTION_106_10();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_137_6(v1);
}

uint64_t sub_1C2B70DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_149();
  OUTLINED_FUNCTION_151();
  *(_QWORD *)(v2 + 224) = v1;
  *(_QWORD *)(v2 + 232) = v0;
  OUTLINED_FUNCTION_167_0();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

#error "1C2B70E74: call analysis failed (funcsize=54)"

uint64_t sub_1C2B70F18()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 248) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B70F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_205();
  v1 = *(_QWORD *)(v0 + 176);

  v2 = sub_1C28E05E4(v1, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_118_11(v2, &qword_1EF790268);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_5_4(v3);
}

uint64_t sub_1C2B70FCC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_36_1(v1, &qword_1EF790268);
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B7102C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_149_0();

  v2 = OUTLINED_FUNCTION_102_12(v1, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_36_1(v2, &qword_1EF790268);
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_63_0();
  return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B710A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[12] = a1;
  v2 = OUTLINED_FUNCTION_70_0();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = OUTLINED_FUNCTION_7();
  v1[16] = OUTLINED_FUNCTION_0();
  v1[17] = OUTLINED_FUNCTION_39();
  v1[18] = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B71100()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_61_12();
  v1 = OUTLINED_FUNCTION_27_44();
  OUTLINED_FUNCTION_87_16(v1, (uint64_t)&protocol witness table for RefreshableDeviceState);
  OUTLINED_FUNCTION_38_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_95_2();
  *(_QWORD *)(v0 + 152) = v2;
  v3 = OUTLINED_FUNCTION_65_19(v2, (uint64_t)sub_1C2B7118C);
  return sub_1C2A3CC34(v3);
}

uint64_t sub_1C2B7118C(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_15_59(a1);
  OUTLINED_FUNCTION_36_1(v1, &qword_1ED7A8760);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

#error "1C2B71218: call analysis failed (funcsize=45)"

uint64_t sub_1C2B712A8()
{
  uint64_t result;

  type metadata accessor for ResponseFactory();
  result = swift_allocObject();
  *(_QWORD *)(result + 40) = &type metadata for DialogUsageProvider;
  *(_QWORD *)(result + 48) = &protocol witness table for DialogUsageProvider;
  qword_1EF7CBFA8 = result;
  return result;
}

uint64_t sub_1C2B712E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C28CC838;
  return static ErrorTemplates.appDoesNotSupportIntent(appDisplayInfo:)(a1, a2);
}

uint64_t sub_1C2B71344(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[107] = a1;
  v2 = sub_1C2CFBCE8();
  v1[113] = v2;
  v1[114] = *(_QWORD *)(v2 - 8);
  v1[115] = swift_task_alloc();
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268) - 8);
  v1[116] = v3;
  v1[117] = *(_QWORD *)(v3 + 64);
  v1[118] = swift_task_alloc();
  v1[119] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1C2B713E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_105();
  v1 = v0[107];
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)(v0 + 87));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 87));
  v2 = sub_1C2CFD350();
  RefreshableDeviceState.siriLocale.getter(v2);
  v3 = sub_1C2CFD3EC();
  if (v4)
  {
    v0[103] = v3;
    v0[104] = v4;
    OUTLINED_FUNCTION_59_31();
    v0[105] = v5;
    v0[106] = 0xE900000000000065;
    sub_1C28BFDE4();
    sub_1C28BFD6C();
    sub_1C2CFDD04();
    OUTLINED_FUNCTION_97();
  }
  OUTLINED_FUNCTION_106_10();
  swift_initStackObject();
  OUTLINED_FUNCTION_38_0();
  AppInformationResolver.init(app:)(v1);
}

uint64_t sub_1C2B716BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 984) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B716DC()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_176();
  v1 = (void *)v0[122];
  v2 = (void *)v0[121];
  v3 = v0[101];
  v4 = v0[102];
  OUTLINED_FUNCTION_11_1();
  sub_1C2B73B4C(v3, v4, v1);

  OUTLINED_FUNCTION_64_16();
  OUTLINED_FUNCTION_174();
  return swift_asyncLet_finish();
}

uint64_t sub_1C2B71748()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B71754()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_134_10();
  OUTLINED_FUNCTION_36_1(v1, &qword_1EF790268);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 976));
}

uint64_t sub_1C2B717AC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 968);

  OUTLINED_FUNCTION_64_16();
  return OUTLINED_FUNCTION_73_21();
}

uint64_t sub_1C2B717F4()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B71800()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_134_10();
  OUTLINED_FUNCTION_36_1(v1, &qword_1EF790268);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B71848(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[99] = a2;
  v2[93] = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A9E20);
  v2[105] = swift_task_alloc();
  v3 = sub_1C2CFB8BC();
  v2[106] = v3;
  v2[107] = *(_QWORD *)(v3 - 8);
  v2[108] = swift_task_alloc();
  v4 = sub_1C2CFB910();
  v2[109] = v4;
  v2[110] = *(_QWORD *)(v4 - 8);
  v2[111] = swift_task_alloc();
  v2[112] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2B71908()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  void (*v7)(_QWORD *, _QWORD);
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t EnumTagSinglePayload;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v25;

  OUTLINED_FUNCTION_57();
  v1 = v0[107];
  v2 = v0[99];
  swift_asyncLet_begin();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D88500]), sel_init);
  v0[113] = v3;
  sub_1C2CFB904();
  sub_1C2CFB8F8();
  sub_1C2CFB8EC();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF787B40);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2D002E0;
  sub_1C2CFB8B0();
  sub_1C2CFB8D4();
  if (v2)
  {
    v7 = (void (*)(_QWORD *, _QWORD))sub_1C2CFB8C8();
    if (*v6)
    {
      v8 = v6;
      v9 = v0[108];
      v10 = v0[107];
      v25 = v0[106];
      sub_1C2CFB8B0();
      sub_1C2A70C28();
      v11 = *(_QWORD *)(*v8 + 16);
      sub_1C29429E0(v11);
      v12 = *v8;
      *(_QWORD *)(v12 + 16) = v11 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v12 + v5 + v11 * v4, v9, v25);
    }
    v7(v0 + 87, 0);
  }
  v13 = v0[111];
  v14 = v0[110];
  v15 = v0[109];
  v16 = v0[105];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 16))(v13, v0[112], v15);
  sub_1C2CFB8E0();
  v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[114] = v17;
  v17(v13, v15);
  v18 = sub_1C2CFBB8C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v16, 1, v18);
  v20 = 0;
  if ((_DWORD)EnumTagSinglePayload != 1)
  {
    v21 = v0[105];
    v20 = (void *)sub_1C2CFBB44();
    EnumTagSinglePayload = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v21, v18);
  }
  OUTLINED_FUNCTION_34_19(EnumTagSinglePayload, sel_setPunchOutUri_);

  v0[115] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D88510]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
  v22 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v22 + 16) = xmmword_1C2D00370;
  *(_QWORD *)(v22 + 32) = v3;
  sub_1C2CFDFC8();
  v23 = v3;
  OUTLINED_FUNCTION_142_9();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1C2B71BDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 928) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B71BFC()
{
  _QWORD *v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_105();
  v1 = (void *)v0[115];
  v2 = (void (*)(uint64_t, uint64_t))v0[114];
  v3 = (void *)v0[113];
  v4 = v0[112];
  v5 = v0[109];
  v6 = v0[91];
  v7 = v0[92];
  swift_bridgeObjectRetain();
  sub_1C2B73B4C(v6, v7, v1);

  v2(v4, v5);
  return OUTLINED_FUNCTION_56_25();
}

uint64_t sub_1C2B71C84()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B71C90()
{
  uint64_t v0;

  OUTLINED_FUNCTION_96_15();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_4_1(*(_QWORD *)(v0 + 920), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B71CCC()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t);
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = (void *)v0[116];
  v2 = (void *)v0[115];
  v3 = (void (*)(uint64_t, uint64_t))v0[114];
  v4 = (void *)v0[113];
  v5 = v0[112];
  v6 = v0[109];
  type metadata accessor for CommandFailure();
  OUTLINED_FUNCTION_5_2();
  v7 = CommandFailure.init(errorCode:reason:)(-1, 0xD000000000000021, 0x80000001C2D35AE0);
  sub_1C29CD564();
  v0[117] = swift_allocError();
  *v8 = v7;
  swift_willThrow();

  v3(v5, v6);
  return swift_asyncLet_finish();
}

uint64_t sub_1C2B71DC8()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B71DD4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_96_15();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2B71E18(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[21] = a1;
  v2[22] = a2;
  v3 = OUTLINED_FUNCTION_70_0();
  v2[23] = v3;
  v2[24] = *(_QWORD *)(v3 - 8);
  v2[25] = OUTLINED_FUNCTION_7();
  v2[26] = OUTLINED_FUNCTION_0();
  v2[27] = OUTLINED_FUNCTION_39();
  v2[28] = OUTLINED_FUNCTION_78();
  v4 = OUTLINED_FUNCTION_17_24();
  v2[29] = v4;
  v2[30] = *(_QWORD *)(v4 - 8);
  v2[31] = OUTLINED_FUNCTION_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  v2[32] = OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B71EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_176();
  v1 = *(_QWORD *)(v0 + 176);
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_77_24();
  v2 = OUTLINED_FUNCTION_81_17();
  OUTLINED_FUNCTION_100_19(v2);
  OUTLINED_FUNCTION_106_10();
  OUTLINED_FUNCTION_112_9();
  sub_1C2CFD350();
  AppInformationResolver.init(app:)(v1);
}

uint64_t sub_1C2B71FB4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v2 = (_QWORD *)*v1;
  OUTLINED_FUNCTION_65_5();
  v2[34] = v3;
  v2[35] = v4;
  v2[36] = v0;
  OUTLINED_FUNCTION_167_0();
  if (v0)
  {
    OUTLINED_FUNCTION_36_2();
    return OUTLINED_FUNCTION_8_2();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v2[37] = v6;
    OUTLINED_FUNCTION_148(v6, (uint64_t)sub_1C2B72034);
    return static LabelTemplates.no()();
  }
}

uint64_t sub_1C2B72034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v7;

  OUTLINED_FUNCTION_111_3();
  *v7 = *v3;
  v4[38] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4[39] = a2;
    v4[40] = a1;
  }
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B720A4()
{
  _QWORD *v0;
  uint64_t v1;
  Swift::String_optional v2;
  Swift::String_optional v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_149_0();
  sub_1C28BF798(0, &qword_1EF79B610);
  v0[41] = sub_1C2BFB33C();
  OUTLINED_FUNCTION_29();
  v0[42] = sub_1C2BFB33C();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_88_15();
  OUTLINED_FUNCTION_353();
  v1 = qword_1ED7A4228;
  v0[10] = OUTLINED_FUNCTION_49_21();
  v0[11] = &protocol witness table for RefreshableDeviceState;
  v0[7] = v1;
  OUTLINED_FUNCTION_38_0();
  v2 = AceObject.serializeToBase64()();
  v0[43] = v2.value._object;
  v3 = AceObject.serializeToBase64()();
  v0[44] = v3.value._object;
  v4 = (_QWORD *)swift_task_alloc();
  v0[45] = v4;
  *v4 = v0;
  v4[1] = sub_1C2B721BC;
  v5 = OUTLINED_FUNCTION_200(v0[32]);
  return sub_1C2C674E0(v5, (uint64_t)(v0 + 7), v2.value._countAndFlagsBits, (uint64_t)v2.value._object, v3.value._countAndFlagsBits, (uint64_t)v3.value._object);
}

uint64_t sub_1C2B721BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_149();
  OUTLINED_FUNCTION_151();
  *(_QWORD *)(v2 + 368) = v1;
  *(_QWORD *)(v2 + 376) = v0;
  v3 = OUTLINED_FUNCTION_167_0();
  OUTLINED_FUNCTION_36_1(v3, &qword_1ED7A8760);
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

#error "1C2B722D4: call analysis failed (funcsize=74)"

uint64_t sub_1C2B72374()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v1 + 392) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B723C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_176();
  v12 = *(void **)(v10 + 328);
  v11 = *(void **)(v10 + 336);
  v13 = *(_QWORD *)(v10 + 224);

  v14 = sub_1C28E05E4(v13, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_118_11(v14, &qword_1EF790268);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_174();
  return v15(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t sub_1C2B72440()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  sub_1C28BB3A4(*(_QWORD *)(v0 + 256), &qword_1EF790268);
  OUTLINED_FUNCTION_55_21();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B7248C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_205();
  sub_1C28BB3A4(*(_QWORD *)(v0 + 256), &qword_1EF790268);
  OUTLINED_FUNCTION_55_21();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B724D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_205();
  v1 = *(void **)(v0 + 328);

  OUTLINED_FUNCTION_118_11(v2, &qword_1EF790268);
  OUTLINED_FUNCTION_55_21();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B72530()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_205();
  v2 = *(void **)(v0 + 328);
  v1 = *(void **)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 224);

  v4 = sub_1C28E05E4(v3, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_118_11(v4, &qword_1EF790268);
  OUTLINED_FUNCTION_55_21();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_24_0();
  return OUTLINED_FUNCTION_5_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B725A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[12] = a1;
  v2 = OUTLINED_FUNCTION_70_0();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = OUTLINED_FUNCTION_7();
  v1[16] = OUTLINED_FUNCTION_0();
  v1[17] = OUTLINED_FUNCTION_39();
  v1[18] = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B72600()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_61_12();
  v1 = OUTLINED_FUNCTION_27_44();
  OUTLINED_FUNCTION_87_16(v1, (uint64_t)&protocol witness table for RefreshableDeviceState);
  OUTLINED_FUNCTION_38_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_95_2();
  *(_QWORD *)(v0 + 152) = v2;
  v3 = OUTLINED_FUNCTION_65_19(v2, (uint64_t)sub_1C2B7268C);
  return sub_1C2C67924(v3);
}

uint64_t sub_1C2B7268C(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_15_59(a1);
  OUTLINED_FUNCTION_36_1(v1, &qword_1ED7A8760);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

#error "1C2B72718: call analysis failed (funcsize=45)"

uint64_t sub_1C2B727A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[12] = a1;
  v2 = OUTLINED_FUNCTION_70_0();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = OUTLINED_FUNCTION_7();
  v1[16] = OUTLINED_FUNCTION_0();
  v1[17] = OUTLINED_FUNCTION_39();
  v1[18] = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B72804()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_61_12();
  v1 = OUTLINED_FUNCTION_27_44();
  OUTLINED_FUNCTION_87_16(v1, (uint64_t)&protocol witness table for RefreshableDeviceState);
  OUTLINED_FUNCTION_38_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_95_2();
  *(_QWORD *)(v0 + 152) = v2;
  v3 = OUTLINED_FUNCTION_65_19(v2, (uint64_t)sub_1C2B72890);
  return sub_1C2C67B0C(v3);
}

uint64_t sub_1C2B72890(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_15_59(a1);
  OUTLINED_FUNCTION_36_1(v1, &qword_1ED7A8760);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

#error "1C2B7291C: call analysis failed (funcsize=45)"

uint64_t sub_1C2B729AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[12] = a1;
  v2 = OUTLINED_FUNCTION_70_0();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = OUTLINED_FUNCTION_7();
  v1[16] = OUTLINED_FUNCTION_0();
  v1[17] = OUTLINED_FUNCTION_39();
  v1[18] = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B72A08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_61_12();
  v1 = OUTLINED_FUNCTION_27_44();
  OUTLINED_FUNCTION_87_16(v1, (uint64_t)&protocol witness table for RefreshableDeviceState);
  OUTLINED_FUNCTION_38_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_95_2();
  *(_QWORD *)(v0 + 152) = v2;
  v3 = OUTLINED_FUNCTION_65_19(v2, (uint64_t)sub_1C2B72A94);
  return sub_1C2A3CDEC(v3);
}

uint64_t sub_1C2B72A94(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_15_59(a1);
  OUTLINED_FUNCTION_36_1(v1, &qword_1ED7A8760);
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

#error "1C2B72B20: call analysis failed (funcsize=45)"

uint64_t sub_1C2B72BB0()
{
  OUTLINED_FUNCTION_141_1();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B72BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_102_12(v1, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return OUTLINED_FUNCTION_29_5(v2);
}

uint64_t sub_1C2B72C38()
{
  uint64_t v0;

  OUTLINED_FUNCTION_130_9();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B72C6C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_102_12(v1, (uint64_t (*)(_QWORD))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_130_9();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_29_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B72CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return swift_task_switch();
}

uint64_t sub_1C2B72CD0()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_61_12();
  v1 = OUTLINED_FUNCTION_27_44();
  OUTLINED_FUNCTION_87_16(v1, (uint64_t)&protocol witness table for RefreshableDeviceState);
  OUTLINED_FUNCTION_38_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_95_2();
  v0[14] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1C2B72D70;
  return static ResponseTemplates.continueInApp(appDisplayInfo:deviceState:)(v0[12], v0[13], (uint64_t)(v0 + 2));
}

uint64_t sub_1C2B72D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_169_4();
  v3 = OUTLINED_FUNCTION_97_18(v2);
  OUTLINED_FUNCTION_36_1(v3, &qword_1ED7A8760);
  if (!v0)
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B72DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[237] = a4;
  v4[236] = a3;
  v4[235] = a2;
  v4[229] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v4[238] = swift_task_alloc();
  type metadata accessor for AceOutput();
  v4[239] = swift_task_alloc();
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268) - 8);
  v4[240] = v5;
  v4[241] = *(_QWORD *)(v5 + 64);
  v4[242] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2B72E78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v8;
  void *v9;

  v1 = v0[242];
  v2 = v0[240];
  v9 = (void *)v0[237];
  v8 = (void *)v0[236];
  v3 = v0[235];
  v4 = v0[229];
  swift_asyncLet_begin();
  sub_1C2AB9040(v3, v1);
  v5 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = swift_allocObject();
  v0[243] = v6;
  sub_1C2AB913C(v1, v6 + v5);
  OUTLINED_FUNCTION_52_4();
  swift_asyncLet_begin();
  sub_1C28BF798(0, (unint64_t *)&qword_1EF79B6A0);
  v0[244] = static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(v4, v8, v9);
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1C2B72FC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1960) = v0;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B72FE4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t i;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 1384);
  v2 = *(_QWORD *)(v0 + 1392);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_12();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_4_0();
  sub_1C28F8E6C(v1, v2);
  v3 = off_1ED7A5DA8;
  swift_bridgeObjectRetain();
  if (v3 != (void *)-1)
    swift_once();
  v4 = *(unint64_t **)(v0 + 1912);
  v5 = *(_QWORD *)(v0 + 1904);
  sub_1C28C72CC(v0 + 1448);
  OUTLINED_FUNCTION_232_0();
  v6 = qword_1ED7A4228;
  *(_QWORD *)(v0 + 1552) = OUTLINED_FUNCTION_49_21();
  *(_QWORD *)(v0 + 1560) = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)(v0 + 1528) = v6;
  v7 = OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_30_0(v5, v8, v9, v7);
  *(_QWORD *)(v0 + 1640) = 0;
  *(_OWORD *)(v0 + 1608) = 0u;
  *(_OWORD *)(v0 + 1624) = 0u;
  OUTLINED_FUNCTION_38_0();
  v10 = MEMORY[0x1E0DEE9D8];
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  OUTLINED_FUNCTION_93_17(v11, (uint64_t *)&unk_1ED7A8750);
  sub_1C28BB3A4(v5, &qword_1ED7A7A10);
  OUTLINED_FUNCTION_353();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_254();
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_34_1();
  sub_1C28F90E8(v1, v2);
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D883A8]), sel_init, v0 + 1608);
  *(_QWORD *)(v0 + 1968) = v12;
  objc_msgSend(v12, sel_setCode_, *MEMORY[0x1E0D88FD8]);
  v13 = *v4;
  v26 = v10;
  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = OUTLINED_FUNCTION_6_2();
    if (v14)
      goto LABEL_5;
LABEL_18:
    OUTLINED_FUNCTION_70();
    v19 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    v20 = *(void **)(v0 + 1952);
    OUTLINED_FUNCTION_70();
    sub_1C2B73A78(v19, v12);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
    v21 = OUTLINED_FUNCTION_5_2();
    *(_OWORD *)(v21 + 16) = xmmword_1C2D00370;
    *(_QWORD *)(v21 + 32) = v12;
    v27 = v21;
    sub_1C2CFDFC8();
    v22 = v12;
    sub_1C2B73ADC(v27, v20);
    sub_1C28C72CC(v0 + 1688);
    __swift_destroy_boxed_opaque_existential_1(v0 + 1688);
    type metadata accessor for SiriKitAceViewBuilder();
    v23 = (_QWORD *)OUTLINED_FUNCTION_5_2();
    v24 = OUTLINED_FUNCTION_38_0();
    sub_1C2C13024(v24, v23);
    *(_QWORD *)(v0 + 1976) = v25;
    return swift_asyncLet_get_throwing();
  }
  OUTLINED_FUNCTION_6_2();
  result = sub_1C2CFE820();
  v14 = result;
  if (!result)
    goto LABEL_18;
LABEL_5:
  if (v14 >= 1)
  {
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
        v17 = (id)MEMORY[0x1C3BC9170](i, v13);
      else
        v17 = *(id *)(v13 + 8 * i + 32);
      v18 = v17;
      *(_QWORD *)(v0 + 1784) = &unk_1EF7D3698;
      if (swift_dynamicCastObjCProtocolConditional())
      {
        MEMORY[0x1C3BC8A44]();
        if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C2CFDFEC();
        sub_1C2CFE040();
        sub_1C2CFDFC8();
      }
      else
      {

      }
    }
    OUTLINED_FUNCTION_70();
    v19 = v26;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B733BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1984) = v0;
  if (v0)
    swift_release();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B73400()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  OUTLINED_FUNCTION_105();
  v1 = (_QWORD *)v0[247];
  v2 = (void *)v0[246];
  v3 = (void *)v0[244];
  v4 = v0[239];
  v5 = v0[221];
  v6 = v0[222];
  OUTLINED_FUNCTION_4_0();
  v7 = v3;
  v0[249] = sub_1C2B73B9C(v5, v6, (uint64_t)v7, v1);

  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_143();

  sub_1C28E05E4(v4, (uint64_t (*)(_QWORD))type metadata accessor for AceOutput);
  OUTLINED_FUNCTION_64_16();
  return OUTLINED_FUNCTION_56_25();
}

uint64_t sub_1C2B73498()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B734A4()
{
  OUTLINED_FUNCTION_143_7();
  OUTLINED_FUNCTION_89_17();
  return OUTLINED_FUNCTION_69_6();
}

uint64_t sub_1C2B734E0()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B734EC()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  return OUTLINED_FUNCTION_4_1(*(_QWORD *)(v0 + 1992), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B73538()
{
  uint64_t v0;

  OUTLINED_FUNCTION_64_16();
  return OUTLINED_FUNCTION_69_6();
}

uint64_t sub_1C2B73578()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B73584()
{
  OUTLINED_FUNCTION_143_7();
  OUTLINED_FUNCTION_89_17();
  return OUTLINED_FUNCTION_69_6();
}

uint64_t sub_1C2B735C0()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B735CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_105_14();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B73604()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_205();
  v1 = *(void **)(v0 + 1952);
  v2 = *(_QWORD *)(v0 + 1912);

  sub_1C28E05E4(v2, (uint64_t (*)(_QWORD))type metadata accessor for AceOutput);
  OUTLINED_FUNCTION_64_16();
  return swift_asyncLet_finish();
}

uint64_t sub_1C2B73670()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B7367C()
{
  OUTLINED_FUNCTION_143_7();
  OUTLINED_FUNCTION_89_17();
  return OUTLINED_FUNCTION_69_6();
}

uint64_t sub_1C2B736B8()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B736C4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_105_14();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_14_0();
  return OUTLINED_FUNCTION_8_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B736FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return swift_task_switch();
}

uint64_t sub_1C2B73714()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  OUTLINED_FUNCTION_61_12();
  v1 = OUTLINED_FUNCTION_27_44();
  OUTLINED_FUNCTION_87_16(v1, (uint64_t)&protocol witness table for RefreshableDeviceState);
  OUTLINED_FUNCTION_38_0();
  v2 = (_QWORD *)OUTLINED_FUNCTION_95_2();
  *(_QWORD *)(v0 + 104) = v2;
  *v2 = v0;
  v2[1] = sub_1C2B737B4;
  return static ErrorTemplates.appLaunchFailed(deviceState:)(*(_QWORD *)(v0 + 96), v0 + 16);
}

uint64_t sub_1C2B737B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_169_4();
  OUTLINED_FUNCTION_295();
  *(_QWORD *)(v2 + 112) = v0;
  v3 = swift_task_dealloc();
  OUTLINED_FUNCTION_36_1(v3, &qword_1ED7A8760);
  if (!v0)
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B73814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1C2B73868;
  return static LabelTemplates.openApp(appDisplayInfo:)(a2);
}

uint64_t sub_1C2B73868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_34_43();
  if (v1)
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B738BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1C2B73868;
  return sub_1C29A1C30();
}

uint64_t sub_1C2B73904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1C2B73958;
  return static LabelTemplates.openApp(appDisplayInfo:)(a2);
}

uint64_t sub_1C2B73958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_34_43();
  if (v1)
    return OUTLINED_FUNCTION_10_5(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v0;
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_8_2();
}

uint64_t sub_1C2B739AC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);

  v1 = v0[4];
  v2 = (_QWORD *)v0[2];
  *v2 = v0[5];
  v2[1] = v1;
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_92();
  return v3();
}

uint64_t sub_1C2B739CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  OUTLINED_FUNCTION_48_28();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B72CB8(v2, v3);
}

uint64_t sub_1C2B73A24()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  OUTLINED_FUNCTION_48_28();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B73814(v2, v3);
}

void sub_1C2B73A78(uint64_t a1, void *a2)
{
  id v3;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EF787BB0);
  v3 = (id)sub_1C2CFDF98();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setCommands_, v3);

}

void sub_1C2B73ADC(uint64_t a1, void *a2)
{
  id v3;

  sub_1C28BF798(0, (unint64_t *)&unk_1EF79B6B0);
  v3 = (id)sub_1C2CFDF98();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setCallbacks_, v3);

}

void sub_1C2B73B4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1C2CFDD34();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setText_, v4);

}

uint64_t sub_1C2B73B9C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v8 = a4[12];
  v9 = a4[13];
  __swift_project_boxed_opaque_existential_1(a4 + 9, v8);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9) & 1) != 0)
    return sub_1C2B73C9C(a1, a2, a3, (uint64_t)a4);
  sub_1C2C12BAC(a3, a1, a2);
  v11 = swift_beginAccess();
  MEMORY[0x1C3BC8A44](v11);
  sub_1C29429C4(*(_QWORD *)((a4[4] & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_1C2CFE040();
  sub_1C2CFDFC8();
  swift_endAccess();
  return sub_1C2CFD350();
}

uint64_t sub_1C2B73C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  sub_1C2C12D20(a3, a1, a2);
  v5 = swift_beginAccess();
  MEMORY[0x1C3BC8A44](v5);
  sub_1C29429C4(*(_QWORD *)((*(_QWORD *)(a4 + 24) & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_1C2CFE040();
  sub_1C2CFDFC8();
  swift_endAccess();
  return sub_1C2CFD350();
}

uint64_t sub_1C2B73D34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  OUTLINED_FUNCTION_48_28();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B712E8(v2, v3);
}

uint64_t objectdestroyTm_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = OUTLINED_FUNCTION_53_27();
  if (!__swift_getEnumTagSinglePayload(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1C2B73E14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF790268);
  OUTLINED_FUNCTION_48_28();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_63_2(v1);
  return sub_1C2B73904(v2, v3);
}

uint64_t OUTLINED_FUNCTION_15_59(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v4 + 160) = a1;
  *(_QWORD *)(v4 + 168) = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_16_52()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_27_44()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0);
  return type metadata accessor for RefreshableDeviceState();
}

uint64_t OUTLINED_FUNCTION_31_43(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 96);
}

uint64_t OUTLINED_FUNCTION_34_43()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_38_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 0, 1, a4);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_41_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  __swift_storeEnumTagSinglePayload(v4, 1, 1, a4);
  return type metadata accessor for AceOutput();
}

uint64_t OUTLINED_FUNCTION_45_28(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1C28BB3A4(v2, a2);
}

uint64_t OUTLINED_FUNCTION_49_21()
{
  return type metadata accessor for RefreshableDeviceState();
}

uint64_t OUTLINED_FUNCTION_55_21()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_56_25()
{
  return swift_asyncLet_finish();
}

uint64_t OUTLINED_FUNCTION_64_16()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_65_19@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_67_21()
{
  uint64_t v0;

  sub_1C28C72CC(v0);
}

uint64_t OUTLINED_FUNCTION_71_24()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_73_21()
{
  return swift_asyncLet_finish();
}

uint64_t OUTLINED_FUNCTION_75_23()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_76_22()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_87_16@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = result;
  v3[6] = a2;
  v3[2] = v2;
  return result;
}

void OUTLINED_FUNCTION_88_15()
{
  uint64_t v0;

  sub_1C28C72CC(v0);
}

uint64_t OUTLINED_FUNCTION_89_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_90_14()
{
  return sub_1C2BF2A18();
}

uint64_t OUTLINED_FUNCTION_94_18@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 552);
  v1[24] = v2;
  v1[25] = a1;
  v1[21] = v4;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_96_15()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_97_18@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  *v1 = *v3;
  *(_QWORD *)(a1 + 120) = v2;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_98_14()
{
  return sub_1C2CFD428();
}

void OUTLINED_FUNCTION_100_19(uint64_t a1)
{
  RefreshableDeviceState.siriLocale.getter(a1);
}

uint64_t OUTLINED_FUNCTION_101_16()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[5] + 96))(v0[6], v0[4]);
}

uint64_t OUTLINED_FUNCTION_102_12(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  return sub_1C28E05E4(v2, a2);
}

uint64_t OUTLINED_FUNCTION_104_16()
{
  return sub_1C2CFDFEC();
}

uint64_t OUTLINED_FUNCTION_106_10()
{
  return type metadata accessor for AppInformationResolver();
}

uint64_t OUTLINED_FUNCTION_111_13()
{
  return sub_1C2CFDD04();
}

uint64_t *OUTLINED_FUNCTION_126_11@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  v2[3] = a1;
  v2[4] = a2;
  return __swift_allocate_boxed_opaque_existential_0(v2);
}

uint64_t OUTLINED_FUNCTION_130_9()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_131_11()
{
  uint64_t v0;

  sub_1C28C72CC(v0);
}

uint64_t OUTLINED_FUNCTION_133_9()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C2AB9040(v0, v1);
}

uint64_t OUTLINED_FUNCTION_139_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1C2AB913C(v2, a1 + v1);
}

uint64_t OUTLINED_FUNCTION_146_6(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1C28BB3A4(v2, a2);
}

uint64_t sub_1C2B7417C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void sub_1C2B7419C()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 80))();
  OUTLINED_FUNCTION_1_0();
}

void AnyPromptFlow.__allocating_init<A>(_:)()
{
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_24_3();
  AnyPromptFlow.init<A>(_:)();
  OUTLINED_FUNCTION_18();
}

void AnyPromptFlow.init<A>(_:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_108_18();
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_86_16();
  v1[6] = (uint64_t)sub_1C2B7427C(v7, v8, v9, v10);
  v1[7] = v11;
  v12 = OUTLINED_FUNCTION_193_2();
  v1[8] = (uint64_t)sub_1C2B74344(v12, v13, v14, v15);
  v1[9] = v16;
  OUTLINED_FUNCTION_92_19(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  OUTLINED_FUNCTION_132_10();
  v17 = (char *)swift_allocObject();
  OUTLINED_FUNCTION_84_19(v17);
  v1[10] = (uint64_t)sub_1C28E60D8;
  v1[11] = v3;
  v1[5] = v0;
  __swift_allocate_boxed_opaque_existential_1Tm(v1 + 2);
  OUTLINED_FUNCTION_111_14(v18, v2);
  OUTLINED_FUNCTION_1();
}

uint64_t (*sub_1C2B7427C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1, a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return sub_1C2B7D89C;
}

void *sub_1C2B74344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1, a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = a2;
  *((_QWORD *)v11 + 3) = a3;
  *((_QWORD *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a3);
  return &unk_1EF79C220;
}

uint64_t sub_1C2B7440C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))() & 1;
}

void sub_1C2B74430()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 48))();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B74450(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1C2B74468()
{
  uint64_t v0;
  char v1;

  v1 = OUTLINED_FUNCTION_181_4();
  return OUTLINED_FUNCTION_126_1(v1 & 1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C2B74490(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B744A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t DynamicType;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[4];

  v3 = v2;
  v29 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  MEMORY[0x1E0C80A78](v5, v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28BB340(v2 + 16, (uint64_t)v31);
  __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  DynamicType = swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  v30 = DynamicType;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793BC8);
  v10 = sub_1C2CFDDAC();
  v12 = v11;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v13 = sub_1C2CFD878();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED7AA1B0);
  swift_bridgeObjectRetain();
  v14 = sub_1C2CFD86C();
  v15 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v14, v15))
  {
    v27 = a2;
    v28 = v8;
    v16 = v10;
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v31[0] = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    v30 = sub_1C28BB120(v16, v12, v31);
    a2 = v27;
    v8 = v28;
    sub_1C2CFE4D8();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v18, -1, -1);
    MEMORY[0x1C3BC9DE8](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v19 = sub_1C2CFD86C();
  v20 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1C28B6000, v19, v20, "Synchronous execute function called directly on AnyPromptFlow. This will become a fatal error in the future.", v21, 2u);
    MEMORY[0x1C3BC9DE8](v21, -1, -1);
  }

  v23 = *(_QWORD *)(v3 + 64);
  v22 = *(_QWORD *)(v3 + 72);
  v24 = sub_1C2CFE10C();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v24);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = 0;
  v25[3] = 0;
  v25[4] = v29;
  v25[5] = a2;
  v25[6] = v23;
  v25[7] = v22;
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2948F68();
  return swift_release();
}

void sub_1C2B747BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24[4];

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v3 = v2;
  v23 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  MEMORY[0x1E0C80A78](v5, v6);
  OUTLINED_FUNCTION_332();
  sub_1C28BB340(v0 + 16, (uint64_t)v24);
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793BC8);
  v7 = OUTLINED_FUNCTION_167_6();
  v9 = v8;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_118();
  v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED7AA1B0);
  swift_bridgeObjectRetain();
  v12 = sub_1C2CFD86C();
  v13 = sub_1C2CFE2B0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = v7;
    v15 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v24[0] = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain();
    v16 = sub_1C28BB120(v14, v9, v24);
    OUTLINED_FUNCTION_152_0(v16);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_29_2();
  sub_1C2CFD86C();
  v17 = OUTLINED_FUNCTION_123();
  if (os_log_type_enabled(v11, v17))
  {
    v18 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1C28B6000, v11, v17, "Synchronous execute function called directly on AnyPromptFlow. This will become a fatal error in the future.", v18, 2u);
    OUTLINED_FUNCTION_11_0();
  }

  v20 = *(_QWORD *)(v1 + 64);
  v19 = *(_QWORD *)(v1 + 72);
  v21 = sub_1C2CFE10C();
  OUTLINED_FUNCTION_114_14(v21);
  v22 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v23;
  v22[5] = v3;
  v22[6] = v20;
  v22[7] = v19;
  sub_1C2CFD350();
  OUTLINED_FUNCTION_221();
  sub_1C2948F68();
  swift_release();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2B74A44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1C2B74A5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_22_5();
  v1 = (_QWORD *)OUTLINED_FUNCTION_75(v0);
  v2 = OUTLINED_FUNCTION_19_3(v1);
  return OUTLINED_FUNCTION_126_1(v2, v3);
}

uint64_t sub_1C2B74A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

void sub_1C2B74AA4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  sub_1C28BB340(v0 + 16, (uint64_t)&v2);
  v1 = OUTLINED_FUNCTION_62_15();
  OUTLINED_FUNCTION_72_8(v1);
  OUTLINED_FUNCTION_21_1();
}

uint64_t _s11SiriKitFlow023AnyRequestTCCAcceptanceC0Cfd_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t AnyPromptFlow.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_138_11();
  swift_release();
  swift_release();
  return v0;
}

uint64_t AnyPromptFlow.__deallocating_deinit()
{
  AnyPromptFlow.deinit();
  OUTLINED_FUNCTION_141_9();
  return swift_deallocClassInstance();
}

void AnyNeedsValueFlow.__allocating_init<A>(_:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_5_2();
  v0 = OUTLINED_FUNCTION_24_3();
  AnyNeedsValueFlow.init<A>(_:)(v0);
  OUTLINED_FUNCTION_18();
}

uint64_t AnyNeedsValueFlow.__deallocating_deinit()
{
  AnyPromptFlow.deinit();
  OUTLINED_FUNCTION_141_9();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B74BBC()
{
  char v0;

  sub_1C2B74430();
  return v0 & 1;
}

uint64_t sub_1C2B74BE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C2990D90;
  return sub_1C2B74490(a1);
}

void sub_1C2B74C30()
{
  sub_1C2B747BC();
}

uint64_t sub_1C2B74C50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28E1BA0;
  return sub_1C2B74A94(a1);
}

void sub_1C2B74CA4()
{
  sub_1C2B7419C();
}

uint64_t sub_1C2B74CC8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C2992EB8;
  return sub_1C2B74490(a1);
}

uint64_t sub_1C2B74D18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B74A94(a1);
}

void _s11SiriKitFlow013AnyNeedsValueC0CyACyxGqd__cAA0C0Rd__AA12PromptResultOyAA06IntentG6AnswerVyxGG04ExitF0Rtd__lufc_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  OUTLINED_FUNCTION_332();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, a1, a2);
  AnyPromptFlow.init<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, a2);
  OUTLINED_FUNCTION_8_0();
}

uint64_t AnyRequestTCCAcceptanceFlow.__deallocating_deinit()
{
  _s11SiriKitFlow023AnyRequestTCCAcceptanceC0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B74E20()
{
  return sub_1C2B7440C() & 1;
}

uint64_t sub_1C2B74E44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF79C1F0 + dword_1EF79C1F0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C2992EB8;
  return v5(a1);
}

uint64_t sub_1C2B74EAC(uint64_t a1, uint64_t a2)
{
  return sub_1C2B744A0(a1, a2);
}

uint64_t sub_1C2B74ECC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EF79C1E0 + dword_1EF79C1E0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return v5(a1);
}

uint64_t sub_1C2B74F38()
{
  return sub_1C2B7417C();
}

void sub_1C2B74F58()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B74F78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B74F88()
{
  uint64_t v0;
  char v1;

  v1 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 16))(*(_QWORD *)(v0 + 16));
  return OUTLINED_FUNCTION_126_1(v1 & 1, *(uint64_t (**)(void))(v0 + 8));
}

void sub_1C2B74FB8()
{
  sub_1C2B7509C();
}

uint64_t sub_1C2B74FD8()
{
  char v0;

  sub_1C2B74F58();
  return v0 & 1;
}

uint64_t sub_1C2B74FFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C2992EB8;
  return sub_1C2B74F78(a1);
}

void sub_1C2B7504C()
{
  sub_1C2B74FB8();
}

uint64_t sub_1C2B75070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_28_4();
}

void sub_1C2B75080()
{
  sub_1C2B7509C();
}

void sub_1C2B7509C()
{
  uint64_t v0;
  uint64_t v1;
  const char *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22[4];

  OUTLINED_FUNCTION_9();
  v21 = v1;
  v3 = v2;
  v4 = v0;
  v6 = v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  MEMORY[0x1E0C80A78](v7, v8);
  OUTLINED_FUNCTION_332();
  sub_1C28BB340(v0 + 64, (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF793BC8);
  v9 = OUTLINED_FUNCTION_167_6();
  v11 = v10;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v12 = OUTLINED_FUNCTION_118();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED7AA1B0);
  swift_bridgeObjectRetain();
  sub_1C2CFD86C();
  v14 = OUTLINED_FUNCTION_123();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)OUTLINED_FUNCTION_6_0();
    v22[0] = OUTLINED_FUNCTION_6_0();
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain();
    v16 = sub_1C28BB120(v9, v11, v22);
    OUTLINED_FUNCTION_152_0(v16);
    sub_1C2CFE4D8();
    OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v13, v14, v3, v15);
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_11_0();
  }

  OUTLINED_FUNCTION_29_2();
  v18 = *(_QWORD *)(v4 + 32);
  v17 = *(_QWORD *)(v4 + 40);
  v19 = sub_1C2CFE10C();
  OUTLINED_FUNCTION_114_14(v19);
  v20 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v21;
  v20[5] = v6;
  v20[6] = v18;
  v20[7] = v17;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_221();
  sub_1C2948F68();
  swift_release();
  OUTLINED_FUNCTION_1();
}

void sub_1C2B752C4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  sub_1C28BB340(v0 + 64, (uint64_t)&v2);
  v1 = OUTLINED_FUNCTION_62_15();
  OUTLINED_FUNCTION_72_8(v1);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_1C2B75304(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C2992EB8;
  return sub_1C2B75070(a1);
}

void sub_1C2B75354()
{
  sub_1C2B75080();
}

uint64_t sub_1C2B75374@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)();

  v5 = *a1;
  v6 = a1[1];
  if (*a1)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D818;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B753E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D7C8;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *a2 = (uint64_t)v6;
  a2[1] = v5;
  return result;
}

uint64_t (*RCHChildFlowProducers.needsValueFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B75480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)();

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D79C;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B754F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D76C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 16);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t (*RCHChildFlowProducers.needsConfirmationFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B7558C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)();

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D740;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B755FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D710;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 32);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

uint64_t (*RCHChildFlowProducers.needsDisambiguationFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B75698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)();

  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D6E4;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B75708(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D6B4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 48);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v5;
  return result;
}

void RCHChildFlowProducers.needsExecuteIntentFlowCompletion.setter()
{
  sub_1C2B76B70();
}

uint64_t (*RCHChildFlowProducers.needsExecuteIntentFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B757B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)();

  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D688;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B75820(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;

  v23 = *a1;
  v13 = *a2;
  v14 = *a3;
  v15 = *a4;
  v16 = *a5;
  v17 = a5[1];
  v18 = *a6;
  v20 = *a7;
  v19 = a7[1];
  v21 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v21[2] = a11;
  v21[3] = v20;
  v21[4] = v19;
  OUTLINED_FUNCTION_221();
  a8(v23, v13, v14, v15, v16, v17, v18, a13, v21);
  return OUTLINED_FUNCTION_3_46();
}

uint64_t sub_1C2B758C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D658;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 64);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 64) = v6;
  *(_QWORD *)(a2 + 72) = v5;
  return result;
}

uint64_t sub_1C2B75954(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(_QWORD **, uint64_t *, uint64_t *, uint64_t *, _QWORD *, uint64_t *, _QWORD *), uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[2];
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v14 = *a1;
  v22 = a2;
  v23 = a1;
  v20 = a4;
  v21 = a3;
  v19[0] = a5;
  v19[1] = a6;
  v18 = a7;
  v15 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v15[2] = *(_QWORD *)(v14 + 80);
  v15[3] = *(_QWORD *)(v14 + 88);
  v15[4] = a8;
  v15[5] = a9;
  v17[0] = a13;
  v17[1] = v15;
  OUTLINED_FUNCTION_52_4();
  a10(&v23, &v22, &v21, &v20, v19, &v18, v17);
  return swift_release();
}

uint64_t (*RCHChildFlowProducers.unsupportedValueFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B75A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);

  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D634;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)(uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B75A80(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v11 = *a1;
  v12 = *a2;
  v13 = *a3;
  v14 = *a4;
  v15 = *a5;
  v16 = a5[1];
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a8;
  v17[3] = a9;
  v17[4] = v15;
  v17[5] = v16;
  sub_1C2CFD350();
  a6(v11, v12, v13, v14, sub_1C2B7DB24, v17);
  return swift_release();
}

uint64_t sub_1C2B75B34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D604;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 80);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 80) = v6;
  *(_QWORD *)(a2 + 88) = v5;
  return result;
}

uint64_t (*RCHChildFlowProducers.confirmIntentFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B75BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D5B0;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B75C40(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D580;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 96);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 96) = v6;
  *(_QWORD *)(a2 + 104) = v5;
  return result;
}

uint64_t sub_1C2B75CCC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD **, uint64_t *, uint64_t *, uint64_t *, _QWORD *), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  _QWORD *v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v13 = *a1;
  v19 = a2;
  v20 = a1;
  v17 = a4;
  v18 = a3;
  v14 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v14[2] = *(_QWORD *)(v13 + 80);
  v14[3] = *(_QWORD *)(v13 + 88);
  v14[4] = a5;
  v14[5] = a6;
  v16[0] = a10;
  v16[1] = v14;
  OUTLINED_FUNCTION_52_4();
  a7(&v20, &v19, &v18, &v17, v16);
  return swift_release();
}

uint64_t (*RCHChildFlowProducers.handleIntentFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B75D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D54C;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B75DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_9();
  v12 = v11;
  v14 = *v13;
  v16 = *v15;
  v18 = *v17;
  v20 = *v19;
  v23 = *v21;
  v22 = v21[1];
  v24 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v22;
  OUTLINED_FUNCTION_29_3();
  v12(v14, v16, v18, v20, a11, v24);
  return swift_release();
}

uint64_t sub_1C2B75E74(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D544;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 112);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 112) = v6;
  *(_QWORD *)(a2 + 120) = v5;
  return result;
}

uint64_t sub_1C2B75F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, uint64_t *, uint64_t *, uint64_t *, _QWORD *))
{
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = a2;
  v16 = a1;
  v13 = a4;
  v14 = a3;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a5;
  *(_QWORD *)(v10 + 24) = a6;
  v12[0] = sub_1C2AAC108;
  v12[1] = v10;
  sub_1C2CFD350();
  a7(&v16, &v15, &v14, &v13, v12);
  return swift_release();
}

uint64_t (*RCHChildFlowProducers.continueInAppFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B75FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t, uint64_t *, uint64_t *, uint64_t *);

  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D520;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)(uint64_t *, uint64_t, uint64_t *, uint64_t *, uint64_t *))v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B76014(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), _QWORD *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v11 = *a1;
  v12 = *a3;
  v13 = *a4;
  v15 = *a5;
  v14 = a5[1];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a9;
  v16[3] = v15;
  v16[4] = v14;
  sub_1C2CFD350();
  a6(v11, a2, v12, v13, sub_1C2B7DB1C, v16);
  return swift_release();
}

uint64_t sub_1C2B760B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D518;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 128);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 128) = v6;
  *(_QWORD *)(a2 + 136) = v5;
  return result;
}

uint64_t sub_1C2B76144(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD **, uint64_t, uint64_t *, uint64_t *, _QWORD *))
{
  uint64_t v11;
  _QWORD *v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v11 = *a1;
  v16 = a3;
  v17 = a1;
  v15 = a4;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = *(_QWORD *)(v11 + 80);
  v12[3] = *(_QWORD *)(v11 + 88);
  v12[4] = a5;
  v12[5] = a6;
  v14[0] = sub_1C2B7D9E8;
  v14[1] = v12;
  sub_1C2CFD350();
  a7(&v17, a2, &v16, &v15, v14);
  return swift_release();
}

uint64_t (*RCHChildFlowProducers.appResolutionFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B76208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *);

  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D4D4;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (void (*)(uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B76278(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t a1), _QWORD *), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v19 = *a1;
  v10 = *a2;
  v11 = *a3;
  v12 = *a4;
  v13 = a4[1];
  v14 = *a5;
  v15 = *a6;
  v16 = a6[1];
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a9;
  v17[3] = a10;
  v17[4] = v15;
  v17[5] = v16;
  sub_1C2CFD350();
  a7(v19, v10, v11, v12, v13, v14, sub_1C2B7D4F8, v17);
  return swift_release();
}

uint64_t sub_1C2B76334(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D4B4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 144);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 144) = v6;
  *(_QWORD *)(a2 + 152) = v5;
  return result;
}

uint64_t sub_1C2B763C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(_QWORD **, uint64_t *, uint64_t *, _QWORD *, uint64_t *, _QWORD *))
{
  uint64_t v11;
  _QWORD *v12;
  _QWORD v14[2];
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v11 = *a1;
  v18 = a2;
  v19 = a1;
  v16[1] = a5;
  v17 = a3;
  v15 = a6;
  v16[0] = a4;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = *(_QWORD *)(v11 + 80);
  v12[3] = *(_QWORD *)(v11 + 88);
  v12[4] = a7;
  v12[5] = a8;
  v14[0] = sub_1C2B7D9E8;
  v14[1] = v12;
  sub_1C2CFD350();
  a9(&v19, &v18, &v17, v16, &v15, v14);
  return swift_release();
}

void RCHChildFlowProducers.appResolutionBeforeNextResolveFlowCompletion.setter()
{
  sub_1C2B7731C();
}

uint64_t (*RCHChildFlowProducers.appResolutionBeforeNextResolveFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B76488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t *, uint64_t *, uint64_t *, uint64_t *);

  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D4A8;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)(uint64_t *, uint64_t *, uint64_t *, uint64_t *))v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B764F8(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, void (*a5)(uint64_t, uint64_t, uint64_t, void (*)(uint64_t), _QWORD *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v10 = *a1;
  v11 = *a2;
  v12 = *a3;
  v14 = *a4;
  v13 = a4[1];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a8;
  v15[3] = v14;
  v15[4] = v13;
  sub_1C2CFD350();
  a5(v10, v11, v12, sub_1C2B7DB1C, v15);
  return swift_release();
}

uint64_t sub_1C2B76594(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D4A0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 160);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 160) = v6;
  *(_QWORD *)(a2 + 168) = v5;
  return result;
}

uint64_t sub_1C2B76620(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD **, uint64_t *, uint64_t *, _QWORD *))
{
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v9 = *a1;
  v14 = a2;
  v15 = a1;
  v13 = a3;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = *(_QWORD *)(v9 + 80);
  v10[3] = *(_QWORD *)(v9 + 88);
  v10[4] = a4;
  v10[5] = a5;
  v12[0] = sub_1C2B7D9E8;
  v12[1] = v10;
  sub_1C2CFD350();
  a6(&v15, &v14, &v13, v12);
  return swift_release();
}

uint64_t (*RCHChildFlowProducers.requestTCCAcceptanceFlowCompletion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B766D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *a1;
  v6 = a1[1];
  if (*a1)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D9C8;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B76744(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D460;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *a2 = (uint64_t)v6;
  a2[1] = v5;
  return result;
}

void RCHChildFlowProducersAsync.needsValueFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RCHChildFlowProducersAsync.needsValueFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B767FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D9C8;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B7686C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D460;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 16);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

void RCHChildFlowProducersAsync.needsConfirmationFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RCHChildFlowProducersAsync.needsConfirmationFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B76924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D9C8;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B76994(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D460;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 32);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

void RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B76A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D9C8;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B76ABC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D460;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 48);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v5;
  return result;
}

void RCHChildFlowProducersAsync.needsExecuteIntentFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

void RCHChildFlowProducersAsync.needsExecuteIntentFlowProducer.setter()
{
  sub_1C2B76B70();
}

void sub_1C2B76B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD, _QWORD);

  OUTLINED_FUNCTION_136_1();
  v3(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*RCHChildFlowProducersAsync.needsExecuteIntentFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B76BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *);

  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D464;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B76C18(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D460;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 64);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 64) = v6;
  *(_QWORD *)(a2 + 72) = v5;
  return result;
}

void RCHChildFlowProducersAsync.unsupportedValueFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RCHChildFlowProducersAsync.unsupportedValueFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B76CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *);

  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D464;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B76D40(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D480;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 80);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 80) = v6;
  *(_QWORD *)(a2 + 88) = v5;
  return result;
}

void RCHChildFlowProducersAsync.confirmIntentFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RCHChildFlowProducersAsync.confirmIntentFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B76DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D9C8;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = (uint64_t (*)())v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B76E68(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D460;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 96);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 96) = v6;
  *(_QWORD *)(a2 + 104) = v5;
  return result;
}

void RCHChildFlowProducersAsync.handleIntentFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RCHChildFlowProducersAsync.handleIntentFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B76F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *);

  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D464;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B76F90(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D460;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 112);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 112) = v6;
  *(_QWORD *)(a2 + 120) = v5;
  return result;
}

void RCHChildFlowProducersAsync.continueInAppFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RCHChildFlowProducersAsync.continueInAppFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B77048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *@<X0>, uint64_t@<X1>, _QWORD *@<X2>, _QWORD *@<X3>, _QWORD *@<X8>);

  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D430;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B770B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D428;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 128);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 128) = v6;
  *(_QWORD *)(a2 + 136) = v5;
  return result;
}

uint64_t sub_1C2B77144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t *, uint64_t *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a3;
  v9 = a1;
  v7 = a4;
  a5(&v6, &v9, a2, &v8, &v7);
  return v6;
}

void RCHChildFlowProducersAsync.appResolutionFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RCHChildFlowProducersAsync.appResolutionFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B771B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *@<X0>, _QWORD *@<X1>, _QWORD *@<X2>, _QWORD *@<X3>, _QWORD *@<X4>, _QWORD *@<X8>);

  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D3E8;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B77224(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D3E0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 144);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 144) = v6;
  *(_QWORD *)(a2 + 152) = v5;
  return result;
}

uint64_t sub_1C2B772B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t *, _QWORD *, uint64_t *))
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a2;
  v13 = a1;
  v10[1] = a5;
  v11 = a3;
  v9 = a6;
  v10[0] = a4;
  a7(&v8, &v13, &v12, &v11, v10, &v9);
  return v8;
}

void RCHChildFlowProducersAsync.appResolutionBeforeNextResolveFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B7731C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD, _QWORD);

  OUTLINED_FUNCTION_136_1();
  v3(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
  *(_QWORD *)(v1 + 144) = v2;
  *(_QWORD *)(v1 + 152) = v0;
  OUTLINED_FUNCTION_18();
}

uint64_t (*RCHChildFlowProducersAsync.appResolutionBeforeNextResolveFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B77354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *@<X0>, _QWORD *@<X1>, _QWORD *@<X2>, _QWORD *@<X8>);

  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  if (v5)
  {
    v7 = a3 + a2;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = *(_OWORD *)(v7 - 16);
    *(_QWORD *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 40) = v6;
    v9 = sub_1C2B7D3B0;
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  *a4 = v9;
  a4[1] = v8;
  return sub_1C2B7A59C(v5);
}

uint64_t sub_1C2B773C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1C2B7D3A8;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a2 + 160);
  sub_1C2B7A59C(v3);
  result = sub_1C28DB44C(v7);
  *(_QWORD *)(a2 + 160) = v6;
  *(_QWORD *)(a2 + 168) = v5;
  return result;
}

uint64_t sub_1C2B77450(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = a2;
  v8 = a1;
  v6 = a3;
  a4(&v5, &v8, &v7, &v6);
  return v5;
}

void RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.getter()
{
  OUTLINED_FUNCTION_7_79();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*RCHChildFlowProducersAsync.requestTCCAcceptanceFlowProducer.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C2B774C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  _BYTE v14[176];
  _BYTE v15[176];

  type metadata accessor for RCHChildFlowProducersAsync(255, a3, a4, a4);
  v10 = OUTLINED_FUNCTION_25();
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v14, a1, v10);
  type metadata accessor for RCHChildFlowProducers(255, a3, a4, v12);
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_138_1((uint64_t)v15, a2);
  v11(a5, (uint64_t)v14, v10);
  return OUTLINED_FUNCTION_138_1((uint64_t)(a5 + 176), (uint64_t)v15);
}

uint64_t sub_1C2B77584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];
  __int128 v8;
  uint64_t v9;
  _UNKNOWN **v10;

  v3 = v1 + 368;
  OUTLINED_FUNCTION_140();
  sub_1C28BA870(v3, (uint64_t)&v8, qword_1ED7A4508);
  if (!v9)
  {
    sub_1C28B9D6C((uint64_t)&v8, qword_1ED7A4508);
    v4 = type metadata accessor for DefaultUnimplementedUseCaseFlowFactory();
    v5 = OUTLINED_FUNCTION_5_2();
    v9 = v4;
    v10 = &off_1E7C931B8;
    *(_QWORD *)&v8 = v5;
    sub_1C28B9A48((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_1C2B7D360((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_1C28B99EC(&v8, a1);
}

void RCHChildFlowFactory.__allocating_init(producers:)()
{
  const void *v0;

  OUTLINED_FUNCTION_5_2();
  v0 = (const void *)OUTLINED_FUNCTION_199_2();
  RCHChildFlowFactory.init(producers:)(v0);
  OUTLINED_FUNCTION_1_0();
}

{
  const void *v0;

  OUTLINED_FUNCTION_5_2();
  v0 = (const void *)OUTLINED_FUNCTION_199_2();
  RCHChildFlowFactory.init(producers:)(v0);
  OUTLINED_FUNCTION_1_0();
}

void RCHChildFlowFactory.__allocating_init(producers:withFallbacks:)()
{
  const void *v0;
  const void *v1;

  OUTLINED_FUNCTION_136_1();
  OUTLINED_FUNCTION_5_2();
  RCHChildFlowFactory.init(producers:withFallbacks:)(v1, v0);
  OUTLINED_FUNCTION_18();
}

void (*sub_1C2B776E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyNeedsValueFlow(255, a2, a3, a4);
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7D354;
}

uint64_t sub_1C2B777D8(uint64_t a1)
{
  OUTLINED_FUNCTION_21_58(a1);
  return OUTLINED_FUNCTION_28_4();
}

#error "1C2B7785C: call analysis failed (funcsize=86)"

uint64_t sub_1C2B7796C()
{
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B779B0()
{
  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_25_51();
  OUTLINED_FUNCTION_39_10();
}

uint64_t sub_1C2B779D8()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_52_31();
  OUTLINED_FUNCTION_18_56();
  v0 = OUTLINED_FUNCTION_22_57();
  return OUTLINED_FUNCTION_15_15(v0, v1);
}

uint64_t sub_1C2B779EC(uint64_t a1, void (*a2)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *), uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t (*a6)(uint64_t, _QWORD, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;

  v9 = *a4;
  v10 = a5[1];
  v21 = a5[2];
  v20 = a5[3];
  if ((a5[5] & 1) != 0)
    v11 = 0;
  else
    v11 = a5[4];
  v12 = *a5;
  v13 = a5[6];
  v14 = *(_QWORD *)(v9 + 88);
  v15 = a6(a1, *(_QWORD *)(v9 + 80), v14);
  v17 = v16;
  v18 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v18[2] = v14;
  v18[3] = v15;
  v18[4] = v17;
  a2(a4, v12, v10, v13, v21, v20, v11, a8, v18);
  return OUTLINED_FUNCTION_3_46();
}

void (*sub_1C2B77AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyNeedsConfirmationFlow(255, a2, a3, a4);
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7D2A0;
}

uint64_t sub_1C2B77B94(uint64_t a1)
{
  OUTLINED_FUNCTION_21_58(a1);
  return OUTLINED_FUNCTION_28_4();
}

#error "1C2B77C18: call analysis failed (funcsize=82)"

uint64_t sub_1C2B77D18()
{
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B77D5C()
{
  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_25_51();
  OUTLINED_FUNCTION_39_10();
}

uint64_t sub_1C2B77D84()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_52_31();
  OUTLINED_FUNCTION_18_56();
  v0 = OUTLINED_FUNCTION_22_57();
  return OUTLINED_FUNCTION_15_15(v0, v1);
}

void (*sub_1C2B77D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyNeedsDisambiguationFlow(255, a2, a3, a4);
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7D258;
}

uint64_t sub_1C2B77E88(uint64_t a1)
{
  OUTLINED_FUNCTION_21_58(a1);
  return OUTLINED_FUNCTION_28_4();
}

#error "1C2B77F0C: call analysis failed (funcsize=82)"

uint64_t sub_1C2B7800C()
{
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

void sub_1C2B78050()
{
  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_25_51();
  OUTLINED_FUNCTION_39_10();
}

uint64_t sub_1C2B78078()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_52_31();
  OUTLINED_FUNCTION_18_56();
  v0 = OUTLINED_FUNCTION_22_57();
  return OUTLINED_FUNCTION_15_15(v0, v1);
}

void (*sub_1C2B7808C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyNeedsExecuteIntentFlow(255, a2, a3, a4);
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7D210;
}

void (*sub_1C2B7817C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyUnsupportedValueFlow(255, a2, a3, a4);
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7D17C;
}

void (*sub_1C2B7826C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyConfirmIntentFlow(255, a2, a3, a4);
  sub_1C2CFE478();
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7D0CC;
}

uint64_t (*sub_1C2B78368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyHandleIntentFlow(255, a2, a3, a4);
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7D00C;
}

uint64_t sub_1C2B78458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AnyHandleIntentFlow(255, *(_QWORD *)(*(_QWORD *)a1 + 80), *(_QWORD *)(*(_QWORD *)a1 + 88), a4);
  sub_1C2CFE0DC();
  return sub_1C2CFE0D0();
}

uint64_t sub_1C2B784B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[103] = v3;
  v4[102] = a3;
  v4[101] = a2;
  v4[100] = a1;
  v4[104] = *v3;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B784DC()
{
  void (*v0)(uint64_t, _QWORD *);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  _QWORD v34[3];

  OUTLINED_FUNCTION_127_11();
  v3 = *(_QWORD *)(v1 + 832);
  v5 = *(_QWORD *)(v3 + 80);
  v4 = *(_QWORD *)(v3 + 88);
  type metadata accessor for RCHChildFlowProducersAsync(255, v5, v4, v6);
  v7 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_11_63(v7);
  OUTLINED_FUNCTION_48_29((uint64_t)v0, v2);
  OUTLINED_FUNCTION_14_71();
  if (v8 || (v0 = *(void (**)(uint64_t, _QWORD *))(v1 + 128)) == 0)
  {
    OUTLINED_FUNCTION_69_19();
    v15 = *(_QWORD *)(v1 + 824) + 192;
    type metadata accessor for RCHChildFlowProducers(255, v5, v4, v16);
    v17 = OUTLINED_FUNCTION_25();
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
    v18(v2, v15, v17);
    v18((uint64_t)v0, v2, v17);
    OUTLINED_FUNCTION_14_71();
    if (!v8)
    {
      v19 = *(_QWORD *)(v1 + 480);
      *(_QWORD *)(v1 + 840) = v19;
      if (v19)
      {
        v20 = *(_QWORD *)(v1 + 824);
        v21 = *(_QWORD *)(v1 + 816);
        v22 = *(_QWORD *)(v1 + 488);
        *(_QWORD *)(v1 + 848) = v22;
        v23 = OUTLINED_FUNCTION_83();
        *(_QWORD *)(v1 + 856) = v23;
        v24 = *(_OWORD *)(v1 + 800);
        *(_QWORD *)(v23 + 16) = v19;
        *(_QWORD *)(v23 + 24) = v22;
        *(_QWORD *)(v23 + 32) = v20;
        *(_OWORD *)(v23 + 40) = v24;
        *(_QWORD *)(v23 + 56) = v21;
        OUTLINED_FUNCTION_221();
        v25 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v1 + 864) = v25;
        *(_QWORD *)(v1 + 872) = type metadata accessor for AnyFlow();
        *v25 = v1;
        v25[1] = sub_1C2B78790;
        OUTLINED_FUNCTION_61_0();
        OUTLINED_FUNCTION_36_2();
        return sub_1C2CFE9A0();
      }
    }
    *(_OWORD *)(v1 + 760) = 0u;
    *(_OWORD *)(v1 + 776) = 0u;
    sub_1C2B77584(v1 + 720);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 720), *(_QWORD *)(v1 + 744));
    OUTLINED_FUNCTION_2_0();
    sub_1C2B796C4(0xD000000000000011, v27, v1 + 760);
    OUTLINED_FUNCTION_48_17();
    type metadata accessor for AnyFlow();
    OUTLINED_FUNCTION_5_2();
    sub_1C2950C8C();
    sub_1C28B9D6C(v1 + 760, &qword_1ED7A8480);
  }
  else
  {
    v30 = *(_QWORD *)(v1 + 824);
    v9 = *(void **)(v1 + 816);
    v10 = *(void **)(v1 + 808);
    IntentResolutionRecord.init(app:intent:intentResponse:)(*(_QWORD *)(v1 + 800), (uint64_t)v10, (uint64_t)v9, &v31);
    v11 = v32;
    v12 = v33;
    v34[0] = v31;
    v34[1] = v32;
    v34[2] = v33;
    sub_1C2B7A59C((uint64_t)v0);
    OUTLINED_FUNCTION_29_3();
    v13 = v10;
    v14 = v9;
    v0(v30, v34);
    OUTLINED_FUNCTION_139_10();

    OUTLINED_FUNCTION_147();
  }
  v28 = OUTLINED_FUNCTION_22_57();
  return v29(v28);
}

uint64_t sub_1C2B78790()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B787CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = *(_QWORD *)(v0 + 840);
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_117_3();
  sub_1C29506EC();
  sub_1C28DB44C(v1);
  OUTLINED_FUNCTION_143();
  v2 = OUTLINED_FUNCTION_22_57();
  return OUTLINED_FUNCTION_23_23(v2, v3);
}

uint64_t sub_1C2B78828(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v20 = a3;
  v21 = a7;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79C1D8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1C2B7CF58;
  *(_QWORD *)(v18 + 24) = v17;
  a2(a4, a5, a6, v21, sub_1C2B7DB64, v18);
  return swift_release();
}

uint64_t sub_1C2B78954()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79C1D8);
  return sub_1C2CFE0D0();
}

uint64_t (*sub_1C2B78994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyAppResolutionFlow(255, a2, a3, a4);
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7CD9C;
}

uint64_t sub_1C2B78A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AnyAppResolutionFlow(255, *(_QWORD *)(*(_QWORD *)a1 + 80), a3, a4);
  sub_1C2CFE0DC();
  return sub_1C2CFE0D0();
}

uint64_t sub_1C2B78AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v6[97] = v5;
  v6[96] = a5;
  v6[95] = a4;
  v6[94] = a3;
  v6[93] = a2;
  v6[92] = a1;
  v6[98] = *v5;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B78B10()
{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(void);
  __int128 v34;

  OUTLINED_FUNCTION_127_11();
  v3 = *(_QWORD *)(v1 + 784);
  v5 = *(_QWORD *)(v3 + 80);
  v4 = *(_QWORD *)(v3 + 88);
  type metadata accessor for RCHChildFlowProducersAsync(255, v5, v4, v6);
  v7 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_11_63(v7);
  OUTLINED_FUNCTION_48_29((uint64_t)v0, v2);
  OUTLINED_FUNCTION_14_71();
  if (v8 || (v0 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 160)) == 0)
  {
    OUTLINED_FUNCTION_69_19();
    v15 = *(_QWORD *)(v1 + 776) + 192;
    type metadata accessor for RCHChildFlowProducers(255, v5, v4, v16);
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_49_22(v2, v15);
    OUTLINED_FUNCTION_49_22((uint64_t)v0, v2);
    OUTLINED_FUNCTION_14_71();
    if (!v8)
    {
      v17 = *(_QWORD *)(v1 + 512);
      *(_QWORD *)(v1 + 792) = v17;
      v18 = *(_QWORD *)(v1 + 520);
      *(_QWORD *)(v1 + 800) = v18;
      if (v17)
      {
        v19 = *(_QWORD *)(v1 + 776);
        v20 = *(_QWORD *)(v1 + 768);
        v34 = *(_OWORD *)(v1 + 752);
        v21 = swift_task_alloc();
        *(_QWORD *)(v1 + 808) = v21;
        v22 = *(_OWORD *)(v1 + 736);
        *(_QWORD *)(v21 + 16) = v17;
        *(_QWORD *)(v21 + 24) = v18;
        *(_QWORD *)(v21 + 32) = v19;
        *(_OWORD *)(v21 + 40) = v22;
        *(_OWORD *)(v21 + 56) = v34;
        *(_QWORD *)(v21 + 72) = v20;
        OUTLINED_FUNCTION_221();
        v23 = (_QWORD *)OUTLINED_FUNCTION_140_0();
        *(_QWORD *)(v1 + 816) = v23;
        *(_QWORD *)(v1 + 824) = type metadata accessor for AnyAppResolutionFlow(255, v5, v24, v25);
        sub_1C2CFE478();
        *v23 = v1;
        v23[1] = sub_1C2B78D94;
        OUTLINED_FUNCTION_61_0();
        OUTLINED_FUNCTION_36_2();
        return OUTLINED_FUNCTION_55_22();
      }
    }
    if (qword_1ED7AA040 != -1)
      swift_once();
    v27 = OUTLINED_FUNCTION_118();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED7AA1B0);
    v28 = (void *)sub_1C2CFD86C();
    v29 = sub_1C2CFE2A4();
    if (OUTLINED_FUNCTION_20_0(v29))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_17_1(&dword_1C28B6000, v30, v31, "No completion configured for ConfirmIntentFlow. Completing with nil");
      OUTLINED_FUNCTION_11_0();
    }

  }
  else
  {
    v9 = *(_QWORD *)(v1 + 776);
    v10 = *(_QWORD *)(v1 + 768);
    v11 = *(_QWORD *)(v1 + 760);
    v12 = *(_QWORD *)(v1 + 752);
    v13 = *(_QWORD *)(v1 + 744);
    v14 = *(_QWORD *)(v1 + 736);
    sub_1C2CFD350();
    v0(v9, v14, v13, v12, v11, v10);
    OUTLINED_FUNCTION_139_10();
  }
  v32 = OUTLINED_FUNCTION_22_57();
  return OUTLINED_FUNCTION_23_12(v32, v33);
}

uint64_t sub_1C2B78D94()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B78DD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = v0[90];
  if (v1)
  {
    v2 = v0[99];
    v0[91] = v1;
    Flow.eraseToAnyValueFlow()();
    sub_1C28DB44C(v2);
    OUTLINED_FUNCTION_147();
  }
  else
  {
    sub_1C28DB44C(v0[99]);
  }
  v3 = OUTLINED_FUNCTION_22_57();
  return OUTLINED_FUNCTION_23_23(v3, v4);
}

uint64_t sub_1C2B78E44(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  void (*v15)();
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v13 = *(_QWORD *)(*(_QWORD *)a4 + 80);
  v14 = *(_QWORD *)(*(_QWORD *)a4 + 88);
  v15 = sub_1C2B78F0C(a1, v13, v14, a4);
  v17 = v16;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v13;
  v18[3] = v14;
  v18[4] = v15;
  v18[5] = v17;
  a2(a4, a5, a6, a7, a8, a9, sub_1C2B7CD74, v18);
  return swift_release();
}

void (*sub_1C2B78F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyAppResolutionFlow(255, a2, a3, a4);
  sub_1C2CFE478();
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7CD84;
}

void sub_1C2B79008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  a5(255, a3);
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_72_24();
  OUTLINED_FUNCTION_166_4();
  OUTLINED_FUNCTION_6_3();
}

uint64_t sub_1C2B79054(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[94] = v2;
  v3[93] = a2;
  v3[92] = a1;
  v3[95] = *v2;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B79074()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_127_11();
  v3 = *(_QWORD *)(v1 + 760);
  v5 = *(_QWORD *)(v3 + 80);
  v4 = *(_QWORD *)(v3 + 88);
  type metadata accessor for RCHChildFlowProducersAsync(255, v5, v4, v6);
  v7 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_11_63(v7);
  OUTLINED_FUNCTION_48_29((uint64_t)v0, v2);
  OUTLINED_FUNCTION_14_71();
  if (v8 || (v0 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 176)) == 0)
  {
    OUTLINED_FUNCTION_69_19();
    v12 = *(_QWORD *)(v1 + 752) + 192;
    type metadata accessor for RCHChildFlowProducers(255, v5, v4, v13);
    v14 = OUTLINED_FUNCTION_25();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
    v15(v2, v12, v14);
    v15((uint64_t)v0, v2, v14);
    OUTLINED_FUNCTION_14_71();
    if (!v8)
    {
      v16 = *(_QWORD *)(v1 + 528);
      *(_QWORD *)(v1 + 768) = v16;
      if (v16)
      {
        v17 = *(_QWORD *)(v1 + 752);
        v18 = *(_QWORD *)(v1 + 536);
        *(_QWORD *)(v1 + 776) = v18;
        v19 = OUTLINED_FUNCTION_83();
        *(_QWORD *)(v1 + 784) = v19;
        v20 = *(_OWORD *)(v1 + 736);
        *(_QWORD *)(v19 + 16) = v16;
        *(_QWORD *)(v19 + 24) = v18;
        *(_QWORD *)(v19 + 32) = v17;
        *(_OWORD *)(v19 + 40) = v20;
        OUTLINED_FUNCTION_52_4();
        v21 = (_QWORD *)OUTLINED_FUNCTION_140_0();
        *(_QWORD *)(v1 + 792) = v21;
        *(_QWORD *)(v1 + 800) = type metadata accessor for AnyRequestTCCAcceptanceFlow(0, v5, v22, v23);
        *v21 = v1;
        v21[1] = sub_1C2B7928C;
        OUTLINED_FUNCTION_61_0();
        OUTLINED_FUNCTION_24_49();
        return sub_1C2CFE9A0();
      }
    }
    OUTLINED_FUNCTION_2_0();
    sub_1C2B79508(0xD000000000000018, v25, (uint64_t)&type metadata for ConfirmationResponse, v26);
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79C1D0);
    OUTLINED_FUNCTION_5_2();
    sub_1C29A5DE4(v28);
  }
  else
  {
    v9 = *(_QWORD *)(v1 + 752);
    v10 = *(_QWORD *)(v1 + 744);
    v11 = *(_QWORD *)(v1 + 736);
    sub_1C2CFD350();
    v0(v9, v11, v10);
    sub_1C28DB44C((uint64_t)v0);
  }
  v29 = OUTLINED_FUNCTION_22_57();
  return v30(v29);
}

uint64_t sub_1C2B7928C()
{
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B792C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = v0[96];
  v0[91] = v0[90];
  Flow.eraseToAnyValueFlow()();
  sub_1C28DB44C(v1);
  OUTLINED_FUNCTION_143();
  v2 = OUTLINED_FUNCTION_22_57();
  return OUTLINED_FUNCTION_23_23(v2, v3);
}

uint64_t sub_1C2B79324(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void (*v11)();
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v10 = *(_QWORD *)(*(_QWORD *)a4 + 88);
  v11 = sub_1C2B793CC(a1, *(_QWORD *)(*(_QWORD *)a4 + 80), v10, a4);
  v13 = v12;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v10;
  v14[3] = v11;
  v14[4] = v13;
  a2(a4, a5, a6, sub_1C2B7CD0C, v14);
  return swift_release();
}

void (*sub_1C2B793CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for AnyRequestTCCAcceptanceFlow(255, a2, a3, a4);
  v7 = sub_1C2CFE0DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7, v9);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v10, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_1C2B7CD1C;
}

void sub_1C2B794BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD))
{
  a4(255, *(_QWORD *)(*(_QWORD *)a1 + 176));
  OUTLINED_FUNCTION_72_24();
  OUTLINED_FUNCTION_166_4();
  OUTLINED_FUNCTION_6_3();
}

void sub_1C2B79508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD v18[5];

  v7 = *v4;
  v8 = type metadata accessor for PromptResult(0, a3, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8, v10);
  v12 = (char *)&v18[-1] - v11;
  v14 = type metadata accessor for RCHChildFlowFactory.FactoryError(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v13);
  MEMORY[0x1C3BC9CD4](&unk_1C2D17BE0, v14);
  v15 = OUTLINED_FUNCTION_14();
  *v16 = a1;
  v16[1] = a2;
  *(_QWORD *)v12 = v15;
  v12[8] = 1;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_50_0();
  sub_1C2B77584((uint64_t)v18);
  __swift_project_boxed_opaque_existential_1(v18, v18[3]);
  sub_1C2B798A4(a1, a2, (uint64_t)v12, v8);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  OUTLINED_FUNCTION_11();
}

uint64_t sub_1C2B79610()
{
  sub_1C2CFE670();
  sub_1C2CFDE54();
  sub_1C2CFDE54();
  sub_1C2CFDE54();
  return 0;
}

uint64_t sub_1C2B796B4()
{
  return sub_1C2B79610();
}

uint64_t sub_1C2B796C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE v11[40];
  _BYTE v12[32];

  sub_1C28BA870(a3, (uint64_t)v12, &qword_1ED7A8480);
  v5 = off_1ED7A5DA8;
  swift_bridgeObjectRetain();
  if (v5 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  v6 = qword_1ED7A4228;
  sub_1C2CFD350();
  v7 = sub_1C2B0C6E8();
  v8 = AFIsInternalInstall();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7883E0);
  v9 = swift_allocObject();
  return sub_1C2B7CDEC(a1, a2, (uint64_t)v12, v6, v7, v8, v9);
}

uint64_t sub_1C2B797B0(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BYTE v14[40];

  sub_1C28E62DC(a3, a4);
  v8 = off_1ED7A5DA8;
  swift_bridgeObjectRetain();
  if (v8 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  v9 = qword_1ED7A4228;
  sub_1C2CFD350();
  v10 = sub_1C2B0C6E8();
  v11 = AFIsInternalInstall();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF788388);
  v12 = swift_allocObject();
  return sub_1C2B7CE80(a1, a2, a3, (uint64_t)a4, v9, v10, v11, v12);
}

void sub_1C2B798A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  ValueMetadata *v19;
  _UNKNOWN **v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;

  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v10, v11);
  v12 = off_1ED7A5DA8;
  swift_bridgeObjectRetain();
  if (v12 != (void *)-1)
    swift_once();
  type metadata accessor for UnimplementedUseCaseFlow(0, a4, v13, v14);
  sub_1C28C72CC((uint64_t)&v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v15 = qword_1ED7A4228;
  v22 = type metadata accessor for RefreshableDeviceState();
  v23 = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)&v21 = v15;
  sub_1C2CFD350();
  v16 = sub_1C2B0C6E8();
  v19 = &type metadata for OutputPublishers;
  v20 = &off_1E7C8D920;
  *(_QWORD *)&v18 = v16;
  v17 = AFIsInternalInstall();
  sub_1C2B799DC(a1, a2, (uint64_t)v8, &v21, &v18, v17);
}

void sub_1C2B799DC(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5, char a6)
{
  swift_allocObject();
  sub_1C2B79AE8(a1, a2, a3, a4, a5, a6);
  OUTLINED_FUNCTION_11();
}

unint64_t sub_1C2B79A48()
{
  sub_1C2CFE670();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_0();
  sub_1C2CFDE54();
  OUTLINED_FUNCTION_70();
  sub_1C2CFDE54();
  return 0xD000000000000019;
}

void sub_1C2B79AE8(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, __int128 *a5, char a6)
{
  uint64_t v6;
  _QWORD *v12;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 80) - 8) + 32))(v6 + *(_QWORD *)(*(_QWORD *)v6 + 88), a3);
  v12 = (_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 96));
  *v12 = a1;
  v12[1] = a2;
  sub_1C28B99EC(a4, v6 + *(_QWORD *)(*(_QWORD *)v6 + 104));
  sub_1C28B99EC(a5, v6 + *(_QWORD *)(*(_QWORD *)v6 + 112));
  *(_BYTE *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 120)) = a6;
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B79B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for UnimplementedUseCaseFlow(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  MEMORY[0x1C3BC9CD4](&unk_1C2D17B48, v5);
  Flow.deferToExecuteAsync(_:)();
  OUTLINED_FUNCTION_59_32();
}

uint64_t sub_1C2B79BEC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[7] = a1;
  v2[8] = v1;
  v2[9] = *v1;
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_1C2B79C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  v4 = *(_QWORD *)(v0 + 72);
  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96));
  v7 = *v5;
  v6 = v5[1];
  sub_1C28B9A48(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112), v0 + 16);
  v8 = OUTLINED_FUNCTION_5_2();
  swift_weakInit();
  v9 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v4 + 80);
  *(_QWORD *)(v9 + 24) = v8;
  *(_BYTE *)(v9 + 32) = v3;
  *(_QWORD *)(v9 + 40) = v7;
  *(_QWORD *)(v9 + 48) = v6;
  type metadata accessor for SimpleOutputFlowAsync();
  OUTLINED_FUNCTION_5_2();
  SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)((__int128 *)(v0 + 16), (uint64_t)&unk_1EF79C1C8, v9);
  OUTLINED_FUNCTION_50_0();
  sub_1C2CA50C0(v1);
  OUTLINED_FUNCTION_36_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2B79CFC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 296) = a4;
  *(_QWORD *)(v5 + 304) = a5;
  *(_BYTE *)(v5 + 336) = a3;
  *(_QWORD *)(v5 + 280) = a1;
  *(_QWORD *)(v5 + 288) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  *(_QWORD *)(v5 + 312) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C2B79D60()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;

  OUTLINED_FUNCTION_140();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1C28B9A48(Strong + *(_QWORD *)(*(_QWORD *)Strong + 104), v0 + 88);
    OUTLINED_FUNCTION_36_0();
    sub_1C28B99EC((__int128 *)(v0 + 88), v0 + 128);
  }
  else
  {
    if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
      swift_once();
    sub_1C28C72CC(v0 + 208);
    OUTLINED_FUNCTION_48_17();
    v2 = qword_1ED7A4228;
    *(_QWORD *)(v0 + 152) = type metadata accessor for RefreshableDeviceState();
    *(_QWORD *)(v0 + 160) = &protocol witness table for RefreshableDeviceState;
    *(_QWORD *)(v0 + 128) = v2;
    sub_1C2CFD350();
  }
  if (*(_BYTE *)(v0 + 336) == 1)
  {
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_1C2CFE670();
    OUTLINED_FUNCTION_128();
    sub_1C2CFDE54();
    OUTLINED_FUNCTION_128();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A72B0);
    v3 = OUTLINED_FUNCTION_5_2();
    *(_OWORD *)(v3 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)(v3 + 32) = 0;
    *(_QWORD *)(v3 + 40) = 0xE000000000000000;
    *(_QWORD *)(v3 + 48) = 0;
    *(_QWORD *)(v3 + 56) = 0xE000000000000000;
    *(_OWORD *)(v3 + 64) = 0u;
    *(_OWORD *)(v3 + 80) = 0u;
    *(_OWORD *)(v3 + 96) = 0u;
    *(_BYTE *)(v3 + 112) = 0;
    *(_QWORD *)(v3 + 120) = 0;
    *(_QWORD *)(v3 + 128) = 0xE000000000000000;
    *(_OWORD *)(v3 + 136) = 0u;
    *(_OWORD *)(v3 + 152) = 0u;
    *(_OWORD *)(v3 + 168) = 0u;
    *(_OWORD *)(v3 + 184) = 0u;
    *(_OWORD *)(v3 + 200) = 0u;
    *(_OWORD *)(v3 + 216) = 0u;
    *(_OWORD *)(v3 + 232) = 0u;
    *(_BYTE *)(v3 + 248) = 0;
    swift_bridgeObjectRetain();
    v4 = OUTLINED_FUNCTION_50_0();
    v5 = sub_1C28F8E80(v4);
    v7 = v6;
    v27 = v8;
    OUTLINED_FUNCTION_70();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v9 = OUTLINED_FUNCTION_118();
    v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED7AA1B0);
    swift_bridgeObjectRetain_n();
    sub_1C2CFD86C();
    v11 = OUTLINED_FUNCTION_123();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 304);
    if (v12)
    {
      v14 = *(_QWORD *)(v0 + 296);
      v15 = (uint8_t *)OUTLINED_FUNCTION_6_0();
      v28 = OUTLINED_FUNCTION_6_0();
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 272) = sub_1C28BB120(v14, v13, &v28);
      sub_1C2CFE4D8();
      OUTLINED_FUNCTION_26_10();
      OUTLINED_FUNCTION_108_0(&dword_1C28B6000, v10, v11, "Unimplemented usecase flow running! You'll want to wire up a flow in the flow factory for: %s", v15);
      OUTLINED_FUNCTION_107_1();
      OUTLINED_FUNCTION_11_0();
    }
    OUTLINED_FUNCTION_29_2();

    v18 = *(_QWORD *)(v0 + 312);
    v19 = *(uint64_t **)(v0 + 280);
    v28 = 0xD00000000000001ALL;
    v29 = 0x80000001C2D28880;
    v30 = v3;
    v31 = MEMORY[0x1E0DEE9E0];
    v32 = v27;
    v33 = v7;
    v34 = xmmword_1C2D00820;
    v35 = v5;
    v20 = *(_QWORD *)(v0 + 160);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
    v21 = OUTLINED_FUNCTION_199_2();
    v22(v21, v20);
    v23 = OUTLINED_FUNCTION_240();
    v26 = OUTLINED_FUNCTION_71_23(v18, v24, v25, v23);
    *(_OWORD *)(v0 + 184) = 0u;
    *(_QWORD *)(v0 + 200) = 0;
    *(_OWORD *)(v0 + 168) = 0u;
    v19[3] = v26;
    v19[4] = (uint64_t)&protocol witness table for AceOutput;
    __swift_allocate_boxed_opaque_existential_1Tm(v19);
    static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
    sub_1C28B9D6C(v0 + 168, (uint64_t *)&unk_1ED7A8750);
    sub_1C28B9D6C(v18, &qword_1ED7A7A10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_70();
    swift_bridgeObjectRelease();
    sub_1C28F90E8(v34, *((unint64_t *)&v34 + 1));
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 128);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v16;
    *v16 = v0;
    v16[1] = sub_1C2B7A230;
    return static ErrorTemplates.genericError()(v0 + 16);
  }
}

uint64_t sub_1C2B7A230()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_87_0();
  *v2 = *v1;
  *(_QWORD *)(v3 + 328) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_2();
  return OUTLINED_FUNCTION_13();
}

uint64_t sub_1C2B7A280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(uint64_t **)(v0 + 280);
  v10 = *(_OWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 128), v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 96))(v3, v4);
  v5 = OUTLINED_FUNCTION_240();
  v8 = OUTLINED_FUNCTION_71_23(v1, v6, v7, v5);
  *(_OWORD *)(v0 + 184) = 0u;
  *(_QWORD *)(v0 + 200) = 0;
  *(_OWORD *)(v0 + 168) = 0u;
  v2[3] = v8;
  v2[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_1Tm(v2);
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  sub_1C28B9D6C(v0 + 168, (uint64_t *)&unk_1ED7A8750);
  sub_1C28B9D6C(v1, &qword_1ED7A7A10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C28F90E8(v10, *((unint64_t *)&v10 + 1));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C2B7A40C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  return v0;
}

uint64_t sub_1C2B7A46C()
{
  sub_1C2B7A40C();
  return swift_deallocClassInstance();
}

void sub_1C2B7A490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2B79B80(a1, a2, a3, a4);
}

uint64_t sub_1C2B7A4B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C28BCB84;
  return sub_1C2B79BEC(a1);
}

uint64_t sub_1C2B7A504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 80) - 8) + 16))(a2, *(_QWORD *)v2 + *(_QWORD *)(**(_QWORD **)v2 + 88));
}

unint64_t sub_1C2B7A528()
{
  return sub_1C2B79A48();
}

uint64_t sub_1C2B7A554()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_38_2();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_14_11(v1);
  return OUTLINED_FUNCTION_16_53(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B7A59C(uint64_t result)
{
  if (result)
    return sub_1C2CFD350();
  return result;
}

void sub_1C2B7A5AC(_QWORD *a1)
{
  *a1 = 1;
  bzero(a1 + 1, 0xA8uLL);
}

uint64_t sub_1C2B7A5BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 184);
  v17 = *(_QWORD *)(a1 + 176);
  v3 = *(_QWORD *)(a1 + 192);
  v4 = *(_QWORD *)(a1 + 200);
  v5 = *(_QWORD *)(a1 + 208);
  v6 = *(_QWORD *)(a1 + 216);
  v7 = *(_QWORD *)(a1 + 224);
  v8 = *(_QWORD *)(a1 + 232);
  v15 = *(_OWORD *)(a1 + 256);
  v16 = *(_OWORD *)(a1 + 240);
  v14 = *(_OWORD *)(a1 + 272);
  v12 = *(_OWORD *)(a1 + 304);
  v13 = *(_OWORD *)(a1 + 288);
  v11 = *(_OWORD *)(a1 + 320);
  v9 = *(_QWORD *)(a1 + 336);
  sub_1C290DA78(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160));
  sub_1C290DA78(v17, v2, v3, v4, v5, v6, v7, v8, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v9);
  return a1;
}

uint64_t sub_1C2B7A6D0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyNeedsValueFlow<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2B7A6FC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyNeedsConfirmationFlow<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2B7A728(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyNeedsDisambiguationFlow<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2B7A754(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyNeedsExecuteIntentFlow<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2B7A780(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyUnsupportedValueFlow<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2B7A7AC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyConfirmIntentFlow<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2B7A7D8(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyHandleIntentFlow<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t method lookup function for AnyPromptFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyPromptFlow.onAsync(input:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C2992EB8);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t dispatch thunk of AnyPromptFlow.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_26_2(v1);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t type metadata accessor for AnyNeedsValueFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyNeedsValueFlow);
}

uint64_t type metadata accessor for AnyNeedsConfirmationFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyNeedsConfirmationFlow);
}

uint64_t type metadata accessor for AnyNeedsDisambiguationFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyNeedsDisambiguationFlow);
}

uint64_t type metadata accessor for AnyNeedsExecuteIntentFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyNeedsExecuteIntentFlow);
}

uint64_t type metadata accessor for AnyUnsupportedValueFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyUnsupportedValueFlow);
}

uint64_t type metadata accessor for AnyRequestTCCAcceptanceFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyRequestTCCAcceptanceFlow);
}

uint64_t method lookup function for AnyHandleIntentFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyHandleIntentFlow.exitValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of AnyHandleIntentFlow.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of AnyHandleIntentFlow.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AnyHandleIntentFlow.onAsync(input:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C2992EB8);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t dispatch thunk of AnyHandleIntentFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AnyHandleIntentFlow.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_26_2(v1);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t dispatch thunk of AnyHandleIntentFlow.unbox<A>(as:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t method lookup function for AnyAppResolutionFlow()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnyAppResolutionFlow.__allocating_init<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of AnyAppResolutionFlow.on(input:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of AnyAppResolutionFlow.onAsync(input:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_12_0();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_345(v1, (uint64_t)sub_1C2992EB8);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t dispatch thunk of AnyAppResolutionFlow.execute(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of AnyAppResolutionFlow.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_12_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_26_2(v1);
  return OUTLINED_FUNCTION_259(v2, v3);
}

uint64_t dispatch thunk of AnyAppResolutionFlow.unbox<A>(as:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

void sub_1C2B7ABCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_197_2();
  if (v3)
  {
    if (v2)
    {
      OUTLINED_FUNCTION_182_2(*(_QWORD *)(v1 + 8), v2);
      OUTLINED_FUNCTION_374();
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_192_2();
  }
  else if (v2)
  {
    OUTLINED_FUNCTION_182_2(*(_QWORD *)(v1 + 8), v2);
    goto LABEL_8;
  }
  *(_OWORD *)v0 = *(_OWORD *)v1;
LABEL_8:
  OUTLINED_FUNCTION_161_4();
  if (v5)
  {
    if (v4)
    {
      v6 = *(_QWORD *)(v1 + 24);
      *(_QWORD *)(v0 + 16) = v4;
      *(_QWORD *)(v0 + 24) = v6;
      sub_1C2CFD350();
      OUTLINED_FUNCTION_374();
      goto LABEL_15;
    }
    OUTLINED_FUNCTION_191_4();
  }
  else if (v4)
  {
    OUTLINED_FUNCTION_172_3(v4);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_15:
  OUTLINED_FUNCTION_156_5();
  if (v8)
  {
    if (v7)
    {
      v9 = *(_QWORD *)(v1 + 40);
      *(_QWORD *)(v0 + 32) = v7;
      *(_QWORD *)(v0 + 40) = v9;
      sub_1C2CFD350();
      OUTLINED_FUNCTION_374();
      goto LABEL_22;
    }
    OUTLINED_FUNCTION_190_3();
  }
  else if (v7)
  {
    OUTLINED_FUNCTION_171_2(v7);
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_22:
  OUTLINED_FUNCTION_159_5();
  if (v11)
  {
    if (v10)
    {
      OUTLINED_FUNCTION_180_3(*(_QWORD *)(v1 + 56), v10);
      OUTLINED_FUNCTION_374();
      goto LABEL_29;
    }
    OUTLINED_FUNCTION_189_1();
  }
  else if (v10)
  {
    OUTLINED_FUNCTION_180_3(*(_QWORD *)(v1 + 56), v10);
    goto LABEL_29;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_29:
  OUTLINED_FUNCTION_162_5();
  if (v13)
  {
    if (v12)
    {
      OUTLINED_FUNCTION_179_4(*(_QWORD *)(v1 + 72), v12);
      OUTLINED_FUNCTION_374();
      goto LABEL_36;
    }
    OUTLINED_FUNCTION_188_3();
  }
  else if (v12)
  {
    OUTLINED_FUNCTION_179_4(*(_QWORD *)(v1 + 72), v12);
    goto LABEL_36;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_36:
  OUTLINED_FUNCTION_154_4();
  if (v15)
  {
    if (v14)
    {
      OUTLINED_FUNCTION_178_0(*(_QWORD *)(v1 + 88), v14);
      OUTLINED_FUNCTION_374();
      goto LABEL_43;
    }
    OUTLINED_FUNCTION_187_3();
  }
  else if (v14)
  {
    OUTLINED_FUNCTION_178_0(*(_QWORD *)(v1 + 88), v14);
    goto LABEL_43;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_43:
  OUTLINED_FUNCTION_157_7();
  if (v17)
  {
    if (v16)
    {
      OUTLINED_FUNCTION_176_2(*(_QWORD *)(v1 + 104), v16);
      OUTLINED_FUNCTION_374();
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_186_2();
  }
  else if (v16)
  {
    OUTLINED_FUNCTION_176_2(*(_QWORD *)(v1 + 104), v16);
    goto LABEL_50;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_50:
  OUTLINED_FUNCTION_160_5();
  if (v19)
  {
    if (v18)
    {
      OUTLINED_FUNCTION_174_3(*(_QWORD *)(v1 + 120), v18);
      OUTLINED_FUNCTION_374();
      goto LABEL_57;
    }
    OUTLINED_FUNCTION_185_4();
  }
  else if (v18)
  {
    OUTLINED_FUNCTION_174_3(*(_QWORD *)(v1 + 120), v18);
    goto LABEL_57;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_57:
  OUTLINED_FUNCTION_163_7();
  if (v21)
  {
    if (v20)
    {
      OUTLINED_FUNCTION_169_5(*(_QWORD *)(v1 + 136), v20);
      OUTLINED_FUNCTION_374();
      goto LABEL_64;
    }
    OUTLINED_FUNCTION_184_1();
  }
  else if (v20)
  {
    OUTLINED_FUNCTION_169_5(*(_QWORD *)(v1 + 136), v20);
    goto LABEL_64;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_64:
  OUTLINED_FUNCTION_155_4();
  if (v23)
  {
    if (v22)
    {
      OUTLINED_FUNCTION_168_6(*(_QWORD *)(v1 + 152), v22);
      OUTLINED_FUNCTION_374();
      goto LABEL_71;
    }
    OUTLINED_FUNCTION_183_1();
  }
  else if (v22)
  {
    OUTLINED_FUNCTION_168_6(*(_QWORD *)(v1 + 152), v22);
    goto LABEL_71;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_71:
  OUTLINED_FUNCTION_158_6();
  if (!v25)
  {
    if (v24)
    {
      OUTLINED_FUNCTION_165_4(*(_QWORD *)(v1 + 168), v24);
      goto LABEL_78;
    }
LABEL_77:
    OUTLINED_FUNCTION_27_45();
    goto LABEL_78;
  }
  if (!v24)
  {
    swift_release();
    goto LABEL_77;
  }
  OUTLINED_FUNCTION_165_4(*(_QWORD *)(v1 + 168), v24);
  OUTLINED_FUNCTION_36_0();
LABEL_78:
  OUTLINED_FUNCTION_18();
}

void sub_1C2B7AE58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_197_2();
  if (v3)
  {
    if (v2)
    {
      v4 = *(_QWORD *)(v1 + 8);
      *v0 = v2;
      v0[1] = v4;
      swift_release();
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_192_2();
  }
  else if (v2)
  {
    v5 = *(_QWORD *)(v1 + 8);
    *v0 = v2;
    v0[1] = v5;
    goto LABEL_8;
  }
  *(_OWORD *)v0 = *(_OWORD *)v1;
LABEL_8:
  OUTLINED_FUNCTION_161_4();
  if (v7)
  {
    if (v6)
    {
      v8 = *(_QWORD *)(v1 + 24);
      v0[2] = v6;
      v0[3] = v8;
      swift_release();
      goto LABEL_15;
    }
    OUTLINED_FUNCTION_191_4();
  }
  else if (v6)
  {
    v9 = *(_QWORD *)(v1 + 24);
    v0[2] = v6;
    v0[3] = v9;
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_15:
  OUTLINED_FUNCTION_156_5();
  if (v11)
  {
    if (v10)
    {
      v12 = *(_QWORD *)(v1 + 40);
      v0[4] = v10;
      v0[5] = v12;
      swift_release();
      goto LABEL_22;
    }
    OUTLINED_FUNCTION_190_3();
  }
  else if (v10)
  {
    v13 = *(_QWORD *)(v1 + 40);
    v0[4] = v10;
    v0[5] = v13;
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_22:
  OUTLINED_FUNCTION_159_5();
  if (v15)
  {
    if (v14)
    {
      v16 = *(_QWORD *)(v1 + 56);
      v0[6] = v14;
      v0[7] = v16;
      swift_release();
      goto LABEL_29;
    }
    OUTLINED_FUNCTION_189_1();
  }
  else if (v14)
  {
    v17 = *(_QWORD *)(v1 + 56);
    v0[6] = v14;
    v0[7] = v17;
    goto LABEL_29;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_29:
  OUTLINED_FUNCTION_162_5();
  if (v19)
  {
    if (v18)
    {
      v20 = *(_QWORD *)(v1 + 72);
      v0[8] = v18;
      v0[9] = v20;
      swift_release();
      goto LABEL_36;
    }
    OUTLINED_FUNCTION_188_3();
  }
  else if (v18)
  {
    v21 = *(_QWORD *)(v1 + 72);
    v0[8] = v18;
    v0[9] = v21;
    goto LABEL_36;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_36:
  OUTLINED_FUNCTION_154_4();
  if (v23)
  {
    if (v22)
    {
      v24 = *(_QWORD *)(v1 + 88);
      v0[10] = v22;
      v0[11] = v24;
      swift_release();
      goto LABEL_43;
    }
    OUTLINED_FUNCTION_187_3();
  }
  else if (v22)
  {
    v25 = *(_QWORD *)(v1 + 88);
    v0[10] = v22;
    v0[11] = v25;
    goto LABEL_43;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_43:
  OUTLINED_FUNCTION_157_7();
  if (v27)
  {
    if (v26)
    {
      v28 = *(_QWORD *)(v1 + 104);
      v0[12] = v26;
      v0[13] = v28;
      swift_release();
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_186_2();
  }
  else if (v26)
  {
    v29 = *(_QWORD *)(v1 + 104);
    v0[12] = v26;
    v0[13] = v29;
    goto LABEL_50;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_50:
  OUTLINED_FUNCTION_160_5();
  if (v31)
  {
    if (v30)
    {
      v32 = *(_QWORD *)(v1 + 120);
      v0[14] = v30;
      v0[15] = v32;
      swift_release();
      goto LABEL_57;
    }
    OUTLINED_FUNCTION_185_4();
  }
  else if (v30)
  {
    v33 = *(_QWORD *)(v1 + 120);
    v0[14] = v30;
    v0[15] = v33;
    goto LABEL_57;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_57:
  OUTLINED_FUNCTION_163_7();
  if (v35)
  {
    if (v34)
    {
      v36 = *(_QWORD *)(v1 + 136);
      v0[16] = v34;
      v0[17] = v36;
      swift_release();
      goto LABEL_64;
    }
    OUTLINED_FUNCTION_184_1();
  }
  else if (v34)
  {
    v37 = *(_QWORD *)(v1 + 136);
    v0[16] = v34;
    v0[17] = v37;
    goto LABEL_64;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_64:
  OUTLINED_FUNCTION_155_4();
  if (v39)
  {
    if (v38)
    {
      v40 = *(_QWORD *)(v1 + 152);
      v0[18] = v38;
      v0[19] = v40;
      swift_release();
      goto LABEL_71;
    }
    OUTLINED_FUNCTION_183_1();
  }
  else if (v38)
  {
    v41 = *(_QWORD *)(v1 + 152);
    v0[18] = v38;
    v0[19] = v41;
    goto LABEL_71;
  }
  OUTLINED_FUNCTION_27_45();
LABEL_71:
  OUTLINED_FUNCTION_158_6();
  if (!v43)
  {
    if (v42)
    {
      v45 = *(_QWORD *)(v1 + 168);
      v0[20] = v42;
      v0[21] = v45;
      goto LABEL_78;
    }
LABEL_77:
    OUTLINED_FUNCTION_27_45();
    goto LABEL_78;
  }
  if (!v42)
  {
    swift_release();
    goto LABEL_77;
  }
  v44 = *(_QWORD *)(v1 + 168);
  v0[20] = v42;
  v0[21] = v44;
  swift_release();
LABEL_78:
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2B7B0E4(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 176))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C2B7B138(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 176) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t method lookup function for RCHChildFlowFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RCHChildFlowFactory.__allocating_init(producers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RCHChildFlowFactory.__allocating_init(producers:withFallbacks:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t type metadata accessor for DefaultUnimplementedUseCaseFlowFactory()
{
  return objc_opt_self();
}

uint64_t sub_1C2B7B1FC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for UnimplementedUseCaseFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnimplementedUseCaseFlow);
}

_QWORD *sub_1C2B7B298(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = result;
  if (*result)
  {
    if (*result == 1)
      goto LABEL_24;
    result = (_QWORD *)swift_release();
  }
  if (v1[2])
    result = (_QWORD *)swift_release();
  if (v1[4])
    result = (_QWORD *)swift_release();
  if (v1[6])
    result = (_QWORD *)swift_release();
  if (v1[8])
    result = (_QWORD *)swift_release();
  if (v1[10])
    result = (_QWORD *)swift_release();
  if (v1[12])
    result = (_QWORD *)swift_release();
  if (v1[14])
    result = (_QWORD *)swift_release();
  if (v1[16])
    result = (_QWORD *)swift_release();
  if (v1[18])
    result = (_QWORD *)swift_release();
  if (v1[20])
    result = (_QWORD *)swift_release();
LABEL_24:
  v2 = v1[22];
  if (v2)
  {
    if (v2 == 1)
      return result;
    result = (_QWORD *)swift_release();
  }
  if (v1[24])
    result = (_QWORD *)swift_release();
  if (v1[26])
    result = (_QWORD *)swift_release();
  if (v1[28])
    result = (_QWORD *)swift_release();
  if (v1[30])
    result = (_QWORD *)swift_release();
  if (v1[32])
    result = (_QWORD *)swift_release();
  if (v1[34])
    result = (_QWORD *)swift_release();
  if (v1[36])
    result = (_QWORD *)swift_release();
  if (v1[38])
    result = (_QWORD *)swift_release();
  if (v1[40])
    result = (_QWORD *)swift_release();
  if (v1[42])
    return (_QWORD *)swift_release();
  return result;
}

char *sub_1C2B7B42C(char *__dst, char *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = *(_QWORD *)__src;
  if (*(_QWORD *)__src)
  {
    if (v4 == 1)
    {
      memcpy(__dst, __src, 0xB0uLL);
      goto LABEL_36;
    }
    v5 = *((_QWORD *)__src + 1);
    *(_QWORD *)__dst = v4;
    *((_QWORD *)__dst + 1) = v5;
    sub_1C2CFD350();
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)__src;
  }
  v6 = *((_QWORD *)__src + 2);
  if (v6)
  {
    v7 = *((_QWORD *)__src + 3);
    *((_QWORD *)__dst + 2) = v6;
    *((_QWORD *)__dst + 3) = v7;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 1) = *((_OWORD *)__src + 1);
  }
  v8 = *((_QWORD *)__src + 4);
  if (v8)
  {
    v9 = *((_QWORD *)__src + 5);
    *((_QWORD *)__dst + 4) = v8;
    *((_QWORD *)__dst + 5) = v9;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
  }
  v10 = *((_QWORD *)__src + 6);
  if (v10)
  {
    v11 = *((_QWORD *)__src + 7);
    *((_QWORD *)__dst + 6) = v10;
    *((_QWORD *)__dst + 7) = v11;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 3) = *((_OWORD *)__src + 3);
  }
  v12 = *((_QWORD *)__src + 8);
  if (v12)
  {
    v13 = *((_QWORD *)__src + 9);
    *((_QWORD *)__dst + 8) = v12;
    *((_QWORD *)__dst + 9) = v13;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
  }
  v14 = *((_QWORD *)__src + 10);
  if (v14)
  {
    v15 = *((_QWORD *)__src + 11);
    *((_QWORD *)__dst + 10) = v14;
    *((_QWORD *)__dst + 11) = v15;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
  }
  v16 = *((_QWORD *)__src + 12);
  if (v16)
  {
    v17 = *((_QWORD *)__src + 13);
    *((_QWORD *)__dst + 12) = v16;
    *((_QWORD *)__dst + 13) = v17;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
  }
  v18 = *((_QWORD *)__src + 14);
  if (v18)
  {
    v19 = *((_QWORD *)__src + 15);
    *((_QWORD *)__dst + 14) = v18;
    *((_QWORD *)__dst + 15) = v19;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 7) = *((_OWORD *)__src + 7);
  }
  v20 = *((_QWORD *)__src + 16);
  if (v20)
  {
    v21 = *((_QWORD *)__src + 17);
    *((_QWORD *)__dst + 16) = v20;
    *((_QWORD *)__dst + 17) = v21;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
  }
  v22 = *((_QWORD *)__src + 18);
  if (v22)
  {
    v23 = *((_QWORD *)__src + 19);
    *((_QWORD *)__dst + 18) = v22;
    *((_QWORD *)__dst + 19) = v23;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 9) = *((_OWORD *)__src + 9);
  }
  v24 = *((_QWORD *)__src + 20);
  if (v24)
  {
    v25 = *((_QWORD *)__src + 21);
    *((_QWORD *)__dst + 20) = v24;
    *((_QWORD *)__dst + 21) = v25;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
  }
LABEL_36:
  v26 = __dst + 176;
  v27 = __src + 176;
  v28 = *((_QWORD *)__src + 22);
  if (v28)
  {
    if (v28 == 1)
    {
      memcpy(v26, v27, 0xB0uLL);
      return __dst;
    }
    v29 = *((_QWORD *)__src + 23);
    *((_QWORD *)__dst + 22) = v28;
    *((_QWORD *)__dst + 23) = v29;
    sub_1C2CFD350();
  }
  else
  {
    *v26 = *v27;
  }
  v30 = *((_QWORD *)__src + 24);
  if (v30)
  {
    v31 = *((_QWORD *)__src + 25);
    *((_QWORD *)__dst + 24) = v30;
    *((_QWORD *)__dst + 25) = v31;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
  }
  v32 = *((_QWORD *)__src + 26);
  if (v32)
  {
    v33 = *((_QWORD *)__src + 27);
    *((_QWORD *)__dst + 26) = v32;
    *((_QWORD *)__dst + 27) = v33;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
  }
  v34 = *((_QWORD *)__src + 28);
  if (v34)
  {
    v35 = *((_QWORD *)__src + 29);
    *((_QWORD *)__dst + 28) = v34;
    *((_QWORD *)__dst + 29) = v35;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 14) = *((_OWORD *)__src + 14);
  }
  v36 = *((_QWORD *)__src + 30);
  if (v36)
  {
    v37 = *((_QWORD *)__src + 31);
    *((_QWORD *)__dst + 30) = v36;
    *((_QWORD *)__dst + 31) = v37;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 15) = *((_OWORD *)__src + 15);
  }
  v38 = *((_QWORD *)__src + 32);
  if (v38)
  {
    v39 = *((_QWORD *)__src + 33);
    *((_QWORD *)__dst + 32) = v38;
    *((_QWORD *)__dst + 33) = v39;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
  }
  v40 = *((_QWORD *)__src + 34);
  if (v40)
  {
    v41 = *((_QWORD *)__src + 35);
    *((_QWORD *)__dst + 34) = v40;
    *((_QWORD *)__dst + 35) = v41;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 17) = *((_OWORD *)__src + 17);
  }
  v42 = *((_QWORD *)__src + 36);
  if (v42)
  {
    v43 = *((_QWORD *)__src + 37);
    *((_QWORD *)__dst + 36) = v42;
    *((_QWORD *)__dst + 37) = v43;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
  }
  v44 = *((_QWORD *)__src + 38);
  if (v44)
  {
    v45 = *((_QWORD *)__src + 39);
    *((_QWORD *)__dst + 38) = v44;
    *((_QWORD *)__dst + 39) = v45;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
  }
  v46 = *((_QWORD *)__src + 40);
  if (v46)
  {
    v47 = *((_QWORD *)__src + 41);
    *((_QWORD *)__dst + 40) = v46;
    *((_QWORD *)__dst + 41) = v47;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 20) = *((_OWORD *)__src + 20);
  }
  v48 = *((_QWORD *)__src + 42);
  if (v48)
  {
    v49 = *((_QWORD *)__src + 43);
    *((_QWORD *)__dst + 42) = v48;
    *((_QWORD *)__dst + 43) = v49;
    sub_1C2CFD350();
  }
  else
  {
    *((_OWORD *)__dst + 21) = *((_OWORD *)__src + 21);
  }
  return __dst;
}

_QWORD *sub_1C2B7B7E8(_QWORD *__dst, _QWORD *__src, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v7 = *__src;
  if (*__dst == 1)
  {
    if (!v7)
    {
      *(_OWORD *)__dst = *(_OWORD *)__src;
LABEL_12:
      v11 = __src[2];
      if (v11)
      {
        v12 = __src[3];
        __dst[2] = v11;
        __dst[3] = v12;
        sub_1C2CFD350();
      }
      else
      {
        *((_OWORD *)__dst + 1) = *((_OWORD *)__src + 1);
      }
      v13 = __src[4];
      if (v13)
      {
        v14 = __src[5];
        __dst[4] = v13;
        __dst[5] = v14;
        sub_1C2CFD350();
      }
      else
      {
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
      }
      v15 = __src[6];
      if (v15)
      {
        v16 = __src[7];
        __dst[6] = v15;
        __dst[7] = v16;
        sub_1C2CFD350();
      }
      else
      {
        *((_OWORD *)__dst + 3) = *((_OWORD *)__src + 3);
      }
      v17 = __src[8];
      if (v17)
      {
        v18 = __src[9];
        __dst[8] = v17;
        __dst[9] = v18;
        sub_1C2CFD350();
      }
      else
      {
        *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
      }
      v19 = __src[10];
      if (v19)
      {
        v20 = __src[11];
        __dst[10] = v19;
        __dst[11] = v20;
        sub_1C2CFD350();
      }
      else
      {
        *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
      }
      v21 = __src[12];
      if (v21)
      {
        v22 = __src[13];
        __dst[12] = v21;
        __dst[13] = v22;
        sub_1C2CFD350();
      }
      else
      {
        *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
      }
      v23 = __src[14];
      if (v23)
      {
        v24 = __src[15];
        __dst[14] = v23;
        __dst[15] = v24;
        sub_1C2CFD350();
      }
      else
      {
        *((_OWORD *)__dst + 7) = *((_OWORD *)__src + 7);
      }
      v25 = __src[16];
      if (v25)
      {
        v26 = __src[17];
        __dst[16] = v25;
        __dst[17] = v26;
        sub_1C2CFD350();
      }
      else
      {
        *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
      }
      v27 = __src[18];
      if (v27)
      {
        v28 = __src[19];
        __dst[18] = v27;
        __dst[19] = v28;
        sub_1C2CFD350();
      }
      else
      {
        *((_OWORD *)__dst + 9) = *((_OWORD *)__src + 9);
      }
      v29 = __src[20];
      if (!v29)
      {
        *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
        goto LABEL_115;
      }
      goto LABEL_112;
    }
    if (v7 != 1)
    {
      v8 = __src[1];
      *__dst = v7;
      __dst[1] = v8;
      sub_1C2CFD350();
      goto LABEL_12;
    }
LABEL_7:
    memcpy(__dst, __src, 0xB0uLL);
    goto LABEL_115;
  }
  if (v7 == 1)
  {
    v9 = type metadata accessor for RCHChildFlowProducersAsync(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(__dst, v9);
    goto LABEL_7;
  }
  if (*__dst)
  {
    if (v7)
    {
      v10 = __src[1];
      *__dst = v7;
      __dst[1] = v10;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_45;
    }
    swift_release();
  }
  else if (v7)
  {
    v30 = __src[1];
    *__dst = v7;
    __dst[1] = v30;
    sub_1C2CFD350();
    goto LABEL_45;
  }
  *(_OWORD *)__dst = *(_OWORD *)__src;
LABEL_45:
  v31 = __src[2];
  if (__dst[2])
  {
    if (v31)
    {
      v32 = __src[3];
      __dst[2] = v31;
      __dst[3] = v32;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_52;
    }
    swift_release();
  }
  else if (v31)
  {
    v33 = __src[3];
    __dst[2] = v31;
    __dst[3] = v33;
    sub_1C2CFD350();
    goto LABEL_52;
  }
  *((_OWORD *)__dst + 1) = *((_OWORD *)__src + 1);
LABEL_52:
  v34 = __src[4];
  if (__dst[4])
  {
    if (v34)
    {
      v35 = __src[5];
      __dst[4] = v34;
      __dst[5] = v35;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_59;
    }
    swift_release();
  }
  else if (v34)
  {
    v36 = __src[5];
    __dst[4] = v34;
    __dst[5] = v36;
    sub_1C2CFD350();
    goto LABEL_59;
  }
  *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
LABEL_59:
  v37 = __src[6];
  if (__dst[6])
  {
    if (v37)
    {
      v38 = __src[7];
      __dst[6] = v37;
      __dst[7] = v38;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_66;
    }
    swift_release();
  }
  else if (v37)
  {
    v39 = __src[7];
    __dst[6] = v37;
    __dst[7] = v39;
    sub_1C2CFD350();
    goto LABEL_66;
  }
  *((_OWORD *)__dst + 3) = *((_OWORD *)__src + 3);
LABEL_66:
  v40 = __src[8];
  if (__dst[8])
  {
    if (v40)
    {
      v41 = __src[9];
      __dst[8] = v40;
      __dst[9] = v41;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_73;
    }
    swift_release();
  }
  else if (v40)
  {
    v42 = __src[9];
    __dst[8] = v40;
    __dst[9] = v42;
    sub_1C2CFD350();
    goto LABEL_73;
  }
  *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
LABEL_73:
  v43 = __src[10];
  if (__dst[10])
  {
    if (v43)
    {
      v44 = __src[11];
      __dst[10] = v43;
      __dst[11] = v44;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_80;
    }
    swift_release();
  }
  else if (v43)
  {
    v45 = __src[11];
    __dst[10] = v43;
    __dst[11] = v45;
    sub_1C2CFD350();
    goto LABEL_80;
  }
  *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
LABEL_80:
  v46 = __src[12];
  if (__dst[12])
  {
    if (v46)
    {
      v47 = __src[13];
      __dst[12] = v46;
      __dst[13] = v47;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_87;
    }
    swift_release();
  }
  else if (v46)
  {
    v48 = __src[13];
    __dst[12] = v46;
    __dst[13] = v48;
    sub_1C2CFD350();
    goto LABEL_87;
  }
  *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
LABEL_87:
  v49 = __src[14];
  if (__dst[14])
  {
    if (v49)
    {
      v50 = __src[15];
      __dst[14] = v49;
      __dst[15] = v50;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_94;
    }
    swift_release();
  }
  else if (v49)
  {
    v51 = __src[15];
    __dst[14] = v49;
    __dst[15] = v51;
    sub_1C2CFD350();
    goto LABEL_94;
  }
  *((_OWORD *)__dst + 7) = *((_OWORD *)__src + 7);
LABEL_94:
  v52 = __src[16];
  if (__dst[16])
  {
    if (v52)
    {
      v53 = __src[17];
      __dst[16] = v52;
      __dst[17] = v53;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_101;
    }
    swift_release();
  }
  else if (v52)
  {
    v54 = __src[17];
    __dst[16] = v52;
    __dst[17] = v54;
    sub_1C2CFD350();
    goto LABEL_101;
  }
  *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
LABEL_101:
  v55 = __src[18];
  if (__dst[18])
  {
    if (v55)
    {
      v56 = __src[19];
      __dst[18] = v55;
      __dst[19] = v56;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_108;
    }
    swift_release();
  }
  else if (v55)
  {
    v57 = __src[19];
    __dst[18] = v55;
    __dst[19] = v57;
    sub_1C2CFD350();
    goto LABEL_108;
  }
  *((_OWORD *)__dst + 9) = *((_OWORD *)__src + 9);
LABEL_108:
  v29 = __src[20];
  if (__dst[20])
  {
    if (v29)
    {
      v58 = __src[21];
      __dst[20] = v29;
      __dst[21] = v58;
      sub_1C2CFD350();
      swift_release();
      goto LABEL_115;
    }
    swift_release();
  }
  else if (v29)
  {
LABEL_112:
    v59 = __src[21];
    __dst[20] = v29;
    __dst[21] = v59;
    sub_1C2CFD350();
    goto LABEL_115;
  }
  *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
LABEL_115:
  v61 = __dst + 22;
  v60 = __dst[22];
  v63 = __src + 22;
  v62 = __src[22];
  if (v60 != 1)
  {
    if (v62 == 1)
    {
      v65 = type metadata accessor for RCHChildFlowProducers(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v65 - 8) + 8))((char *)__dst + 176, v65);
      goto LABEL_121;
    }
    if (v60)
    {
      if (v62)
      {
        v66 = __src[23];
        __dst[22] = v62;
        __dst[23] = v66;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_159;
      }
      swift_release();
    }
    else if (v62)
    {
      v86 = __src[23];
      __dst[22] = v62;
      __dst[23] = v86;
      sub_1C2CFD350();
      goto LABEL_159;
    }
    *v61 = *v63;
LABEL_159:
    v87 = __src[24];
    if (__dst[24])
    {
      if (v87)
      {
        v88 = __src[25];
        __dst[24] = v87;
        __dst[25] = v88;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_166;
      }
      swift_release();
    }
    else if (v87)
    {
      v89 = __src[25];
      __dst[24] = v87;
      __dst[25] = v89;
      sub_1C2CFD350();
      goto LABEL_166;
    }
    *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
LABEL_166:
    v90 = __src[26];
    if (__dst[26])
    {
      if (v90)
      {
        v91 = __src[27];
        __dst[26] = v90;
        __dst[27] = v91;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_173;
      }
      swift_release();
    }
    else if (v90)
    {
      v92 = __src[27];
      __dst[26] = v90;
      __dst[27] = v92;
      sub_1C2CFD350();
      goto LABEL_173;
    }
    *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
LABEL_173:
    v93 = __src[28];
    if (__dst[28])
    {
      if (v93)
      {
        v94 = __src[29];
        __dst[28] = v93;
        __dst[29] = v94;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_180;
      }
      swift_release();
    }
    else if (v93)
    {
      v95 = __src[29];
      __dst[28] = v93;
      __dst[29] = v95;
      sub_1C2CFD350();
      goto LABEL_180;
    }
    *((_OWORD *)__dst + 14) = *((_OWORD *)__src + 14);
LABEL_180:
    v96 = __src[30];
    if (__dst[30])
    {
      if (v96)
      {
        v97 = __src[31];
        __dst[30] = v96;
        __dst[31] = v97;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_187;
      }
      swift_release();
    }
    else if (v96)
    {
      v98 = __src[31];
      __dst[30] = v96;
      __dst[31] = v98;
      sub_1C2CFD350();
      goto LABEL_187;
    }
    *((_OWORD *)__dst + 15) = *((_OWORD *)__src + 15);
LABEL_187:
    v99 = __src[32];
    if (__dst[32])
    {
      if (v99)
      {
        v100 = __src[33];
        __dst[32] = v99;
        __dst[33] = v100;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_194;
      }
      swift_release();
    }
    else if (v99)
    {
      v101 = __src[33];
      __dst[32] = v99;
      __dst[33] = v101;
      sub_1C2CFD350();
      goto LABEL_194;
    }
    *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
LABEL_194:
    v102 = __src[34];
    if (__dst[34])
    {
      if (v102)
      {
        v103 = __src[35];
        __dst[34] = v102;
        __dst[35] = v103;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_201;
      }
      swift_release();
    }
    else if (v102)
    {
      v104 = __src[35];
      __dst[34] = v102;
      __dst[35] = v104;
      sub_1C2CFD350();
      goto LABEL_201;
    }
    *((_OWORD *)__dst + 17) = *((_OWORD *)__src + 17);
LABEL_201:
    v105 = __src[36];
    if (__dst[36])
    {
      if (v105)
      {
        v106 = __src[37];
        __dst[36] = v105;
        __dst[37] = v106;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_208;
      }
      swift_release();
    }
    else if (v105)
    {
      v107 = __src[37];
      __dst[36] = v105;
      __dst[37] = v107;
      sub_1C2CFD350();
      goto LABEL_208;
    }
    *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
LABEL_208:
    v108 = __src[38];
    if (__dst[38])
    {
      if (v108)
      {
        v109 = __src[39];
        __dst[38] = v108;
        __dst[39] = v109;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_215;
      }
      swift_release();
    }
    else if (v108)
    {
      v110 = __src[39];
      __dst[38] = v108;
      __dst[39] = v110;
      sub_1C2CFD350();
      goto LABEL_215;
    }
    *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
LABEL_215:
    v111 = __src[40];
    if (__dst[40])
    {
      if (v111)
      {
        v112 = __src[41];
        __dst[40] = v111;
        __dst[41] = v112;
        sub_1C2CFD350();
        swift_release();
        goto LABEL_222;
      }
      swift_release();
    }
    else if (v111)
    {
      v113 = __src[41];
      __dst[40] = v111;
      __dst[41] = v113;
      sub_1C2CFD350();
      goto LABEL_222;
    }
    *((_OWORD *)__dst + 20) = *((_OWORD *)__src + 20);
LABEL_222:
    v85 = __src[42];
    if (__dst[42])
    {
      if (v85)
      {
        v114 = __src[43];
        __dst[42] = v85;
        __dst[43] = v114;
        sub_1C2CFD350();
        swift_release();
        return __dst;
      }
      swift_release();
    }
    else if (v85)
    {
      goto LABEL_226;
    }
    *((_OWORD *)__dst + 21) = *((_OWORD *)__src + 21);
    return __dst;
  }
  if (!v62)
  {
    *v61 = *v63;
LABEL_126:
    v67 = __src[24];
    if (v67)
    {
      v68 = __src[25];
      __dst[24] = v67;
      __dst[25] = v68;
      sub_1C2CFD350();
    }
    else
    {
      *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
    }
    v69 = __src[26];
    if (v69)
    {
      v70 = __src[27];
      __dst[26] = v69;
      __dst[27] = v70;
      sub_1C2CFD350();
    }
    else
    {
      *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
    }
    v71 = __src[28];
    if (v71)
    {
      v72 = __src[29];
      __dst[28] = v71;
      __dst[29] = v72;
      sub_1C2CFD350();
    }
    else
    {
      *((_OWORD *)__dst + 14) = *((_OWORD *)__src + 14);
    }
    v73 = __src[30];
    if (v73)
    {
      v74 = __src[31];
      __dst[30] = v73;
      __dst[31] = v74;
      sub_1C2CFD350();
    }
    else
    {
      *((_OWORD *)__dst + 15) = *((_OWORD *)__src + 15);
    }
    v75 = __src[32];
    if (v75)
    {
      v76 = __src[33];
      __dst[32] = v75;
      __dst[33] = v76;
      sub_1C2CFD350();
    }
    else
    {
      *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
    }
    v77 = __src[34];
    if (v77)
    {
      v78 = __src[35];
      __dst[34] = v77;
      __dst[35] = v78;
      sub_1C2CFD350();
    }
    else
    {
      *((_OWORD *)__dst + 17) = *((_OWORD *)__src + 17);
    }
    v79 = __src[36];
    if (v79)
    {
      v80 = __src[37];
      __dst[36] = v79;
      __dst[37] = v80;
      sub_1C2CFD350();
    }
    else
    {
      *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
    }
    v81 = __src[38];
    if (v81)
    {
      v82 = __src[39];
      __dst[38] = v81;
      __dst[39] = v82;
      sub_1C2CFD350();
    }
    else
    {
      *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
    }
    v83 = __src[40];
    if (v83)
    {
      v84 = __src[41];
      __dst[40] = v83;
      __dst[41] = v84;
      sub_1C2CFD350();
    }
    else
    {
      *((_OWORD *)__dst + 20) = *((_OWORD *)__src + 20);
    }
    v85 = __src[42];
    if (!v85)
    {
      *((_OWORD *)__dst + 21) = *((_OWORD *)__src + 21);
      return __dst;
    }
LABEL_226:
    v115 = __src[43];
    __dst[42] = v85;
    __dst[43] = v115;
    sub_1C2CFD350();
    return __dst;
  }
  if (v62 != 1)
  {
    v64 = __src[23];
    __dst[22] = v62;
    __dst[23] = v64;
    sub_1C2CFD350();
    goto LABEL_126;
  }
LABEL_121:
  memcpy(__dst + 22, __src + 22, 0xB0uLL);
  return __dst;
}

void *__swift_memcpy352_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x160uLL);
}

char *sub_1C2B7C388(char *__dst, char *__src, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  if (*(_QWORD *)__dst == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)__src;
  if (*(_QWORD *)__src == 1)
  {
    v8 = type metadata accessor for RCHChildFlowProducersAsync(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(__dst, v8);
LABEL_4:
    memcpy(__dst, __src, 0xB0uLL);
    goto LABEL_5;
  }
  if (*(_QWORD *)__dst)
  {
    if (v7)
    {
      v13 = *((_QWORD *)__src + 1);
      *(_QWORD *)__dst = v7;
      *((_QWORD *)__dst + 1) = v13;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v7)
  {
    v15 = *((_QWORD *)__src + 1);
    *(_QWORD *)__dst = v7;
    *((_QWORD *)__dst + 1) = v15;
    goto LABEL_22;
  }
  *(_OWORD *)__dst = *(_OWORD *)__src;
LABEL_22:
  v17 = *((_QWORD *)__src + 2);
  if (*((_QWORD *)__dst + 2))
  {
    if (v17)
    {
      v18 = *((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 2) = v17;
      *((_QWORD *)__dst + 3) = v18;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v17)
  {
    v19 = *((_QWORD *)__src + 3);
    *((_QWORD *)__dst + 2) = v17;
    *((_QWORD *)__dst + 3) = v19;
    goto LABEL_36;
  }
  *((_OWORD *)__dst + 1) = *((_OWORD *)__src + 1);
LABEL_36:
  v23 = *((_QWORD *)__src + 4);
  if (*((_QWORD *)__dst + 4))
  {
    if (v23)
    {
      v24 = *((_QWORD *)__src + 5);
      *((_QWORD *)__dst + 4) = v23;
      *((_QWORD *)__dst + 5) = v24;
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v23)
  {
    v25 = *((_QWORD *)__src + 5);
    *((_QWORD *)__dst + 4) = v23;
    *((_QWORD *)__dst + 5) = v25;
    goto LABEL_50;
  }
  *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
LABEL_50:
  v29 = *((_QWORD *)__src + 6);
  if (*((_QWORD *)__dst + 6))
  {
    if (v29)
    {
      v30 = *((_QWORD *)__src + 7);
      *((_QWORD *)__dst + 6) = v29;
      *((_QWORD *)__dst + 7) = v30;
      swift_release();
      goto LABEL_64;
    }
    swift_release();
  }
  else if (v29)
  {
    v31 = *((_QWORD *)__src + 7);
    *((_QWORD *)__dst + 6) = v29;
    *((_QWORD *)__dst + 7) = v31;
    goto LABEL_64;
  }
  *((_OWORD *)__dst + 3) = *((_OWORD *)__src + 3);
LABEL_64:
  v35 = *((_QWORD *)__src + 8);
  if (*((_QWORD *)__dst + 8))
  {
    if (v35)
    {
      v36 = *((_QWORD *)__src + 9);
      *((_QWORD *)__dst + 8) = v35;
      *((_QWORD *)__dst + 9) = v36;
      swift_release();
      goto LABEL_78;
    }
    swift_release();
  }
  else if (v35)
  {
    v37 = *((_QWORD *)__src + 9);
    *((_QWORD *)__dst + 8) = v35;
    *((_QWORD *)__dst + 9) = v37;
    goto LABEL_78;
  }
  *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
LABEL_78:
  v41 = *((_QWORD *)__src + 10);
  if (*((_QWORD *)__dst + 10))
  {
    if (v41)
    {
      v42 = *((_QWORD *)__src + 11);
      *((_QWORD *)__dst + 10) = v41;
      *((_QWORD *)__dst + 11) = v42;
      swift_release();
      goto LABEL_92;
    }
    swift_release();
  }
  else if (v41)
  {
    v43 = *((_QWORD *)__src + 11);
    *((_QWORD *)__dst + 10) = v41;
    *((_QWORD *)__dst + 11) = v43;
    goto LABEL_92;
  }
  *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
LABEL_92:
  v47 = *((_QWORD *)__src + 12);
  if (*((_QWORD *)__dst + 12))
  {
    if (v47)
    {
      v48 = *((_QWORD *)__src + 13);
      *((_QWORD *)__dst + 12) = v47;
      *((_QWORD *)__dst + 13) = v48;
      swift_release();
      goto LABEL_106;
    }
    swift_release();
  }
  else if (v47)
  {
    v49 = *((_QWORD *)__src + 13);
    *((_QWORD *)__dst + 12) = v47;
    *((_QWORD *)__dst + 13) = v49;
    goto LABEL_106;
  }
  *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
LABEL_106:
  v53 = *((_QWORD *)__src + 14);
  if (*((_QWORD *)__dst + 14))
  {
    if (v53)
    {
      v54 = *((_QWORD *)__src + 15);
      *((_QWORD *)__dst + 14) = v53;
      *((_QWORD *)__dst + 15) = v54;
      swift_release();
      goto LABEL_120;
    }
    swift_release();
  }
  else if (v53)
  {
    v55 = *((_QWORD *)__src + 15);
    *((_QWORD *)__dst + 14) = v53;
    *((_QWORD *)__dst + 15) = v55;
    goto LABEL_120;
  }
  *((_OWORD *)__dst + 7) = *((_OWORD *)__src + 7);
LABEL_120:
  v59 = *((_QWORD *)__src + 16);
  if (*((_QWORD *)__dst + 16))
  {
    if (v59)
    {
      v60 = *((_QWORD *)__src + 17);
      *((_QWORD *)__dst + 16) = v59;
      *((_QWORD *)__dst + 17) = v60;
      swift_release();
      goto LABEL_134;
    }
    swift_release();
  }
  else if (v59)
  {
    v61 = *((_QWORD *)__src + 17);
    *((_QWORD *)__dst + 16) = v59;
    *((_QWORD *)__dst + 17) = v61;
    goto LABEL_134;
  }
  *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
LABEL_134:
  v65 = *((_QWORD *)__src + 18);
  if (*((_QWORD *)__dst + 18))
  {
    if (v65)
    {
      v66 = *((_QWORD *)__src + 19);
      *((_QWORD *)__dst + 18) = v65;
      *((_QWORD *)__dst + 19) = v66;
      swift_release();
      goto LABEL_148;
    }
    swift_release();
  }
  else if (v65)
  {
    v67 = *((_QWORD *)__src + 19);
    *((_QWORD *)__dst + 18) = v65;
    *((_QWORD *)__dst + 19) = v67;
    goto LABEL_148;
  }
  *((_OWORD *)__dst + 9) = *((_OWORD *)__src + 9);
LABEL_148:
  v71 = *((_QWORD *)__src + 20);
  if (*((_QWORD *)__dst + 20))
  {
    if (v71)
    {
      v72 = *((_QWORD *)__src + 21);
      *((_QWORD *)__dst + 20) = v71;
      *((_QWORD *)__dst + 21) = v72;
      swift_release();
      goto LABEL_5;
    }
    swift_release();
  }
  else if (v71)
  {
    v73 = *((_QWORD *)__src + 21);
    *((_QWORD *)__dst + 20) = v71;
    *((_QWORD *)__dst + 21) = v73;
    goto LABEL_5;
  }
  *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
LABEL_5:
  v9 = *((_QWORD *)__dst + 22);
  v10 = *((_QWORD *)__src + 22);
  if (v9 != 1)
  {
    if (v10 == 1)
    {
      v11 = type metadata accessor for RCHChildFlowProducers(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(__dst + 176, v11);
      goto LABEL_8;
    }
    if (v9)
    {
      if (v10)
      {
        v14 = *((_QWORD *)__src + 23);
        *((_QWORD *)__dst + 22) = v10;
        *((_QWORD *)__dst + 23) = v14;
        swift_release();
        goto LABEL_29;
      }
      swift_release();
    }
    else if (v10)
    {
      v16 = *((_QWORD *)__src + 23);
      *((_QWORD *)__dst + 22) = v10;
      *((_QWORD *)__dst + 23) = v16;
      goto LABEL_29;
    }
    *((_OWORD *)__dst + 11) = *((_OWORD *)__src + 11);
LABEL_29:
    v20 = *((_QWORD *)__src + 24);
    if (*((_QWORD *)__dst + 24))
    {
      if (v20)
      {
        v21 = *((_QWORD *)__src + 25);
        *((_QWORD *)__dst + 24) = v20;
        *((_QWORD *)__dst + 25) = v21;
        swift_release();
        goto LABEL_43;
      }
      swift_release();
    }
    else if (v20)
    {
      v22 = *((_QWORD *)__src + 25);
      *((_QWORD *)__dst + 24) = v20;
      *((_QWORD *)__dst + 25) = v22;
      goto LABEL_43;
    }
    *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
LABEL_43:
    v26 = *((_QWORD *)__src + 26);
    if (*((_QWORD *)__dst + 26))
    {
      if (v26)
      {
        v27 = *((_QWORD *)__src + 27);
        *((_QWORD *)__dst + 26) = v26;
        *((_QWORD *)__dst + 27) = v27;
        swift_release();
        goto LABEL_57;
      }
      swift_release();
    }
    else if (v26)
    {
      v28 = *((_QWORD *)__src + 27);
      *((_QWORD *)__dst + 26) = v26;
      *((_QWORD *)__dst + 27) = v28;
      goto LABEL_57;
    }
    *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
LABEL_57:
    v32 = *((_QWORD *)__src + 28);
    if (*((_QWORD *)__dst + 28))
    {
      if (v32)
      {
        v33 = *((_QWORD *)__src + 29);
        *((_QWORD *)__dst + 28) = v32;
        *((_QWORD *)__dst + 29) = v33;
        swift_release();
        goto LABEL_71;
      }
      swift_release();
    }
    else if (v32)
    {
      v34 = *((_QWORD *)__src + 29);
      *((_QWORD *)__dst + 28) = v32;
      *((_QWORD *)__dst + 29) = v34;
      goto LABEL_71;
    }
    *((_OWORD *)__dst + 14) = *((_OWORD *)__src + 14);
LABEL_71:
    v38 = *((_QWORD *)__src + 30);
    if (*((_QWORD *)__dst + 30))
    {
      if (v38)
      {
        v39 = *((_QWORD *)__src + 31);
        *((_QWORD *)__dst + 30) = v38;
        *((_QWORD *)__dst + 31) = v39;
        swift_release();
        goto LABEL_85;
      }
      swift_release();
    }
    else if (v38)
    {
      v40 = *((_QWORD *)__src + 31);
      *((_QWORD *)__dst + 30) = v38;
      *((_QWORD *)__dst + 31) = v40;
      goto LABEL_85;
    }
    *((_OWORD *)__dst + 15) = *((_OWORD *)__src + 15);
LABEL_85:
    v44 = *((_QWORD *)__src + 32);
    if (*((_QWORD *)__dst + 32))
    {
      if (v44)
      {
        v45 = *((_QWORD *)__src + 33);
        *((_QWORD *)__dst + 32) = v44;
        *((_QWORD *)__dst + 33) = v45;
        swift_release();
        goto LABEL_99;
      }
      swift_release();
    }
    else if (v44)
    {
      v46 = *((_QWORD *)__src + 33);
      *((_QWORD *)__dst + 32) = v44;
      *((_QWORD *)__dst + 33) = v46;
      goto LABEL_99;
    }
    *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
LABEL_99:
    v50 = *((_QWORD *)__src + 34);
    if (*((_QWORD *)__dst + 34))
    {
      if (v50)
      {
        v51 = *((_QWORD *)__src + 35);
        *((_QWORD *)__dst + 34) = v50;
        *((_QWORD *)__dst + 35) = v51;
        swift_release();
        goto LABEL_113;
      }
      swift_release();
    }
    else if (v50)
    {
      v52 = *((_QWORD *)__src + 35);
      *((_QWORD *)__dst + 34) = v50;
      *((_QWORD *)__dst + 35) = v52;
      goto LABEL_113;
    }
    *((_OWORD *)__dst + 17) = *((_OWORD *)__src + 17);
LABEL_113:
    v56 = *((_QWORD *)__src + 36);
    if (*((_QWORD *)__dst + 36))
    {
      if (v56)
      {
        v57 = *((_QWORD *)__src + 37);
        *((_QWORD *)__dst + 36) = v56;
        *((_QWORD *)__dst + 37) = v57;
        swift_release();
        goto LABEL_127;
      }
      swift_release();
    }
    else if (v56)
    {
      v58 = *((_QWORD *)__src + 37);
      *((_QWORD *)__dst + 36) = v56;
      *((_QWORD *)__dst + 37) = v58;
      goto LABEL_127;
    }
    *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
LABEL_127:
    v62 = *((_QWORD *)__src + 38);
    if (*((_QWORD *)__dst + 38))
    {
      if (v62)
      {
        v63 = *((_QWORD *)__src + 39);
        *((_QWORD *)__dst + 38) = v62;
        *((_QWORD *)__dst + 39) = v63;
        swift_release();
        goto LABEL_141;
      }
      swift_release();
    }
    else if (v62)
    {
      v64 = *((_QWORD *)__src + 39);
      *((_QWORD *)__dst + 38) = v62;
      *((_QWORD *)__dst + 39) = v64;
      goto LABEL_141;
    }
    *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
LABEL_141:
    v68 = *((_QWORD *)__src + 40);
    if (*((_QWORD *)__dst + 40))
    {
      if (v68)
      {
        v69 = *((_QWORD *)__src + 41);
        *((_QWORD *)__dst + 40) = v68;
        *((_QWORD *)__dst + 41) = v69;
        swift_release();
        goto LABEL_155;
      }
      swift_release();
    }
    else if (v68)
    {
      v70 = *((_QWORD *)__src + 41);
      *((_QWORD *)__dst + 40) = v68;
      *((_QWORD *)__dst + 41) = v70;
      goto LABEL_155;
    }
    *((_OWORD *)__dst + 20) = *((_OWORD *)__src + 20);
LABEL_155:
    v74 = *((_QWORD *)__src + 42);
    if (*((_QWORD *)__dst + 42))
    {
      if (v74)
      {
        v75 = *((_QWORD *)__src + 43);
        *((_QWORD *)__dst + 42) = v74;
        *((_QWORD *)__dst + 43) = v75;
        swift_release();
        return __dst;
      }
      swift_release();
    }
    else if (v74)
    {
      v76 = *((_QWORD *)__src + 43);
      *((_QWORD *)__dst + 42) = v74;
      *((_QWORD *)__dst + 43) = v76;
      return __dst;
    }
    *((_OWORD *)__dst + 21) = *((_OWORD *)__src + 21);
    return __dst;
  }
LABEL_8:
  memcpy(__dst + 176, __src + 176, 0xB0uLL);
  return __dst;
}

uint64_t sub_1C2B7CAC8(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  BOOL v5;

  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *((_BYTE *)a1 + 352))
    {
      v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v4 = v3 - 1;
      if (v4 < 0)
        v4 = -1;
      v5 = __OFSUB__(v4, 1);
      v2 = v4 - 1;
      if (v2 < 0 != v5)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C2B7CB24(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 352) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 352) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for RCHChildFlowFactory.Producers(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RCHChildFlowFactory.Producers);
}

uint64_t sub_1C2B7CBDC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C2B7CC00()
{
  OUTLINED_FUNCTION_13_1();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2B7CC28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v8 = swift_task_alloc();
  v9 = (_QWORD *)OUTLINED_FUNCTION_86(v8);
  *v9 = v2;
  v9[1] = sub_1C28E1BA0;
  return sub_1C2B79CFC(a1, v4, v5, v7, v6);
}

uint64_t type metadata accessor for RCHChildFlowFactory.FactoryError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RCHChildFlowFactory.FactoryError);
}

uint64_t sub_1C2B7CCB0(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1C2B7CCD4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_198_1();
  return sub_1C2B79324(v1, v2, v3, v4, v5, *(_QWORD *)(v0 + 48));
}

uint64_t sub_1C2B7CCE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B7CD10()
{
  return objectdestroy_129Tm((uint64_t (*)(uint64_t, _QWORD))type metadata accessor for AnyRequestTCCAcceptanceFlow);
}

void sub_1C2B7CD1C()
{
  sub_1C2B7D188();
}

void sub_1C2B7CD28(uint64_t a1)
{
  uint64_t v1;

  sub_1C2B78E44(a1, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B7CD54()
{
  OUTLINED_FUNCTION_12_13();
  return swift_deallocObject();
}

uint64_t sub_1C2B7CD78()
{
  return objectdestroy_136Tm((uint64_t (*)(uint64_t, _QWORD))type metadata accessor for AnyAppResolutionFlow);
}

void sub_1C2B7CD84()
{
  sub_1C2B7D0D8();
}

uint64_t sub_1C2B7CD90()
{
  return objectdestroy_129Tm((uint64_t (*)(uint64_t, _QWORD))type metadata accessor for AnyAppResolutionFlow);
}

uint64_t sub_1C2B7CD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 24);
  type metadata accessor for AnyAppResolutionFlow(255, *(_QWORD *)(v4 + 16), a3, a4);
  OUTLINED_FUNCTION_72_24();
  v6 = OUTLINED_FUNCTION_120_12();
  return sub_1C2B78A84(v6, v7, v5, v8);
}

uint64_t sub_1C2B7CDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  *(_QWORD *)(a7 + 88) = type metadata accessor for RefreshableDeviceState();
  *(_QWORD *)(a7 + 96) = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)(a7 + 64) = a4;
  *(_QWORD *)(a7 + 128) = &type metadata for OutputPublishers;
  *(_QWORD *)(a7 + 136) = &off_1E7C8D920;
  *(_QWORD *)(a7 + 104) = a5;
  sub_1C29D95E0(a3, a7 + 16);
  *(_QWORD *)(a7 + 48) = a1;
  *(_QWORD *)(a7 + 56) = a2;
  *(_BYTE *)(a7 + 144) = a6;
  return a7;
}

uint64_t sub_1C2B7CE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(_QWORD *)(a8 + 72) = type metadata accessor for RefreshableDeviceState();
  *(_QWORD *)(a8 + 80) = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)(a8 + 48) = a5;
  *(_QWORD *)(a8 + 112) = &type metadata for OutputPublishers;
  *(_QWORD *)(a8 + 120) = &off_1E7C8D920;
  *(_QWORD *)(a8 + 88) = a6;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a1;
  *(_QWORD *)(a8 + 40) = a2;
  *(_BYTE *)(a8 + 128) = a7;
  return a8;
}

uint64_t sub_1C2B7CF10(uint64_t a1)
{
  return sub_1C29FACA8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2B78828);
}

uint64_t sub_1C2B7CF1C()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79C1D8);
  OUTLINED_FUNCTION_11_2(*(_QWORD *)(v0 - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2B7CF58()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79C1D8);
  return sub_1C2B78954();
}

uint64_t sub_1C2B7CF98()
{
  OUTLINED_FUNCTION_13_1();
  return swift_deallocObject();
}

uint64_t sub_1C2B7CFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for AnyHandleIntentFlow(255, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v5 = OUTLINED_FUNCTION_72_24();
  OUTLINED_FUNCTION_11_2(*(_QWORD *)(v5 - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2B7D00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for AnyHandleIntentFlow(255, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  OUTLINED_FUNCTION_72_24();
  v5 = OUTLINED_FUNCTION_120_12();
  return sub_1C2B78458(v5, v6, v7, v8);
}

void sub_1C2B7D050()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 32);
  v2 = sub_1C2CFD350();
  v1(v2);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B7D070()
{
  return objectdestroy_136Tm((uint64_t (*)(uint64_t, _QWORD))type metadata accessor for AnyConfirmIntentFlow);
}

uint64_t objectdestroy_136Tm(uint64_t (*a1)(uint64_t, _QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_126_12(a1);
  OUTLINED_FUNCTION_46_0();
  v1 = OUTLINED_FUNCTION_72_24();
  OUTLINED_FUNCTION_11_2(*(_QWORD *)(v1 - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

void sub_1C2B7D0CC()
{
  sub_1C2B7D0D8();
}

void sub_1C2B7D0D8()
{
  void (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_1();
  v2 = *(_QWORD *)(v1 + 24);
  v0(255, *(_QWORD *)(v1 + 16));
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_72_24();
  v3 = OUTLINED_FUNCTION_102_13();
  sub_1C2B79008(v3, v4, v5, v2, v0);
}

uint64_t sub_1C2B7D140()
{
  uint64_t v0;
  void (*v1)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;

  OUTLINED_FUNCTION_198_1();
  return sub_1C2B779EC(v0, v1, v2, v3, v4, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1C2B7817C, (uint64_t)&unk_1E7C93408, (uint64_t)sub_1C2B7CD0C);
}

uint64_t sub_1C2B7D170()
{
  return objectdestroy_129Tm((uint64_t (*)(uint64_t, _QWORD))type metadata accessor for AnyUnsupportedValueFlow);
}

void sub_1C2B7D17C()
{
  sub_1C2B7D188();
}

void sub_1C2B7D188()
{
  void (*v0)(uint64_t, _QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_136_1();
  v0(255, *(_QWORD *)(v1 + 16));
  OUTLINED_FUNCTION_72_24();
  v2 = OUTLINED_FUNCTION_102_13();
  sub_1C2B794BC(v2, v3, v4, v0);
  OUTLINED_FUNCTION_18();
}

uint64_t sub_1C2B7D1D4()
{
  uint64_t v0;
  void (*v1)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;

  OUTLINED_FUNCTION_198_1();
  return sub_1C2B779EC(v0, v1, v2, v3, v4, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1C2B7808C, (uint64_t)&unk_1E7C93458, (uint64_t)sub_1C2B7CD0C);
}

uint64_t sub_1C2B7D204()
{
  return objectdestroy_129Tm((uint64_t (*)(uint64_t, _QWORD))type metadata accessor for AnyNeedsExecuteIntentFlow);
}

void sub_1C2B7D210()
{
  sub_1C2B7D188();
}

uint64_t sub_1C2B7D21C()
{
  uint64_t v0;
  void (*v1)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;

  OUTLINED_FUNCTION_198_1();
  return sub_1C2B779EC(v0, v1, v2, v3, v4, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1C2B77D98, (uint64_t)&unk_1E7C934A8, (uint64_t)sub_1C2B7CD0C);
}

uint64_t sub_1C2B7D24C()
{
  return objectdestroy_129Tm((uint64_t (*)(uint64_t, _QWORD))type metadata accessor for AnyNeedsDisambiguationFlow);
}

void sub_1C2B7D258()
{
  sub_1C2B7D188();
}

uint64_t sub_1C2B7D264()
{
  uint64_t v0;
  void (*v1)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;

  OUTLINED_FUNCTION_198_1();
  return sub_1C2B779EC(v0, v1, v2, v3, v4, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1C2B77AA4, (uint64_t)&unk_1E7C934F8, (uint64_t)sub_1C2B7CD0C);
}

uint64_t sub_1C2B7D294()
{
  return objectdestroy_129Tm((uint64_t (*)(uint64_t, _QWORD))type metadata accessor for AnyNeedsConfirmationFlow);
}

void sub_1C2B7D2A0()
{
  sub_1C2B7D188();
}

uint64_t sub_1C2B7D2AC()
{
  uint64_t v0;
  void (*v1)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;

  OUTLINED_FUNCTION_198_1();
  return sub_1C2B779EC(v0, v1, v2, v3, v4, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1C2B776E8, (uint64_t)&unk_1E7C93548, (uint64_t)sub_1C2B7CD0C);
}

void sub_1C2B7D2DC()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 24);
  v2 = sub_1C2CFD350();
  v1(v2);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B7D2FC()
{
  return objectdestroy_129Tm((uint64_t (*)(uint64_t, _QWORD))type metadata accessor for AnyNeedsValueFlow);
}

uint64_t objectdestroy_129Tm(uint64_t (*a1)(uint64_t, _QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_126_12(a1);
  v1 = OUTLINED_FUNCTION_72_24();
  OUTLINED_FUNCTION_11_2(*(_QWORD *)(v1 - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

void sub_1C2B7D354()
{
  sub_1C2B7D188();
}

uint64_t sub_1C2B7D360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B7D3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C2B77450(a1, a2, a3, *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t *))(v3 + 16));
}

void sub_1C2B7D3B0(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  *a4 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v4 + 32))(*a1, *a2, *a3);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B7D3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1C2B772B0(a1, a2, a3, a4, a5, a6, *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t *, _QWORD *, uint64_t *))(v6 + 16));
}

void sub_1C2B7D3E8(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;

  *a6 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v6 + 32))(*a1, *a2, *a3, *a4, a4[1], *a5);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B7D428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1C2B77144(a1, a2, a3, a4, *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t *, uint64_t *))(v4 + 16));
}

void sub_1C2B7D430(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;

  *a5 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD))(v5 + 32))(*a1, a2, *a3, *a4);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B7D464(_QWORD *a1)
{
  uint64_t *v1;

  *v1 = OUTLINED_FUNCTION_89_18(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B7D480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_76_23(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
  OUTLINED_FUNCTION_6_3();
}

uint64_t sub_1C2B7D4A0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1C2B76620(a1, a2, a3, a4, a5, *(void (**)(_QWORD **, uint64_t *, uint64_t *, _QWORD *))(v5 + 16));
}

uint64_t sub_1C2B7D4A8(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_1C2B764F8(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, void (*)(uint64_t), _QWORD *))(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_1C2B7D4B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1C2B763C0(a1, a2, a3, a4, a5, a6, a7, a8, *(void (**)(_QWORD **, uint64_t *, uint64_t *, _QWORD *, uint64_t *, _QWORD *))(v8 + 16));
  OUTLINED_FUNCTION_80();
}

void sub_1C2B7D4D4(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v6;

  sub_1C2B76278(a1, a2, a3, a4, a5, a6, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), _QWORD *))(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
  OUTLINED_FUNCTION_80();
}

void sub_1C2B7D4F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_115_14(a1, *(uint64_t (**)(uint64_t *))(v1 + 32), v2, v3);
  OUTLINED_FUNCTION_6_3();
}

uint64_t sub_1C2B7D518(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1C2B76144(a1, a2, a3, a4, a5, a6, *(void (**)(_QWORD **, uint64_t, uint64_t *, uint64_t *, _QWORD *))(v6 + 16));
}

void sub_1C2B7D520(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;

  sub_1C2B76014(a1, a2, a3, a4, a5, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), _QWORD *))(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B7D544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1C2B75F00(a1, a2, a3, a4, a5, a6, *(void (**)(uint64_t *, uint64_t *, uint64_t *, uint64_t *, _QWORD *))(v6 + 16));
}

uint64_t sub_1C2B7D54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  return OUTLINED_FUNCTION_175_5(a1, a2, a3, a4, a5, v5[4], v5[5], v5[2]);
}

void sub_1C2B7D580(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_1C2B75CCC(a1, a2, a3, a4, a5, a6, *(void (**)(_QWORD **, uint64_t *, uint64_t *, uint64_t *, _QWORD *))(v6 + 16), *(_QWORD *)(v6 + 24), (uint64_t)&unk_1E7C93BB0, (uint64_t)sub_1C2B7D9E8);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B7D5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  return OUTLINED_FUNCTION_175_5(a1, a2, a3, a4, a5, v5[4], v5[5], v5[2]);
}

void sub_1C2B7D5E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_115_14(a1, *(uint64_t (**)(uint64_t *))(v1 + 16), v2, v3);
  OUTLINED_FUNCTION_6_3();
}

void sub_1C2B7D604(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_1C2B75CCC(a1, a2, a3, a4, a5, a6, *(void (**)(_QWORD **, uint64_t *, uint64_t *, uint64_t *, _QWORD *))(v6 + 16), *(_QWORD *)(v6 + 24), (uint64_t)&unk_1E7C93C50, (uint64_t)sub_1C2B7D9E8);
  OUTLINED_FUNCTION_80();
}

void sub_1C2B7D634(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;

  sub_1C2B75A80(a1, a2, a3, a4, a5, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *))(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
  OUTLINED_FUNCTION_80();
}

void sub_1C2B7D658()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_129_8();
  OUTLINED_FUNCTION_74_17(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, (uint64_t)sub_1C2B7D9E8);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D688()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);

  OUTLINED_FUNCTION_131_12();
  OUTLINED_FUNCTION_45_29(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D6B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_129_8();
  OUTLINED_FUNCTION_74_17(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, (uint64_t)sub_1C2B7D9E8);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D6E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);

  OUTLINED_FUNCTION_131_12();
  OUTLINED_FUNCTION_45_29(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D710()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_129_8();
  OUTLINED_FUNCTION_74_17(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, (uint64_t)sub_1C2B7D9E8);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D740()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);

  OUTLINED_FUNCTION_131_12();
  OUTLINED_FUNCTION_45_29(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D76C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_129_8();
  OUTLINED_FUNCTION_74_17(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, (uint64_t)sub_1C2B7D9E8);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D79C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);

  OUTLINED_FUNCTION_131_12();
  OUTLINED_FUNCTION_45_29(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D7C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_129_8();
  OUTLINED_FUNCTION_74_17(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, (uint64_t)sub_1C2B7D7F8);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D7F8(_QWORD *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD))(v1 + 32))(*a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B7D818()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *);

  OUTLINED_FUNCTION_131_12();
  OUTLINED_FUNCTION_45_29(v0, v1, v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B7D844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_115_14(a1, *(uint64_t (**)(uint64_t *))(v1 + 24), v2, v3);
  OUTLINED_FUNCTION_6_3();
}

uint64_t objectdestroy_2Tm_4()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_138_11();
  return swift_deallocObject();
}

uint64_t objectdestroy_7Tm_1()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_2(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

void sub_1C2B7D8D8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_135_12(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B7D908()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_88_16();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_2_77(v1);
  return sub_1C28DDA04(v2, v3, v4, v5, v6);
}

uint64_t objectdestroyTm_20()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_2(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

void sub_1C2B7D98C(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_135_12(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  OUTLINED_FUNCTION_1_0();
}

void sub_1C2B7D9B8()
{
  JUMPOUT(0x1C3BC9CD4);
}

__n128 OUTLINED_FUNCTION_3_79(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_76()
{
  return 16;
}

uint64_t OUTLINED_FUNCTION_7_79()
{
  uint64_t v0;

  sub_1C2B7A59C(v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_70()
{
  return sub_1C2CFE9A0();
}

uint64_t OUTLINED_FUNCTION_9_76(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_10_73(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_11_63(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_13_57()
{
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_14_71()
{
  uint64_t *v0;

  return sub_1C2B7CCB0(v0);
}

uint64_t OUTLINED_FUNCTION_16_53(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C2A00B68(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_18_56()
{
  uint64_t v0;

  sub_1C28DB44C(v0);
  return swift_release();
}

__n128 OUTLINED_FUNCTION_21_58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  __int128 v3;
  __n128 result;

  *(_QWORD *)(v2 + 800) = v1;
  *(_QWORD *)(v2 + 808) = *v1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 720) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 736) = v3;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v2 + 752) = result;
  *(_QWORD *)(v2 + 768) = *(_QWORD *)(a1 + 48);
  return result;
}

uint64_t OUTLINED_FUNCTION_22_57()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_49()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_25_51()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 792) = *(_QWORD *)(v0 + 784);
}

uint64_t OUTLINED_FUNCTION_26_51(uint64_t *a1)
{
  return sub_1C2B7CCB0(a1);
}

__n128 OUTLINED_FUNCTION_27_45()
{
  __n128 *v0;
  __n128 *v1;
  __n128 result;

  result = *v1;
  *v0 = *v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_39(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_30_44()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_34_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 776) = a1;
  return type metadata accessor for PromptResult(255, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_38_39()
{
  uint64_t v0;

  return sub_1C28DB44C(v0);
}

uint64_t OUTLINED_FUNCTION_39_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t *);

  return v10(v9, &a9);
}

uint64_t OUTLINED_FUNCTION_40_28(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 840) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_41_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for IntentPromptAnswer(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_45_29(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return sub_1C2B75820(a1, a2, a3, a4, a5, a6, a7, a8, v10, v8, v9, v11, v12);
}

uint64_t OUTLINED_FUNCTION_49_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_55_22()
{
  return sub_1C2CFE9A0();
}

uint64_t OUTLINED_FUNCTION_64_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for UnimplementedUseCaseFlow(0, a1, a3, a4);
}

uint64_t OUTLINED_FUNCTION_74_17@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void (*v14)(_QWORD **, uint64_t *, uint64_t *, uint64_t *, _QWORD *, uint64_t *, _QWORD *);
  uint64_t v15;
  uint64_t v16;

  return sub_1C2B75954(a1, a2, a3, a4, a5, a6, a7, a8, a9, v14, v15, v16, a14);
}

__n128 OUTLINED_FUNCTION_75_24@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

_QWORD *OUTLINED_FUNCTION_76_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *(*v11)(uint64_t *__return_ptr, uint64_t *);

  v11 = *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(v10 + 16);
  a10 = a1;
  return v11(&a9, &a10);
}

_QWORD *OUTLINED_FUNCTION_78_19(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 832) = result;
  result[2] = v3;
  result[3] = v1;
  result[4] = v4;
  result[5] = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_83_17()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 48))();
}

uint64_t OUTLINED_FUNCTION_84_19(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *((_QWORD *)a1 + 2) = v4;
  *((_QWORD *)a1 + 3) = v1;
  *((_QWORD *)a1 + 4) = v2;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 32))(&a1[v6], v3, v1);
}

uint64_t OUTLINED_FUNCTION_89_18(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

uint64_t OUTLINED_FUNCTION_92_19@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_98_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  return (*(uint64_t (**)(char *, unint64_t *, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(&a31, &STACK[0x210], a1);
}

void *OUTLINED_FUNCTION_100_20(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t OUTLINED_FUNCTION_102_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_111_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_113_11(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 848) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_114_14(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_115_14@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t *)@<X8>, uint64_t a3, uint64_t a4)
{
  a4 = a1;
  return a2(&a4);
}

uint64_t OUTLINED_FUNCTION_120_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_126_12(uint64_t (*a1)(uint64_t, _QWORD))
{
  uint64_t v1;

  return a1(255, *(_QWORD *)(v1 + 16));
}

void *OUTLINED_FUNCTION_128_7(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x160uLL);
}

void OUTLINED_FUNCTION_133_10(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = v3;
  v2[11] = v1;
  __swift_allocate_boxed_opaque_existential_1Tm(v2 + 8);
}

uint64_t OUTLINED_FUNCTION_139_10()
{
  uint64_t v0;

  return sub_1C28DB44C(v0);
}

double OUTLINED_FUNCTION_164_5()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 368) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_QWORD *)(v0 + 400) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_165_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 160) = a2;
  *(_QWORD *)(v2 + 168) = a1;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_166_4()
{
  return sub_1C2CFE0D0();
}

uint64_t OUTLINED_FUNCTION_167_6()
{
  return sub_1C2CFDDAC();
}

uint64_t OUTLINED_FUNCTION_168_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = a2;
  *(_QWORD *)(v2 + 152) = a1;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_169_5@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a2;
  *(_QWORD *)(v2 + 136) = a1;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_171_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v1 + 32) = a1;
  *(_QWORD *)(v1 + 40) = v3;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_172_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = v3;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_174_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a2;
  *(_QWORD *)(v2 + 120) = a1;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_175_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return sub_1C2B75DEC(a1, a2, a3, a4, a5, a6, a7, a8, v8, v10, v9);
}

uint64_t OUTLINED_FUNCTION_176_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a2;
  *(_QWORD *)(v2 + 104) = a1;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_178_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a2;
  *(_QWORD *)(v2 + 88) = a1;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_179_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a2;
  *(_QWORD *)(v2 + 72) = a1;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_180_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a2;
  *(_QWORD *)(v2 + 56) = a1;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_181_4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 48))(*(_QWORD *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_182_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;

  *v2 = a2;
  v2[1] = a1;
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_183_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_185_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_186_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_187_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_188_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_189_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_190_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_191_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_192_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_193_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_199_2()
{
  uint64_t v0;

  return v0;
}

_QWORD *sub_1C2B7E23C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];
  _BYTE v7[40];
  _OWORD v8[2];
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  v2 = sub_1C2B846B4();
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  sub_1C28D3304((uint64_t)v10, (uint64_t)v7, &qword_1EF78A470);
  sub_1C28D3304((uint64_t)v8, (uint64_t)v6, (uint64_t *)&unk_1EF79AAC0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  sub_1C2921AEC((uint64_t)v7, v3 + 24, &qword_1EF78A470);
  sub_1C2921AEC((uint64_t)v6, v3 + 64, (uint64_t *)&unk_1EF79AAC0);
  sub_1C2CFD350();
  sub_1C28B9D6C((uint64_t)v8, (uint64_t *)&unk_1EF79AAC0);
  sub_1C28B9D6C((uint64_t)v10, &qword_1EF78A470);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED7A4D60);
  swift_allocObject();
  v4 = sub_1C297E9FC(a1, (uint64_t)sub_1C297E590, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7887F8);
  swift_allocObject();
  return sub_1C290FDD4(v4);
}

uint64_t sub_1C2B7E374@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  _BYTE v4[40];

  if (qword_1ED7A4220 != -1)
    swift_once();
  sub_1C28C73A4((uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  v2 = qword_1ED7AA050;
  a1[3] = type metadata accessor for RefreshableAceServiceInvoker();
  a1[4] = (uint64_t)&protocol witness table for RefreshableAceServiceInvoker;
  *a1 = v2;
  return OUTLINED_FUNCTION_38_0();
}

uint64_t sub_1C2B7E400(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  ValueMetadata *v23;
  char v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _UNKNOWN **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(void);
  __int128 v64;
  uint64_t v65;
  _UNKNOWN **v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  ValueMetadata *v70;
  _UNKNOWN **v71;
  char v72;
  void *v73;

  v59 = a6;
  v60 = a4;
  v57 = a2;
  v58 = a3;
  v62 = a9;
  v63 = a8;
  v56 = a10;
  v12 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = *(_QWORD *)(v15 + 80);
  ParameterResolutionRecord.init(app:intent:parameterName:parameterMulticardinalIndex:result:)(v16, v17, v18, v21, v20, v19, (uint64_t)&v68);
  v22 = v68;
  v23 = v70;
  v55 = v69;
  v54 = v71;
  v24 = v72;
  v25 = v73;
  v27 = type metadata accessor for NeedsValueFlowStrategyAsyncAdapter(0, a11, a12, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v56, a11);
  v28 = sub_1C2AF2B48();
  v29 = MEMORY[0x1C3BC9CD4](&unk_1C2D11BF0, v27);
  v31 = type metadata accessor for NeedsValueFlowStrategyAdapter(0, v27, v29, v30);
  v67 = v28;
  v68 = v22;
  v69 = v55;
  v70 = v23;
  v71 = v54;
  v72 = v24;
  v32 = v25;
  v73 = v25;
  v33 = qword_1ED7A84D8;
  sub_1C2CFD350();
  v34 = v58;
  swift_bridgeObjectRetain();
  v35 = v60;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v36 = *((id *)&v22 + 1);
  swift_bridgeObjectRetain();
  v37 = v32;
  if (v33 != -1)
    swift_once();
  v38 = qword_1ED7AA130;
  v65 = type metadata accessor for RefreshableSiriKitEventSending();
  v66 = &off_1E7C9CA68;
  *(_QWORD *)&v64 = v38;
  sub_1C28FF378((uint64_t)&v67, (uint64_t)&v68, &v64);
  v40 = v39;
  v41 = v61;
  v44 = type metadata accessor for IntentPromptAnswer(255, v61, v42, v43);
  v47 = type metadata accessor for PromptForValueFlowAsync(0, v44, v45, v46);
  sub_1C2CFD350();
  sub_1C2CFD350();
  v48 = sub_1C2B0C6E8();
  v70 = &type metadata for OutputPublishers;
  v71 = &off_1E7C8D920;
  *(_QWORD *)&v68 = v48;
  MEMORY[0x1C3BC9CD4](&unk_1C2D11BB8, v31);
  PromptForValueFlowAsync.__allocating_init<A>(strategy:outputPublisher:)(v40, &v68);
  v50 = v49;
  type metadata accessor for AnyNeedsValueFlow(0, v41, v51, v52);
  *(_QWORD *)&v68 = v50;
  sub_1C2CFD350();
  MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for PromptForValueFlowAsync<A>, v47);
  AnyNeedsValueFlow.__allocating_init<A>(_:)();
  v63();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B7E704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_43_31(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B7E728(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  ValueMetadata *v12;
  uint64_t v13;
  _UNKNOWN **v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _UNKNOWN **v42;
  __int128 v43;
  uint64_t v44;
  ValueMetadata *v45;
  _UNKNOWN **v46;
  char v47;
  void *v48;

  v5 = *a1;
  v37 = a3;
  v38 = v5;
  v6 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v9;
  v11 = (void *)v9[1];
  v13 = v9[2];
  v12 = (ValueMetadata *)v9[3];
  v14 = (_UNKNOWN **)v9[4];
  v15 = *((_BYTE *)v9 + 40);
  v16 = (void *)v9[6];
  v39 = type metadata accessor for NeedsValueFlowStrategyAdapter(0, v17, v18, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v37, a4);
  *(_QWORD *)&v43 = v10;
  *((_QWORD *)&v43 + 1) = v11;
  v44 = v13;
  v45 = v12;
  v46 = v14;
  v47 = v15;
  v48 = v16;
  v19 = qword_1ED7A84D8;
  sub_1C2CFD350();
  v20 = v11;
  swift_bridgeObjectRetain();
  v21 = v16;
  if (v19 != -1)
    swift_once();
  v22 = qword_1ED7AA130;
  v41 = type metadata accessor for RefreshableSiriKitEventSending();
  v42 = &off_1E7C9CA68;
  *(_QWORD *)&v40 = v22;
  v23 = v39;
  sub_1C28FF378((uint64_t)v8, (uint64_t)&v43, &v40);
  v25 = v24;
  v28 = type metadata accessor for IntentPromptAnswer(255, *(_QWORD *)(v38 + 80), v26, v27);
  v31 = type metadata accessor for PromptForValueFlowAsync(0, v28, v29, v30);
  sub_1C2CFD350();
  sub_1C2CFD350();
  v32 = sub_1C2B0C6E8();
  v45 = &type metadata for OutputPublishers;
  v46 = &off_1E7C8D920;
  *(_QWORD *)&v43 = v32;
  MEMORY[0x1C3BC9CD4](&unk_1C2D11BB8, v23);
  PromptForValueFlowAsync.__allocating_init<A>(strategy:outputPublisher:)(v25, &v43);
  *(_QWORD *)&v43 = v33;
  MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for PromptForValueFlowAsync<A>, v31);
  v34 = Flow.eraseToAnyValueFlow()();
  swift_release();
  swift_release();
  return v34;
}

uint64_t sub_1C2B7E920(uint64_t a1, uint64_t a2)
{
  return j__OUTLINED_FUNCTION_26_52(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C2B7E728);
}

uint64_t sub_1C2B7E92C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(void);
  uint64_t v59;
  uint64_t v60;
  _UNKNOWN **v61;
  uint64_t v62;
  ValueMetadata *v63;
  _UNKNOWN **v64;
  _QWORD v65[6];
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  void *v72;

  v58 = a8;
  v54 = a6;
  v55 = a4;
  v53 = a3;
  v52 = a2;
  v57 = a9;
  v51 = a10;
  v12 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *(_QWORD *)(v15 + 80);
  ParameterResolutionRecord.init(app:intent:parameterName:parameterMulticardinalIndex:result:)(v16, v17, v18, v21, v20, v19, (uint64_t)&v66);
  v22 = v66;
  v23 = v67;
  v24 = v69;
  v50 = v68;
  v25 = v70;
  HIDWORD(v49) = v71;
  v26 = v72;
  v28 = type metadata accessor for NeedsConfirmationFlowStrategyAsyncAdapter(0, a11, a12, v27);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v51, a11);
  sub_1C2ADDC1C((uint64_t)v14);
  v30 = v29;
  v31 = MEMORY[0x1C3BC9CD4](&unk_1C2D112FC, v28);
  v33 = type metadata accessor for SiriKitNeedsConfirmationFlow(0, v28, v31, v32);
  v65[5] = v30;
  v66 = v22;
  v67 = v23;
  v68 = v50;
  v69 = v24;
  v70 = v25;
  v71 = BYTE4(v49);
  v34 = v26;
  v72 = v26;
  v35 = off_1ED7A5DA8;
  sub_1C2CFD350();
  v36 = v53;
  swift_bridgeObjectRetain();
  v37 = v55;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v38 = v23;
  swift_bridgeObjectRetain();
  v39 = v34;
  if (v35 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v65);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  v40 = qword_1ED7A4228;
  v65[3] = type metadata accessor for RefreshableDeviceState();
  v65[4] = &protocol witness table for RefreshableDeviceState;
  v65[0] = v40;
  sub_1C2CFD350();
  v41 = sub_1C2B0C6E8();
  v63 = &type metadata for OutputPublishers;
  v64 = &off_1E7C8D920;
  v62 = v41;
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v42 = qword_1ED7AA130;
  v60 = type metadata accessor for RefreshableSiriKitEventSending();
  v61 = &off_1E7C9CA68;
  v59 = v42;
  sub_1C2AE146C();
  v44 = v43;
  type metadata accessor for AnyNeedsConfirmationFlow(0, v56, v45, v46);
  v66 = v44;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v47 = MEMORY[0x1C3BC9CD4](&unk_1C2D11270, v33);
  AnyNeedsConfirmationFlow.__allocating_init<A>(_:)(&v66, v33, v47);
  v58();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B7EC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_43_31(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B7ECB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _UNKNOWN **v33;
  uint64_t v34;
  ValueMetadata *v35;
  _UNKNOWN **v36;
  _QWORD v37[5];
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void *v44;

  v29 = a3;
  v5 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v8;
  v10 = (void *)v8[1];
  v12 = v8[2];
  v11 = v8[3];
  v13 = v8[4];
  v14 = *((_BYTE *)v8 + 40);
  v15 = (void *)v8[6];
  v30 = type metadata accessor for SiriKitNeedsConfirmationFlow(0, v16, v17, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v29, a4);
  v38 = v9;
  v39 = v10;
  v40 = v12;
  v41 = v11;
  v42 = v13;
  v43 = v14;
  v44 = v15;
  v18 = off_1ED7A5DA8;
  sub_1C2CFD350();
  v19 = v10;
  swift_bridgeObjectRetain();
  v20 = v15;
  if (v18 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v21 = qword_1ED7A4228;
  v37[3] = type metadata accessor for RefreshableDeviceState();
  v37[4] = &protocol witness table for RefreshableDeviceState;
  v37[0] = v21;
  sub_1C2CFD350();
  v22 = sub_1C2B0C6E8();
  v35 = &type metadata for OutputPublishers;
  v36 = &off_1E7C8D920;
  v34 = v22;
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v23 = qword_1ED7AA130;
  v32 = type metadata accessor for RefreshableSiriKitEventSending();
  v33 = &off_1E7C9CA68;
  v31 = v23;
  v24 = v30;
  sub_1C2AE146C();
  v38 = v25;
  sub_1C2CFD350();
  MEMORY[0x1C3BC9CD4](&unk_1C2D11270, v24);
  v26 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v26;
}

uint64_t sub_1C2B7EED4(uint64_t a1, uint64_t a2)
{
  return j__OUTLINED_FUNCTION_26_52(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C2B7ECB8);
}

uint64_t sub_1C2B7EEE4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(void);
  uint64_t v56;
  uint64_t v57;
  _UNKNOWN **v58;
  uint64_t v59;
  ValueMetadata *v60;
  _UNKNOWN **v61;
  uint64_t v62;
  uint64_t v63;
  _UNKNOWN **v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  void *v72;

  v55 = a8;
  v54 = a9;
  v14 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *(_QWORD *)(v17 + 80);
  ParameterResolutionRecord.init(app:intent:parameterName:parameterMulticardinalIndex:result:)(v18, v19, v20, v21, v22, (uint64_t)a4, (uint64_t)&v66);
  v53 = v66;
  v50 = v67;
  v48 = v68;
  v52 = v69;
  v47 = v70;
  HIDWORD(v46) = v71;
  v51 = v72;
  v24 = type metadata accessor for NeedsConfirmationWithCancellationFlowStrategyAsyncAdapter(0, a11, a12, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a10, a11);
  sub_1C2ADFB80((uint64_t)v16);
  v26 = v25;
  v27 = MEMORY[0x1C3BC9CD4](&unk_1C2D112C4, v24);
  v29 = type metadata accessor for SiriKitNeedsConfirmationWithCancellationFlow(0, v24, v27, v28);
  v65 = v26;
  v30 = off_1ED7A5DA8;
  sub_1C2CFD350();
  v31 = a3;
  swift_bridgeObjectRetain();
  v32 = a4;
  sub_1C2CFD350();
  if (v30 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)&v66);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  v33 = qword_1ED7A4228;
  v63 = type metadata accessor for RefreshableDeviceState();
  v64 = &protocol witness table for RefreshableDeviceState;
  v62 = v33;
  sub_1C2CFD350();
  v34 = sub_1C2B0C6E8();
  v60 = &type metadata for OutputPublishers;
  v61 = &off_1E7C8D920;
  v59 = v34;
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v35 = qword_1ED7AA130;
  v57 = type metadata accessor for RefreshableSiriKitEventSending();
  v58 = &off_1E7C9CA68;
  v56 = v35;
  v36 = v50;
  v66 = v53;
  v67 = v50;
  v68 = v48;
  v69 = v52;
  v70 = v47;
  v71 = BYTE4(v46);
  v37 = v51;
  v72 = v51;
  sub_1C2AE304C();
  v39 = v38;
  type metadata accessor for AnyNeedsConfirmationFlow(0, v49, v40, v41);
  v66 = v39;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v42 = v36;
  swift_bridgeObjectRetain();
  v43 = v37;
  sub_1C2CFD350();
  v44 = MEMORY[0x1C3BC9CD4](&unk_1C2D11238, v29);
  AnyNeedsConfirmationFlow.__allocating_init<A>(_:)(&v66, v29, v44);
  v55();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B7F26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_43_31(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B7F290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v26;
  int v27;
  uint64_t v28;
  _QWORD v29[5];
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _UNKNOWN **v34;
  uint64_t v35;
  ValueMetadata *v36;
  _UNKNOWN **v37;
  uint64_t v38;
  uint64_t v39;
  _UNKNOWN **v40;

  v6 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v9;
  v11 = (void *)v9[1];
  v12 = v9[3];
  v28 = v9[2];
  v13 = v9[4];
  v27 = *((unsigned __int8 *)v9 + 40);
  v14 = (void *)v9[6];
  v17 = type metadata accessor for SiriKitNeedsConfirmationWithCancellationFlow(0, v15, v16, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, a4);
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  v18 = qword_1ED7A4228;
  v39 = type metadata accessor for RefreshableDeviceState();
  v40 = &protocol witness table for RefreshableDeviceState;
  v38 = v18;
  sub_1C2CFD350();
  v19 = sub_1C2B0C6E8();
  v36 = &type metadata for OutputPublishers;
  v37 = &off_1E7C8D920;
  v35 = v19;
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v20 = qword_1ED7AA130;
  v33 = type metadata accessor for RefreshableSiriKitEventSending();
  v34 = &off_1E7C9CA68;
  v31 = v14;
  v32 = v20;
  v29[0] = v10;
  v29[1] = v11;
  v29[2] = v28;
  v29[3] = v12;
  v29[4] = v13;
  v30 = v27;
  sub_1C2AE304C();
  v29[0] = v21;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v22 = v11;
  swift_bridgeObjectRetain();
  v23 = v14;
  MEMORY[0x1C3BC9CD4](&unk_1C2D11238, v17);
  v24 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v24;
}

uint64_t sub_1C2B7F4B8(uint64_t a1, uint64_t a2)
{
  return j__OUTLINED_FUNCTION_26_52(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C2B7F290);
}

uint64_t sub_1C2B7F4C4(uint64_t *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void (*v53)(void);
  uint64_t v54;
  uint64_t v55;
  _UNKNOWN **v56;
  uint64_t v57;
  ValueMetadata *v58;
  _UNKNOWN **v59;
  uint64_t v60;
  uint64_t v61;
  _UNKNOWN **v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  void *v70;

  v53 = a8;
  v51 = (void *)a7;
  v45 = a6;
  v52 = a9;
  v15 = *a1;
  v16 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for NeedsDisambiguationFlowStrategyAsyncAdapter(0, a11, v19, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a10, a11);
  sub_1C2931618();
  v23 = v22;
  v46 = *(_QWORD *)(v15 + 80);
  ParameterResolutionRecord.init(app:intent:parameterName:parameterMulticardinalIndex:result:)(a2, (uint64_t)a3, a5, v45, (uint64_t)v51, (uint64_t)a4, (uint64_t)&v64);
  v24 = v64;
  v51 = (void *)v65;
  v25 = v67;
  v50 = v66;
  v49 = v68;
  v48 = v69;
  v47 = v70;
  v26 = MEMORY[0x1C3BC9CD4](&unk_1C2D115E8, v21);
  v28 = type metadata accessor for SiriKitNeedsDisambiguationFlow(0, v21, v26, v27);
  v63 = v23;
  v29 = qword_1ED7A84D8;
  sub_1C2CFD350();
  v30 = a3;
  swift_bridgeObjectRetain();
  v31 = a4;
  sub_1C2CFD350();
  if (v29 != -1)
    swift_once();
  v32 = qword_1ED7AA130;
  v61 = type metadata accessor for RefreshableSiriKitEventSending();
  v62 = &off_1E7C9CA68;
  v60 = v32;
  sub_1C2CFD350();
  v33 = sub_1C2B0C6E8();
  v58 = &type metadata for OutputPublishers;
  v59 = &off_1E7C8D920;
  v57 = v33;
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)&v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  v34 = qword_1ED7A4228;
  v55 = type metadata accessor for RefreshableDeviceState();
  v56 = &protocol witness table for RefreshableDeviceState;
  v54 = v34;
  v35 = v51;
  v64 = v24;
  v65 = (uint64_t)v51;
  v66 = v50;
  v67 = v25;
  v68 = v49;
  v69 = v48;
  v36 = v47;
  v70 = v47;
  v37 = sub_1C2C22BB4();
  type metadata accessor for AnyNeedsDisambiguationFlow(0, v46, v38, v39);
  v64 = v37;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v40 = v35;
  swift_bridgeObjectRetain();
  v41 = v36;
  sub_1C2CFD350();
  v42 = MEMORY[0x1C3BC9CD4](&unk_1C2D1E388, v28);
  AnyNeedsDisambiguationFlow.__allocating_init<A>(_:)(&v64, v28, v42);
  v53();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B7F838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_43_31(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B7F85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  int v26;
  uint64_t v27;
  _QWORD v28[5];
  char v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _UNKNOWN **v33;
  uint64_t v34;
  ValueMetadata *v35;
  _UNKNOWN **v36;
  uint64_t v37;
  uint64_t v38;
  _UNKNOWN **v39;

  v6 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v9;
  v11 = (void *)v9[1];
  v12 = v9[3];
  v27 = v9[2];
  v13 = v9[4];
  v26 = *((unsigned __int8 *)v9 + 40);
  v14 = (void *)v9[6];
  v17 = type metadata accessor for SiriKitNeedsDisambiguationFlow(0, v15, v16, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, a4);
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v18 = qword_1ED7AA130;
  v38 = type metadata accessor for RefreshableSiriKitEventSending();
  v39 = &off_1E7C9CA68;
  v37 = v18;
  sub_1C2CFD350();
  v19 = sub_1C2B0C6E8();
  v35 = &type metadata for OutputPublishers;
  v36 = &off_1E7C8D920;
  v34 = v19;
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  v20 = qword_1ED7A4228;
  v32 = type metadata accessor for RefreshableDeviceState();
  v33 = &protocol witness table for RefreshableDeviceState;
  v30 = v14;
  v31 = v20;
  v28[0] = v10;
  v28[1] = v11;
  v28[2] = v27;
  v28[3] = v12;
  v28[4] = v13;
  v29 = v26;
  v28[0] = sub_1C2C22BB4();
  sub_1C2CFD350();
  sub_1C2CFD350();
  v21 = v11;
  swift_bridgeObjectRetain();
  v22 = v14;
  MEMORY[0x1C3BC9CD4](&unk_1C2D1E388, v17);
  v23 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v23;
}

uint64_t sub_1C2B7FA84(uint64_t a1, uint64_t a2)
{
  return j__OUTLINED_FUNCTION_26_52(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C2B7F85C);
}

void static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A, B>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_82_15();
  v4 = (_QWORD *)OUTLINED_FUNCTION_10_74();
  v4[2] = v1;
  v4[3] = v0;
  v4[4] = v3;
  v4[5] = v2;
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_8_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_82_15();
  v4 = (_QWORD *)OUTLINED_FUNCTION_10_74();
  v4[2] = v1;
  v4[3] = v0;
  v4[4] = v3;
  v4[5] = v2;
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_8_0();
}

void sub_1C2B7FADC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C2B7FB64(a1, a2, v2[4], v2[5], v2[2], v2[3], (uint64_t)&protocol requirements base descriptor for NeedsDisambiguationAdaptable, (uint64_t)&associated type descriptor for NeedsDisambiguationAdaptable.ChoiceType, (uint64_t (*)(__int128 *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2AEBAA0);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B7FB64(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(__int128 *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  _UNKNOWN **v25;
  __int128 v26;
  __int128 v29;
  __int128 v30;
  _UNKNOWN **v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _UNKNOWN **v36;

  v12 = *a1;
  v26 = *(_OWORD *)(a2 + 16);
  v25 = *(_UNKNOWN ***)(a2 + 32);
  v24 = *(_BYTE *)(a2 + 40);
  v23 = *(_QWORD *)(a2 + 48);
  *((_QWORD *)&v30 + 1) = &type metadata for OutputPublishers;
  v31 = &off_1E7C8D920;
  *(_QWORD *)&v29 = sub_1C2B0C6E8();
  v13 = type metadata accessor for ResponseFactory();
  v14 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v14 + 40) = &type metadata for DialogUsageProvider;
  *(_QWORD *)(v14 + 48) = &protocol witness table for DialogUsageProvider;
  v15 = type metadata accessor for PatternFlowProvider();
  v16 = OUTLINED_FUNCTION_5_2();
  v35 = v13;
  v36 = &protocol witness table for ResponseFactory;
  *(_QWORD *)&v34 = v14;
  sub_1C28B99EC(&v29, v16 + 16);
  sub_1C28B99EC(&v34, v16 + 56);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = type metadata accessor for NeedsDisambiguationAdapterFlow(0, AssociatedTypeWitness, *(_QWORD *)(v12 + 80), v18);
  v35 = v15;
  v36 = &protocol witness table for PatternFlowProvider;
  *(_QWORD *)&v34 = v16;
  v29 = *(_OWORD *)a2;
  v30 = v26;
  v31 = v25;
  v32 = v24;
  v33 = v23;
  OUTLINED_FUNCTION_16_0();
  v20 = a9(&v34, &v29, a3, a4, a5, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
  *(_QWORD *)&v29 = v20;
  MEMORY[0x1C3BC9CD4](&unk_1C2D118B0, v19);
  v21 = Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_147();
  swift_release();
  return v21;
}

void sub_1C2B7FD3C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C2B7FB64(a1, a2, v2[4], v2[5], v2[2], v2[3], (uint64_t)&protocol requirements base descriptor for DetailedDisambiguationFlowProvider, (uint64_t)&associated type descriptor for DetailedDisambiguationFlowProvider.ChoiceType, (uint64_t (*)(__int128 *, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2AEBED8);
  OUTLINED_FUNCTION_80();
}

void static RCHChildFlowFactoryHelper.makeUnsupportedValueAndPromptFlowProducer<A>(strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_80();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_0_86(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_3_80();
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v10);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_8_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_80();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_0_86(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_3_80();
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v10);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B7FDC8(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _OWORD v45[3];
  uint64_t v46;

  v42 = a8;
  v43 = a1;
  v39 = (void *)a4;
  v40 = a7;
  v37 = a3;
  v38 = a5;
  v41 = a9;
  v15 = *a1;
  v16 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for UnsupportedValueFlowStrategyToAsyncAdapter(0, a11, a12, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a10, a11);
  sub_1C2931618();
  v44 = v21;
  *(_QWORD *)&v45[0] = v21;
  MEMORY[0x1C3BC9CD4](&unk_1C2D22B68, v20);
  static RCHChildFlowFactoryHelper.makeUnsupportedValueAndPromptFlowProducer<A>(strategy:)();
  v23 = v22;
  v24 = *(_QWORD *)(v15 + 80);
  v25 = v39;
  ParameterResolutionRecord.init(app:intent:parameterName:parameterMulticardinalIndex:result:)(a2, (uint64_t)a3, v38, a6, v40, (uint64_t)v39, (uint64_t)v45);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a11;
  v26[3] = a12;
  v27 = v41;
  v26[4] = v42;
  v26[5] = v27;
  v28 = swift_allocObject();
  v29 = v45[1];
  *(_OWORD *)(v28 + 56) = v45[0];
  *(_QWORD *)(v28 + 16) = a11;
  *(_QWORD *)(v28 + 24) = a12;
  *(_QWORD *)(v28 + 32) = sub_1C2B80084;
  *(_QWORD *)(v28 + 40) = v23;
  *(_QWORD *)(v28 + 48) = v43;
  *(_OWORD *)(v28 + 72) = v29;
  *(_OWORD *)(v28 + 88) = v45[2];
  *(_QWORD *)(v28 + 104) = v46;
  sub_1C2CFD350();
  v30 = v37;
  swift_bridgeObjectRetain();
  v31 = v25;
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2B84CD4((uint64_t)v45);
  v34 = type metadata accessor for AnyUnsupportedValueFlow(0, v24, v32, v33);
  sub_1C29A2AC8((uint64_t)sub_1C2B7D9E8, (uint64_t)v26, (uint64_t)&unk_1EF79C328, v28, v34);
  swift_release();
  swift_release();
  sub_1C2B84D20((uint64_t)v45);
  swift_release();
  return swift_release();
}

void sub_1C2B7FFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_43_31(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B80058(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = *a4;
  return swift_task_switch();
}

void sub_1C2B80084()
{
  sub_1C2B80098();
}

void sub_1C2B80098()
{
  OUTLINED_FUNCTION_42_32();
  sub_1C2B803EC();
}

uint64_t sub_1C2B800B0(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _OWORD v45[3];
  uint64_t v46;

  v42 = a8;
  v43 = a1;
  v39 = (void *)a4;
  v40 = a7;
  v37 = a3;
  v38 = a5;
  v41 = a9;
  v15 = *a1;
  v16 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for UnsupportedValueFlowStrategyToAsyncAdapter(0, a11, a12, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a10, a11);
  sub_1C2931618();
  v44 = v21;
  *(_QWORD *)&v45[0] = v21;
  MEMORY[0x1C3BC9CD4](&unk_1C2D22B68, v20);
  static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)();
  v23 = v22;
  v24 = *(_QWORD *)(v15 + 80);
  v25 = v39;
  ParameterResolutionRecord.init(app:intent:parameterName:parameterMulticardinalIndex:result:)(a2, (uint64_t)a3, v38, a6, v40, (uint64_t)v39, (uint64_t)v45);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a11;
  v26[3] = a12;
  v27 = v41;
  v26[4] = v42;
  v26[5] = v27;
  v28 = swift_allocObject();
  v29 = v45[1];
  *(_OWORD *)(v28 + 56) = v45[0];
  *(_QWORD *)(v28 + 16) = a11;
  *(_QWORD *)(v28 + 24) = a12;
  *(_QWORD *)(v28 + 32) = sub_1C2B80570;
  *(_QWORD *)(v28 + 40) = v23;
  *(_QWORD *)(v28 + 48) = v43;
  *(_OWORD *)(v28 + 72) = v29;
  *(_OWORD *)(v28 + 88) = v45[2];
  *(_QWORD *)(v28 + 104) = v46;
  sub_1C2CFD350();
  v30 = v37;
  swift_bridgeObjectRetain();
  v31 = v25;
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2B84CD4((uint64_t)v45);
  v34 = type metadata accessor for AnyUnsupportedValueFlow(0, v24, v32, v33);
  sub_1C29A2AC8((uint64_t)sub_1C2B7D7F8, (uint64_t)v26, (uint64_t)&unk_1EF79C318, v28, v34);
  swift_release();
  swift_release();
  sub_1C2B84D20((uint64_t)v45);
  swift_release();
  return swift_release();
}

void sub_1C2B802CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_43_31(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B802F0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = *a4;
  return swift_task_switch();
}

uint64_t sub_1C2B80318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _OWORD *);
  _QWORD *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v22[3];
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD **)(v0 + 24);
  v4 = *(uint64_t (**)(uint64_t, _OWORD *))(v0 + 32);
  v6 = *(_OWORD *)(v1 + 16);
  v22[0] = *(_OWORD *)v1;
  v22[1] = v6;
  v22[2] = *(_OWORD *)(v1 + 32);
  v23 = *(_QWORD *)(v1 + 48);
  v7 = v4(v3, v22);
  v8 = *(_QWORD *)(v2 + 80);
  type metadata accessor for AnyUnsupportedValueFlow(0, v8, v9, v10);
  *(_QWORD *)(v0 + 16) = v7;
  v13 = type metadata accessor for IntentPromptAnswer(255, v8, v11, v12);
  v16 = type metadata accessor for PromptResult(255, v13, v14, v15);
  v19 = type metadata accessor for AnyValueFlow(0, v16, v17, v18);
  v20 = MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyValueFlow<A>, v19);
  *v5 = AnyUnsupportedValueFlow.__allocating_init<A>(_:)(v0 + 16, v19, v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C2B803EC()
{
  uint64_t (*v0)(char *, uint64_t, _QWORD *, _QWORD *, _QWORD *);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, _QWORD *, _QWORD *, _QWORD *);
  _QWORD v33[5];
  _QWORD v34[5];
  _QWORD v35[5];
  char v36;
  void *v37;

  OUTLINED_FUNCTION_9();
  v32 = v0;
  v2 = v1;
  v29 = v4;
  v30 = v3;
  v5 = *(_QWORD *)(v1 - 8);
  v7 = MEMORY[0x1E0C80A78](v3, v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)v10;
  v12 = *(void **)(v10 + 8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *(_QWORD *)(v10 + 24);
  v15 = *(_QWORD *)(v10 + 32);
  v16 = *(_BYTE *)(v10 + 40);
  v17 = *(void **)(v10 + 48);
  v31 = OUTLINED_FUNCTION_75_25(v7, v10, v18, v19, v20, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, v29, v2);
  v35[0] = v11;
  v35[1] = v12;
  v35[2] = v13;
  v35[3] = v14;
  v35[4] = v15;
  v22 = v30;
  v36 = v16;
  v37 = v17;
  v23 = qword_1ED7A84D8;
  OUTLINED_FUNCTION_38_0();
  sub_1C2CFD350();
  v24 = v12;
  swift_bridgeObjectRetain();
  v25 = v17;
  if (v23 != -1)
    swift_once();
  v26 = qword_1ED7AA130;
  v34[3] = type metadata accessor for RefreshableSiriKitEventSending();
  v34[4] = &off_1E7C9CA68;
  v34[0] = v26;
  sub_1C2CFD350();
  v27 = sub_1C2B0C6E8();
  v33[3] = &type metadata for OutputPublishers;
  v33[4] = &off_1E7C8D920;
  v33[0] = v27;
  v28 = v31;
  v35[0] = v32(v9, v22, v35, v34, v33);
  MEMORY[0x1C3BC9CD4](&unk_1C2D22B30, v28);
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_1();
}

void sub_1C2B80570()
{
  sub_1C2B80098();
}

void static RCHChildFlowFactoryHelper.makeUnsupportedValuePunchOutFlowProducer<A>(strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_2_80();
  v3 = MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_0_86(v3, v4, v5, v6, v7, v8, v9, v10, v14);
  OUTLINED_FUNCTION_3_80();
  v11 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v11);
  v12 = OUTLINED_FUNCTION_10_74();
  v13 = OUTLINED_FUNCTION_38_40(v12);
  *(_QWORD *)(v13 + 32) = sub_1C2B808D8;
  *(_QWORD *)(v13 + 40) = v0;
  OUTLINED_FUNCTION_8_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_80();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_0_86(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_3_80();
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v10);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B805F0(_QWORD *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(void);
  uint64_t v55;
  ValueMetadata *v56;
  _UNKNOWN **v57;
  uint64_t v58;
  uint64_t v59;
  _UNKNOWN **v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void *v68;

  v54 = a8;
  v52 = a7;
  v48 = a6;
  v51 = a5;
  v49 = a4;
  v47 = a3;
  v46 = a2;
  v50 = a1;
  v53 = a9;
  v14 = *a1;
  v15 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for UnsupportedValueFlowStrategyToAsyncAdapter(0, a11, v18, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a10, a11);
  sub_1C2931618();
  v22 = v21;
  v23 = v51;
  v51 = *(_QWORD *)(v14 + 80);
  ParameterResolutionRecord.init(app:intent:parameterName:parameterMulticardinalIndex:result:)(v46, (uint64_t)a3, v23, a6, v52, (uint64_t)a4, (uint64_t)&v62);
  v24 = v62;
  v25 = v63;
  v27 = v64;
  v26 = v65;
  v28 = v66;
  v29 = v67;
  v30 = v68;
  v31 = MEMORY[0x1C3BC9CD4](&unk_1C2D22B68, v20);
  v33 = type metadata accessor for SiriKitUnsupportedValuePunchOutFlow(0, v20, v31, v32);
  v61 = v22;
  v62 = v24;
  v63 = v25;
  v64 = v27;
  v65 = v26;
  v66 = v28;
  v67 = v29;
  v68 = v30;
  v34 = qword_1ED7A84D8;
  sub_1C2CFD350();
  v35 = v47;
  swift_bridgeObjectRetain();
  v36 = v49;
  v52 = v22;
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  v37 = v25;
  swift_bridgeObjectRetain();
  v38 = v30;
  if (v34 != -1)
    swift_once();
  v39 = qword_1ED7AA130;
  v59 = type metadata accessor for RefreshableSiriKitEventSending();
  v60 = &off_1E7C9CA68;
  v58 = v39;
  sub_1C2CFD350();
  v40 = sub_1C2B0C6E8();
  v56 = &type metadata for OutputPublishers;
  v57 = &off_1E7C8D920;
  v55 = v40;
  v41 = sub_1C28F6C60();
  type metadata accessor for AnyUnsupportedValueFlow(0, v51, v42, v43);
  v62 = v41;
  sub_1C2CFD350();
  v44 = MEMORY[0x1C3BC9CD4](&unk_1C2D22B30, v33);
  AnyUnsupportedValueFlow.__allocating_init<A>(_:)(&v62, v33, v44);
  v54();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B808D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_43_31(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_80();
}

void sub_1C2B808FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  a10(a1, a2, a3, a4);
  OUTLINED_FUNCTION_22_1();
}

void sub_1C2B80938(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 32))(a1);
  OUTLINED_FUNCTION_22_1();
}

uint64_t sub_1C2B809B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  ValueMetadata *v31;
  _UNKNOWN **v32;
  uint64_t v33;
  uint64_t v34;
  _UNKNOWN **v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;

  v27 = a3;
  v28 = a1;
  v5 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)v8;
  v10 = *(void **)(v8 + 8);
  v12 = *(_QWORD *)(v8 + 16);
  v11 = *(_QWORD *)(v8 + 24);
  v13 = *(_QWORD *)(v8 + 32);
  v14 = *(_BYTE *)(v8 + 40);
  v15 = *(void **)(v8 + 48);
  v29 = type metadata accessor for SiriKitUnsupportedValuePunchOutFlow(0, v16, v17, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v27, a4);
  v36 = v9;
  v37 = v10;
  v38 = v12;
  v39 = v11;
  v40 = v13;
  v41 = v14;
  v42 = v15;
  v18 = qword_1ED7A84D8;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v19 = v10;
  swift_bridgeObjectRetain();
  v20 = v15;
  if (v18 != -1)
    swift_once();
  v21 = qword_1ED7AA130;
  v34 = type metadata accessor for RefreshableSiriKitEventSending();
  v35 = &off_1E7C9CA68;
  v33 = v21;
  sub_1C2CFD350();
  v22 = sub_1C2B0C6E8();
  v31 = &type metadata for OutputPublishers;
  v32 = &off_1E7C8D920;
  v30 = v22;
  v23 = v29;
  v36 = sub_1C28F6C60();
  MEMORY[0x1C3BC9CD4](&unk_1C2D22B30, v23);
  v24 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v24;
}

uint64_t sub_1C2B80B64(uint64_t a1, uint64_t a2)
{
  return j__OUTLINED_FUNCTION_26_52(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C2B809B4);
}

#error "1C2B80B94: call analysis failed (funcsize=24)"

void sub_1C2B80BE0(uint64_t *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];
  _QWORD v41[5];
  _QWORD v42[5];
  _QWORD v43[6];

  v39 = a8;
  v37 = a7;
  v36 = a6;
  v38 = a5;
  v33 = a4;
  v32 = a3;
  v35 = a2;
  v12 = *a1;
  v13 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7A4220 != -1)
    swift_once();
  v34 = a9;
  sub_1C28C73A4((uint64_t)v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v16 = qword_1ED7AA050;
  v17 = type metadata accessor for ContactsManagerAsync();
  v18 = (_QWORD *)swift_allocObject();
  v18[5] = type metadata accessor for RefreshableAceServiceInvoker();
  v18[6] = &protocol witness table for RefreshableAceServiceInvoker;
  v18[2] = v16;
  v19 = *(_QWORD *)(v12 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for SiriKitUnsupportedUnsetRelationshipFlow(0, v19, AssociatedTypeWitness, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a10, a11);
  v43[3] = v17;
  v43[4] = &protocol witness table for ContactsManagerAsync;
  v43[0] = v18;
  v22 = qword_1ED7A84D8;
  sub_1C2CFD350();
  sub_1C2CFD350();
  if (v22 != -1)
    swift_once();
  v23 = qword_1ED7AA130;
  v42[3] = type metadata accessor for RefreshableSiriKitEventSending();
  v42[4] = &off_1E7C9CA68;
  v42[0] = v23;
  v24 = off_1ED7A5DA8;
  sub_1C2CFD350();
  if (v24 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v25 = qword_1ED7A4228;
  v41[3] = type metadata accessor for RefreshableDeviceState();
  v41[4] = &protocol witness table for RefreshableDeviceState;
  v41[0] = v25;
  sub_1C2CFD350();
  v26 = sub_1C2B0C6E8();
  v40[3] = &type metadata for OutputPublishers;
  v40[4] = &off_1E7C8D920;
  v40[0] = v26;
  v27 = v35;
  sub_1C2CFD350();
  v28 = v32;
  v29 = v36;
  swift_bridgeObjectRetain();
  v30 = v33;
  sub_1C2C94478((uint64_t)v15, (uint64_t)v43, (uint64_t)v42, (uint64_t)v41, (uint64_t)v40, v27, (uint64_t)v28, v38, v29, v37, (uint64_t)v30, a11, a12);
}

void sub_1C2B80F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_65_21();
  sub_1C2B80BE0(v2, v3, v4, v5, v6, v7, v8, v9, v10, v0 + ((v1 + 40) & ~v1), v11, v12);
}

void sub_1C2B80F68()
{
  OUTLINED_FUNCTION_22_1();
}

#error "1C2B80F94: call analysis failed (funcsize=18)"

uint64_t sub_1C2B80FC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD v41[5];
  char v42;
  void *v43;
  uint64_t v44;
  ValueMetadata *v45;
  _UNKNOWN **v46;
  uint64_t v47;
  uint64_t v48;
  _UNKNOWN **v49;
  uint64_t v50;
  uint64_t v51;
  _UNKNOWN **v52;
  _QWORD *v53;
  uint64_t v54;
  _UNKNOWN **v55;

  v8 = *a1;
  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v12;
  v37 = (void *)v12[1];
  v36 = v12[2];
  v38 = v12[3];
  v35 = v12[4];
  v34 = *((unsigned __int8 *)v12 + 40);
  v39 = (void *)v12[6];
  if (qword_1ED7A4220 != -1)
    swift_once();
  sub_1C28C73A4((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v14 = qword_1ED7AA050;
  v15 = type metadata accessor for ContactsManagerAsync();
  v16 = (_QWORD *)swift_allocObject();
  v16[5] = type metadata accessor for RefreshableAceServiceInvoker();
  v16[6] = &protocol witness table for RefreshableAceServiceInvoker;
  v16[2] = v14;
  v17 = *(_QWORD *)(v8 + 80);
  v40 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = type metadata accessor for SiriKitUnsupportedUnsetRelationshipFlow(0, v17, AssociatedTypeWitness, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, a4);
  v54 = v15;
  v55 = &protocol witness table for ContactsManagerAsync;
  v53 = v16;
  v21 = qword_1ED7A84D8;
  sub_1C2CFD350();
  sub_1C2CFD350();
  if (v21 != -1)
    swift_once();
  v22 = qword_1ED7AA130;
  v51 = type metadata accessor for RefreshableSiriKitEventSending();
  v52 = &off_1E7C9CA68;
  v50 = v22;
  v23 = off_1ED7A5DA8;
  sub_1C2CFD350();
  if (v23 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v24 = qword_1ED7A4228;
  v48 = type metadata accessor for RefreshableDeviceState();
  v49 = &protocol witness table for RefreshableDeviceState;
  v47 = v24;
  sub_1C2CFD350();
  v25 = sub_1C2B0C6E8();
  v45 = &type metadata for OutputPublishers;
  v46 = &off_1E7C8D920;
  v44 = v25;
  v41[0] = v13;
  v26 = v37;
  v41[1] = v37;
  v41[2] = v36;
  v41[3] = v38;
  v41[4] = v35;
  v42 = v34;
  v27 = v39;
  v43 = v39;
  sub_1C2CFD350();
  v28 = v26;
  swift_bridgeObjectRetain();
  v29 = v27;
  sub_1C2C944F4();
  v41[0] = v30;
  MEMORY[0x1C3BC9CD4](&unk_1C2D226B8, v20);
  v31 = Flow.eraseToAnyValueFlow()();
  swift_release();
  swift_release();
  return v31;
}

uint64_t sub_1C2B81330(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1C2B80FC0(a1, a2, v2 + ((v4 + 40) & ~v4), v3, *(_QWORD *)(v2 + 32));
}

void static RCHChildFlowFactoryHelper.makeUnsupportedFlowProducer<A, B>(unsupportedValueFlowProducer:unsetRelationshipStrategy:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_33_37(v0, v1, v2, v3, v4, v5, v6, v7);
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_29_42(v10, v11, v12, v13, v14, v15, v16, v17, v19);
  OUTLINED_FUNCTION_74_18();
  v18 = (char *)swift_allocObject();
  OUTLINED_FUNCTION_28_40(v18);
  sub_1C2CFD350();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_33_37(v0, v1, v2, v3, v4, v5, v6, v7);
  v10 = MEMORY[0x1E0C80A78](v8, v9);
  OUTLINED_FUNCTION_29_42(v10, v11, v12, v13, v14, v15, v16, v17, v19);
  OUTLINED_FUNCTION_74_18();
  v18 = (char *)swift_allocObject();
  OUTLINED_FUNCTION_28_40(v18);
  sub_1C2CFD350();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2B813B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(char a1), _OWORD *), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 a15)
{
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v16[1] = a15;
  v17 = a12;
  v18 = a13;
  v19 = a1;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v23 = a5;
  v24 = a6;
  v25 = a7;
  v26 = a8;
  v27 = a9;
  v28 = a14;
  return a10(a2, a3, a4, a5, a6, a7, sub_1C2B84BF4, v16);
}

uint64_t sub_1C2B81430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;

  OUTLINED_FUNCTION_65_21();
  *(_QWORD *)&v14 = v2;
  *((_QWORD *)&v14 + 1) = v3;
  return sub_1C2B813B4(v4, v5, v6, v7, v8, v9, v10, v11, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(char), _OWORD *))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v0 + ((v1 + 72) & ~v1), v14);
}

uint64_t sub_1C2B81478(char a1, void (*a2)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *), uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void (*v33)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint8_t *v41;
  _QWORD *v42;
  uint64_t v47;

  v16 = a7;
  v17 = a6;
  v20 = a9;
  v21 = a10;
  v22 = *a4;
  if ((a1 & 1) != 0)
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v23 = sub_1C2CFD878();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED7AA1B0);
    v24 = sub_1C2CFD86C();
    v25 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = v22;
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1C28B6000, v24, v25, "Provided decision determined that this is the Unset Relationship use case. Pushing specialized flow.", v27, 2u);
      v28 = v27;
      v22 = v26;
      MEMORY[0x1C3BC9DE8](v28, -1, -1);
    }

    v29 = *(_QWORD *)(v22 + 88);
    static RCHChildFlowFactoryHelper.makeUnsupportedUnsetRelationshipFlowProducer<A, B>(strategy:)(a13, a14, v29, a15);
    v31 = v30;
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = a14;
    v32[3] = v29;
    v32[4] = a15;
    v32[5] = a11;
    v32[6] = a12;
    v33 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *))(v31 + 32);
    sub_1C2CFD350();
    v33(a4, a5, a6, a7, a8, a9, a10, sub_1C2B84C5C, v32);
    swift_release();
  }
  else
  {
    v47 = *a4;
    if (qword_1ED7AA040 != -1)
      swift_once();
    v34 = sub_1C2CFD878();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED7AA1B0);
    v35 = sub_1C2CFD86C();
    v36 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = v17;
      v38 = v16;
      v39 = a8;
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1C28B6000, v35, v36, "Provided decision determined that this is not the Unset Relationship use case. Pushing regular unsupported flow.", v40, 2u);
      v41 = v40;
      a8 = v39;
      v16 = v38;
      v17 = v37;
      v21 = a10;
      v20 = a9;
      MEMORY[0x1C3BC9DE8](v41, -1, -1);
    }

    v42 = (_QWORD *)swift_allocObject();
    v42[2] = a14;
    v42[3] = *(_QWORD *)(v47 + 88);
    v42[4] = a15;
    v42[5] = a11;
    v42[6] = a12;
    sub_1C2CFD350();
    a2(a4, a5, v17, v16, a8, v20, v21, sub_1C2B84C5C, v42);
  }
  return swift_release();
}

uint64_t sub_1C2B817F8(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;

  v12 = *a1;
  v13 = *(_QWORD *)a2;
  v14 = *(_QWORD *)(a2 + 8);
  v16 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 32);
  v18 = *(_BYTE *)(a2 + 40);
  v19 = *(_QWORD *)(a2 + 48);
  v55 = *(_QWORD *)a2;
  v56 = v14;
  v57 = v16;
  v58 = v15;
  v59 = v17;
  v53 = v17;
  v52 = v18;
  v60 = v18;
  v51 = v19;
  v61 = v19;
  if ((a3(&v55) & 1) != 0)
  {
    v20 = a9;
    if (qword_1ED7AA040 != -1)
      swift_once();
    v21 = sub_1C2CFD878();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED7AA1B0);
    v22 = sub_1C2CFD86C();
    v23 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = v12;
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1C28B6000, v22, v23, "Provided decision determined that this is the Unset Relationship use case. Pushing specialized flow.", v25, 2u);
      v26 = v25;
      v12 = v24;
      v20 = a9;
      MEMORY[0x1C3BC9DE8](v26, -1, -1);
    }

    static RCHChildFlowFactoryHelper.makeUnsupportedUnsetRelationshipFlowProducer<A, B>(strategy:)(a7, a8, *(_QWORD *)(v12 + 88), v20);
    v55 = v13;
    v56 = v14;
    v57 = v16;
    v58 = v15;
    v59 = v53;
    v60 = v52;
    v61 = v51;
    v55 = sub_1C2B81330(a1, (uint64_t)&v55);
    v29 = type metadata accessor for IntentPromptAnswer(255, *(_QWORD *)(v12 + 80), v27, v28);
    v32 = type metadata accessor for PromptResult(255, v29, v30, v31);
    v35 = type metadata accessor for AnyValueFlow(0, v32, v33, v34);
    MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyValueFlow<A>, v35);
    v36 = Flow.eraseToAnyValueFlow()();
    swift_release();
  }
  else
  {
    if (qword_1ED7AA040 != -1)
      swift_once();
    v37 = sub_1C2CFD878();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED7AA1B0);
    v38 = sub_1C2CFD86C();
    v39 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1C28B6000, v38, v39, "Provided decision determined that this is not the Unset Relationship use case. Pushing regular unsupported flow.", v40, 2u);
      MEMORY[0x1C3BC9DE8](v40, -1, -1);
    }

    v55 = v13;
    v56 = v14;
    v57 = v16;
    v58 = v15;
    v59 = v53;
    v60 = v52;
    v61 = v51;
    v55 = a5(a1, &v55);
    v43 = type metadata accessor for IntentPromptAnswer(255, *(_QWORD *)(v12 + 80), v41, v42);
    v46 = type metadata accessor for PromptResult(255, v43, v44, v45);
    v49 = type metadata accessor for AnyValueFlow(0, v46, v47, v48);
    MEMORY[0x1C3BC9CD4](&protocol conformance descriptor for AnyValueFlow<A>, v49);
    v36 = Flow.eraseToAnyValueFlow()();
  }
  swift_release();
  return v36;
}

uint64_t objectdestroy_71Tm()
{
  OUTLINED_FUNCTION_87_17();
  OUTLINED_FUNCTION_88_17();
  swift_release();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_71_25();
  return OUTLINED_FUNCTION_2_5();
}

void sub_1C2B81B7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  sub_1C2B817F8(a1, a2, *(uint64_t (**)(uint64_t *))(v2 + 40), *(_QWORD *)(v2 + 48), *(uint64_t (**)(uint64_t *, uint64_t *))(v2 + 56), *(_QWORD *)(v2 + 64), v2 + ((v4 + 72) & ~v4), v3, *(_QWORD *)(v2 + 32));
  OUTLINED_FUNCTION_80();
}

void (*static RCHChildFlowFactoryHelper.makeUnsetRelationshipFlowProducer<A, B>(config:)(uint64_t a1))(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v1;
  __int128 v3[2];

  sub_1C28B9A48(a1, (uint64_t)v3);
  v1 = OUTLINED_FUNCTION_5_2();
  sub_1C28B99EC(v3, v1 + 16);
  return sub_1C2B81D8C;
}

uint64_t sub_1C2B81C10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v27[2];
  __int128 v28;
  uint64_t v29;
  _UNKNOWN **v30;

  v14 = *a1;
  v15 = type metadata accessor for ConfigToUnsupportedUnsetRelationshipFlowStrategyAdapter(0, *(_QWORD *)(*a1 + 80), a3, a4);
  if (off_1ED7A5DA8 != (_UNKNOWN *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)&v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  v16 = qword_1ED7A4228;
  v29 = type metadata accessor for RefreshableDeviceState();
  v30 = &protocol witness table for RefreshableDeviceState;
  *(_QWORD *)&v28 = v16;
  sub_1C28B9A48(a10, (uint64_t)v27);
  sub_1C29E39A0(&v28, v27);
  *(_QWORD *)&v28 = v17;
  v18 = *(_QWORD *)(v14 + 88);
  v19 = MEMORY[0x1C3BC9CD4](&unk_1C2D05D84, v15);
  static RCHChildFlowFactoryHelper.makeUnsupportedUnsetRelationshipFlowProducer<A, B>(strategy:)(&v28, v15, v18, v19);
  v21 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 32);
  sub_1C2CFD350();
  v21(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  swift_release();
  return swift_release();
}

uint64_t sub_1C2B81D68()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1C2B81D8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_1C2B81C10(a1, a2, a3, a4, a5, a6, a7, a8, a9, v9 + 16);
  OUTLINED_FUNCTION_80();
}

void static RCHChildFlowFactoryHelper.makeConfirmIntentFlowProducer<A>(strategy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  v6 = OUTLINED_FUNCTION_80_15();
  static RCHChildFlowFactoryHelper.makeConditionalConfirmIntentFlowProducer<A>(strategy:_:)(v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_76_24();
  OUTLINED_FUNCTION_18();
}

{
  uint64_t v5;
  uint64_t v6;

  v5 = OUTLINED_FUNCTION_5_2();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  v6 = OUTLINED_FUNCTION_80_15();
  static RCHChildFlowFactoryHelper.makeConditionalConfirmIntentFlowProducer<A>(strategy:_:)(v6);
  OUTLINED_FUNCTION_76_24();
  OUTLINED_FUNCTION_18();
}

void static RCHChildFlowFactoryHelper.makeConfirmIntentWithAutoCompletionFlowProducer<A>(strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_2_80();
  v3 = MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_0_86(v3, v4, v5, v6, v7, v8, v9, v10, v14);
  OUTLINED_FUNCTION_3_80();
  v11 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v11);
  v12 = OUTLINED_FUNCTION_10_74();
  v13 = OUTLINED_FUNCTION_38_40(v12);
  *(_QWORD *)(v13 + 32) = sub_1C2B821CC;
  *(_QWORD *)(v13 + 40) = v0;
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B81EE4(uint64_t *a1, uint64_t a2, void *a3, void *a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  _UNKNOWN **v42;
  uint64_t v43;
  uint64_t v44;
  _UNKNOWN **v45;
  __int128 v46;
  ValueMetadata *v47;
  _UNKNOWN **v48;

  v38 = a6;
  v39 = a5;
  v12 = *a1;
  v36 = a4;
  v37 = v12;
  v13 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7A4220 != -1)
    swift_once();
  sub_1C28C73A4((uint64_t)&v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  v16 = qword_1ED7AA050;
  v17 = off_1ED7A5DA8;
  sub_1C2CFD350();
  if (v17 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)&v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  v18 = qword_1ED7A4228;
  type metadata accessor for ResolveConfirmHandleExecutor();
  v19 = swift_allocObject();
  sub_1C2CFD350();
  sub_1C2B9D7D8(v16, v18, v19);
  v21 = v20;
  v23 = type metadata accessor for ConfirmIntentWithAutoHandleFlow(0, a8, a9, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a7, a8);
  v24 = sub_1C2B0C6E8();
  v47 = &type metadata for OutputPublishers;
  v48 = &off_1E7C8D920;
  *(_QWORD *)&v46 = v24;
  v25 = type metadata accessor for LegacySiriKitOutputPublisher();
  v26 = swift_allocObject();
  sub_1C28B99EC(&v46, v26 + 16);
  v47 = (ValueMetadata *)v25;
  v48 = &off_1E7C8D810;
  *(_QWORD *)&v46 = v26;
  v44 = type metadata accessor for ResolveConfirmHandleService();
  v45 = &off_1E7C99F38;
  v43 = v21;
  v27 = qword_1ED7A84D8;
  sub_1C2CFD350();
  v28 = a3;
  v29 = v36;
  sub_1C2CFD350();
  if (v27 != -1)
    swift_once();
  v30 = qword_1ED7AA130;
  v41 = type metadata accessor for RefreshableSiriKitEventSending();
  v42 = &off_1E7C9CA68;
  v40 = v30;
  sub_1C2CFD350();
  v31 = sub_1C29F4730();
  type metadata accessor for AnyConfirmIntentFlow(0, *(_QWORD *)(v37 + 80), v32, v33);
  *(_QWORD *)&v46 = v31;
  sub_1C2CFD350();
  v34 = MEMORY[0x1C3BC9CD4](&unk_1C2D063E0, v23);
  AnyConfirmIntentFlow.__allocating_init<A>(_:)(&v46, v23, v34);
  v39();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B821CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C2B83584(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B81EE4);
}

void static RCHChildFlowFactoryHelper.makeConfirmIntentWithWaitToContinueFlowProducer<A>(strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_2_80();
  v3 = MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_0_86(v3, v4, v5, v6, v7, v8, v9, v10, v14);
  OUTLINED_FUNCTION_3_80();
  v11 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v11);
  v12 = OUTLINED_FUNCTION_10_74();
  v13 = OUTLINED_FUNCTION_38_40(v12);
  *(_QWORD *)(v13 + 32) = sub_1C2B82470;
  *(_QWORD *)(v13 + 40) = v0;
  OUTLINED_FUNCTION_8_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_80();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_0_86(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_3_80();
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v10);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B82244(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(void);
  __int128 v42;
  uint64_t v43;
  _UNKNOWN **v44;
  __int128 v45;
  void *v46;
  ValueMetadata *v47;
  _UNKNOWN **v48;
  __int128 v49;
  void *v50;
  uint64_t v51;

  v37 = a4;
  v38 = a7;
  v40 = a6;
  v41 = a5;
  v11 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *(_QWORD *)(v14 + 80);
  IntentResolutionRecord.init(app:intent:intentResponse:)(v15, v16, v17, &v45);
  v18 = v45;
  v19 = v46;
  v21 = type metadata accessor for ConfirmIntentFlowStrategyAsyncAdapter(255, a8, a9, v20);
  v22 = MEMORY[0x1C3BC9CD4](&unk_1C2D061A0, v21);
  v24 = type metadata accessor for SiriKitWaitToContinueFlow(0, v21, v22, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v38, a8);
  v25 = sub_1C29EED60((uint64_t)v13);
  v50 = v19;
  v51 = v25;
  v49 = v18;
  sub_1C2CFD350();
  v26 = a3;
  v27 = v37;
  sub_1C2CFD350();
  v28 = *((id *)&v18 + 1);
  v29 = v19;
  v30 = sub_1C2B0C6E8();
  v47 = &type metadata for OutputPublishers;
  v48 = &off_1E7C8D920;
  *(_QWORD *)&v45 = v30;
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v31 = qword_1ED7AA130;
  v43 = type metadata accessor for RefreshableSiriKitEventSending();
  v44 = &off_1E7C9CA68;
  *(_QWORD *)&v42 = v31;
  v32 = sub_1C2C37C8C((uint64_t)&v51, (uint64_t)&v49, &v45, &v42);
  type metadata accessor for AnyConfirmIntentFlow(0, v39, v33, v34);
  *(_QWORD *)&v45 = v32;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v35 = MEMORY[0x1C3BC9CD4](&unk_1C2D1F9E8, v24);
  AnyConfirmIntentFlow.__allocating_init<A>(_:)(&v45, v24, v35);
  v41();

  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B82470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C2B83584(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B82244);
}

uint64_t sub_1C2B8247C()
{
  OUTLINED_FUNCTION_12_13();
  return swift_deallocObject();
}

uint64_t sub_1C2B824EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  __int128 v26;
  ValueMetadata *v27;
  _UNKNOWN **v28;
  _QWORD v29[3];

  v6 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v9;
  v11 = (void *)v9[1];
  v12 = (void *)v9[2];
  v15 = type metadata accessor for SiriKitWaitToContinueFlow(0, v13, v14, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, a4);
  v29[0] = v10;
  v29[1] = v11;
  v29[2] = v12;
  sub_1C2CFD350();
  v16 = v11;
  v17 = v12;
  v18 = sub_1C2B0C6E8();
  v27 = &type metadata for OutputPublishers;
  v28 = &off_1E7C8D920;
  *(_QWORD *)&v26 = v18;
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v19 = qword_1ED7AA130;
  v24 = type metadata accessor for RefreshableSiriKitEventSending();
  v25 = &off_1E7C9CA68;
  *(_QWORD *)&v23 = v19;
  *(_QWORD *)&v26 = sub_1C2C37C8C((uint64_t)v8, (uint64_t)v29, &v26, &v23);
  sub_1C2CFD350();
  MEMORY[0x1C3BC9CD4](&unk_1C2D1F9E8, v15);
  v20 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v20;
}

uint64_t sub_1C2B82660(uint64_t a1, uint64_t a2)
{
  return j__OUTLINED_FUNCTION_26_52(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C2B824EC);
}

uint64_t (*static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducerAsync<A>(strategy:responseFlowProducer:)())(uint64_t *a1, __int128 *a2)
{
  static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:responseFlowProducer:)();
  return sub_1C2B8285C;
}

#error "1C2B826B4: call analysis failed (funcsize=34)"

uint64_t sub_1C2B82720(uint64_t *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;

  v9 = *a1;
  v10 = *((_QWORD *)a2 + 2);
  static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)();
  v17 = *a2;
  v18 = v10;
  v11 = sub_1C2930F78((uint64_t)a1, (uint64_t)&v17);
  v13 = type metadata accessor for HandleIntentThenRespondFlow(0, *(_QWORD *)(v9 + 80), *(_QWORD *)(v9 + 88), v12);
  sub_1C2A9678C(v11, a4, a5);
  *(_QWORD *)&v17 = v14;
  sub_1C2CFD350();
  sub_1C2CFD350();
  MEMORY[0x1C3BC9CD4](&unk_1C2D0CED0, v13);
  v15 = Flow.eraseToAnyValueFlow()();
  swift_release();
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_1C2B82820()
{
  uint64_t v0;

  OUTLINED_FUNCTION_32_1();
  OUTLINED_FUNCTION_19_4(v0);
  swift_release();
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_1C2B8285C(uint64_t *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v2 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C2B82720(a1, a2, v2 + v4, *v5, v5[1]);
}

void static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithDialogProducer<A>(strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_80();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_0_86(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_3_80();
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v10);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_8_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_80();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_0_86(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_3_80();
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v10);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B828E0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  id v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a1;
  v40 = a4;
  v38 = a3;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](v16, v20);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ContinueInAppDialogFlowStrategyAsyncAdapter(0, a8, a9, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, a7, a8);
  v41 = sub_1C2A0730C(v22);
  v42 = v41;
  MEMORY[0x1C3BC9CD4](&unk_1C2D070CC, v24);
  static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithDialogProducer<A>(strategy:)();
  v26 = v25;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a5;
  *(_QWORD *)(v27 + 24) = a6;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = a8;
  v28[3] = a9;
  v28[4] = a2;
  v30 = v38;
  v29 = v39;
  v31 = v40;
  v28[5] = v38;
  v28[6] = v31;
  v28[7] = sub_1C2B82C94;
  v28[8] = v26;
  v28[9] = v29;
  v32 = sub_1C2CFE10C();
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v32);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = sub_1C2AAC540;
  v33[5] = v27;
  v33[6] = &unk_1EF79C300;
  v33[7] = v28;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v34 = v30;
  v35 = v31;
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2948F68();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B82B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C2B83584(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B828E0);
}

uint64_t sub_1C2B82B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v7[9] = *a7;
  return swift_task_switch();
}

uint64_t sub_1C2B82BB8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD *);
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  _QWORD v13[3];

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(void (**)(uint64_t, _QWORD *))(v0 + 48);
  v4 = *(void **)(v0 + 32);
  v3 = *(void **)(v0 + 40);
  v12 = *(_QWORD **)(v0 + 16);
  IntentResolutionRecord.init(app:intent:intentResponse:)(*(_QWORD *)(v0 + 24), (uint64_t)v4, (uint64_t)v3, v13);
  v5 = (void *)v13[1];
  v6 = (void *)v13[2];
  OUTLINED_FUNCTION_16_0();
  v7 = v4;
  v8 = v3;
  v2(v1, v13);
  type metadata accessor for AnyFlow();
  OUTLINED_FUNCTION_5_2();
  OUTLINED_FUNCTION_85_17();
  sub_1C29506EC();
  v10 = v9;
  swift_release();

  OUTLINED_FUNCTION_147();
  *v12 = v10;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C2B82C94()
{
  sub_1C2B82CA8();
}

void sub_1C2B82CA8()
{
  OUTLINED_FUNCTION_42_32();
  sub_1C2B8360C();
}

uint64_t sub_1C2B82CC0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  id v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a1;
  v40 = a4;
  v38 = a3;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](v16, v20);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ContinueInAppAutoPunchOutFlowStrategyAsyncAdapter(0, a8, a9, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, a7, a8);
  v41 = sub_1C2A0730C(v22);
  v42 = v41;
  MEMORY[0x1C3BC9CD4](&unk_1C2D07094, v24);
  static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithAutomaticPunchOutProducer<A>(strategy:)();
  v26 = v25;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a5;
  *(_QWORD *)(v27 + 24) = a6;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = a8;
  v28[3] = a9;
  v28[4] = a2;
  v30 = v38;
  v29 = v39;
  v31 = v40;
  v28[5] = v38;
  v28[6] = v31;
  v28[7] = sub_1C2B82F4C;
  v28[8] = v26;
  v28[9] = v29;
  v32 = sub_1C2CFE10C();
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v32);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = sub_1C2AAC540;
  v33[5] = v27;
  v33[6] = &unk_1EF79C2E8;
  v33[7] = v28;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v34 = v30;
  v35 = v31;
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2948F68();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B82F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C2B83584(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B82CC0);
}

uint64_t sub_1C2B82F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v7[9] = *a7;
  return swift_task_switch();
}

void sub_1C2B82F4C()
{
  sub_1C2B82CA8();
}

void static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithHandoffToCompanionProducer<A>(strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_80();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_0_86(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_3_80();
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v10);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_8_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_80();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_0_86(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_3_80();
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v10);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B82FB0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  id v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a1;
  v40 = a4;
  v38 = a3;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7240);
  v16 = MEMORY[0x1E0C80A78](v14, v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](v16, v20);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ContinueInAppHandoffToCompanionFlowStrategyAsyncAdapter(0, a8, a9, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, a7, a8);
  v41 = sub_1C2A0730C(v22);
  v42 = v41;
  MEMORY[0x1C3BC9CD4](&unk_1C2D07030, v24);
  static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithHandoffToCompanionProducer<A>(strategy:)();
  v26 = v25;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a5;
  *(_QWORD *)(v27 + 24) = a6;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = a8;
  v28[3] = a9;
  v28[4] = a2;
  v30 = v38;
  v29 = v39;
  v31 = v40;
  v28[5] = v38;
  v28[6] = v31;
  v28[7] = sub_1C2B8325C;
  v28[8] = v26;
  v28[9] = v29;
  v32 = sub_1C2CFE10C();
  __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v32);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = sub_1C2AAC108;
  v33[5] = v27;
  v33[6] = &unk_1EF79C2D0;
  v33[7] = v28;
  sub_1C2CFD350();
  sub_1C2CFD350();
  v34 = v30;
  v35 = v31;
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2948F68();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B831FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C2B83584(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B82FB0);
}

void sub_1C2B8325C()
{
  sub_1C2B82CA8();
}

void static RCHChildFlowFactoryHelper.makeContinueInAppFlowWithHandoffDialogProducer<A>(strategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_2_80();
  v3 = MEMORY[0x1E0C80A78](v1, v2);
  OUTLINED_FUNCTION_0_86(v3, v4, v5, v6, v7, v8, v9, v10, v14);
  OUTLINED_FUNCTION_3_80();
  v11 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v11);
  v12 = OUTLINED_FUNCTION_10_74();
  v13 = OUTLINED_FUNCTION_38_40(v12);
  *(_QWORD *)(v13 + 32) = sub_1C2B83578;
  *(_QWORD *)(v13 + 40) = v0;
  OUTLINED_FUNCTION_8_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_2_80();
  v2 = MEMORY[0x1E0C80A78](v0, v1);
  OUTLINED_FUNCTION_0_86(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  OUTLINED_FUNCTION_3_80();
  v10 = swift_allocObject();
  OUTLINED_FUNCTION_1_75(v10);
  OUTLINED_FUNCTION_16_54();
  OUTLINED_FUNCTION_8_0();
}

uint64_t sub_1C2B832DC(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(void);
  uint64_t v34[5];
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  ValueMetadata *v40;
  _UNKNOWN **v41;
  _QWORD v42[5];
  uint64_t v43;
  uint64_t v44;
  _UNKNOWN **v45;
  uint64_t v46;

  v33 = a5;
  v13 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v15 = (char *)&v34[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ContinueInAppDialogFlowStrategyAsyncAdapter(0, v18, v16, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a7, a8);
  v20 = sub_1C2A0730C(v15);
  v21 = MEMORY[0x1C3BC9CD4](&unk_1C2D070CC, v19);
  type metadata accessor for SiriKitContinueInAppHandoffWithDialogFlow(0, v19, v21, v22);
  v46 = v20;
  v23 = qword_1ED7A84D8;
  sub_1C2CFD350();
  if (v23 != -1)
    swift_once();
  v24 = qword_1ED7AA130;
  v44 = type metadata accessor for RefreshableSiriKitEventSending();
  v45 = &off_1E7C9CA68;
  v43 = v24;
  v25 = off_1ED7A5DA8;
  sub_1C2CFD350();
  if (v25 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  v26 = qword_1ED7A4228;
  v42[3] = type metadata accessor for RefreshableDeviceState();
  v42[4] = &protocol witness table for RefreshableDeviceState;
  v42[0] = v26;
  sub_1C2CFD350();
  v27 = sub_1C2B0C6E8();
  v40 = &type metadata for OutputPublishers;
  v41 = &off_1E7C8D920;
  v39 = v27;
  IntentResolutionRecord.init(app:intent:intentResponse:)(a2, (uint64_t)a3, (uint64_t)a4, &v37);
  v35 = v37;
  v36 = v38;
  sub_1C2CFD350();
  v28 = a3;
  v29 = a4;
  MEMORY[0x1C3BC9CD4](&unk_1C2D070B0, v19);
  sub_1C2B7E374(v34);
  sub_1C2A08604();
  v31 = v30;
  type metadata accessor for AnyFlow();
  v43 = v31;
  sub_1C2CFD350();
  sub_1C28C8AC4();
  v33();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2B83578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C2B83584(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B832DC);
}

void sub_1C2B83584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v7 + 16) - 8) + 80);
  a7(a1, a2, a3, a4, a5, a6, v7 + ((v8 + 32) & ~v8));
  OUTLINED_FUNCTION_80();
}

void sub_1C2B8360C()
{
  uint64_t (*v0)(char *, _QWORD *, _QWORD *, _QWORD *, _QWORD *, uint64_t *);
  uint64_t (*v1)(char *, _QWORD *, _QWORD *, _QWORD *, _QWORD *, uint64_t *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD, uint64_t, uint64_t);
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v26[5];
  _QWORD v27[3];
  _QWORD v28[5];
  _QWORD v29[5];
  _QWORD v30[5];

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v3 = v2;
  v5 = *(_QWORD *)(v4 - 8);
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  v10 = (char *)&v26[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v11;
  v13 = (void *)v11[1];
  v14 = (void *)v11[2];
  OUTLINED_FUNCTION_75_25(v8, (uint64_t)v11, v15, v16, v17, v18);
  OUTLINED_FUNCTION_91_7((uint64_t)v10, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v19 = qword_1ED7AA130;
  v30[3] = type metadata accessor for RefreshableSiriKitEventSending();
  v30[4] = &off_1E7C9CA68;
  v30[0] = v19;
  v20 = off_1ED7A5DA8;
  OUTLINED_FUNCTION_38_0();
  if (v20 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  v21 = qword_1ED7A4228;
  v29[3] = type metadata accessor for RefreshableDeviceState();
  v29[4] = &protocol witness table for RefreshableDeviceState;
  v29[0] = v21;
  OUTLINED_FUNCTION_38_0();
  v22 = sub_1C2B0C6E8();
  v28[3] = &type metadata for OutputPublishers;
  v28[4] = &off_1E7C8D920;
  v27[2] = v14;
  v28[0] = v22;
  v27[0] = v12;
  v27[1] = v13;
  sub_1C2CFD350();
  v23 = v13;
  v24 = v14;
  sub_1C2B7E374(v26);
  v30[0] = v1(v10, v30, v29, v28, v27, v26);
  Flow.eraseToAnyFlow()();
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_1();
}

void sub_1C2B837B8()
{
  sub_1C2B82CA8();
}

void sub_1C2B837D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SiriKitServerAssistedAppResolutionFlow(0, a1, a2, a4);
  sub_1C2C2D110();
  OUTLINED_FUNCTION_1_0();
}

#error "1C2B83820: call analysis failed (funcsize=24)"

uint64_t sub_1C2B8386C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  static AppFlowFactory.makeOnDeviceAppResolutionFlow<A, B>(strategy:input:)(a7, a2, a8, *(_QWORD *)(*(_QWORD *)a1 + 80), a9);
  a5();
  return swift_release();
}

void sub_1C2B838BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(v6 + 16);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  sub_1C2B8386C(a1, a2, a3, a4, a5, a6, v6 + ((v8 + 48) & ~v8), v7, *(_QWORD *)(v6 + 40));
  OUTLINED_FUNCTION_80();
}

#error "1C2B83918: call analysis failed (funcsize=19)"

_QWORD *sub_1C2B83948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;

  sub_1C2B846B4();
  static AppFlowFactory.makeOnDeviceAppResolutionFlow<A, B>(strategy:input:)(a5, a2, a6);
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF7887B8);
  swift_allocObject();
  return sub_1C29A5FA4(v10);
}

uint64_t objectdestroy_156Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_2(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8));
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_17();
}

_QWORD *sub_1C2B839F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_1C2B83948(a1, a2, a3, a4, v4 + ((v6 + 48) & ~v6), v5);
}

void static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B, C, D>(appResolutionStrategy:authenticationStrategy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_9();
  v26 = v0;
  v27 = v1;
  v24 = v2;
  v25 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)(v4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v13 = MEMORY[0x1E0C80A78](v12, v12);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v13, v17);
  v18 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v5);
  v19 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v20 = (v16 + *(unsigned __int8 *)(v10 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = v7;
  *((_QWORD *)v21 + 3) = v5;
  v22 = v25;
  *((_QWORD *)v21 + 4) = v24;
  *((_QWORD *)v21 + 5) = v22;
  v23 = v27;
  *((_QWORD *)v21 + 6) = v26;
  *((_QWORD *)v21 + 7) = v23;
  OUTLINED_FUNCTION_91_7((uint64_t)&v21[v19], (uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32));
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v21[v20], (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2B83B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  static AppFlowFactory.makeOnDeviceAppResolutionFlow<A, B, C>(appResolutionStrategy:authenticationStrategy:input:)(a5, a6, a2, a7);
  type metadata accessor for AnyAppResolutionFlow(0, v7, v8, v9);
  v10 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v10;
}

uint64_t sub_1C2B83BD4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_4(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8));
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_71_25();
  return OUTLINED_FUNCTION_2_5();
}

void sub_1C2B83C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v4 + 24) - 8) + 80);
  sub_1C2B83B4C(a1, a2, a3, a4, v4 + v7, v4 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8), v5);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B83C8C(uint64_t *a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[5];
  _QWORD v35[5];
  _QWORD v36[6];

  v11 = *a1;
  v12 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for RequestTCCAcceptanceFlowStrategyToAsyncAdapter(0, v16, v17, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, a7);
  v19 = sub_1C2BC47DC((uint64_t)v14);
  v20 = MEMORY[0x1C3BC9CD4](&unk_1C2D1A7C8, v18);
  v22 = type metadata accessor for ServerHandledTCCFlow(0, v18, v20, v21);
  v36[5] = v19;
  v23 = qword_1ED7A84D8;
  sub_1C2CFD350();
  if (v23 != -1)
    swift_once();
  v24 = qword_1ED7AA130;
  v36[3] = type metadata accessor for RefreshableSiriKitEventSending();
  v36[4] = &off_1E7C9CA68;
  v36[0] = v24;
  v25 = off_1ED7A5DA8;
  sub_1C2CFD350();
  if (v25 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  v26 = qword_1ED7A4228;
  v35[3] = type metadata accessor for RefreshableDeviceState();
  v35[4] = &protocol witness table for RefreshableDeviceState;
  v35[0] = v26;
  sub_1C2CFD350();
  v27 = sub_1C2B0C6E8();
  v34[3] = &type metadata for OutputPublishers;
  v34[4] = &off_1E7C8D920;
  v34[0] = v27;
  sub_1C2CFD350();
  v28 = a3;
  sub_1C2BBD244();
  v30 = v29;
  type metadata accessor for AnyRequestTCCAcceptanceFlow(0, *(_QWORD *)(v11 + 80), v31, v32);
  v36[0] = v30;
  sub_1C2CFD350();
  AnyRequestTCCAcceptanceFlow.__allocating_init<A>(_:)(v36, v22, &off_1EF79E800);
  a4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C2B83ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C2B84370(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B83C8C);
}

uint64_t sub_1C2B83EE0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[6];
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  _UNKNOWN **v26;

  v8 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ServerHandledTCCFlow(0, v12, v13, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, a5);
  if (qword_1ED7A84D8 != -1)
    swift_once();
  v14 = qword_1ED7AA130;
  v25 = type metadata accessor for RefreshableSiriKitEventSending();
  v26 = &off_1E7C9CA68;
  v24 = v14;
  v15 = off_1ED7A5DA8;
  sub_1C2CFD350();
  if (v15 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  v16 = qword_1ED7A4228;
  v23[3] = type metadata accessor for RefreshableDeviceState();
  v23[4] = &protocol witness table for RefreshableDeviceState;
  v23[0] = v16;
  sub_1C2CFD350();
  v17 = sub_1C2B0C6E8();
  v22[4] = &type metadata for OutputPublishers;
  v22[5] = &off_1E7C8D920;
  v22[1] = v17;
  sub_1C2CFD350();
  v18 = a3;
  sub_1C2BBD244();
  v24 = v19;
  v20 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v20;
}

uint64_t sub_1C2B840A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B845D0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B83EE0);
}

uint64_t sub_1C2B840B4(uint64_t *a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[5];
  _QWORD v37[10];
  _QWORD v38[7];

  v11 = *a1;
  v12 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ClientHandledRequestTCCAcceptanceFlowStrategyToAsyncAdapter(0, v16, v17, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, a7);
  v19 = sub_1C2BC47E8((uint64_t)v14);
  v20 = MEMORY[0x1C3BC9CD4](&unk_1C2D1A7AC, v18);
  v22 = type metadata accessor for ClientHandledTCCFlow(0, v18, v20, v21);
  v38[5] = v19;
  v23 = qword_1ED7A4220;
  sub_1C2CFD350();
  if (v23 != -1)
    swift_once();
  sub_1C28C73A4((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v24 = qword_1ED7AA050;
  v38[3] = type metadata accessor for RefreshableAceServiceInvoker();
  v38[4] = &protocol witness table for RefreshableAceServiceInvoker;
  v38[0] = v24;
  v25 = qword_1ED7A84D8;
  sub_1C2CFD350();
  if (v25 != -1)
    swift_once();
  v26 = qword_1ED7AA130;
  v37[8] = type metadata accessor for RefreshableSiriKitEventSending();
  v37[9] = &off_1E7C9CA68;
  v37[5] = v26;
  v27 = off_1ED7A5DA8;
  sub_1C2CFD350();
  if (v27 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v28 = qword_1ED7A4228;
  v37[3] = type metadata accessor for RefreshableDeviceState();
  v37[4] = &protocol witness table for RefreshableDeviceState;
  v37[0] = v28;
  sub_1C2CFD350();
  v29 = sub_1C2B0C6E8();
  v36[3] = &type metadata for OutputPublishers;
  v36[4] = &off_1E7C8D920;
  v36[0] = v29;
  sub_1C2CFD350();
  v30 = a3;
  sub_1C2BBD280();
  v32 = v31;
  type metadata accessor for AnyRequestTCCAcceptanceFlow(0, *(_QWORD *)(v11 + 80), v33, v34);
  v38[0] = v32;
  sub_1C2CFD350();
  AnyRequestTCCAcceptanceFlow.__allocating_init<A>(_:)(v38, v22, &off_1EF79E7B8);
  a4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C2B84364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C2B84370(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B840B4);
}

uint64_t sub_1C2B84370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v6 + 16) - 8) + 80);
  return a6(a1, a2, a3, a4, a5, v6 + ((v7 + 40) & ~v7));
}

uint64_t sub_1C2B84394(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[5];
  _QWORD v25[10];
  _QWORD v26[5];

  v8 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1, a2);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClientHandledTCCFlow(0, v12, v13, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, a5);
  if (qword_1ED7A4220 != -1)
    swift_once();
  sub_1C28C73A4((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  v14 = qword_1ED7AA050;
  v26[3] = type metadata accessor for RefreshableAceServiceInvoker();
  v26[4] = &protocol witness table for RefreshableAceServiceInvoker;
  v26[0] = v14;
  v15 = qword_1ED7A84D8;
  sub_1C2CFD350();
  if (v15 != -1)
    swift_once();
  v16 = qword_1ED7AA130;
  v25[8] = type metadata accessor for RefreshableSiriKitEventSending();
  v25[9] = &off_1E7C9CA68;
  v25[5] = v16;
  v17 = off_1ED7A5DA8;
  sub_1C2CFD350();
  if (v17 != (void *)-1)
    swift_once();
  sub_1C28C72CC((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v18 = qword_1ED7A4228;
  v25[3] = type metadata accessor for RefreshableDeviceState();
  v25[4] = &protocol witness table for RefreshableDeviceState;
  v25[0] = v18;
  sub_1C2CFD350();
  v19 = sub_1C2B0C6E8();
  v24[3] = &type metadata for OutputPublishers;
  v24[4] = &off_1E7C8D920;
  v24[0] = v19;
  sub_1C2CFD350();
  v20 = a3;
  sub_1C2BBD280();
  v26[0] = v21;
  v22 = Flow.eraseToAnyValueFlow()();
  swift_release();
  return v22;
}

uint64_t sub_1C2B845C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B845D0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2B84394);
}

uint64_t sub_1C2B845D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v4 + 16) - 8) + 80);
  return a4(a1, a2, a3, v4 + ((v5 + 40) & ~v5));
}

void static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(nlContextUpdateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  OUTLINED_FUNCTION_47_29(a1, a2, a3, a4);
  OUTLINED_FUNCTION_54_33();
  v15 = v5;
  OUTLINED_FUNCTION_52_4();
  v6 = MEMORY[0x1C3BC9CD4](&unk_1C2D1A448, v4);
  OUTLINED_FUNCTION_77_26(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)();
  OUTLINED_FUNCTION_40_29();
  OUTLINED_FUNCTION_116_0();
}

{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  OUTLINED_FUNCTION_47_29(a1, a2, a3, a4);
  OUTLINED_FUNCTION_54_33();
  v15 = v5;
  OUTLINED_FUNCTION_52_4();
  v6 = MEMORY[0x1C3BC9CD4](&unk_1C2D1A410, v4);
  OUTLINED_FUNCTION_77_26(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  static RCHChildFlowFactoryHelper.makeRequestTCCAcceptanceFlow<A, B>(strategy:)();
  OUTLINED_FUNCTION_40_29();
  OUTLINED_FUNCTION_116_0();
}

ValueMetadata *type metadata accessor for RCHChildFlowFactoryHelper()
{
  return &type metadata for RCHChildFlowFactoryHelper;
}

unint64_t sub_1C2B846B4()
{
  unint64_t result;

  result = qword_1ED7A6140;
  if (!qword_1ED7A6140)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED7A6140);
  }
  return result;
}

uint64_t sub_1C2B846F0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  if (*(_QWORD *)(v0 + 88))
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocObject();
}

void sub_1C2B8472C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v1 = v0;
  if (qword_1ED7AA040 != -1)
    swift_once();
  v2 = sub_1C2CFD878();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED7AA1B0);
  swift_retain_n();
  v3 = sub_1C2CFD86C();
  v4 = sub_1C2CFE2A4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = *(void **)(v1 + 80);
    sub_1C29DFAC0(v7);
    v8 = sub_1C2985760(v7);
    sub_1C28BB120(v8, v9, &v10);
    sub_1C2CFE4D8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C28B6000, v3, v4, "SiriKitFixedAppResolutionFlow transitioned to state %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BC9DE8](v6, -1, -1);
    MEMORY[0x1C3BC9DE8](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

void sub_1C2B848E8(void *a1, char a2)
{
  uint64_t v2;
  void *v4;

  v4 = *(void **)(v2 + 80);
  *(_QWORD *)(v2 + 80) = a1;
  *(_BYTE *)(v2 + 88) = a2;
  sub_1C29DFAC0(a1);
  sub_1C2988440(v4);
  sub_1C2B8472C();
  sub_1C2988440(a1);
}

void sub_1C2B84944(void *a1, char a2)
{
  uint64_t v2;
  char v3;
  id v5;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    v2 = (uint64_t)a1;
    v3 = 1;
  }
  else
  {
    v2 = 1;
    v3 = 0;
  }
  sub_1C2B848E8((void *)v2, v3);
}

void sub_1C2B84984(uint64_t a1)
{
  sub_1C2B84944(*(void **)a1, *(_BYTE *)(a1 + 8));
}

void sub_1C2B84998(uint64_t a1)
{
  sub_1C2B84984(a1);
}

uint64_t sub_1C2B849A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B849C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  OUTLINED_FUNCTION_43_10();
  OUTLINED_FUNCTION_36_37();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_14_72(v1);
  OUTLINED_FUNCTION_45_11();
  return sub_1C2B82F18(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C2B84A18()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_38_2();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_14_11(v1);
  return OUTLINED_FUNCTION_15_60();
}

uint64_t sub_1C2B84A5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  OUTLINED_FUNCTION_43_10();
  OUTLINED_FUNCTION_36_37();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_14_72(v1);
  OUTLINED_FUNCTION_45_11();
  return sub_1C2B82F18(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_189Tm()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B84AF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  OUTLINED_FUNCTION_43_10();
  OUTLINED_FUNCTION_36_37();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_14_72(v1);
  OUTLINED_FUNCTION_45_11();
  return sub_1C2B82B88(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_193Tm_0()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_12_13();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B84B74()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_32_1();
  v2 = (v1 + 15) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_19_4(v3);
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C2B84BF4(char a1)
{
  uint64_t v1;

  return sub_1C2B81478(a1, *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *))(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C2B84C3C()
{
  OUTLINED_FUNCTION_88_17();
  return swift_deallocObject();
}

void sub_1C2B84C60()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 40))();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1C2B84C80()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_67_22();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_8_3(v1);
  return sub_1C2B802F0(v2, v3, v4, v5, v6);
}

uint64_t sub_1C2B84CD4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 48);
  sub_1C2CFD350();
  v4 = v2;
  swift_bridgeObjectRetain();
  v5 = v3;
  return a1;
}

uint64_t sub_1C2B84D20(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);

  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t objectdestroy_235Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2B84DB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_67_22();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_86(v0);
  v2 = OUTLINED_FUNCTION_8_3(v1);
  return sub_1C2B80058(v2, v3, v4, v5, v6);
}

uint64_t OUTLINED_FUNCTION_0_86(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
}

uint64_t OUTLINED_FUNCTION_1_75(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a1 + v5, v3, v2);
}

uint64_t OUTLINED_FUNCTION_6_64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
}

uint64_t OUTLINED_FUNCTION_7_80(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *((_QWORD *)a1 + 2) = v3;
  *((_QWORD *)a1 + 3) = v2;
  *((_QWORD *)a1 + 4) = v1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 32))(&a1[v6], v4, v3);
}

uint64_t OUTLINED_FUNCTION_10_74()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_13_58(uint64_t a1)
{
  sub_1C2B80938(a1);
}

uint64_t OUTLINED_FUNCTION_14_72(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = v3;
  a1[1] = v1;
  *(_QWORD *)(v5 + 16) = v4;
  return v2;
}

uint64_t OUTLINED_FUNCTION_15_60()
{
  return sub_1C2A01164();
}

uint64_t OUTLINED_FUNCTION_17_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a4);
}

uint64_t OUTLINED_FUNCTION_26_52(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v3 + 16) - 8) + 80);
  return a3(a1, a2, v3 + ((v4 + 32) & ~v4));
}

uint64_t OUTLINED_FUNCTION_28_40(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *((_QWORD *)a1 + 2) = v3;
  *((_QWORD *)a1 + 3) = v2;
  *((_QWORD *)a1 + 4) = *(_QWORD *)(v10 - 88);
  *((_QWORD *)a1 + 5) = v5;
  *((_QWORD *)a1 + 6) = v4;
  *((_QWORD *)a1 + 7) = v7;
  *((_QWORD *)a1 + 8) = v6;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 32))(&a1[v1], v8, v3);
}

uint64_t OUTLINED_FUNCTION_29_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a6);
}

uint64_t OUTLINED_FUNCTION_31_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
}

void OUTLINED_FUNCTION_33_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 - 88) = a8;
}

uint64_t OUTLINED_FUNCTION_38_40(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_40_29()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_46_23()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_47_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for SiriKitRequestTCCAcceptanceFlowNLOnlyStrategy(0, a3, a3, a4);
}

uint64_t OUTLINED_FUNCTION_51_26()
{
  return 0;
}

void OUTLINED_FUNCTION_54_33()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C2BBD2BC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_71_25()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_75_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t))
{
  return a6(0, a4, a5);
}

uint64_t OUTLINED_FUNCTION_76_24()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_78_20()
{
  uint64_t v0;

  return v0 - 56;
}

uint64_t OUTLINED_FUNCTION_80_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_85_17()
{
  return sub_1C2CFD350();
}

uint64_t OUTLINED_FUNCTION_86_17()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_88_17()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_0_87(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, __int128 a20,uint64_t a21,uint64_t a22,uint64_t a23,__int128 a24,uint64_t a25,uint64_t a26,uint64_t a27,__int128 a28)
{
  uint64_t v28;

  return sub_1C2924FF4(v28, &a28, &a24, &a20);
}

uint64_t OUTLINED_FUNCTION_1_76()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_81(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  uint64_t v16;
  va_list va;

  va_start(va, a16);
  return sub_1C28B9A04(v16, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_3_81(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  uint64_t v30;

  return sub_1C28B9A04(v30, (uint64_t)&a30);
}

uint64_t OUTLINED_FUNCTION_4_82(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  return sub_1C28B9A04(v11, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_5_77(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&a30);
}

uint64_t OUTLINED_FUNCTION_7_81()
{
  uint64_t v0;

  return v0;
}

uint64_t dispatch thunk of RCHCommonResponseGenerating.processContinueInAppResponse<A>(delegate:app:intent:intentResponse:executionStep:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 8))();
}

uint64_t dispatch thunk of RCHCommonResponseGenerating.processDeviceUnlockAndRestartRequest<A>(delegate:app:intent:completion:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_4_7(a1);
}

uint64_t dispatch thunk of RCHCommonResponseGenerating.processFailureHandlingIntentResponse<A>(delegate:app:intent:intentResponse:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 24))();
}

uint64_t dispatch thunk of RCHCommonResponseGenerating.processAppNotFoundOnDeviceResponse<A>(delegate:app:intent:completion:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_4_7(a1);
}

uint64_t dispatch thunk of RCHCommonResponseGenerating.processAppDoesNotSupportIntentResponse<A>(delegate:app:intent:completion:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_4_7(a1);
}

uint64_t dispatch thunk of RCHCommonResponseGenerating.processGenericErrorResponse<A>(delegate:app:intent:completion:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_4_7(a1);
}

uint64_t sub_1C2B85338()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return v0;
}

void sub_1C2B8536C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, id, _QWORD, void *, char *, void (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  _QWORD *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(uint64_t, id, _QWORD, void *, char *, void (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v66;
  id v67;
  char v68;

  OUTLINED_FUNCTION_9();
  v62 = v22;
  v63 = v21;
  v24 = v23;
  v65 = v25;
  v66 = v26;
  v28 = v27;
  v67 = v29;
  v61 = v30;
  v32 = v31;
  v33 = OUTLINED_FUNCTION_173_3();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(_QWORD *)(v34 + 64);
  v37 = MEMORY[0x1E0C80A78](v33, v36);
  v59 = (char *)&v57 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37, v38);
  v40 = (char *)&v57 - v39;
  LOBYTE(v28) = *v28;
  v58 = a21;
  v41 = *(void (**)(uint64_t, uint64_t))(a21 + 152);
  v64 = (char *)&v57 - v39;
  v60 = v24;
  v41(v24, a21);
  v68 = (char)v28;
  v42 = v34;
  v43 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v44 = v33;
  v43((char *)&v57 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v33);
  v45 = v42;
  v46 = (*(unsigned __int8 *)(v42 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v47 = (_QWORD *)swift_allocObject();
  v49 = v58;
  v48 = (uint64_t)v59;
  v47[2] = v24;
  v47[3] = v49;
  v47[4] = v63;
  v47[5] = v32;
  v50 = v61;
  v51 = v62;
  v52 = v67;
  v47[6] = v61;
  v47[7] = v52;
  v47[8] = v51;
  OUTLINED_FUNCTION_45((uint64_t)v47 + v46, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 32));
  v53 = (_QWORD *)((char *)v47 + ((v35 + v46 + 7) & 0xFFFFFFFFFFFFFFF8));
  v54 = v66;
  *v53 = v65;
  v53[1] = v54;
  v65 = *(void (**)(uint64_t, id, _QWORD, void *, char *, void (*)(), _QWORD *, uint64_t, uint64_t))(v49 + 216);
  OUTLINED_FUNCTION_38_0();
  swift_unknownObjectRetain();
  sub_1C2CFD350();
  v55 = v67;
  v56 = v51;
  OUTLINED_FUNCTION_76_0();
  v65(v50, v55, 0, v51, &v68, sub_1C2B920D4, v47, v60, v49);
  OUTLINED_FUNCTION_127();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v64, v44);
  OUTLINED_FUNCTION_1();
}

void sub_1C2B85550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  uint64_t AssociatedConformanceWitness;
  void (*v20)(void (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_9();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v22 = v9;
  v11 = v10;
  v13 = v12;
  v14 = OUTLINED_FUNCTION_15_13();
  v15 = OUTLINED_FUNCTION_2_31(v14);
  MEMORY[0x1E0C80A78](v15, v16);
  OUTLINED_FUNCTION_67_23();
  sub_1C28BF798(0, (unint64_t *)&qword_1ED7AA048);
  v17 = (void *)sub_1C2CFE454();
  sub_1C2CFE2C8();
  sub_1C2CFD7AC();

  OUTLINED_FUNCTION_30_7();
  v18 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v18[2] = v6;
  v18[3] = v4;
  v18[4] = v2;
  v18[5] = v11;
  v18[6] = v13;
  v18[7] = v22;
  v18[8] = v8;
  OUTLINED_FUNCTION_65_22();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v20 = *(void (**)(void (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                        + 200);
  OUTLINED_FUNCTION_16_0();
  v21 = v11;
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_52_4();
  v20(sub_1C2B92050, v18, v14, AssociatedConformanceWitness);
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_33_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  OUTLINED_FUNCTION_1();
}

void sub_1C2B856B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t AssociatedConformanceWitness;
  void (*v22)(uint64_t, id, id, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_9();
  v26 = v2;
  v27 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v25 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = OUTLINED_FUNCTION_2_31(AssociatedTypeWitness);
  MEMORY[0x1E0C80A78](v18, v19);
  OUTLINED_FUNCTION_67_23();
  OUTLINED_FUNCTION_76_25();
  v20 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v20[2] = v6;
  v20[3] = v4;
  v20[4] = v26;
  v20[5] = v8;
  v20[6] = v16;
  v20[7] = v12;
  v20[8] = v10;
  v20[9] = v14;
  v20[10] = v27;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v22 = *(void (**)(uint64_t, id, id, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                       + 320);
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_3_7();
  v23 = v12;
  v24 = v25;
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_11_9();
  v22(v14, v23, v24, sub_1C2B91DF8, v20, AssociatedTypeWitness, AssociatedConformanceWitness);
  OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_33_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  OUTLINED_FUNCTION_1();
}

void sub_1C2B857EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_69_20(v4, v5, v6, v7);
  v8 = OUTLINED_FUNCTION_15_13();
  v9 = OUTLINED_FUNCTION_2_31(v8);
  MEMORY[0x1E0C80A78](v9, v10);
  OUTLINED_FUNCTION_47_30();
  v11 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v12 = OUTLINED_FUNCTION_92_20(v11);
  v12[6] = v0;
  v12[7] = v1;
  v12[8] = v0;
  v12[9] = v2;
  OUTLINED_FUNCTION_65_22();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_141_10(v1, (uint64_t)v2, (uint64_t)sub_1C2B91C70, (uint64_t)v11);
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_33_2(v3, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  OUTLINED_FUNCTION_1();
}

void sub_1C2B858C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  _QWORD v16[2];

  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_69_20(v3, v4, v5, v6);
  v7 = OUTLINED_FUNCTION_15_13();
  v8 = OUTLINED_FUNCTION_2_31(v7);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)v16 - v10;
  OUTLINED_FUNCTION_30_7();
  v12 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v13 = OUTLINED_FUNCTION_92_20(v12);
  v13[6] = v0;
  v13[7] = v0;
  v13[8] = v2;
  v13[9] = v1;
  OUTLINED_FUNCTION_65_22();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_3_7();
  v14 = v2;
  v15 = OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_141_10(v15, (uint64_t)v14, (uint64_t)sub_1C2B91BB8, (uint64_t)v12);
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_33_2((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v16[1] + 8));
  OUTLINED_FUNCTION_1();
}

void sub_1C2B859B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t AssociatedConformanceWitness;
  void (*v15)(uint64_t, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  id v16;
  uint64_t v17;

  OUTLINED_FUNCTION_9();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_15_13();
  v10 = OUTLINED_FUNCTION_2_31(v9);
  MEMORY[0x1E0C80A78](v10, v11);
  OUTLINED_FUNCTION_47_30();
  v12 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v13 = OUTLINED_FUNCTION_92_20(v12);
  v13[6] = v8;
  v13[7] = v6;
  v13[8] = v4;
  v13[9] = v2;
  OUTLINED_FUNCTION_65_22();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = *(void (**)(uint64_t, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                                 + 312);
  OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_76_0();
  v16 = v4;
  OUTLINED_FUNCTION_49();
  v15(v6, sub_1C2B91AB8, v12, v9, AssociatedConformanceWitness);
  OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_33_2(v1, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  OUTLINED_FUNCTION_1();
}

void sub_1C2B85AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t AssociatedConformanceWitness;
  void (*v40)(uint64_t, id, void *, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;

  OUTLINED_FUNCTION_9();
  v24 = v23;
  v26 = v25;
  v44 = v27;
  v45 = v29;
  v46 = v28;
  v47 = v30;
  v48 = v31;
  v32 = v27;
  v34 = v33;
  v35 = OUTLINED_FUNCTION_173_3();
  v36 = OUTLINED_FUNCTION_2_31(v35);
  MEMORY[0x1E0C80A78](v36, v37);
  OUTLINED_FUNCTION_67_23();
  (*(void (**)(uint64_t, uint64_t))(a21 + 176))(v24, a21);
  v38 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v38[2] = v24;
  v38[3] = a21;
  v38[4] = v21;
  v38[5] = v45;
  v38[6] = v26;
  v38[7] = v34;
  v38[8] = v32;
  v38[9] = v46;
  v38[10] = v47;
  v38[11] = v48;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v40 = *(void (**)(uint64_t, id, void *, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                           + 104);
  v41 = v48;
  OUTLINED_FUNCTION_34_0();
  sub_1C2CFD350();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_76_0();
  v42 = v46;
  v43 = v47;
  v40(v44, v42, v47, sub_1C2B91664, v38, v35, AssociatedConformanceWitness);
  OUTLINED_FUNCTION_127();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v22, v35);
  OUTLINED_FUNCTION_1();
}

void sub_1C2B85C0C(uint64_t a1, void (*a2)(void *, uint64_t))
{
  void *v4;
  id v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  _BYTE v10[80];

  sub_1C2921AEC(a1, (uint64_t)&v9, &qword_1EF79C4B0);
  v4 = v9;
  sub_1C2921AEC(a1, (uint64_t)v10, &qword_1EF79C4B0);
  if (v10[72] == 1)
  {
    v5 = v4;
    a2(v4, 1);
    sub_1C2B91A58(a1);
  }
  else
  {
    type metadata accessor for CommandFailure();
    swift_allocObject();
    v6 = CommandFailure.init(errorCode:reason:)(-1, 0xD00000000000002DLL, 0x80000001C2D36460);
    sub_1C28C3328((unint64_t *)&qword_1EF79AF10, (uint64_t (*)(uint64_t))type metadata accessor for CommandFailure, (uint64_t)&protocol conformance descriptor for CommandFailure);
    v7 = (void *)swift_allocError();
    *v8 = v6;
    a2(v7, 1);

  }
}

void sub_1C2B85D30(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v8;

  if ((a2 & 1) != 0)
  {
    v8 = a1;
    a3(a1, 1);
    sub_1C2B9161C(a1, 1, (void (*)(id))MEMORY[0x1E0DEEB08]);
  }
  else
  {
    type metadata accessor for CommandFailure();
    swift_allocObject();
    v4 = CommandFailure.init(errorCode:reason:)(-1, 0xD00000000000002DLL, 0x80000001C2D36460);
    sub_1C28C3328((unint64_t *)&qword_1EF79AF10, (uint64_t (*)(uint64_t))type metadata accessor for CommandFailure, (uint64_t)&protocol conformance descriptor for CommandFailure);
    v5 = (void *)swift_allocError();
    *v6 = v4;
    a3(v5, 1);

  }
}

void sub_1C2B85E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  const void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t AssociatedConformanceWitness;
  void (*v53)(uint64_t, id, uint64_t, void *, uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  _BYTE v71[72];
  _BYTE v72[48];
  __n128 v73[3];
  uint64_t v74;

  OUTLINED_FUNCTION_9();
  v70 = v24;
  v62 = v25;
  v67 = v26;
  v66 = v27;
  v29 = v28;
  v68 = v30;
  v32 = v31;
  v69 = v31;
  v65 = v33;
  v61 = v34;
  v64 = a22;
  v63 = a21;
  v59 = a23;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(_QWORD *)(v36 + 64);
  MEMORY[0x1E0C80A78](v35, v38);
  v58 = (uint64_t)&v58 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_26_18(v72, v29);
  v39 = *(_QWORD *)(v24 + 16);
  OUTLINED_FUNCTION_26_18(v71, v29);
  OUTLINED_FUNCTION_169_6(v73);
  OUTLINED_FUNCTION_79_21();
  v40 = (unint64_t)(v74 - 3) < 0xFFFFFFFFFFFFFFFELL;
  v41 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(a24 + 320))(v32, a23, a24);
  v42 = (*(uint64_t (**)(_BYTE *, _BOOL8, _QWORD))(*(_QWORD *)v39 + 96))(v71, v40, v41 & 1);
  v60 = v42;
  sub_1C28D3304(v62, (uint64_t)&v58 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ED7A7A10);
  v43 = (*(unsigned __int8 *)(v36 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v44 = (v37 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  v46 = (v45 + 15) & 0xFFFFFFFFFFFFFFF8;
  v47 = (_QWORD *)swift_allocObject();
  v47[2] = v59;
  v47[3] = a24;
  OUTLINED_FUNCTION_162_6();
  v48[4] = v49;
  v48[5] = v39;
  v47[6] = v70;
  OUTLINED_FUNCTION_26_18(v48 + 7, v72);
  v47[16] = v42;
  sub_1C2921AEC(v58, (uint64_t)v47 + v43, &qword_1ED7A7A10);
  *(_QWORD *)((char *)v47 + v44) = v61;
  v50 = v65;
  *(_QWORD *)((char *)v47 + v45) = v65;
  *(_QWORD *)((char *)v47 + v46) = v69;
  v51 = v66;
  *(_QWORD *)((char *)v47 + ((v46 + 15) & 0xFFFFFFFFFFFFFFF8)) = v66;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v53 = *(void (**)(uint64_t, id, uint64_t, void *, uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 112);
  OUTLINED_FUNCTION_52_4();
  sub_1C2CFD350();
  OUTLINED_FUNCTION_170_4();
  v54 = v51;
  v55 = v60;
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_3_7();
  sub_1C2CFD350();
  v56 = v69;
  v57 = swift_checkMetadataState();
  v53(v50, v56, v67, v51, v55, sub_1C2B912F0, v47, v57, AssociatedConformanceWitness);
  OUTLINED_FUNCTION_14_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1();
}

void sub_1C2B8613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t (*v46)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  __int128 v72;
  ValueMetadata *v73;
  _UNKNOWN **v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  _BYTE v78[40];
  _BYTE v79[48];
  __n128 v80[3];
  uint64_t v81;

  OUTLINED_FUNCTION_9();
  v24 = v23;
  v66 = v25;
  v63 = v26;
  v64 = (char *)v27;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v69 = v34;
  v36 = v35;
  v70 = a21;
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v37, v38);
  OUTLINED_FUNCTION_2_2();
  v65 = v39;
  MEMORY[0x1E0C80A78](v40, v41);
  v43 = (char *)&v61 - v42;
  OUTLINED_FUNCTION_26_18(v79, v31);
  sub_1C28B9A48(v24 + 64, (uint64_t)v78);
  v67 = v24;
  HIDWORD(v62) = *(unsigned __int8 *)(*(_QWORD *)(v24 + 16) + 16);
  OUTLINED_FUNCTION_169_6(v80);
  OUTLINED_FUNCTION_79_21();
  v44 = v81;
  v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a23 + 320))(v33, a22, a23);
  LOBYTE(v72) = 6;
  v46 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a23 + 304);
  v68 = (void *)v33;
  v71 = (void *)v29;
  v47 = v46(&v72, v33, v29, a22, a23);
  if (v47)
  {
    v48 = v47;
    *((_QWORD *)&v76 + 1) = type metadata accessor for DefaultFlowActivity();
    sub_1C28C3328((unint64_t *)&qword_1EF79C4A0, (uint64_t (*)(uint64_t))type metadata accessor for DefaultFlowActivity, (uint64_t)&protocol conformance descriptor for DefaultFlowActivity);
    v77 = v49;
    *(_QWORD *)&v75 = v48;
  }
  else
  {
    v77 = 0;
    v75 = 0u;
    v76 = 0u;
  }
  OUTLINED_FUNCTION_26_18(&v72, v79);
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)((uint64_t)&v72, (uint64_t)v78, HIDWORD(v62), v63, (unint64_t)(v44 - 3) < 0xFFFFFFFFFFFFFFFELL, v45 & 1, (uint64_t)v64, MEMORY[0x1E0DEE9D8], (uint64_t)&v75, 0, v61, v62, v63, (uint64_t)v64, v65, v66, v67, (uint64_t)v68, v69,
    v70,
    (uint64_t)v71,
    (void *)v72);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  sub_1C28B9D6C((uint64_t)&v75, (uint64_t *)&unk_1ED7A8750);
  v50 = sub_1C2B0C6E8();
  v73 = &type metadata for OutputPublishers;
  v74 = &off_1E7C8D920;
  *(_QWORD *)&v72 = v50;
  OUTLINED_FUNCTION_175_6();
  v51 = OUTLINED_FUNCTION_5_2();
  sub_1C28B99EC(&v72, v51 + 16);
  v52 = v65;
  sub_1C299A0F4((uint64_t)v43, v65);
  v53 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v53[2] = a22;
  v53[3] = a23;
  v54 = v52;
  v55 = v69;
  v53[4] = v67;
  v53[5] = v55;
  v64 = v43;
  v56 = v68;
  v53[6] = v36;
  v53[7] = v56;
  v57 = v71;
  v53[8] = v71;
  OUTLINED_FUNCTION_26_18(v53 + 9, v79);
  v58 = v70;
  v53[18] = v66;
  v53[19] = v58;
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_52_4();
  swift_unknownObjectRetain();
  v59 = v56;
  v60 = v57;
  OUTLINED_FUNCTION_170_4();
  OUTLINED_FUNCTION_49();
  sub_1C2BED8D0(v54, (uint64_t)sub_1C2B9119C, (uint64_t)v53, v51);
  swift_release();
  sub_1C28E0610((uint64_t)v64);
  sub_1C28E0610(v54);
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_1();
}

void sub_1C2B863F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  ValueMetadata *v67;
  _UNKNOWN **v68;
  _BYTE v69[32];
  uint64_t v70;
  _BYTE v71[48];
  __n128 v72[3];
  uint64_t v73;

  OUTLINED_FUNCTION_9();
  v23 = v22;
  v25 = v24;
  v64 = v26;
  v63 = v27;
  v61 = v28;
  v30 = v29;
  v32 = v31;
  v60 = (void *)v31;
  v62 = v33;
  v59 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v35, v36);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_0_1();
  v39 = MEMORY[0x1E0C80A78](v37, v38);
  v41 = (char *)&v58 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39, v42);
  v44 = (char *)&v58 - v43;
  OUTLINED_FUNCTION_26_18(v71, v30);
  v45 = *(unsigned __int8 *)(*(_QWORD *)(v22 + 16) + 16);
  OUTLINED_FUNCTION_169_6(v72);
  OUTLINED_FUNCTION_79_21();
  v46 = (unint64_t)(v73 - 3) < 0xFFFFFFFFFFFFFFFELL;
  v47 = v22 + 64;
  v48 = (*(uint64_t (**)(uint64_t, uint64_t))(a21 + 320))(v32, v25);
  v49 = OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_30_0(v21, v50, v51, v49);
  v70 = 0;
  memset(v69, 0, sizeof(v69));
  OUTLINED_FUNCTION_26_18(&v65, v71);
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)((uint64_t)&v65, v47, v45, v61, v46, v48 & 1, v21, MEMORY[0x1E0DEE9D8], (uint64_t)v69, 0, v58, v59, (uint64_t)v60, v61, v62, v63, v64, v65, *((uint64_t *)&v65 + 1),
    v66,
    (uint64_t)v67,
    v68);
  sub_1C28B9D6C((uint64_t)v69, (uint64_t *)&unk_1ED7A8750);
  sub_1C28B9D6C(v21, &qword_1ED7A7A10);
  v52 = sub_1C2B0C6E8();
  v68 = &off_1E7C8D920;
  v67 = &type metadata for OutputPublishers;
  *(_QWORD *)&v65 = v52;
  OUTLINED_FUNCTION_175_6();
  v53 = OUTLINED_FUNCTION_5_2();
  sub_1C28B99EC(&v65, v53 + 16);
  sub_1C299A0F4((uint64_t)v44, (uint64_t)v41);
  v54 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v54[2] = v25;
  v54[3] = a21;
  v55 = v60;
  v54[4] = v23;
  v54[5] = v55;
  v54[6] = v62;
  OUTLINED_FUNCTION_26_18(v54 + 7, v71);
  OUTLINED_FUNCTION_162_6();
  v54[16] = v56;
  v54[17] = v45;
  OUTLINED_FUNCTION_76_0();
  v57 = v55;
  OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_170_4();
  OUTLINED_FUNCTION_52_4();
  OUTLINED_FUNCTION_174_4((uint64_t)v41, (uint64_t)sub_1C2B9118C);
  OUTLINED_FUNCTION_36_0();
  sub_1C28E0610((uint64_t)v44);
  sub_1C28E0610((uint64_t)v41);
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_1();
}

void sub_1C2B86670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  id v17;
  _QWORD *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (**v44)(_QWORD, _QWORD);
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  void (*v50)(uint64_t, _QWORD *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t AssociatedConformanceWitness;
  void (*v63)(void (*)(), char *, uint64_t, uint64_t);
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t inited;
  id v92;
  uint64_t v93;
  uint64_t (*v94)(__int128 *, id, uint64_t (**)(_QWORD, _QWORD), uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  _UNKNOWN **v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  id v107;
  uint64_t (**v108)(_QWORD, _QWORD);
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  id v128;
  _QWORD *v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  _UNKNOWN **v133;
  uint64_t v134;
  uint64_t v135;

  OUTLINED_FUNCTION_9();
  v134 = v13;
  v135 = v14;
  LODWORD(v119) = v15;
  LODWORD(v126) = v16;
  v121 = v17;
  v118 = v18;
  v127 = v20;
  v128 = v19;
  v130 = v21;
  v124 = a10;
  v125 = v22;
  v122 = a9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v23, v24);
  OUTLINED_FUNCTION_79_5();
  v114 = v25;
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v26, v27);
  OUTLINED_FUNCTION_2_2();
  v115 = v28;
  MEMORY[0x1E0C80A78](v29, v30);
  v116 = (uint64_t)&v111 - v31;
  v117 = OUTLINED_FUNCTION_168_7();
  v32 = *(_QWORD *)(v117 - 8);
  v33 = *(_QWORD *)(v32 + 64);
  OUTLINED_FUNCTION_102_14();
  MEMORY[0x1E0C80A78](v34, v35);
  OUTLINED_FUNCTION_11_26();
  v37 = v36;
  v123 = a12;
  v120 = a11;
  v38 = OUTLINED_FUNCTION_168_7();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v40);
  OUTLINED_FUNCTION_11_26();
  v42 = v41;
  v43 = v12[11];
  v44 = (uint64_t (**)(_QWORD, _QWORD))v12[12];
  v129 = v12;
  __swift_project_boxed_opaque_existential_1(v12 + 8, v43);
  v45 = v43;
  v46 = v126;
  if ((v44[13](v45, v44) & 1) == 0 || (v46 & 1) == 0)
  {
    v68 = v129[11];
    v69 = v129[12];
    __swift_project_boxed_opaque_existential_1(v12 + 8, v68);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v69 + 32))(v68, v69) & 1) != 0)
    {
      OUTLINED_FUNCTION_95_21();
      if ((v70 & 1) == 0)
      {
        if (qword_1ED7AA038 != -1)
          swift_once();
        sub_1C2CFE2A4();
        OUTLINED_FUNCTION_34_6();
        v71 = v129;
        v72 = v129[7];
        v119 = v129[6];
        v118 = __swift_project_boxed_opaque_existential_1(v129 + 3, v119);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
        v73 = OUTLINED_FUNCTION_5_2();
        *(_OWORD *)(v73 + 16) = xmmword_1C2D00370;
        v74 = v121;
        *(_QWORD *)(v73 + 32) = v121;
        OUTLINED_FUNCTION_156_6(v73);
        v117 = v131;
        v75 = OUTLINED_FUNCTION_5_2();
        v76 = v123;
        v77 = v124;
        *(_QWORD *)(v75 + 16) = v32;
        *(_QWORD *)(v75 + 24) = v76;
        v78 = v125;
        *(_QWORD *)(v75 + 32) = v130;
        *(_QWORD *)(v75 + 40) = v78;
        *(_QWORD *)(v75 + 48) = v122;
        *(_QWORD *)(v75 + 56) = v77;
        v79 = v127;
        v80 = v128;
        *(_QWORD *)(v75 + 64) = v71;
        *(_QWORD *)(v75 + 72) = v80;
        *(_QWORD *)(v75 + 80) = v79;
        *(_QWORD *)(v75 + 88) = v74;
        *(_BYTE *)(v75 + 96) = v126 & 1;
        *(_BYTE *)(v75 + 97) = 0;
        v126 = *(_QWORD *)(v72 + 72);
        v81 = v74;
        OUTLINED_FUNCTION_52_4();
        OUTLINED_FUNCTION_76_0();
        swift_unknownObjectRetain();
        v82 = v80;
        OUTLINED_FUNCTION_34_0();
        v83 = v79;
        v84 = v81;
        ((void (*)(uint64_t, void (*)(), uint64_t, uint64_t, uint64_t))v126)(v117, sub_1C2B90F04, v75, v119, v72);
        OUTLINED_FUNCTION_8();
        goto LABEL_11;
      }
    }
    else
    {
      OUTLINED_FUNCTION_95_21();
      if ((v85 & 1) == 0)
      {
        if (qword_1ED7AA038 != -1)
          swift_once();
        sub_1C2CFE2A4();
        OUTLINED_FUNCTION_34_6();
        v87 = OUTLINED_FUNCTION_27_0();
        v88 = v114;
        OUTLINED_FUNCTION_30_0(v114, v89, v90, v87);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C2D00370;
        v92 = v121;
        *(_QWORD *)(inited + 32) = v121;
        OUTLINED_FUNCTION_156_6(inited);
        LOBYTE(v131) = 7;
        v93 = v123;
        v94 = *(uint64_t (**)(__int128 *, id, uint64_t (**)(_QWORD, _QWORD), uint64_t, uint64_t))(v123 + 304);
        v121 = v92;
        v95 = v94(&v131, v128, v44, v32, v93);
        if (v95)
        {
          v96 = v95;
          *((_QWORD *)&v132 + 1) = type metadata accessor for DefaultFlowActivity();
          sub_1C28C3328((unint64_t *)&qword_1EF79C4A0, (uint64_t (*)(uint64_t))type metadata accessor for DefaultFlowActivity, (uint64_t)&protocol conformance descriptor for DefaultFlowActivity);
          v133 = v97;
          *(_QWORD *)&v131 = v96;
        }
        else
        {
          v133 = 0;
          v131 = 0u;
          v132 = 0u;
        }
        v98 = v116;
        static AceOutputHelper.makeAceOutput(allAddViews:nlContextUpdate:additionalCommands:flowActivity:)(MEMORY[0x1E0DEE9D8]);
        OUTLINED_FUNCTION_8();
        sub_1C28B9D6C(v88, &qword_1ED7A7A10);
        sub_1C28B9D6C((uint64_t)&v131, (uint64_t *)&unk_1ED7A8750);
        v99 = sub_1C2B0C6E8();
        *((_QWORD *)&v132 + 1) = &type metadata for OutputPublishers;
        v133 = &off_1E7C8D920;
        *(_QWORD *)&v131 = v99;
        OUTLINED_FUNCTION_175_6();
        v100 = OUTLINED_FUNCTION_5_2();
        sub_1C28B99EC(&v131, v100 + 16);
        v101 = v115;
        sub_1C299A0F4(v98, v115);
        v102 = OUTLINED_FUNCTION_5_2();
        *(_QWORD *)(v102 + 16) = v32;
        *(_QWORD *)(v102 + 24) = v93;
        v103 = v130;
        v104 = v125;
        *(_QWORD *)(v102 + 32) = v129;
        *(_QWORD *)(v102 + 40) = v104;
        v105 = v128;
        *(_QWORD *)(v102 + 48) = v103;
        *(_QWORD *)(v102 + 56) = v105;
        v106 = v121;
        *(_QWORD *)(v102 + 64) = v44;
        *(_QWORD *)(v102 + 72) = v106;
        *(_BYTE *)(v102 + 80) = v46 & 1;
        *(_BYTE *)(v102 + 81) = 0;
        *(_QWORD *)(v102 + 88) = v122;
        *(_QWORD *)(v102 + 96) = v124;
        sub_1C2CFD350();
        OUTLINED_FUNCTION_11_9();
        swift_unknownObjectRetain();
        v107 = v105;
        OUTLINED_FUNCTION_52_4();
        v108 = v44;
        v109 = v106;
        OUTLINED_FUNCTION_174_4(v101, (uint64_t)sub_1C2B90E60);
        OUTLINED_FUNCTION_36_0();
        sub_1C28E0610(v116);
        sub_1C28E0610(v101);
        OUTLINED_FUNCTION_147();
        goto LABEL_18;
      }
    }
    v86 = OUTLINED_FUNCTION_5_2();
    *(_QWORD *)(v86 + 16) = v122;
    *(_QWORD *)(v86 + 24) = v124;
    sub_1C2CFD350();
    sub_1C2B85AB0(v130, v125, (uint64_t)v128, (uint64_t)v44, (uint64_t)v121, (uint64_t)sub_1C2B90EA8, v86, v32, v123, v110, v111, v112, v113, v114, v115, v116, v117, (uint64_t)v118, v119,
      v120,
      (uint64_t)v121);
LABEL_11:
    swift_release();
    return;
  }
  v126 = v39;
  v47 = v123;
  v48 = *(void (**)(uint64_t, uint64_t))(v123 + 176);
  v113 = v42;
  v119 = v38;
  v49 = v120;
  v48(v120, v123);
  v50 = *(void (**)(uint64_t, _QWORD *, uint64_t))(v32 + 16);
  v112 = v37;
  v51 = v37;
  v52 = v117;
  v50(v51, v118, v117);
  v53 = (*(unsigned __int8 *)(v32 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v54 = (v33 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  v56 = (char *)swift_allocObject();
  *((_QWORD *)v56 + 2) = v49;
  *((_QWORD *)v56 + 3) = v47;
  v57 = v124;
  *((_QWORD *)v56 + 4) = v122;
  *((_QWORD *)v56 + 5) = v57;
  v58 = v130;
  *((_QWORD *)v56 + 6) = v129;
  *((_QWORD *)v56 + 7) = v58;
  *((_QWORD *)v56 + 8) = v128;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v56[v53], v112, v52);
  *(_QWORD *)&v56[v54] = v125;
  v59 = v127;
  *(_QWORD *)&v56[v55] = v127;
  v60 = v121;
  *(_QWORD *)&v56[(v55 + 15) & 0xFFFFFFFFFFFFFFF8] = v121;
  v61 = v119;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v63 = *(void (**)(void (*)(), char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 200);
  OUTLINED_FUNCTION_49();
  sub_1C2CFD350();
  swift_unknownObjectRetain();
  v64 = v128;
  sub_1C2CFD350();
  v65 = v59;
  v66 = v60;
  v67 = v113;
  v63(sub_1C2B90FD0, v56, v61, AssociatedConformanceWitness);
  OUTLINED_FUNCTION_374();
  (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v67, v61);
LABEL_18:
  OUTLINED_FUNCTION_1();
}

void sub_1C2B86E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t AssociatedConformanceWitness;
  void (*v48)(uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v49;
  id v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t AssociatedTypeWitness;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;

  OUTLINED_FUNCTION_9();
  v61 = v21;
  v23 = v22;
  v25 = v24;
  v52[1] = v24;
  v55 = v26;
  v56 = v27;
  v54 = v28;
  v58 = v29;
  v59 = v30;
  v32 = v31;
  v33 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  OUTLINED_FUNCTION_102_14();
  MEMORY[0x1E0C80A78](v34, v35);
  v37 = (char *)v52 - v36;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v60 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v38);
  OUTLINED_FUNCTION_11_26();
  v57 = v39;
  v40 = *(void (**)(uint64_t, uint64_t))(a21 + 176);
  v52[2] = v32;
  v40(v23, a21);
  OUTLINED_FUNCTION_45((uint64_t)v37, v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16));
  v41 = (*(unsigned __int8 *)(v33 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v42 = (_QWORD *)swift_allocObject();
  v42[2] = v23;
  v42[3] = a21;
  v42[4] = v56;
  v42[5] = v25;
  v43 = v55;
  v42[6] = v61;
  v42[7] = v43;
  v42[8] = v32;
  v45 = v58;
  v44 = v59;
  v42[9] = v58;
  v42[10] = v44;
  OUTLINED_FUNCTION_45((uint64_t)v42 + v41, (uint64_t)v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32));
  v46 = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v48 = *(void (**)(uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 112);
  sub_1C2CFD350();
  sub_1C2CFD350();
  OUTLINED_FUNCTION_34_0();
  swift_unknownObjectRetain();
  v49 = v45;
  v50 = v44;
  v51 = v57;
  v48(v43, sub_1C2B90DC8, v42, v46, AssociatedConformanceWitness);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v51, v46);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1C2B86FF0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, const void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t AssociatedConformanceWitness;
  void (*v22)(uint64_t, id, uint64_t, uint64_t, uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  _BYTE v30[72];
  _BYTE v31[80];

  OUTLINED_FUNCTION_26_18(v31, a8);
  v17 = *(_QWORD *)(v13 + 16);
  OUTLINED_FUNCTION_26_18(v30, a8);
  v18 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(a13 + 320))(a3, a12, a13);
  v19 = (*(uint64_t (**)(_BYTE *, _QWORD, _QWORD))(*(_QWORD *)v17 + 96))(v30, 0, v18 & 1);
  v20 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v20[2] = a12;
  v20[3] = a13;
  v20[4] = a10;
  v20[5] = a11;
  v20[6] = v13;
  OUTLINED_FUNCTION_26_18(v20 + 7, v31);
  v20[16] = a6;
  v20[17] = a7;
  v20[18] = a1;
  v20[19] = a3;
  v20[20] = v19;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v22 = *(void (**)(uint64_t, id, uint64_t, uint64_t, uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 112);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_34_0();
  sub_1C290F6B8((uint64_t)v31);
  OUTLINED_FUNCTION_50_0();
  swift_unknownObjectRetain();
  v23 = a3;
  swift_bridgeObjectRetain();
  v24 = swift_checkMetadataState();
  v22(a2, v23, a9, a4, v19, sub_1C2B90D30, v20, v24, AssociatedConformanceWitness);
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_147();
}

void sub_1C2B871AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_BYTE *a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t AssociatedConformanceWitness;
  void (*v78)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  id v79;
  id v80;
  uint64_t v81;
  void *v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  id v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  id v128;
  uint64_t v129[6];
  _QWORD v130[6];

  OUTLINED_FUNCTION_9();
  v118 = v25;
  v117 = v26;
  v115 = v27;
  v119 = v28;
  v127 = (unint64_t)v29;
  v128 = v30;
  v121 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v32, v33);
  OUTLINED_FUNCTION_2_2();
  v123 = v34;
  MEMORY[0x1E0C80A78](v35, v36);
  v108 = (char *)&v105 - v37;
  v109 = type metadata accessor for SiriKitEventPayload(0);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v38, v39);
  OUTLINED_FUNCTION_79_5();
  v111 = v40;
  v41 = OUTLINED_FUNCTION_105_15();
  v125 = *(_QWORD *)(v41 - 8);
  v126 = v41;
  v42 = *(_QWORD *)(v125 + 64);
  OUTLINED_FUNCTION_102_14();
  MEMORY[0x1E0C80A78](v43, v44);
  OUTLINED_FUNCTION_11_26();
  v124 = v45;
  v46 = OUTLINED_FUNCTION_105_15();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(_QWORD *)(v47 + 64);
  v50 = MEMORY[0x1E0C80A78](v46, v49);
  v122 = (uint64_t)&v105 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v50, v51);
  v53 = (char *)&v105 - v52;
  v55 = v24[11];
  v54 = v24[12];
  v120 = v24;
  __swift_project_boxed_opaque_existential_1(v24 + 8, v55);
  v116 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 160))(v55, v54);
  v113 = v56;
  if (v56)
  {
    v123 = a22;
    v111 = a21;
    v110 = a24;
    v57 = *(void (**)(uint64_t, uint64_t))(a24 + 176);
    v114 = v53;
    v58 = v127;
    v57(a23, a24);
    v59 = v47;
    OUTLINED_FUNCTION_45(v122, (uint64_t)v53, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 16));
    v60 = v125;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v125 + 16))(v124, v115, v126);
    v61 = *(unsigned __int8 *)(v47 + 80);
    v112 = v47;
    v62 = (v61 + 48) & ~v61;
    v115 = (v48 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v109 = (v115 + 15) & 0xFFFFFFFFFFFFFFF8;
    v108 = (char *)((v109 + 15) & 0xFFFFFFFFFFFFFFF8);
    v106 = a23;
    v63 = (unint64_t)(v108 + 15) & 0xFFFFFFFFFFFFFFF8;
    v107 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
    v64 = (*(unsigned __int8 *)(v60 + 80) + v107 + 8) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    v65 = (v42 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
    v66 = (v65 + 23) & 0xFFFFFFFFFFFFFFF8;
    v67 = swift_allocObject();
    *(_QWORD *)(v67 + 16) = a23;
    v68 = v111;
    *(_QWORD *)(v67 + 24) = v110;
    *(_QWORD *)(v67 + 32) = v68;
    v69 = v122;
    *(_QWORD *)(v67 + 40) = v123;
    OUTLINED_FUNCTION_45(v67 + v62, v69, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32));
    v70 = v121;
    *(_QWORD *)(v67 + v115) = v120;
    *(_QWORD *)(v67 + v109) = v58;
    *(_QWORD *)&v108[v67] = v70;
    *(_QWORD *)(v67 + v63) = v128;
    v71 = v119;
    *(_QWORD *)(v67 + v107) = v119;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v125 + 32))(v67 + v64, v124, v126);
    v72 = (_QWORD *)(v67 + v65);
    v73 = v118;
    *v72 = v117;
    v72[1] = v73;
    v74 = (uint64_t *)(v67 + v66);
    v75 = v113;
    *v74 = v116;
    v74[1] = v75;
    v76 = v46;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v78 = *(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                         + 184);
    sub_1C2CFD350();
    OUTLINED_FUNCTION_38_0();
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_76_0();
    v79 = v128;
    v80 = v71;
    swift_bridgeObjectRetain();
    v81 = (uint64_t)v114;
    v78(sub_1C2B90A94, v67, v76, AssociatedConformanceWitness);
    OUTLINED_FUNCTION_127();
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v81, v76);
    OUTLINED_FUNCTION_1();
  }
  else
  {
    v82 = v108;
    v83 = v120;
    v84 = v120 + 13;
    v129[0] = (uint64_t)objc_msgSend(v119, sel__intentResponseCode);
    v85 = sub_1C2CFE988();
    v87 = v86;
    v88 = v83[16];
    v89 = v83[17];
    __swift_project_boxed_opaque_existential_1(v84, v88);
    type metadata accessor for SiriKitEvent(0);
    v90 = v111;
    *v111 = 6;
    v91 = v128;
    v92 = v121;
    *((_QWORD *)v90 + 1) = v128;
    *((_QWORD *)v90 + 2) = v92;
    *((_QWORD *)v90 + 3) = 3;
    *((_WORD *)v90 + 16) = 0;
    *((_QWORD *)v90 + 5) = v116;
    *((_OWORD *)v90 + 3) = xmmword_1C2D17C70;
    v127 = (unint64_t)"w/Helpers/AceService.swift";
    *((_QWORD *)v90 + 8) = 0x80000001C2D27E50;
    *((_QWORD *)v90 + 9) = v85;
    *((_QWORD *)v90 + 10) = v87;
    v90[88] = 75;
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_29_3();
    v93 = v91;
    OUTLINED_FUNCTION_33_0();
    SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v90, 0);
    (*(void (**)(void))(v89 + 8))();
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_127();
    if (qword_1ED7AA040 != -1)
      swift_once();
    v94 = OUTLINED_FUNCTION_118();
    v95 = __swift_project_value_buffer(v94, (uint64_t)qword_1ED7AA1B0);
    v96 = *(_QWORD *)(v94 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v96 + 16))(v82, v95, v94);
    __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v94);
    v97 = v123;
    sub_1C28D3304((uint64_t)v82, v123, &qword_1ED7A9EC0);
    if (__swift_getEnumTagSinglePayload(v97, 1, v94) == 1)
    {
      sub_1C28B9D6C(v123, &qword_1ED7A9EC0);
    }
    else
    {
      v98 = sub_1C2CFD86C();
      v99 = sub_1C2CFE2B0();
      if (os_log_type_enabled(v98, v99))
      {
        v100 = OUTLINED_FUNCTION_6_0();
        v129[0] = OUTLINED_FUNCTION_6_0();
        *(_DWORD *)v100 = 136315650;
        v101 = sub_1C2CFE694();
        v130[0] = sub_1C28BB120(v101, v102, v129);
        OUTLINED_FUNCTION_21_10();
        swift_bridgeObjectRelease();
        *(_WORD *)(v100 + 12) = 2048;
        v130[0] = 765;
        sub_1C2CFE4D8();
        *(_WORD *)(v100 + 22) = 2080;
        v130[0] = sub_1C28BB120(0xD000000000000039, 0x80000001C2D2C6B0, v129);
        OUTLINED_FUNCTION_21_10();
        _os_log_impl(&dword_1C28B6000, v98, v99, "FatalError at %s:%lu - %s", (uint8_t *)v100, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_0();
      }

      OUTLINED_FUNCTION_33_2(v123, *(uint64_t (**)(uint64_t, uint64_t))(v96 + 8));
    }
    if (qword_1ED7A84D8 != -1)
      swift_once();
    memset(v130, 0, 32);
    memset(v129, 0, 40);
    v103 = sub_1C2CFD350();
    LOBYTE(v104) = 44;
    sub_1C2AFA880(v103, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)v130, 0, 0, (uint64_t)v129, 0, 0, 0xD000000000000012, v127 | 0x8000000000000000, 0xD000000000000039, 0x80000001C2D2C6B0, v104, v105,
      v106,
      v107,
      v108,
      v109,
      v110,
      (uint64_t)v111,
      v112,
      v113,
      (uint64_t)v114,
      v115,
      v116);
    sub_1C28B9D6C((uint64_t)v129, (uint64_t *)&unk_1ED7A8750);
    sub_1C28B9D6C((uint64_t)v130, &qword_1ED7A8480);
    OUTLINED_FUNCTION_147();
    sub_1C2CFE7FC();
    __break(1u);
  }
}

id sub_1C2B879EC(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  id result;
  unint64_t v5;
  uint64_t i;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  uint64_t v22;

  v2 = MEMORY[0x1E0DEE9D8];
  v22 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_47;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (result = (id)OUTLINED_FUNCTION_33_0(); ; v3 = (uint64_t)result)
  {
    v5 = 0x1E0D87000uLL;
    if (!v3)
    {
      OUTLINED_FUNCTION_8();
      v8 = MEMORY[0x1E0DEE9D8];
      if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
        goto LABEL_48;
      goto LABEL_15;
    }
    if (v3 < 1)
      break;
    for (i = 0; i != v3; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_89_2();
      v7 = OUTLINED_FUNCTION_179(a1 + 8 * i);
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        sub_1C2CFE70C();
        sub_1C2CFE73C();
        sub_1C2CFE748();
        sub_1C2CFE718();
      }
      else
      {

      }
    }
    OUTLINED_FUNCTION_8();
    v8 = v22;
    if (v22 < 0)
      goto LABEL_48;
LABEL_15:
    if ((v8 & 0x4000000000000000) == 0)
    {
      v9 = *(_QWORD *)(v8 + 16);
      goto LABEL_17;
    }
LABEL_48:
    swift_bridgeObjectRetain();
    v9 = sub_1C2CFE820();
    OUTLINED_FUNCTION_36_0();
LABEL_17:
    OUTLINED_FUNCTION_36_0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF79C490);
    if (v9 <= 1)
    {
      v10 = OUTLINED_FUNCTION_5_2();
      *(_OWORD *)(v10 + 16) = xmmword_1C2D002E0;
      *(_QWORD *)(v10 + 32) = a1;
      OUTLINED_FUNCTION_33_0();
      return (id)v10;
    }
    v10 = OUTLINED_FUNCTION_5_2();
    *(_OWORD *)(v10 + 16) = xmmword_1C2D00CD0;
    *(_QWORD *)(v10 + 32) = v2;
    *(_QWORD *)(v10 + 40) = v2;
    if (!v3)
      return (id)v10;
    OUTLINED_FUNCTION_33_0();
    v11 = 0;
    v12 = 0;
LABEL_20:
    v21 = v11;
    v2 = v12;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_89_2();
      if (v2 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      v13 = OUTLINED_FUNCTION_179(a1 + 8 * v2);
      v12 = v2 + 1;
      if (__OFADD__(v2, 1))
      {
        __break(1u);
LABEL_45:
        __break(1u);
        break;
      }
      v14 = v5;
      objc_opt_self();
      v15 = swift_dynamicCastObjCClass();
      v16 = *(_QWORD *)(v10 + 16);
      if (v15)
      {
        result = v13;
        v20 = result;
        if ((v21 & 1) != 0)
        {
          if (v16 < 2)
            goto LABEL_50;
          MEMORY[0x1C3BC8A44]();
          OUTLINED_FUNCTION_99_14();
          if (v19)
            OUTLINED_FUNCTION_68_26();
        }
        else
        {
          if (!v16)
            goto LABEL_51;
          MEMORY[0x1C3BC8A44]();
          OUTLINED_FUNCTION_99_14();
          if (v19)
            sub_1C2CFDFEC();
        }
        sub_1C2CFE040();
        sub_1C2CFDFC8();

        v11 = 1;
        v5 = v14;
        if (v12 == v3)
        {
LABEL_42:
          OUTLINED_FUNCTION_8();
          return (id)v10;
        }
        goto LABEL_20;
      }
      v17 = v13;
      if (v16 < 2)
        goto LABEL_45;
      v18 = v17;
      MEMORY[0x1C3BC8A44]();
      OUTLINED_FUNCTION_99_14();
      if (v19)
        OUTLINED_FUNCTION_68_26();
      sub_1C2CFE040();
      sub_1C2CFDFC8();

      ++v2;
      v5 = v14;
      if (v12 == v3)
        goto LABEL_42;
    }
    __break(1u);
LABEL_47:
    OUTLINED_FUNCTION_33_0();
    result = (id)sub_1C2CFE820();
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

void sub_1C2B87D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const void *v28;
  const void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t AssociatedConformanceWitness;
  void (*v42)(uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[72];

  OUTLINED_FUNCTION_9();
  v46 = v23;
  v47 = v21;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v45 = v34;
  v37 = v36;
  v38 = OUTLINED_FUNCTION_173_3();
  v48 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38, v39);
  OUTLINED_FUNCTION_67_23();
  OUTLINED_FUNCTION_26_18(v49, v29);
  OUTLINED_FUNCTION_76_25();
  v40 = (_QWORD *)OUTLINED_FUNCTION_5_2();
  v40[2] = v25;
  v40[3] = a21;
  v40[4] = v46;
  v40[5] = v27;
  v40[6] = v35;
  v40[7] = v33;
  v40[8] = v31;
  v40[9] = v47;
  v40[10] = v37;
  OUTLINED_FUNCTION_26_18(v40 + 11, v49);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v42 = *(void (**)(uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 328);
  v43 = v31;
  OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_9();
  OUTLINED_FUNCTION_38_0();
  v44 = v33;
  sub_1C290F6B8((uint64_t)v49);
  v42(v45, sub_1C2B908DC, v40, v38, AssociatedConformanceWitness);
  swift_release();
  OUTLINED_FUNCTION_33_2(v22, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
  OUTLINED_FUNCTION_1();
}

void sub_1C2B87EA8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __int128 v33;
  _OWORD v34[2];
  uint64_t v35;
  _BYTE v36[40];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v32 = OUTLINED_FUNCTION_35_42(a1);
  v33 = v7;
  v9 = v8[5];
  v30 = v8[7];
  v31 = v8[6];
  v29 = v8[8];
  if ((OUTLINED_FUNCTION_145_8() & 1) != 0)
  {
    v28 = v9;
    *(_QWORD *)v36 = MEMORY[0x1E0DEE9D8];
    v10 = v4 >> 62;
    if (v4 >> 62)
    {
      OUTLINED_FUNCTION_20_64();
      v11 = OUTLINED_FUNCTION_56_2();
      if (v11)
      {
LABEL_4:
        if (v11 < 1)
        {
          __break(1u);
          goto LABEL_34;
        }
        OUTLINED_FUNCTION_143_8();
        do
        {
          if (v3)
            OUTLINED_FUNCTION_166_5();
          OUTLINED_FUNCTION_179(v4 + 8 * v1);
          OUTLINED_FUNCTION_146_7();
          if (OUTLINED_FUNCTION_142_10())
          {

          }
          else
          {
            sub_1C2CFE70C();
            sub_1C2CFE73C();
            OUTLINED_FUNCTION_149_7();
            sub_1C2CFE718();
          }
          ++v1;
        }
        while (v11 != v1);
        OUTLINED_FUNCTION_29();
        v12 = *(_QWORD *)v36;
        if ((*(_QWORD *)v36 & 0x8000000000000000) != 0)
          goto LABEL_24;
        goto LABEL_21;
      }
    }
    else
    {
      v11 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_3_1();
      if (v11)
        goto LABEL_4;
    }
    OUTLINED_FUNCTION_29();
    v12 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_24;
LABEL_21:
    if ((v12 & 0x4000000000000000) == 0)
    {
      v6 = *(_QWORD *)(v12 + 16);
      if (v10)
      {
LABEL_25:
        OUTLINED_FUNCTION_20_64();
        v22 = OUTLINED_FUNCTION_56_2();
        OUTLINED_FUNCTION_29();
LABEL_26:
        if (v6 == v22)
        {
LABEL_31:
          *(_QWORD *)v36 = v2;
          *(_OWORD *)&v36[8] = v33;
          *(__n128 *)&v36[24] = v32;
          v37 = v28;
          v38 = v31;
          v39 = v30;
          v40 = v29;
          v35 = 0;
          memset(v34, 0, sizeof(v34));
          OUTLINED_FUNCTION_171_3();
          static AceOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
          OUTLINED_FUNCTION_14_3();
          v21 = v34;
          goto LABEL_32;
        }
        if (qword_1ED7AA040 == -1)
        {
LABEL_28:
          v23 = OUTLINED_FUNCTION_118();
          __swift_project_value_buffer(v23, (uint64_t)qword_1ED7AA1B0);
          OUTLINED_FUNCTION_3_1();
          OUTLINED_FUNCTION_34_0();
          v24 = (void *)sub_1C2CFD86C();
          v25 = sub_1C2CFE2A4();
          if (OUTLINED_FUNCTION_126_0(v25))
          {
            *(_DWORD *)OUTLINED_FUNCTION_6_0() = 134218240;
            OUTLINED_FUNCTION_89_19();
            OUTLINED_FUNCTION_29();
            OUTLINED_FUNCTION_182_3();
            *(_QWORD *)v36 = v6;
            OUTLINED_FUNCTION_89_19();
            OUTLINED_FUNCTION_14_3();
            OUTLINED_FUNCTION_81_18(&dword_1C28B6000, v26, v27, "Removed SAUIAssistantUtteranceView from AceViews. Original count=%ld and updated count=%ld ");
            OUTLINED_FUNCTION_11_0();
          }

          OUTLINED_FUNCTION_14_3();
          OUTLINED_FUNCTION_29();
          goto LABEL_31;
        }
LABEL_34:
        swift_once();
        goto LABEL_28;
      }
LABEL_23:
      v22 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_26;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    v6 = sub_1C2CFE820();
    OUTLINED_FUNCTION_14_3();
    if (v10)
      goto LABEL_25;
    goto LABEL_23;
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_118();
  v14 = (void *)OUTLINED_FUNCTION_23_1(v13, (uint64_t)qword_1ED7AA1B0);
  v15 = sub_1C2CFE2B0();
  if (OUTLINED_FUNCTION_48_7(v15))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
    OUTLINED_FUNCTION_30_6(&dword_1C28B6000, v16, v17, "Additional AceViews present and generated from utterance views. Cannot assume Modes compatibility.");
    OUTLINED_FUNCTION_11_0();
  }

  v18 = (void *)(*(uint64_t (**)(unint64_t))(**(_QWORD **)(v5 + 16) + 112))(v4);
  memset(v36, 0, sizeof(v36));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
  v19 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v19 + 16) = xmmword_1C2D00370;
  *(_QWORD *)(v19 + 32) = v18;
  *(_QWORD *)&v34[0] = v19;
  sub_1C2CFDFC8();
  v20 = v18;
  OUTLINED_FUNCTION_80_16();

  swift_bridgeObjectRelease();
  v21 = v36;
LABEL_32:
  sub_1C28B9D6C((uint64_t)v21, (uint64_t *)&unk_1ED7A8750);
}

void sub_1C2B88284(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  __int128 v49;
  _BYTE v50[40];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[2];
  uint64_t v56;

  v48 = OUTLINED_FUNCTION_35_42(a1);
  v49 = v10;
  v12 = v11[5];
  v46 = v11[7];
  v47 = v11[6];
  v45 = v11[8];
  if ((OUTLINED_FUNCTION_145_8() & 1) != 0)
  {
    v42 = v12;
    v43 = __PAIR64__(v1, v2);
    v44 = v7;
    *(_QWORD *)v50 = MEMORY[0x1E0DEE9D8];
    v13 = v6 >> 62;
    if (v6 >> 62)
    {
      OUTLINED_FUNCTION_20_64();
      v14 = OUTLINED_FUNCTION_56_2();
      if (v14)
      {
LABEL_4:
        if (v14 < 1)
        {
          __break(1u);
          goto LABEL_34;
        }
        v40 = v8;
        v41 = v5;
        OUTLINED_FUNCTION_143_8();
        do
        {
          if (v4)
            OUTLINED_FUNCTION_166_5();
          OUTLINED_FUNCTION_179(v6 + 8 * v1);
          OUTLINED_FUNCTION_146_7();
          if (OUTLINED_FUNCTION_142_10())
          {

          }
          else
          {
            sub_1C2CFE70C();
            sub_1C2CFE73C();
            OUTLINED_FUNCTION_149_7();
            sub_1C2CFE718();
          }
          ++v1;
        }
        while (v14 != v1);
        OUTLINED_FUNCTION_29();
        v15 = *(_QWORD *)v50;
        if ((*(_QWORD *)v50 & 0x8000000000000000) != 0)
          goto LABEL_24;
        goto LABEL_21;
      }
    }
    else
    {
      v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      OUTLINED_FUNCTION_3_1();
      if (v14)
        goto LABEL_4;
    }
    OUTLINED_FUNCTION_29();
    v15 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_24;
LABEL_21:
    if ((v15 & 0x4000000000000000) == 0)
    {
      v9 = *(_QWORD *)(v15 + 16);
      if (v13)
      {
LABEL_25:
        OUTLINED_FUNCTION_20_64();
        v25 = OUTLINED_FUNCTION_56_2();
        OUTLINED_FUNCTION_29();
LABEL_26:
        if (v9 == v25)
        {
LABEL_31:
          v56 = 0;
          memset(v55, 0, sizeof(v55));
          *(_QWORD *)v50 = v3;
          *(_OWORD *)&v50[8] = v49;
          *(__n128 *)&v50[24] = v48;
          v51 = v42;
          v52 = v47;
          v53 = v46;
          v54 = v45;
          OUTLINED_FUNCTION_171_3();
          static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)(v31, v32, v33, v34, v35, v36, v37, v38, (uint64_t)v55, 0, v39, v40, v41, v42, (uint64_t)v3, v43, v44, v45, v46,
            v47,
            v48.n128_i64[0],
            (void *)v48.n128_u64[1]);
          OUTLINED_FUNCTION_14_3();
          v24 = v55;
          goto LABEL_32;
        }
        if (qword_1ED7AA040 == -1)
        {
LABEL_28:
          v26 = OUTLINED_FUNCTION_118();
          __swift_project_value_buffer(v26, (uint64_t)qword_1ED7AA1B0);
          OUTLINED_FUNCTION_3_1();
          OUTLINED_FUNCTION_34_0();
          v27 = (void *)sub_1C2CFD86C();
          v28 = sub_1C2CFE2A4();
          if (OUTLINED_FUNCTION_126_0(v28))
          {
            *(_DWORD *)OUTLINED_FUNCTION_6_0() = 134218240;
            OUTLINED_FUNCTION_89_19();
            OUTLINED_FUNCTION_29();
            OUTLINED_FUNCTION_182_3();
            *(_QWORD *)v50 = v9;
            OUTLINED_FUNCTION_89_19();
            OUTLINED_FUNCTION_14_3();
            OUTLINED_FUNCTION_81_18(&dword_1C28B6000, v29, v30, "Removed SAUIAssistantUtteranceView from AceViews. Original count=%ld and updated count=%ld ");
            OUTLINED_FUNCTION_11_0();
          }

          OUTLINED_FUNCTION_14_3();
          OUTLINED_FUNCTION_29();
          goto LABEL_31;
        }
LABEL_34:
        swift_once();
        goto LABEL_28;
      }
LABEL_23:
      v25 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_26;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    v9 = sub_1C2CFE820();
    OUTLINED_FUNCTION_14_3();
    if (v13)
      goto LABEL_25;
    goto LABEL_23;
  }
  if (qword_1ED7AA040 != -1)
    swift_once();
  v16 = OUTLINED_FUNCTION_118();
  v17 = (void *)OUTLINED_FUNCTION_23_1(v16, (uint64_t)qword_1ED7AA1B0);
  v18 = sub_1C2CFE2B0();
  if (OUTLINED_FUNCTION_48_7(v18))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
    OUTLINED_FUNCTION_30_6(&dword_1C28B6000, v19, v20, "Additional AceViews present and generated from utterance views. Cannot assume Modes compatibility.");
    OUTLINED_FUNCTION_11_0();
  }

  v21 = (void *)(*(uint64_t (**)(unint64_t))(**(_QWORD **)(v7 + 16) + 136))(v6);
  memset(v50, 0, sizeof(v50));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
  v22 = OUTLINED_FUNCTION_5_2();
  *(_OWORD *)(v22 + 16) = xmmword_1C2D00370;
  *(_QWORD *)(v22 + 32) = v21;
  *(_QWORD *)&v55[0] = v22;
  sub_1C2CFDFC8();
  v23 = v21;
  OUTLINED_FUNCTION_80_16();

  swift_bridgeObjectRelease();
  v24 = v50;
LABEL_32:
  sub_1C28B9D6C((uint64_t)v24, (uint64_t *)&unk_1ED7A8750);
}

uint64_t sub_1C2B88660()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t i;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_9();
  v1 = v0;
  v3 = v2;
  v4 = v0 >> 62;
  if (v0 >> 62)
  {
LABEL_16:
    OUTLINED_FUNCTION_33_0();
    v5 = sub_1C2CFE820();
    if (v5)
    {
LABEL_3:
      v6 = 4;
      while (1)
      {
        if ((v1 & 0xC000000000000001) != 0)
          OUTLINED_FUNCTION_89_2();
        v7 = *(id *)(v1 + 8 * v6);
        v8 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_16;
        }
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
          break;

        ++v6;
        if (v8 == v5)
          goto LABEL_9;
      }
      OUTLINED_FUNCTION_8();

      v9 = 1;
      if (v3 < 0)
        goto LABEL_18;
      goto LABEL_12;
    }
  }
  else
  {
    v5 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_33_0();
    if (v5)
      goto LABEL_3;
  }
LABEL_9:
  OUTLINED_FUNCTION_8();
  v9 = 0;
  if (v3 < 0)
  {
LABEL_18:
    OUTLINED_FUNCTION_50_0();
    v10 = sub_1C2CFE820();
    swift_bridgeObjectRelease();
    if (!v4)
      goto LABEL_14;
    goto LABEL_19;
  }
LABEL_12:
  if ((v3 & 0x4000000000000000) != 0)
    goto LABEL_18;
  v10 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
  {
LABEL_14:
    v11 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_20;
  }
LABEL_19:
  OUTLINED_FUNCTION_33_0();
  v11 = sub_1C2CFE820();
  OUTLINED_FUNCTION_8();
LABEL_20:
  if (v10 == v11)
    v12 = v9;
  else
    v12 = 1;
  result = 1;
  if (v5 && (v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_33_0();
    for (i = 4; ; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_89_2();
      v15 = *(id *)(v1 + 8 * i);
      v16 = v15;
      v17 = i - 3;
      if (__OFADD__(i - 4, 1))
      {
        __break(1u);
        goto LABEL_38;
      }
      v18 = objc_msgSend(v15, sel_dialog);

      if (v18)
        break;
      if (v17 == v5)
      {
        OUTLINED_FUNCTION_8();
        return 1;
      }
    }
    OUTLINED_FUNCTION_8();
    if (qword_1ED7AA040 == -1)
      goto LABEL_33;
LABEL_38:
    swift_once();
LABEL_33:
    v19 = OUTLINED_FUNCTION_118();
    v20 = (void *)OUTLINED_FUNCTION_23_1(v19, (uint64_t)qword_1ED7AA1B0);
    v21 = sub_1C2CFE2A4();
    if (OUTLINED_FUNCTION_48_7(v21))
    {
      *(_WORD *)OUTLINED_FUNCTION_6_0() = 0;
      OUTLINED_FUNCTION_30_6(&dword_1C28B6000, v22, v23, "Found an existing SADialog on a Snippet. Assuming domain has already done Modes conversion and leaving as is.");
      OUTLINED_FUNCTION_11_0();
    }

    return 0;
  }
  return result;
}

void sub_1C2B888C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v21;
  uint64_t v23;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  __int128 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86[10];

  OUTLINED_FUNCTION_9();
  HIDWORD(v76) = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v82 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  OUTLINED_FUNCTION_0_1();
  MEMORY[0x1E0C80A78](v11, v12);
  OUTLINED_FUNCTION_97_0();
  v14 = *v9;
  v13 = v9[1];
  v15 = v9[2];
  v16 = v9[3];
  v77 = v9[4];
  v78 = v9[5];
  v79 = v9[6];
  v80 = v9[7];
  v81 = v9[8];
  if (sub_1C2CFDD58() == v7 && v17 == v5)
  {
    OUTLINED_FUNCTION_254();
    goto LABEL_38;
  }
  OUTLINED_FUNCTION_6_65();
  OUTLINED_FUNCTION_23_58();
  if ((v2 & 1) != 0)
  {
LABEL_38:
    v35 = OUTLINED_FUNCTION_1_77();
    __swift_storeEnumTagSinglePayload(v0, 1, 1, v35);
    OUTLINED_FUNCTION_3_82();
    OUTLINED_FUNCTION_7_82();
    static AceOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
    goto LABEL_39;
  }
  if (sub_1C2CFDD58() == v7 && v19 == v5)
  {
    OUTLINED_FUNCTION_254();
    goto LABEL_42;
  }
  OUTLINED_FUNCTION_6_65();
  OUTLINED_FUNCTION_23_58();
  if ((v2 & 1) != 0)
  {
LABEL_42:
    v38 = OUTLINED_FUNCTION_1_77();
    __swift_storeEnumTagSinglePayload(v0, 1, 1, v38);
    OUTLINED_FUNCTION_3_82();
    v39 = OUTLINED_FUNCTION_7_82();
    static AceOutputHelper.makeSummaryViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)(v39, v40, v41, v42, v43, v44, v45);
    goto LABEL_39;
  }
  if (sub_1C2CFDD58() == v7 && v21 == v5)
  {
    OUTLINED_FUNCTION_254();
    goto LABEL_44;
  }
  OUTLINED_FUNCTION_6_65();
  OUTLINED_FUNCTION_23_58();
  if ((v2 & 1) != 0)
  {
LABEL_44:
    v46 = OUTLINED_FUNCTION_1_77();
    __swift_storeEnumTagSinglePayload(v0, 1, 1, v46);
    OUTLINED_FUNCTION_3_82();
    v47 = OUTLINED_FUNCTION_7_82();
    static AceOutputHelper.makeConfirmationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)(v47, v48, v49, v50, v51, v52, v53, v54, v75, v76, v77, v78, v79, v80, v81, v82, v83, *((uint64_t *)&v83 + 1), v84,
      *((uint64_t *)&v84 + 1),
      v85);
    goto LABEL_39;
  }
  if (sub_1C2CFDD58() == v7 && v23 == v5)
  {
    OUTLINED_FUNCTION_254();
  }
  else
  {
    OUTLINED_FUNCTION_6_65();
    OUTLINED_FUNCTION_23_58();
    if ((v2 & 1) == 0)
    {
      if (sub_1C2CFDD58() == v7 && v25 == v5)
      {
        OUTLINED_FUNCTION_254();
      }
      else
      {
        OUTLINED_FUNCTION_6_65();
        OUTLINED_FUNCTION_23_58();
        if ((v2 & 1) == 0)
        {
          if (sub_1C2CFDD58() == v7 && v27 == v5)
          {
            OUTLINED_FUNCTION_254();
          }
          else
          {
            OUTLINED_FUNCTION_6_65();
            OUTLINED_FUNCTION_23_58();
            if ((v2 & 1) == 0)
            {
              if (sub_1C2CFDD58() == v7 && v29 == v5)
              {
                OUTLINED_FUNCTION_254();
                v32 = v81;
                v33 = v82;
              }
              else
              {
                v31 = OUTLINED_FUNCTION_6_65();
                swift_bridgeObjectRelease();
                v32 = v81;
                v33 = v82;
                if ((v31 & 1) == 0)
                {
                  OUTLINED_FUNCTION_90_15(v81);
                  v34 = OUTLINED_FUNCTION_5_78();
                  __swift_storeEnumTagSinglePayload(v0, 1, 1, v34);
                  OUTLINED_FUNCTION_3_82();
LABEL_49:
                  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
                  goto LABEL_39;
                }
              }
              OUTLINED_FUNCTION_90_15(v32);
              v74 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + 16);
              v85 = 0;
              v83 = 0u;
              v84 = 0u;
              static AceOutputHelper.makeCancellationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:canUseServerTTS:flowActivity:)(v86, (_QWORD *)(v1 + 64), v74, MEMORY[0x1E0DEE9D8], 1, &v83, v33);
              v36 = (uint64_t *)&unk_1ED7A8750;
              v37 = &v83;
              goto LABEL_40;
            }
          }
          v65 = OUTLINED_FUNCTION_1_77();
          __swift_storeEnumTagSinglePayload(v0, 1, 1, v65);
          OUTLINED_FUNCTION_3_82();
          v66 = OUTLINED_FUNCTION_7_82();
          static AceOutputHelper.makeConfirmedViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)(v66, v67, v68, v69, v70, v71, v72, v73);
          goto LABEL_39;
        }
      }
      v64 = OUTLINED_FUNCTION_1_77();
      __swift_storeEnumTagSinglePayload(v0, 1, 1, v64);
      OUTLINED_FUNCTION_3_82();
      goto LABEL_49;
    }
  }
  v55 = OUTLINED_FUNCTION_5_78();
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v55);
  v85 = 0;
  v83 = 0u;
  v84 = 0u;
  v86[0] = v14;
  v86[1] = v13;
  v86[2] = v15;
  v86[3] = v16;
  v86[4] = v77;
  v86[5] = v78;
  v86[6] = v79;
  v86[7] = v80;
  v86[8] = v81;
  v56 = OUTLINED_FUNCTION_7_82();
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)(v56, v57, v58, v59, v60, v61, v62, v63, (uint64_t)&v83, 0, v75, v76, v77, v78, v79, v80, v81, v82, v83,
    *((uint64_t *)&v83 + 1),
    v84,
    *((void **)&v84 + 1));
LABEL_39:
  sub_1C28B9D6C((uint64_t)&v83, (uint64_t *)&unk_1ED7A8750);
  v36 = &qword_1ED7A7A10;
  v37 = (__int128 *)v0;
LABEL_40:
  sub_1C28B9D6C((uint64_t)v37, v36);
  OUTLINED_FUNCTION_1();
}

void sub_1C2B88CB4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[2];
  char v56[9];

  v49 = a3;
  v50 = a4;
  v48 = a2;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A9EC0);
  v18 = MEMORY[0x1E0C80A78](v16, v17);
  MEMORY[0x1E0C80A78](v18, v19);
  v22 = (char *)&v45 - v21;
  v23 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    if (v23 == (void *)1)
    {
      v24 = sub_1C2CFDD58();
      sub_1C2B871AC(v49, v50, a5, (uint64_t)a6, a7, v24, v25, v26, a8, a9, a10, a11, v45, (uint64_t)v46, v47, (uint64_t)v48, v49, v50, v51,
        *((uint64_t *)&v51 + 1),
        (_BYTE *)v52,
        *((uint64_t *)&v52 + 1),
        v53,
        v54);
      swift_bridgeObjectRelease();
    }
    else if (v23 == (void *)2)
    {
      v47 = v20;
      v29 = v48 + 104;
      LOBYTE(v55[0]) = 6;
      v56[0] = 77;
      v30 = objc_msgSend(a6, sel__intentResponseCode);
      WORD4(v51) = 0;
      sub_1C2C1FDAC((uint64_t)v29, (uint64_t)v55, v50, v49, a5, (uint64_t)v56, (uint64_t)v30, 0, (uint64_t)a6, (uint64_t)&v51, 0xD000000000000012, 0x80000001C2D27E50, a10, a11, v45, (uint64_t)v46, v47, (uint64_t)v48, v49,
        v50,
        3,
        *((uint64_t *)&v51 + 1),
        v52,
        *((uint64_t *)&v52 + 1),
        v53,
        v54);
      if (qword_1ED7AA040 != -1)
        swift_once();
      v31 = sub_1C2CFD878();
      v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED7AA1B0);
      v33 = *(_QWORD *)(v31 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v22, v32, v31);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v31);
      v34 = (uint64_t)v22;
      v35 = v47;
      sub_1C28D3304(v34, v47, &qword_1ED7A9EC0);
      if (__swift_getEnumTagSinglePayload(v35, 1, v31) == 1)
      {
        sub_1C28B9D6C(v47, &qword_1ED7A9EC0);
      }
      else
      {
        v36 = sub_1C2CFD86C();
        v37 = sub_1C2CFE2B0();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = swift_slowAlloc();
          v50 = swift_slowAlloc();
          *(_QWORD *)&v51 = v50;
          *(_DWORD *)v38 = 136315650;
          v39 = sub_1C2CFE694();
          *(_QWORD *)&v55[0] = sub_1C28BB120(v39, v40, (uint64_t *)&v51);
          sub_1C2CFE4D8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 12) = 2048;
          *(_QWORD *)&v55[0] = 70;
          sub_1C2CFE4D8();
          *(_WORD *)(v38 + 22) = 2080;
          *(_QWORD *)&v55[0] = sub_1C28BB120(0xD000000000000022, 0x80000001C2D364E0, (uint64_t *)&v51);
          sub_1C2CFE4D8();
          _os_log_impl(&dword_1C28B6000, v36, v37, "FatalError at %s:%lu - %s", (uint8_t *)v38, 0x20u);
          v41 = v50;
          swift_arrayDestroy();
          MEMORY[0x1C3BC9DE8](v41, -1, -1);
          MEMORY[0x1C3BC9DE8](v38, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v47, v31);
      }
      if (qword_1ED7A84D8 != -1)
        swift_once();
      memset(v55, 0, sizeof(v55));
      v53 = 0;
      v51 = 0u;
      v52 = 0u;
      v42 = sub_1C2CFD350();
      LOBYTE(v44) = 44;
      sub_1C2AFA880(v42, 6, 0x54746E6572727543, 0xEB000000006B7361, 0, 0, 0, (uint64_t)v55, 0, 0, (uint64_t)&v51, 0, 0, 0xD000000000000012, 0x80000001C2D27E50, 0xD000000000000022, 0x80000001C2D364E0, v44, v45,
        (uint64_t)v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        *((uint64_t *)&v51 + 1),
        v52,
        *((uint64_t *)&v52 + 1),
        v53,
        v54);
      sub_1C28B9D6C((uint64_t)&v51, (uint64_t *)&unk_1ED7A8750);
      sub_1C28B9D6C((uint64_t)v55, &qword_1ED7A8480);
      swift_release();
      sub_1C2CFE7FC();
      __break(1u);
    }
    else
    {
      v47 = a5;
      v27 = *(unsigned __int16 *)(a1 + 8);
      v28 = qword_1ED7AA038;
      v46 = v23;
      if (v28 != -1)
        swift_once();
      sub_1C2CFE2A4();
      sub_1C2CFD7AC();
      sub_1C2B86670(v49, v50, v47, (uint64_t)a6, a7, (uint64_t)v46, v27 & 1, (v27 >> 8) & 1, a8, a9, a10, a11);
      sub_1C2A16270(v23);
    }
  }
  else
  {
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2A4();
    sub_1C2CFD7AC();
    sub_1C2B86E04(v49, v50, a5, (uint64_t)a6, a7, a8, a9, a10, a11, v43, v45, (uint64_t)v46, v47, (uint64_t)v48, v49, v50, v51, *((uint64_t *)&v51 + 1), v52,
      *((uint64_t *)&v52 + 1),
      v53);
  }
}

void sub_1C2B89328(uint64_t a1, _QWORD *a2, unint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(void *, uint64_t);
  void *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void *v55;

  v44 = a6;
  v45 = a5;
  v42 = (void *)a3;
  v43 = a4;
  v8 = type metadata accessor for SiriKitEventPayload(0);
  MEMORY[0x1E0C80A78](v8, v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    v41 = *(id *)(a1 + 48);
    v42 = (void *)v18;
    v43 = v12;
    v21 = v13;
    if (qword_1ED7AA038 != -1)
      swift_once();
    v40 = qword_1ED7AA1A8;
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C2D002E0;
    v46 = 0;
    v47 = 0xE000000000000000;
    v55 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    sub_1C2CFE7C0();
    v24 = v46;
    v23 = v47;
    *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v22 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v22 + 32) = v24;
    *(_QWORD *)(v22 + 40) = v23;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    v25 = v13;
    v45(v13, 1);
    v27 = (unint64_t)v42;
    v26 = v43;
    v28 = (uint64_t)v41;
    sub_1C290D288(v13, v43, v14, v15, v17, v16, (uint64_t)v41, (unint64_t)v42, v20, 1);
    sub_1C290D288(v13, v26, v14, v15, v17, v16, v28, v27, v20, 1);
  }
  else
  {
    v29 = a2[2];
    v46 = v13;
    v47 = v12;
    v48 = v14;
    v49 = v15;
    v50 = v17;
    v51 = v16;
    v52 = v19;
    v53 = v18;
    v54 = v20;
    v30 = v12;
    v31 = (void *)(*(uint64_t (**)(void **, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v29 + 120))(&v46, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], 0, 0, 0);
    v41 = v31;
    v32 = a2[6];
    v33 = a2[7];
    __swift_project_boxed_opaque_existential_1(a2 + 3, v32);
    (*(void (**)(void *, uint64_t, uint64_t))(v33 + 48))(v31, v32, v33);
    v34 = a2 + 13;
    v36 = a2[16];
    v35 = a2[17];
    __swift_project_boxed_opaque_existential_1(v34, v36);
    type metadata accessor for SiriKitEvent(0);
    *v11 = 32;
    v37 = v42;
    v38 = v43;
    *((_QWORD *)v11 + 1) = v42;
    *((_QWORD *)v11 + 2) = v38;
    *((_QWORD *)v11 + 3) = 3;
    *((_WORD *)v11 + 16) = 0;
    *((_QWORD *)v11 + 5) = 0;
    *((_QWORD *)v11 + 6) = 0;
    *((_QWORD *)v11 + 7) = v13;
    *((_QWORD *)v11 + 8) = v30;
    *((_QWORD *)v11 + 9) = 0;
    *((_QWORD *)v11 + 10) = 0;
    v11[88] = 33;
    swift_storeEnumTagMultiPayload();
    v39 = v37;
    sub_1C2CFD350();
    swift_bridgeObjectRetain();
    SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v11, 0);
    (*(void (**)(void))(v35 + 8))();
    swift_release();
    v45(0, 0);

  }
}

void sub_1C2B89680(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t AssociatedConformanceWitness;
  void (*v45)(id, void *, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v46;
  id v47;
  id v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  unint64_t v64;
  void (*v65)(void *, uint64_t);
  uint64_t v66;
  uint64_t v67;

  v62 = a8;
  v63 = a6;
  v66 = a7;
  v67 = a3;
  v61 = a5;
  v65 = a2;
  v60 = a9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v13);
  v17 = (char *)&v50 - v16;
  v19 = *(void **)a1;
  v18 = *(_QWORD *)(a1 + 8);
  v21 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v22 = *(_QWORD *)(a1 + 32);
  v23 = *(_QWORD *)(a1 + 40);
  v24 = *(_QWORD *)(a1 + 48);
  v64 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v26 = v18;
    v27 = v19;
    v28 = v19;
    v65(v27, 1);
    sub_1C290D288(v27, v26, v21, v20, v22, v23, v24, v64, v25, 1);
  }
  else
  {
    v29 = *(void (**)(uint64_t, uint64_t))(a10 + 192);
    v58 = v14;
    v59 = v15;
    v55 = v19;
    v56 = v18;
    swift_bridgeObjectRetain();
    v54 = v21;
    swift_bridgeObjectRetain();
    v53 = v20;
    swift_bridgeObjectRetain();
    v52 = v22;
    swift_bridgeObjectRetain();
    v51 = v23;
    swift_bridgeObjectRetain();
    v30 = v24;
    v50 = v24;
    v31 = v64;
    sub_1C28F8E6C(v30, v64);
    swift_bridgeObjectRetain();
    v32 = v60;
    v29(v60, a10);
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = v32;
    v33[3] = a10;
    v34 = v66;
    v33[4] = a4;
    v33[5] = v34;
    v35 = v61;
    v57 = v17;
    v37 = v62;
    v36 = v63;
    v33[6] = v61;
    v33[7] = v36;
    v38 = v55;
    v33[8] = v37;
    v33[9] = v38;
    v39 = v54;
    v33[10] = v56;
    v33[11] = v39;
    v40 = v52;
    v33[12] = v53;
    v33[13] = v40;
    v41 = v50;
    v33[14] = v51;
    v33[15] = v41;
    v33[16] = v31;
    v33[17] = v25;
    v42 = v67;
    v33[18] = v65;
    v33[19] = v42;
    v43 = v58;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v45 = *(void (**)(id, void *, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
    swift_unknownObjectRetain();
    sub_1C2CFD350();
    v46 = v35;
    v47 = v36;
    sub_1C2CFD350();
    sub_1C2CFD350();
    v48 = v46;
    v49 = v57;
    v45(v48, v36, sub_1C2B91E78, v33, v43, AssociatedConformanceWitness);
    swift_release();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v49, v43);
  }
}

void sub_1C2B89934(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(_QWORD *__return_ptr, uint64_t, void *, void *, uint64_t, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t AssociatedConformanceWitness;
  void (*v37)(uint64_t, _QWORD *, void (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  _QWORD __dst[10];

  v45 = a1;
  v46 = a8;
  v48 = a7;
  v49 = a6;
  v47 = a9;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15, v18);
  v19 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v44 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v21);
  v23 = (char *)&v42 - v22;
  v24 = *(void (**)(_QWORD *__return_ptr, uint64_t, void *, void *, uint64_t, uint64_t))(a11 + 224);
  v50 = a3;
  v51 = a5;
  v52 = a4;
  v24(__dst, a3, a4, a5, a10, a11);
  if (LOBYTE(__dst[0]))
  {
    if (LOBYTE(__dst[0]) == 1)
    {
      v25 = v48;
      HIWORD(v53) = 1551;
      __dst[0] = 0;
      LOWORD(__dst[1]) = 0;
      v26 = (uint64_t)v51;
      v27 = v50;
      v28 = (uint64_t)v52;
      sub_1C2C1FDAC(v49 + 104, (uint64_t)&v53 + 7, v50, a2, (uint64_t)v52, (uint64_t)&v53 + 6, 0, 1, (uint64_t)v51, (uint64_t)__dst, *v48, v48[1], a10, a11, v42, v43, v44, v45, v46,
        v47,
        (uint64_t)v48,
        v49,
        v50,
        (uint64_t)v51,
        (uint64_t)v52,
        v53);
      (*(void (**)(uint64_t, uint64_t))(a11 + 152))(a10, a11);
      memcpy(__dst, v25, 0x48uLL);
      sub_1C2B85E30(a2, v27, v28, (uint64_t)v23, (uint64_t)__dst, v26, 0, v45, v46, v47, a10, a11, v42, v43, v44, v45, v46, v47, (uint64_t)v48,
        v49,
        v50,
        (uint64_t)v51,
        (uint64_t)v52,
        v53);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v44);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(a11 + 152))(a10, a11);
      v29 = v48;
      memcpy(__dst, v48, 0x48uLL);
      sub_1C28D3304(v45, (uint64_t)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ED7A7A10);
      v30 = (*(unsigned __int8 *)(v16 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v31 = (_QWORD *)swift_allocObject();
      v31[2] = a10;
      v31[3] = a11;
      v32 = v47;
      v31[4] = v46;
      v31[5] = v32;
      v33 = v50;
      v31[6] = v49;
      v31[7] = a2;
      v34 = v52;
      v31[8] = v33;
      v31[9] = v34;
      memcpy(v31 + 10, v29, 0x48uLL);
      v31[19] = v51;
      sub_1C2921AEC((uint64_t)v19, (uint64_t)v31 + v30, &qword_1ED7A7A10);
      v35 = v44;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v37 = *(void (**)(uint64_t, _QWORD *, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                             + 136);
      sub_1C2CFD350();
      sub_1C2CFD350();
      swift_unknownObjectRetain();
      v38 = v50;
      sub_1C2CFD350();
      v39 = v52;
      sub_1C290F6B8((uint64_t)v29);
      v40 = v51;
      v37(v38, __dst, sub_1C2B91FBC, v31, v35, AssociatedConformanceWitness);
      swift_release();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v35);
    }
  }
  else
  {
    memcpy(__dst, v48, 0x48uLL);
    sub_1C2B8613C(a2, v50, (uint64_t)v52, (uint64_t)__dst, MEMORY[0x1E0DEE9D8], (uint64_t)v51, v45, v46, v47, a10, a11, v41, v42, v43, v44, v45, v46, v47, (uint64_t)v48,
      v49,
      v50,
      (uint64_t)v51,
      (uint64_t)v52);
  }
}

#error "1C2B89D2C: call analysis failed (funcsize=40)"

void sub_1C2B89D74(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t AssociatedConformanceWitness;
  void (*v41)(void (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  id v42;
  char *v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  unint64_t v58;
  void (*v59)(void *, uint64_t);

  v56 = a6;
  v57 = a7;
  v54 = a4;
  v55 = a5;
  v59 = a2;
  v53 = a8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v12);
  v17 = *(void **)a1;
  v16 = *(_QWORD *)(a1 + 8);
  v19 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  v21 = *(_QWORD *)(a1 + 32);
  v20 = *(_QWORD *)(a1 + 40);
  v22 = *(_QWORD *)(a1 + 48);
  v58 = *(_QWORD *)(a1 + 56);
  v23 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v24 = v16;
    v25 = v17;
    v59(v17, 1);
    sub_1C290D288(v17, v24, v19, v18, v21, v20, v22, v58, v23, 1);
  }
  else
  {
    v45 = *(void (**)(uint64_t, uint64_t))(a9 + 176);
    v50 = v13;
    v51 = (char *)&v44 - v14;
    v52 = v15;
    v49 = v16;
    swift_bridgeObjectRetain();
    v48 = v19;
    swift_bridgeObjectRetain();
    v47 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46 = v20;
    v26 = v22;
    v27 = v22;
    v28 = v58;
    sub_1C28F8E6C(v27, v58);
    v29 = v23;
    swift_bridgeObjectRetain();
    v30 = a3;
    v44 = a3;
    v32 = v53;
    v31 = v54;
    v45(v53, a9);
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = v32;
    v33[3] = a9;
    v33[4] = v59;
    v33[5] = v30;
    v34 = v55;
    v33[6] = v31;
    v33[7] = v34;
    v35 = v49;
    v33[8] = v17;
    v33[9] = v35;
    v36 = v47;
    v33[10] = v48;
    v33[11] = v36;
    v37 = v46;
    v33[12] = v21;
    v33[13] = v37;
    v33[14] = v26;
    v33[15] = v28;
    v33[16] = v29;
    v38 = v57;
    v33[17] = v56;
    v33[18] = v38;
    v39 = v50;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v41 = *(void (**)(void (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                          + 288);
    sub_1C2CFD350();
    swift_unknownObjectRetain();
    sub_1C2CFD350();
    sub_1C2CFD350();
    v42 = v38;
    v43 = v51;
    v41(sub_1C2B91CD8, v33, v39, AssociatedConformanceWitness);
    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v39);
  }
}

void sub_1C2B8A000(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, const void *a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void (*v26)(uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t AssociatedConformanceWitness;
  void (*v34)(uint64_t, _QWORD *, void (*)(void *, char), _QWORD *, uint64_t, uint64_t);
  id v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  const void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(void *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[10];

  v41 = a7;
  v42 = a8;
  v40 = a6;
  v43 = a5;
  v47 = a3;
  v48 = a4;
  v46 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v12);
  v16 = (char *)&v37 - v15;
  v17 = *(void **)a1;
  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v21 = *(_QWORD *)(a1 + 32);
  v22 = *(_QWORD *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 56);
  v24 = *(_QWORD *)(a1 + 64);
  v44 = *(_QWORD *)(a1 + 48);
  v45 = v23;
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v25 = v17;
    v46(v17, 1);
    sub_1C290D288(v17, v18, v19, v20, v21, v22, v44, v45, v24, 1);
  }
  else
  {
    v26 = *(void (**)(uint64_t, uint64_t))(a10 + 152);
    v37 = v13;
    v38 = v16;
    v39 = v14;
    v26(a9, a10);
    v49[0] = v17;
    v49[1] = v18;
    v49[2] = v19;
    v49[3] = v20;
    v49[4] = v21;
    v49[5] = v22;
    v49[6] = v44;
    v49[7] = v45;
    v49[8] = v24;
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = a9;
    v27[3] = a10;
    v28 = v47;
    v27[4] = v46;
    v27[5] = v28;
    v29 = (uint64_t)v40;
    memcpy(v27 + 6, v40, 0x48uLL);
    v30 = v42;
    v31 = v48;
    v27[15] = v41;
    v27[16] = v31;
    v27[17] = v30;
    v32 = v37;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v34 = *(void (**)(uint64_t, _QWORD *, void (*)(void *, char), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 128);
    sub_1C2CFD350();
    sub_1C290F6B8(v29);
    sub_1C2CFD350();
    swift_unknownObjectRetain();
    v35 = v30;
    v36 = v38;
    v34(v43, v49, sub_1C2B91D60, v27, v32, AssociatedConformanceWitness);
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v32);
  }
}

void sub_1C2B8A238(void *a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4, __n128 *a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  id v39;
  uint64_t v40;
  void (*v41)(void *, uint64_t);
  uint64_t v42;
  uint64_t __dst[9];
  _OWORD v44[2];
  uint64_t v45;
  __n128 v46;
  __n128 v47;

  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AceOutput();
  MEMORY[0x1E0C80A78](v21, v22);
  v24 = (uint64_t *)((char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) != 0)
  {
    v39 = a1;
    a3(a1, 1);
    sub_1C2B9161C(a1, 1, (void (*)(id))MEMORY[0x1E0DEEB08]);
  }
  else
  {
    v41 = a3;
    v42 = a4;
    HIDWORD(v40) = *(unsigned __int8 *)(a6[2] + 16);
    sub_1C299A4E4(a5 + 3, &v46);
    sub_1C299A4E4(&v46, &v47);
    LODWORD(v40) = v47.n128_u64[1] - 3 < 0xFFFFFFFFFFFFFFFELL;
    v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a10 + 320))(a8, a9, a10);
    v26 = type metadata accessor for NLContextUpdate();
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v26);
    v45 = 0;
    memset(v44, 0, sizeof(v44));
    memcpy(__dst, a5, sizeof(__dst));
    static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)((uint64_t)__dst, (uint64_t)(a6 + 8), HIDWORD(v40), (uint64_t)a1, v40, v25 & 1, (uint64_t)v20, MEMORY[0x1E0DEE9D8], (uint64_t)v44, 0, v40, (uint64_t)v41, v42, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5],
      __dst[6],
      __dst[7],
      (void *)__dst[8]);
    sub_1C28B9D6C((uint64_t)v44, (uint64_t *)&unk_1ED7A8750);
    sub_1C28B9D6C((uint64_t)v20, &qword_1ED7A7A10);
    v27 = a6 + 3;
    v29 = a6[6];
    v28 = a6[7];
    __swift_project_boxed_opaque_existential_1(v27, v29);
    v30 = *v24;
    v31 = *v24 & 0xC000000000000001;
    sub_1C2979BD4(0, v31 == 0, *v24);
    if (v31)
      v32 = (id)MEMORY[0x1C3BC9170](0, v30);
    else
      v32 = *(id *)(v30 + 32);
    v33 = v32;
    v34 = (uint64_t)v41;
    v35 = swift_allocObject();
    v36 = v42;
    *(_QWORD *)(v35 + 16) = v34;
    *(_QWORD *)(v35 + 24) = v36;
    v37 = *(void (**)(void *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8);
    v38 = sub_1C28BF798(0, (unint64_t *)&qword_1ED7A7D50);
    sub_1C2CFD350();
    v37(v33, sub_1C2B91DB8, v35, v38, v29, v28);

    swift_release();
    sub_1C28E0610((uint64_t)v24);
  }
}

void sub_1C2B8A4EC(uint64_t a1, void (*a2)(void *, uint64_t))
{
  void *v3;
  unsigned __int8 v4;
  void *v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 9) & 1) != 0)
  {
    v3 = *(void **)a1;
    v4 = *(_BYTE *)(a1 + 8);
    sub_1C293814C();
    v5 = (void *)swift_allocError();
    *(_QWORD *)v6 = v3;
    *(_BYTE *)(v6 + 8) = v4;
    sub_1C294B204(v3, v4);
    sub_1C294B204(v3, v4);
    a2(v5, 1);

    sub_1C28ED9F4(v3, v4, 1);
  }
  else
  {
    a2(0, 0);
  }
}

void sub_1C2B8A5AC(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  id v34;
  unint64_t v35;
  ValueMetadata *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t (*v51)(void *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void *, uint64_t);
  void *v65;
  __int128 v66;
  uint64_t v67;
  ValueMetadata *v68;
  _UNKNOWN **v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _OWORD v74[2];
  uint64_t v75;

  v62 = a3;
  v63 = a8;
  v61 = a7;
  v64 = a2;
  v65 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v11, v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AceOutput();
  v17 = MEMORY[0x1E0C80A78](v15, v16);
  MEMORY[0x1E0C80A78](v17, v18);
  v21 = (char *)&v50 - v20;
  v23 = *(void **)a1;
  v22 = *(_QWORD *)(a1 + 8);
  v25 = *(_QWORD *)(a1 + 16);
  v24 = *(_QWORD *)(a1 + 24);
  v26 = *(_QWORD *)(a1 + 32);
  v27 = *(_QWORD *)(a1 + 40);
  v29 = *(_QWORD *)(a1 + 48);
  v28 = *(_QWORD *)(a1 + 56);
  v30 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v31 = *(_QWORD *)(a1 + 8);
    v32 = *(void **)a1;
    v33 = *(_QWORD *)(a1 + 56);
    v34 = v23;
    v64(v32, 1);
    sub_1C290D288(v32, v31, v25, v24, v26, v27, v29, v33, v30, 1);
  }
  else
  {
    v57 = a4;
    HIDWORD(v53) = *(unsigned __int8 *)(*(_QWORD *)(a4 + 16) + 16);
    LODWORD(v53) = v28 - 3 < 0xFFFFFFFFFFFFFFFELL;
    v52 = a4 + 64;
    v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a9 + 320);
    v55 = a9;
    v56 = v19;
    v58 = v21;
    *(_QWORD *)&v60 = v23;
    *((_QWORD *)&v60 + 1) = v22;
    v35 = v28;
    swift_bridgeObjectRetain();
    v59 = v25;
    swift_bridgeObjectRetain();
    v36 = (ValueMetadata *)v24;
    v54 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37 = v35;
    sub_1C28F8E6C(v29, v35);
    swift_bridgeObjectRetain();
    LOBYTE(v35) = v51(v65, v63, a9);
    v38 = type metadata accessor for NLContextUpdate();
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v38);
    v75 = 0;
    memset(v74, 0, sizeof(v74));
    v66 = v60;
    v67 = v59;
    v68 = v36;
    v69 = (_UNKNOWN **)v26;
    v70 = v27;
    v71 = v29;
    v72 = v37;
    v73 = v30;
    v39 = (uint64_t)v58;
    static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)((uint64_t)&v66, v52, HIDWORD(v53), MEMORY[0x1E0DEE9D8], v53, v35 & 1, (uint64_t)v14, MEMORY[0x1E0DEE9D8], (uint64_t)v74, 0, v50, (uint64_t)v51, v52, v53, v54, v55, v56, v57, (uint64_t)v58,
      v59,
      v60,
      *((void **)&v60 + 1));
    sub_1C28B9D6C((uint64_t)v74, (uint64_t *)&unk_1ED7A8750);
    sub_1C28B9D6C((uint64_t)v14, &qword_1ED7A7A10);
    v40 = sub_1C2B0C6E8();
    v68 = &type metadata for OutputPublishers;
    v69 = &off_1E7C8D920;
    *(_QWORD *)&v66 = v40;
    type metadata accessor for LegacySiriKitOutputPublisher();
    v41 = swift_allocObject();
    sub_1C28B99EC(&v66, v41 + 16);
    v42 = v56;
    sub_1C299A0F4(v39, v56);
    v43 = (_QWORD *)swift_allocObject();
    v44 = v55;
    v43[2] = v63;
    v43[3] = v44;
    v45 = v65;
    v43[4] = v57;
    v43[5] = v45;
    v46 = v60;
    v43[6] = v61;
    v43[7] = v46;
    v47 = v59;
    v43[8] = *((_QWORD *)&v60 + 1);
    v43[9] = v47;
    v43[10] = v54;
    v43[11] = v26;
    v43[12] = v27;
    v43[13] = v29;
    v43[14] = v37;
    v43[15] = v30;
    v48 = v62;
    v43[16] = v64;
    v43[17] = v48;
    sub_1C2CFD350();
    v49 = v45;
    sub_1C2CFD350();
    sub_1C2CFD350();
    sub_1C2BED8D0(v42, (uint64_t)sub_1C2B91C14, (uint64_t)v43, v41);
    swift_release();
    sub_1C28E0610((uint64_t)v58);
    sub_1C28E0610(v42);
    swift_release();
  }
}

void sub_1C2B8A9C4(void *a1, char a2, _QWORD *a3, void *a4, uint64_t a5, uint64_t *a6, void (*a7)(void *, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  _QWORD *v23;
  void (*v24)(void *, uint64_t);

  v14 = type metadata accessor for SiriKitEventPayload(0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v22 = a1;
    a7(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    v24 = a7;
    v18 = *a6;
    v19 = a6[1];
    v20 = a3[17];
    v23 = __swift_project_boxed_opaque_existential_1(a3 + 13, a3[16]);
    type metadata accessor for SiriKitEvent(0);
    *v17 = 6;
    *((_QWORD *)v17 + 1) = a4;
    *((_QWORD *)v17 + 2) = a5;
    *((_QWORD *)v17 + 3) = 3;
    *((_WORD *)v17 + 16) = 0;
    *((_QWORD *)v17 + 5) = 0;
    *((_QWORD *)v17 + 6) = 0;
    *((_QWORD *)v17 + 7) = v18;
    *((_QWORD *)v17 + 8) = v19;
    *((_QWORD *)v17 + 9) = 0;
    *((_QWORD *)v17 + 10) = 0;
    v17[88] = 23;
    swift_storeEnumTagMultiPayload();
    v21 = a4;
    sub_1C2CFD350();
    swift_bridgeObjectRetain();
    SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v17, 0);
    (*(void (**)(void))(v20 + 8))();
    swift_release();
    v24(0, 0);
  }
}

void sub_1C2B8AB5C(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _QWORD *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t AssociatedTypeWitness;
  uint64_t v79;
  _QWORD *v80;
  uint64_t AssociatedConformanceWitness;
  uint64_t v82;
  id v83;
  void (*v84)(void *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v80 = a7;
  v82 = a4;
  v83 = a6;
  v85 = a3;
  v86 = a5;
  v84 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v11, v12);
  v75 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = a9;
  AssociatedConformanceWitness = a8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v76 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v14);
  v77 = (char *)&v65 - v15;
  v16 = type metadata accessor for SiriKitEventPayload(0);
  v18 = MEMORY[0x1E0C80A78](v16, v17);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(void **)a1;
  v22 = *(_QWORD *)(a1 + 8);
  v24 = *(_QWORD *)(a1 + 16);
  v23 = *(_QWORD *)(a1 + 24);
  v26 = *(_QWORD *)(a1 + 32);
  v25 = *(_QWORD *)(a1 + 40);
  v27 = *(_QWORD *)(a1 + 48);
  v28 = *(_QWORD *)(a1 + 56);
  v29 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v30 = *(void **)a1;
    v31 = v21;
    v84(v30, 1);
    sub_1C290D288(v30, v22, v24, v23, v26, v25, v27, v28, v29, 1);
  }
  else
  {
    v69 = v18;
    v70 = v21;
    v71 = v29;
    v72 = v26;
    v74 = v27;
    v73 = v28;
    v32 = v79;
    v33 = v82;
    v34 = (uint64_t)v83;
    v35 = AssociatedConformanceWitness;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, id, _QWORD, uint64_t, uint64_t))(v79 + 224))(&v87, v86, v83, 0, AssociatedConformanceWitness, v79);
    v36 = v35;
    if ((_BYTE)v87)
    {
      v37 = v22;
      if (v87 == 1)
      {
        v38 = v32;
        v68 = v80[16];
        v67 = v80[17];
        v66 = __swift_project_boxed_opaque_existential_1(v80 + 13, v68);
        v65 = type metadata accessor for SiriKitEvent(0);
        *v20 = 6;
        v39 = v83;
        v40 = v86;
        *((_QWORD *)v20 + 1) = v83;
        *((_QWORD *)v20 + 2) = v40;
        *((_QWORD *)v20 + 3) = 0;
        *((_WORD *)v20 + 16) = 0;
        *((_QWORD *)v20 + 5) = 0;
        *((_QWORD *)v20 + 6) = 0;
        v41 = (uint64_t)v70;
        *((_QWORD *)v20 + 7) = v70;
        *((_QWORD *)v20 + 8) = v37;
        *((_QWORD *)v20 + 9) = 0xD000000000000012;
        *((_QWORD *)v20 + 10) = 0x80000001C2D26C40;
        v20[88] = 44;
        swift_storeEnumTagMultiPayload();
        v83 = v39;
        sub_1C2CFD350();
        swift_bridgeObjectRetain();
        SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v20, 0);
        (*(void (**)(void))(v67 + 8))();
        swift_release();
        v42 = v37;
        v43 = (uint64_t)v77;
        v45 = AssociatedConformanceWitness;
        v44 = v82;
        (*(void (**)(uint64_t, uint64_t))(v38 + 152))(AssociatedConformanceWitness, v38);
        v87 = v41;
        v88 = v42;
        v89 = v24;
        v90 = v23;
        v91 = v72;
        v92 = v25;
        v93 = v74;
        v94 = v73;
        v95 = v71;
        v46 = type metadata accessor for NLContextUpdate();
        v47 = v75;
        __swift_storeEnumTagSinglePayload(v75, 1, 1, v46);
        sub_1C2B85E30(v44, v86, (uint64_t)v83, v43, (uint64_t)&v87, 0, 0, v47, (uint64_t)v84, v85, v45, v38, v65, (uint64_t)v66, v67, v68, v69, (uint64_t)v70, v71,
          v72,
          v73,
          v74,
          v75,
          v76);
        sub_1C28B9D6C(v47, &qword_1ED7A7A10);
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v43, AssociatedTypeWitness);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v32 + 152))(v36, v32);
        v48 = v70;
        v87 = (uint64_t)v70;
        v88 = v37;
        v49 = v24;
        v89 = v24;
        v90 = v23;
        v75 = v23;
        v50 = v72;
        v91 = v72;
        v92 = v25;
        v51 = v74;
        v52 = v73;
        v93 = v74;
        v94 = v73;
        v53 = v71;
        v95 = v71;
        v54 = (_QWORD *)swift_allocObject();
        v54[2] = AssociatedConformanceWitness;
        v54[3] = v32;
        v55 = v85;
        v54[4] = v84;
        v54[5] = v55;
        v56 = v82;
        v54[6] = v80;
        v54[7] = v56;
        v57 = v83;
        v54[8] = v86;
        v54[9] = v57;
        v54[10] = v48;
        v54[11] = v37;
        v58 = v75;
        v54[12] = v49;
        v54[13] = v58;
        v54[14] = v50;
        v54[15] = v25;
        v54[16] = v51;
        v54[17] = v52;
        v54[18] = v53;
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v84 = *(void (**)(void *, uint64_t))(AssociatedConformanceWitness + 136);
        sub_1C29E6C74(v48, v37, v49, v58, v50, v25, v51, v52, v53, 0);
        v59 = v83;
        v60 = v86;
        sub_1C2CFD350();
        sub_1C2CFD350();
        sub_1C2CFD350();
        swift_unknownObjectRetain();
        v61 = v60;
        v62 = v77;
        v63 = AssociatedTypeWitness;
        ((void (*)(uint64_t, uint64_t *, void (*)(), _QWORD *, uint64_t, uint64_t))v84)(v61, &v87, sub_1C2B91B20, v54, AssociatedTypeWitness, AssociatedConformanceWitness);
        swift_release();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v62, v63);
      }
    }
    else
    {
      v87 = (uint64_t)v70;
      v88 = v22;
      v89 = v24;
      v90 = v23;
      v91 = v72;
      v92 = v25;
      v93 = v74;
      v94 = v73;
      v95 = v71;
      sub_1C2B863F0(v33, v86, v34, (uint64_t)&v87, MEMORY[0x1E0DEE9D8], (uint64_t)v84, v85, v35, v32, v64, v65, (uint64_t)v66, v67, v68, v69, (uint64_t)v70, v71, v72, v73,
        v74,
        v75);
    }
  }
}

#error "1C2B8B188: call analysis failed (funcsize=38)"

void sub_1C2B8B1CC(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(void *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(void *, uint64_t);
  void *v36;
  void *v37;
  uint64_t AssociatedConformanceWitness;
  void (*v39)(uint64_t, id, id, void (*)(), char *, uint64_t, uint64_t);
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  uint64_t v46;
  void *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t AssociatedTypeWitness;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  void (*v55)(void *, uint64_t);
  uint64_t v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[80];
  uint64_t v64;
  unint64_t v65;
  _BYTE v66[80];
  _BYTE __src[88];

  v58 = a8;
  v59 = a6;
  v53 = a7;
  v55 = a3;
  v56 = a5;
  v60 = a2;
  v61 = a4;
  v51 = a11;
  v52 = a10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v62 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_QWORD *)(v62 + 64);
  v14 = MEMORY[0x1E0C80A78](AssociatedTypeWitness, v13);
  v54 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14, v15);
  v57 = (char *)&v46 - v16;
  sub_1C2921AEC(a1, (uint64_t)v66, &qword_1EF79C4B0);
  v17 = *(_QWORD *)(a1 + 48);
  v48 = *(_QWORD *)(a1 + 56);
  v49 = v17;
  sub_1C2921AEC((uint64_t)v66, (uint64_t)__src, &qword_1EF79C4B0);
  if ((__src[72] & 1) != 0)
  {
    v18 = v55;
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C2D002E0;
    v64 = 0;
    v65 = 0xE000000000000000;
    sub_1C2921AEC((uint64_t)v66, (uint64_t)v63, &qword_1EF79C4B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79C4B0);
    sub_1C2CFE7C0();
    v20 = v64;
    v21 = v65;
    *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v19 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v21;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    sub_1C2B85C0C((uint64_t)v66, v18);
  }
  else
  {
    v47 = a9;
    memcpy(v63, __src, 0x48uLL);
    v22 = *(void (**)(uint64_t, uint64_t))(v51 + 152);
    v23 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C28F8E6C(v49, v48);
    swift_bridgeObjectRetain();
    v24 = v57;
    v25 = v52;
    v26 = v23;
    v22(v52, v23);
    v27 = v62;
    v28 = AssociatedTypeWitness;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v54, v24, AssociatedTypeWitness);
    v29 = (*(unsigned __int8 *)(v27 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v49 = (v12 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v48 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
    v30 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    v33 = (char *)swift_allocObject();
    *((_QWORD *)v33 + 2) = v25;
    *((_QWORD *)v33 + 3) = v26;
    v34 = v54;
    v35 = v55;
    *((_QWORD *)v33 + 4) = v60;
    *((_QWORD *)v33 + 5) = v35;
    *((_QWORD *)v33 + 6) = v61;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v33[v29], v34, v28);
    *(_QWORD *)&v33[v49] = v59;
    v36 = v53;
    *(_QWORD *)&v33[v48] = v53;
    *(_QWORD *)&v33[v30] = v58;
    v37 = v47;
    *(_QWORD *)&v33[v31] = v47;
    *(_QWORD *)&v33[v32] = v56;
    memcpy(&v33[(v32 + 15) & 0xFFFFFFFFFFFFFFF8], v63, 0x48uLL);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v39 = *(void (**)(uint64_t, id, id, void (*)(), char *, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                       + 72);
    v40 = v37;
    swift_unknownObjectRetain();
    sub_1C2CFD350();
    sub_1C2CFD350();
    v41 = v59;
    sub_1C2CFD350();
    v42 = v36;
    v43 = v58;
    v44 = v42;
    v45 = v57;
    v39(v41, v44, v43, sub_1C2B91790, v33, v28, AssociatedConformanceWitness);
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v28);
  }
}

void sub_1C2B8B5F8(void *a1, char a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, void *a10, uint64_t a11, const void *a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v18;
  uint64_t AssociatedConformanceWitness;
  void (*v20)(uint64_t, id, id, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  if ((a2 & 1) != 0)
  {
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C2D002E0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79C4B8);
    sub_1C2CFE7C0();
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v25 + 32) = 0;
    *(_QWORD *)(v25 + 40) = 0xE000000000000000;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    sub_1C2B85D30(a1, 1, a4);
  }
  else
  {
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a13;
    v18[3] = a14;
    v18[4] = a10;
    v18[5] = a11;
    v18[6] = a8;
    v18[7] = a9;
    v18[8] = a1;
    memcpy(v18 + 9, a12, 0x48uLL);
    v18[18] = a3;
    v18[19] = a7;
    v18[20] = a4;
    v18[21] = a5;
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v20 = *(void (**)(uint64_t, id, id, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness
                                                                                         + 80);
    sub_1C2B918C8(a1, 0);
    v21 = a10;
    swift_unknownObjectRetain();
    v22 = a8;
    v23 = a9;
    sub_1C290F6B8((uint64_t)a12);
    sub_1C2CFD350();
    sub_1C2CFD350();
    sub_1C2CFD350();
    v24 = swift_checkMetadataState();
    v20(a7, v22, v23, sub_1C2B91898, v18, v24, AssociatedConformanceWitness);
    swift_release();
  }
}

uint64_t sub_1C2B8B8B0(uint64_t a1, char a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7, const void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t AssociatedConformanceWitness;
  void (*v39)(id, void *, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  id v40;
  id v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t AssociatedTypeWitness;
  const void *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v52 = a8;
  v53 = a5;
  v55 = a6;
  v56 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v54 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v18);
  v20 = (char *)&v44 - v19;
  v21 = MEMORY[0x1E0DEE9D8];
  v62 = MEMORY[0x1E0DEE9D8];
  if (a3)
  {
    v22 = a3;
    MEMORY[0x1C3BC8A44]();
    if (*(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1C2CFDFEC();
    sub_1C2CFE040();
    sub_1C2CFDFC8();
  }
  v57 = a12;
  v50 = a10;
  v48 = a11;
  v49 = a9;
  if ((a2 & 1) != 0)
  {
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C2D002E0;
    v60 = 0;
    v61 = 0xE000000000000000;
    v58 = a1;
    v59 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF79C4C0);
    sub_1C2CFE7C0();
    v24 = v60;
    v25 = v61;
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v23 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v23 + 32) = v24;
    *(_QWORD *)(v23 + 40) = v25;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C2905204();
  }
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v21;
  v27 = v26;
  v46 = v26;
  (*(void (**)(uint64_t, uint64_t))(a14 + 192))(a13, a14);
  v45 = v62;
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = a13;
  v28[3] = a14;
  v28[4] = v56;
  v47 = v20;
  v29 = a4;
  v30 = (uint64_t)v52;
  memcpy(v28 + 5, v52, 0x48uLL);
  v31 = v53;
  v28[14] = v29;
  v28[15] = v31;
  v32 = v55;
  v33 = v49;
  v34 = v50;
  v28[16] = v55;
  v28[17] = v33;
  v35 = v45;
  v28[18] = v27;
  v28[19] = v35;
  v36 = v48;
  v28[20] = v34;
  v28[21] = v36;
  v28[22] = v57;
  v37 = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v39 = *(void (**)(id, void *, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  swift_bridgeObjectRetain();
  sub_1C290F6B8(v30);
  swift_unknownObjectRetain();
  v40 = v31;
  v41 = v32;
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  sub_1C2CFD350();
  v42 = v47;
  v39(v40, v32, sub_1C2B91980, v28, v37, AssociatedConformanceWitness);
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v37);
  return swift_release();
}

uint64_t sub_1C2B8BC40(uint64_t a1, unint64_t a2, __n128 *a3, uint64_t a4, void *a5, uint64_t a6, _QWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  _BOOL8 v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t (*v79)(uint64_t, uint64_t);
  _BOOL8 v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 *v96;
  _BOOL8 v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  void *v122;
  void *v123;
  __n128 *v124;
  id v125;
  id v126;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  void *v131;
  char *v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  void *v139;
  char *v140;
  uint64_t v141;
  __n128 *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __n128 *v149;
  uint64_t v150;
  char *v151;
  _QWORD *v152;
  uint64_t *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  _BYTE __dst[72];
  __int128 v159;
  __int128 v160;
  _QWORD v161[3];
  __n128 v162;
  __n128 v163;
  __n128 v164;
  __n128 v165;
  char v166;

  v154 = a7;
  v149 = a3;
  v129 = a1;
  v19 = a14;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v20, v21);
  v147 = (uint64_t)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AceOutput();
  v148 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23, v24);
  v27 = (char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v25, v28);
  v31 = (uint64_t *)((char *)&v128 - v30);
  v33 = MEMORY[0x1E0C80A78](v29, v32);
  v141 = (uint64_t)&v128 - v34;
  v36 = MEMORY[0x1E0C80A78](v33, v35);
  v140 = (char *)&v128 - v37;
  v39 = MEMORY[0x1E0C80A78](v36, v38);
  v152 = (uint64_t *)((char *)&v128 - v40);
  v42 = MEMORY[0x1E0C80A78](v39, v41);
  v151 = (char *)&v128 - v43;
  MEMORY[0x1E0C80A78](v42, v44);
  v46 = (char *)&v128 - v45;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v47 = sub_1C2CFE820();
    swift_bridgeObjectRelease();
  }
  else
  {
    v47 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v128 = a9;
  v155 = a13;
  v153 = (uint64_t *)(a8 + 16);
  v157 = a5;
  v156 = a4;
  v150 = a14;
  v131 = (void *)a6;
  v130 = v31;
  if ((v47 || *(_QWORD *)(v149[2].n128_u64[1] + 16) || *(_QWORD *)(v149[2].n128_u64[0] + 16))
    && ((*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(a14 + 128))(a5, a6, v155, a14) & 1) != 0)
  {
    v48 = v155;
    if (((*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(a14 + 136))(a5, a6, v155, a14) & 1) != 0)
    {
      v145 = *((_QWORD *)sub_1C2B879EC(a2) + 2);
      if (v145)
      {
        v143 = v154 + 8;
        v142 = v149 + 3;
        v49 = swift_bridgeObjectRetain();
        v50 = 0;
        v144 = v49;
        v132 = v27;
        do
        {
          v51 = *(_QWORD *)(v49 + 8 * v50 + 32);
          if (v50)
          {
            memcpy(__dst, v149, sizeof(__dst));
            v52 = v154[11];
            v53 = v154[12];
            v54 = v143;
            __swift_project_boxed_opaque_existential_1(v143, v52);
            v55 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 96);
            swift_bridgeObjectRetain();
            LOBYTE(v52) = v55(v52, v53);
            sub_1C299A4E4(v142, &v163);
            sub_1C299A4E4(&v163, &v164);
            v56 = v164.n128_u64[1] - 3 < 0xFFFFFFFFFFFFFFFELL;
            v57 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 320))(a5, v155, v19);
            v58 = type metadata accessor for NLContextUpdate();
            v59 = v147;
            __swift_storeEnumTagSinglePayload(v147, 1, 1, v58);
            v161[0] = 0;
            v159 = 0u;
            v160 = 0u;
            v60 = v52 & 1;
            v61 = (uint64_t)v151;
            static AceOutputHelper.makeSummaryViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)(__dst, v54, v60, v51, v56, v57 & 1, v59);
            swift_bridgeObjectRelease();
            sub_1C28B9D6C((uint64_t)&v159, (uint64_t *)&unk_1ED7A8750);
            sub_1C28B9D6C(v59, &qword_1ED7A7A10);
            sub_1C299A0F4(v61, (uint64_t)v152);
            v62 = v153;
            swift_beginAccess();
            v63 = *v62;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v62 = v63;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1C28FCAF8();
              v63 = v90;
              *v153 = v90;
            }
            v65 = *(_QWORD *)(v63 + 16);
            v27 = v132;
            if (v65 >= *(_QWORD *)(v63 + 24) >> 1)
            {
              sub_1C28FCAF8();
              v63 = v91;
              *v153 = v91;
            }
            a5 = v157;
            *(_QWORD *)(v63 + 16) = v65 + 1;
            sub_1C28E1168((uint64_t)v152, v63+ ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80))+ *(_QWORD *)(v148 + 72) * v65);
            swift_endAccess();
            v66 = &v166;
          }
          else
          {
            if (*(_QWORD *)(v49 + 16) <= 1uLL)
            {
              v73 = v149[3].n128_u64[1];
              v74 = v149[4].n128_i64[0];
              v68 = v149[3].n128_i64[0];
              v139 = (void *)v149[2].n128_u64[1];
              v72 = v149[1].n128_i64[1];
              v146 = v149[2].n128_u64[0];
              v69 = v149->n128_u64[1];
              v71 = v149[1].n128_i64[0];
              v75 = v149->n128_u64[0];
              sub_1C290F6B8((uint64_t)v149);
              v67 = v75;
              v70 = MEMORY[0x1E0DEE9D8];
            }
            else
            {
              v67 = 0;
              v68 = 0;
              v69 = 0xE000000000000000;
              v70 = MEMORY[0x1E0DEE9D8];
              v71 = MEMORY[0x1E0DEE9D8];
              v72 = MEMORY[0x1E0DEE9E0];
              v146 = MEMORY[0x1E0DEE9D8];
              v139 = (void *)MEMORY[0x1E0DEE9D8];
              v73 = 2;
              v74 = MEMORY[0x1E0DEE9D8];
            }
            v134 = v69;
            v135 = v74;
            v136 = v68;
            v138 = v73;
            *(_QWORD *)__dst = v67;
            *(_QWORD *)&__dst[8] = v69;
            v137 = v71;
            *(_QWORD *)&__dst[16] = v71;
            v133 = v72;
            *(_QWORD *)&__dst[24] = v72;
            *(_QWORD *)&__dst[32] = v146;
            *(_QWORD *)&__dst[40] = v139;
            *(_QWORD *)&__dst[48] = v68;
            *(_QWORD *)&__dst[56] = v73;
            *(_QWORD *)&__dst[64] = v74;
            v76 = v154[11];
            v77 = v154[12];
            v78 = v143;
            __swift_project_boxed_opaque_existential_1(v143, v76);
            v79 = *(uint64_t (**)(uint64_t, uint64_t))(v77 + 96);
            swift_bridgeObjectRetain();
            LOBYTE(v76) = v79(v76, v77);
            sub_1C299A4E4(v142, &v162);
            sub_1C299A4E4(&v162, &v165);
            v80 = v165.n128_u64[1] - 3 < 0xFFFFFFFFFFFFFFFELL;
            v81 = (*(uint64_t (**)(void *, uint64_t))(v150 + 320))(v157, v155);
            v82 = type metadata accessor for NLContextUpdate();
            v83 = v147;
            __swift_storeEnumTagSinglePayload(v147, 1, 1, v82);
            v161[0] = 0;
            v159 = 0u;
            v160 = 0u;
            v84 = v81 & 1;
            v85 = (uint64_t)v140;
            static AceOutputHelper.makeConfirmedViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)(__dst, v78, v76 & 1, v51, v80, v84, v83, v70, &v159);
            swift_bridgeObjectRelease();
            sub_1C28B9D6C((uint64_t)&v159, (uint64_t *)&unk_1ED7A8750);
            sub_1C28B9D6C(v83, &qword_1ED7A7A10);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C28F90E8(v136, v138);
            swift_bridgeObjectRelease();
            sub_1C299A0F4(v85, v141);
            v86 = v153;
            swift_beginAccess();
            v87 = *v86;
            v88 = swift_isUniquelyReferenced_nonNull_native();
            *v86 = v87;
            if ((v88 & 1) == 0)
            {
              sub_1C28FCAF8();
              v87 = v92;
              *v153 = v92;
            }
            v89 = *(_QWORD *)(v87 + 16);
            a5 = v157;
            v19 = v150;
            if (v89 >= *(_QWORD *)(v87 + 24) >> 1)
            {
              sub_1C28FCAF8();
              v87 = v93;
              *v153 = v93;
            }
            *(_QWORD *)(v87 + 16) = v89 + 1;
            sub_1C28E1168(v141, v87+ ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80))+ *(_QWORD *)(v148 + 72) * v89);
            swift_endAccess();
            v66 = (char *)v161;
          }
          ++v50;
          sub_1C28E0610(*((_QWORD *)v66 - 32));
          v49 = v144;
        }
        while (v145 != v50);
        swift_bridgeObjectRelease_n();
        v31 = v130;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v152 = v154 + 8;
      v94 = v154[11];
      v95 = v154[12];
      __swift_project_boxed_opaque_existential_1(v154 + 8, v94);
      LODWORD(v151) = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 96))(v94, v95);
      v96 = v149;
      sub_1C299A4E4(v149 + 3, &v164);
      sub_1C299A4E4(&v164, &v165);
      v97 = v165.n128_u64[1] - 3 < 0xFFFFFFFFFFFFFFFELL;
      v98 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v150 + 320))(a5, v48, v150);
      v99 = type metadata accessor for NLContextUpdate();
      v100 = v147;
      __swift_storeEnumTagSinglePayload(v147, 1, 1, v99);
      v161[0] = 0;
      v159 = 0u;
      v160 = 0u;
      memcpy(__dst, v96, sizeof(__dst));
      v19 = v150;
      static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)((uint64_t)__dst, (uint64_t)v152, v151 & 1, a2, v97, v98 & 1, v100, MEMORY[0x1E0DEE9D8], (uint64_t)&v159, 0, v128, v129, (uint64_t)v130, (uint64_t)v131, (uint64_t)v132, v133, v134, v135, v136,
        v137,
        v138,
        v139);
      sub_1C28B9D6C((uint64_t)&v159, (uint64_t *)&unk_1ED7A8750);
      sub_1C28B9D6C(v100, &qword_1ED7A7A10);
      v101 = v153;
      swift_beginAccess();
      sub_1C2A70C70();
      v102 = *(_QWORD *)(*v101 + 16);
      sub_1C2942A54(v102);
      v103 = *v101;
      *(_QWORD *)(v103 + 16) = v102 + 1;
      sub_1C299A0F4((uint64_t)v46, v103+ ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80))+ *(_QWORD *)(v148 + 72) * v102);
      swift_endAccess();
      sub_1C28E0610((uint64_t)v46);
    }
  }
  v104 = MEMORY[0x1E0DEE9D8];
  v161[2] = MEMORY[0x1E0DEE9D8];
  v105 = v153;
  swift_beginAccess();
  v106 = *v105;
  *(_QWORD *)__dst = v104;
  v107 = *(_QWORD *)(v106 + 16);
  if (v107)
  {
    v108 = v106 + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80));
    v109 = *(_QWORD *)(v148 + 72);
    swift_bridgeObjectRetain_n();
    do
    {
      sub_1C299A0F4(v108, (uint64_t)v27);
      swift_bridgeObjectRetain();
      sub_1C28E0610((uint64_t)v27);
      sub_1C2905204();
      v108 += v109;
      --v107;
    }
    while (v107);
    swift_bridgeObjectRelease_n();
    v19 = v150;
  }
  sub_1C2905204();
  swift_bridgeObjectRetain();
  sub_1C2905204();
  __dst[0] = 7;
  v110 = a5;
  v111 = v155;
  v112 = (*(uint64_t (**)(_BYTE *, void *, void *, uint64_t, uint64_t))(v19 + 304))(__dst, v110, v131, v155, v19);
  if (v112)
  {
    v113 = v112;
    *(_QWORD *)&__dst[24] = type metadata accessor for DefaultFlowActivity();
    sub_1C28C3328((unint64_t *)&qword_1EF79C4A0, (uint64_t (*)(uint64_t))type metadata accessor for DefaultFlowActivity, (uint64_t)&protocol conformance descriptor for DefaultFlowActivity);
    *(_QWORD *)&__dst[32] = v114;
    *(_QWORD *)__dst = v113;
  }
  else
  {
    memset(__dst, 0, 40);
  }
  static AceOutputHelper.makeAceOutput(allAddViews:nlContextUpdate:additionalCommands:flowActivity:)(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
  sub_1C28B9D6C((uint64_t)__dst, (uint64_t *)&unk_1ED7A8750);
  if (qword_1ED7AA038 != -1)
    swift_once();
  v153 = a11;
  sub_1C2CFE2A4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v115 = swift_allocObject();
  *(_OWORD *)(v115 + 16) = xmmword_1C2D002E0;
  if (*v31 >> 62)
  {
    swift_bridgeObjectRetain();
    v116 = sub_1C2CFE820();
    swift_bridgeObjectRelease();
  }
  else
  {
    v116 = *(_QWORD *)((*v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v117 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v115 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v115 + 64) = v117;
  *(_QWORD *)(v115 + 32) = v116;
  sub_1C2CFD7AC();
  swift_bridgeObjectRelease();
  v118 = sub_1C2B0C6E8();
  *(_QWORD *)&__dst[32] = &off_1E7C8D920;
  *(_QWORD *)&__dst[24] = &type metadata for OutputPublishers;
  *(_QWORD *)__dst = v118;
  type metadata accessor for LegacySiriKitOutputPublisher();
  v119 = swift_allocObject();
  sub_1C28B99EC((__int128 *)__dst, v119 + 16);
  sub_1C299A0F4((uint64_t)v31, (uint64_t)v27);
  v120 = (_QWORD *)swift_allocObject();
  v121 = v150;
  v120[2] = v111;
  v120[3] = v121;
  v120[4] = v154;
  v120[5] = a10;
  v122 = v157;
  v120[6] = v156;
  v120[7] = v122;
  v123 = v131;
  v120[8] = v131;
  v124 = v149;
  memcpy(v120 + 9, v149, 0x48uLL);
  v120[18] = v153;
  v120[19] = a12;
  sub_1C290F6B8((uint64_t)v124);
  sub_1C2CFD350();
  sub_1C2CFD350();
  swift_unknownObjectRetain();
  v125 = v122;
  v126 = v123;
  sub_1C2CFD350();
  sub_1C2BED8D0((uint64_t)v27, (uint64_t)sub_1C2B91A18, (uint64_t)v120, v119);
  swift_release();
  sub_1C28E0610((uint64_t)v130);
  sub_1C28E0610((uint64_t)v27);
  return swift_release();
}

void sub_1C2B8CB04(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, void (*a9)(void *, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20[11];

  if ((a2 & 1) != 0)
  {
    v13 = a1;
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C2D002E0;
    swift_getErrorValue();
    v15 = sub_1C2CFEA78();
    v17 = v16;
    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v14 + 32) = v15;
    *(_QWORD *)(v14 + 40) = v17;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    v18 = a1;
    a9(a1, 1);
    sub_1C2987570(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    HIWORD(v20[0]) = 1839;
    LOWORD(v20[0]) = 0;
    sub_1C2C1FDAC(a3 + 104, (uint64_t)v20 + 7, a4, a5, a6, (uint64_t)v20 + 6, 0, 1, a7, (uint64_t)&v19, *a8, a8[1], a11, a12, 2, v20[0], v20[1], v20[2], v20[3],
      v20[4],
      v20[5],
      v20[6],
      v20[7],
      v20[8],
      v20[9],
      v20[10]);
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2A4();
    sub_1C2CFD7AC();
    a9(0, 0);
  }
}

void sub_1C2B8CD18(unint64_t a1, char a2, void (*a3)(unint64_t, uint64_t), uint64_t a4, uint64_t a5, const void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  __int128 v38;
  void (*v39)(id);
  id v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  const void *v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t AssociatedConformanceWitness;
  void (*v52)(uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v53;
  id v54;
  _QWORD v55[2];
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  const void *v62;
  void (*v63)(unint64_t, uint64_t);
  uint64_t v64;
  unint64_t v65;
  __int128 __dst[5];

  v59 = a7;
  v60 = a8;
  v61 = a5;
  v62 = a6;
  v63 = a3;
  v64 = a4;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16, v19);
  v20 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v58 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v22);
  v24 = (char *)v55 - v23;
  v25 = type metadata accessor for AceOutput();
  v27 = MEMORY[0x1E0C80A78](v25, v26);
  v29 = (char *)v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27, v30);
  v32 = (char *)v55 - v31;
  if ((a2 & 1) != 0)
  {
    v36 = (id)a1;
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)&__dst[0] = 0;
    *((_QWORD *)&__dst[0] + 1) = 0xE000000000000000;
    v65 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    sub_1C2CFE7C0();
    v38 = __dst[0];
    *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v37 + 64) = sub_1C28BFD30();
    *(_OWORD *)(v37 + 32) = v38;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    v39 = (void (*)(id))MEMORY[0x1E0DEEB08];
    v40 = (id)a1;
    v63(a1, 1);
    sub_1C2B9161C((id)a1, 1, v39);
    sub_1C2B9161C((id)a1, 1, v39);
  }
  else
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v41 = sub_1C2CFE820();
      sub_1C2B9161C((id)a1, 0, (void (*)(id))MEMORY[0x1E0DEEB08]);
      if (v41)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      memcpy(__dst, v62, 0x48uLL);
      sub_1C2B88284((uint64_t)__dst);
      v33 = sub_1C2B0C6E8();
      *((_QWORD *)&__dst[1] + 1) = &type metadata for OutputPublishers;
      *(_QWORD *)&__dst[2] = &off_1E7C8D920;
      *(_QWORD *)&__dst[0] = v33;
      type metadata accessor for LegacySiriKitOutputPublisher();
      v34 = swift_allocObject();
      sub_1C28B99EC(__dst, v34 + 16);
      sub_1C299A0F4((uint64_t)v32, (uint64_t)v29);
      v35 = swift_allocObject();
      *(_QWORD *)(v35 + 16) = v63;
      *(_QWORD *)(v35 + 24) = v64;
      sub_1C2CFD350();
      sub_1C2BED8D0((uint64_t)v29, (uint64_t)sub_1C2B92138, v35, v34);
      swift_release();
      sub_1C28E0610((uint64_t)v32);
      sub_1C28E0610((uint64_t)v29);
      swift_release();
      return;
    }
    v59 = a11;
    v55[0] = a10;
    v42 = *(void (**)(uint64_t, uint64_t))(a14 + 176);
    v55[1] = a9;
    v56 = a12;
    v42(a13, a14);
    sub_1C28D3304(v60, (uint64_t)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ED7A7A10);
    v43 = (*(unsigned __int8 *)(v17 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v44 = (_QWORD *)swift_allocObject();
    v44[2] = a13;
    v44[3] = a14;
    v45 = v64;
    v44[4] = v63;
    v44[5] = v45;
    v46 = v62;
    v44[6] = v61;
    v44[7] = a9;
    v47 = v55[0];
    v48 = v59;
    v44[8] = v55[0];
    v44[9] = v48;
    v49 = v56;
    v44[10] = v56;
    memcpy(v44 + 11, v46, 0x48uLL);
    sub_1C2921AEC((uint64_t)v20, (uint64_t)v44 + v43, &qword_1ED7A7A10);
    v50 = v58;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v52 = *(void (**)(uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 248);
    v53 = v49;
    sub_1C2CFD350();
    sub_1C2CFD350();
    swift_unknownObjectRetain();
    sub_1C2CFD350();
    v54 = v59;
    sub_1C290F6B8((uint64_t)v62);
    v52(v47, sub_1C2B91468, v44, v50, AssociatedConformanceWitness);
    swift_release();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v24, v50);
  }
}

void sub_1C2B8D1F8(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, const void *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;

  v49 = a7;
  v50 = a8;
  v47 = a5;
  v48 = a6;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16, v19);
  v20 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(void **)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v24 = *(_QWORD *)(a1 + 16);
  v23 = *(_QWORD *)(a1 + 24);
  v26 = *(_QWORD *)(a1 + 32);
  v25 = *(_QWORD *)(a1 + 40);
  v28 = *(_QWORD *)(a1 + 48);
  v27 = *(_QWORD *)(a1 + 56);
  v29 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v44 = *(_QWORD *)(a1 + 16);
    v45 = v23;
    v46 = v26;
    v47 = v25;
    v48 = v28;
    v49 = v27;
    v50 = a3;
    v30 = v22;
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C2D002E0;
    v52 = 0;
    v53 = 0xE000000000000000;
    v51 = (uint64_t)v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    sub_1C2CFE7C0();
    v32 = v52;
    v33 = v53;
    *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v31 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v31 + 32) = v32;
    *(_QWORD *)(v31 + 40) = v33;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    v34 = v22;
    a2(v22, 1);
    v36 = v44;
    v35 = v45;
    v38 = v46;
    v37 = v47;
    v40 = v48;
    v39 = v49;
    sub_1C290D288(v22, v21, v44, v45, v46, v47, v48, v49, v29, 1);
    sub_1C290D288(v22, v21, v36, v35, v38, v37, v40, v39, v29, 1);
  }
  else
  {
    v45 = a12;
    v46 = a11;
    v52 = (uint64_t)v22;
    v53 = v21;
    v54 = v24;
    v55 = v23;
    v56 = v26;
    v57 = v25;
    v58 = v28;
    v59 = v27;
    v60 = v29;
    sub_1C28D3304(a10, (uint64_t)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ED7A7A10);
    v41 = (*(unsigned __int8 *)(v17 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v42 = (_QWORD *)swift_allocObject();
    v42[2] = a2;
    v42[3] = a3;
    memcpy(v42 + 4, a9, 0x48uLL);
    v42[13] = a4;
    sub_1C2921AEC((uint64_t)v20, (uint64_t)v42 + v41, &qword_1ED7A7A10);
    sub_1C2CFD350();
    sub_1C290F6B8((uint64_t)a9);
    sub_1C2CFD350();
    sub_1C2B87D40(v47, v48, v49, v50, (uint64_t)&v52, (uint64_t)sub_1C2B915C0, (uint64_t)v42, v46, v45, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52,
      v53,
      v54);
    swift_release();
  }
}

void sub_1C2B8D50C(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  void (*v13)(id);

  v6 = type metadata accessor for AceOutput();
  v8 = MEMORY[0x1E0C80A78](v6, v7);
  MEMORY[0x1E0C80A78](v8, v9);
  if ((a2 & 1) == 0)
  {
    sub_1C2CFD350();
    sub_1C290E0E0();
  }
  v10 = a1;
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2B0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C2D002E0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  sub_1C2CFE7C0();
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 64) = sub_1C28BFD30();
  *(_QWORD *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 40) = 0xE000000000000000;
  sub_1C2CFD7AC();
  swift_bridgeObjectRelease();
  v12 = a1;
  a3(a1, 1);
  v13 = (void (*)(id))MEMORY[0x1E0DEEE30];
  sub_1C2B9161C(a1, 1, (void (*)(id))MEMORY[0x1E0DEEE30]);
  sub_1C2B9161C(a1, 1, v13);
}

void sub_1C2B8D834(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, void (*a9)(void *, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[9];

  if ((a2 & 1) != 0)
  {
    v18 = a1;
    a9(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    sub_1C28B9A48(a3 + 104, (uint64_t)v22);
    HIWORD(v21) = 1551;
    LOWORD(v21) = 0;
    sub_1C2C1FDAC((uint64_t)v22, (uint64_t)&v21 + 7, a4, a5, a6, (uint64_t)&v21 + 6, 0, 1, a7, (uint64_t)&v20, *a8, a8[1], a11, a12, v19, 3, v21, v22[0], v22[1],
      v22[2],
      v22[3],
      v22[4],
      v22[5],
      v22[6],
      v22[7],
      v22[8]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    a9(0, 0);
  }
}

void sub_1C2B8D944(void *a1, char a2, _QWORD *a3, void *a4, uint64_t a5, uint64_t *a6, void (*a7)(void *, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  _QWORD *v23;
  void (*v24)(void *, uint64_t);

  v14 = type metadata accessor for SiriKitEventPayload(0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v22 = a1;
    a7(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    v24 = a7;
    v18 = *a6;
    v19 = a6[1];
    v20 = a3[17];
    v23 = __swift_project_boxed_opaque_existential_1(a3 + 13, a3[16]);
    type metadata accessor for SiriKitEvent(0);
    *v17 = 6;
    *((_QWORD *)v17 + 1) = a4;
    *((_QWORD *)v17 + 2) = a5;
    *((_QWORD *)v17 + 3) = 3;
    *((_WORD *)v17 + 16) = 0;
    *((_QWORD *)v17 + 5) = 0;
    *((_QWORD *)v17 + 6) = 0;
    *((_QWORD *)v17 + 7) = v18;
    *((_QWORD *)v17 + 8) = v19;
    *((_QWORD *)v17 + 9) = 0xD000000000000012;
    *((_QWORD *)v17 + 10) = 0x80000001C2D26C40;
    v17[88] = 44;
    swift_storeEnumTagMultiPayload();
    v21 = a4;
    sub_1C2CFD350();
    swift_bridgeObjectRetain();
    SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v17, 0);
    (*(void (**)(void))(v20 + 8))();
    swift_release();
    v24(0, 0);
  }
}

void sub_1C2B8DAF4(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t AssociatedConformanceWitness;
  void (*v29)(uint64_t, id, uint64_t, uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t);
  id v30;
  id v31;
  uint64_t v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v42;
  _QWORD v44[10];

  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v42 = *(_QWORD *)(a1 + 56);
    v21 = *(_QWORD *)(a1 + 64);
    v22 = v12;
    a2(v12, 1);
    sub_1C290D288(v12, v13, v15, v14, v16, v17, v18, v42, v21, 1);
  }
  else
  {
    v35 = *(_QWORD *)(a4 + 16);
    v36 = *(_QWORD *)(a1 + 40);
    v44[0] = *(_QWORD *)a1;
    v44[1] = v13;
    v44[2] = v15;
    v44[3] = v14;
    v44[4] = v16;
    v44[5] = v17;
    v44[6] = v18;
    v44[7] = v19;
    v44[8] = v20;
    v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a12 + 320);
    v38 = v13;
    v34 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C28F8E6C(v18, v19);
    swift_bridgeObjectRetain();
    v24 = a5;
    v25 = v33(a6, a11, a12);
    v26 = (*(uint64_t (**)(_QWORD *, BOOL, _QWORD))(*(_QWORD *)v35 + 96))(v44, v19 - 3 < 0xFFFFFFFFFFFFFFFELL, v25 & 1);
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = a11;
    v27[3] = a12;
    v27[4] = a2;
    v27[5] = a3;
    v27[6] = a4;
    v27[7] = v12;
    v27[8] = v38;
    v27[9] = v15;
    v27[10] = v14;
    v27[11] = v16;
    v27[12] = v36;
    v27[13] = v18;
    v27[14] = v19;
    v27[15] = v34;
    v27[16] = v26;
    v27[17] = v24;
    v27[18] = a6;
    v27[19] = a10;
    v27[20] = a8;
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v29 = *(void (**)(uint64_t, id, uint64_t, uint64_t, void (*)(), _QWORD *, uint64_t, uint64_t))(AssociatedConformanceWitness + 104);
    sub_1C2CFD350();
    sub_1C2CFD350();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v30 = a6;
    v31 = a10;
    sub_1C2CFD350();
    v32 = swift_checkMetadataState();
    v29(a8, v30, a9, v26, sub_1C2B910A0, v27, v32, AssociatedConformanceWitness);
    swift_bridgeObjectRelease();
    swift_release();
  }
}

void sub_1C2B8DDE4(void *a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4, uint64_t a5, __n128 *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(id);
  id v46;
  _QWORD v47[2];
  __n128 *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(void *, uint64_t);
  uint64_t v56;
  _BYTE __dst[72];
  __n128 v58;
  __n128 v59;

  v53 = a5;
  v54 = a4;
  v55 = a3;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v17, v18);
  v20 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AceOutput();
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  v25 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23, v26);
  v28 = (char *)v47 - v27;
  if ((a2 & 1) != 0)
  {
    v41 = a1;
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C2D002E0;
    *(_QWORD *)__dst = 0;
    *(_QWORD *)&__dst[8] = 0xE000000000000000;
    v59.n128_u64[0] = (unint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
    sub_1C2CFE7C0();
    v43 = *(_QWORD *)__dst;
    v44 = *(_QWORD *)&__dst[8];
    *(_QWORD *)(v42 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v42 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v42 + 32) = v43;
    *(_QWORD *)(v42 + 40) = v44;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    v45 = (void (*)(id))MEMORY[0x1E0DEEB08];
    v46 = a1;
    v55(a1, 1);
    sub_1C2B9161C(a1, 1, v45);
    sub_1C2B9161C(a1, 1, v45);
  }
  else
  {
    v49 = a12;
    v52 = a11;
    v47[1] = a7;
    v51 = a9;
    memcpy(__dst, a6, sizeof(__dst));
    v50 = a13;
    (*(void (**)(void *, uint64_t, uint64_t))(v50 + 320))(a9, a12, v50);
    sub_1C299A4E4(a6 + 3, &v58);
    sub_1C299A4E4(&v58, &v59);
    v29 = v53;
    v48 = a6;
    v30 = type metadata accessor for NLContextUpdate();
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v30);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C2D00370;
    *(_QWORD *)(inited + 32) = a10;
    v56 = inited;
    sub_1C2CFDFC8();
    v32 = a10;
    sub_1C2B88284((uint64_t)__dst);
    swift_bridgeObjectRelease();
    sub_1C28B9D6C((uint64_t)v20, &qword_1ED7A7A10);
    v33 = sub_1C2B0C6E8();
    *(_QWORD *)&__dst[24] = &type metadata for OutputPublishers;
    *(_QWORD *)&__dst[32] = &off_1E7C8D920;
    *(_QWORD *)__dst = v33;
    type metadata accessor for LegacySiriKitOutputPublisher();
    v34 = swift_allocObject();
    sub_1C28B99EC((__int128 *)__dst, v34 + 16);
    sub_1C299A0F4((uint64_t)v28, (uint64_t)v25);
    v35 = (_QWORD *)swift_allocObject();
    v36 = v50;
    v35[2] = v49;
    v35[3] = v36;
    v37 = v51;
    v35[4] = v29;
    v35[5] = v37;
    v35[6] = v52;
    v38 = (uint64_t)v48;
    memcpy(v35 + 7, v48, 0x48uLL);
    v39 = v54;
    v35[16] = v55;
    v35[17] = v39;
    sub_1C2CFD350();
    v40 = v37;
    sub_1C2CFD350();
    sub_1C290F6B8(v38);
    sub_1C2CFD350();
    sub_1C2BED8D0((uint64_t)v25, (uint64_t)sub_1C2B910E0, (uint64_t)v35, v34);
    swift_release();
    sub_1C28E0610((uint64_t)v28);
    sub_1C28E0610((uint64_t)v25);
    swift_release();
  }
}

void sub_1C2B8E23C(void *a1, char a2, _QWORD *a3, void *a4, uint64_t a5, uint64_t *a6, void (*a7)(void *, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  _QWORD *v23;
  void (*v24)(void *, uint64_t);

  v14 = type metadata accessor for SiriKitEventPayload(0);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v22 = a1;
    a7(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    v24 = a7;
    v18 = *a6;
    v19 = a6[1];
    v20 = a3[17];
    v23 = __swift_project_boxed_opaque_existential_1(a3 + 13, a3[16]);
    type metadata accessor for SiriKitEvent(0);
    *v17 = 32;
    *((_QWORD *)v17 + 1) = a4;
    *((_QWORD *)v17 + 2) = a5;
    *((_QWORD *)v17 + 3) = 3;
    *((_WORD *)v17 + 16) = 0;
    *((_QWORD *)v17 + 5) = 0;
    *((_QWORD *)v17 + 6) = 0;
    *((_QWORD *)v17 + 7) = v18;
    *((_QWORD *)v17 + 8) = v19;
    *((_QWORD *)v17 + 9) = 0;
    *((_QWORD *)v17 + 10) = 0;
    v17[88] = 78;
    swift_storeEnumTagMultiPayload();
    v21 = a4;
    sub_1C2CFD350();
    swift_bridgeObjectRetain();
    SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v17, 0);
    (*(void (**)(void))(v20 + 8))();
    swift_release();
    v24(0, 0);
  }
}

void sub_1C2B8E3D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, char a10, char a11, uint64_t a12, uint64_t a13)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  int v21;
  uint64_t v22;
  __int16 v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t AssociatedConformanceWitness;
  void (*v31)(uint64_t, void (*)(), uint64_t, uint64_t, uint64_t);
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];

  v40 = a6;
  v41 = (void *)a7;
  v44 = a4;
  v45 = a5;
  v42 = a3;
  v43 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v16);
  v19 = (char *)&v38 - v18;
  v20 = *(void **)a1;
  v21 = *(unsigned __int8 *)(a1 + 8);
  if (v21 == 1)
  {
    v39 = v17;
    sub_1C294B204(v20, 1u);
    sub_1C294B204(v20, 1u);
    if (objc_msgSend(v20, sel_errorCode) == (id)1305)
    {
      if (qword_1ED7AA038 != -1)
        swift_once();
      sub_1C2CFE2A4();
      sub_1C2CFD7AC();
      v25 = v43;
      (*(void (**)(uint64_t, uint64_t))(a13 + 176))(a12, a13);
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = a12;
      *(_QWORD *)(v26 + 24) = a13;
      v27 = v45;
      *(_QWORD *)(v26 + 32) = v44;
      *(_QWORD *)(v26 + 40) = v27;
      *(_QWORD *)(v26 + 48) = v20;
      *(_BYTE *)(v26 + 56) = 1;
      *(_QWORD *)(v26 + 64) = v40;
      *(_QWORD *)(v26 + 72) = v25;
      v28 = v41;
      v29 = v42;
      *(_QWORD *)(v26 + 80) = v41;
      *(_QWORD *)(v26 + 88) = v29;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v31 = *(void (**)(uint64_t, void (*)(), uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 112);
      sub_1C2B91164(v20, 1u);
      sub_1C2CFD350();
      sub_1C2CFD350();
      swift_unknownObjectRetain();
      v32 = v28;
      v33 = sub_1C2CFD350();
      v31(v33, sub_1C2B91130, v26, AssociatedTypeWitness, AssociatedConformanceWitness);
      swift_release();
      sub_1C299A308(v20, 1u);
      sub_1C299A308(v20, 1u);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v19, AssociatedTypeWitness);
    }
    else
    {
      sub_1C293814C();
      v36 = (void *)swift_allocError();
      *(_QWORD *)v37 = v20;
      *(_BYTE *)(v37 + 8) = 1;
      sub_1C294B204(v20, 1u);
      v44(v36, 1);

      sub_1C299A308(v20, 1u);
      sub_1C299A308(v20, 1u);
    }
  }
  else if (v21 == 255)
  {
    v22 = v40 + 104;
    HIWORD(v47[0]) = 1870;
    if ((a11 & 1) != 0)
      v23 = 256;
    else
      v23 = 0;
    v46 = (uint64_t)a9;
    LOWORD(v47[0]) = v23 & 0xFFFE | a10 & 1;
    v24 = a9;
    sub_1C2C1FDAC(v22, (uint64_t)v47 + 7, v42, v43, (uint64_t)v41, (uint64_t)v47 + 6, 0, 1, a8, (uint64_t)&v46, 0, 0, a12, a13, v38, v39, v40, (uint64_t)v41, v42,
      v43,
      (uint64_t)v44,
      v45,
      v46,
      v47[0],
      v47[1],
      v47[2]);

    v44(0, 0);
  }
  else
  {
    sub_1C293814C();
    v34 = (void *)swift_allocError();
    *(_QWORD *)v35 = v20;
    *(_BYTE *)(v35 + 8) = v21;
    sub_1C294B204(v20, v21);
    sub_1C294B204(v20, v21);
    v44(v34, 1);

    sub_1C299A308(v20, v21);
  }
}

void sub_1C2B8E7A4(uint64_t *a1, void (*a2)(void *, uint64_t), uint64_t a3, void *a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void *, uint64_t);
  void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _UNKNOWN **v35;
  ValueMetadata *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  void (*v56)(void *, uint64_t, uint64_t);
  uint64_t v57;
  int v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  ValueMetadata *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(void *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  _OWORD v75[2];
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  ValueMetadata *v79;
  _UNKNOWN **v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;

  v71 = a11;
  v72 = a10;
  v73 = a8;
  v74 = a9;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v18, v19);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for AceOutput();
  MEMORY[0x1E0C80A78](v22, v23);
  v26 = MEMORY[0x1E0C80A78]((char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v25);
  if (*((_BYTE *)a1 + 72) == 1)
  {
    v28 = a2;
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2A4();
    sub_1C2CFD7AC();
    sub_1C293814C();
    v29 = (void *)swift_allocError();
    *(_QWORD *)v30 = a4;
    *(_BYTE *)(v30 + 8) = a5;
    sub_1C294B204(a4, a5);
    v28(v29, 1);

  }
  else
  {
    v60 = (char *)&v55 - v27;
    v31 = a1[7];
    v32 = a1[8];
    v34 = a1[5];
    v33 = a1[6];
    v69 = a3;
    v70 = a2;
    v36 = (ValueMetadata *)a1[3];
    v35 = (_UNKNOWN **)a1[4];
    v38 = a1[1];
    v37 = a1[2];
    v68 = *a1;
    *(_QWORD *)&v77 = v68;
    *((_QWORD *)&v77 + 1) = v38;
    v67 = v38;
    v78 = v37;
    v79 = v36;
    v57 = a7;
    v65 = v37;
    v64 = v36;
    v80 = v35;
    v81 = v34;
    v82 = v33;
    v83 = v31;
    v39 = v33;
    v40 = v31;
    v63 = v31;
    v84 = v32;
    v62 = v32;
    v66 = a6;
    v59 = a6 + 64;
    v58 = *(unsigned __int8 *)(*(_QWORD *)(a6 + 16) + 16);
    v41 = v71;
    v56 = *(void (**)(void *, uint64_t, uint64_t))(v71 + 320);
    v61 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C28F8E6C(v39, v40);
    swift_bridgeObjectRetain();
    v42 = v72;
    v43 = v73;
    v56(v73, v72, v41);
    v44 = type metadata accessor for NLContextUpdate();
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v44);
    v76 = 0;
    memset(v75, 0, sizeof(v75));
    v45 = (uint64_t)v60;
    static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
    sub_1C28B9D6C((uint64_t)v75, (uint64_t *)&unk_1ED7A8750);
    sub_1C28B9D6C((uint64_t)v21, &qword_1ED7A7A10);
    v46 = sub_1C2B0C6E8();
    v79 = &type metadata for OutputPublishers;
    v80 = &off_1E7C8D920;
    *(_QWORD *)&v77 = v46;
    type metadata accessor for LegacySiriKitOutputPublisher();
    v47 = swift_allocObject();
    sub_1C28B99EC(&v77, v47 + 16);
    v48 = v61;
    sub_1C299A0F4(v45, v61);
    v49 = (_QWORD *)swift_allocObject();
    v49[2] = v42;
    v49[3] = v41;
    v49[4] = v66;
    v49[5] = v43;
    v50 = v68;
    v49[6] = v74;
    v49[7] = v50;
    v51 = v65;
    v49[8] = v67;
    v49[9] = v51;
    v49[10] = v64;
    v49[11] = v35;
    v49[12] = v34;
    v49[13] = v39;
    v52 = v62;
    v49[14] = v63;
    v49[15] = v52;
    v53 = v69;
    v49[16] = v70;
    v49[17] = v53;
    sub_1C2CFD350();
    v54 = v43;
    sub_1C2CFD350();
    sub_1C2CFD350();
    sub_1C2BED8D0(v48, (uint64_t)sub_1C2B9117C, (uint64_t)v49, v47);
    swift_release();
    sub_1C28E0610(v45);
    sub_1C28E0610(v48);
    swift_release();
  }
}

void sub_1C2B8EC3C(void *a1, char a2, _QWORD *a3, void *a4, uint64_t a5, uint64_t *a6, void (*a7)(void *, uint64_t), uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  _QWORD v28[3];
  void (*v29)(void *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v30 = a8;
  v15 = type metadata accessor for SiriKitEventPayload(0);
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v27 = a1;
    a7(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    v32 = 0;
    v33 = 0xE000000000000000;
    sub_1C2CFE670();
    sub_1C2CFDE54();
    v31 = 1305;
    sub_1C2CFE988();
    sub_1C2CFDE54();
    swift_bridgeObjectRelease();
    v29 = a7;
    v19 = v32;
    v20 = v33;
    v21 = a3 + 13;
    v23 = *a6;
    v22 = a6[1];
    v24 = a3[16];
    v25 = a3[17];
    v28[2] = __swift_project_boxed_opaque_existential_1(v21, v24);
    v28[1] = type metadata accessor for SiriKitEvent(0);
    *v18 = 6;
    *((_QWORD *)v18 + 1) = a4;
    *((_QWORD *)v18 + 2) = a5;
    *((_QWORD *)v18 + 3) = 3;
    *((_WORD *)v18 + 16) = 0;
    *((_QWORD *)v18 + 5) = 0;
    *((_QWORD *)v18 + 6) = 0;
    *((_QWORD *)v18 + 7) = v23;
    *((_QWORD *)v18 + 8) = v22;
    *((_QWORD *)v18 + 9) = v19;
    *((_QWORD *)v18 + 10) = v20;
    v18[88] = 78;
    swift_storeEnumTagMultiPayload();
    v26 = a4;
    sub_1C2CFD350();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v18, 0);
    (*(void (**)(void))(v25 + 8))();
    swift_bridgeObjectRelease();
    swift_release();
    v29(0, 0);
  }
}

void sub_1C2B8EE50(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9, char a10, void (*a11)(void *, uint64_t), uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  __int16 v19;
  id v20;
  id v22;
  uint64_t v23;
  uint64_t v24[11];

  if ((a2 & 1) != 0)
  {
    v22 = a1;
    a11(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    v18 = a3 + 104;
    HIWORD(v24[0]) = 1870;
    if ((a10 & 1) != 0)
      v19 = 256;
    else
      v19 = 0;
    v23 = (uint64_t)a8;
    LOWORD(v24[0]) = v19 & 0xFFFE | a9 & 1;
    v20 = a8;
    sub_1C2C1FDAC(v18, (uint64_t)v24 + 7, a4, a5, a6, (uint64_t)v24 + 6, 0, 1, a7, (uint64_t)&v23, 0, 0, a13, a14, v23, v24[0], v24[1], v24[2], v24[3],
      v24[4],
      v24[5],
      v24[6],
      v24[7],
      v24[8],
      v24[9],
      v24[10]);

    a11(0, 0);
  }
}

void sub_1C2B8EF68(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void *, uint64_t);
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char v54;
  char v55[9];

  v36 = a7;
  v37 = a8;
  v43 = a3;
  v44 = a2;
  v41 = a10;
  v42 = a11;
  v34 = a9;
  v35 = a6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v14, v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void **)a1;
  v18 = *(_QWORD *)(a1 + 8);
  v21 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v22 = *(_QWORD *)(a1 + 32);
  v23 = *(_QWORD *)(a1 + 48);
  v38 = *(_QWORD *)(a1 + 40);
  v39 = v23;
  v24 = *(_QWORD *)(a1 + 64);
  v40 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v25 = v19;
    v44(v19, 1);
    sub_1C290D288(v19, v18, v21, v20, v22, v38, v39, v40, v24, 1);
  }
  else
  {
    v26 = a4 + 104;
    v55[0] = 7;
    v54 = 39;
    v45 = 0;
    LOWORD(v46) = 0;
    v27 = v37;
    v28 = a5;
    v32 = a5;
    v29 = v35;
    v33 = a4;
    v30 = v36;
    sub_1C2C1FDAC(v26, (uint64_t)v55, v28, v35, v36, (uint64_t)&v54, 0, 1, v37, (uint64_t)&v45, (uint64_t)v19, v18, v41, v42, v32, v33, v34, v35, v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43);
    v45 = v19;
    v46 = v18;
    v47 = v21;
    v48 = v20;
    v49 = v22;
    v50 = v38;
    v51 = v39;
    v52 = v40;
    v53 = v24;
    v31 = type metadata accessor for NLContextUpdate();
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v31);
    sub_1C2B85E30(v29, v32, v30, v34, (uint64_t)&v45, v27, 0, (uint64_t)v17, (uint64_t)v44, v43, v41, v42, v32, v33, v34, v35, v36, v37, v38,
      v39,
      v40,
      v41,
      v42,
      v43);
    sub_1C28B9D6C((uint64_t)v17, &qword_1ED7A7A10);
  }
}

void sub_1C2B8F1B0(unint64_t a1, char a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5, const void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  __int128 v35;
  void (*v36)(id);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  void (*v43)(_QWORD, _QWORD);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 __dst[5];

  v45 = a7;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v20, v21);
  v23 = (char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for AceOutput();
  v26 = MEMORY[0x1E0C80A78](v24, v25);
  v28 = (char *)v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26, v29);
  v31 = (char *)v42 - v30;
  if ((a2 & 1) == 0)
  {
    v42[0] = a8;
    v42[1] = a5;
    v43 = a3;
    v44 = a4;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v38 = sub_1C2CFE820();
      sub_1C2B9161C((id)a1, 0, (void (*)(id))MEMORY[0x1E0DEEB08]);
      if (v38)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      memcpy(__dst, a6, 0x48uLL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a13 + 320))(a10, a12, a13);
      v32 = type metadata accessor for NLContextUpdate();
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 1, 1, v32);
      sub_1C2B88284((uint64_t)__dst);
      sub_1C28B9D6C((uint64_t)v23, &qword_1ED7A7A10);
LABEL_12:
      v39 = sub_1C2B0C6E8();
      *((_QWORD *)&__dst[1] + 1) = &type metadata for OutputPublishers;
      *(_QWORD *)&__dst[2] = &off_1E7C8D920;
      *(_QWORD *)&__dst[0] = v39;
      type metadata accessor for LegacySiriKitOutputPublisher();
      v40 = swift_allocObject();
      sub_1C28B99EC(__dst, v40 + 16);
      sub_1C299A0F4((uint64_t)v31, (uint64_t)v28);
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = v43;
      *(_QWORD *)(v41 + 24) = v44;
      sub_1C2CFD350();
      sub_1C2BED8D0((uint64_t)v28, (uint64_t)sub_1C2B92138, v41, v40);
      swift_release();
      sub_1C28E0610((uint64_t)v31);
      sub_1C28E0610((uint64_t)v28);
      swift_release();
      return;
    }
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2A4();
    sub_1C2CFD7AC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a13 + 320))(a10, a12, a13);
    sub_1C2B888C4();
    goto LABEL_12;
  }
  v33 = (id)a1;
  if (qword_1ED7AA038 != -1)
    swift_once();
  sub_1C2CFE2B0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1C2D002E0;
  *(_QWORD *)&__dst[0] = 0;
  *((_QWORD *)&__dst[0] + 1) = 0xE000000000000000;
  v46 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A8B60);
  sub_1C2CFE7C0();
  v35 = __dst[0];
  *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v34 + 64) = sub_1C28BFD30();
  *(_OWORD *)(v34 + 32) = v35;
  sub_1C2CFD7AC();
  swift_bridgeObjectRelease();
  v36 = (void (*)(id))MEMORY[0x1E0DEEB08];
  v37 = (id)a1;
  a3(a1, 1);
  sub_1C2B9161C((id)a1, 1, v36);
  sub_1C2B9161C((id)a1, 1, v36);
}

void sub_1C2B8F5EC(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  id v5;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    a3(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    a3(0, 0);
  }
}

void sub_1C2B8F650(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t AssociatedConformanceWitness;
  id v51;
  id v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  void (*v57)(void *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v66 = a6;
  v67 = a7;
  v73 = a3;
  v69 = a8;
  v70 = a14;
  v56 = a13;
  v57 = a2;
  v68 = a12;
  v55 = a11;
  v64 = a5;
  v65 = a9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness, v21);
  v23 = (char *)v54 - v22;
  v24 = *(void **)a1;
  v25 = *(_QWORD *)(a1 + 16);
  v26 = *(_QWORD *)(a1 + 24);
  v71 = *(_QWORD *)(a1 + 8);
  v72 = v26;
  v27 = *(_QWORD *)(a1 + 32);
  v59 = v25;
  v60 = v27;
  v28 = *(_QWORD *)(a1 + 48);
  v61 = *(_QWORD *)(a1 + 40);
  v62 = v28;
  v63 = *(_QWORD *)(a1 + 56);
  v58 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v29 = v24;
    v57(v24, 1);
    sub_1C290D288(v24, v71, v59, v72, v60, v61, v62, v63, v58, 1);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v23, a10, AssociatedTypeWitness);
    v30 = (*(unsigned __int8 *)(v19 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v31 = (v20 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    v54[1] = a4;
    v32 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    v54[0] = (v32 + 79) & 0xFFFFFFFFFFFFFFF8;
    v33 = (char *)swift_allocObject();
    *((_QWORD *)v33 + 2) = a15;
    *((_QWORD *)v33 + 3) = a16;
    v34 = v73;
    *((_QWORD *)v33 + 4) = v57;
    *((_QWORD *)v33 + 5) = v34;
    v35 = v66;
    *((_QWORD *)v33 + 6) = v64;
    *((_QWORD *)v33 + 7) = v35;
    v36 = v69;
    *((_QWORD *)v33 + 8) = v67;
    *((_QWORD *)v33 + 9) = v36;
    *((_QWORD *)v33 + 10) = v65;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v33[v30], v23, AssociatedTypeWitness);
    v37 = &v33[v31];
    v38 = v68;
    *(_QWORD *)v37 = v55;
    *((_QWORD *)v37 + 1) = v38;
    v39 = &v33[v32];
    v40 = v71;
    *(_QWORD *)v39 = v24;
    *((_QWORD *)v39 + 1) = v40;
    v41 = v59;
    v42 = v60;
    v43 = v72;
    *((_QWORD *)v39 + 2) = v59;
    *((_QWORD *)v39 + 3) = v43;
    v45 = v61;
    v44 = v62;
    *((_QWORD *)v39 + 4) = v42;
    *((_QWORD *)v39 + 5) = v45;
    v46 = v63;
    *((_QWORD *)v39 + 6) = v44;
    *((_QWORD *)v39 + 7) = v46;
    v47 = v58;
    *((_QWORD *)v39 + 8) = v58;
    v48 = &v33[v54[0]];
    v49 = v70;
    *(_QWORD *)v48 = v56;
    *((_QWORD *)v48 + 1) = v49;
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v57 = *(void (**)(void *, uint64_t))(AssociatedConformanceWitness + 192);
    sub_1C29E6C74(v24, v71, v41, v72, v42, v45, v44, v46, v47, 0);
    sub_1C2CFD350();
    sub_1C2CFD350();
    swift_unknownObjectRetain();
    sub_1C2CFD350();
    v51 = v69;
    v52 = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53 = swift_checkMetadataState();
    ((void (*)(void (*)(), char *, uint64_t, uint64_t))v57)(sub_1C2B90C44, v33, v53, AssociatedConformanceWitness);
    swift_release();
  }
}

void sub_1C2B8F9A0(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, const void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  void (*v68)(void *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  void *v75;
  const void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD v86[9];
  _BYTE __dst[72];

  v82 = (void *)a8;
  v81 = a7;
  v79 = a6;
  v80 = a5;
  v83 = a3;
  v84 = a4;
  v77 = a16;
  v78 = a15;
  v73 = a14;
  v71 = a13;
  v76 = a12;
  v72 = a11;
  v70 = a10;
  v69 = a9;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v18, v19);
  v74 = (unint64_t)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AceOutput();
  v23 = MEMORY[0x1E0C80A78](v21, v22);
  MEMORY[0x1E0C80A78](v23, v24);
  v27 = *(void **)a1;
  v85 = *(_QWORD *)(a1 + 8);
  v28 = *(_QWORD *)(a1 + 16);
  v29 = *(_QWORD *)(a1 + 24);
  v30 = *(_QWORD *)(a1 + 32);
  v31 = *(_QWORD *)(a1 + 40);
  v32 = *(_QWORD *)(a1 + 48);
  v33 = *(_QWORD *)(a1 + 56);
  v34 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v35 = v27;
    a2(v27, 1);
    sub_1C290D288(v27, v85, v28, v29, v30, v31, v32, v33, v34, 1);
  }
  else
  {
    v75 = v27;
    v67 = (uint64_t)&v63 - v25;
    v65 = v26;
    v68 = a2;
    v37 = v84[11];
    v36 = v84[12];
    v64 = v84 + 8;
    __swift_project_boxed_opaque_existential_1(v84 + 8, v37);
    v66 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C28F8E6C(v32, v33);
    swift_bridgeObjectRetain();
    if ((v66(v37, v36) & 1) != 0)
    {
      sub_1C290D288(v75, v85, v28, v29, v30, v31, v32, v33, v34, 0);
      v38 = (uint64_t)v76;
      memcpy(__dst, v76, sizeof(__dst));
      sub_1C290F6B8((uint64_t)v76);
      sub_1C2B86FF0(v80, v79, v81, (uint64_t)v82, v69, v70, v72, __dst, 0, (uint64_t)v68, v83, v78, v77);
      sub_1C290F9D0(v38);
    }
    else
    {
      v39 = v84[2];
      v40 = (uint64_t)v76;
      memcpy(__dst, v76, sizeof(__dst));
      v41 = v75;
      v86[0] = v75;
      v86[1] = v85;
      v86[2] = v28;
      v86[3] = v29;
      v86[4] = v30;
      v86[5] = v31;
      v86[6] = v32;
      v86[7] = v33;
      v86[8] = v34;
      v42 = v28;
      v63 = v28;
      v43 = v85;
      sub_1C29E6C74(v75, v85, v42, v29, v30, v31, v32, v33, v34, 0);
      sub_1C290F6B8(v40);
      static HandoffToCompanionAceCommands.buildAceCommands(viewFactory:handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:)(v39, (uint64_t)__dst, (uint64_t)v86, v71, v73, v64);
      v44 = v43;
      v45 = v63;
      sub_1C290D288(v41, v44, v63, v29, v30, v31, v32, v33, v34, 0);
      sub_1C290F9D0(v40);
      v46 = type metadata accessor for NLContextUpdate();
      v47 = v74;
      __swift_storeEnumTagSinglePayload(v74, 1, 1, v46);
      memset(__dst, 0, 40);
      v48 = v67;
      static AceOutputHelper.makeAceOutput(allAddViews:nlContextUpdate:additionalCommands:flowActivity:)(MEMORY[0x1E0DEE9D8]);
      swift_bridgeObjectRelease();
      sub_1C28B9D6C((uint64_t)__dst, (uint64_t *)&unk_1ED7A8750);
      sub_1C28B9D6C(v47, &qword_1ED7A7A10);
      v49 = sub_1C2B0C6E8();
      *(_QWORD *)&__dst[24] = &type metadata for OutputPublishers;
      *(_QWORD *)&__dst[32] = &off_1E7C8D920;
      *(_QWORD *)__dst = v49;
      type metadata accessor for LegacySiriKitOutputPublisher();
      v76 = (const void *)swift_allocObject();
      sub_1C28B99EC((__int128 *)__dst, (uint64_t)v76 + 16);
      v74 = v33;
      v50 = v65;
      sub_1C299A0F4(v48, v65);
      v51 = (_QWORD *)swift_allocObject();
      v52 = v45;
      v53 = (uint64_t)v51;
      v54 = v77;
      v51[2] = v78;
      v51[3] = v54;
      v55 = v79;
      v51[4] = v84;
      v51[5] = v55;
      v56 = v34;
      v57 = v81;
      v51[6] = v80;
      v51[7] = v57;
      v58 = v82;
      v59 = v75;
      v51[8] = v82;
      v51[9] = v59;
      v51[10] = v85;
      v51[11] = v52;
      v51[12] = v29;
      v51[13] = v30;
      v51[14] = v31;
      v51[15] = v32;
      v51[16] = v74;
      v51[17] = v56;
      v60 = v83;
      v51[18] = v68;
      v51[19] = v60;
      sub_1C2CFD350();
      sub_1C2CFD350();
      swift_unknownObjectRetain();
      v61 = v57;
      v62 = v58;
      sub_1C2CFD350();
      sub_1C2BED8D0(v50, (uint64_t)sub_1C2B90CC4, v53, (uint64_t)v76);
      swift_release();
      sub_1C28E0610(v67);
      sub_1C28E0610(v50);
      swift_release();
    }
  }
}

void sub_1C2B8FFD4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, void (*a9)(_QWORD, _QWORD), uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  void (*v31)(void *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  if ((a2 & 1) != 0)
  {
    v15 = a1;
    if (qword_1ED7AA038 != -1)
      swift_once();
    sub_1C2CFE2B0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8470);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C2D002E0;
    swift_getErrorValue();
    v17 = sub_1C2CFEA78();
    v19 = v18;
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 64) = sub_1C28BFD30();
    *(_QWORD *)(v16 + 32) = v17;
    *(_QWORD *)(v16 + 40) = v19;
    sub_1C2CFD7AC();
    swift_bridgeObjectRelease();
    HIWORD(v34) = 1609;
    LOWORD(v34) = 0;
    sub_1C2C1FDAC(a3 + 104, (uint64_t)&v34 + 7, a4, a5, a6, (uint64_t)&v34 + 6, 0, 1, a7, (uint64_t)&v33, *a8, a8[1], a11, a12, v21, a4, a7, a5, a6,
      (uint64_t)a9,
      a10,
      3,
      v34,
      v35,
      v36,
      v37);
    v20 = a1;
    v31(a1, 1);
    sub_1C2987570(a1, 1);
    sub_1C2987570(a1, 1);
  }
  else
  {
    HIWORD(v34) = 1865;
    LOWORD(v34) = 0;
    sub_1C2C1FDAC(a3 + 104, (uint64_t)&v34 + 7, a4, a5, a6, (uint64_t)&v34 + 6, 0, 1, a7, (uint64_t)&v33, *a8, a8[1], a11, a12, v21, v22, v24, v26, v28,
      v30,
      v32,
      1,
      v34,
      v35,
      v36,
      v37);
    a9(0, 0);
  }
}

void sub_1C2B901F4(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  id v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void *, uint64_t);
  uint64_t v65;
  _QWORD *v66;
  void *v67;
  _OWORD v68[2];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;

  v60 = a8;
  v62 = a7;
  v58 = a6;
  v59 = a5;
  v57 = a4;
  v63 = a3;
  v64 = a2;
  v56 = a9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  MEMORY[0x1E0C80A78](v12, v13);
  v61 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AceOutput();
  MEMORY[0x1E0C80A78](v15, v16);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void **)a1;
  v19 = *(_QWORD *)(a1 + 8);
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(_QWORD *)(a1 + 24);
  v23 = *(_QWORD *)(a1 + 32);
  v24 = *(_QWORD *)(a1 + 48);
  v25 = *(_QWORD *)(a1 + 56);
  v65 = *(_QWORD *)(a1 + 40);
  v66 = (_QWORD *)v24;
  v26 = *(_QWORD *)(a1 + 64);
  if (*(_BYTE *)(a1 + 72) == 1)
  {
    v27 = v20;
    v64(v20, 1);
    sub_1C290D288(v20, v19, v21, v22, v23, v65, (uint64_t)v66, v25, v26, 1);
    return;
  }
  v55 = (unint64_t *)v18;
  sub_1C28BF798(0, (unint64_t *)&qword_1EF79B6A0);
  v28 = v57;
  v57 = a10;
  v29 = v59;
  v58 = (void *)static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(v28, v59, v58);
  v70 = (uint64_t)v20;
  v71 = v19;
  v72 = v21;
  v73 = v22;
  v74 = v23;
  v75 = v65;
  v76 = (uint64_t)v66;
  v77 = v25;
  v78 = v26;
  (*(void (**)(void *, uint64_t, uint64_t))(a11 + 320))(v29, v57, a11);
  v30 = v62;
  v31 = (_QWORD *)(v62 + 64);
  v32 = type metadata accessor for NLContextUpdate();
  v33 = v61;
  __swift_storeEnumTagSinglePayload(v61, 1, 1, v32);
  v69 = 0;
  memset(v68, 0, sizeof(v68));
  v34 = MEMORY[0x1E0DEE9D8];
  v35 = v55;
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
  sub_1C28B9D6C((uint64_t)v68, (uint64_t *)&unk_1ED7A8750);
  sub_1C28B9D6C(v33, &qword_1ED7A7A10);
  v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D883A8]), sel_init);
  objc_msgSend(v36, sel_setCode_, *MEMORY[0x1E0D88FD8]);
  v37 = *v35;
  v70 = v34;
  v38 = v30;
  if (!(v37 >> 62))
  {
    v39 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v39)
      goto LABEL_5;
LABEL_18:
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EF787BB0);
    v43 = (void *)sub_1C2CFDF98();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setCommands_, v43);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7A8C80);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1C2D00370;
    *(_QWORD *)(v44 + 32) = v36;
    v70 = v44;
    sub_1C2CFDFC8();
    sub_1C28BF798(0, (unint64_t *)&unk_1EF79B6B0);
    v45 = v58;
    v46 = v36;
    v47 = (void *)sub_1C2CFDF98();
    swift_bridgeObjectRelease();
    objc_msgSend(v45, sel_setCallbacks_, v47);

    v48 = *(_QWORD **)(v56 + 40);
    if (v48[2])
    {
      v49 = v48[4];
      v50 = v48[5];
      v51 = *(_QWORD *)(v30 + 88);
      v52 = *(_QWORD *)(v30 + 96);
      v53 = __swift_project_boxed_opaque_existential_1(v31, *(_QWORD *)(v38 + 88));
      swift_bridgeObjectRetain();
      sub_1C2C134BC((uint64_t)v45, v49, v50, (uint64_t)v53, v51, v52);
    }
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain_n();
  v39 = sub_1C2CFE820();
  if (!v39)
    goto LABEL_18;
LABEL_5:
  if (v39 >= 1)
  {
    v66 = v31;
    for (i = 0; i != v39; ++i)
    {
      if ((v37 & 0xC000000000000001) != 0)
        v41 = (id)MEMORY[0x1C3BC9170](i, v37);
      else
        v41 = *(id *)(v37 + 8 * i + 32);
      v42 = v41;
      v67 = &unk_1EF7D3698;
      if (swift_dynamicCastObjCProtocolConditional())
      {
        MEMORY[0x1C3BC8A44]();
        if (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C2CFDFEC();
        sub_1C2CFE040();
        sub_1C2CFDFC8();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v31 = v66;
    goto LABEL_19;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_1C2B9077C()
{
  sub_1C2B85338();
  OUTLINED_FUNCTION_137_7();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RCHCommonResponseGenerator()
{
  return objc_opt_self();
}

#error "1C2B907D0: call analysis failed (funcsize=12)"

void sub_1C2B907E4()
{
  sub_1C2B85550();
}

void sub_1C2B90804()
{
  sub_1C2B856B0();
}

void sub_1C2B90824()
{
  sub_1C2B857EC();
}

void sub_1C2B90844()
{
  sub_1C2B858C8();
}

void sub_1C2B90864()
{
  sub_1C2B859B8();
}

uint64_t sub_1C2B90884()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_36_17();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_85_18();
  if (*(_QWORD *)(v0 + 144) >= 3uLL)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_179_5();
  OUTLINED_FUNCTION_139_11();
  return swift_deallocObject();
}

void sub_1C2B908DC()
{
  uint64_t v0;
  void (*v1)(void *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_130_10();
  sub_1C2B901F4(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_22_1();
}

uint64_t sub_1C2B90910()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v9;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = (((((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = v5;
  OUTLINED_FUNCTION_12_13();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v10);
  OUTLINED_FUNCTION_47_16();
  OUTLINED_FUNCTION_47_16();
  return swift_deallocObject();
}

void sub_1C2B90A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  void (*v5)(void *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  OUTLINED_FUNCTION_82_16();
  OUTLINED_FUNCTION_96_16();
  OUTLINED_FUNCTION_43_32();
  OUTLINED_FUNCTION_82_16();
  OUTLINED_FUNCTION_96_16();
  OUTLINED_FUNCTION_72_25();
  OUTLINED_FUNCTION_167_7();
  sub_1C2B8F650(a1, v5, v6, v7, v8, v9, v10, v11, v14, v13, v15, v12, *v4, v4[1], v3, v2);
}

uint64_t sub_1C2B90B60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  OUTLINED_FUNCTION_37_2();
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_36_28() - 8);
  v2 = (((*(_QWORD *)(v1 + 64)
        + ((*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_71_26();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_39_34();
  OUTLINED_FUNCTION_70_22();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_47_16();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v2 + 56) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_47_16();
  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_2_3();
}

void sub_1C2B90C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void *, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_97_19();
  OUTLINED_FUNCTION_33_38();
  OUTLINED_FUNCTION_96_16();
  OUTLINED_FUNCTION_72_25();
  OUTLINED_FUNCTION_44_30();
  OUTLINED_FUNCTION_167_7();
  sub_1C2B8F9A0(v0, v5, v6, v7, v8, v9, v10, v11, v13, v15, v12, v14, *(_QWORD *)(v1 + v4), *(_QWORD *)(v1 + v4 + 8), v2, v3);
}

void sub_1C2B90CC4()
{
  sub_1C2B91A24();
}

uint64_t sub_1C2B90CD0()
{
  char v0;

  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_180_4();
  if (v0)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_91_21();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_153_4();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C2B90D30()
{
  sub_1C2B910AC();
}

uint64_t sub_1C2B90D3C()
{
  OUTLINED_FUNCTION_36_28();
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_138_11();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_39_34();
  OUTLINED_FUNCTION_70_22();
  OUTLINED_FUNCTION_12_2();
  return swift_deallocObject();
}

void sub_1C2B90DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_97_19();
  OUTLINED_FUNCTION_33_38();
  OUTLINED_FUNCTION_44_30();
  sub_1C2B8EF68(v0, v5, v6, v7, v8, v9, v10, v11, v1 + v4, v2, v3);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_1C2B90E24()
{
  OUTLINED_FUNCTION_20_14();
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_86_18();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_39_34();
  swift_release();
  return swift_deallocObject();
}

void sub_1C2B90E60(void *a1, char a2)
{
  uint64_t v2;

  sub_1C2B8EE50(a1, a2 & 1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(void **)(v2 + 72), *(_BYTE *)(v2 + 80), *(_BYTE *)(v2 + 81), *(void (**)(void *, uint64_t))(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B90EA8(void *a1, char a2)
{
  uint64_t v2;

  sub_1C2B8F5EC(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1C2B90EC4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_138_11();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_39_34();
  OUTLINED_FUNCTION_70_22();

  return swift_deallocObject();
}

void sub_1C2B90F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  OUTLINED_FUNCTION_132_11();
  sub_1C2B8E3D4(v1, v2, v3, v4, v5, v6, v7, v8, v11, *(_BYTE *)(v0 + 96), *(_BYTE *)(v0 + 97), v9, v10);
  OUTLINED_FUNCTION_22_1();
}

uint64_t sub_1C2B90F38()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_36_28();
  OUTLINED_FUNCTION_38_41();
  v2 = (v1 + 15) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_71_26();
  OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_12_2();
  swift_release();

  return swift_deallocObject();
}

void sub_1C2B90FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_97_19();
  OUTLINED_FUNCTION_33_38();
  OUTLINED_FUNCTION_57_23();
  OUTLINED_FUNCTION_177_3();
  sub_1C2B8DAF4(v0, v7, v8, v9, v10, v11, v12, *(_QWORD *)(v1 + v4), *(_QWORD *)(v1 + v5), *(void **)(v1 + v6), v2, v3);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_1C2B91038()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_180_4();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_85_18();
  swift_unknownObjectRelease();

  OUTLINED_FUNCTION_153_4();
  swift_release();
  return swift_deallocObject();
}

void sub_1C2B910A0()
{
  sub_1C2B910AC();
}

void sub_1C2B910AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_75_26();
  v5(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_59_32();
}

void sub_1C2B910E0()
{
  sub_1C2B91C20();
}

uint64_t sub_1C2B910EC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_13();
  sub_1C29435E8(*(id *)(v0 + 48), *(_BYTE *)(v0 + 56));
  OUTLINED_FUNCTION_36_8();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_70_22();
  swift_release();
  return swift_deallocObject();
}

void sub_1C2B91130()
{
  uint64_t *v0;
  void (*v1)(void *, uint64_t);
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_130_10();
  sub_1C2B8E7A4(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_22_1();
}

id sub_1C2B91164(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_1C294B204(result, a2);
  return result;
}

void sub_1C2B9117C()
{
  sub_1C2B91C20();
}

void sub_1C2B9118C()
{
  sub_1C2B91C20();
}

void sub_1C2B9119C()
{
  sub_1C2B91A24();
}

uint64_t sub_1C2B911A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  OUTLINED_FUNCTION_37_2();
  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_180_4();
  if (v4)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_85_18();
  v5 = OUTLINED_FUNCTION_27_0();
  if (!OUTLINED_FUNCTION_3(v5))
  {
    OUTLINED_FUNCTION_129_9();
    OUTLINED_FUNCTION_128_8();
    OUTLINED_FUNCTION_134();
    OUTLINED_FUNCTION_127_12();
    OUTLINED_FUNCTION_126_13();
    OUTLINED_FUNCTION_25_0();
    OUTLINED_FUNCTION_124_10();
    OUTLINED_FUNCTION_123_12();
    OUTLINED_FUNCTION_122_12();
    OUTLINED_FUNCTION_121_11();
    OUTLINED_FUNCTION_120_13();
    OUTLINED_FUNCTION_119_11();
    OUTLINED_FUNCTION_118_12();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_115_15();
    OUTLINED_FUNCTION_114_15();
    OUTLINED_FUNCTION_113_12();
    OUTLINED_FUNCTION_112_10();
    OUTLINED_FUNCTION_111_15();
    OUTLINED_FUNCTION_110_13();
    if (*(_QWORD *)(v0 + v2 + 256))
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_109_11();
    }
    OUTLINED_FUNCTION_108_19();
    v6 = OUTLINED_FUNCTION_31_45();
    if (!OUTLINED_FUNCTION_60_1(v6))
      OUTLINED_FUNCTION_17_50();
    OUTLINED_FUNCTION_30_45();
  }
  v7 = (((((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();

  OUTLINED_FUNCTION_96();
  return OUTLINED_FUNCTION_2_3();
}

void sub_1C2B912F0()
{
  unint64_t v0;
  char v1;
  void (*v2)(unint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_98_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  OUTLINED_FUNCTION_96_16();
  OUTLINED_FUNCTION_42_33();
  v0 = OUTLINED_FUNCTION_107_13();
  sub_1C2B8CD18(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_89();
}

uint64_t sub_1C2B9135C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_2();
  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_71_26();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_39_34();
  OUTLINED_FUNCTION_70_22();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_85_18();
  if (*(_QWORD *)(v0 + 144) >= 3uLL)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_179_5();
  v3 = OUTLINED_FUNCTION_27_0();
  if (!OUTLINED_FUNCTION_3(v3))
  {
    OUTLINED_FUNCTION_129_9();
    OUTLINED_FUNCTION_128_8();
    OUTLINED_FUNCTION_134();
    OUTLINED_FUNCTION_127_12();
    OUTLINED_FUNCTION_126_13();
    OUTLINED_FUNCTION_25_0();
    OUTLINED_FUNCTION_124_10();
    OUTLINED_FUNCTION_123_12();
    OUTLINED_FUNCTION_122_12();
    OUTLINED_FUNCTION_121_11();
    OUTLINED_FUNCTION_120_13();
    OUTLINED_FUNCTION_119_11();
    OUTLINED_FUNCTION_118_12();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_115_15();
    OUTLINED_FUNCTION_114_15();
    OUTLINED_FUNCTION_113_12();
    OUTLINED_FUNCTION_112_10();
    OUTLINED_FUNCTION_111_15();
    OUTLINED_FUNCTION_110_13();
    if (*(_QWORD *)(v0 + v2 + 256))
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_109_11();
    }
    OUTLINED_FUNCTION_108_19();
    v4 = OUTLINED_FUNCTION_31_45();
    if (!OUTLINED_FUNCTION_60_1(v4))
      OUTLINED_FUNCTION_17_50();
    OUTLINED_FUNCTION_30_45();
  }
  OUTLINED_FUNCTION_106_11();
  return OUTLINED_FUNCTION_2_3();
}

void sub_1C2B91468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_97_19();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  OUTLINED_FUNCTION_160_6();
  OUTLINED_FUNCTION_44_30();
  sub_1C2B8D1F8(v0, v5, v6, v7, v8, v9, v10, v11, (const void *)(v1 + 88), v1 + v4, v2, v3);
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_1C2B914B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_2();
  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_19_1();
  if (*(_QWORD *)(v0 + 88) >= 3uLL)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_19();
  swift_release();
  v3 = OUTLINED_FUNCTION_27_0();
  if (!OUTLINED_FUNCTION_3(v3))
  {
    OUTLINED_FUNCTION_129_9();
    OUTLINED_FUNCTION_128_8();
    OUTLINED_FUNCTION_134();
    OUTLINED_FUNCTION_127_12();
    OUTLINED_FUNCTION_126_13();
    OUTLINED_FUNCTION_25_0();
    OUTLINED_FUNCTION_124_10();
    OUTLINED_FUNCTION_123_12();
    OUTLINED_FUNCTION_122_12();
    OUTLINED_FUNCTION_121_11();
    OUTLINED_FUNCTION_120_13();
    OUTLINED_FUNCTION_119_11();
    OUTLINED_FUNCTION_118_12();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_115_15();
    OUTLINED_FUNCTION_114_15();
    OUTLINED_FUNCTION_113_12();
    OUTLINED_FUNCTION_112_10();
    OUTLINED_FUNCTION_111_15();
    OUTLINED_FUNCTION_110_13();
    if (*(_QWORD *)(v0 + v2 + 256))
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_109_11();
    }
    OUTLINED_FUNCTION_108_19();
    v4 = OUTLINED_FUNCTION_31_45();
    if (!OUTLINED_FUNCTION_60_1(v4))
      OUTLINED_FUNCTION_17_50();
    OUTLINED_FUNCTION_30_45();
  }
  OUTLINED_FUNCTION_106_11();
  return OUTLINED_FUNCTION_2_3();
}

void sub_1C2B915C0(void *a1, char a2)
{
  uint64_t v2;
  char v4;

  v4 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  sub_1C2B8D50C(a1, v4, *(void (**)(void *, uint64_t))(v2 + 16));
}

void sub_1C2B9161C(id a1, char a2, void (*a3)(id))
{
  if ((a2 & 1) != 0)

  else
    a3(a1);
}

uint64_t sub_1C2B91628()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20_14();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_71_26();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_39_34();
  OUTLINED_FUNCTION_70_22();

  return swift_deallocObject();
}

void sub_1C2B91664()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void *, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_132_11();
  OUTLINED_FUNCTION_130_10();
  sub_1C2B8B1CC(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_22_1();
}

uint64_t sub_1C2B91684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  OUTLINED_FUNCTION_36_28();
  OUTLINED_FUNCTION_43_32();
  v5 = ((v4 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_20_14();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_12_2();
  swift_release();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v5 + 56) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_96();
  return swift_deallocObject();
}

void sub_1C2B91790()
{
  void *v0;
  char v1;
  uint64_t v2;
  void (*v3)(void *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_98_16();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_96_16();
  OUTLINED_FUNCTION_42_33();
  v0 = (void *)OUTLINED_FUNCTION_107_13();
  sub_1C2B8B5F8(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_89();
}

uint64_t sub_1C2B91820()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v0 + 128) >= 3uLL)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_91_21();
  swift_release();
  OUTLINED_FUNCTION_178_1();
  swift_release();
  return swift_deallocObject();
}

void sub_1C2B91898()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_147_4();
  sub_1C2B8B8B0(v1, v2, v3, v4, v5, v6, v7, v8, v0[18], v0[19], v0[20], v0[21], v9, v10);
  OUTLINED_FUNCTION_59_32();
}

id sub_1C2B918C8(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_1C2B918D4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C2B918F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_9_18();
  if (*(_QWORD *)(v0 + 96) >= 3uLL)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_18_6();
  swift_unknownObjectRelease();

  OUTLINED_FUNCTION_154_5();
  swift_release();
  OUTLINED_FUNCTION_179_5();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C2B91980(uint64_t a1)
{
  uint64_t v1;

  sub_1C2B8BC40(a1, *(_QWORD *)(v1 + 32), (__n128 *)(v1 + 40), *(_QWORD *)(v1 + 112), *(void **)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD **)(v1 + 136), *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160), *(uint64_t **)(v1 + 168), *(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  OUTLINED_FUNCTION_59_32();
}

uint64_t objectdestroy_8Tm_3()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20_14();
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_86_18();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v0 + 128) >= 3uLL)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_91_21();
  OUTLINED_FUNCTION_178_1();
  OUTLINED_FUNCTION_139_11();
  return swift_deallocObject();
}

void sub_1C2B91A18()
{
  sub_1C2B91A24();
}

void sub_1C2B91A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_147_4();
  v4(v0, v1, v2, v3);
  OUTLINED_FUNCTION_22_1();
}

uint64_t sub_1C2B91A58(uint64_t a1)
{
  sub_1C290D288(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  return a1;
}

uint64_t sub_1C2B91AA4()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1C2B91AB8(uint64_t a1)
{
  sub_1C299A5B0(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2B8AB5C);
}

uint64_t sub_1C2B91AC4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_71_26();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_39_34();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_28_9();
  if (*(_QWORD *)(v0 + 136) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C2B91B20()
{
  id v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_130_10();
  sub_1C2B8B134(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_22_1();
}

uint64_t sub_1C2B91B54()
{
  return objectdestroy_83Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t objectdestroy_83Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  OUTLINED_FUNCTION_12_13();
  a1(*(_QWORD *)(v2 + 48));
  a2(*(_QWORD *)(v2 + 56));
  OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_36_17();
  return swift_deallocObject();
}

void sub_1C2B91BB8(uint64_t a1)
{
  sub_1C299A5B0(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2B8A5AC);
}

uint64_t objectdestroy_35Tm()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_20_14();

  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_180_4();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_154_5();
  OUTLINED_FUNCTION_137_7();
  return swift_deallocObject();
}

void sub_1C2B91C14()
{
  sub_1C2B91C20();
}

void sub_1C2B91C20()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_75_26();
  v2(v0, v1);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B91C40()
{
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_86_18();
  OUTLINED_FUNCTION_138_11();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_39_34();
  return swift_deallocObject();
}

void sub_1C2B91C70(uint64_t a1)
{
  sub_1C299A5B0(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C2B89D74);
}

uint64_t sub_1C2B91C7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_86_18();
  OUTLINED_FUNCTION_138_11();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_18_6();
  if (*(_QWORD *)(v0 + 120) >= 3uLL)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_85_18();
  OUTLINED_FUNCTION_154_5();

  return swift_deallocObject();
}

void sub_1C2B91CD8(uint64_t a1)
{
  uint64_t v1;

  sub_1C2B8A000(a1, *(void (**)(void *, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), (const void *)(v1 + 64), *(_QWORD *)(v1 + 136), *(void **)(v1 + 144), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B91D08()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_8_14();
  if (*(_QWORD *)(v0 + 104) >= 3uLL)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_0();
  swift_release();
  swift_unknownObjectRelease();

  OUTLINED_FUNCTION_137_7();
  return swift_deallocObject();
}

void sub_1C2B91D60(void *a1, char a2)
{
  uint64_t v2;

  sub_1C2B8A238(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), (__n128 *)(v2 + 48), *(_QWORD **)(v2 + 120), *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B91D94()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C2B91DB8(uint64_t a1)
{
  uint64_t v1;

  sub_1C2B8A4EC(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1C2B91DC0()
{
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_86_18();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_36_17();
  swift_release();
  return swift_deallocObject();
}

void sub_1C2B91DF8()
{
  uint64_t v0;
  void (*v1)(void *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_44_30();
  sub_1C2B89680(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_80();
}

uint64_t sub_1C2B91E1C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_12_13();

  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v0 + 128) >= 3uLL)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_91_21();
  OUTLINED_FUNCTION_178_1();
  OUTLINED_FUNCTION_139_11();
  return swift_deallocObject();
}

void sub_1C2B91E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_130_10();
  sub_1C2B89934(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_22_1();
}

uint64_t sub_1C2B91EAC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_37_2();
  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_12_13();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_71_26();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_39_34();
  OUTLINED_FUNCTION_8_14();
  OUTLINED_FUNCTION_6_19();
  OUTLINED_FUNCTION_18_6();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_28_9();
  if (*(_QWORD *)(v0 + 136) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_153_4();
  v3 = OUTLINED_FUNCTION_27_0();
  if (!OUTLINED_FUNCTION_3(v3))
  {
    OUTLINED_FUNCTION_129_9();
    OUTLINED_FUNCTION_128_8();
    OUTLINED_FUNCTION_134();
    OUTLINED_FUNCTION_127_12();
    OUTLINED_FUNCTION_126_13();
    OUTLINED_FUNCTION_25_0();
    OUTLINED_FUNCTION_124_10();
    OUTLINED_FUNCTION_123_12();
    OUTLINED_FUNCTION_122_12();
    OUTLINED_FUNCTION_121_11();
    OUTLINED_FUNCTION_120_13();
    OUTLINED_FUNCTION_119_11();
    OUTLINED_FUNCTION_118_12();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_115_15();
    OUTLINED_FUNCTION_114_15();
    OUTLINED_FUNCTION_113_12();
    OUTLINED_FUNCTION_112_10();
    OUTLINED_FUNCTION_111_15();
    OUTLINED_FUNCTION_110_13();
    if (*(_QWORD *)(v0 + v2 + 256))
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_109_11();
    }
    OUTLINED_FUNCTION_108_19();
    v4 = OUTLINED_FUNCTION_31_45();
    if (!OUTLINED_FUNCTION_60_1(v4))
      OUTLINED_FUNCTION_17_50();
    OUTLINED_FUNCTION_30_45();
  }
  OUTLINED_FUNCTION_106_11();
  return OUTLINED_FUNCTION_2_3();
}

void sub_1C2B91FBC()
{
  void *v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_98_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7A7A10);
  OUTLINED_FUNCTION_160_6();
  sub_1C2B89CD4(v0, v2, v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], (uint64_t)(v1 + 10), v1[19], (uint64_t)v1 + v5, v3, v4);
  OUTLINED_FUNCTION_89();
}

uint64_t sub_1C2B92020()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20_14();

  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_36_8();
  return swift_deallocObject();
}

void sub_1C2B92050(uint64_t a1)
{
  uint64_t v1;

  sub_1C2B89328(a1, *(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(void *, uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1C2B92064()
{
  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_36_28();
  OUTLINED_FUNCTION_38_41();
  OUTLINED_FUNCTION_20_14();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_88_17();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_12_2();
  swift_release();
  return OUTLINED_FUNCTION_2_3();
}

void sub_1C2B920D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_97_19();
  OUTLINED_FUNCTION_33_38();
  OUTLINED_FUNCTION_57_23();
  OUTLINED_FUNCTION_177_3();
  sub_1C2B88CB4(v0, v5, v6, v7, v8, v9, v10, *(_QWORD *)(v1 + v4), *(_QWORD *)(v1 + v4 + 8), v2, v3);
  OUTLINED_FUNCTION_21_1();
}

uint64_t OUTLINED_FUNCTION_1_77()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 - 160) = v2;
  *(_QWORD *)(v4 - 152) = v1;
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 136) = v3;
  v5 = *(_QWORD *)(v4 - 248);
  *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 256);
  *(_QWORD *)(v4 - 120) = v5;
  v6 = *(_QWORD *)(v4 - 232);
  *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 240);
  *(_QWORD *)(v4 - 104) = v6;
  *(_QWORD *)(v4 - 96) = *(_QWORD *)(v4 - 224);
  return type metadata accessor for NLContextUpdate();
}

double OUTLINED_FUNCTION_3_82()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 - 176) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 208) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_78()
{
  return type metadata accessor for NLContextUpdate();
}

uint64_t OUTLINED_FUNCTION_6_65()
{
  return sub_1C2CFE9DC();
}

uint64_t OUTLINED_FUNCTION_7_82()
{
  uint64_t v0;

  return v0 - 160;
}

uint64_t OUTLINED_FUNCTION_17_50()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_20_64()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_23_58()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_45()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_31_45()
{
  return sub_1C2CFD710();
}

uint64_t OUTLINED_FUNCTION_33_38()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_39_34()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_47_30()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 176))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_65_22()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_71_26()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_76_25()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 176))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_80_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return static AceOutputHelper.makeAceOutput(allAddViews:nlContextUpdate:additionalCommands:flowActivity:)(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_85_18()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_86_18()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_89_19()
{
  return sub_1C2CFE4D8();
}

void OUTLINED_FUNCTION_90_15(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 - 160) = v7;
  *(_QWORD *)(v9 - 152) = v6;
  *(_QWORD *)(v9 - 144) = v5;
  *(_QWORD *)(v9 - 136) = v8;
  *(_QWORD *)(v9 - 128) = v4;
  *(_QWORD *)(v9 - 120) = v3;
  *(_QWORD *)(v9 - 112) = v2;
  *(_QWORD *)(v9 - 104) = v1;
  *(_QWORD *)(v9 - 96) = a1;
}

uint64_t OUTLINED_FUNCTION_91_21()
{
  return swift_bridgeObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_92_20(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v2;
  result[3] = v3;
  result[4] = *(_QWORD *)(v4 - 96);
  result[5] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_106_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_107_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_108_19()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_109_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_111_15()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_113_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_114_15()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_115_15()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_120_13()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_121_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_122_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_123_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_124_10()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_126_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_127_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_128_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_129_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_139_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_145_8()
{
  return sub_1C2B88660();
}

uint64_t OUTLINED_FUNCTION_146_7()
{
  return objc_opt_self();
}

uint64_t OUTLINED_FUNCTION_149_7()
{
  return sub_1C2CFE748();
}

void OUTLINED_FUNCTION_153_4()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_154_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_156_6(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  return sub_1C2CFDFC8();
}

void OUTLINED_FUNCTION_166_5()
{
  JUMPOUT(0x1C3BC9170);
}

uint64_t OUTLINED_FUNCTION_168_7()
{
  return swift_getAssociatedTypeWitness();
}

__n128 *OUTLINED_FUNCTION_169_6(__n128 *a1)
{
  uint64_t v1;

  return sub_1C299A4E4(a1, (__n128 *)(v1 - 120));
}

uint64_t OUTLINED_FUNCTION_170_4()
{
  uint64_t v0;

  return sub_1C290F6B8(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_173_3()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_174_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_1C2BED8D0(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_175_6()
{
  return type metadata accessor for LegacySiriKitOutputPublisher();
}

uint64_t OUTLINED_FUNCTION_178_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_179_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_180_4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

void OUTLINED_FUNCTION_182_3()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2048;
}

uint64_t sub_1C2B925B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v29[5];

  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a13 + 144))(a5, a6, a12, a13) & 1) != 0)
  {
    v18 = type metadata accessor for RCHDelegateToNeedsConfirmationWithCancellationFlowStrategyAdapter(0, a12, a13, v17);
    sub_1C28B9A04(a11, (uint64_t)v29);
    sub_1C2B95D6C();
    v29[0] = v19;
    MEMORY[0x1C3BC9CD4](&unk_1C2D182D0, v18);
    static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)();
  }
  else
  {
    v21 = type metadata accessor for RCHDelegateToNeedsConfirmationFlowStrategyAdapter(0, a12, a13, v17);
    sub_1C28B9A04(a11, (uint64_t)v29);
    sub_1C2B95D6C();
    v29[0] = v22;
    MEMORY[0x1C3BC9CD4](&unk_1C2D18308, v21);
    static RCHChildFlowFactoryHelper.makeNeedsConfirmationFlowProducer<A>(strategy:)();
  }
  v23 = v20;
  swift_unknownObjectRetain();
  swift_release();
  v23(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return swift_release();
}

void sub_1C2B92724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;

  sub_1C2B925B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, v9[4], (uint64_t)(v9 + 5), v9[2], v9[3]);
  OUTLINED_FUNCTION_59_32();
}

uint64_t sub_1C2B92758(uint64_t *a1, uint64_t a2, void *a3, void *a4, void *a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, uint64_t, void *, void *, void *, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t *, uint64_t, void *, void *, void *, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  __int128 v47[2];
  __int128 v48;
  uint64_t v49;
  __int128 v50[3];

  v21 = *a1;
  v22 = *(_QWORD *)(*a1 + 80);
  sub_1C2C73E68(a3, a5, a6, a4, (uint64_t)&v48);
  v45 = a4;
  if (v49)
  {
    sub_1C28B99EC(&v48, (uint64_t)v50);
    if (qword_1ED7AA040 != -1)
      swift_once();
    v23 = sub_1C2CFD878();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED7AA1B0);
    swift_bridgeObjectRetain_n();
    v24 = sub_1C2CFD86C();
    v25 = sub_1C2CFE2A4();
    if (os_log_type_enabled(v24, v25))
    {
      v43 = a8;
      v26 = (uint8_t *)swift_slowAlloc();
      v44 = a2;
      v27 = swift_slowAlloc();
      *(_QWORD *)&v48 = v27;
      *(_DWORD *)v26 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v47[0] = sub_1C28BB120((uint64_t)a5, a6, (uint64_t *)&v48);
      sub_1C2CFE4D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C28B6000, v24, v25, "Running UnsetRelationshipFlow for unsupported parameter name: %s", v26, 0xCu);
      swift_arrayDestroy();
      v28 = v27;
      a2 = v44;
      MEMORY[0x1C3BC9DE8](v28, -1, -1);
      v29 = v26;
      a8 = v43;
      MEMORY[0x1C3BC9DE8](v29, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v35 = type metadata accessor for ConfigToUnsupportedUnsetRelationshipFlowStrategyAdapter(0, v22, v30, v31);
    sub_1C28B9A04(a10, (uint64_t)&v48);
    sub_1C28B9A04((uint64_t)v50, (uint64_t)v47);
    sub_1C29E39A0(&v48, v47);
    *(_QWORD *)&v48 = v36;
    v37 = *(_QWORD *)(v21 + 88);
    v38 = MEMORY[0x1C3BC9CD4](&unk_1C2D05D84, v35);
    v39 = (void (*)(uint64_t *, uint64_t, void *, void *, void *, unint64_t, uint64_t, uint64_t, uint64_t))static RCHChildFlowFactoryHelper.makeUnsupportedUnsetRelationshipFlowProducer<A, B>(strategy:)(&v48, v35, v37, v38);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    swift_release();
  }
  else
  {
    sub_1C2B92C1C((uint64_t)&v48);
    (*(void (**)(__int128 *__return_ptr, uint64_t, void *, void *, unint64_t, void *, uint64_t, uint64_t))(a14 + 200))(&v48, a2, a3, a5, a6, a4, a13, a14);
    if ((_BYTE)v48)
    {
      if (v48 == 1)
      {
        v33 = type metadata accessor for RCHDelegateToUnsupportedValueFlowStrategyAdapter(0, a13, a14, v32);
        sub_1C28B9A04(a12, (uint64_t)v50);
        *(_QWORD *)&v50[0] = sub_1C2925CD4(a11, v50);
        MEMORY[0x1C3BC9CD4](&unk_1C2D188D0, v33);
        static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)();
      }
      else
      {
        v41 = type metadata accessor for RCHDelegateToUnsupportedValueFlowStrategyAdapter(0, a13, a14, v32);
        sub_1C28B9A04(a12, (uint64_t)v50);
        *(_QWORD *)&v50[0] = sub_1C2925CD4(a11, v50);
        MEMORY[0x1C3BC9CD4](&unk_1C2D188D0, v41);
        static RCHChildFlowFactoryHelper.makeUnsupportedValueAndPromptFlowProducer<A>(strategy:)();
      }
    }
    else
    {
      v40 = type metadata accessor for RCHDelegateToUnsupportedValueFlowStrategyAdapter(0, a13, a14, v32);
      sub_1C28B9A04(a12, (uint64_t)v50);
      *(_QWORD *)&v50[0] = sub_1C2925CD4(a11, v50);
      MEMORY[0x1C3BC9CD4](&unk_1C2D188D0, v40);
      static RCHChildFlowFactoryHelper.makeUnsupportedValuePunchOutFlowProducer<A>(strategy:)();
    }
    v39 = v34;
    swift_unknownObjectRetain();
    swift_release();
  }
  v39(a1, a2, a3, v45, a5, a6, a7, a8, a9);
  return swift_release();
}

